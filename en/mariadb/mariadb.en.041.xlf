<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="en" datatype="htmlbody" original="mariadb">
    <body>
      <group id="mariadb">
        <trans-unit id="f5e0dabcbdfa9626c9bae104bad169c2e09699ce" translate="yes" xml:space="preserve">
          <source>The following statement assigns indexes from the tables t1, t2, and t3 to the key cache named hot_cache:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b4403e76ee0c3a4755e8f725ee282d4170a9c1" translate="yes" xml:space="preserve">
          <source>The following statement deletes customer records with a customer key identification between 1001 and 1999:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa947ef6c6865c4e579a67c972cad0911123aec" translate="yes" xml:space="preserve">
          <source>The following statement drops the &lt;em&gt;orders&lt;/em&gt; table on the front end only:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9197af59c0677ec485f285e6fb3b39ea0cb8f351" translate="yes" xml:space="preserve">
          <source>The following statement drops the &lt;em&gt;sp_complex_variable&lt;/em&gt; procedure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbd210b45c5955c7f6a320b3bce2c21077ce9071" translate="yes" xml:space="preserve">
          <source>The following statement fails, as the increment conflicts with the defaults</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46adbb7d13862b3fa3213495248c2a58db46acdb" translate="yes" xml:space="preserve">
          <source>The following statement inserts a row with all column values into the &lt;em&gt;customer&lt;/em&gt; table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4ad48e0d722e21b9f432fefb35d648052d6284" translate="yes" xml:space="preserve">
          <source>The following statement inserts two rows with all column values into the &lt;em&gt;customer&lt;/em&gt; table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2bef2fbdee59d08a8ad2c282daf319d50389208" translate="yes" xml:space="preserve">
          <source>The following statement joins two tables: one is only used to satisfy a WHERE condition, but no row is deleted from it; rows from the other table are deleted, instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c0620dc5ff6f383bf102d299298e8bc58000f1" translate="yes" xml:space="preserve">
          <source>The following statement renames both the &lt;em&gt;orders&lt;/em&gt; table and &lt;em&gt;customer&lt;/em&gt; table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94fe48e75955ca1d72bb4a15be9dc2fd6bde3bf" translate="yes" xml:space="preserve">
          <source>The following statement returns 5 customer keys from the customer table beginning at offset 1000:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f863ae3adca1549800d339574c78a431eab6e6e" translate="yes" xml:space="preserve">
          <source>The following statement returns NULL, as the given &lt;code&gt;next_value&lt;/code&gt; and &lt;code&gt;round&lt;/code&gt; is smaller than the current value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e3ea59cbefa55c73802e32aab3972f3599a1e0" translate="yes" xml:space="preserve">
          <source>The following statement returns all the &lt;em&gt;p_name rows&lt;/em&gt; in the &lt;em&gt;part&lt;/em&gt; table and the &lt;em&gt;partno&lt;/em&gt; table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41230946244b931643d4608f5949108a8a8c3aa7" translate="yes" xml:space="preserve">
          <source>The following statement returns an ordered &lt;em&gt;shipmode&lt;/em&gt; column from the &lt;em&gt;lineitem&lt;/em&gt; table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2d60c516803a6f422e8d16d8d008daa8f5b65c" translate="yes" xml:space="preserve">
          <source>The following statements are not deterministic, but are considered safe for binary logging and replication:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ed40d62d60460dbe0f1580b6b1f99df875acfd" translate="yes" xml:space="preserve">
          <source>The following statements are regarded as unsafe:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349a47b4d904d804733f0b71ba49e08a0b3c5c27" translate="yes" xml:space="preserve">
          <source>The following statements create and call the sp_complex_variable stored procedure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7754b39214f1221b84a68e0740f3d74469fb9916" translate="yes" xml:space="preserve">
          <source>The following statements explicitly add conditions to the diagnostics area:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3807465049a91967f6da87decfd86435bedef0" translate="yes" xml:space="preserve">
          <source>The following statements read contents from the diagnostics area:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39636738cd71f03c7e125e91ecb92cb3c63627a0" translate="yes" xml:space="preserve">
          <source>The following status variables are useful in &lt;a href=&quot;../binary-log/index&quot;&gt;binary logging&lt;/a&gt; and &lt;a href=&quot;../replication/index&quot;&gt;replication&lt;/a&gt;. See &lt;a href=&quot;../server-status-variables/index&quot;&gt;Server Status Variables&lt;/a&gt; for a complete list of status variables that can be viewed with &lt;a href=&quot;../show-status/index&quot;&gt;SHOW STATUS&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e0364a0f4a32e8cd640e70c10de6b854c060e9" translate="yes" xml:space="preserve">
          <source>The following steps can be used to perform a rolling upgrade between minor versions of MariaDB (for example from &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-10312-release-notes/&quot;&gt;MariaDB 10.3.12&lt;/a&gt; to &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-10313-release-notes/&quot;&gt;MariaDB 10.3.13&lt;/a&gt;) when Galera Cluster is being used. In a rolling upgrade, each node is upgraded individually, so the cluster is always operational. There is no downtime from the application's perspective.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312250dfd1485b85d229b80251dff259c34d410a" translate="yes" xml:space="preserve">
          <source>The following steps can be used to perform a rolling upgrade from &lt;a href=&quot;../what-is-mariadb-101/index&quot;&gt;MariaDB 10.1&lt;/a&gt; to &lt;a href=&quot;../what-is-mariadb-102/index&quot;&gt;MariaDB 10.2&lt;/a&gt; when using Galera Cluster. In a rolling upgrade, each node is upgraded individually, so the cluster is always operational. There is no downtime from the application's perspective.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be7e347b9f09fe6ba81d4ce6ad3000b482faffa" translate="yes" xml:space="preserve">
          <source>The following steps can be used to perform a rolling upgrade from &lt;a href=&quot;../what-is-mariadb-102/index&quot;&gt;MariaDB 10.2&lt;/a&gt; to &lt;a href=&quot;../what-is-mariadb-103/index&quot;&gt;MariaDB 10.3&lt;/a&gt; when using Galera Cluster. In a rolling upgrade, each node is upgraded individually, so the cluster is always operational. There is no downtime from the application's perspective.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850ba0133997f192c79e427e3d5d8b4337a1812e" translate="yes" xml:space="preserve">
          <source>The following steps can be used to perform a rolling upgrade from &lt;a href=&quot;../what-is-mariadb-103/index&quot;&gt;MariaDB 10.3&lt;/a&gt; to &lt;a href=&quot;../what-is-mariadb-104/index&quot;&gt;MariaDB 10.4&lt;/a&gt; when using Galera Cluster. In a rolling upgrade, each node is upgraded individually, so the cluster is always operational. There is no downtime from the application's perspective.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d7a63054386420840c1fd63979143c1cadc6ac" translate="yes" xml:space="preserve">
          <source>The following steps can be used to perform a rolling upgrade from MariaDB Galera Cluster 10.0 to &lt;a href=&quot;../what-is-mariadb-101/index&quot;&gt;MariaDB 10.1&lt;/a&gt;. In a rolling upgrade, each node is upgraded individually, so the cluster is always operational. There is no downtime from the application's perspective.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cec44dfe06dd7996b87ee16b97f82f8e8932f9a" translate="yes" xml:space="preserve">
          <source>The following steps can be used to perform a rolling upgrade from MariaDB Galera Cluster 5.5 to MariaDB Galera Cluster 10.0. In a rolling upgrade, each node is upgraded individually, so the cluster is always operational. There is no downtime from the application's perspective.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc7a6dce904df8c6fa21da550efde85be767380" translate="yes" xml:space="preserve">
          <source>The following steps outline installing and configuring the MariaDB ColumnStoreExporter to be available in the Spark runtime:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aea72204b2595221a5d1f952ba9600ca9a2f9df" translate="yes" xml:space="preserve">
          <source>The following steps outline installing and configuring the MariaDB Java Connector to be available to the spark runtime:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c6f0e1c70590b8e9e20fab9316ef9382e4b9d2" translate="yes" xml:space="preserve">
          <source>The following steps would need to be done beforehand:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94d2551b101fd940906ea2bde6950ab415e0194" translate="yes" xml:space="preserve">
          <source>The following storage engines are no longer maintained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11fa9fee7cd381491a2378e274e632108636bddd" translate="yes" xml:space="preserve">
          <source>The following storage engines support export without &lt;code&gt;FLUSH TABLES ... FOR EXPORT&lt;/code&gt;, assuming the source server is down and the receiving server is not accessing the files during the copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84cac8cc47f3ae8c651c710062fd64b1fb1982c" translate="yes" xml:space="preserve">
          <source>The following syntax show the conditions you can use when executing a condition against two columns. Note that the columns must be from the same table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd4c2b78376f8ee594f75136dd6747282d66c10" translate="yes" xml:space="preserve">
          <source>The following syntax show the conditions you can use when executing a join on two tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae6168d2aa4fcd89e11e2c7725947a6b445e2b5" translate="yes" xml:space="preserve">
          <source>The following system variables can also be configured on Unix:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfeb968584d302ed9c1ae7b57cd0ba37a32aebdb" translate="yes" xml:space="preserve">
          <source>The following table describes the output from the running myisamchk with the &lt;em&gt;-dvv&lt;/em&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266d5cb0d329e920307f08725db71d37f0004465" translate="yes" xml:space="preserve">
          <source>The following table describes the output from the running myisamchk with the &lt;em&gt;-eiv&lt;/em&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a983d08369c2943ff04331285e2a28ccfa4a756d" translate="yes" xml:space="preserve">
          <source>The following table lists each version of the &lt;a href=&quot;../galera/index&quot;&gt;Galera&lt;/a&gt; 2 wsrep provider, and it lists which version of MariaDB each one was first released in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed6c07372c03e564908fbee3cc6cf064b641c60" translate="yes" xml:space="preserve">
          <source>The following table lists each version of the &lt;a href=&quot;../galera/index&quot;&gt;Galera&lt;/a&gt; 3 wsrep provider, and it lists which version of MariaDB each one was first released in. If you would like to install &lt;a href=&quot;../galera/index&quot;&gt;Galera&lt;/a&gt; 3 using &lt;a href=&quot;../yum/index&quot;&gt;yum&lt;/a&gt;, &lt;a href=&quot;../installing-mariadb-deb-files/index#installing-mariadb-with-apt&quot;&gt;apt&lt;/a&gt;, or &lt;a href=&quot;../installing-mariadb-with-zypper/index&quot;&gt;zypper&lt;/a&gt;, then the package is called &lt;code&gt;galera&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d4029906c6cb0651bf2c4d6889b189cc78d2b2" translate="yes" xml:space="preserve">
          <source>The following table lists each version of the &lt;a href=&quot;../galera/index&quot;&gt;Galera&lt;/a&gt; 4 wsrep provider, and it lists which version of MariaDB each one was first released in. If you would like to install &lt;a href=&quot;../galera/index&quot;&gt;Galera&lt;/a&gt; 4 using &lt;a href=&quot;../yum/index&quot;&gt;yum&lt;/a&gt;, &lt;a href=&quot;../installing-mariadb-deb-files/index#installing-mariadb-with-apt&quot;&gt;apt&lt;/a&gt;, or &lt;a href=&quot;../installing-mariadb-with-zypper/index&quot;&gt;zypper&lt;/a&gt;, then the package is called &lt;code&gt;galera-4&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80713e41b6a5a5964085773ac4586ab7c8fe944f" translate="yes" xml:space="preserve">
          <source>The following table lists the data definition statements (DDL) that differ from normal MariaDB &lt;a href=&quot;../data-definition/index&quot;&gt;DDL&lt;/a&gt; when used on ColumnStore tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf984db7763a78103e73c01d5fd9053292e2588f" translate="yes" xml:space="preserve">
          <source>The following table lists the privileges that can be granted at the database level. You can also grant all table and function privileges at the database level. Table and function privileges on a database apply to all tables or functions in that database, including those created later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c618ba56250436990b4b7bcff71ec86c2e59130a" translate="yes" xml:space="preserve">
          <source>The following table lists the privileges that can be granted globally. You can also grant all database, table, and function privileges globally. When granted globally, these privileges apply to all databases, tables, or functions, including those created later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67e0d4ee8c526189c3ef000182e0f91f909a2c2" translate="yes" xml:space="preserve">
          <source>The following table lists the various plugins included in MariaDB ordered by their maturity. Note that maturity will differ across MariaDB versions - see below for an easy way to get a complete list of plugins and their maturity in your version of MariaDB:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52bfd0821c97a83fdc7c7970a6ee595f802b91b5" translate="yes" xml:space="preserve">
          <source>The following table outlines the minimum recommended production server spec...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e02dd4bf7c321c9305ebb56262cbb4d5f809eee" translate="yes" xml:space="preserve">
          <source>The following table outlines the minimum recommended production server specifications which can be followed for both on premise and cloud deployments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a80cf20e0c2602fc814468d30267fb7e4755816b" translate="yes" xml:space="preserve">
          <source>The following table shows a list of example account as sorted by these criteria:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba91b0da9f8967eb4ff7003734bcbd4628bcfb8c" translate="yes" xml:space="preserve">
          <source>The following table shows how to represent the data in the binary format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0558fab99f678408008da0a018fe7b4f55e41909" translate="yes" xml:space="preserve">
          <source>The following table shows the default list of stopwords, although you should always treat &lt;code&gt;storage/myisam/ft_static.c&lt;/code&gt; as the definitive list. See the &lt;a href=&quot;../fulltext-index-overview/index&quot;&gt;Fulltext Index Overview&lt;/a&gt; for more details, and &lt;a href=&quot;../full-text-indexes/index&quot;&gt;Full-text-indexes&lt;/a&gt; for related articles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e59ca38f4c09f793c24324beccd4be0cdcb7187" translate="yes" xml:space="preserve">
          <source>The following table shows the type and size of all the properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43aefed96a12b8b4f53cfbec3c272ff1a68c107c" translate="yes" xml:space="preserve">
          <source>The following tables and data will be used in the examples that follow:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f98dc3074b6b1d2de5a34b0994a650c5144d58" translate="yes" xml:space="preserve">
          <source>The following tables comprise a database name &amp;lsquo;tpch2&amp;rsquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b8f9a0f97ad75b5c3ab56e711e8afaa8c94e02" translate="yes" xml:space="preserve">
          <source>The following tables indicate the approximate data storage requirements for each data type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9831a01f20c4fdfdfcaaccd19ebba84a18b8fdee" translate="yes" xml:space="preserve">
          <source>The following technique can be used for any combination of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8966822df71a36ee3a76151fc0de7ed932c3ab4e" translate="yes" xml:space="preserve">
          <source>The following theoretical file size and filesystem size limits apply to the three filesystems:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c145ebc13b3faddcbd91de65f825cb53773c3a69" translate="yes" xml:space="preserve">
          <source>The following triggers are invoked:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee6d5fcc41e8790b0cfe78ae26dbcc0e89d91e5" translate="yes" xml:space="preserve">
          <source>The following two articles should help you get your Solaris machine prepared to build MariaDB (just ignore the parts about installing buildbot):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a6f6202bf2a1ec19c224a4391b6194a1836f40" translate="yes" xml:space="preserve">
          <source>The following types can't be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="572a92d043acb9249a9a1da9a0a077946786b705" translate="yes" xml:space="preserve">
          <source>The following units are valid:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd858f5024be55dcd671b363a251a78fbd5fb81" translate="yes" xml:space="preserve">
          <source>The following variables are available when the &lt;a href=&quot;../spider/index&quot;&gt;Spider&lt;/a&gt; storage engine has been installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b439169753637a7e24f83138ec24612f5470b2" translate="yes" xml:space="preserve">
          <source>The following variables are only available in the &lt;code&gt;COMMENT&lt;/code&gt; clause of the &lt;a href=&quot;../create-table/index&quot;&gt;CREATE TABLE&lt;/a&gt; statement when the &lt;a href=&quot;../spider/index&quot;&gt;Spider&lt;/a&gt; storage engine has been installed. Global variables can be overloaded at the table level using the DSN parameter. These variables are listed on the &lt;a href=&quot;../spider-server-system-variables/index&quot;&gt;Spider System Variables&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82273fcb7a1556492fcdae0c303b28a92ac5b96b" translate="yes" xml:space="preserve">
          <source>The following variables are used with MariaDB's &lt;a href=&quot;../performance-schema/index&quot;&gt;Performance Schema&lt;/a&gt;. See &lt;a href=&quot;../mysqld-options/index#performance-schema-options&quot;&gt;Performance Schema Options&lt;/a&gt; for Performance Schema options that are not system variables. See &lt;a href=&quot;../server-system-variables/index&quot;&gt;Server System Variables&lt;/a&gt; for a complete list of system variables and instructions on setting them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d5936c83bcb23e465f04dd46123fdec2e0285b" translate="yes" xml:space="preserve">
          <source>The following variables can also be set by using &lt;em&gt;--var_name=value&lt;/em&gt;, for example &lt;em&gt;--ft_min_word_len=5&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7ecc1e15d39135466956d7b24c380642ee5f9d" translate="yes" xml:space="preserve">
          <source>The following variables can be set while passed as commandline options to &lt;code&gt;myisampack&lt;/code&gt;, or set with a &lt;code&gt;[myisampack]&lt;/code&gt; section in your &lt;a href=&quot;../configuring-mariadb-with-mycnf/index&quot;&gt;my.cnf&lt;/a&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4db22cf52b16fde495de7c44aa083be16e728f" translate="yes" xml:space="preserve">
          <source>The following variables can be set while passed as commandline options to aria_pack, or set in the [ariapack] section in your &lt;a href=&quot;../configuring-mariadb-with-mycnf/index&quot;&gt;my.cnf&lt;/a&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504dd0277ab3f114fc4c10a604b6564ac9a6797f" translate="yes" xml:space="preserve">
          <source>The following variables can be set while passed as commandline options to aria_read_log, or set in the &lt;code&gt;[aria_read_log]&lt;/code&gt; section in your &lt;a href=&quot;../configuring-mariadb-with-mycnf/index&quot;&gt;my.cnf&lt;/a&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec3e2e89e12443d49fd33c8e8aaa94f347c0467" translate="yes" xml:space="preserve">
          <source>The following variables in the &lt;em&gt;&lt;strong&gt;HashJoin&lt;/strong&gt;&lt;/em&gt; element in the Columnstore.xml configuration file relate to disk-based joins. Columnstore.xml resides in the etc directory for your installation(/usr/local/mariadb/columnstore/etc).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cba8f836ee8bbf050a4a1da4d4be4afaae13cb6" translate="yes" xml:space="preserve">
          <source>The following window functions are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c98f76fea91780862e4f22aebe37f2a05a14557" translate="yes" xml:space="preserve">
          <source>The foreign data source you are trying to reference does not exist. Data source error: %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c56a431bc87d9fea6ef54fb14a8c9c3599b873" translate="yes" xml:space="preserve">
          <source>The foreign data wrapper also supports writes, so you should be able to write to the remote MariaDB table to migrate your PostgreSQL data. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d773e15675d5820e8dfc01625142d80e0c6ca132" translate="yes" xml:space="preserve">
          <source>The foreign database reads the SQL statement and sends the result back through the mysql client API to the origin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbaadbc8fdf7c88b5f28c6be837ed22d3c2a5b7" translate="yes" xml:space="preserve">
          <source>The foreign key columns and the referenced columns must be of the same type, or similar types. For integer types, the size and sign must also be the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f151615f8b6df7fa702554913638fc391c8a9e9b" translate="yes" xml:space="preserve">
          <source>The foreign server name you are trying to reference does not exist. Data source error: %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16eba4e72c58217557b879acef416bab8617da77" translate="yes" xml:space="preserve">
          <source>The foreign server, %s, you are trying to create already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827084635dc70b219c5b1a4a69741d35459c1ba3" translate="yes" xml:space="preserve">
          <source>The format &amp;lsquo;*&amp;rsquo; indicates we want to see the Json documents. This small collection is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="137a128775d6d3c24b9504aa042d62c4cdf96219" translate="yes" xml:space="preserve">
          <source>The format &amp;lsquo;4&amp;rsquo; forces to write 4 decimals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8195df1a5a1c6f675a1e02e70db77b618dd9c0" translate="yes" xml:space="preserve">
          <source>The format for &lt;a href=&quot;../binary-log/index&quot;&gt;binary log&lt;/a&gt; events can be configured by setting the &lt;code&gt;&lt;a href=&quot;../replication-and-binary-log-server-system-variables/index#binlog_format&quot;&gt;binlog_format&lt;/a&gt;&lt;/code&gt; system variable. If you have the &lt;code&gt;&lt;a href=&quot;../grant/index#global-privileges&quot;&gt;SUPER&lt;/a&gt;&lt;/code&gt; privilege, then you can change it dynamically with &lt;code&gt;&lt;a href=&quot;../set/index#global-session&quot;&gt;SET GLOBAL&lt;/a&gt;&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2738a7bb7a28882976b90c73215b8ca8175dbc7" translate="yes" xml:space="preserve">
          <source>The format for storing &lt;a href=&quot;../identifier-names/index&quot;&gt;table names&lt;/a&gt; has changed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8281ca5e847cde910328b2897a783d1918bca355" translate="yes" xml:space="preserve">
          <source>The format indicating how a date is stored in the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224472d4d2cee6775a714bdfaedf82a78e79cfec" translate="yes" xml:space="preserve">
          <source>The format of the ODBC Connection String is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67145769d0a8d527d434f45157dc4cde03c036f9" translate="yes" xml:space="preserve">
          <source>The format of the realm depends on the specific authentication mechanism that is used. For example, the format would need to be &lt;code&gt;machine\\username&lt;/code&gt; for Windows users authenticating with NTLM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54106b88e2704d0d68ae1f3328b87979405c3b23" translate="yes" xml:space="preserve">
          <source>The format specification of the column value itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56124adb1b87c9547644c9ca88cf20f0c071eaad" translate="yes" xml:space="preserve">
          <source>The formatted &lt;code&gt;EXPLAIN&lt;/code&gt; will be shown. You can now click on various part to get more information about them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9669ce82e92cc5b6a77c857d7808e9a55c54273" translate="yes" xml:space="preserve">
          <source>The former depends on the query and the dataset. The latter is generally bigger when table records are on disk and/or are big, especially when they have &lt;a href=&quot;../blob/index&quot;&gt;blobs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9d05554d1edff8bbcecf02343f52543baf868c" translate="yes" xml:space="preserve">
          <source>The former example shows the difference between the &lt;code&gt;GROUP_CONCAT&lt;/code&gt;'s &lt;a href=&quot;../order-by/index&quot;&gt;ORDER BY&lt;/a&gt; (which sorts the concatenated hosts), and the &lt;code&gt;SELECT&lt;/code&gt;'s &lt;a href=&quot;../order-by/index&quot;&gt;ORDER BY&lt;/a&gt; (which sorts the rows).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a1910dc5bddc7ac3f93a60a5a7057499529142" translate="yes" xml:space="preserve">
          <source>The former is not advised for InnoDB. The latter is messy if you want an AUTO_INCREMENT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bec4ce70038fa92a3702b59812a47a10df9bbf2" translate="yes" xml:space="preserve">
          <source>The forms that use &lt;em&gt;&lt;code&gt;FROM&lt;/code&gt;&lt;/em&gt; are standard SQL syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4fa1f9995d415c56ca5d3f32ecd71d6eda0b86" translate="yes" xml:space="preserve">
          <source>The forms with a &lt;em&gt;&lt;code&gt;len&lt;/code&gt;&lt;/em&gt; argument return a substring &lt;em&gt;&lt;code&gt;len&lt;/code&gt;&lt;/em&gt; characters long from string &lt;em&gt;&lt;code&gt;str&lt;/code&gt;&lt;/em&gt;, starting at position &lt;em&gt;&lt;code&gt;pos&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929c207e49f6c1a544de8e8692fff3c3c04e5da7" translate="yes" xml:space="preserve">
          <source>The forms without a &lt;em&gt;&lt;code&gt;len&lt;/code&gt;&lt;/em&gt; argument return a substring from string &lt;em&gt;&lt;code&gt;str&lt;/code&gt;&lt;/em&gt; starting at position &lt;em&gt;&lt;code&gt;pos&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ca3c436923fb767d00d038bd1c5e130695ba7f" translate="yes" xml:space="preserve">
          <source>The formula is reasonably precise. It is usually within 1% of the correct value; rarely off by 2%.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1255fb579e56e355393b709adf9f05181c8508" translate="yes" xml:space="preserve">
          <source>The four main external table types &amp;ndash; odbc, jdbc, mongo and mysql &amp;ndash; are specified giving the following information:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4af0fcec447c06ad11a56ddc88e3d20305d7c93" translate="yes" xml:space="preserve">
          <source>The fourth number preserves temporal uniqueness in case the timestamp value loses monotonicity (for example, due to daylight saving time).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8324bc6c4e8314d7b0170f76fc5a4cebdd322538" translate="yes" xml:space="preserve">
          <source>The frequency of group commits can be changed by configuring the &lt;code&gt;&lt;a href=&quot;../replication-and-binary-log-system-variables/index#binlog_commit_wait_usec&quot;&gt;binlog_commit_wait_usec&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../replication-and-binary-log-system-variables/index#binlog_commit_wait_count&quot;&gt;binlog_commit_wait_count&lt;/a&gt;&lt;/code&gt; system variables, which were introduced in &lt;a href=&quot;../what-is-mariadb-100/index&quot;&gt;MariaDB 10.0&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90f037ca8ef3765964f90996e3ec43476f8d3ea" translate="yes" xml:space="preserve">
          <source>The frm image that was returned by &lt;code&gt;read_frm_image()&lt;/code&gt; must be freed with the &lt;strong&gt;free_frm_image()&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8710aa19153ec3c2c56a39c431cf901fd1cf6391" translate="yes" xml:space="preserve">
          <source>The fstab file must be set up (/etc/fstab). These entries would need to be added to each PM pointing to the all the dbroot(s) being used on all PMs. The 'noauto' option indicates that all dbroots will be associated to every PM but will not be automatically mounted at server startup. The associated dbroots that are assigned to each PM will be specifically mounted to that PM at Columnstore startup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8495ea9d292b37a8a2355b502f028ec03249659" translate="yes" xml:space="preserve">
          <source>The fstab file on all Performance Modules must include all of the external mounts, all with the 'noauto' option specified. ColumnStore will manage the mounting and unmounting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100c8e72bfb3bff4e61bdfee6f84c44ffa3dbf60" translate="yes" xml:space="preserve">
          <source>The full current date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34be87b78afded9d5a7b8cbedc21d0dc2fd041f" translate="yes" xml:space="preserve">
          <source>The full fingerprint of the new key is: &lt;code&gt;177F 4010 FE56 CA33 3630 0305 F165 6F24 C74C D1D8&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35d104ecc9e7915515aa423469b240730aefa72" translate="yes" xml:space="preserve">
          <source>The full format of &quot;&lt;code&gt;ip=&lt;/code&gt;&quot; is: &quot;&lt;code&gt;ip=[interface]:[IP_address]:[netmask]:[gateway]&lt;/code&gt;&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865e192fe54ea1c3b3438586f598ca9ca1fd3240" translate="yes" xml:space="preserve">
          <source>The full list of options are listed below. One or more MyISAM tables can be specified. MyISAM tables have an associated .MYI index file, and the table name can either be specified with or without the .MYI extension. Referencing it with the extension allows you to use wildcards, so it's possible to run myisamchk on &lt;em&gt;all&lt;/em&gt; the MyISAM tables in the database with &lt;code&gt;*.MYI&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ecc17669fb64bc437c4d68ea8a8a72d5920b7e7" translate="yes" xml:space="preserve">
          <source>The full list of server variables are listed in the contents on this page, and most are described on this page, but some are described elsewhere:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4495fa844ae9e2d2aaead81fdad104832311e746" translate="yes" xml:space="preserve">
          <source>The full list of status variables are listed in the contents on this page; most are described on this page, but some are described elsewhere:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0f493d835d5e056fd07d5b4bdf295341ae4b55" translate="yes" xml:space="preserve">
          <source>The full month name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="018712c558a914f0dfc89aa0470a5b4f3797da35" translate="yes" xml:space="preserve">
          <source>The full path and filename for the extent file, multiple extents for the same column can point to this file with different BLOCK_OFFSETs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4128cdcdbd2fb025a38113580789b8a118a1f371" translate="yes" xml:space="preserve">
          <source>The full script to create the release in an out-of-source build with Visual Studio with signed binaries might look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e3c8f0ba87c8e1c74b620e43fcea6ae09060be" translate="yes" xml:space="preserve">
          <source>The full syntax is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51466328b798d6a78784f34893285f445b7ad01" translate="yes" xml:space="preserve">
          <source>The full syntax is like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7684fc43b0cdcc7ae8d199296dd367f71ffaf533" translate="yes" xml:space="preserve">
          <source>The full weekday name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c860a9082dcd30ead7fb60355e3b765f86d80464" translate="yes" xml:space="preserve">
          <source>The full year (that is, 1996 could be entered as &quot;96&quot; but displayed as &amp;ldquo;1996&amp;rdquo;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14175f0051299b8228a44e3d8c4312ad974a9b75" translate="yes" xml:space="preserve">
          <source>The fulltext index is then only reorganized when an &lt;a href=&quot;../optimize-table/index&quot;&gt;OPTIMIZE TABLE&lt;/a&gt; statement is underway. The related &lt;a href=&quot;../information-schema-innodb_ft_being_deleted-table/index&quot;&gt;INNODB_FT_BEING_DELETED&lt;/a&gt; table contains rows being deleted while an &lt;code&gt;OPTIMIZE TABLE&lt;/code&gt; is in the process of running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7620aafb1a5d7aa4b601b7c6b2bd0c0502fa2840" translate="yes" xml:space="preserve">
          <source>The fulltext index will be &lt;code&gt;2&lt;/code&gt;. The primary key is index &lt;code&gt;0&lt;/code&gt;, and the unique key index &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93de7c15aa38587a3e80e0032a378274462ccf69" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;now()&lt;/code&gt; will be executed by MariaDB and it returned value sent to the ODBC table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6aca330e35c9ecc222b9dc74d4b029901a086ad" translate="yes" xml:space="preserve">
          <source>The function &lt;em&gt;JsonGet_Real&lt;/em&gt; can be given a third argument to specify the number of decimal digits of the returned value. For instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972c0f4f15f087d5bc3b5f4896ce577d35a4f40b" translate="yes" xml:space="preserve">
          <source>The function &lt;em&gt;mcs_add&lt;/em&gt; can then be used. Verify that it can be used both in the select list and where clause for correct installation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31288f623ce7967cac5350fc4f9ae158404ac377" translate="yes" xml:space="preserve">
          <source>The function follows the case sensitivity rules of the effective &lt;a href=&quot;../data-types-character-sets-and-collations/index&quot;&gt;collation&lt;/a&gt;. Matching is performed case insensitively for case insensitive collations, and case sensitively for case sensitive collations and for binary data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d34c8e9613d8f53518466ba95f3aaacb6dac5b" translate="yes" xml:space="preserve">
          <source>The function highlights the specified keywords in the target text by surrounding each keyword with &lt;code&gt;&amp;lt;span class=&quot;keyword&quot;&amp;gt;...&amp;lt;/span&amp;gt;&lt;/code&gt;, and escaping special HTML characters such as &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6852e0a5cf62dad97db2b009b26e7292865ae919" translate="yes" xml:space="preserve">
          <source>The function is not designed for use with dates before the advent of the Gregorian calendar in October 1582. Results will not be reliable since it doesn't account for the lost days when the calendar changed from the Julian calendar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c47319ae8cb97433706ea3e20f314c8f566e8f" translate="yes" xml:space="preserve">
          <source>The function name and class must be registered in order to be recognized and used by the ColumnStore primitive processor. This is done by adding a line to perform the registration in the &lt;em&gt;UDFSDK::UDFMap()&lt;/em&gt; function in the file &lt;strong&gt;udfsdk.cpp&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b770fa4a617544b5f6ddc8071af0dce3141735b" translate="yes" xml:space="preserve">
          <source>The function name must be '&lt;code&gt;sphinx_snippets&lt;/code&gt;', you can not use an arbitrary name. Function arguments are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1c94bc68168cb3a34603350f0a6b276302cd22" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;1&lt;/code&gt; if the SQL executes successfully, or &lt;code&gt;0&lt;/code&gt; if it fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca730c4259d33ac5da4fae177ce4dac5ff009fc1" translate="yes" xml:space="preserve">
          <source>The function returns YES/NO or Error code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ef3389a83650b766bc56c94623ddb0b9c2bb61" translate="yes" xml:space="preserve">
          <source>The function returns a list of partitions whose minimum and maximum values for the column 'col_name' fall completely within the range of 'start_value' and 'end_value'. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aec6ef43167f08e3fce4bdae3032d577bc40978" translate="yes" xml:space="preserve">
          <source>The function returns a pointer to a string of characters, as entered by the user. It may be stored in &lt;code&gt;buf&lt;/code&gt; or allocated with &lt;code&gt;malloc()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e911cfd5f3fbfe1f052ffaa063943cb8b0fe46c" translate="yes" xml:space="preserve">
          <source>The function returns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55c8ecdcdf21d5430ad9bb97db4362af7114c73" translate="yes" xml:space="preserve">
          <source>The function takes the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c802523654614c7658d3013b30da9ba3c31a7b0" translate="yes" xml:space="preserve">
          <source>The function that created (or tried to create) a table (temporary or non-temporary) has just ended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b1f0872c002be62d819ca954d1fc9204fab43d" translate="yes" xml:space="preserve">
          <source>The function will find the nearest items, up to Limit that meet the Condition. But it will give up at Max distance. (If you are at the South Pole, why bother searching very far for the tenth pizza parlor?)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7321a8ab9f21516ff480eb6ae9235895dda8a068" translate="yes" xml:space="preserve">
          <source>The functionality of &lt;code&gt;mysql_install_db.exe&lt;/code&gt; is comparable with the shell script &lt;code&gt;mysql_install_db&lt;/code&gt; used on Unix, however it has been extended with both Windows specific functionality (creating a Windows service) and to generally useful functionality. For example, it can set the 'root' user password during database creation. It also creates the &lt;code&gt;my.ini&lt;/code&gt; configuration file in the data directory and adds most important parameters to it (e.g port).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d0ca3e2a67a8a2510ef97d9788afa41ddbb30f" translate="yes" xml:space="preserve">
          <source>The functions described in &lt;a href=&quot;../creating-user-defined-functions/index&quot;&gt;Creating User-defined Functions&lt;/a&gt; are expanded on this page. They are declared as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b0c3a91e416c783f51719091c9f775f262c05e" translate="yes" xml:space="preserve">
          <source>The gap can be a single index value, multiple index values, or not exist at all depending on the contents of the index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853b9dfbe821ae3a5ce731dcc73a8c26469ac98a" translate="yes" xml:space="preserve">
          <source>The general idea behind the &lt;code&gt;FirstMatch&lt;/code&gt; strategy is the same as the one behind the &lt;code&gt;IN-&amp;gt;EXISTS&lt;/code&gt; transformation, however, &lt;code&gt;FirstMatch&lt;/code&gt; has several advantages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd6702b52975aae002fee6afcde50c44b14f8c1" translate="yes" xml:space="preserve">
          <source>The general log will be written into the &lt;a href=&quot;../mysqlgeneral_log-table/index&quot;&gt;general_log&lt;/a&gt; table, and the slow query log will be written into the &lt;a href=&quot;../mysqlslow_log-table/index&quot;&gt;slow_log&lt;/a&gt; table. Only a limited set of operations are supported for those special tables. For example, direct DML statements (like &lt;code&gt;INSERT&lt;/code&gt;) on those tables will fail with an error similar to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6af7f978e150f0580aee4b208eca50a85eb0950" translate="yes" xml:space="preserve">
          <source>The general query log and the slow query log can be written into system tables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adcbf583dee246a94c3fa4290266c31564e43a84" translate="yes" xml:space="preserve">
          <source>The general query log can either be written to a file on disk, or it can be written to the &lt;code&gt;&lt;a href=&quot;../mysqlgeneral_log-table/index&quot;&gt;general_log&lt;/a&gt;&lt;/code&gt; table in the &lt;code&gt;&lt;a href=&quot;../the-mysql-database-tables/index&quot;&gt;mysql&lt;/a&gt;&lt;/code&gt; database. To choose the general query log output destination, set the &lt;code&gt;&lt;a href=&quot;../server-system-variables/index#log_output&quot;&gt;log_output&lt;/a&gt;&lt;/code&gt; system variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cfa424ac37b52306a2a4315ec25db1f17b75c7d" translate="yes" xml:space="preserve">
          <source>The general query log can either be written to the &lt;code&gt;&lt;a href=&quot;../mysqlgeneral_log-table/index&quot;&gt;general_log&lt;/a&gt;&lt;/code&gt; table in the &lt;code&gt;&lt;a href=&quot;../the-mysql-database-tables/index&quot;&gt;mysql&lt;/a&gt;&lt;/code&gt; database by setting the &lt;code&gt;&lt;a href=&quot;../server-system-variables/index#log_output&quot;&gt;log_output&lt;/a&gt;&lt;/code&gt; system variable to &lt;code&gt;TABLE&lt;/code&gt;. It can be changed dynamically with &lt;code&gt;&lt;a href=&quot;../set/index#global-session&quot;&gt;SET GLOBAL&lt;/a&gt;&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0babeafa62df4415ade4223b083785b2be90cf" translate="yes" xml:space="preserve">
          <source>The general query log is a log of every SQL query received from a client, as well as each client connect and disconnect. Since it's a record of every query received by the server, it can grow large quite quickly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f176c0033b5d24dd912b192bb7d7f307ac4fbfb" translate="yes" xml:space="preserve">
          <source>The general query log is disabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed143e4d5b562da8ab9ddd21b3abb41ced504c1c" translate="yes" xml:space="preserve">
          <source>The general query log is output to a file by default. However, it can be explicitly chosen by setting the &lt;code&gt;&lt;a href=&quot;../server-system-variables/index#log_output&quot;&gt;log_output&lt;/a&gt;&lt;/code&gt; system variable to &lt;code&gt;FILE&lt;/code&gt;. It can be changed dynamically with &lt;code&gt;&lt;a href=&quot;../set/index#global-session&quot;&gt;SET GLOBAL&lt;/a&gt;&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc93b0ef6019f452aebca613c58030ef1a490ab" translate="yes" xml:space="preserve">
          <source>The general steps for compiling MariaDB are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bab0d4f17439d374021f74ec94560db725346fb" translate="yes" xml:space="preserve">
          <source>The generated data population script that can immediately be executed against a database, saved for the future use or edited in the internal editor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593c9dc021f4f4ff99f0c6503dc744be74243282" translate="yes" xml:space="preserve">
          <source>The given path can specify all operators for arrays except the &amp;ldquo;expand&amp;rdquo; [X] operator (or from &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-1028-release-notes/&quot;&gt;MariaDB 10.2.8&lt;/a&gt;, the&amp;ldquo;expand&amp;rdquo; [*] operator). For instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679bf6927eae57507d0a2cac5f5b98aec84d2229" translate="yes" xml:space="preserve">
          <source>The given path is synonymous with the Windows syntax for accessing the physical drive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39d850746dfee22a75eaf68eac449aa5afd8124b" translate="yes" xml:space="preserve">
          <source>The global server time zone can also be changed dynamically by setting the &lt;code&gt;&lt;a href=&quot;../server-system-variables/index#time_zone&quot;&gt;time_zone&lt;/a&gt;&lt;/code&gt; system variable as a user account that has the &lt;code&gt;&lt;a href=&quot;../grant/index#global-privileges&quot;&gt;SUPER&lt;/a&gt;&lt;/code&gt; privilege. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823479356975e2cbde10b52e2e895961fc643133" translate="yes" xml:space="preserve">
          <source>The global server time zone can be changed at server startup by setting the &lt;code&gt;--default-time-zone&lt;/code&gt; option either on the command-line or in a server &lt;a href=&quot;../configuring-mariadb-with-option-files/index#option-groups&quot;&gt;option group&lt;/a&gt; in an &lt;a href=&quot;../configuring-mariadb-with-option-files/index&quot;&gt;option file&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b4108652bef58ab77f46e2fe2fcc43f7757987" translate="yes" xml:space="preserve">
          <source>The goal is to look only at records &quot;close&quot;, in both directions, to the target lat/lng.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9877ef466c7245cc092978d658c99813ea25a22" translate="yes" xml:space="preserve">
          <source>The goal is to touch only the relevant rows, not all the rows leading up to the desired rows. This is nicely achieved, except for building links to the &quot;next 5 pages&quot;. That may (or may not) be efficiently resolved by the simple SELECT id, discussed above. The reason that may not be efficient deals with the WHERE clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29706205bd9bb1108ed53abbe0283d7d733a4df2" translate="yes" xml:space="preserve">
          <source>The goal of the subquery cache is to optimize the evaluation of correlated subqueries by storing results together with correlation parameters in a cache and avoiding re-execution of the subquery in cases where the result is already in the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54273b9b6a4f4252db136447abe7386d7f9f0fbf" translate="yes" xml:space="preserve">
          <source>The granted privilege.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c705c34b812bd840b03cb4a3e48fa89198d128cd" translate="yes" xml:space="preserve">
          <source>The gssapi authentication plugin uses the GSSAPI interface to authenticate with Kerberos or NTLM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8520531bfefad3c817efdd7999eefd63e28dbb97" translate="yes" xml:space="preserve">
          <source>The gtid-list may be the empty string, in which case MASTER_GTID_WAIT() returns immediately. If the gtid-list contains fewer domains than &lt;a href=&quot;../global-transaction-id/index#gtid_slave_pos&quot;&gt;gtid_slave_pos&lt;/a&gt;, then only those domains are waited upon. If gtid-list contains a domain that is not present in @@gtid_slave_pos, then MASTER_GTID_WAIT() will wait until an event containing such domain_id arrives on the slave (or until timed out or killed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be576e6a70414609452185c34ddc8fa7393a2aa2" translate="yes" xml:space="preserve">
          <source>The gtid_binlog_pos variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a0e2f6affbc859dd404aaaf8659050f5edfecc" translate="yes" xml:space="preserve">
          <source>The handler doesn't support autoextend of tablespaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93a46a776c6951344a9852afac0478942b1ac7b" translate="yes" xml:space="preserve">
          <source>The handlers in effect at any point is part of each thread's runtime state, so we need to push and pop handlers in the sp_rcontext during execution. We use special instructions for this: - sp_instr_hpush_jump Push a handler. The instruction contains the necessary information, like which conditions we handle and the location of the handler. The jump takes us to the location after the handler code. - sp_instr_hpop Pop the handlers of the current frame (which we are just leaving).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba8dcf2d0c8a7d3ee9256335c7cd2a0e486d215" translate="yes" xml:space="preserve">
          <source>The have sets the &lt;code&gt;replicate_do_db&lt;/code&gt; variable to &lt;code&gt;main_database&lt;/code&gt; for the connection named &lt;code&gt;main_connection&lt;/code&gt;. All other connections will use the value &lt;code&gt;other_database&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92160fca253065695eb2d419c210b4bb99df6fa" translate="yes" xml:space="preserve">
          <source>The header File &lt;code&gt;my_global.h&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4573fffce1326a09bfa4252ff1b94557bfe810e9" translate="yes" xml:space="preserve">
          <source>The header File tabfic.h:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62796483408eaf22d3938f54e3e3548969d8a435" translate="yes" xml:space="preserve">
          <source>The header is at the beginning of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac0faa8cf3e7b9a80ec4d9892682d972c85e618" translate="yes" xml:space="preserve">
          <source>The header is at the end of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c1d96ca7b68b31d6b7355fa4d28f8433ee3799" translate="yes" xml:space="preserve">
          <source>The header is in a separate file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d26f02917e9117dbfcc9a0761334e329b4795bd" translate="yes" xml:space="preserve">
          <source>The help command displays supported commands. You can view brief help definitions or verbose definitions. You can also enter partial command names with the help command to view verbose definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53096435824119e85c3327a436e8f5a6e6e68d35" translate="yes" xml:space="preserve">
          <source>The help is provided with the MariaDB server and makes use of four help tables found in the &lt;code&gt;mysql&lt;/code&gt; database: &lt;a href=&quot;../mysqlhelp_relation-table/index&quot;&gt;help_relation&lt;/a&gt;, &lt;a href=&quot;../mysqlhelp_topic-table/index&quot;&gt;help_topic&lt;/a&gt;, &lt;a href=&quot;../mysqlhelp_category-table/index&quot;&gt;help_category&lt;/a&gt; and &lt;a href=&quot;../mysqlhelp_keyword-table/index&quot;&gt;help_keyword&lt;/a&gt;. These tables are populated by the &lt;code&gt;mysql_install_db&lt;/code&gt; or &lt;code&gt;fill_help_table.sql&lt;/code&gt; scripts which, until &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-1047-release-notes/&quot;&gt;MariaDB 10.4.7&lt;/a&gt;, contain data generated from an old version of MySQL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f1ea3ee6728cc805435d24d73ad990905bae65" translate="yes" xml:space="preserve">
          <source>The high level components of the ColumnStore architecture are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a980280657dfe88f8a27bb1505f69c2c6444535f" translate="yes" xml:space="preserve">
          <source>The high level steps involved in performing a full backup of MariaDB ColumnStore are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51138ac8229cfc1d7ad75a54f380547f0bf1975" translate="yes" xml:space="preserve">
          <source>The high level steps involved in restoring a backup are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37cc66c44e69c2207f271452c8c986cc30b0b105" translate="yes" xml:space="preserve">
          <source>The high priority queue gets the remaining 11 threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0041bdc5ffd5ad6d87ef1f3ce9d9c6ca192cf6d6" translate="yes" xml:space="preserve">
          <source>The history of FederatedX is derived from the History of Federated. Cisco needed a MySQL storage engine that would allow them to consolidate remote tables on some sort of routing device, being able to interact with these remote tables as if they were local to the device, but not actually on the device, since the routing device had only so much storage space. The first prototype of the Federated Storage Engine was developed by JD (need to check on this- Brian Aker can verify) using the HANDLER interface. Brian handed the code to Patrick Galbraith and explained how it needed to work, and with Brian and Monty's tutelage and Patrick had a working Federated Storage Engine with MySQL 5.0. Eventually, Federated was released to the public in a MySQL 5.0 release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a640fc863773252fb21a772fb2e321bed5c134" translate="yes" xml:space="preserve">
          <source>The holds will prevent you from upgrading MariaDB, so when you want to remove the holds, open a terminal, become root with '&lt;code&gt;sudo -s&lt;/code&gt;', and then enter the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad702743c2eeff201c869822011c6a70a34d666" translate="yes" xml:space="preserve">
          <source>The home of HandlerSocket is &lt;a href=&quot;https://github.com/DeNA/HandlerSocket-Plugin-for-MySQL&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5843e4022cf2af6872e3fe7ab8b5f71757294af" translate="yes" xml:space="preserve">
          <source>The hope is that a newbie can quickly get up to speed, and his/her INDEXes will no longer smack of &quot;newbie&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d601d53a46cb9667f01afaeb659435946998569" translate="yes" xml:space="preserve">
          <source>The host name of the local host to use for making a TCP/IP connection to the local server. By default, the connection is made to localhost using a Unix socket file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5acabcf61d51ec222dbfb0cb585857aef7bdee1" translate="yes" xml:space="preserve">
          <source>The host of the server, a name or an IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b03716ac6567f9c0cf9eab7406ae73b353fa12" translate="yes" xml:space="preserve">
          <source>The host or user argument to GRANT is too long</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe24c84076d1c574b2b89fa68578ac44e8c617b" translate="yes" xml:space="preserve">
          <source>The host the client is connected to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4be57bb2749a8092b6a6c6abf62f9d90183a276" translate="yes" xml:space="preserve">
          <source>The host_cache table contains the following columns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db27d81c66953e63b7d15391e182ee5faa4c7ba" translate="yes" xml:space="preserve">
          <source>The hostnames of each interface on each node (optional).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f940ce10a066e24d2cfa8d2935b188179498fe8" translate="yes" xml:space="preserve">
          <source>The hour information is regarded as 12-hour format if a &amp;ldquo;t&amp;rdquo; or &amp;ldquo;tt&amp;rdquo; element follows the &amp;ldquo;hh&amp;rdquo; element in the format or as 24-hour format otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a256f93449bc0d37b5c3fab583369bf020c471c" translate="yes" xml:space="preserve">
          <source>The id field is close enough to datetime-ordered to be used instead of datetime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb35cdae4da80966300d1c075a0289a3969f6ce" translate="yes" xml:space="preserve">
          <source>The id field is unique</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd7a95fbe0fa5db94a12411b19e6e6b44594ac49" translate="yes" xml:space="preserve">
          <source>The id of our GPG public key is &lt;code&gt;0xcbcb082a1bb943db&lt;/code&gt;. The short form of the id is &lt;code&gt;0x1BB943DB&lt;/code&gt;. The full key fingerprint is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e1981653586a80f8edbc97b8528ef4b4fb7a18" translate="yes" xml:space="preserve">
          <source>The idea</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5c6e0b59101942f4ad256b337844434631b8c7" translate="yes" xml:space="preserve">
          <source>The idea and the original code of the segmented key cache was provided by Fredrik Nylander from Stardoll.com. The code was extensively reworked, improved, and eventually merged into MariaDB by Igor Babaev from Monty Program (now MariaDB Corporation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53092e852a6dc4b8d4886c9711798de1e26dc07" translate="yes" xml:space="preserve">
          <source>The idea behind index condition pushdown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed049cb7931da0e7cdf2b526d045f907eeda2b7" translate="yes" xml:space="preserve">
          <source>The idea here is to first load a set of Fact records into a &quot;staging table&quot;, with the following characteristics (at least):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110659f468cf493615043191b41e80d65c732de2" translate="yes" xml:space="preserve">
          <source>The idea here is to have a sliding window of &lt;a href=&quot;../managing-mariadb-partitioning/index&quot;&gt;partitions&lt;/a&gt;. Let's say you need to purge news articles after 30 days. The &quot;partition key&quot; would be the &lt;a href=&quot;../datetime/index&quot;&gt;datetime&lt;/a&gt; (or &lt;a href=&quot;../timestamp/index&quot;&gt;timestamp&lt;/a&gt;) that is to be used for purging, and the PARTITIONs would be &quot;range&quot;. Every night, a cron job would come along and build a new partition for the next day, and drop the oldest partition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff656da172ecb4992b5c69c2e1ae1d6d65c906d7" translate="yes" xml:space="preserve">
          <source>The idea is that InnoDB recovery would make it point-in-time consistent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3a3b660453b308dc2a4e657c5b13b697b4ca83" translate="yes" xml:space="preserve">
          <source>The idea is that the &lt;code&gt;BACKUP LOCK&lt;/code&gt; should be held for as short a time as possible by the backup tool. The time to take an uncontested lock is very short! One can easily do 50,000 locks/unlocks per second on low end hardware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ce9d43b5f933e82aa41030ce26dd5ebaf03e8a" translate="yes" xml:space="preserve">
          <source>The idea is to check part of the WHERE condition that refers to index fields (we call it &lt;em&gt;Pushed Index Condition&lt;/em&gt;) as soon as we've accessed the index. If the &lt;em&gt;Pushed Index Condition&lt;/em&gt; is not satisfied, we won't need to read the whole table record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e57de65a1732b55d5dae32e5074204a1df42a3a9" translate="yes" xml:space="preserve">
          <source>The idea is to run the semi-join as if it were a regular inner join, and then eliminate the duplicate record combinations using a temporary table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f99d0c3c0363808a3d42a92476c60daf18c708" translate="yes" xml:space="preserve">
          <source>The idea of &quot;derived table with key&quot; optimization is to let the materialized derived table have one key which is used for joins with other tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea2d189c0960eb3241f5f3bbef59b653f1ced95" translate="yes" xml:space="preserve">
          <source>The idea of Table Pullout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2cc8ecfb3fe2e40b0850c5f16c105fcb243b112" translate="yes" xml:space="preserve">
          <source>The idea with group commit is to amortize the costs of each flush to disk over multiple commits from multiple parallel transactions. For example, if there are 10 transactions trying to commit in parallel, then we can force all of them to be flushed disk at once with a single system call, rather than do one system call for each commit. This can greatly reduce the need for flush operations, and can consequently greatly improve the throughput of transactions-per-second (TPS).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9512743f24786d3cdba0d979e1f2b24db574a3cb" translate="yes" xml:space="preserve">
          <source>The ideal size of the query cache is very dependent on the specific needs of each system. Setting a value too small will result in query results being dropped from the cache when they could potentially be re-used later. Setting a value too high could result in reduced performance due to lock contention, as the query cache is locked during updates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ee83dc92ca79199e69032af3719e1e3aa7eabd" translate="yes" xml:space="preserve">
          <source>The implementation and behavior of this feature is different than the same feature in MySQL 5.6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9bff51323be191d78de774ebd831128f6accc1" translate="yes" xml:space="preserve">
          <source>The implementation is described in &lt;a href=&quot;https://jira.mariadb.org/browse/MDEV-4506&quot;&gt;MDEV-4506&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ac63c58591d6696a94a898582058edf7d941ed" translate="yes" xml:space="preserve">
          <source>The implementation of the algorithm in 5.3 heavily exploits the multi-range-read interface and its properties. The interface hides the actual mechanism of fetching possible candidates for matching records from the table to be joined. As any block based join algorithm the BKA join repeatedly fills the join buffer with records of the first operand and for each refill it finds records from the join table that could match the records in the buffer. To find such records it asks the MRR interface to perform index look-ups with the keys constructed over all records from the buffer. Together with each key the interface receives a return address - a reference to the record over which this key has been constructed. The actual implementation functions of the MRR interface organize and optimize somehow the process of fetching the records of the joined table by the received keys. Each fetched record r2 is appended with the return address associated with the key by which the record has been found and the result is passed to the BKA join procedure. The procedure takes the record r1 from the join buffer by the return address, joins it with r2 and checks the join condition. If the condition is evaluated to true the joined records is sent to the result stream of the join operation. So for each record returned by the MRR interface only one record from the join buffer is accessed. The number of records from table t2 fetched by the BKA join is exactly the same as for the regular nested loops join algorithm. Yet BKA join allows to optimize the order in which the records are fetched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d0323d5c3796f6a739a84e36b0b1d29f5cc5e2" translate="yes" xml:space="preserve">
          <source>The implementation of the median and avg_mode functions will scale in memory consumption to the size of the set of unique values in the aggregation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3eb987df1b4b98daaff483be85318a57513c43" translate="yes" xml:space="preserve">
          <source>The incident %s occured on the master. Message: %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474968059f73e63afe9070e14badbf5530f1dddf" translate="yes" xml:space="preserve">
          <source>The included &lt;code&gt;xtstat&lt;/code&gt; program can be used to monitor all internal activity of PBXT. See &lt;a href=&quot;../xtstat/index&quot;&gt;xtstat&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1076ccb91dda974d0344df672a3a3db5ea7e4f40" translate="yes" xml:space="preserve">
          <source>The indentation used here in the &lt;code&gt;ELSE&lt;/code&gt; clause is for purposes of clarity only, and is not otherwise significant. See &lt;a href=&quot;../delimiters-in-the-mysql-client/index&quot;&gt;Delimiters in the mysql client&lt;/a&gt; for more on the use of the delimiter command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb855611045c72e720bf238598376a650e5c71a7" translate="yes" xml:space="preserve">
          <source>The index for me would contain 'Ja', 'Rick'. That's not useful for distinguishing between 'Jamison', 'Jackson', 'James', etc., so the index is so close to useless that the optimizer often ignores it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a80f6bf102135cbf38f8f5c455f5559c05d3b7da" translate="yes" xml:space="preserve">
          <source>The index is being used to resolve a &lt;code&gt;GROUP BY&lt;/code&gt; or &lt;code&gt;DISTINCT&lt;/code&gt; query. The rows are not read. This is very efficient if the table has a lot of identical index entries as duplicates are quickly jumped over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a6542c51a2c073799cef31d693fb9fa2c81a60" translate="yes" xml:space="preserve">
          <source>The index is randomly accessed, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44efda0d56b32763fbe896899efb743529128a8c" translate="yes" xml:space="preserve">
          <source>The index name (as visible in &lt;code&gt;&lt;a href=&quot;../show-create-table/index&quot;&gt;SHOW CREATE TABLE&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf095d7f51d62d97b7f6ed02517a25f5acb319d" translate="yes" xml:space="preserve">
          <source>The index number refers to the number of the index when the table was defined, starting at zero. For example, take the following table definition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f424f0117cd0c37ca7ce8c7873724cdfbe01cc96" translate="yes" xml:space="preserve">
          <source>The index statistics help inform these decisions. Imagine yourself choosing whether to look up a number in a phone book, or in your personal address book. You'd choose the personal phone book if at all possible, as it would (usually!) contain far fewer records and be quicker to search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6125556b8a4e458c67bd7cecef3d13c9d4fb647b" translate="yes" xml:space="preserve">
          <source>The index type, which can be &lt;code&gt;BTREE&lt;/code&gt;, &lt;code&gt;FULLTEXT&lt;/code&gt;, &lt;code&gt;HASH&lt;/code&gt; or &lt;code&gt;RTREE&lt;/code&gt;. See &lt;a href=&quot;../storage-engine-index-types/index&quot;&gt;Storage Engine Index Types&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72769c36ca396002e39cdb91943bb6656260675c" translate="yes" xml:space="preserve">
          <source>The indexes are useful</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15380d9251830af4b190f08f816023c9bc72234d" translate="yes" xml:space="preserve">
          <source>The infinidb_double_for_decimal_math variable is used to control the data type for intermediate decimal results. This decimal for double math may be set as a default for the instance, set at the session level, or at the statement level by toggling this variable on and off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed15f14673cd21dbc08a95869344689e23b1a2f0" translate="yes" xml:space="preserve">
          <source>The infinidb_import_for_batchinsert_delimiter variable is used internally by MariaDB ColumnStore on a non-transactional INSERT INTO SELECT FROM statement as the default delimiter passed to the cpimport tool. With a default value ascii 7, there should be no need to change this value unless your data contains ascii 7 values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0566d9f796b5962b3c009ccf0db7f477954809af" translate="yes" xml:space="preserve">
          <source>The infinidb_local_query is set to 0 to allow query across all PMs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2f64ba9bc54aab3ac57379c992c165e216a68c" translate="yes" xml:space="preserve">
          <source>The infinidb_use_import_for_batchinsert variable is used to control if cpimport is used for these statements. This variable may be set as a default for the instance, set at the session level, or at the statement level by toggling this variable on and off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47791a0252ce5086c7718a827803b24980eb674" translate="yes" xml:space="preserve">
          <source>The initial size of the buffer for client/server communication. When creating multiple-row &lt;code&gt;INSERT&lt;/code&gt; statements (as with the &lt;code&gt;--extended-insert&lt;/code&gt; or &lt;code&gt;--opt&lt;/code&gt; option), &lt;code&gt;mysqldump&lt;/code&gt; creates rows up to &lt;code&gt;net_buffer_length&lt;/code&gt; length. If you increase this variable, you should also ensure that the &lt;code&gt;net_buffer_length&lt;/code&gt; variable in the MariaDB server is at least this large.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f6f8d26bb46cd01c5f97b718be9cf313b7fcfb" translate="yes" xml:space="preserve">
          <source>The initialization phase is over. Follows from the &lt;code&gt;waiting for handler open&lt;/code&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63a30f90b1160c4aae845f172dda9ccf0c34339a" translate="yes" xml:space="preserve">
          <source>The initialization vector supplied to %s is too short. Must be at least %d bytes long</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1acc3000ad6a2827a4891aa18381268a19fb1c28" translate="yes" xml:space="preserve">
          <source>The input arguments may be any length. If either argument is NULL, the result of this function is also &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f26a5ee9225465519562aedd66b9bf775f627c" translate="yes" xml:space="preserve">
          <source>The input format for each column is specified as a FIELD_FORMAT option. A simple example is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c431a40ece3858f3ba4225f98baffbaa81ad0d2" translate="yes" xml:space="preserve">
          <source>The input stream could be single-threaded or multi-threaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5d52045847524a2cdbaa20514e4b583cca3bae" translate="yes" xml:space="preserve">
          <source>The insert statement will produce a warning saying:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3324feeb5f85528e70d66c4a230535c39983aa68" translate="yes" xml:space="preserve">
          <source>The inside files are decompressed into memory. Memory problems may arise with huge files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e870d5970d30e470e77504c5f0ee8c46ec843b6" translate="yes" xml:space="preserve">
          <source>The installation directory will be the home directory of the user account. So it would be '/home/mysql/ in this example. The installation directory must be the same on every node. In the examples below we will use the path '/home/mysql/mariadb/columnstore'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199ccbeac3251037dad734815dc462eec3ab39bb" translate="yes" xml:space="preserve">
          <source>The installation script, postConfigure, is run at install and upgrade times. The first part of the script takes information from the user and setup the system configuration, which is updating the Columnstore.xml and the ProcessConfig.xml configuration files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91414ddef23d4b812fa623c34ca8a6c41e7337a1" translate="yes" xml:space="preserve">
          <source>The installer can install a launchd service configuration. This is optional, but it is enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e22d27cc8f98fd7368bf19131bdeff6a73f42c0" translate="yes" xml:space="preserve">
          <source>The installer installs MariaDB Server in a subdirectory of /usr/local/mariadb.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed762904960fd611d7e7e8c370dcb8dbb45b301" translate="yes" xml:space="preserve">
          <source>The instinctive solution often leads to scanning half the table to do just about anything, such as finding the item containing an 'address'. In complexity terms, this is Order(N).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a70a3963bef4471130d069fa4bcead4d9f4524" translate="yes" xml:space="preserve">
          <source>The instructions below use the mirror &lt;a href=&quot;http://ftp.osuosl.org/&quot;&gt;ftp.osuosl.org&lt;/a&gt;, but any of the MariaDB mirrors can be used by replacing the appropriate part of the URLs. See the &lt;a href=&quot;http://downloads.askmonty.org&quot;&gt;main download page&lt;/a&gt; for what mirrors are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0fb705b06e18aa93bb630272ea575be7bf74a3" translate="yes" xml:space="preserve">
          <source>The instructions in the repository configuration tool for Ubuntu 16.04 &quot;Xenial&quot; and Debian &quot;Sid&quot; have been updated to reference this new key. Repositories for previous versions of Debian and Ubuntu still use the old key, so no changes are needed there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eecd25c51319a0fc82994f8173e2b9e8ceeffbf" translate="yes" xml:space="preserve">
          <source>The instructions on this page were used to create the &lt;em&gt;galera&lt;/em&gt; package on the Fedora Linux distribution. This package contains the wsrep provider for &lt;a href=&quot;../galera/index&quot;&gt;MariaDB Galera Cluster&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f64b0c7ea74781f64ac9e8035ad937c4bc3d8b86" translate="yes" xml:space="preserve">
          <source>The instructions on this page were used to create the &lt;em&gt;galera&lt;/em&gt; package on the Ubuntu and Debian Linux distributions. This package contains the wsrep provider for &lt;a href=&quot;../galera/index&quot;&gt;MariaDB Galera Cluster&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be0d482366d8242df6c62b3e979723b762a29e1" translate="yes" xml:space="preserve">
          <source>The instructions on this page will help you compile &lt;a href=&quot;../mariadb/index&quot;&gt;MariaDB&lt;/a&gt; from source. Links to more complete instructions for specific platforms can be found on the &lt;a href=&quot;../source/index&quot;&gt;source&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f46d8ad81eb327c5db0960cb17c5569550804c" translate="yes" xml:space="preserve">
          <source>The integer part of a division can be obtained using &lt;a href=&quot;../div/index&quot;&gt;DIV&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7630b6312623da34b7536bc207c3ef7aec171245" translate="yes" xml:space="preserve">
          <source>The integers in the &lt;code&gt;storage_type&lt;/code&gt; field match the geometry types as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7b4d870c8a2212e996b14d2d592f37c5599a79" translate="yes" xml:space="preserve">
          <source>The interconnect between UMs and PMs can be one or more private VLANs. In this case MariaDB ColumnStore will automatically trunk the individual LANs together to provide greater effective bandwidth between the UMs and PMs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e115eefb330ac28d02cac0789ec992f2fa99cf64" translate="yes" xml:space="preserve">
          <source>The interesting parts are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18318c3dce814d9350f488cb07d767c5c3691bbe" translate="yes" xml:space="preserve">
          <source>The interesting work is in the Ips, not the second table, so I focus on it. The inconvenience of JOINing to the second table is small compared to the performance gains.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee79f0152964408724a13d6997accbd5c39d128" translate="yes" xml:space="preserve">
          <source>The interface to XA transactions is a set of SQL statements starting with &lt;code&gt;XA&lt;/code&gt;. Each statement changes a transaction's state, determining which actions it can perform. A transaction which does not exist is in the &lt;code&gt;NON-EXISTING&lt;/code&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1717a51e3afa545b8ac01f0f153ac0d2a125aef8" translate="yes" xml:space="preserve">
          <source>The internal datatype for addresses is the same as the calling datatype (BINARY(16)).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="836476f86361edbf0a192344ba441d151ebbc1cf" translate="yes" xml:space="preserve">
          <source>The internal datatype for addresses is the same as the calling datatype (INT UNSIGNED).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797817170867daadb8adc8f0c2120c816e7ec3dc" translate="yes" xml:space="preserve">
          <source>The internal representation of it will be the character string &lt;code&gt;-2658.740000&lt;/code&gt;. The way it is stored in a file table depends on the table type. The &lt;em&gt;length&lt;/em&gt; field specification corresponds to the length of the table field in which the value is stored and is calculated by CONNECT from the &lt;em&gt;precision&lt;/em&gt; and the &lt;em&gt;scale&lt;/em&gt; values. This length is &lt;em&gt;precision&lt;/em&gt; plus 1 if &lt;em&gt;scale&lt;/em&gt; is not 0 (for the decimal point) plus 1 if this column is not unsigned (for the eventual minus sign). In fix formatted tables the number is right justified in the field of width &lt;em&gt;length&lt;/em&gt;, for variable formatted tables, such as CSV, the field is the representing character string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48142c812dc781896d732ce5abd94e05bb605d42" translate="yes" xml:space="preserve">
          <source>The intersection, or shared portion, of two geometries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a498313e9ba8506a967e5b825bb759a4e9592ed7" translate="yes" xml:space="preserve">
          <source>The intersection, or shared portion, of two geometries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d274df2e957f5ca399aad725145ae8869930096a" translate="yes" xml:space="preserve">
          <source>The introduction of &lt;a href=&quot;../binlog-event-checksums/index&quot;&gt;checksums on binlog events&lt;/a&gt; changes the format that events are stored in &lt;a href=&quot;../binary-log/index&quot;&gt;binary log&lt;/a&gt; files and sent over the network to slaves. This raises the question on what happens when replicating between different versions of the server, where one server is a newer version that has the binlog checksum feature implemented, while the other server is an older version that does not know about binlog checksums.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b62392abbd1eeab5fe2f95251e232d8c9f7df48" translate="yes" xml:space="preserve">
          <source>The inverse function of &lt;code&gt;UNIX_TIMESTAMP()&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../from_unixtime/index&quot;&gt;FROM_UNIXTIME()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c2a1a02d78fbaefe0e770439f9529b19c08254" translate="yes" xml:space="preserve">
          <source>The inverse of this function (when called with a single argument) is the &lt;a href=&quot;../exp/index&quot;&gt;EXP()&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d53392f995b3ee9eed9b0502da984e7631affa" translate="yes" xml:space="preserve">
          <source>The inverse of this function is &lt;code&gt;&lt;a href=&quot;../exp/index&quot;&gt;EXP()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbebe353d57241bd416ceb7231c2ff081300f79" translate="yes" xml:space="preserve">
          <source>The ioDrive branded products can be used as block devices (super-fast disks) or to extend basic DRAM memory. ioDrive is deployed by installing it on an x86 server and then installing the card driver under the operating system. All main line 64-bit operating systems and hypervisors are supported: RHEL, CentOS, SuSe, Debian, OEL etc. and VMware, Microsoft Windows/Server etc. Drivers and their features are constantly developed further.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae53c760d26d35c2c87c09f88a7d0b72afcb220" translate="yes" xml:space="preserve">
          <source>The iso images have been successfully tested on:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd1a0d25227ae5dc2415ce6f0e222bfdbe00226" translate="yes" xml:space="preserve">
          <source>The issue is that if no schema name is specified, some data sources return information for all schemas while some others only return the information of the &amp;ldquo;default&amp;rdquo; schema. In addition, the used &amp;ldquo;schema&amp;rdquo; or &amp;ldquo;database&amp;rdquo; is sometimes implied by the connection string and sometimes is not. Sometimes, it also can be included in a data source definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eca311bd75095586465b09b11005d69af07e0f8" translate="yes" xml:space="preserve">
          <source>The issue is that if we want to create a partitioned table on these files, there are no columns to use for defining a partition function. Each city file can have the same kind of column values and there is no way to distinguish them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1fd9e0e105d0d872b0ddf1b017cde36774545b" translate="yes" xml:space="preserve">
          <source>The java wrapper class files are available on your system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d711d4334587a6e1e8ed3a88bfc54a62a41767" translate="yes" xml:space="preserve">
          <source>The join can be done in two directions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e14be19deff70888a831fcff77bce4ec971b19" translate="yes" xml:space="preserve">
          <source>The join process will return only the rows fulfilling the where clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26eb19cd70ba0439806c084663ab969ce20f878c" translate="yes" xml:space="preserve">
          <source>The json item is created by extracting the required part from the file. This can be the whole file but more often only some of it. There are two ways to specify the sub-item of the file to be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5106ca0cf05ae273c372ade7d19d5a5dded25aed" translate="yes" xml:space="preserve">
          <source>The key can be added using the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab05da4ca56fa951124af38963789c48fcf14a2" translate="yes" xml:space="preserve">
          <source>The key differentiator between a Fusion-io and a legacy SSD/HDD is the following: &lt;strong&gt;A Fusion-io card is connected directly on the system bus (PCIe)&lt;/strong&gt;, this enables &lt;u&gt;high data transfer throughput&lt;/u&gt; (1.5 GB/s, 3.0 GB/s or 6GB/s) and the fast direct memory access (DMA) method can be used to transfer data. The ATA/SATA protocol stack is omitted and therefore &lt;u&gt;latency is cut short&lt;/u&gt;. Fusion-io performance is dependent on server speed: the faster processors and the newer PCIe-bus version you have, the better is the ioDrive performance. &lt;u&gt;Fusion-io memory is non-volatile&lt;/u&gt;, in other words, data remains on the card even when the server is powered off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52402c3e34bf7d61a2068d921a508684604b974" translate="yes" xml:space="preserve">
          <source>The key file can be specified with the &lt;code&gt;--des-key-file&lt;/code&gt; server option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c35ae1c104547b909a3ee9b335bc0ebc1933bad" translate="yes" xml:space="preserve">
          <source>The key file still needs to have a key identifier for each encryption key added to the beginning of each line. Key identifiers do not need to be contiguous. Open the new key file in your preferred text editor and add the key identifiers. For example, the key file would look something like the following after this step:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ed4e5e14a5852aa34e344e9b9542a22ae5c855" translate="yes" xml:space="preserve">
          <source>The key identifiers give you a way to reference the encryption keys from MariaDB. In the example above, you could reference these encryption keys using the key identifiers &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;100&lt;/code&gt; with the &lt;code&gt;&lt;a href=&quot;../create-table/index#encryption_key_id&quot;&gt;ENCRYPTION_KEY_ID&lt;/a&gt;&lt;/code&gt; table option or with system variables such as &lt;code&gt;&lt;a href=&quot;../innodb-system-variables/index#innodb_default_encryption_key_id&quot;&gt;innodb_default_encryption_key_id&lt;/a&gt;&lt;/code&gt;. You do not necessarily need multiple encryption keys--the encryption key with the key identifier &lt;code&gt;1&lt;/code&gt; is the only mandatory encryption key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba91861953e0e872dcb7db691718f60ec7d39c8" translate="yes" xml:space="preserve">
          <source>The key points in this create statement are the EXECSRC option and the column definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c8fe3e2c0fe64fa23733574e2c211df9919e98" translate="yes" xml:space="preserve">
          <source>The key we use has an id of &lt;code&gt;1BB943DB&lt;/code&gt; and the key fingerprint is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5b0ef4e993e1d4fc9fd186e1f84950fdfffda2" translate="yes" xml:space="preserve">
          <source>The keywords &lt;code&gt;CREATE EVENT&lt;/code&gt; plus an event name, which uniquely identifies the event in the current schema. (Prior to MySQL 5.1.12, the event name needed to be unique only among events created by the same user on a given database.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7eb967d1508a95938f12fb938f9fdfe15958178" translate="yes" xml:space="preserve">
          <source>The language used for the names is controlled by the value of the &lt;a href=&quot;../server-system-variables/index#lc_time_names&quot;&gt;lc_time_names&lt;/a&gt; system variable. See &lt;a href=&quot;../server-locale/index&quot;&gt;server locale&lt;/a&gt; for more on the supported locales.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb87deee0a0e6a5bff1d86763218c871f8d018f" translate="yes" xml:space="preserve">
          <source>The larger the size, the longer it will take to initialize. On a modern 64-bit server with a 10GB memory pool, this can take five seconds or more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761532c3d2b3d3d294b722de6b00c272a1661748" translate="yes" xml:space="preserve">
          <source>The last ALTER is needed to display all the entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="879fb92a5cac4344b051e3dbbc16f0d9d1dec749" translate="yes" xml:space="preserve">
          <source>The last block committed to the extent (starting at 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a23953f153e556f33185d81cf6bbccbff9798c" translate="yes" xml:space="preserve">
          <source>The last items would be delivered in reverse order. Either deal with that in the UI, or make the SELECT more complex:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d735352f2f04923c0390f7994f40bfe92356e3e" translate="yes" xml:space="preserve">
          <source>The last line will cause all tests of this suite that include &lt;code&gt;windows.inc&lt;/code&gt; to be skipped with the reason being &quot;Not on windows&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebed367c5ee393f6412de36f502da46ea6913dbf" translate="yes" xml:space="preserve">
          <source>The last part of a &lt;a href=&quot;../create-table/index&quot;&gt;CREATE TABLE&lt;/a&gt; statement can be definition of the new table's partitions. In the case of RANGE COLUMNS partitioning, the syntax is the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810ce8ccdd4d588d9313ffc5dc0e9b741f167f1f" translate="yes" xml:space="preserve">
          <source>The last part of a &lt;a href=&quot;../create-table/index&quot;&gt;CREATE TABLE&lt;/a&gt; statement can be definition of the new table's partitions. In the case of RANGE partitioning, the syntax is the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ad362e4a81d74aa5e715bc32b7a422dbcff6c9" translate="yes" xml:space="preserve">
          <source>The last part of a &lt;a href=&quot;../create-table/index&quot;&gt;CREATE TABLE&lt;/a&gt; statement can be the definition of the new table's partitions. In the case of LIST partitioning, the syntax is the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0069f7613346cf7490f7025058aae35ed03a202" translate="yes" xml:space="preserve">
          <source>The last read access date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def7900d265d2da7cd2e9ad7200a5faab1efe41e" translate="yes" xml:space="preserve">
          <source>The last two arguments tell it to stream the &lt;code&gt;t6&lt;/code&gt; table on the &lt;code&gt;test&lt;/code&gt; database. If you want to stream multiple tables, replace these arguments with a &lt;code&gt;-f&lt;/code&gt; option that gives the path to a table list file. Format the file for one table per line, separating the database name and table name by a tab. For instance,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f6a36a189d4f401a09a06b65a21552ac95fdc5" translate="yes" xml:space="preserve">
          <source>The last two digits of the year (that is, 1996 would be coded as &quot;96&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcef6a8e316d6b913a4f8ed009b0b01c9752de69" translate="yes" xml:space="preserve">
          <source>The last two statements display the results shown because 2 is equal to neither 1 nor 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01c433a99dd6cddea06eb9ac40123b886ba181c" translate="yes" xml:space="preserve">
          <source>The last write access date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4769a8dbf51a9d4a04b7e484ae5106c15008691c" translate="yes" xml:space="preserve">
          <source>The latest version of the MariaDB Bulk Data Adapters need to be installed. See additional &lt;a href=&quot;../columnstore-bulk-write-sdk/index&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e9959d174c7161374e1e20849e80e5a8c2ed8f" translate="yes" xml:space="preserve">
          <source>The latest version of the MariaDB Java Connector should be downloaded from &lt;a href=&quot;https://mariadb.com/downloads/connector&quot;&gt;https://mariadb.com/downloads/connector&lt;/a&gt; and copied to the master node, e.g. under /usr/share/java.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb168f503865a4cb71b4fad49454ed32eea31808" translate="yes" xml:space="preserve">
          <source>The latter query would also run 5.x times slower (from 2.2 to 10.8 seconds) in our experiments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d81a1cee41c5c3838ec6167341130eaeb4bff2e" translate="yes" xml:space="preserve">
          <source>The latter three steps are repeated until all rows have been processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145bf0a0e6a317a403f58797996d138ea82f2b98" translate="yes" xml:space="preserve">
          <source>The latter two should be replaced with simply &lt;code&gt;ZEROFILL&lt;/code&gt;, but are still accepted by the parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504e150d2761c57a71470d4d463fa7bf59f4dd04" translate="yes" xml:space="preserve">
          <source>The launchd service configuration file installed by the installer is located at /Library/LaunchDaemons/com.mariadb.server.plist. The service definition file uses command-line arguments to &lt;code&gt;mariadbd&lt;/code&gt; to control some of its behavior. These will override changes you make in option (.cnf) files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ae2b30b34dea9f8465b9ac8f516b676db68d3f" translate="yes" xml:space="preserve">
          <source>The length can &lt;strong&gt;not&lt;/strong&gt; be increased with &lt;code&gt;&lt;a href=&quot;../alter-table/index#algorithm&quot;&gt;ALGORITHM&lt;/a&gt;&lt;/code&gt; set to &lt;code&gt;INSTANT&lt;/code&gt; if the original length was between 128 bytes and 255 bytes, and the new length is 256 bytes or more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3192344e186b4dc09dd1eb5d596401b93d0f239" translate="yes" xml:space="preserve">
          <source>The length can be increased with &lt;code&gt;&lt;a href=&quot;../alter-table/index#algorithm&quot;&gt;ALGORITHM&lt;/a&gt;&lt;/code&gt; set to &lt;code&gt;INSTANT&lt;/code&gt; if the original length of the column is 127 bytes or less, and the new length of the column is 256 bytes or more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250aecec3f6b6f3bf6a745644a57b3768735cded" translate="yes" xml:space="preserve">
          <source>The length can be increased with &lt;code&gt;&lt;a href=&quot;../alter-table/index#algorithm&quot;&gt;ALGORITHM&lt;/a&gt;&lt;/code&gt; set to &lt;code&gt;INSTANT&lt;/code&gt; if the original length of the column is 255 bytes or less, and the new length of the column is still 255 bytes or less.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cbc5d38f10154d850340fb38ee5779d75809400" translate="yes" xml:space="preserve">
          <source>The length can be increased with &lt;code&gt;&lt;a href=&quot;../alter-table/index#algorithm&quot;&gt;ALGORITHM&lt;/a&gt;&lt;/code&gt; set to &lt;code&gt;INSTANT&lt;/code&gt; if the original length of the column is 256 bytes or more, and the new length of the column is still 256 bytes or more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0da5f8f08ac9e5dfd2ce2caf205e47f7dc75e6" translate="yes" xml:space="preserve">
          <source>The length of nested arrays or objects are not counted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738fad2df0a4b6c60616567aeaf5e3f5b4662315" translate="yes" xml:space="preserve">
          <source>The length of the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd3e280ca85e0f17cb7ee53df0dc960d9be90b0" translate="yes" xml:space="preserve">
          <source>The letters &lt;em&gt;SQL&lt;/em&gt; stand for Structured Query Language. As with all languages&amp;mdash;even computer languages&amp;mdash;there are grammar rules. This includes a certain structure to statements, acceptable punctuation (i.e., operators and delimiters), and a vocabulary (i.e., reserve words).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6728205f7fb7de918a71021e927a4cd67c9ca1d1" translate="yes" xml:space="preserve">
          <source>The level of quoting used in &lt;a href=&quot;../connect-csv-and-fmt-table-types/index&quot;&gt;CSV&lt;/a&gt; table files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17961803463d1b264f012f69761d63d9d89e28dc" translate="yes" xml:space="preserve">
          <source>The limit for how much data you can have in one statement is controlled by the &lt;code&gt;&lt;a href=&quot;../mysqld-options-full-list/index&quot;&gt;max_allowed_packet&lt;/a&gt;&lt;/code&gt; server variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb3df39423a60a8ba23f674b60b3dd85838992f" translate="yes" xml:space="preserve">
          <source>The limit is 32,000 concurrent transactions when all data-modifying transactions also modify temporary tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc908e06c17ae8839ad546c81921cf619c4e801" translate="yes" xml:space="preserve">
          <source>The limit that is taken into account is 11, not 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da37e3335787f6a5028b89a8759f351ba77e378d" translate="yes" xml:space="preserve">
          <source>The limitations for HANDLER READ with Memory|HEAP tables are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd83a3134f4a22a850f89f18d6d1bc71f3b5e706" translate="yes" xml:space="preserve">
          <source>The limiting factor of the Version Buffer is not the number of rows being updated, but rather the number of disk blocks. You can increase the size, but use caution, since increasing the number of disk blocks means that &lt;code&gt;&lt;a href=&quot;../update/index&quot;&gt;UPDATE&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../delete/index&quot;&gt;DELETE&lt;/a&gt;&lt;/code&gt; statements that run for long periods of time can take even longer in the event that you need to roll back the changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668e74df6296101efe70289974856e662313dab7" translate="yes" xml:space="preserve">
          <source>The list can contain one or more columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a09256dcc10e94debfb4ba2e70aaa1067e373ea" translate="yes" xml:space="preserve">
          <source>The list excludes status related to the following storage engines included in &lt;a href=&quot;../what-is-mariadb-100/index&quot;&gt;MariaDB 10.0&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f0271a8613ee14f42e28175be4eb2d0a4ad6b7" translate="yes" xml:space="preserve">
          <source>The list excludes status related to the following storage engines included in &lt;a href=&quot;../what-is-mariadb-101/index&quot;&gt;MariaDB 10.1&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c9c1a69d76dc490c9eb437f49d33ea42a5ddf4" translate="yes" xml:space="preserve">
          <source>The list excludes the following variables, related to storage engines and plugins included in &lt;a href=&quot;../what-is-mariadb-100/index&quot;&gt;MariaDB 10.0&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b60883d6fcd9cf899b547341221881e7e9988e3b" translate="yes" xml:space="preserve">
          <source>The list excludes the following variables, related to storage engines and plugins included in &lt;a href=&quot;../what-is-mariadb-101/index&quot;&gt;MariaDB 10.1&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cf83de3faa3b6e7b3ab8a7204a8c95ca124ad4" translate="yes" xml:space="preserve">
          <source>The list excludes variables related to non-default storage engines and plugins that can be added to &lt;a href=&quot;../what-is-mariadb-55/index&quot;&gt;MariaDB 5.5&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25923f9d7b5994303047707cdc6b0a0e4b082151" translate="yes" xml:space="preserve">
          <source>The list is displayed on any server (not just the master server). The output looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beabec6f962c727cdefb938a685581626feed5d1" translate="yes" xml:space="preserve">
          <source>The list of new functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46167e0a68c0f7b557a7af07e543b9dc3f928934" translate="yes" xml:space="preserve">
          <source>The list of the columns of the TBL table may not necessarily include all the columns of the tables of the list. If the name of some columns is different in the sub-tables, the column to use can be specified by its position given by the &lt;code&gt;FLAG&lt;/code&gt; option of the column. If the &lt;code&gt;ACCEPT&lt;/code&gt; option is set to true (Y or 1) columns that do not exist in some of the sub-tables are accepted and their value will be null or pseudo-null (this depends on the nullability of the column) for the tables not having this column. The column types can also be different and an automatic conversion will be done if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b1542e37c92bd8af189b38cd673cc2d119b71f" translate="yes" xml:space="preserve">
          <source>The list of the locales supported by the current MariaDB installation can be obtained via the &lt;a href=&quot;../locales-plugin/index&quot;&gt;LOCALES&lt;/a&gt; plugin, available since &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-1004-release-notes/&quot;&gt;MariaDB 10.0.4&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9bbe2ccda5c888c2b0251dd921b8f3ee8e47823" translate="yes" xml:space="preserve">
          <source>The list of value follow the &lt;code&gt;VALUES&lt;/code&gt; or &lt;code&gt;VALUE&lt;/code&gt; keyword (which are interchangeable, regardless how much values you want to insert), and is wrapped by parenthesis. The values must be listed in the same order as the columns list. It is possible to specify more than one list to insert more than one rows with a single statement. If many rows are inserted, this is a speed optimization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13daf5a192e3c4d07eeddd0a00b0329abf460cb" translate="yes" xml:space="preserve">
          <source>The literals which occur in stored programs and views, by default, use the character set and collation which was specified by the &lt;a href=&quot;../server-system-variables/index#character_set_connection&quot;&gt;character_set_connection&lt;/a&gt; and &lt;a href=&quot;../server-system-variables/index#collation_connection&quot;&gt;collation_connection&lt;/a&gt; system variables when the stored program was created. These values can be seen using the SHOW CREATE statements. To change the character sets used for literals in an existing stored program, it is necessary to drop and recreate the stored program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a16f10c51672f127a7c8eaf26aabffb949fb67c" translate="yes" xml:space="preserve">
          <source>The live user is &quot;sql&quot; and the password is &quot;live&quot;. Please change the password immediately after first login!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c505758698f53dc702090a44d85cf8ccbbaebd46" translate="yes" xml:space="preserve">
          <source>The loan balance has been set to its initial value of the received funds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e1f159082495d427936c4d70e79d015f5f7cd0c" translate="yes" xml:space="preserve">
          <source>The loan balance has now been reduced to reflect account payments. MaxScale has also streamed the data from the changes over to ColumnStore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dddb501b58e52d2e866bd6c08ec9e739b9ad1a9d" translate="yes" xml:space="preserve">
          <source>The local column name (alias in the remote server)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243c188b7aaf223e57b81550908370c17a4c77f4" translate="yes" xml:space="preserve">
          <source>The location of the MariaDB ColumnStore Process corefiles get placed here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2435aeb6e0494105cb6b706dd564a6b8f0131af5" translate="yes" xml:space="preserve">
          <source>The lock wait timeout can be explicitly set in the statement by using either &lt;code&gt;WAIT n&lt;/code&gt; (to set the wait in seconds) or &lt;code&gt;NOWAIT&lt;/code&gt;, in which case the statement will immediately fail if the lock cannot be obtained. &lt;code&gt;WAIT 0&lt;/code&gt; is equivalent to &lt;code&gt;NOWAIT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d502f78824855d8d7ceb95de2d9402f6f3fe8a4" translate="yes" xml:space="preserve">
          <source>The log consists of a memory-mapped file that is divided into pages of 8KB size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43706f2d163566a52a07067c2805e5a1d1d0e589" translate="yes" xml:space="preserve">
          <source>The log file format should also be compatible, but we don't make any guarantees yet. In some cases when upgrading, you must remove the old &lt;code&gt;aria_log.%&lt;/code&gt; and &lt;code&gt;maria_log.%&lt;/code&gt; files before restarting MariaDB. (So far, this has only occurred in the upgrade from &lt;a href=&quot;../what-is-mariadb-51/index&quot;&gt;MariaDB 5.1&lt;/a&gt; and &lt;a href=&quot;../what-is-mariadb-52/index&quot;&gt;MariaDB 5.2&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0455ce609897484055e4927824e4e5aa8e273228" translate="yes" xml:space="preserve">
          <source>The log is also used to see detect if any truncate or online alter tables are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5fc82f6be4dcff80c12989e1b7a3e4e900fa00" translate="yes" xml:space="preserve">
          <source>The log tables use the &lt;a href=&quot;../csv/index&quot;&gt;CSV&lt;/a&gt; storage engine by default. This allows an external program to read the files if needed: normal CSV files are stored in the &lt;code&gt;mysql&lt;/code&gt; subdirectory, in the data dir. However that engine is slow because it does not support indexes, so you can convert the tables to &lt;a href=&quot;../myisam/index&quot;&gt;MyISAM&lt;/a&gt; (but not other storage engines). To do so, first temporarily disable logging:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0962f85fda4b97e4022c09d0163325acfa189297" translate="yes" xml:space="preserve">
          <source>The logic used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b59079596d233fa457486156123595cd47ab48" translate="yes" xml:space="preserve">
          <source>The login user name to use for running &lt;code&gt;mysqld&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d63aa10f196f60f3b855d1e1ac0bc7771e49ee1" translate="yes" xml:space="preserve">
          <source>The login user name to use for running &lt;code&gt;mysqld&lt;/code&gt;. Files and directories created by &lt;code&gt;mysqld&lt;/code&gt; will be owned by this user. You must be &lt;code&gt;root&lt;/code&gt; to use this option. By default, &lt;code&gt;mysqld&lt;/code&gt; runs using your current login name and files and directories that it creates will be owned by you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44411e3d66ae678ab7e95b96ab7a17bf9a0a9622" translate="yes" xml:space="preserve">
          <source>The lower of &lt;code&gt;150&lt;/code&gt; or the value of &lt;a href=&quot;#max_connections&quot;&gt;max_connections&lt;/a&gt; (beween &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-1008-release-notes/&quot;&gt;MariaDB 10.0.8&lt;/a&gt; and &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-1017-release-notes/&quot;&gt;MariaDB 10.1.7&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9147b133b6890961fd25d315e00e3222ac931d54" translate="yes" xml:space="preserve">
          <source>The lower of &lt;code&gt;900&lt;/code&gt; and (50 + &lt;a href=&quot;#max_connections&quot;&gt;max_connections&lt;/a&gt;/5) (&amp;gt;= &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-1017-release-notes/&quot;&gt;MariaDB 10.1.7&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357c218c9b89ff7df232793bdc0f0626b13cee97" translate="yes" xml:space="preserve">
          <source>The lowest acceptable &lt;a href=&quot;../mariadb-plugins/index&quot;&gt;plugin&lt;/a&gt; maturity. MariaDB will not load plugins less mature than the specified level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae20178c192ae9995dae40ab740318d70bdc78d" translate="yes" xml:space="preserve">
          <source>The lowest level directory id for the column file containing the physical row</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba76be5a8a1b40a1518f0a319960e8b367a0bdca" translate="yes" xml:space="preserve">
          <source>The luxurious Platinum setup: &lt;a href=&quot;http://kb.askmonty.org/en/what-is-mariadb-galera-cluster/&quot;&gt;MariaDB Galera Cluster&lt;/a&gt; running on Fusion-io SLC cards on several hosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc865a213660c228af077c1da972499b8900095" translate="yes" xml:space="preserve">
          <source>The main benefit of storing things in an S3 compatible storage is that the cost of storage is much cheaper than many other alternatives. Many S3 implementations also provide reliable long-term storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f3f33beb5a66b5e4fee44700be7dd6f00d39dd" translate="yes" xml:space="preserve">
          <source>The main characteristic of &lt;a href=&quot;../connect/index&quot;&gt;CONNECT&lt;/a&gt; is to enable accessing data scattered on a machine as if it was a centralized database. This, and the fact that that locking is not used by connect (data files are open and closed for each query) makes CONNECT very useful for importing or exporting data into or from a MariaDB database and also for all types of Business Intelligence applications. However, it is not suited for transactional applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9c0c83b628af5d5e3aee8cff15e7d348f60827" translate="yes" xml:space="preserve">
          <source>The main cookbook skips over an important optimization that is sometimes used. The optimizer will sometimes ignore the WHERE and, instead, use an INDEX that matches the ORDER BY. This, of course, needs to be a perfect match -- all columns, in the same order. And all ASC or all DESC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6506664be0713c242d8550bc46eb10983a0f1e4" translate="yes" xml:space="preserve">
          <source>The main difference between the &lt;code&gt;&lt;a href=&quot;../cast/index&quot;&gt;CAST()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;CONVERT()&lt;/code&gt; is that &lt;code&gt;CONVERT(expr,type)&lt;/code&gt; is ODBC syntax while &lt;code&gt;&lt;a href=&quot;../cast/index&quot;&gt;CAST(expr as type)&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;CONVERT(... USING ...)&lt;/code&gt; are SQL92 syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e2a4ee1222466b1c78a381bf94752709cc8a3eb" translate="yes" xml:space="preserve">
          <source>The main difference between the &lt;code&gt;&lt;a href=&quot;index&quot;&gt;CAST()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../convert/index&quot;&gt;CONVERT()&lt;/a&gt;&lt;/code&gt; is that &lt;code&gt;&lt;a href=&quot;../convert/index&quot;&gt;CONVERT(expr,type)&lt;/a&gt;&lt;/code&gt; is ODBC syntax while &lt;code&gt;&lt;a href=&quot;index&quot;&gt;CAST(expr as type)&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../convert/index&quot;&gt;CONVERT(... USING ...)&lt;/a&gt;&lt;/code&gt; are SQL92 syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11570fbf8df0e2befafc3b54143e8b0a75524d6f" translate="yes" xml:space="preserve">
          <source>The main difference during parsing is that we store the result type in the sp_head. However, there are big differences when it comes to invoking a FUNCTION. (See below.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d479fb587be4bd035c713e9888b58874f7a17a" translate="yes" xml:space="preserve">
          <source>The main differences are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8358f0f26e39bbfad2a7292eb04583f6a578c54d" translate="yes" xml:space="preserve">
          <source>The main differences are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16493bbcf8daac3d052db800f170ba5f4f6d03f" translate="yes" xml:space="preserve">
          <source>The main feature of &lt;a href=&quot;../connect/index&quot;&gt;CONNECT&lt;/a&gt; is to give MariaDB the ability to handle tables from many sources, native files, other DBMS&amp;rsquo;s tables, or special &amp;ldquo;virtual&amp;rdquo; tables. Moreover, for all tables physically represented by data files, CONNECT recognizes many different file formats, described below but not limited in the future to this list, because more can be easily added to it on demand (&lt;a href=&quot;../connect-table-types-oem/index&quot;&gt;OEM tables&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2008d09ebdc416e61b171bc75e152607c2ea2ff1" translate="yes" xml:space="preserve">
          <source>The main features of CONNECT are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194dc50cbeefdb32c7b7566bed195082bb89755e" translate="yes" xml:space="preserve">
          <source>The main handler values (total of all operations):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d373e4a98c75b75dc3db3a8b798d9058fc6933c7" translate="yes" xml:space="preserve">
          <source>The main mechanism used in replication is the &lt;a href=&quot;../binary-log/index&quot;&gt;binary log&lt;/a&gt;. If binary logging is enabled, all updates to the database (data manipulation and data definition) are written into the binary log as binlog events. Slaves read the binary log from each master in order to access the data to replicate. A &lt;a href=&quot;../relay-log/index&quot;&gt;relay log&lt;/a&gt; is created on the slave server, using the same format as the binary log, and this is used to perform the replication. Old relay log files are removed when no longer needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c1f837d42f3ecf86339acf067794ebc51f497a" translate="yes" xml:space="preserve">
          <source>The main reason to run &lt;code&gt;mysql_upgrade&lt;/code&gt; on all your tables is to allow it to check that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48750156d95be04b47611736ef8c279fa5e94218" translate="yes" xml:space="preserve">
          <source>The main server system variable here is &lt;a href=&quot;../xtradbinnodb-server-system-variables/index#innodb_change_buffering&quot;&gt;innodb_change_buffering&lt;/a&gt;, which determines which form of change buffering, if any, to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6284196ac83df125daac01cb9badedecfef065" translate="yes" xml:space="preserve">
          <source>The main way to avoid swapping is to make sure you have enough RAM for all processes that need to run on the machine. Setting the &lt;a href=&quot;../system-variables/index&quot;&gt;system variables&lt;/a&gt; too high can mean that under load the server runs short of memory, and needs to use swap. So understanding what settings to use and how these impact your server's memory usage is critical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82530bdd1695f8d412802560e3f7efc4749813b" translate="yes" xml:space="preserve">
          <source>The major categories of job steps are the application of a column filter, processing table joins, and the projection of returned columns. Each operation in the query plan executes in parallel by the Job List itself and has the capability of running entirely on the User Module, entirely on the Performance Module or in some combination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38edb76319f50f9d035ba2fc2cbbf3107b7b892b" translate="yes" xml:space="preserve">
          <source>The major difference between the implementation of BNL join in &lt;a href=&quot;../what-is-mariadb-53/index&quot;&gt;MariaDB 5.3&lt;/a&gt; compared to earlier versions of MariaDB/MySQL is that the former uses a new format for records written into join buffers. This new format allows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c47e7e5a1e3ad3d3bf615d8736d8e710cefdc5" translate="yes" xml:space="preserve">
          <source>The manual's sample: 6ccd780c-baba-1026-9564-0040f4311e29 . A more current value (after a few years): 49ea2de3-17a2-11e2-8346-001eecac3efa . Notice how the 3rd part has slowly changed over time? Let's data is rearranged, thus:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="843e9f0f8f0d00ac649a0f66ba9758ac593a6ddd" translate="yes" xml:space="preserve">
          <source>The mapping file is used to define the mapping between source csv columns and target ColumnStore columns, to define column specific input date formats, and to set default values for ignored target columns. It follows the Yaml 1.2 standard and can address the source csv columns implicit and explicit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0c3cced8d574f5acba698af054f1c55ede8e1f" translate="yes" xml:space="preserve">
          <source>The maria/5.3-gis tree on Launchpad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e405c9f62ce3faccd2dd7bcec8c439147a13355f" translate="yes" xml:space="preserve">
          <source>The mariabackup SST method uses the Mariabackup utility for performing SSTs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f957698bba4e704ab6b47cbfe550218be65e1f2" translate="yes" xml:space="preserve">
          <source>The master creates a separate binary log dump thread for each slave connected to the master. You can identify which slaves are connected to the master by executing the &lt;code&gt;&lt;a href=&quot;../show-slave-hosts/index&quot;&gt;SHOW SLAVE HOSTS&lt;/a&gt;&lt;/code&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daec9e9643791de55ed8140490c6fc42ff06cd46" translate="yes" xml:space="preserve">
          <source>The master info structure does not exist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7108cf5f119f3db0da055e3cabc3f57c725f1c14" translate="yes" xml:space="preserve">
          <source>The master usually only has one type of replication-related thread: the binary log dump thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8173a0d1d265fc2249b2808e78a17f432c5d3ae9" translate="yes" xml:space="preserve">
          <source>The master's &lt;a href=&quot;../replication-and-binary-log-server-system-variables/index#server_id&quot;&gt;server_id&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84098f8bd589c31d66249a30651e03450209a6ad" translate="yes" xml:space="preserve">
          <source>The mathematical centroid (geometric center) for a MultiPolygon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a91ffd0f7fd20a3cd78fd7b36ff0b6a34fbe8ee" translate="yes" xml:space="preserve">
          <source>The mathematical centroid (geometric center) for a MultiPolygon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af6a83cf0ff1d62fa293dd2aeb5011ab8412643" translate="yes" xml:space="preserve">
          <source>The max number of missing tables in the table list before an error is raised. Defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44732ec8119ec96d2d39882cf5af38f6f5f5c242" translate="yes" xml:space="preserve">
          <source>The max purge lag can be set by configuring the &lt;code&gt;&lt;a href=&quot;../innodb-system-variables/index#innodb_max_purge_lag&quot;&gt;innodb_max_purge_lag&lt;/a&gt;&lt;/code&gt; system variable. This system variable can be changed dynamically with &lt;code&gt;&lt;a href=&quot;../set/index#global-session&quot;&gt;SET GLOBAL&lt;/a&gt;&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c03604e2c184b97258d6757d2b563e316e34e8" translate="yes" xml:space="preserve">
          <source>The max value from the extent map entry for the extent containing the physical row</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7410714f4faf990f729e116800549c6f4a4f660d" translate="yes" xml:space="preserve">
          <source>The maximum amount of I/O capacity available to InnoDB in an emergency can be configured by setting the &lt;code&gt;&lt;a href=&quot;../xtradbinnodb-server-system-variables/index#innodb_io_capacity_max&quot;&gt;innodb_io_capacity_max&lt;/a&gt;&lt;/code&gt; system variable. This system variable can be changed dynamically with &lt;code&gt;&lt;a href=&quot;../set/index#global-session&quot;&gt;SET GLOBAL&lt;/a&gt;&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390d839a678cd88bb457e62f88bfed2b0f765091" translate="yes" xml:space="preserve">
          <source>The maximum delay can be set by configuring the &lt;code&gt;&lt;a href=&quot;../innodb-system-variables/index#innodb_max_purge_lag_delay&quot;&gt;innodb_max_purge_lag_delay&lt;/a&gt;&lt;/code&gt; system variable. This system variable can be changed dynamically with &lt;code&gt;&lt;a href=&quot;../set/index#global-session&quot;&gt;SET GLOBAL&lt;/a&gt;&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fafd1ad82c91bb9d2cd5288a0f2764677208c2f" translate="yes" xml:space="preserve">
          <source>The maximum number of blocks for the extent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb45dc34167424255d0a39513945806dd63e713" translate="yes" xml:space="preserve">
          <source>The maximum number of conditions stored in the performance schema is determined by the &lt;a href=&quot;../performance-schema-system-variables/index#performance_schema_max_cond_instances&quot;&gt;performance_schema_max_cond_instances&lt;/a&gt; system variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a8aae36b32fd2976ab21ed0b67f8e80b3cab03" translate="yes" xml:space="preserve">
          <source>The maximum number of conditions that can be in the diagnostics area is &lt;code&gt;&lt;a href=&quot;../server-system-variables/index#max_error_count&quot;&gt;max_error_count&lt;/a&gt;&lt;/code&gt;. If this value is 0, the diagnostics area is empty. If this variable is changed, the new value takes effect with the next statement (that is, the diagnostics area is not immediately truncated).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32a1917b2df0f52cc82a36e641e8308f98ec7c3" translate="yes" xml:space="preserve">
          <source>The maximum number of distinct terms in a fulltext index is 268,435,455</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b357ffd6ce44e90dddbde7dc6e22eea3a1076811" translate="yes" xml:space="preserve">
          <source>The maximum number of instances is defined by the &lt;code&gt;&lt;a href=&quot;../server-system-variables/index#table_open_cache_instances&quot;&gt;table_open_cache_instances&lt;/a&gt;&lt;/code&gt; system variable. The default value of the &lt;code&gt;&lt;a href=&quot;../server-system-variables/index#table_open_cache_instances&quot;&gt;table_open_cache_instances&lt;/a&gt;&lt;/code&gt; system variable is &lt;code&gt;8&lt;/code&gt;, which is expected to handle up to 100 CPU cores. If your system is larger than this, then you may benefit from increasing the value of this system variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a41c210b0c7989cf53acb97fdc5a37a9ea2e69" translate="yes" xml:space="preserve">
          <source>The maximum number of records in a fulltext index is 268,435,455</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c656e5d459c091015e5830e7459447c2745ed21d" translate="yes" xml:space="preserve">
          <source>The maximum number of stages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a02a5a4a132462ce264fd7d3ce82d3b82daa1f" translate="yes" xml:space="preserve">
          <source>The maximum packet length to send to or receive from server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa36827ab66047a9da29999e8a90336efb27f62" translate="yes" xml:space="preserve">
          <source>The maximum packet length to send to or receive from server. The default is 16MB, the maximum 1GB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56bb3e25e0726b171ed2bf4ee013eb9fbccf9b10" translate="yes" xml:space="preserve">
          <source>The maximum padding can be configured by setting the &lt;code&gt;&lt;a href=&quot;../innodb-system-variables/index#innodb_compression_pad_pct_max&quot;&gt;innodb_compression_pad_pct_max&lt;/a&gt;&lt;/code&gt; system variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc614ce0f0d3dde97649e1da259a0f3fcb8a242" translate="yes" xml:space="preserve">
          <source>The maximum returned length in bytes is determined by the &lt;a href=&quot;../server-system-variables/index#group_concat_max_len&quot;&gt;group_concat_max_len&lt;/a&gt; server system variable, which defaults to 1M (&amp;gt;= &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-1024-release-notes/&quot;&gt;MariaDB 10.2.4&lt;/a&gt;) or 1K (&amp;lt;= &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-1023-release-notes/&quot;&gt;MariaDB 10.2.3&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87f9d513ee196f32b3415d8c33a756149ba6949" translate="yes" xml:space="preserve">
          <source>The maximum size for &lt;a href=&quot;../blob/index&quot;&gt;BLOB&lt;/a&gt; and &lt;a href=&quot;../text/index&quot;&gt;TEXT&lt;/a&gt; columns is 4GB. This also applies to &lt;a href=&quot;../longblob/index&quot;&gt;LONGBLOB&lt;/a&gt; and &lt;a href=&quot;../longtext/index&quot;&gt;LONGTEXT&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e095fc6608dd38881b12b29f5586ef2517cee3" translate="yes" xml:space="preserve">
          <source>The maximum size for the combined InnoDB log files is 512GB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6700380815efdf1ef651af7ffa9bb95ca1d70670" translate="yes" xml:space="preserve">
          <source>The maximum size in bytes of a row-based &lt;a href=&quot;../binary-log/index&quot;&gt;binary log&lt;/a&gt; event. Should be a multiple of 256. Minimum 256, maximum 18446744073709547520.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d81f90b7bd6e484947fbbad815b0a52a44a8e4" translate="yes" xml:space="preserve">
          <source>The maximum size of a fulltext index is 256GB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0cc5c7ce19af15ee3f55a0b789bdaa2eda5b8c6" translate="yes" xml:space="preserve">
          <source>The maximum size of a single key is 4096 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ac3e7338dbf9b9c3c40f7e572ed229cb894ffb" translate="yes" xml:space="preserve">
          <source>The maximum size of all keys is 4GB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca404f0866a97b3926179c908b7ef689138b3bc6" translate="yes" xml:space="preserve">
          <source>The maximum size of join buffers used by block-based algorithms is controlled by setting the &lt;a href=&quot;../server-system-variables/index#join_buffer_size&quot;&gt;join_buffer_size&lt;/a&gt; system variable. This value must be large enough in order for the join buffer employed for a join operation to contain all relevant fields for at least one joined record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df06f5377b45e94e51e80e8daef0ed816bd412ed" translate="yes" xml:space="preserve">
          <source>The maximum size of the buffer for client/server communication. The maximum is 1GB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb7b59a43c3fcf8d6a475949dcc426f27c239112" translate="yes" xml:space="preserve">
          <source>The maximum total size of MEMORY tables cannot exceed the &lt;code&gt;&lt;a href=&quot;../server-system-variables/index#max_heap_table_size&quot;&gt;max_heap_table_size&lt;/a&gt;&lt;/code&gt; system server variable. When a table is created this value applies to that table, and when the server is restarted this value applies to existing tables. Changing this value has no effect on existing tables. However, executing a &lt;code&gt;ALTER TABLE ... ENGINE=MEMORY&lt;/code&gt; statement applies the current value of &lt;code&gt;max_heap_table_size&lt;/code&gt; to the table. Also, it is possible to change the session value of &lt;code&gt;max_heap_table_size&lt;/code&gt; before creating a table, to make sure that tables created by other sessions are not affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d933d66dc120c625a754b4960d0f0e80cca9cd01" translate="yes" xml:space="preserve">
          <source>The maximum value of a column. All datatypes are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5c41cf37f9b229a4255fcd2260dbcf9c1e8b5b" translate="yes" xml:space="preserve">
          <source>The maximum value stored in this extent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="427161b1170870392cff6961142454f6f574195b" translate="yes" xml:space="preserve">
          <source>The meaning of &lt;code&gt;\R&lt;/code&gt; can be set by starting a pattern with one of the following sequences:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="039a4e5ba675a86d4498945765f0c8a04286cd6c" translate="yes" xml:space="preserve">
          <source>The meaning of the different options are as follows - note that this can vary a bit between storage engines:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f727a67020d4af2c2429eaa1d3e9b33ce6063760" translate="yes" xml:space="preserve">
          <source>The mechanisms of storing, finding, and dropping procedures are encapsulated in the files sp.{cc,h}.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00810042aa54643a4b473fc97a0e27add930acf" translate="yes" xml:space="preserve">
          <source>The memory-mapped transaction coordinator log can be monitored with the following status variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2cbf1bdc35b0d02a155bd39282b24c59d5a9bb" translate="yes" xml:space="preserve">
          <source>The method for copying files (cp or scp). The default is cp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9347677ba4ad7f7aff4f20c7d173669d9003bfa" translate="yes" xml:space="preserve">
          <source>The method that you would use to enable TLS for &lt;a href=&quot;../introduction-to-state-snapshot-transfers-ssts/index&quot;&gt;State Snapshot Transfers (SSTs)&lt;/a&gt; would depend on the value of &lt;code&gt;&lt;a href=&quot;../galera-cluster-system-variables/index#wsrep_sst_method&quot;&gt;wsrep_sst_method&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27a49facf998ab54dc2b48ea3106ac021302c07" translate="yes" xml:space="preserve">
          <source>The min value from the extent map entry for the extent containing the physical row</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c462a538ab2206f3791e39c3f836898e13678e99" translate="yes" xml:space="preserve">
          <source>The minimum convex geometry enclosing all geometries within the set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65beafb846f6be22e7ff4ce4218da18de10c9b97" translate="yes" xml:space="preserve">
          <source>The minimum convex geometry enclosing all geometries within the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5aac00acc98fe191c59d49a73cdcb7b32991253" translate="yes" xml:space="preserve">
          <source>The minimum requirements for a valid CREATE EVENT statement are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8d2cfe5451a66b70802b0418122b815fa5cd27" translate="yes" xml:space="preserve">
          <source>The mix of handlers in the partitions is not allowed in this version of MariaDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025abb12dcfdf5a3c830abb7602db926c78ccdc6" translate="yes" xml:space="preserve">
          <source>The module must be linked to the &lt;code&gt;ha_connect.lib&lt;/code&gt; of the binary version it will used with. Recent distributions add this lib in the plugin directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39103da5be51b0288a5195a902cdf70625e4e919" translate="yes" xml:space="preserve">
          <source>The module selects data from disk and caches it in a shared-nothing buffer that is part of the server on which it runs. You can configure as many Performance modules as you want. Each additional module increases the size of the cache of the overall database as well as the amount of processing power available to you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8830093b5eca1c40079d2fc7cb1a0a25e0833b89" translate="yes" xml:space="preserve">
          <source>The module/system is performing an initialization task at startup time before going to the ACTIVE state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d42c1b3c6c1390ea716c0975aaf8b7ddb8af214" translate="yes" xml:space="preserve">
          <source>The modules PM2 and PM3 will be enabled and started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9bfca27aa126d522cdaefefd3f43fc086b47f3" translate="yes" xml:space="preserve">
          <source>The modules PM2 and PM3 will be stopped and disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16d11fed166efc7cddebcd4e5623de0543f1370" translate="yes" xml:space="preserve">
          <source>The most common ones have a value for all built-in errors, and can be read both via SQL and via the API:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bce29524fb967f44c1eebbaa87dc5ac35f1280e" translate="yes" xml:space="preserve">
          <source>The most common way that binlog sequence gets different between servers is when the user/DBA does updates directly on a slave server (and these updates are written into the slaves binlog). This results in events in the slaves binlog that are not present on the master or any other slaves. This can be avoided by setting the session variable sql_log_bin false while doing such updates, so they do not go into the binlog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1fb34ae968c23a32e4c0ac8e2a3998f932122b4" translate="yes" xml:space="preserve">
          <source>The most human-readable way to get information about a table's foreign keys sometimes is the &lt;code&gt;&lt;a href=&quot;../show-create-table/index&quot;&gt;SHOW CREATE TABLE&lt;/a&gt;&lt;/code&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91691d05ab47bc8cef4fe03767ced2681e6a50f3" translate="yes" xml:space="preserve">
          <source>The most important &lt;a href=&quot;../server-system-variables/index&quot;&gt;server system variable&lt;/a&gt; is &lt;a href=&quot;../xtradbinnodb-server-system-variables/index#innodb_buffer_pool_size&quot;&gt;innodb_buffer_pool_size&lt;/a&gt;, which you can set from 70-80% of the total available memory on a dedicated database server with only or primarily XtraDB/InnoDB tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a109db639c649dbd951067ed710bc3540fdc21ed" translate="yes" xml:space="preserve">
          <source>The most important data that is not available in tabula &lt;code&gt;ANALYZE&lt;/code&gt; statement are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4481c5bc38b51cb656c6bae57aa9892253a78c2" translate="yes" xml:space="preserve">
          <source>The most important information to watch are &lt;code&gt;Master_Log_File&lt;/code&gt; and &lt;code&gt;Exec_Master_Log_Pos&lt;/code&gt; as when this matches the master, it signals that all transactions has been committed on the slave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b47c92d14a6e53b8cdf42a931f0b149c19d90d4" translate="yes" xml:space="preserve">
          <source>The most important memory buffer used by InnoDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc20a0ae39c5fcff4abe1e59ee373e417a815fc0" translate="yes" xml:space="preserve">
          <source>The most important ways for doing this are using &lt;code&gt;SQL_MODE&lt;/code&gt; (controlled by the &lt;a href=&quot;../server-system-variables/index#sql_mode&quot;&gt;sql_mode&lt;/a&gt; system variable) and &lt;a href=&quot;../old_mode/index&quot;&gt;OLD_MODE&lt;/a&gt; (the &lt;a href=&quot;../server-system-variables/index#old_mode&quot;&gt;old_mode&lt;/a&gt; system variable). &lt;code&gt;SQL_MODE&lt;/code&gt; is used for getting MariaDB to emulate behavior from other SQL servers, while &lt;a href=&quot;../old_mode/index&quot;&gt;OLD_MODE&lt;/a&gt; is used for emulating behavior from older MariaDB or MySQL versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1487c5b9a7ef69d4c556606c23b69a40711f67a" translate="yes" xml:space="preserve">
          <source>The most important ways for doing this are with &lt;a href=&quot;../sql-mode/index&quot;&gt;SQL_MODE&lt;/a&gt; and &lt;code&gt;OLD_MODE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ebdb295230776ad6c8ffb12a2421047319063e" translate="yes" xml:space="preserve">
          <source>The most recent changes in the code are aimed at meeting the OpenGIS requirements. One thing missed in previous versions is that the functions which check spatial relations didn't consider the actual shape of an object, instead they operate only on their bounding rectangles. These legacy functions have been left as they are and new, properly-working functions are named with an '&lt;code&gt;ST_&lt;/code&gt;' prefix, in accordance with the latest OpenGIS requirements. Also, operations over geometry features were added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea91230350e0906dbe81a37c3766c32a9534ca9d" translate="yes" xml:space="preserve">
          <source>The most recent changes in the code are aimed at meeting the OpenGIS requirements. One thing missing in the present version is that the functions which check spatial relations don't consider the actual shape of an object, instead they operate only on their bounding rectangles. These legacy functions have been left as they are, and new, properly-working functions are named with an '&lt;code&gt;ST_&lt;/code&gt;' prefix, in accordance with the last OpenGIS requirements. Also, operations over geometry features were added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8927ee8bf703e3c5b867b5f001dbef19da30ee7" translate="yes" xml:space="preserve">
          <source>The most recent release of &lt;a href=&quot;../what-is-mariadb-103/index&quot;&gt;MariaDB 10.3&lt;/a&gt; is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bf3d1fa5cc7c5ae8dffc0b736f3c0e8bbdff89" translate="yes" xml:space="preserve">
          <source>The most recent release of &lt;a href=&quot;../what-is-mariadb-104/index&quot;&gt;MariaDB 10.4&lt;/a&gt; is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="510aad29aeb4b28db25f8aa1182503a1d82745a9" translate="yes" xml:space="preserve">
          <source>The most simple way to cause SELinux to allow outbound HTTPS connections from MariaDB is to enable to mysql_connect_any boolean, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3379af220fcdc1bd7dea090776d1ea12c75daf12" translate="yes" xml:space="preserve">
          <source>The mtr driver has special support for MariaDB plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f1c4e5d0365e1c28a556c68d7a5fe6cf0e3085" translate="yes" xml:space="preserve">
          <source>The mysql Database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd412e0195717874e51832ae5b89126546403e9b" translate="yes" xml:space="preserve">
          <source>The mysql Database Tables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd9a5a9623b88f3384007c9667913d6fc74db54" translate="yes" xml:space="preserve">
          <source>The mysql command-line client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3740638af6da717930814af0a7d7581b05e246c" translate="yes" xml:space="preserve">
          <source>The mysql command-line client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4acd76bccc60ca4595e4c55eb4092ebe88d3d751" translate="yes" xml:space="preserve">
          <source>The mysql-test framework utilizes many other files that affect the testing process, in addition to test and result files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4016919673a0ef4a689902f6648bc8f2eed9d850" translate="yes" xml:space="preserve">
          <source>The mysql-test-run Stop File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085f2d790f9f945baf5dc9e88dd23b336d1a771e" translate="yes" xml:space="preserve">
          <source>The mysql.proc schema</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ac9e3df7fca97b9051580154c7f63761894133" translate="yes" xml:space="preserve">
          <source>The mysql_history File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e14709ebce2bf917a111d95140069a22f3786a" translate="yes" xml:space="preserve">
          <source>The mysql_old_password authentication plugin uses the pre-MySQL 4.1 password hashing algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6acfa17d9e269d600b11f38f49fb5a52649a42d" translate="yes" xml:space="preserve">
          <source>The mysqld binary to be used. Note that you can also specify &lt;a href=&quot;../mysqld_safe/index&quot;&gt;mysqld_safe&lt;/a&gt; as the value for this option. If you use mysqld_safe to start the server, you can include the &lt;code&gt;mysqld&lt;/code&gt; or &lt;code&gt;ledir&lt;/code&gt; options in the corresponding &lt;code&gt;[mysqldN]&lt;/code&gt; option group. These options indicate the name of the server that mysqld_safe should start and the path name of the directory where the server is located. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88eb0c2249b5093ee8189d9778eab7e766100577" translate="yes" xml:space="preserve">
          <source>The naive way to execute the above is to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313a56890c0125b141fa63fbaedccd647e270387" translate="yes" xml:space="preserve">
          <source>The name of a column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d070e546d092a0dde8758c3ccd667f09b6572f9f" translate="yes" xml:space="preserve">
          <source>The name of an option file to be read in addition to the usual option files. This must be the first option on the command line if it is used. If the file does not exist or is otherwise inaccessible, the server will exit with an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568bd470c23ad4d9e02ee5a7ff490cafcb17a9d7" translate="yes" xml:space="preserve">
          <source>The name of an option file to be read instead of the usual option files. This must be the first option on the command line if it is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fdd062d81ef17ec8e3c70c1d16da1d612135e64" translate="yes" xml:space="preserve">
          <source>The name of the Mariabackup executable that performed the backup. This is generally &lt;code&gt;mariabackup&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07aea1ecfec91ea61fc4ff64409e45a94b717b3f" translate="yes" xml:space="preserve">
          <source>The name of the SPECIAL column that set this column value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b761f052acbdf69d84ddc88a8d560f158ccc0df6" translate="yes" xml:space="preserve">
          <source>The name of the aggregate function used for the data columns, SUM by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd004f20876c1f1ffa7b8f94d703fb3f9189e6d" translate="yes" xml:space="preserve">
          <source>The name of the database containing the source table. Defaults to the current database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6686054cc4507fea80c14cb7768bd3bcdc45164b" translate="yes" xml:space="preserve">
          <source>The name of the federated server or server host used by a MYSQL table. &amp;ldquo;ODBC&amp;rdquo; for an ODBC table, &quot;JDBC&quot; for a JDBC table and &amp;ldquo;Current&amp;rdquo; for all other tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028a3fb77cc61b06353208428e4c1d56ab01bde5" translate="yes" xml:space="preserve">
          <source>The name of the key cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0895f83422dfc8414e50456c74ffef26bdfcb353" translate="yes" xml:space="preserve">
          <source>The name of the key that is used to retrieve rows. &lt;code&gt;NULL&lt;/code&gt; is no key was used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0540049b89d69cc273b86ee60849000ff1a82ed" translate="yes" xml:space="preserve">
          <source>The name of the partition this row belongs to. Specific to partitioned tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c073def6e58b831d03e16b1cfadae287d06032" translate="yes" xml:space="preserve">
          <source>The name of the property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c67138976a4e76b50807f9296f3df8530d2fd9" translate="yes" xml:space="preserve">
          <source>The name of the server program (in the ledir directory) that you want to start. This option is needed if you use the MariaDB binary distribution but have the data directory outside of the binary distribution. If mysqld_safe cannot find the server, use the &lt;code&gt;--ledir&lt;/code&gt; option to indicate the path name to the directory where the server is located.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bcfe280d9b8b6318d5b5a6245bd0d8a2da6a1ef" translate="yes" xml:space="preserve">
          <source>The name of the standard or standards body that is being cited for this reference system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e6aed29991ed6f3481229ca1f00f048c480c4a" translate="yes" xml:space="preserve">
          <source>The name of the table can be arbitrary. However, primary key, column names, and types must &quot;match&quot; those of Cassandra.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1eab2e6e01f44f0069e954193464396413e2298" translate="yes" xml:space="preserve">
          <source>The name of the table this row belongs to. Useful for TBL tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11176c24973303075143a3a9c3dcd1cacd8cff55" translate="yes" xml:space="preserve">
          <source>The name of the table to &amp;ldquo;pivot&amp;rdquo;. If not set SrcDef must be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9903f9730a4a3bc407099b3feba81f7127c645" translate="yes" xml:space="preserve">
          <source>The name of the table to access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2ec87498587ff0c215fbb2a7c4d394080c643c" translate="yes" xml:space="preserve">
          <source>The native &lt;code&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/desktop/api/threadpoolapiset/nf-threadpoolapiset-createthreadpool&quot;&gt;CreateThreadpool&lt;/a&gt;&lt;/code&gt; API allows applications to set the minimum and maximum number of threads in the pool. The following system variables can be used to configure those values on Windows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512c8371f7ea455b136948156b3684c3c629337f" translate="yes" xml:space="preserve">
          <source>The negative form &lt;a href=&quot;../not-regexp/index&quot;&gt;NOT REGEXP&lt;/a&gt; also exists, as an alias for &lt;code&gt;NOT (string REGEXP pattern)&lt;/code&gt;. RLIKE and NOT RLIKE are synonyms for REGEXP and NOT REGEXP, originally provided for mSQL compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4693e51c88a9c380a915f6fa7743d20ae44a110" translate="yes" xml:space="preserve">
          <source>The new buffer pool size must be a multiple of &lt;a href=&quot;../xtradbinnodb-server-system-variables/index#innodb_buffer_pool_chunk_size&quot;&gt;innodb_buffer_pool_chunk_size&lt;/a&gt; * &lt;a href=&quot;../xtradbinnodb-server-system-variables/index#innodb_buffer_pool_instances&quot;&gt;innodb_buffer_pool_instances&lt;/a&gt;. If you attempt to set a different figure, the value is automatically adjusted to a multiple of at least the attempted size. Note that adjusting the &lt;a href=&quot;../xtradbinnodb-server-system-variables/index#innodb_buffer_pool_chunk_size&quot;&gt;innodb_buffer_pool_chunk_size&lt;/a&gt; setting can result in a change in the buffer pool size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280f794d354a3dbe6309c1d08c31de7177998cc8" translate="yes" xml:space="preserve">
          <source>The new key file would look something like the following after this step:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915d835a3470da9a58dbbc78f18239a5227bbd93" translate="yes" xml:space="preserve">
          <source>The new node only needs to connect to one of the existing cluster nodes. Once it connects to one of the existing cluster nodes, it will be able to see all of the nodes in the cluster. However, it is generally better to list all nodes of the cluster in &lt;code&gt;&lt;a href=&quot;../galera-cluster-system-variables/index#wsrep_cluster_address&quot;&gt;wsrep_cluster_address&lt;/a&gt;&lt;/code&gt;, so that any node can join a cluster by connecting to any of the other cluster nodes, even if one or more of the cluster nodes are down. It is even OK to list a node's own IP address in &lt;code&gt;&lt;a href=&quot;../galera-cluster-system-variables/index#wsrep_cluster_address&quot;&gt;wsrep_cluster_address&lt;/a&gt;&lt;/code&gt;, since Galera Cluster is smart enough to ignore it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d2c2d81c8e29767ce218e33357a22a4001cf65" translate="yes" xml:space="preserve">
          <source>The new replication variable &lt;a href=&quot;../replication-and-binary-log-server-system-variables/index#default_master_connection&quot;&gt;default_master_connection&lt;/a&gt; specifies which connection will be used for commands and variables if you don't specify a connection. By default this is &lt;code&gt;''&lt;/code&gt; (the default connection name).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4af01baa5ae40b13b7b6f1e15f70b157b5d6698" translate="yes" xml:space="preserve">
          <source>The new slave can then start replicating from the master by setting the correct value for &lt;code&gt;&lt;a href=&quot;#gtid_slave_pos&quot;&gt;gtid_slave_pos&lt;/a&gt;&lt;/code&gt;, and then executing &lt;code&gt;&lt;a href=&quot;../change-master-to/index&quot;&gt;CHANGE MASTER&lt;/a&gt;&lt;/code&gt; with the relevant values for the master, and then starting the &lt;a href=&quot;../replication-threads/index#threads-on-the-slave&quot;&gt;slave threads&lt;/a&gt; by executing &lt;code&gt;&lt;a href=&quot;../start-slave/index&quot;&gt;START SLAVE&lt;/a&gt;&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41eb7475358c8fb58664999843f12c37149b687b" translate="yes" xml:space="preserve">
          <source>The new syntax introduced to handle many connections:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd54c8579fd3a049fa56ed2efef10f09c787711" translate="yes" xml:space="preserve">
          <source>The new variant would be ?topic=xyz&amp;amp;id=12345&amp;amp;limit=10. (Note: the 12345 is not computable from 4999.) By using INDEX(topic, id) you can efficiently say</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b0bcdd1c86463ce676938c7fb4f9ba3668d0473" translate="yes" xml:space="preserve">
          <source>The newline convention can be set by starting a pattern with one of the following sequences:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26263c47c02ab7cfe217caa1a7a1f17e7033580" translate="yes" xml:space="preserve">
          <source>The newline conversion affects the &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; assertions, the interpretation of the dot metacharacter, and the behavior of &lt;code&gt;\N&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c29cf271f82ad40649ee91e053053a32b0aafe3" translate="yes" xml:space="preserve">
          <source>The next 4 bytes indicate the geometry type. Values from 1 to 7 indicate whether the type is Point, LineString, Polygon, MultiPoint, MultiLineString, MultiPolygon, or GeometryCollection respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f986c46c1421e1ae442e1e7a8c8a5d6857dc35" translate="yes" xml:space="preserve">
          <source>The next section (&quot;Performance&quot;) should make this a bit clearer as it walks through some examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f10cd6fa1f61972b1cad983e806a1d016707a1b9" translate="yes" xml:space="preserve">
          <source>The next step would be to run the install script postConfigure, check the Single Server Or Multi-Server Install guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44edc5ae36ac1db08b37891883a83ae982e0c9f1" translate="yes" xml:space="preserve">
          <source>The next version of Aria is 2.0. The goal for this release is to develop a fully transactional storage engine with at least all the major features of InnoDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e74f2b4a9ce733c135f85f2a51268d7eb4bb302" translate="yes" xml:space="preserve">
          <source>The nodes that store the data will be designed as &lt;code&gt;Backend Nodes&lt;/code&gt;, and can be any MariaDB, MySQL, Oracle server instances using any storage engine available inside the backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9bfbe59030aa4e52bd85ad99c848dde70cc3ea2" translate="yes" xml:space="preserve">
          <source>The non-atomic pattern matches both &lt;code&gt;abbc&lt;/code&gt; and &lt;code&gt;abc&lt;/code&gt;, while the atomic pattern matches &lt;code&gt;abbc&lt;/code&gt; only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d453bdba545ba25cb0b9e29996d11631fd0d27" translate="yes" xml:space="preserve">
          <source>The non-file partial backup options support regex in the database and table names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d01fc4eac0467e4d8f3a105091cd5c3db930663" translate="yes" xml:space="preserve">
          <source>The normal procedures to copy a table is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cabd1058e78bab05ad4eb141a72751b79e34560" translate="yes" xml:space="preserve">
          <source>The normal solution for this is to ignore the &lt;code&gt;my.cnf&lt;/code&gt; file in &lt;code&gt;/etc&lt;/code&gt; when you use the programs in the tar file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0f37365f45f74b433f2d9f20d3f99586ddab92" translate="yes" xml:space="preserve">
          <source>The normal steps are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07765351a66ca661d755e670478afe03ed14930b" translate="yes" xml:space="preserve">
          <source>The normal way to count &quot;Unique Users&quot; is to take large log files, sort by userid, dedup, and count. This requires a rather large amount of processing. Furthermore, the count derived cannot be rolled up. That is, daily counts cannot be added to get weekly counts -- some users will be counted multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7fe142068a34f30465a1929d8415c599d536fc" translate="yes" xml:space="preserve">
          <source>The normal way to set up a new replication slave is to take a backup from an existing server (either a master or slave in the replication topology), and then restore that backup on the server acting as the new slave, and the configure it to start replicating from the appropriate position in the master's binary log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e908f25f6fb5864fa718b37c2ae2848aa41bc8" translate="yes" xml:space="preserve">
          <source>The notation with exponent can be used. The exponent is preceded by an &lt;code&gt;E&lt;/code&gt; or &lt;code&gt;e&lt;/code&gt; character. The exponent can be preceded by a sign and must be an integer. A number &lt;code&gt;N&lt;/code&gt; with an exponent part &lt;code&gt;X&lt;/code&gt;, is calculated as &lt;code&gt;N * POW(10, X)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="271a09141846cedad76d3296b042e3a39a92951d" translate="yes" xml:space="preserve">
          <source>The novice, once he learns about indexing, decides to index lots of columns, one at a time. But...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e4267230cb37f552bd92b1f0fe68eefa6474a4" translate="yes" xml:space="preserve">
          <source>The number of &lt;a href=&quot;../secure-connections-overview/index&quot;&gt;TLS connections&lt;/a&gt; created for this client. (&amp;gt;= &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-1011-release-notes/&quot;&gt;MariaDB 10.1.1&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a0b2743092e6526c1158ee71688b28d101cbb6" translate="yes" xml:space="preserve">
          <source>The number of &lt;a href=&quot;../secure-connections/index&quot;&gt;TLS connections&lt;/a&gt; created for this user. (&amp;gt;= &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-1011-release-notes/&quot;&gt;MariaDB 10.1.1&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e23235ef483cab42632f8dc87c213cbb8ed81c5f" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;&lt;a href=&quot;../commit/index&quot;&gt;COMMIT&lt;/a&gt;&lt;/code&gt; commands issued by this client's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d2104908cde2a1a7e55bfdcbb6d8f1a5abf697" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;&lt;a href=&quot;../commit/index&quot;&gt;COMMIT&lt;/a&gt;&lt;/code&gt; commands issued by this user's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bfac856034d1625f22249b310d22de8326b0e27" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;&lt;a href=&quot;../rollback/index&quot;&gt;ROLLBACK&lt;/a&gt;&lt;/code&gt; commands issued by this client's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4438e7879357a53122db3f533273e09af0b929d" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;&lt;a href=&quot;../rollback/index&quot;&gt;ROLLBACK&lt;/a&gt;&lt;/code&gt; commands issued by this user's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16943604729fc605439da52625decadb005e0c0" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;&lt;a href=&quot;../select/index&quot;&gt;SELECT&lt;/a&gt;&lt;/code&gt; commands executed from this client's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c149c0b28e32382b0a0784e0e85e7434847dd5c" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;&lt;a href=&quot;../select/index&quot;&gt;SELECT&lt;/a&gt;&lt;/code&gt; commands executed from this user's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ec66d8ede33cdf6239bba325dc2d543e475f34" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;&lt;a href=&quot;../update/index&quot;&gt;UPDATE&lt;/a&gt;&lt;/code&gt; commands executed from this client's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99426923310edfb18aea3cfb772a83428c1066c" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;&lt;a href=&quot;../update/index&quot;&gt;UPDATE&lt;/a&gt;&lt;/code&gt; commands executed from this user's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff04bde030d176d200bf0abd0cc2a854b6a3528a" translate="yes" xml:space="preserve">
          <source>The number of Galera slave threads can be configured with the &lt;code&gt;&lt;a href=&quot;../galera-cluster-system-variables/index#wsrep_slave_threads&quot;&gt;wsrep_slave_threads&lt;/a&gt;&lt;/code&gt; system variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88806610df72783f9d84d77d168ee2a81d44ab26" translate="yes" xml:space="preserve">
          <source>The number of InnoDB page cleaner threads can be configured by setting the &lt;code&gt;&lt;a href=&quot;../xtradbinnodb-server-system-variables/index#innodb_page_cleaners&quot;&gt;innodb_page_cleaners&lt;/a&gt;&lt;/code&gt; system variable. This system variable can be set in a server &lt;a href=&quot;../configuring-mariadb-with-option-files/index#option-groups&quot;&gt;option group&lt;/a&gt; in an &lt;a href=&quot;../configuring-mariadb-with-option-files/index&quot;&gt;option file&lt;/a&gt; prior to starting up the server. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059923c2802f2aa513772dc3308d8d0e2084fe9b" translate="yes" xml:space="preserve">
          <source>The number of affected rows, or the result number of columns if the command would return a result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0395145806365e064548a00dcd5b2892fdc5ac" translate="yes" xml:space="preserve">
          <source>The number of bytes received from this client's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50b4db21f57f038318c5866c0dd3c7e8d43617b" translate="yes" xml:space="preserve">
          <source>The number of bytes received from this user's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3ec1e1c35596161ef15b8a494c2f1a5e828019" translate="yes" xml:space="preserve">
          <source>The number of bytes sent to this client's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e675097abd387133fdce736ff08818c1ba198f" translate="yes" xml:space="preserve">
          <source>The number of bytes sent to this user's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882172bfcb455343f21f7088178c3409ff23acf1" translate="yes" xml:space="preserve">
          <source>The number of bytes written to the &lt;a href=&quot;../binary-log/index&quot;&gt;binary log&lt;/a&gt; from this client's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0acfa0db203355d6be0ab19515c1ce15eedb258" translate="yes" xml:space="preserve">
          <source>The number of bytes written to the &lt;a href=&quot;../binary-log/index&quot;&gt;binary log&lt;/a&gt; from this user's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b151cdd067c8794e93adc9c1f216c1dad59767cf" translate="yes" xml:space="preserve">
          <source>The number of chunks as calculated by &lt;a href=&quot;../xtradbinnodb-server-system-variables/index#innodb_buffer_pool_size&quot;&gt;innodb_buffer_pool_size&lt;/a&gt; / &lt;a href=&quot;../xtradbinnodb-server-system-variables/index#innodb_buffer_pool_chunk_size&quot;&gt;innodb_buffer_pool_chunk_size&lt;/a&gt; should not exceed 1000 in order to avoid performance issues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3965a35c93285609c280fbf2d64e97276926e3c7" translate="yes" xml:space="preserve">
          <source>The number of columns in the table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f723cc1e485b1257047574cb5ea34a879a1f9bc4" translate="yes" xml:space="preserve">
          <source>The number of concurrent &lt;code&gt;INSERT DELAYED&lt;/code&gt; threads is limited by the &lt;code&gt;&lt;a href=&quot;../server-system-variables/index#max_delayed_threads&quot;&gt;max_delayed_threads&lt;/a&gt;&lt;/code&gt; server system variables. If it is set to 0, &lt;code&gt;INSERT DELAYED&lt;/code&gt; is disabled. The session value can be equal to the global value, or 0 to disable this statement for the current session. If this limit has been reached, the &lt;code&gt;DELAYED&lt;/code&gt; clause will be silently ignore for subsequent statements (no error will be produced).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7698962b2c7e8c6420d64f0cd55437b3d36b36" translate="yes" xml:space="preserve">
          <source>The number of concurrent connections for this client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c2e4379b267211f353cca00750d8d0b6e15ddd5" translate="yes" xml:space="preserve">
          <source>The number of concurrent connections for this user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275339691ffc35f423c577e138dfa627ca42d9c5" translate="yes" xml:space="preserve">
          <source>The number of connection attempts is limited by the &lt;code&gt;&lt;a href=&quot;../mysqld-options/index#-master-retry-count&quot;&gt;master_retry_count&lt;/a&gt;&lt;/code&gt; option. It can be set either on the command-line or in a server &lt;a href=&quot;../configuring-mariadb-with-option-files/index#option-groups&quot;&gt;option group&lt;/a&gt; in an &lt;a href=&quot;../configuring-mariadb-with-option-files/index&quot;&gt;option file&lt;/a&gt; prior to starting up the server. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e801f0be9e3156dc4d36caf50911dc1c5813df72" translate="yes" xml:space="preserve">
          <source>The number of connections created for this client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03612f0859ced285a3ac5554d22c7ff6ededf5d3" translate="yes" xml:space="preserve">
          <source>The number of connections created for this user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e87db72077d0c6c4ee6c235ed5dc8a2b8fcc13" translate="yes" xml:space="preserve">
          <source>The number of connections denied to this client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3585be08cf86ee6d39e6e831533d91272b89658" translate="yes" xml:space="preserve">
          <source>The number of connections denied to this user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec1954f85764b7a725f4d9fea5dd67f3dbfece8" translate="yes" xml:space="preserve">
          <source>The number of decimals displayed for all float columns is the column precision, the second argument of the column type option. Of course, integer columns have no decimals, although their formats specify some.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f87520fcd27bf3e64f9e6cc2db2ad2272917156" translate="yes" xml:space="preserve">
          <source>The number of decimals, defaults to the column precision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d4cc683c593a1738c956da1c931dc7d6718f113" translate="yes" xml:space="preserve">
          <source>The number of defined partitions can be optionally specified as &lt;code&gt;PARTITION count&lt;/code&gt;. This can be done to avoid specifying all partitions individually. But you can also declare each individual partition and, additionally, specify a &lt;code&gt;PARTITIONS count&lt;/code&gt; clause; in the case, the number of &lt;code&gt;PARTITION&lt;/code&gt;s must equal count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c7c246e150980fb266af243664d5d7bb26c57c9" translate="yes" xml:space="preserve">
          <source>The number of fields in &lt;code&gt;cur&lt;/code&gt; must match the number of fields in &lt;code&gt;rec&lt;/code&gt;. Otherwise, an error is reported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac82ffa16f4c0eee4256654f609ce3f51932165" translate="yes" xml:space="preserve">
          <source>The number of files that mysqld should be able to open. The option value is passed to ulimit -n. Note that you need to start mysqld_safe as root for this to work properly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58706b0364e8e1fd72717060173cd4de6c9c6879" translate="yes" xml:space="preserve">
          <source>The number of modified databases exceeds the maximum %d; the database names will not be included in the replication event metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500228c34936074443a308f4418cfd4c496cf784" translate="yes" xml:space="preserve">
          <source>The number of other commands executed from this client's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ae8da6ffffb749fa2835b348bc3cfd1958d5c4" translate="yes" xml:space="preserve">
          <source>The number of other commands executed from this user's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2320209d76fe953046a32b392a1a43312b45ba65" translate="yes" xml:space="preserve">
          <source>The number of permitted recursive calls is limited to &lt;a href=&quot;../server-system-variables/index#max_sp_recursion_depth&quot;&gt;max_sp_recursion_depth&lt;/a&gt;. If this variable is 0 (default), recursivity is disabled. The limit does not apply to stored functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d13cc7d6876fc68faf2103ad7825e06f135b7914" translate="yes" xml:space="preserve">
          <source>The number of purge threads can be set by configuring the &lt;code&gt;&lt;a href=&quot;../innodb-system-variables/index#innodb_purge_threads&quot;&gt;innodb_purge_threads&lt;/a&gt;&lt;/code&gt; system variable. This system variable can be specified as a command-line argument to &lt;code&gt;&lt;a href=&quot;../mysqld-options/index&quot;&gt;mysqld&lt;/a&gt;&lt;/code&gt; or it can be specified in a relevant server &lt;a href=&quot;../configuring-mariadb-with-option-files/index#option-groups&quot;&gt;option group&lt;/a&gt; in an &lt;a href=&quot;../configuring-mariadb-with-option-files/index&quot;&gt;option file&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d9f7b823b487b939ecdefb73e1e95abfb1344a" translate="yes" xml:space="preserve">
          <source>The number of records is limited by the value of the &lt;a href=&quot;../xtradbinnodb-server-system-variables/index#innodb_max_changed_pages&quot;&gt;innodb_max_changed_pages&lt;/a&gt; system variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6938d5a7180fb787842848cfcb87384335e64f" translate="yes" xml:space="preserve">
          <source>The number of records will match the value set in the &lt;code&gt;&lt;a href=&quot;../xtradbinnodb-server-system-variables/index#innodb_undo_logs&quot;&gt;innodb_undo_logs&lt;/a&gt;&lt;/code&gt; variable (by default 128).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b06fe58dd6176b1826df43b766ade6cd6c52aeb" translate="yes" xml:space="preserve">
          <source>The number of redo log files is configured by the &lt;a href=&quot;../innodb-system-variables/index#innodb_log_files_in_group&quot;&gt;innodb_log_files_in_group&lt;/a&gt; system variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd1fa42f8b2797a09890f55cd814e9be4c0e2c8" translate="yes" xml:space="preserve">
          <source>The number of rows affected by the slow query have been recorded in the slow query log since &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-1012-release-notes/&quot;&gt;MariaDB 10.1.2&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d24e1165d0a19793ee08ad4364781ffcacc5d6" translate="yes" xml:space="preserve">
          <source>The number of rows changed in the table, multiplied by the number of indexes changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790ffd4df5d6f9a203c6f7f70e4bbbf65c18b1bf" translate="yes" xml:space="preserve">
          <source>The number of rows changed in the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10f42eda95d0b9d39ef4e9a71d432a60b3e146c" translate="yes" xml:space="preserve">
          <source>The number of rows deleted by this client's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526607b8b5b44b7fc5523384644470fc1a37584f" translate="yes" xml:space="preserve">
          <source>The number of rows deleted by this user's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff28c27234f0be811f0ba485d26113c06551acb9" translate="yes" xml:space="preserve">
          <source>The number of rows each block of a &lt;a href=&quot;../connect-dos-and-fix-table-types/index&quot;&gt;FIX&lt;/a&gt;, &lt;a href=&quot;../connect-bin-table-type/index&quot;&gt;BIN&lt;/a&gt;, &lt;a href=&quot;../connect-dbf-table-type/index&quot;&gt;DBF&lt;/a&gt;, or &lt;a href=&quot;../connect-vec-table-type/index&quot;&gt;VEC&lt;/a&gt; table contains. For an &lt;a href=&quot;../connect-table-types-odbc-table-type-accessing-tables-from-other-dbms/index&quot;&gt;ODBC&lt;/a&gt; table this is the RowSet size option. For a &lt;a href=&quot;../connect-jdbc-table-type-accessing-tables-from-other-dbms/index&quot;&gt;JDBC&lt;/a&gt; table this is the fetch size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7dc335245133caffb8833e07e0d7ed19068c4b" translate="yes" xml:space="preserve">
          <source>The number of rows inserted by this client's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2809ea49af8e13b78533c7443d02ac374c08f60" translate="yes" xml:space="preserve">
          <source>The number of rows inserted by this user's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef13e0d0359a4b0c3dc725f6ecb5b1de0c1dd56" translate="yes" xml:space="preserve">
          <source>The number of rows read by this client's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e780373963550440cf44ea5eebb4c2c411cc6adb" translate="yes" xml:space="preserve">
          <source>The number of rows read by this user's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0f1f20659d33a140a81f76c9fbfafcb686847f" translate="yes" xml:space="preserve">
          <source>The number of rows read from the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e75d139cf84c7467ce96efcf2b5d6fcbb153ae" translate="yes" xml:space="preserve">
          <source>The number of rows read from this index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400d4103173248ad947a3ff93eb4f44e95c177d6" translate="yes" xml:space="preserve">
          <source>The number of rows returned by a query or grouping. All datatypes are supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e4187041dcf6c3e4b662febc0406130a2b3063" translate="yes" xml:space="preserve">
          <source>The number of rows sent by this client's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f58e84d554a2cbc7ef2b575fd23ae8ebe9108d2" translate="yes" xml:space="preserve">
          <source>The number of rows sent by this user's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f464204ea7884a16c413b62404c3515e971cfc" translate="yes" xml:space="preserve">
          <source>The number of rows the process has examined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c28dcea7d2320679cd623a94c9c876b202a874b" translate="yes" xml:space="preserve">
          <source>The number of rows updated by this client's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd573a2bce49a5a95968ee24ad16fbc614f3d6d" translate="yes" xml:space="preserve">
          <source>The number of rows updated by this user's connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ffbc0bfc92ef80c0053e3107f5ead4b4b7ae4d" translate="yes" xml:space="preserve">
          <source>The number of tests to execute before exiting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb151b76d3f0e5da2de440d33aacafd7895f8417" translate="yes" xml:space="preserve">
          <source>The number of the segment file containing the physical row</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06af4ca3afddaee8f9fc3707de51d9f90f9e5e65" translate="yes" xml:space="preserve">
          <source>The number of this client's connections that were terminated uncleanly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76eb3cee191651bb845e1b05ac257d0ee13d6b6e" translate="yes" xml:space="preserve">
          <source>The number of this user's connections that were terminated uncleanly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e7dacbd858e74725dfa2471e47dfc37eb3be13" translate="yes" xml:space="preserve">
          <source>The number of threads. The default is 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff80b932d78f64310a1cfd277b66d624dc8d617" translate="yes" xml:space="preserve">
          <source>The number of times a statement was aborted, because it was executed longer than its &lt;code&gt;&lt;a href=&quot;../aborting-statements-that-take-longer-than-a-certain-time-to-execute/index&quot;&gt;MAX_STATEMENT_TIME&lt;/a&gt;&lt;/code&gt; threshold. (&amp;gt;= &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-1011-release-notes/&quot;&gt;MariaDB 10.1.1&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82178e7826730b10259b6b656d8b1fb1ecb71d7" translate="yes" xml:space="preserve">
          <source>The number of times that semisynchronous replication has been switched off can be checked by looking at the value of the &lt;code&gt;&lt;a href=&quot;../semisynchronous-replication-plugin-status-variables/index#rpl_semi_sync_master_no_times&quot;&gt;Rpl_semi_sync_master_no_times&lt;/a&gt;&lt;/code&gt; status variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca12d9afe9f6742650e21e6d147a7f25664efeb" translate="yes" xml:space="preserve">
          <source>The number of times this client's connections issued commands that were denied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ba7b0ce0344bd09242efcb74fd3862b8e52ad4" translate="yes" xml:space="preserve">
          <source>The number of times this client's connections sent queries that returned no results to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a33a8d9518e31599a1cdb2587bfc8e9ced47635" translate="yes" xml:space="preserve">
          <source>The number of times this user's connections issued commands that were denied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e1e53a1b401cf898d6cf5bdc6dd1f924fa4170" translate="yes" xml:space="preserve">
          <source>The number of times this user's connections sent empty queries to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed182e8462a591504db94abc0ab35dd8304f1811" translate="yes" xml:space="preserve">
          <source>The number of warnings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89013974f6ed8523b4d3dfb976468ec71297ef13" translate="yes" xml:space="preserve">
          <source>The numbers, represented by '&lt;code&gt;######&lt;/code&gt;' in the syntax examples above specify the specific the minimum versions of MySQL and MariaDB that should execute the comment. The first number is the major version, the second 2 numbers are the minor version and the last 2 is the patch level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d204eed0dbca310b370a10a8f685ff3cb80bea" translate="yes" xml:space="preserve">
          <source>The numeric ID of the coordinate system in the above authority's catalog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3506dd93774b51c2e712526d0192bb85a5d234c" translate="yes" xml:space="preserve">
          <source>The numeric precision for the column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e06975402f75177ffdc7422cd8b2e0b56cfbd62" translate="yes" xml:space="preserve">
          <source>The numeric scale for the column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f941b7219dc3f325f9319750fd183a9fd66a489e" translate="yes" xml:space="preserve">
          <source>The object ID for the column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243a9bdd80f89727d48a8cf8fe7becfeebab20d4" translate="yes" xml:space="preserve">
          <source>The object ID for the extent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ba75f454cf10e55b630169556b4691203edb63" translate="yes" xml:space="preserve">
          <source>The object is filled with pairs corresponding to the given arguments. The key of each pair is made from the argument (default or specified) alias.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cbb2db76c9c836fd755e47bb85a094d0674ce63" translate="yes" xml:space="preserve">
          <source>The oemrest.mak file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9464abcb39c06086f9d0a6456c46af475df2db3" translate="yes" xml:space="preserve">
          <source>The old behavior, with 3 syncs to disk per (group) commit (and consequently lower performance), can be selected with the new &lt;code&gt;&lt;a href=&quot;../xtradbinnodb-server-system-variables/index#innodb_flush_log_at_trx_commit&quot;&gt;innodb_flush_log_at_trx_commit=3&lt;/a&gt;&lt;/code&gt; option. There is normally no benefit to doing this, however there are a couple of edge cases to be aware of.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f81ea031e3e9116048b856a5366a5377f95da58" translate="yes" xml:space="preserve">
          <source>The old syntax &lt;code&gt;TIMESTAMP(N)&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is the display width, is no longer supported. It was deprecated in MySQL 4.1.0 (released on 2003-04-03).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e39fae50f5b0d011adace73dcca01866bf4da25" translate="yes" xml:space="preserve">
          <source>The old thread pool introduced in MariaDB 5.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7874c0670ef5474fcb54b3eb36779fb23a06d5e7" translate="yes" xml:space="preserve">
          <source>The old, deprecated format can still be used if the value of the &lt;a href=&quot;../oqgraph-system-and-status-variables/index#oqgraph_allow_create_integer_latch&quot;&gt;oqgraph_allow_create_integer_latch&lt;/a&gt; system variable is changed from its default, &lt;code&gt;FALSE&lt;/code&gt;, to &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a335c70b667b8dfac7b677dbb67f06af8ffeec24" translate="yes" xml:space="preserve">
          <source>The one exception is &lt;a href=&quot;../count/index&quot;&gt;COUNT(*)&lt;/a&gt;, which counts rows, and doesn't look at whether a value is NULL or not. Compare for example, COUNT(x), which ignores the NULL, and COUNT(*), which counts it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c456a1e84375e00641283515e9375184ca1cf724" translate="yes" xml:space="preserve">
          <source>The one or two-digit hour in 12-hour or 24-hour format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c026f9c4c6ee7eeb73efdaf10b37ed35fb1cf2df" translate="yes" xml:space="preserve">
          <source>The one or two-digit minute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="638bbb66005100da868143c7ce05ab76f1da6feb" translate="yes" xml:space="preserve">
          <source>The one or two-digit month day.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a443787eb9a284f2b37d036b1a4ea2a0e16aed" translate="yes" xml:space="preserve">
          <source>The one or two-digit month number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0915379a7a958a369012839fa136caf834d5804e" translate="yes" xml:space="preserve">
          <source>The one or two-digit second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a6d8e13f1f83bd8805f4cb1382d23d0bae4754" translate="yes" xml:space="preserve">
          <source>The one table has one row per entity, and can grow as needed. (EAV needs many rows per entity.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fbf77e8235c90bd27a23cfe6d1f4d6f5230dce1" translate="yes" xml:space="preserve">
          <source>The one-letter AM/PM abbreviation (that is, AM is entered as &quot;A&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc163d1aafa69e59def20e40f4208ae1006e61c" translate="yes" xml:space="preserve">
          <source>The online &lt;a href=&quot;../explain-analyzer/index&quot;&gt;EXPLAIN Analyzer&lt;/a&gt; tool has an open API to allow client applications to send it EXPLAINs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9328ad1f2f033fa0cbd8b1f8032abb33e274df6" translate="yes" xml:space="preserve">
          <source>The online EXPLAIN Analyzer tool has an open API to allow client applicatio...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46ec5fe5f83639d2a503746d302b70cfc366e64" translate="yes" xml:space="preserve">
          <source>The only &lt;a href=&quot;../authentication-plugins/index&quot;&gt;authentication plugins&lt;/a&gt; that this clause supports are &lt;code&gt;&lt;a href=&quot;../authentication-plugin-mysql_native_password/index&quot;&gt;mysql_native_password&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../authentication-plugin-mysql_old_password/index&quot;&gt;mysql_old_password&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4886c1636f51d8957612b84ba0e225b4c64faeef" translate="yes" xml:space="preserve">
          <source>The only SST method of this type is the &lt;code&gt;mysqldump&lt;/code&gt; SST method, which actually uses the &lt;code&gt;&lt;a href=&quot;../mysqldump/index&quot;&gt;mysqldump&lt;/a&gt;&lt;/code&gt; utility to get a logical dump of the donor. This SST method requires the joiner node to be fully initialized and ready to accept connections before the transfer. This method is, by definition, blocking, in that it blocks the donor node from modifying its own state for the duration of the transfer. It is also the slowest of all, and that might be an issue in a cluster with a lot of load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670dd6cd1ca9241e4932f0df9e37bdda16958333" translate="yes" xml:space="preserve">
          <source>The only aggregated functions in the &lt;code&gt;SELECT&lt;/code&gt; part are &lt;code&gt;MIN()&lt;/code&gt; and &lt;code&gt;MAX()&lt;/code&gt; functions and all of them using the same column which is the next index part after the used &lt;code&gt;GROUP BY&lt;/code&gt; columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d198c36449ca1ac83a05a373c2100b37cdd22e99" translate="yes" xml:space="preserve">
          <source>The only algorithm that MariaDB currently supports to encrypt the key file is &lt;a href=&quot;https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#CBC&quot;&gt;Cipher Block Chaining (CBC)&lt;/a&gt; mode of &lt;a href=&quot;https://en.wikipedia.org/wiki/Advanced_Encryption_Standard&quot;&gt;Advanced Encryption Standard (AES)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faaf284be2a03f02120e07e905b3f1ca0c5df693" translate="yes" xml:space="preserve">
          <source>The only algorithm that MariaDB currently supports when decrypting the key file is &lt;a href=&quot;https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#CBC&quot;&gt;Cipher Block Chaining (CBC)&lt;/a&gt; mode of &lt;a href=&quot;https://en.wikipedia.org/wiki/Advanced_Encryption_Standard&quot;&gt;Advanced Encryption Standard (AES)&lt;/a&gt;. The encryption key size can be 128-bits, 192-bits, or 256-bits. The encryption key is calculated by taking a &lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-1&quot;&gt;SHA-1&lt;/a&gt; hash of the encryption password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e0a5d613e4eedbd072899e2de714adecb2bcf9" translate="yes" xml:space="preserve">
          <source>The only data modifying operations are the &lt;a href=&quot;../insert/index&quot;&gt;INSERT&lt;/a&gt; , &lt;a href=&quot;../update/index&quot;&gt;UPDATE&lt;/a&gt; and &lt;a href=&quot;../delete/index&quot;&gt;DELETE&lt;/a&gt; commands. They can be executed successfully only if the data source database or tables are not read/only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a7056e98ca1016d6f3048d4342f86055e2e9877" translate="yes" xml:space="preserve">
          <source>The only difference is that the &quot;multiple&quot; node is an intermediate node in the path. The resulting table can be seen with a query such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c047a4efa8e0765dd2b5128b19c76d710705e39" translate="yes" xml:space="preserve">
          <source>The only difference is the tabname option now referring to the rt1, rt2, and rt3 tables. However, even if it works, this is not the best way to do it. This is because accessing a table via the MySQL API is done twice per table. Once by CONNECT to access the FEDERATED table on the local server, then a second time by FEDERATED engine to access the remote table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff6bdadda63d3ce8e678cb31e9c5520b0b20479" translate="yes" xml:space="preserve">
          <source>The only option with &lt;a href=&quot;../xtradbinnodb-server-system-variables/index#innodb_file_per_table&quot;&gt;innodb_file_per_table = 0&lt;/a&gt; is to dump ALL tables, remove ibdata*, restart, and reload. That is rarely worth the effort and time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b94f1706a7fc60ec6495f25dc3113f52b546dd5" translate="yes" xml:space="preserve">
          <source>The only possible long operations are getting the locks for the table and flushing the original key cache, if there were many key blocks for the file in it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20e0d31630d8953910c4bca10bc01a8e3800b97" translate="yes" xml:space="preserve">
          <source>The only supported method currently is zlib.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7820753074f9f26846eac3dd8e628ac3d16f084a" translate="yes" xml:space="preserve">
          <source>The open table cache can be emptied with &lt;a href=&quot;../flush/index&quot;&gt;FLUSH TABLES&lt;/a&gt; or with the &lt;code&gt;flush-tables&lt;/code&gt; or &lt;code&gt;refresh&lt;/code&gt;&lt;a href=&quot;../mysqladmin/index&quot;&gt;mysqladmin&lt;/a&gt; commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77bc1b4e3a2f54eae7a0d2c39c046f5dbe3518f" translate="yes" xml:space="preserve">
          <source>The operation inserts one record at a time into each index, which is very inefficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef6705f67502e1e5a8041d4ba560e25d1025a9a" translate="yes" xml:space="preserve">
          <source>The operation is also crash safe. If the server is killed while executing an instant &lt;code&gt;&lt;a href=&quot;../alter-table/index#add-column&quot;&gt;ALTER TABLE ... ADD COLUMN&lt;/a&gt;&lt;/code&gt;, when the table is restored InnoDB integrates the new column, flattening the table definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9aca32873ef0f0c6c18b42b01b3ae8cfdf2b57" translate="yes" xml:space="preserve">
          <source>The operation might also have to write a temporary log file to track data changes by &lt;a href=&quot;../data-manipulation/index&quot;&gt;DML queries&lt;/a&gt; executed during the operation. The maximum size for this log file is configured by the &lt;code&gt;&lt;a href=&quot;../innodb-system-variables/index#innodb_online_alter_log_max_size&quot;&gt;innodb_online_alter_log_max_size&lt;/a&gt;&lt;/code&gt; system variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d49bb20167c960a2e9981ad1d27ec44cb60148" translate="yes" xml:space="preserve">
          <source>The operation might have to write sort files in the directory defined by the &lt;code&gt;&lt;a href=&quot;../innodb-system-variables/index#innodb_tmpdir&quot;&gt;innodb_tmpdir&lt;/a&gt;&lt;/code&gt; system variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c858112cba06acb4d1c11e7ccc1eb384385d886" translate="yes" xml:space="preserve">
          <source>The operation will have to create a temporary table to perform the the table copy. This temporary table will be in the same directory as the original table, and it's file name will be in the format &lt;code&gt;&lt;code&gt;#&lt;/code&gt;sql${PID}_${THREAD_ID}_${TMP_TABLE_COUNT}&lt;/code&gt;, where &lt;code&gt;${PID}&lt;/code&gt; is the process ID of &lt;code&gt;mysqld&lt;/code&gt;, &lt;code&gt;${THREAD_ID}&lt;/code&gt; is the connection ID, and &lt;code&gt;${TMP_TABLE_COUNT}&lt;/code&gt; is the number of temporary tables that the connection has open. Therefore, the &lt;code&gt;&lt;a href=&quot;../server-system-variables/index#datadir&quot;&gt;datadir&lt;/a&gt;&lt;/code&gt; may contain files with file names like &lt;code&gt;&lt;code&gt;#&lt;/code&gt;sql1234_12_1.ibd&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc896220a2a7ef8c165ab12393ade3ada89b6279" translate="yes" xml:space="preserve">
          <source>The opportunities for parallel replication on slaves can be highly increased if more transactions are committed in a &lt;a href=&quot;../group-commit-for-the-binary-log/index&quot;&gt;group commit&lt;/a&gt; on the master. This can be tuned using the &lt;a href=&quot;../replication-and-binary-log-server-system-variables/index#binlog_commit_wait_count&quot;&gt;binlog_commit_wait_count&lt;/a&gt; and &lt;a href=&quot;../replication-and-binary-log-server-system-variables/index#binlog_commit_wait_usec&quot;&gt;binlog_commit_wait_usec&lt;/a&gt; variables. If for example the application can tolerate up to 50 milliseconds extra delay for transactions on the master, one can set &lt;code&gt;binlog_commit_wait_usec=50000&lt;/code&gt; and &lt;code&gt;binlog_commit_wait_count=20&lt;/code&gt; to get up to 20 transactions at a time available for replication in parallel. Care must however be taken to not set &lt;code&gt;binlog_commit_wait_usec&lt;/code&gt; too high, as this could cause significant slowdown for applications that run a lot of small transactions serially one after the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6246a69b5e40eab8fb1864a0e13981fb029e518f" translate="yes" xml:space="preserve">
          <source>The opposite, city-to-country way is not possible. This is not a semi-join.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8065c902d9402e98ce4e6ca247ac188829ed8c7" translate="yes" xml:space="preserve">
          <source>The optimization is ON by default, it can be switched off like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784686a9953c35a1749c7cd56517bcbe5b034551" translate="yes" xml:space="preserve">
          <source>The optimization is applied then the derived table could not be merged into its parent SELECT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c9ae4aaa70d8e7f4f616e6953619c180fd5009" translate="yes" xml:space="preserve">
          <source>The optimization is controlled by the &lt;code&gt;exists_to_in&lt;/code&gt; flag in &lt;a href=&quot;../server-system-variables/index#optimizer_switch&quot;&gt;optimizer_switch&lt;/a&gt;. Before &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-10012-release-notes/&quot;&gt;MariaDB 10.0.12&lt;/a&gt;, the optimization was OFF by default. Since &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-10012-release-notes/&quot;&gt;MariaDB 10.0.12&lt;/a&gt;, it has been ON by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5fd43055055458a36a5e92fb4a6f1f73ba75ed" translate="yes" xml:space="preserve">
          <source>The optimization is enabled by default. It can be disabled with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b7b8572eb5bfbd138e160a5f7939122d956b3b" translate="yes" xml:space="preserve">
          <source>The optimization is enabled by default. One can disable it by setting &lt;code&gt;@@optimizer_switch&lt;/code&gt; flag &lt;code&gt;condition_pushdown_for_derived&lt;/code&gt; to OFF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f403042203be891bdfd038ad79033a21fada04b8" translate="yes" xml:space="preserve">
          <source>The optimization needs to be supported by the storage engine. At the moment, it is supported by InnoDB and MyISAM. It is not supported in partitioned tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b0bc5b2adb220e5c2888a01fc607d1dbc101bf" translate="yes" xml:space="preserve">
          <source>The optimization phase can do the following changes to the &lt;code&gt;WHERE&lt;/code&gt; clause:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd4f16712d685818568bc481a2469fc3b59f283" translate="yes" xml:space="preserve">
          <source>The optimization was ported into &lt;a href=&quot;../what-is-mariadb-100/index&quot;&gt;MariaDB 10.0&lt;/a&gt; in version 10.0.0. The server would not give any indication of whether the optimization was used, though. (This is how the feature was designed by Oracle. In MySQL 5.6, the only way one can see this feature is to examine the optimizer_trace, which is not currently supported by MariaDB).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dddebb3a92525ad76a80ee30df18e376b7f824a" translate="yes" xml:space="preserve">
          <source>The optimizer chose to do a full scan over the materialized table, so this is an example of a use of the Materialization-Scan strategy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f61516a5e42bc0fe6a13c2112a4b33eea73a34d" translate="yes" xml:space="preserve">
          <source>The optimizer does various plan pruning and may discard the requested join order before it has a chance to find out that it is a million-times cheaper than any other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9619366e2ff7c5dc6c2a120cb55188dfc031b39" translate="yes" xml:space="preserve">
          <source>The optimizer doesn't use data from statistics tables. Default for &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-1040-release-notes/&quot;&gt;MariaDB 10.4.0&lt;/a&gt; and below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3df5731ba300fdb1dbdb02b6b290109c5bc11d7" translate="yes" xml:space="preserve">
          <source>The optimizer is largely cost-based and will try to choose the optimal plan for any query. However in some cases it does not have enough information to choose a perfect plan and in these cases you may have to provide hints to force the optimizer to use another plan.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38940d0c3e12119bf8f0665646ccf399b632b159" translate="yes" xml:space="preserve">
          <source>The optimizer makes a cost-based decision about when the filter should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efbe67fe5aa6a944e197641a0ad274eb5a476c70" translate="yes" xml:space="preserve">
          <source>The optimizer starts a range scan on the &lt;em&gt;salary&lt;/em&gt; index. We find the first record &lt;em&gt;Babatunde, 1000&lt;/em&gt;. If we do an on-the-fly update, we immediately instruct the storage engine to change this record to be &lt;em&gt;Babatunde, 1000+100=1100&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4bfa2428641fa797c541ea5d39250ce8bbc87e" translate="yes" xml:space="preserve">
          <source>The optimizer uses data from statistics tables if the same kind of data is not provided by the storage engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557fbfdad9a24ad66a388d7eff56c06b569f8514" translate="yes" xml:space="preserve">
          <source>The optimizer uses several strategies to optimize &lt;a href=&quot;../group-by/index&quot;&gt;GROUP BY&lt;/a&gt; and &lt;a href=&quot;../order-by/index&quot;&gt;ORDER BY&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acdbdb8507b361c703f69a443963057a659c0b88" translate="yes" xml:space="preserve">
          <source>The optimizer usually picks the &quot;first&quot; table based on these hints:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f233f736fc1eeb944bfeeca69f24df164c28c5f7" translate="yes" xml:space="preserve">
          <source>The optimizer usually starts with one table and extracts the data needed from it. As it finds a useful (that is, matches the WHERE clause, if any) row, it reaches into the 'next' table. This is called NLJ (&quot;Nested Loop Join&quot;). The process of filtering and reaching to the next table continues through the rest of the tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef577ae8acac5c0307bd14eead9c8d3dd949bfac" translate="yes" xml:space="preserve">
          <source>The optimizer will convert big IN predicates into subqueries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276f70a90150960a0adc2303b8ca5bb644ef060b" translate="yes" xml:space="preserve">
          <source>The optimizer will try its best to build a join plan which matches the specified join prefix. It does this by comparing join prefixes it is considering with &lt;code&gt;@@debug_optimizer_prefer_join_prefix&lt;/code&gt;, and multiplying cost by a million if the plan doesn't match the prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="910751b0d2067a9a0057743c38b2d81dd8606471" translate="yes" xml:space="preserve">
          <source>The optimizer will try to use indexes to resolve &lt;a href=&quot;../order-by/index&quot;&gt;ORDER BY&lt;/a&gt; and &lt;a href=&quot;../group-by/index&quot;&gt;GROUP BY&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8819f3fb7a2f4342a386b83503068337d507e6f7" translate="yes" xml:space="preserve">
          <source>The option &lt;code&gt;--check&lt;/code&gt; will be used by default, if no other options were specified. You can change the default behavior by making a symbolic link to the binary, or copying it somewhere with another name, the alternatives are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be9bef14fdc0774a788c3c272cab98fc0853bd8" translate="yes" xml:space="preserve">
          <source>The option &lt;strong&gt;read_binlog_speed_limit&lt;/strong&gt; can be used to reduce such load, by limiting the speed at which events are downloaded. The limit is given as maximum kilobytes per second to download on one slave connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681b5c152f39cc44f22367d62b5dca7efcfbc40d" translate="yes" xml:space="preserve">
          <source>The option &lt;strong&gt;read_binlog_speed_limit&lt;/strong&gt; is available starting from &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-1023-release-notes/&quot;&gt;MariaDB 10.2.3&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78c96202d95e224937c634256c494cf7965db29" translate="yes" xml:space="preserve">
          <source>The option can also be set in an &lt;a href=&quot;../configuring-mariadb-with-option-files/index&quot;&gt;option file&lt;/a&gt; in an &lt;a href=&quot;../configuring-mariadb-with-option-files/index#option-groups&quot;&gt;option group&lt;/a&gt; supported by &lt;code&gt;&lt;a href=&quot;../mysql_install_db/index&quot;&gt;mysql_install_db&lt;/a&gt;&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d988ebc481cbe685f1dc1ba374b68039f9e762cc" translate="yes" xml:space="preserve">
          <source>The option files are each scanned once, in the order given by &lt;code&gt;--help --verbose&lt;/code&gt;. The effect of the configuration options are as if they would have been given as command line options in the order they are found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e632326674b1ee1336154a76088f4150ff7654d2" translate="yes" xml:space="preserve">
          <source>The option files within the directory are read in alphabetical order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024b93996899dac4452d0af488ebad5ef73c60cb" translate="yes" xml:space="preserve">
          <source>The option module gives the name of the DLL or shared library implementing the OEM wrapper for the table type. This library must be located in the plugin directory like all other plugins or UDF&amp;rsquo;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c35e38e1394706ea1a1749a01fd89828ead4ec8" translate="yes" xml:space="preserve">
          <source>The option to disable the MariaDB ColumnStore User Module Replication is available since there are additional third party tools that can be used to do the Data Replication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12138c07bbe315d1f3cfca2c8cbeccfdd57a756a" translate="yes" xml:space="preserve">
          <source>The option value is passed to &lt;code&gt;ulimit -c&lt;/code&gt;. Note that you need to start &lt;code&gt;mysqld_safe&lt;/code&gt; as root for this to work properly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0f0052d0b4f4f9ca5f9dbb48848b58c4a2d490" translate="yes" xml:space="preserve">
          <source>The option value is passed to &lt;code&gt;ulimit -n&lt;/code&gt;. Note that you need to start &lt;code&gt;mysqld_safe&lt;/code&gt; as root for this to work properly. However, you can't currently set this to &lt;code&gt;unlimited&lt;/code&gt;. See &lt;a href=&quot;https://jira.mariadb.org/browse/MDEV-18410&quot;&gt;MDEV-18410&lt;/a&gt; about that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b0001b68ce7c4406801433c9db76935d489dee" translate="yes" xml:space="preserve">
          <source>The option was removed starting from &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-10218-release-notes/&quot;&gt;MariaDB 10.2.18&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70d0cc2c9c7ce33407410609e6046e3581a5110" translate="yes" xml:space="preserve">
          <source>The option's value can be specified by providing a comma-separated list of &lt;code&gt;&lt;a href=&quot;../gtid/index#gtid_domain_id&quot;&gt;gtid_domain_id&lt;/a&gt;&lt;/code&gt; values. Duplicate values are automatically ignored. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86715eac57b24c1470c174aa2d9d805b89b07db6" translate="yes" xml:space="preserve">
          <source>The option's value can be specified by providing a comma-separated list of &lt;code&gt;&lt;a href=&quot;../replication-and-binary-log-system-variables/index#server_id&quot;&gt;server_id&lt;/a&gt;&lt;/code&gt; values. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49209e3c826445078b6e98a0068ea22bf75be488" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;AND CHAIN&lt;/code&gt; clause is a convenience for initiating a new transaction as soon as the old transaction terminates. If &lt;code&gt;AND CHAIN&lt;/code&gt; is specified, then there is effectively nothing between the old and new transactions, although they remain separate. The characteristics of the new transaction will be the same as the characteristics of the old one &amp;mdash; that is, the new transaction will have the same access mode, isolation level and diagnostics area size (we'll discuss all of these shortly) as the transaction just terminated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b400c318df88565f200323e107195233c3b58776" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;AND CHAIN&lt;/code&gt; clause is a convenience for initiating a new transaction as soon as the old transaction terminates. If &lt;code&gt;AND CHAIN&lt;/code&gt; is specified, then there is effectively nothing between the old and new transactions, although they remain separate. The characteristics of the new transaction will be the same as the characteristics of the old one &amp;mdash; that is, the new transaction will have the same access mode, isolation level and diagnostics area size (we'll discuss all of these shortly) as the transaction just terminated. The &lt;code&gt;AND NO CHAIN&lt;/code&gt; option just tells your DBMS to end the transaction &amp;mdash; that is, these four SQL statements are equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825d5bec8d0c9af6b1f79be1893178becd669759" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;BLOCK_SIZE&lt;/code&gt; option gives the size of the table, defaulting to 1 if not specified. When its columns are not specified, it is almost equivalent to a &lt;a href=&quot;../sequence/index&quot;&gt;SEQUENCE&lt;/a&gt; table &amp;ldquo;seq_1_to_Size&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c39e0feda286ed85b928fb2ac878f9f5fb26db1" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;IDENTIFIED BY PASSWORD&lt;/code&gt; clause can be used to provide an account with a password that has already been hashed. The password should be specified as a hash that was provided by the &lt;code&gt;&lt;a href=&quot;../password/index&quot;&gt;PASSWORD&lt;/a&gt;&lt;/code&gt; function. It will be stored to the &lt;code&gt;&lt;a href=&quot;../mysqluser-table/index&quot;&gt;mysql.user&lt;/a&gt;&lt;/code&gt; table as-is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a16fee36b14684a5c80d2252a82be5f633a8f504" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;IDENTIFIED BY&lt;/code&gt; clause can be used to provide an account with a password. The password should be specified in plain text. It will be hashed by the &lt;code&gt;&lt;a href=&quot;../password/index&quot;&gt;PASSWORD&lt;/a&gt;&lt;/code&gt; function prior to being stored to the &lt;code&gt;&lt;a href=&quot;../mysqluser-table/index&quot;&gt;mysql.user&lt;/a&gt;&lt;/code&gt; table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa3df5310066243906f68856c9c097761556d65" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;IDENTIFIED VIA authentication_plugin&lt;/code&gt; allows you to specify that the account should be authenticated by a specific &lt;a href=&quot;../authentication-plugins/index&quot;&gt;authentication plugin&lt;/a&gt;. The plugin name must be an active authentication plugin as per &lt;code&gt;&lt;a href=&quot;../show-plugins/index&quot;&gt;SHOW PLUGINS&lt;/a&gt;&lt;/code&gt;. If it doesn't show up in that output, then you will need to install it with &lt;code&gt;&lt;a href=&quot;../install-plugin/index&quot;&gt;INSTALL PLUGIN&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../install-soname/index&quot;&gt;INSTALL SONAME&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b12b086e51e6958b651c8db99644c66d2e68d7a9" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;USING&lt;/code&gt; clause allows users to provide an authentication string to a plugin. The authentication string's format and meaning is completely defined by the plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5f7c82dafb28112bfcab04820efd980dec08cc" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;WITH ADMIN&lt;/code&gt; clause determines whether the current user, the current role or another user or role has use of the newly created role. If the clause is omitted, &lt;code&gt;WITH ADMIN CURRENT_USER&lt;/code&gt; is treated as the default, which means that the current user will be able to &lt;code&gt;&lt;a href=&quot;../grant/index#roles&quot;&gt;GRANT&lt;/a&gt;&lt;/code&gt; this role to users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4c953132f155cea095b0e4a21ef4a584715274" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;WORK&lt;/code&gt; keyword is supported for &lt;code&gt;COMMIT&lt;/code&gt; and &lt;code&gt;ROLLBACK&lt;/code&gt;, as are the &lt;code&gt;CHAIN&lt;/code&gt; and &lt;code&gt;RELEASE&lt;/code&gt; clauses. &lt;code&gt;CHAIN&lt;/code&gt; and &lt;code&gt;RELEASE&lt;/code&gt; can be used for additional control over transaction completion. The value of the &lt;a href=&quot;../server-system-variables/index#completion_type&quot;&gt;completion_type&lt;/a&gt; system variable determines the default completion behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="716a1109e547f96e4459a8e07f84d9ee425eee1e" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;options&lt;/em&gt; flag can be set to &lt;code&gt;1&lt;/code&gt; to add a bounding box to the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347be1bfff9ca406cb802098a35f6576599e678f" translate="yes" xml:space="preserve">
          <source>The optional &lt;em&gt;precision&lt;/em&gt; determines the microsecond precision. See &lt;a href=&quot;../microseconds-in-mariadb/index&quot;&gt;Microseconds in MariaDB&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a799e4bd5775252914f03aa29b67f42a444c0db" translate="yes" xml:space="preserve">
          <source>The optional ALGORITHM clause is an extension to standard SQL. It affects how MariaDB processes the view. ALGORITHM takes three values: MERGE, TEMPTABLE, or UNDEFINED. The default algorithm is UNDEFINED if no ALGORITHM clause is present. See &lt;a href=&quot;../view-algorithms/index&quot;&gt;View Algorithms&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb69c4d1b9e61591b64cda35295038ba092a9bbf" translate="yes" xml:space="preserve">
          <source>The optional AS clause permits casting the input string to a binary or non-binary string, as well as to a particular length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99305d8837af8b3e2e4b034552d6ef32a48a1a3a" translate="yes" xml:space="preserve">
          <source>The optional LEVEL clause specifies that the return value should contain weights for specific collation levels. The &lt;code&gt;levels&lt;/code&gt; specifier can either be a single integer, a comma-separated list of integers, or a range of integers separated by a dash (whitespace is ignored). Integers can range from 1 to a maximum of 6, dependent on the collation, and need to be listed in ascending order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4569decbf3ac0572684aa7b18838714e33126088" translate="yes" xml:space="preserve">
          <source>The optional clause &lt;code&gt;RESTART [ WITH restart ]&lt;/code&gt; sets the next value for the sequence. This is equivalent to calling the &lt;a href=&quot;../setval/index&quot;&gt;SETVAL()&lt;/a&gt; function with the &lt;code&gt;is_used&lt;/code&gt; argument as 0. The specified value will be returned by the next call of nextval. Using &lt;code&gt;RESTART&lt;/code&gt; with no restart value is equivalent to supplying the start value that was recorded by &lt;a href=&quot;../create-sequence/index&quot;&gt;CREATE SEQUENCE&lt;/a&gt; or last set by &lt;code&gt;ALTER SEQUENCE START WITH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e060ea3fd774e3533ade4324adb420766eb83c76" translate="yes" xml:space="preserve">
          <source>The optional name or pattern of the zip entry or entries to be used with the table. If not specified, all entries or only the first one will be used depending on the &lt;em&gt;mulentries&lt;/em&gt; option setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90fa82557b43170ba1bd3362ed49b14f63f879ab" translate="yes" xml:space="preserve">
          <source>The optional parameter can either be one or more &lt;em&gt;keywords&lt;/em&gt;, or a Groonga &lt;em&gt;query&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6b95ee44e1b10282bd0ce54eff1f81e29702b9" translate="yes" xml:space="preserve">
          <source>The optional parameters include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1590d770ea50d0ca6399977cfb9240b9d707e092" translate="yes" xml:space="preserve">
          <source>The optional parts of the format are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a17fa18b6df3148bf081e711e16b906e456eeb8" translate="yes" xml:space="preserve">
          <source>The options &lt;code&gt;HARD | SOFT&lt;/code&gt; and &lt;code&gt;USER username&lt;/code&gt; were introduced in &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-532-release-notes/&quot;&gt;MariaDB 5.3.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7469433148a8bb79a1b75e7454ba85c0530ff8db" translate="yes" xml:space="preserve">
          <source>The options and system variables related to &lt;a href=&quot;../semisynchronous-replication/index&quot;&gt;Semisynchronous Replication&lt;/a&gt; are described &lt;a href=&quot;../semisynchronous-replication/index#system-variables&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c2d077a0cc9bd2635cd8c5e48e8943e9c7badee" translate="yes" xml:space="preserve">
          <source>The options and system variables related to the &lt;a href=&quot;../mroonga/index&quot;&gt;Mroonga&lt;/a&gt; storage engine can be found &lt;a href=&quot;../mroonga-system-variables/index&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02833cd024c1ad4be93e8b97ad1711fe9281b7a3" translate="yes" xml:space="preserve">
          <source>The options and system variables related to the &lt;a href=&quot;../s3-storage-engine/index&quot;&gt;S3&lt;/a&gt; storage engine can be found &lt;a href=&quot;../s3-storage-engine-system-variables/index&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8536169c5e4a9a03f1a4d0e2f7d4e8ceadf4316" translate="yes" xml:space="preserve">
          <source>The options and system variables related to the &lt;a href=&quot;../spider/index&quot;&gt;Spider&lt;/a&gt; storage engine can be found &lt;a href=&quot;../spider-server-system-variables/index&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0735af617cecd5d12efa9f29b1cf6a602162af0a" translate="yes" xml:space="preserve">
          <source>The options and system variables related to the &lt;a href=&quot;../tokudb/index&quot;&gt;TokuDB&lt;/a&gt; storage engine can be found &lt;a href=&quot;../tokudb-system-variables/index&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b75d04f3e0708c86bfd08edb07badea0b5de939" translate="yes" xml:space="preserve">
          <source>The options elated to the &lt;code&gt;&lt;a href=&quot;../aws-key-management-encryption-plugin/index&quot;&gt;aws_key_management&lt;/a&gt;&lt;/code&gt; encryption plugin can be found &lt;a href=&quot;../aws-key-management-encryption-plugin/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a182b1f9850c7529a516f4f4069cfd7d721902" translate="yes" xml:space="preserve">
          <source>The options for &lt;code&gt;ALTER SEQUENCE&lt;/code&gt; can be given in any order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9226213bc947703e4827fbc16e92872fb5f98fba" translate="yes" xml:space="preserve">
          <source>The options for &lt;code&gt;CREATE SEQUENCE&lt;/code&gt; can be given in any order, optionally followed by &lt;code&gt;table_options&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db2516d8f29f0da5ed9094176fef8453d88343c" translate="yes" xml:space="preserve">
          <source>The options for the HandlerSocket plugin are all described on the &lt;a href=&quot;../handlersocket-configuration-options/index&quot;&gt;HandlerSocket Configuration Option&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bcef8cf9d10b7f48c7da4d847ee0c2a8ebfdc65" translate="yes" xml:space="preserve">
          <source>The options related to &lt;a href=&quot;../galera/index&quot;&gt;Galera Cluster&lt;/a&gt; are described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43df402054659b3f1be071ce6a8e508c57fb47d4" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;a href=&quot;../aria/index&quot;&gt;Aria&lt;/a&gt; storage engine are described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c8c55754dcaa2f3e34d404e312be74299e8429" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;a href=&quot;../connect/index&quot;&gt;CONNECT&lt;/a&gt; storage engine are described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2434a0cc498753a612f8adc4853f52b3394a17" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;a href=&quot;../innodb/index&quot;&gt;InnoDB&lt;/a&gt; storage engine are described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c45bfff7bbb37f581212d3b95b8a47813dd165d" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;a href=&quot;../myisam-storage-engine/index&quot;&gt;MyISAM&lt;/a&gt; storage engine are described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2153b717ca076a8d5951792c10128778ac182a15" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;a href=&quot;../myrocks/index&quot;&gt;MyRocks&lt;/a&gt; storage engine are described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528602de2e44ca860131c65fa63d9f53f4647f0b" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;a href=&quot;../performance-schema/index&quot;&gt;Performance Schema&lt;/a&gt; are described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c97723ff7fafe4813f2455a2316c3df1b3d6722" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../authentication-plugin-ed25519/index&quot;&gt;ed25519&lt;/a&gt;&lt;/code&gt; authentication plugin can be found &lt;a href=&quot;../authentication-plugin-ed25519/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c8fa55eacd0dd07bfd32af84b46c5e1092fd16" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../authentication-plugin-gssapi/index&quot;&gt;gssapi&lt;/a&gt;&lt;/code&gt; authentication plugin can be found &lt;a href=&quot;../authentication-plugin-gssapi/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e20c6cb5dc330c27527be7ef31827b9c59f952" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../authentication-plugin-named-pipe/index&quot;&gt;named_pipe&lt;/a&gt;&lt;/code&gt; authentication plugin can be found &lt;a href=&quot;../authentication-plugin-named-pipe/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991c614227d11a6ed47cde427db9c9364d5ac6ba" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../authentication-plugin-pam/index&quot;&gt;pam&lt;/a&gt;&lt;/code&gt; authentication plugin can be found &lt;a href=&quot;../authentication-plugin-pam/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ca44a6e2623e2911d6d8a1be821a2bd28a899a" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../authentication-plugin-unix-socket/index&quot;&gt;unix_socket&lt;/a&gt;&lt;/code&gt; authentication plugin can be found &lt;a href=&quot;../authentication-plugin-unix-socket/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d158496f58e5ac4e1c361afe42b94983db5e176" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../cracklib_password_check/index&quot;&gt;cracklib_password_check&lt;/a&gt;&lt;/code&gt; password validation plugin can be found &lt;a href=&quot;../cracklib_password_check/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6347704685f925c8c1a725d4d2aeb2a01edab49b" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../disks-plugin/index&quot;&gt;DISKS&lt;/a&gt;&lt;/code&gt; information schema plugin can be found &lt;a href=&quot;../disks-plugin/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72bc204de6aa6526528f00cc6d05c2aa8939447c" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../feedback-plugin/index&quot;&gt;feedback&lt;/a&gt;&lt;/code&gt; plugin can be found &lt;a href=&quot;../feedback-plugin/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe867af78b6f0dc146b6acf2218fd0d092aabb8" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../file-key-management-encryption-plugin/index&quot;&gt;file_key_management&lt;/a&gt;&lt;/code&gt; encryption plugin can be found &lt;a href=&quot;../file-key-management-encryption-plugin/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a1977a0b59d45d249442903e2b661376911ef9" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../locales-plugin/index&quot;&gt;LOCALES&lt;/a&gt;&lt;/code&gt; information schema plugin can be found &lt;a href=&quot;../locales-plugin/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab33c66514423c25b38c82d97b34797d3c9fee29" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../metadata_lock_info/index&quot;&gt;METADATA_LOCK_INFO&lt;/a&gt;&lt;/code&gt; information schema plugin can be found &lt;a href=&quot;../metadata_lock_info/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0b5ea47735469e6f9396254e3e16a60c7eeb1a" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../query-cache-information-plugin/index&quot;&gt;QUERY_CACHE_INFO&lt;/a&gt;&lt;/code&gt; information schema plugin can be found &lt;a href=&quot;../query-cache-information-plugin/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76255f246cef7f7019f72fa2ef7dce0d9c3597f4" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../query-response-time-plugin/index&quot;&gt;QUERY_RESPONSE_TIME&lt;/a&gt;&lt;/code&gt; information schema plugin can be found &lt;a href=&quot;../query-response-time-plugin/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72995972bad5c871910931f188ca9899d7bd279a" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../query-response-time-plugin/index&quot;&gt;QUERY_RESPONSE_TIME_AUDIT&lt;/a&gt;&lt;/code&gt; audit plugin can be found &lt;a href=&quot;../query-response-time-plugin/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39810605d7813178846c21a6cc65e3dcb1a27c7" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../semisynchronous-replication/index&quot;&gt;rpl_semi_sync_master&lt;/a&gt;&lt;/code&gt; replication plugin can be found &lt;a href=&quot;../semisynchronous-replication/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8983c62d9cf7244f8eb35fff0acf6dc0e070898c" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../semisynchronous-replication/index&quot;&gt;rpl_semi_sync_slave&lt;/a&gt;&lt;/code&gt; replication plugin can be found &lt;a href=&quot;../semisynchronous-replication/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfb24423cf8f2482f7e433978ed453830a54d47" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../simple_password_check/index&quot;&gt;simple_password_check&lt;/a&gt;&lt;/code&gt; password validation plugin can be found &lt;a href=&quot;../simple_password_check/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23287379283ec7c3f98243418e9521879185ceb8" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../sql-error-log-plugin/index&quot;&gt;SQL_ERROR_LOG&lt;/a&gt;&lt;/code&gt; audit plugin can be found &lt;a href=&quot;../sql-error-log-plugin/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a148dc2c53de8e985b03c04e583132055befeef5" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../user-variables-plugin/index&quot;&gt;user_variables&lt;/a&gt;&lt;/code&gt; information schema plugin can be found &lt;a href=&quot;../user-variables-plugin/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c90485f5b8f3e467eb1a4eb214711d8a6c4a0d" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../wsrep_info-plugin/index&quot;&gt;WSREP_MEMBERSHIP&lt;/a&gt;&lt;/code&gt; information schema plugin can be found &lt;a href=&quot;../wsrep_info-plugin/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6de3f717385f6bdb818b640a82808a4473fe56" translate="yes" xml:space="preserve">
          <source>The options related to the &lt;code&gt;&lt;a href=&quot;../wsrep_info-plugin/index&quot;&gt;WSREP_STATUS&lt;/a&gt;&lt;/code&gt; information schema plugin can be found &lt;a href=&quot;../wsrep_info-plugin/index#options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ada6b459be5f2561bd814322d7d48c7aba1522" translate="yes" xml:space="preserve">
          <source>The options that can be used by DATE_FORMAT(), as well as its inverse &lt;a href=&quot;../str_to_date/index&quot;&gt;STR_TO_DATE&lt;/a&gt;() and the &lt;a href=&quot;../from_unixtime/index&quot;&gt;FROM_UNIXTIME()&lt;/a&gt; function, are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40f70abece06c8f86b874ab2896f75f2dae4ddb" translate="yes" xml:space="preserve">
          <source>The options that can be used by FROM_UNIXTIME(), as well as &lt;a href=&quot;../date_format/index&quot;&gt;DATE_FORMAT()&lt;/a&gt; and &lt;a href=&quot;../str_to_date/index&quot;&gt;STR_TO_DATE()&lt;/a&gt;, are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3567357095111996ee0e326d193bf775005cc1a" translate="yes" xml:space="preserve">
          <source>The options that can be used by STR_TO_DATE(), as well as its inverse &lt;a href=&quot;../date_format/index&quot;&gt;DATE_FORMAT()&lt;/a&gt; and the &lt;a href=&quot;../from_unixtime/index&quot;&gt;FROM_UNIXTIME()&lt;/a&gt; function, are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33502fb40cba5e0a2d9a9d787c117c9cec71fda" translate="yes" xml:space="preserve">
          <source>The options used in this definition are the same as the one used later for the actual CUSTOMERS data tables except that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ad7c4e44cdb6f81c8f45d40ebbbccad185ecdf" translate="yes" xml:space="preserve">
          <source>The options you have are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f72f8a7a3b89f72c3c11be1b9abe5580ecc368" translate="yes" xml:space="preserve">
          <source>The order by columns do not need to be in the select list but need to be available from the query result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae53234b039431d399a24985d7583a208364dabe" translate="yes" xml:space="preserve">
          <source>The order is somewhat related to importance of the contribution given to the MariaDB project, but this is not 100% accurate. There is still room for improvements and debate...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52662a2d02ca2388df5ea7d98c404afe1300268" translate="yes" xml:space="preserve">
          <source>The original CSV-format does not enable IETF-compatible parsing of embedded quote and comma characters. From &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-1018-release-notes/&quot;&gt;MariaDB 10.1.8&lt;/a&gt;, it is possible to do so by setting the &lt;a href=&quot;../create-table/index#ietf_quotes&quot;&gt;IETF_QUOTES&lt;/a&gt; option when creating a table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188f6334757537c0fb5e03ac345b467030d7737e" translate="yes" xml:space="preserve">
          <source>The original code base comes from &lt;a href=&quot;http://mysql.taobao.org/index.php/Patch_source_code#Multi-master_replication&quot;&gt;Taobao, developed by Peng Lixun&lt;/a&gt;. A big thanks to them for this important feature!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf5be187dbb9d428938dd06fa5e6def1e200838" translate="yes" xml:space="preserve">
          <source>The original file, &amp;ldquo;cities.json&amp;rdquo;, has 29352 records. To base a table on this file we must specify the option Pretty=0 in the option list. For instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b5c17ab960566766d881d828671e0b75f512a0" translate="yes" xml:space="preserve">
          <source>The original old-style connection is an empty string &lt;code&gt;''&lt;/code&gt;. You don't have to use this connection if you don't want to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1e64c8264dc5a1e9eb1d6162686cfae02ee520" translate="yes" xml:space="preserve">
          <source>The original table schema shown earlier on this page causes the &lt;em&gt;Row size too large&lt;/em&gt; error, because all of the table's &lt;code&gt;&lt;a href=&quot;../varchar/index&quot;&gt;VARCHAR&lt;/a&gt;&lt;/code&gt; columns are smaller than 256 bytes, which means that they have to be stored on the row's main data page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e0cf885d6fdacc1e08e5e4b88a2135deed6307" translate="yes" xml:space="preserve">
          <source>The other is when the slave SQL thread reads events from the &lt;a href=&quot;../relay-log/index&quot;&gt;relay log&lt;/a&gt;. This is controlled by the slave_sql_verify_checksum option, and is used to detect file system corruption of slave relay log files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca0aad94a69cabf943f4f59b0775f7cfa0a0056" translate="yes" xml:space="preserve">
          <source>The other most important InnoDB variables are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654062dd549d78be906c44b5aabaf33e18c659f8" translate="yes" xml:space="preserve">
          <source>The other ones use data sources provided by the matching JDBC driver. There are currently four wrappers to be used with mysql-6.0.2, mariadb, oracle and postgresql.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99363bc44b3f1d00e6895f84c97fa6d7e9fb111b" translate="yes" xml:space="preserve">
          <source>The other option is to use the bakery scripts. In this case you don't have to compile MariaDB source first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6275566087a54679e76df2f6511e01760961b495" translate="yes" xml:space="preserve">
          <source>The other possible condition kinds are: recursion references and assertions. See the &lt;a href=&quot;http://www.pcre.org&quot;&gt;PCRE documentation&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f17d5bb26492dc383191de4415020561a1de891" translate="yes" xml:space="preserve">
          <source>The other problems must be solved by adding to the create table a list of columns that must be translated because they are aliases or/and aliases on aggregate functions that must become a having clause. For example, in this case:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="892ef4cc9bab06ff259f7454d2b0afc2d6fcf24c" translate="yes" xml:space="preserve">
          <source>The other statements hit one row each.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1685d715b1b7bdee0201c925884439922f4d92f9" translate="yes" xml:space="preserve">
          <source>The output can be only produced if the target thread is &lt;em&gt;currently&lt;/em&gt; running a query, which has a ready query plan. If this is not the case, the output will be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2c3cdc423d62f6865f386f8d096e786a310256" translate="yes" xml:space="preserve">
          <source>The output consists of the following columns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0874642b9c8aeec3722945eade3d73f42dc6bf4b" translate="yes" xml:space="preserve">
          <source>The output contains information on:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165ba16e3ca87599ac0dfa929a52970e14f140a0" translate="yes" xml:space="preserve">
          <source>The output contains the following fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6683cfd2c4333736035bb0294706491785ecdf1f" translate="yes" xml:space="preserve">
          <source>The output displays only the names of those databases, tables, or columns for which you have some privileges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d995d318098ebe8bbe44ea7a86a02b611c2fbe91" translate="yes" xml:space="preserve">
          <source>The output from &lt;code&gt;SHOW COLLATION&lt;/code&gt; includes all available &lt;a href=&quot;../data-types-character-sets-and-collations/index&quot;&gt;collations&lt;/a&gt;. The &lt;code&gt;LIKE&lt;/code&gt; clause, if present on its own, indicates which collation names to match. The &lt;code&gt;WHERE&lt;/code&gt; and &lt;code&gt;LIKE&lt;/code&gt; clauses can be given to select rows using more general conditions, as discussed in &lt;a href=&quot;../extended-show/index&quot;&gt;Extended SHOW&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f58613e1e4790ac5afc7aa9b477baace2a438e" translate="yes" xml:space="preserve">
          <source>The output from mysqlbinlog can be used as input to the mysql client to redo the statements contained in a &lt;a href=&quot;../binary-log/index&quot;&gt;binary log&lt;/a&gt;. This is useful for recovering after a server crash. Here is an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e412aee48de72836026d241b4def96763249e458" translate="yes" xml:space="preserve">
          <source>The output from the mysql client when run using the &lt;code&gt;--xml&lt;/code&gt; option also follows the preceding rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7cccf0952a5e06212b046edfec11e6963e2b7c" translate="yes" xml:space="preserve">
          <source>The output has only one line. This means that the subquery has been merged into the top-level &lt;code&gt;SELECT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf24b7e45cb0fd4d9b80ade573a1ad01147be02" translate="yes" xml:space="preserve">
          <source>The output is always accompanied with a warning which shows the query the target thread is running (this shows what the &lt;code&gt;EXPLAIN&lt;/code&gt; is for):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8ccd11225e5b188cd1cfc6d8c7bddf41e1b841" translate="yes" xml:space="preserve">
          <source>The output is useful to determine how much physical I/O was required, how much data was cached, and how many partition blocks were eliminated through use of extent map elimination. The system maintains min / max values for each extent and uses these to help implement where clause filters to completely bypass extents where the value is outside of the min/max range. When a column is ordered (or semi-ordered) during load such as a time column this offer very large performance gains as the system can avoid scanning many extents for the column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931ac897fa8f6aaf44b01b73d678c842b993097c" translate="yes" xml:space="preserve">
          <source>The output looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b735f3a8f53e774ab44d68b9e6b94056ac215c" translate="yes" xml:space="preserve">
          <source>The output of &lt;code&gt;&lt;a href=&quot;../explain/index&quot;&gt;EXPLAIN&lt;/a&gt;&lt;/code&gt; for the above cases is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed079b95c053239e330cb1f0f5a522bd42667f9" translate="yes" xml:space="preserve">
          <source>The output of &lt;code&gt;SELECT CURRENT_ROLE&lt;/code&gt; is equivalent to the contents of the &lt;code&gt;&lt;a href=&quot;../information-schema-enabled_roles-table/index&quot;&gt;ENABLED_ROLES&lt;/a&gt;&lt;/code&gt; Information Schema table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fefcf0575d62c597f461ca2d541207f1ffdf31" translate="yes" xml:space="preserve">
          <source>The output of MariaDB's &lt;code&gt;EXPLAIN FORMAT=JSON&lt;/code&gt; is different from &lt;code&gt;EXPLAIN FORMAT=JSON&lt;/code&gt; in MySQL.The reasons for that are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2748620d216f7f92504edd508c81a8fb296a0bcc" translate="yes" xml:space="preserve">
          <source>The output of MySQL's &lt;code&gt;EXPLAIN FORMAT=JSON&lt;/code&gt; is not defined. Even MySQL Workbench has trouble parsing it (see this &lt;a href=&quot;http://s.petrunia.net/blog/?p=93&quot;&gt;blog post&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f9e97c09b2303848721f53cc3a32bd42705760" translate="yes" xml:space="preserve">
          <source>The output of the above will look something like this (make sure gpg shows up on each OK line):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b232f6a089dafbd840f97eebb21b309b2766c5" translate="yes" xml:space="preserve">
          <source>The output of these statements is unreliably affected by the &lt;code&gt;&lt;a href=&quot;../server-system-variables/index#sql_quote_show_create&quot;&gt;sql_quote_show_create&lt;/a&gt;&lt;/code&gt; server system variable - see &lt;a href=&quot;http://bugs.mysql.com/bug.php?id=12719&quot;&gt;http://bugs.mysql.com/bug.php?id=12719&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72893eaf2df98327f6b201ec0914c4b291ee134c" translate="yes" xml:space="preserve">
          <source>The output of this statement is unreliably affected by the &lt;code&gt;&lt;a href=&quot;../server-system-variables/index#sql_quote_show_create&quot;&gt;sql_quote_show_create&lt;/a&gt;&lt;/code&gt; server system variable - see &lt;a href=&quot;http://bugs.mysql.com/bug.php?id=12719&quot;&gt;http://bugs.mysql.com/bug.php?id=12719&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eeecd2bf31da166c211687a9ef3a577e903c7ce" translate="yes" xml:space="preserve">
          <source>The output will be like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17117b5b243b78a4eee437c3ab2fedd9b81cc2b1" translate="yes" xml:space="preserve">
          <source>The package is available as rpm, deb and binary. Follow the instructions to install the associated package:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6abe1c466b25e1f440e6ffae8540480556c52f31" translate="yes" xml:space="preserve">
          <source>The package is installed as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489333fc4fb72058764b4ae3fcc1f781863defda" translate="yes" xml:space="preserve">
          <source>The package name is &lt;code&gt;sphinx&lt;/code&gt; and the daemon &lt;code&gt;searchd&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1bbd762b0681077f7230500b2aa30ffcbc9b19" translate="yes" xml:space="preserve">
          <source>The packages can now be installed with your package manager of choice, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe21f255ad4f26686e5f7e45637f5d4e3dd3acf" translate="yes" xml:space="preserve">
          <source>The packages provided by Debian's and Ubuntu's default repositories are generated using the Debian packaging in Debian's mirror of MariaDB's source code, which contains some custom changes. The source tree can be found here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e9ca8e8c19d94e7857e8bb5c29881328d31a6e" translate="yes" xml:space="preserve">
          <source>The packages provided by MariaDB Foundation's and MariaDB Corporation's repositories are generated using the Debian packaging in MariaDB's official &lt;a href=&quot;../getting-the-mariadb-source-code/index&quot;&gt;source code&lt;/a&gt;. The Debian packaging scripts are specifically in the &lt;code&gt;debian/&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea36835898b330661de99c8805765224ba82896d" translate="yes" xml:space="preserve">
          <source>The packages that the MariaDB-server package depend on are: MariaDB-client, MariaDB-shared, and MariaDB-common. Therefore, to install &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-10311-release-notes/&quot;&gt;MariaDB 10.3.11&lt;/a&gt; from this &lt;code&gt;yum&lt;/code&gt; repository, we would do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc40d3be2cf6b73cba450939d3e3ada1af05e56" translate="yes" xml:space="preserve">
          <source>The packages that the MariaDB-server package depend on are: MariaDB-client, MariaDB-shared, and MariaDB-common. Therefore, to install &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-10314-release-notes/&quot;&gt;MariaDB 10.3.14&lt;/a&gt; from this &lt;code&gt;zypper&lt;/code&gt; repository, we would do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090aecda9ea8bdec399a016d5e3c5250be7f550b" translate="yes" xml:space="preserve">
          <source>The page stays active as long as the syncing slot is taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c6d5e9fd7c67d4a108a8f24b6102e39c171c7e" translate="yes" xml:space="preserve">
          <source>The pages are not easily bookmarked or sent to someone else because the contents shift over time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b8cf69c49dd144de871e1b0a2a596555f163af" translate="yes" xml:space="preserve">
          <source>The pam_user_map PAM Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f524746b725901f99466591cd534436bdcaf59" translate="yes" xml:space="preserve">
          <source>The parameter list enclosed within parentheses must always be present. If there are no parameters, an empty parameter list of () should be used. Parameter names are not case sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ad90f741d6d6a0079f9e744ee9aa05a8396d0b" translate="yes" xml:space="preserve">
          <source>The parent and the child table must use the same storage engine, and must not be &lt;code&gt;TEMPORARY&lt;/code&gt; or partitioned tables. They can be the same table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11843f5c5700bf58f80d4784a3898d789ea8770d" translate="yes" xml:space="preserve">
          <source>The parition ID for the extent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86df5e8f16b5597d5797574ab7b430a9c158cc13" translate="yes" xml:space="preserve">
          <source>The parser context: sp_pcontext.h</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331153d93e7978a35854592c40a3002201577bf6" translate="yes" xml:space="preserve">
          <source>The parsing of the parameter list and body is relatively straightforward:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb98b7cd449502f9bea8d1d3f3f9fa7ee0d8663d" translate="yes" xml:space="preserve">
          <source>The partition ID for the extent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae942c2dfdef604da3bcbd0ec37037a68443df7" translate="yes" xml:space="preserve">
          <source>The partition by columns do not need to be in the select list but do need to be available from the query result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975265a98e8ba4d4eeb7097bbc9daaff5a6e832d" translate="yes" xml:space="preserve">
          <source>The partition field should not be the field first in any key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882da1e8da198c4a015f77d681b2526ecaaaf34e" translate="yes" xml:space="preserve">
          <source>The partition info in the frm file is not consistent with what can be written into the frm file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22d076a4d628f968b46a256cb2bd878e2f17847" translate="yes" xml:space="preserve">
          <source>The partitioning type; one of &lt;code&gt;RANGE&lt;/code&gt;, &lt;code&gt;LIST&lt;/code&gt;, &lt;code&gt;HASH&lt;/code&gt;, &lt;code&gt;LINEAR HASH&lt;/code&gt;, &lt;code&gt;KEY&lt;/code&gt; or &lt;code&gt;LINEAR KEY&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874bc9f788ef3a00606c999b986ac1dc56284322" translate="yes" xml:space="preserve">
          <source>The partitions can be tables driven by different engines. This relieves the current existing limitation of the partition engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677a3a6c92a1bfe3d48c550e84301ff3b0080613" translate="yes" xml:space="preserve">
          <source>The partitions can be tables driven by engines not currently supporting partitioning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd8491db90f8b7b09a887ef053e46c908ec0f33" translate="yes" xml:space="preserve">
          <source>The password for both of these plugins should be specified in the plain text in the &lt;code&gt;USING&lt;/code&gt; clause:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9cf58e063b973d81dea7e942da6012eb2a0e18" translate="yes" xml:space="preserve">
          <source>The password hash doesn't have the expected format. Check if the correct password algorithm is being used with the PASSWORD() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c97e82e83767bbf660d5d8a2b4c09a579d4e66b6" translate="yes" xml:space="preserve">
          <source>The password of the MariaDB account to use when invoking &lt;a href=&quot;../mysqladmin/index&quot;&gt;mysqladmin&lt;/a&gt;. Note that the password value is not optional for this option, unlike for other MariaDB programs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c8036e3d0504e891252fb2962f8e7c77156501" translate="yes" xml:space="preserve">
          <source>The password to use when connecting to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635ee9395b37f71770c935db1e8e528ad1bfee24" translate="yes" xml:space="preserve">
          <source>The password to use when connecting to the server. If you use the short option form (&lt;code&gt;-p&lt;/code&gt;), you cannot have a space between the option and the password. If you omit the password value following the &lt;code&gt;--password&lt;/code&gt; or &lt;code&gt;-p&lt;/code&gt; option on the command line, &lt;em&gt;mysqldump&lt;/em&gt; prompts for one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a39f21325e2c853dfaa07c033b24be9bc7f3a5" translate="yes" xml:space="preserve">
          <source>The password to use when connecting to the server. Note that the password value is not optional for this option, unlike for other MariaDB programs&lt;em&gt;&lt;em&gt; Specifying a password on the command line should be considered insecure. You can use an option file to avoid giving the password on the command line.&lt;/em&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407a39c201d09a994cedc972c53bb9575d5bdc25" translate="yes" xml:space="preserve">
          <source>The password to use when connecting to the server. Note that the password value is not optional for this option, unlike for other client programs. Specifying the password on the command-line is generally considered insecure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1655e7feb414218c5faf64d41af5c9671700b858" translate="yes" xml:space="preserve">
          <source>The password to use when connecting to the server. The password value is not optional for this option, unlike for other MariaDB programs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299d05acf29c6f72a5bb4f97cdcf3a3923af6205" translate="yes" xml:space="preserve">
          <source>The patch adds two system variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fba1db9ada702ae5e57a79ec11cc1166fe956e" translate="yes" xml:space="preserve">
          <source>The patch is wrapped in #ifdef, but there is a #define straight in mysql_priv.h so simply compiling that tree should produce a binary with optimizer debugging enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b9b42a61e33b9f9d1a352f16e1cd8d8953620c" translate="yes" xml:space="preserve">
          <source>The patch to permit multiple locks was &lt;a href=&quot;http://kostja-osipov.livejournal.com/46410.html&quot;&gt;contributed by Konstantin &quot;Kostja&quot; Osipov&lt;/a&gt; (&lt;a href=&quot;https://jira.mariadb.org/browse/MDEV-3917&quot;&gt;MDEV-3917&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c7daa2d44ecc1157a1c3520ae96640cf6d9308" translate="yes" xml:space="preserve">
          <source>The path name of the file in which the server should write its process ID. If not provided, the default, &lt;code&gt;host_name.pid&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df65cab270378eedd2bcf66f419fa49df390c40b" translate="yes" xml:space="preserve">
          <source>The path name of the process ID file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0daffe833a56490e19f45f61462fd33f3725bd76" translate="yes" xml:space="preserve">
          <source>The path name to the &lt;a href=&quot;../mysqltest/index&quot;&gt;mysqltest&lt;/a&gt; program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0627406d9fa60339f493e6dd91375c5ad0f7c537" translate="yes" xml:space="preserve">
          <source>The path specified for %s is too long.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3885b5cab3612234b27a9b18c7e14e5bc2fd52b5" translate="yes" xml:space="preserve">
          <source>The path syntax is the same used in JSON CONNECT tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c635f10786d52eb4abd3538fc8bd790507558e3" translate="yes" xml:space="preserve">
          <source>The path to &lt;code&gt;libgalera_smm.so&lt;/code&gt; needs to be defined in the &lt;em&gt;my.cnf&lt;/em&gt; configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3077d39d931b1ccf72620ed5b5c3048ed2a2c42" translate="yes" xml:space="preserve">
          <source>The path to the MariaDB data directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0176400ccdeba1242b03fd1821735d563913133a" translate="yes" xml:space="preserve">
          <source>The path to the MariaDB installation directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306336de5cdcecc21bbe22bf070bfce7c1584967" translate="yes" xml:space="preserve">
          <source>The path to the data directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b168c92c14572f8ac979ec99eae3cd7ceb9d09f" translate="yes" xml:space="preserve">
          <source>The path to the files must also be specified if they're not in the current directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7de880407d2dc557bd60e22f805362e50d5c6e" translate="yes" xml:space="preserve">
          <source>The path to the wrapper classes must point to the directory containing the wrappers sub-directory. If a JdbcInterface.jar file was made, its path is the directory where it is located followed by the jar file name. It is unclear where because this will depend on the installation process. If you start from a source distribution, it can be in the storage/connect directory where the CONNECT source files are or where you moved them or compiled the JdbcInterface.jar file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36572cd90c910ee0936bad066b327fb4b646319b" translate="yes" xml:space="preserve">
          <source>The pattern &lt;code&gt;(?&amp;gt;\d+)foo&lt;/code&gt; from the previous section's example can be rewritten as &lt;code&gt;\d++foo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a82eee2190bec12fcc73ed4555d9fc497e8c814d" translate="yes" xml:space="preserve">
          <source>The pattern need not be a literal string. For example, it can be specified as a string expression or table column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b75a718a53811927f57152894ab1b9bc6afecf3" translate="yes" xml:space="preserve">
          <source>The pattern without the non-greedy flag to the quantifier &lt;code&gt;/[*].*[*]/&lt;/code&gt; would match the entire string between the leftmost &lt;code&gt;/*&lt;/code&gt; and the rightmost &lt;code&gt;*/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50781170de874f94420ddbd9ef47736e6f9f32d9" translate="yes" xml:space="preserve">
          <source>The percentile functions have a slightly different syntax from other window functions as can be seen in the example below. These functions can be only applied against numeric values. The argument to the function is the percentile to evaluate. Following 'within group' is the sort expression which indicates the sort column and optionally order. Finally after 'over' is an optional partition by clause, for no partition clause use 'over ()'. The example below utilizes the value 0.5 to calculate the median opportunity amount in the rows. The values differ sometimes because percentile_cont will return the average of the 2 middle rows for an even data set while percentile_desc returns the first encountered in the sort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765e65212a3a798aa136da05c9aa5825ce810499" translate="yes" xml:space="preserve">
          <source>The performance issues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d12bd8ff436eaf46ec9dbdb9829836d7ee6655" translate="yes" xml:space="preserve">
          <source>The performance issues with &lt;a href=&quot;../xtradbinnodb-server-system-variables/index#innodb_file_per_table&quot;&gt;innodb_file_per_table=ON&lt;/a&gt; can be exacerbated in cases where the &lt;a href=&quot;../xtradbinnodb-buffer-pool/index&quot;&gt;InnoDB buffer pool&lt;/a&gt; is very large and &lt;a href=&quot;../xtradbinnodb-server-system-variables/index#innodb_adaptive_hash_index&quot;&gt;innodb_adaptive_hash_index=ON&lt;/a&gt; is set. In that case, using &lt;a href=&quot;../drop-table/index&quot;&gt;DROP TABLE&lt;/a&gt; followed by &lt;a href=&quot;../create-table/index&quot;&gt;CREATE TABLE&lt;/a&gt; instead of &lt;code&gt;TRUNCATE TABLE&lt;/code&gt; may perform better. Setting &lt;a href=&quot;../xtradbinnodb-server-system-variables/index#innodb_adaptive_hash_index&quot;&gt;innodb_adaptive_hash_index=OFF&lt;/a&gt; can also help. In &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-10219-release-notes/&quot;&gt;MariaDB 10.2.19&lt;/a&gt; and later, this performance can also be improved by setting &lt;a href=&quot;../xtradbinnodb-server-system-variables/index#innodb_safe_truncate&quot;&gt;innodb_safe_truncate=OFF&lt;/a&gt;. See &lt;a href=&quot;https://jira.mariadb.org/browse/MDEV-9459&quot;&gt;MDEV-9459&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409ac13d13a14386936d03418bc98ea29251502e" translate="yes" xml:space="preserve">
          <source>The performance of this is O(N), actually about 3N, where N is the number of source rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91e6525758e7d021c2586f2fac36a48b8d83670" translate="yes" xml:space="preserve">
          <source>The performance schema cannot be activated at runtime - it must be set when the server starts by adding the following line in your &lt;code&gt;my.cnf&lt;/code&gt; configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746961be58d453371b5ed25e9247217650cfbd6f" translate="yes" xml:space="preserve">
          <source>The period can be separated by spaces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cc6effc4e57a93c729002b6ca9aefdcd7c6220" translate="yes" xml:space="preserve">
          <source>The permitted index_types for each storage engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f1a441d8e16b6cf13737b66fe924034e305a96" translate="yes" xml:space="preserve">
          <source>The physical file ColumnStore writes to disk is called a segment file. Once segment files reach the maximum number of extents, ColumnStore automatically creates a new segment file. You can set the maximum number of extents in a segment file using &lt;code&gt;ExtentsPreSegmentFile&lt;/code&gt; in the &lt;code&gt;ColumnStore.xml&lt;/code&gt; file. It should be set to a multiple of the number of DB Roots. The default value is 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e386fc963deb42844028c1a5053103cebd4e5928" translate="yes" xml:space="preserve">
          <source>The placeholder table now contains data from the &lt;code&gt;p0&lt;/code&gt; partition on the source server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08afd1682ce0266264c037f92106ffe09721bd4c" translate="yes" xml:space="preserve">
          <source>The plugin also adds the &lt;code&gt;&lt;a href=&quot;../flush/index&quot;&gt;FLUSH USER_STATISTICS&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../flush/index&quot;&gt;FLUSH CLIENT_STATISTICS&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../flush/index&quot;&gt;FLUSH INDEX_STATISTICS&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../flush/index&quot;&gt;FLUSH TABLE_STATISTICS&lt;/a&gt;&lt;/code&gt; statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc681dc420388a20d97faebbed19aa090c6b589a" translate="yes" xml:space="preserve">
          <source>The plugin can only be built on Windows, Linux and macOS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d582f1a42cc5e88a255d0313b113fd21ef6ea055" translate="yes" xml:space="preserve">
          <source>The plugin directory for the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eccd70ce7143adc7a7ad2b461d09a285ff479faf" translate="yes" xml:space="preserve">
          <source>The plugin must be located in the plugin directory, the directory containing all plugin libraries for MariaDB. The path to this directory is configured by the &lt;code&gt;&lt;a href=&quot;../server-system-variables/index#plugin_dir&quot;&gt;plugin_dir&lt;/a&gt;&lt;/code&gt; system variable. To see the value of this variable and thereby determine the file path of the plugin library, execute the following SQL statement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60aad8b43d3cb636adebff0fa0422013f944200f" translate="yes" xml:space="preserve">
          <source>The plugin only works on Linux.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755251edc2ee7d5e38d365ef5f41cf5ae82f7e49" translate="yes" xml:space="preserve">
          <source>The plugin requires at least cracklib 2.9.0, so it is not available on Debian/Ubuntu builds before Debian 8 Jessie/Ubuntu 14.04 Trusty, RedHat Enterprise Linux / CentOS 6. (see &lt;a href=&quot;https://jira.mariadb.org/browse/MDEV-7305&quot;&gt;MDEV-7305&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8ed8a019923fe9853161adff7a19d9c0f33ee5" translate="yes" xml:space="preserve">
          <source>The plugin requires that one of the following compilers is used: &lt;code&gt;gcc&lt;/code&gt; 4.8 or later, &lt;code&gt;clang&lt;/code&gt; 3.3 or later, Visual Studio 2013 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20dfeba3544d04f9ff1b33ea3b0f2f7b3088a6fe" translate="yes" xml:space="preserve">
          <source>The plugin uses &lt;a href=&quot;https://github.com/awslabs/aws-sdk-cpp&quot;&gt;AWS C++ SDK&lt;/a&gt;, which introduces the following restrictions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befd657d70ac25ce720ffc3c89494dcb321ed665" translate="yes" xml:space="preserve">
          <source>The plugin was designed for following software composition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af871fc14628e9d018e16cbb2001112ef82988b0" translate="yes" xml:space="preserve">
          <source>The plugin was installed with the &lt;code&gt;&lt;a href=&quot;../install-plugin/index&quot;&gt;INSTALL PLUGIN&lt;/a&gt;&lt;/code&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0457f349237d5ecd26497ead5b70d134ff722e83" translate="yes" xml:space="preserve">
          <source>The plugin was installed with the &lt;code&gt;&lt;a href=&quot;../install-soname/index&quot;&gt;INSTALL SONAME&lt;/a&gt;&lt;/code&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37a5dfb44740d259f7a45a58f085905bbfc544d" translate="yes" xml:space="preserve">
          <source>The plugin was installed with the &lt;code&gt;&lt;a href=&quot;../mysql_plugin/index&quot;&gt;mysql_plugin&lt;/a&gt;&lt;/code&gt; utility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac8c3d10d2881197e402071b37b4b0e35036b6d" translate="yes" xml:space="preserve">
          <source>The polygon is defined by the corner points of the bounding box:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ef88f8f028780f4d840043284c8ce5f661f17a" translate="yes" xml:space="preserve">
          <source>The pool of replication worker threads is shared among all multi-source master connections, and among all replication domains that can replicate in parallel using out-of-order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e0887732ab9848b8f6ee16c48a2843415092ff" translate="yes" xml:space="preserve">
          <source>The population covariance for non-null pairs in a group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e15fd35b3bc653887b34a96ed59e194e339e6d9a" translate="yes" xml:space="preserve">
          <source>The population standard deviation of a numeric (INT variations, NUMERIC, DECIMAL) column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc644a7fba40fc8a765db8a78b4a005fb3c5d382" translate="yes" xml:space="preserve">
          <source>The population standard variance of a numeric (INT variations, NUMERIC, DECIMAL) column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4ca5cdf055bdbf8d7466167053de3d12877ad3" translate="yes" xml:space="preserve">
          <source>The port being used to connect to the master.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3abc85ee60548c2f958a28325c358938830e5ab5" translate="yes" xml:space="preserve">
          <source>The port number that the server should use when listening for TCP/IP connections. The port number must be 1024 or higher unless the server is started by the root system user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8586044bb3fa44c31f4e49849a6ce68d6554f825" translate="yes" xml:space="preserve">
          <source>The port of the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5712c6b951b129cb3cf0eab5ac041b558d34160" translate="yes" xml:space="preserve">
          <source>The position of the column in the table, starting at 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0472b76a3bfc644fc6edacbbdcd788e13ab23820" translate="yes" xml:space="preserve">
          <source>The positions start with 1 and are measured in characters (i.e. not in bytes), which is important for multi-byte character sets. You can cast a multi-byte character set to &lt;a href=&quot;../binary/index&quot;&gt;BINARY&lt;/a&gt; to get offsets in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db1cb2f96f8e457c216a520b4f81146af2fe62f" translate="yes" xml:space="preserve">
          <source>The possible values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bdb791c6657cb51524fb9802abc44d953aa5b9d" translate="yes" xml:space="preserve">
          <source>The possible values for these special options are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf26a190f058518857d6500fb954e587e72ca050" translate="yes" xml:space="preserve">
          <source>The postConfigure script is a custom wizard to do the system(server and storage) configuration and setup. Before running the postConfigure script, you must have done &lt;a href=&quot;../preparing-for-columnstore-installation-12x/index&quot;&gt;Preparing for ColumnStore Installation 1.2.x&lt;/a&gt; steps. Once you have done these steps, then run the postConfigure script from the single server where you are installing ColumnStore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6e37b18e0a71f14bc2145919d54b68bcbf92dd" translate="yes" xml:space="preserve">
          <source>The postConfigure script is a customer wizard to do the system(server and storage) configuration and setup. Before running the postConfigure script, you must have done &lt;a href=&quot;../preparing-for-columnstore-installation-12x/index&quot;&gt;Preparing for ColumnStore Installation 1.2.x&lt;/a&gt; steps and the pre-requisite validation using &lt;a href=&quot;../mariadb-columnstore-cluster-test-tool/index&quot;&gt;ColumnStore Cluster Tester Tool&lt;/a&gt;. Once you have done these steps, then run the postConfigure script from the node designated as PM1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d64d43172b53ccc2ba222ffbefb2870365f24bdb" translate="yes" xml:space="preserve">
          <source>The postConfigure script supports 2 different types of installs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2bd302f038b10ea32fea1f377fa6cdf3629c4c" translate="yes" xml:space="preserve">
          <source>The precedence is the order in which the SQL operators are evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e723e8068544833d53923167fefc2d9436dc138" translate="yes" xml:space="preserve">
          <source>The precedence of the &lt;code&gt;NOT&lt;/code&gt; operator can also be affected by the &lt;code&gt;HIGH_NOT_PRECEDENCE&lt;/code&gt;&lt;a href=&quot;../sql-mode/index&quot;&gt;SQL_MODE&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92aec15dc6496acc391f4ecfc16745dccbe9993e" translate="yes" xml:space="preserve">
          <source>The prefix needs to be supplied to reference this table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce890e26b79ad45e69fea6706a8a04d96c39941d" translate="yes" xml:space="preserve">
          <source>The prepared statement contains a stored routine call that refers to that same statement. It's not allowed to execute a prepared statement in such a recursive manner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783294825b5076341aa804db170eb45eb853f385" translate="yes" xml:space="preserve">
          <source>The preview included a feature &lt;a href=&quot;../innodb-release-locks-early/index&quot;&gt;--innodb-release-locks-early&lt;/a&gt;. However we decided to omit this feature from future MariaDB releases because of a fundamental design bug, &lt;a href=&quot;https://bugs.launchpad.net/maria/+bug/798213&quot;&gt;lp:798213&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb95b938aaf91c2b8a810ad55e937c0b05b1e882" translate="yes" xml:space="preserve">
          <source>The previous configuration file will be saved as /usr/local/Calpont/etc/Calpont.xml.rpmsave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2345241902ff50e7a6930211a570576a26666c1" translate="yes" xml:space="preserve">
          <source>The previous configuration file will be saved as /usr/local/MariaDB/Columnstore/etc/Calpont.xml.rpmsave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc28757bf2c9497ffd43b4138ff111d215077a3c" translate="yes" xml:space="preserve">
          <source>The previous configuration file will be saved as /usr/local/mariadb/columnstore/etc/Columnstore.xml.rpmsave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d371b7fc4d721a635004375a40ffaff43d8a0da4" translate="yes" xml:space="preserve">
          <source>The previous paragraph doesn't cover one important question &amp;mdash; how can the engine know that the server uses an outdated table definition? The answer is &amp;mdash; by checking the &lt;strong&gt;tabledef_version&lt;/strong&gt;, the table definition version. Every table gets a unique &lt;code&gt;tabledef_version&lt;/code&gt; value. Normally it is generated automatically when a table is created. When a table is discovered the engine can force it to have a specific &lt;code&gt;tabledef_version&lt;/code&gt; value (simply by setting it in the &lt;code&gt;TABLE_SHARE&lt;/code&gt; before calling the &lt;code&gt;init_from_binary_frm_image()&lt;/code&gt; or &lt;code&gt;init_from_sql_statement_string()&lt;/code&gt; methods).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53880580ae7f952610baac5f8958c77b9d30f1fc" translate="yes" xml:space="preserve">
          <source>The previous statement creates an event named myevent. This event executes once &amp;mdash; one hour following its creation &amp;mdash; by running an SQL statement that increments the value of the myschema.mytable table's mycol column by 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b40d13592c300c31afba55015ce514f8d2fd337" translate="yes" xml:space="preserve">
          <source>The primary Performance Module has a master copy of the Extent Map. On system startup, the file is read into memory, then physically copied to all other participating User and Performance modules for disaster recovery and failover. Nodes keep the Extent Map in memory for quick access. As Extents are modified, updates are broadcast to participating nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b220f1b7c4347bb5c8cb6a1f0ba8120d2f4ea80" translate="yes" xml:space="preserve">
          <source>The primary data is stored in MariaDB (ie. in InnoDB)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12cafd522d76c5b4db00cd8a44d693140add3066" translate="yes" xml:space="preserve">
          <source>The primary difference between the two functions is that &lt;em&gt;JSON_QUERY&lt;/em&gt; returns an object or an array, while &lt;em&gt;JSON_VALUE&lt;/em&gt; returns a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e81e029aa8eb9b148d708f1c16a8291db277bda2" translate="yes" xml:space="preserve">
          <source>The primary goal of Cassandra SE (Storage Engine) is data integration between the SQL and NoSQL worlds. Have you ever needed to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83bd444ee38eec60f9524226461c95eed246e834" translate="yes" xml:space="preserve">
          <source>The primary key in MyRocks is always the clustered key, that is, the index record is THE table record and so it's not possible to do &quot;index only&quot; because there isn't anything that is not in the primary key's (Key,Value) pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7a2e40bfdb6fb81c793c65ffcfc58310f3aa79" translate="yes" xml:space="preserve">
          <source>The primary key is used, if there is one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2504b1a5ec207ecfb0fd76f607151a67744f6af5" translate="yes" xml:space="preserve">
          <source>The primary purpose of &lt;code&gt;innobackupex&lt;/code&gt; mode is to allow scripts and tools to more easily migrate to Mariabackup if they were originally designed to use the &lt;code&gt;innobackupex&lt;/code&gt; utility that is included with &lt;a href=&quot;../percona-xtrabackup-overview/index&quot;&gt;Percona XtraBackup&lt;/a&gt;. It is not recommended to use this mode in new scripts, since it is not guaranteed to be supported forever. See &lt;a href=&quot;https://jira.mariadb.org/browse/MDEV-20552&quot;&gt;MDEV-20552&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6878ef6a540fb4680805477aeaa90cc2653aeb4d" translate="yes" xml:space="preserve">
          <source>The primary purpose of the User Module is to handle concurrency scaling. It never directly touches database files and doesn't require visibility to them. It uses a machine's RAM in a transitory manner to assemble partial query results into a complete answer that's returned to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7013898bd711b018fa2488253c7aa333b69108" translate="yes" xml:space="preserve">
          <source>The primary reason that Mariabackup needs to be able to encrypt and decrypt data is that it needs to apply &lt;a href=&quot;../xtradbinnodb-redo-log/index&quot;&gt;InnoDB redo log&lt;/a&gt; records to make the data consistent when the backup is prepared. As a consequence, Mariabackup does not perform many encryption or decryption operations when the backup is initially taken. MariaDB performs more encryption and decryption operations when the backup is prepared. This means that some encryption-related problems (such as using the wrong encryption keys) may not become apparent until the backup is prepared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e9a38a3459c6a23ca97b37b664e0ad912ef53a" translate="yes" xml:space="preserve">
          <source>The primary use case for this algorithm is when the data is significantly larger than will fit into cache (the buffer_pool). Hence, the main goal is to minimize the number of disk hits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce9fa4d419bd08244d0e1ccc69e8896a1407c6a" translate="yes" xml:space="preserve">
          <source>The privilege type. See &lt;a href=&quot;../grant/index#column-privileges&quot;&gt;Column Privileges&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4fca6e7208d097da6be5f1dfb9ad29f43199cfe" translate="yes" xml:space="preserve">
          <source>The privileges required for executing statements within f() need to be checked when f() executes. This might mean that privileges are needed for p1() or p2(), depending on the execution path within f(). Those privileges must be checked at runtime, and the user who must possess the privileges is determined by the SQL SECURITY values of the view v and the function f().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9400005c3bca2486ac5d4f71c851ac612c4135" translate="yes" xml:space="preserve">
          <source>The problem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46130cd6e1127b4e20c9328fc1241388f380399e" translate="yes" xml:space="preserve">
          <source>The problem is that CONNECT cannot guess what you want to do with arrays. Here the AUTHOR array is left undefined, which means that only its first value will be retrieved unless you also had specified &amp;ldquo;Expand=AUTHOR&amp;rdquo; in the option list. But of course, you can replace it by anything else.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67608bf5b21d15db8a339f0abb264fbebcdb3155" translate="yes" xml:space="preserve">
          <source>The problem is that on some systems, the &lt;code&gt;pam_unix&lt;/code&gt; PAM module needs access to &lt;code&gt;/etc/shadow&lt;/code&gt; in order to function, and most systems only allow &lt;code&gt;root&lt;/code&gt; to access that file by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16acc042064d9853a49ce98d67517922c594ae8f" translate="yes" xml:space="preserve">
          <source>The problem space</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8220c03da5b94e9996320147f3346f0b4582e836" translate="yes" xml:space="preserve">
          <source>The problems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e0a483fae3ff1bda5886da7d837126aabeb2a4" translate="yes" xml:space="preserve">
          <source>The problems with replication will only occur with statement-based logging. If row-based logging is used, since changes are made to rows based on the master's rows, there is no possibility of the slave and master getting out of sync.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16386491d445e8fe8e30bde7f2fa721e1a2805b" translate="yes" xml:space="preserve">
          <source>The problems:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56f8f02c50cefd92998fe684622901830235e649" translate="yes" xml:space="preserve">
          <source>The procedure for MyISAM tables is identical, except that &lt;a href=&quot;../myisamchk/index&quot;&gt;myisamchk&lt;/a&gt; doesn't have the &lt;code&gt;--ignore-control-file&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b0aa3166fdec5fff6dd66dcaccab39af874d3a" translate="yes" xml:space="preserve">
          <source>The procedure name is pushed to Lex-&amp;gt;value_list. The sql_command code for the result of parsing a is &lt;code&gt;SQLCOM_DROP_PROCEDURE&lt;/code&gt;/&lt;code&gt;SQLCOM_DROP_FUNCTION&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec21956cd25784cf25085436f3b15b19c59991b" translate="yes" xml:space="preserve">
          <source>The procedure returns one resultset, SELECT *, distance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8ba7b2ee93b38c6e8c3882dcc79297535574b2" translate="yes" xml:space="preserve">
          <source>The procedure to change compression settings is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96768612b67b43866cb813a3f82c8717f268342" translate="yes" xml:space="preserve">
          <source>The procedure: sp_head.h:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c6aa4519f3841d32fc758dd4c244a6ecba76083" translate="yes" xml:space="preserve">
          <source>The process involved in safely disabling data-at-rest encryption for your ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5d3715d75179bdbcb35ea1e66a3725438a2607" translate="yes" xml:space="preserve">
          <source>The process involved in safely disabling data-at-rest encryption for your Aria tables is very similar to that of enabling encryption. To disable, you need to set the relevant system variables and then rebuild each table into an unencrypted state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b108fd10de2ab664c1e0152c57c6e5faf8a1baa4" translate="yes" xml:space="preserve">
          <source>The process involved in safely disabling encryption for your InnoDB tables is a little more complicated than that of enabling encryption. Turning off the relevant system variables doesn't decrypt the tables. If you turn it off and remove the encryption key management plugin, it'll render the encrypted data inaccessible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ce29ddbfa7387e8d522d85337438fb2d184e6c" translate="yes" xml:space="preserve">
          <source>The process is applicable to &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-534-release-notes/&quot;&gt;MariaDB 5.3.4&lt;/a&gt; and XtraDB from Percona Server 5.1.61.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ec5fdbbc0fc5be0985fe065f17ae33d79f6573" translate="yes" xml:space="preserve">
          <source>The process is fully functional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3136a0620ccfb0cb3535606acb30b36a590731" translate="yes" xml:space="preserve">
          <source>The process is functional in a standby/ready state in case a failover occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8612458628d8e970b773ddd34711a4530d7031b" translate="yes" xml:space="preserve">
          <source>The process is offline due to a fault.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ef041719af3abfc5fb8ed082be78374dc4a5e3" translate="yes" xml:space="preserve">
          <source>The process is performing an initialization task at startup time before going to the ACTIVE state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="239c4de3148f88ea1faf50d2705263a819c06ae2" translate="yes" xml:space="preserve">
          <source>The process to install MariaDB Galera Cluster with the MariaDB &lt;code&gt;apt-get&lt;/code&gt; repository is practically the same as installing standard MariaDB Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002b43427f57748fdaa9702c0c65a8884348870c" translate="yes" xml:space="preserve">
          <source>The process to install MariaDB Galera Cluster with the MariaDB &lt;code&gt;yum&lt;/code&gt; repository is practically the same as installing standard MariaDB Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65eddee7cb4d6d77138584734a01004755c22218" translate="yes" xml:space="preserve">
          <source>The process to install MariaDB Galera Cluster with the MariaDB &lt;code&gt;zypper&lt;/code&gt; repository is practically the same as installing standard MariaDB Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8150f5644445c02825b5a17def7cc48b56e555d2" translate="yes" xml:space="preserve">
          <source>The process was taken offline with the stop or shutdown command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7cdd3bc0162bef988f649fc6fdfaa6b03441ca7" translate="yes" xml:space="preserve">
          <source>The processing of the group by is done by the data source, which returns only the generated result set on which only the where clause is performed locally. The result:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893af8cbbbed852b8eb2bd1484b6b7f08c2ca575" translate="yes" xml:space="preserve">
          <source>The program will generate and execute (when needed) either of these:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4d144aa7582fe9a121d973b11713f7b5be39f7" translate="yes" xml:space="preserve">
          <source>The progress of the process within the current stage (0-100%).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0949fd67c90b93a1af6ec8acf01c9cb569cab5fc" translate="yes" xml:space="preserve">
          <source>The progress report is also shown in the output of the &lt;code&gt;&lt;a href=&quot;../show-processlist/index&quot;&gt;SHOW PROCESSLIST&lt;/a&gt;&lt;/code&gt; statement and in the contents of the &lt;code&gt;&lt;a href=&quot;../information-schema-processlist-table/index&quot;&gt;information_schema.PROCESSLIST&lt;/a&gt;&lt;/code&gt; table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad6f1c15625d9dc87e76e471127a3b0dfb2a4ade" translate="yes" xml:space="preserve">
          <source>The prompt command reconfigures the default prompt &lt;code&gt;\N [\d]&amp;gt;&lt;/code&gt;. The string for defining the prompt can contain the following special sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86e738e105d5e869c0c27f366478b0743681acb" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;Xuc&lt;/code&gt; matches any character that can be represented by a Universal Character Name (in C++ and other programming languages). These include &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;`&lt;/code&gt;, and all characters with Unicode code points greater than &lt;code&gt;U+00A0&lt;/code&gt;, excluding the surrogates &lt;code&gt;U+D800&lt;/code&gt;..&lt;code&gt;U+DFFF&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4b80653525d363b08ff9078ab80dc85b257db3" translate="yes" xml:space="preserve">
          <source>The property names represented by &lt;code&gt;xx&lt;/code&gt; above are limited to the Unicode script names, the general category properties, and &quot;Any&quot;, which matches any character (including newline). Those that are not part of an identified script are lumped together as &quot;Common&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc5831bcea824720a164bab2463c027abc0f885" translate="yes" xml:space="preserve">
          <source>The protocol of the connection (tcp,socket,pipe,memory).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f95b684994b89f2dc86e33b41c74961c195954c" translate="yes" xml:space="preserve">
          <source>The protocol to use for connection (tcp, socket, pipe, memory).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ddc1aee2d48c7f77596aed42b4cf9c8d68fadf6" translate="yes" xml:space="preserve">
          <source>The published table (see Wikipedia) is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4c98140d5a7b15637ac377ee5c2cdfb3a8f8af" translate="yes" xml:space="preserve">
          <source>The pure (deprecated) CONNECT syntax is also accepted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf484042b74b6575a43649520160f8061368d92" translate="yes" xml:space="preserve">
          <source>The purge batch size is defined as the number of &lt;a href=&quot;../innodb-redo-log/index&quot;&gt;InnoDB redo log&lt;/a&gt; records that must be written before triggering purge. The purge batch size can be set by configuring the &lt;code&gt;&lt;a href=&quot;../innodb-system-variables/index#innodb_purge_batch_size&quot;&gt;innodb_purge_batch_size&lt;/a&gt;&lt;/code&gt; system variable. This system variable can be specified as a command-line argument to &lt;code&gt;&lt;a href=&quot;../mysqld-options/index&quot;&gt;mysqld&lt;/a&gt;&lt;/code&gt; or it can be specified in a relevant server &lt;a href=&quot;../configuring-mariadb-with-option-files/index#option-groups&quot;&gt;option group&lt;/a&gt; in an &lt;a href=&quot;../configuring-mariadb-with-option-files/index&quot;&gt;option file&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f974801b765e530fa1b535b39c90a4336c0bf841" translate="yes" xml:space="preserve">
          <source>The purge rollback segment truncation frequency is defined as the number of purge loops that are run before unnecessary rollback segments are truncated. The purge rollback segment truncation frequency can be set by configuring the &lt;code&gt;&lt;a href=&quot;../innodb-system-variables/index#innodb_purge_rseg_truncate_frequency&quot;&gt;innodb_purge_rseg_truncate_frequency&lt;/a&gt;&lt;/code&gt; system variable. This system variable can be changed dynamically with &lt;code&gt;&lt;a href=&quot;../set/index#global-session&quot;&gt;SET GLOBAL&lt;/a&gt;&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86643cf3fc67a3723dae89dde3189cee430c591" translate="yes" xml:space="preserve">
          <source>The purge thread deletes the rows in the undo log which are not needed by any existing view. The rows for which a most recent version exists are deleted, as well as the delete-marked rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa784f329c2f8e4c147f57096ac83738dfd1809" translate="yes" xml:space="preserve">
          <source>The purge thread will physically delete index keys and rows, but the free space introduced is still not returned to operating system. This can lead to gaps in the pages. If you have variable length rows, new rows may be larger than old rows and cannot make use of the available space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94259fe2efca28a8d2f2158cb73c6894fa2ab0c" translate="yes" xml:space="preserve">
          <source>The purpose of the binary log is to allow &lt;a href=&quot;../replication/index&quot;&gt;replication&lt;/a&gt;, where data is sent from one or more masters to one or more slave servers based on the contents of the binary log, as well as assisting in backup operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524f2e76ad418d948ebf35b97e49c6d09ff5f9bb" translate="yes" xml:space="preserve">
          <source>The purpose of this optimization is to provide the means to terminate the execution of &lt;code&gt;&lt;a href=&quot;../select/index&quot;&gt;SELECT&lt;/a&gt;&lt;/code&gt; statements which examine too many rows, and thus use too many resources. This is achieved through an extension of the &lt;code&gt;&lt;a href=&quot;../select/index#limit&quot;&gt;LIMIT&lt;/a&gt;&lt;/code&gt; clause &amp;mdash;&lt;code&gt;LIMIT ROWS EXAMINED number_of_rows &lt;/code&gt;. Whenever possible the semantics of &lt;code&gt;LIMIT ROWS EXAMINED&lt;/code&gt; is the same as that of normal &lt;code&gt;LIMIT&lt;/code&gt; (for instance for aggregate functions).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a80ef33b6970a04fe3712f2f8135fbaebbff51b" translate="yes" xml:space="preserve">
          <source>The queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beafac297dff63b219997297b69b967476d52148" translate="yes" xml:space="preserve">
          <source>The query associated to the DECLARE CURSOR is executed when OPEN is executed. It is important to remember this if the query produces an error, or calls functions which have side effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8512808cbe5ad92b75fffefa08d8beeb8295b66" translate="yes" xml:space="preserve">
          <source>The query cache also needs to be disabled for MariaDB &lt;a href=&quot;../galera/index&quot;&gt;Galera&lt;/a&gt; cluster versions prior to &quot;5.5.40-galera&quot;, &quot;10.0.14-galera&quot; and &quot;10.1.2&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5c27f4532eef43e7eea1312b1a6fe9e6e8bc611" translate="yes" xml:space="preserve">
          <source>The query cache can be used when tables have a write lock (which may seem confusing since write locks should avoid table reads). This behaviour can be changed by setting the &lt;code&gt;&lt;a href=&quot;../server-system-variables/index#query_cache_wlock_invalidate&quot;&gt;query_cache_wlock_invalidate&lt;/a&gt;&lt;/code&gt; system variable to &lt;code&gt;ON&lt;/code&gt;, in which case each write lock will invalidate the table query cache. Setting to &lt;code&gt;OFF&lt;/code&gt;, the default, means that cached queries can be returned even when a table lock is being held. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429af5bbfc80d805f89f027c6273f6e1064fa2b3" translate="yes" xml:space="preserve">
          <source>The query cache handles transactions. Internally a flag (FLAGS_IN_TRANS) is set to 0 when a query was executed outside a transaction, and to 1 when the query was inside a transaction (&lt;a href=&quot;begin&quot;&gt;BEGIN&lt;/a&gt; / &lt;a href=&quot;../commit/index&quot;&gt;COMMIT&lt;/a&gt; / &lt;a href=&quot;../rollback/index&quot;&gt;ROLLBACK&lt;/a&gt;). This flag is part of the &quot;query cache hash&quot;, in others words one query inside a transaction is different from a query outside a transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46329c569ed952719e2dbf817276f30211201456" translate="yes" xml:space="preserve">
          <source>The query cache is not used by the &lt;a href=&quot;../spider/index&quot;&gt;Spider&lt;/a&gt; storage engine (amongst others).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b00b76e548e56afa0dff893b56b0c416c315de7" translate="yes" xml:space="preserve">
          <source>The query cache needs to be disabled in order to use &lt;a href=&quot;../oqgraph/index&quot;&gt;OQGRAPH&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af95f4b888b12d3f9f20d57cca961de217aa123" translate="yes" xml:space="preserve">
          <source>The query cache size is allocated in 1024 byte-blocks, thus it should be set to a multiple of 1024.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8083ed64bd5a2eac787fb38861a695404316756e" translate="yes" xml:space="preserve">
          <source>The query cache stores results of SELECT queries so that if the identical query is received in future, the results can be quickly returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81178391b1f2357bb2e95899dbba39f573b170e0" translate="yes" xml:space="preserve">
          <source>The query in the configuration files is the query that will be used for building the index. In the sample data, this is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce81250ed4aaa6f446b7f87a4d65f1bb38efdb0f" translate="yes" xml:space="preserve">
          <source>The query is structured so that the UM process on the PM node gets the fact table data locally from the PM node (as indicated by the use of the &lt;a href=&quot;../mariadb/columnstore-information-functions/index&quot;&gt;idbLocalPm()&lt;/a&gt; function), while the dimension table data is extracted from all the PM nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a9b22914bae122c3d67c28d6b3365c2e1e0ded" translate="yes" xml:space="preserve">
          <source>The query is structured so that the UM process on the PM node gets the fact table data locally from the PM node (as indicated by the use of the idbLocalPm() function), while the dimension table data is extracted from all the PM nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edcbe11d2a0b93fed73cdc4ff65f21d59af47836" translate="yes" xml:space="preserve">
          <source>The query itself can also specify that it is not to be stored in the cache by using the &lt;code&gt;SQL_NO_CACHE&lt;/code&gt; attribute. Query-level control is an effective way to use the cache more optimally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4a6365adbb9e6f856ebfd9a91e7ea91a5f661a" translate="yes" xml:space="preserve">
          <source>The query planner will</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f0520379fff4aba97390a0b19b9c509b3626b0" translate="yes" xml:space="preserve">
          <source>The query result is stored using a minimum block size of &lt;code&gt;&lt;a href=&quot;../server-system-variables/index#query_cache_min_res_unit&quot;&gt;query_cache_min_res_unit&lt;/a&gt;&lt;/code&gt;. Check two conditions to use a good value of this variable: Query cache insert result blocks with locks, each new block insert lock query cache, a small value will increase locks and fragmentation and waste less memory for small results, a big value will increase memory use wasting more memory for small results but it reduce locks. Test with your workload for fine tune this variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab1dd65c6ec60581d4f89da9b3c7bda243f9a27" translate="yes" xml:space="preserve">
          <source>The query sent to the server will be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261947ab67879e306d45db54c2b82e72fd304387" translate="yes" xml:space="preserve">
          <source>The query takes 40 seconds over cold cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9b1c1f646e8730307f68bffc57c9e4cc07246a" translate="yes" xml:space="preserve">
          <source>The query takes more than one hour (we didn't wait longer), which makes it impractical to use subqueries in such cases. The EXPLAIN below shows that the subquery was transformed into a correlated one, which indicates an IN-TO-EXISTS transformation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba4dca94d761ddc0e2896c5c838107b199036b5" translate="yes" xml:space="preserve">
          <source>The query to discuss</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc69340d948eb3288cbfd0579915b981a85c4a8a" translate="yes" xml:space="preserve">
          <source>The query uses only one table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5deb133b05d0f4a602953f39914f1328b916e7" translate="yes" xml:space="preserve">
          <source>The query was to find big (l_quantity &amp;gt; 40) orders that were made in January 1993 that took more than 25 days to ship:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef51a9988f989257559bb75c81805cc1df1b9479" translate="yes" xml:space="preserve">
          <source>The query will read about 90 rows, which is a big improvement over the 4079 row reads plus 4068 temporary table reads/writes we had before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ae4e661cd9699033d8dfaf449935dd350cf6d4" translate="yes" xml:space="preserve">
          <source>The query:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8cc81855ce4f9470d47431d9374cdc1ad9493e" translate="yes" xml:space="preserve">
          <source>The question is &quot;When was Andrew Johnson president of the US?&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9185a2a2b174ac535ca2a3c6c5bd1d3329a2442" translate="yes" xml:space="preserve">
          <source>The question mark and the colon after the opening parenthesis create a non-capturing group: &lt;code&gt;(?:...)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de24fd9018e93787fa2bbb80e9293f112ddb08a" translate="yes" xml:space="preserve">
          <source>The queued rows are held only in memory until they are inserted into the table. This means that if you terminate mysqld forcibly (for example, with kill -9) or if mysqld dies unexpectedly, any queued rows that have not been written to disk are lost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9509ad54d613c68e56620a94c79a862941a670b" translate="yes" xml:space="preserve">
          <source>The quick way to get an _estimated_ number of rows for an InnoDB table is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703e44c283ec893030b5d75df5d77e15ed79f0f6" translate="yes" xml:space="preserve">
          <source>The range key (dt) must be included in any PRIMARY or UNIQUE key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992222f8fc28caf0a9f22c19967253540a06ccc0" translate="yes" xml:space="preserve">
          <source>The range key (dt) should be last in any keys it is in -- You have already &quot;pruned&quot; with it; it is almost useless in the index, especially at the beginning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e2bf5ba4335fc9b6f6631ad66eecfe724a51f7f" translate="yes" xml:space="preserve">
          <source>The range_base is some positive number (see Limitations). The interval is defined as the difference between two nearby powers of the range base.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43197479a987cf4fba48450ff9374f0ba27a881" translate="yes" xml:space="preserve">
          <source>The rank window function allows for ranking or assigning a numeric order value based on the window function definition. Using the Rank() function will result in the same value for ties / equal values and the next rank value skipped. The Dense_Rank() function behaves similarly except the next consecutive number is used after a tie rather than skipped. The Row_Number() function will provide a unique ordering value. The example query shows the Rank() function being applied to rank sales reps by the number of opportunities for Q4 2016.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7672f19621d3eef7146ee2d1dc68b3343f113d8c" translate="yes" xml:space="preserve">
          <source>The ratio of key_reads to key_read_requests should be as low as possible, 1:100 is the highest acceptable, 1:1000 is better, and 1:10 is terrible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49a5ef35c9bc94f1fac002a503c1cc1347f8f4a" translate="yes" xml:space="preserve">
          <source>The read point select is produce with a 10M rows sysbench table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d8ad613c25b1799c1ff217444b45a23581e6f0" translate="yes" xml:space="preserve">
          <source>The readable variable value is the same, regardless if read as a global or session value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa9927ab3fec3f221a660f16bdccd94a2981e52" translate="yes" xml:space="preserve">
          <source>The real data type of &lt;code&gt;TYPE OF&lt;/code&gt; and &lt;code&gt;ROW TYPE OF table_name&lt;/code&gt; will become known at the very beginning of the stored routine call. &lt;a href=&quot;../alter-table/index&quot;&gt;ALTER TABLE&lt;/a&gt; or &lt;a href=&quot;../drop-table/index&quot;&gt;DROP TABLE&lt;/a&gt; statements performed inside the current routine on the tables that appear in anchors won't affect the data type of the anchored variables, even if the variable is declared after an &lt;a href=&quot;../alter-table/index&quot;&gt;ALTER TABLE&lt;/a&gt; or &lt;a href=&quot;../drop-table/index&quot;&gt;DROP TABLE&lt;/a&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1b403e63ea6252fb2fdd75228f3d05fb43f5ad" translate="yes" xml:space="preserve">
          <source>The real data type of a &lt;code&gt;ROW TYPE OF cursor_name&lt;/code&gt; variable will become known when execution enters into the block where the variable is declared. Data type instantiation will happen only once. In a cursor &lt;code&gt;ROW TYPE OF&lt;/code&gt; variable that is declared inside a loop, its data type will become known on the very first iteration and won't change on further loop iterations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978b9b0f5a4a3e281c9ad0963228d26e815432fd" translate="yes" xml:space="preserve">
          <source>The real problems occur with outward tables, in particular when they are created from already existing files. The first issue is to make the partition table use the correct existing file names. The second one, only for already existing not void tables, is to be sure the partitioning function match the distribution of the data already existing in the files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1814931487da6ac5262c8f982cd87086abe4a515" translate="yes" xml:space="preserve">
          <source>The real work of Flashback is done by &lt;code&gt;mysqlbinlog&lt;/code&gt; with &lt;code&gt;--flashback&lt;/code&gt;. This causes events to be translated: INSERT to DELETE, DELETE to INSERT, and for UPDATEs the before and after images are swapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869b864f5c5ead99dd33d7169d93bad5cb043562" translate="yes" xml:space="preserve">
          <source>The reason for the above change is that MariaDB is using the newer &lt;a href=&quot;../aria-storage-engine/index&quot;&gt;Aria&lt;/a&gt; storage engine for disk based temporary files instead of MyISAM. The main benefit of Aria is that it can cache both indexes and rows and thus gives better performance than MyISAM for large queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e2ef53ca872d2c1ca42375a0cba443e16de9918" translate="yes" xml:space="preserve">
          <source>The reason for the differing results above is that when 0x31 is inserted directly to the column, it's treated as a number (see &lt;a href=&quot;../hexadecimal-literals/index&quot;&gt;Hexadecimal Literals&lt;/a&gt;), while when 0x31 is passed to COALESCE(), it's treated as a string, because:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd00847d52fcddbb4f8c0ebe4babf867d79debb" translate="yes" xml:space="preserve">
          <source>The reason for the differing results above is that when 0x31 is inserted directly to the column, it's treated as a number, while when 0x31 is passed to &lt;a href=&quot;../coalesce/index&quot;&gt;COALESCE()&lt;/a&gt;, it's treated as a string, because:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af851afac0210e6a773312ecbbfb53f02fb297e4" translate="yes" xml:space="preserve">
          <source>The reason for the failure will almost certainly be written in the &lt;a href=&quot;../error-log/index&quot;&gt;error log&lt;/a&gt; and, if you are starting MariaDB manually, to the console. By default, the error log is named &lt;em&gt;host-name&lt;/em&gt;.err and is written to the data directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ed3e1605cb7ff20bbd86d44cc3d2f22e443de6" translate="yes" xml:space="preserve">
          <source>The reason for this behavior is Vista/Win7 file system redirection. Writes to protected locations (in this case a subdirectory of Program Files) are redirected to the user's so-called &quot;Virtual Store&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd0a2a7de22af01f40fb210930e50cc63890f06" translate="yes" xml:space="preserve">
          <source>The reason is that MariaDB's build process relies heavily on &lt;code&gt;&lt;a href=&quot;https://cmake.org&quot;&gt;cmake&lt;/a&gt;&lt;/code&gt; for a lot of things. In this specific case, MariaDB's build process relies on &lt;a href=&quot;https://gitlab.kitware.com/cmake/community/wikis/doc/cpack/PackageGenerators&quot;&gt;CMake CPack Package Generators&lt;/a&gt; to build RPMs. The specific package generator that it uses to build RPMs is called &lt;code&gt;&lt;a href=&quot;https://cmake.org/cmake/help/v3.10/module/CPackRPM.html&quot;&gt;CPackRPM&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5679fb1f08e7ba9066ce758f51ff63efefe559" translate="yes" xml:space="preserve">
          <source>The reason is that dropping column &lt;code&gt;a&lt;/code&gt; would result in the new constraint that all values in column &lt;code&gt;b&lt;/code&gt; be unique. In order to drop the column, an explicit &lt;code&gt;DROP PRIMARY KEY&lt;/code&gt; and &lt;code&gt;ADD PRIMARY KEY&lt;/code&gt; would be required. Up until &lt;a href=&quot;https://mariadb.com/kb/en/mariadb-1027-release-notes/&quot;&gt;MariaDB 10.2.7&lt;/a&gt;, the column was dropped and the additional constraint applied, resulting in the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec59df6c9e177482e1db6baef0313f3f6642924" translate="yes" xml:space="preserve">
          <source>The reason is the weight between nodes 2 and 6 is &lt;code&gt;10&lt;/code&gt; in &lt;code&gt;oq_graph2&lt;/code&gt;, so the shortest path taking into account &lt;code&gt;weight&lt;/code&gt; is now across more nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281d491a830750556dc655788ac54898b0806f0a" translate="yes" xml:space="preserve">
          <source>The reason to use &lt;code&gt;--no-defaults&lt;/code&gt; is to ensure that we don't inherit incorrect options from some old my.cnf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc59373392d64e4692dc4087611eec17faa200c8" translate="yes" xml:space="preserve">
          <source>The reason why only one instead of two rows was returned becomes clear when we see how the floating point squares were evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78db1e4a3f2f6a756c476fd8a1a42f25d174044c" translate="yes" xml:space="preserve">
          <source>The reason why the first argument is returned by such a query is because of tables such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dcc0adc076c0cbae785f69f72a56f1276afe984" translate="yes" xml:space="preserve">
          <source>The reason why you may want to have many &lt;code&gt;BEGIN/END&lt;/code&gt; statements instead of just one is that the former will use up less transaction log space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd25ae0533df50367d3121c5f6bc8e2fa4bfdaf" translate="yes" xml:space="preserve">
          <source>The reasons you may want to use InnoDB instead of XtraDB are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b12b08a20c68b146e004d904adaa552fda94c3c" translate="yes" xml:space="preserve">
          <source>The recommended algorithm is &lt;code&gt;AES_CTR&lt;/code&gt;, but this algorithm is only available when MariaDB is built with recent versions of &lt;a href=&quot;https://www.openssl.org/&quot;&gt;OpenSSL&lt;/a&gt;. If the server is built with &lt;a href=&quot;https://www.wolfssl.com/products/wolfssl/&quot;&gt;wolfSSL&lt;/a&gt; or &lt;a href=&quot;https://www.wolfssl.com/products/yassl/&quot;&gt;yaSSL&lt;/a&gt;, then this algorithm is not available. See &lt;a href=&quot;../tls-and-cryptography-libraries-used-by-mariadb/index&quot;&gt;TLS and Cryptography Libraries Used by MariaDB&lt;/a&gt; for more information about which libraries are used on which platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499d1aa482447ebea83d5c48b70920477e7910c5" translate="yes" xml:space="preserve">
          <source>The recommended way to quickly check all MyISAM tables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09695ae331e1ae118988ef2b184625ac91cdf763" translate="yes" xml:space="preserve">
          <source>The records of the first operand are written into the join buffer one by one until the buffer is full.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603e40929284ab013d6fa107aa4498105d8261aa" translate="yes" xml:space="preserve">
          <source>The records of the second operand are read from the base/temporary table one by one. For every read record r2 of table t2 the join buffer is scanned, and, for any record r1 from the buffer such that r2 matches r1 the concatenation of the interesting fields of r1 and r2 is sent to the result stream of the corresponding partial join.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3546f5c87b27306809d7744ee049be348eefe41" translate="yes" xml:space="preserve">
          <source>The recovery mode should never be set to a value other than zero except in an emergency situation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f9fb05017e14283054cc9157c01f328ca74bb6" translate="yes" xml:space="preserve">
          <source>The recursion is done using &lt;code&gt;(?1)&lt;/code&gt; to call for the first parenthesized subpattern, which includes everything except the leading &lt;code&gt;^&lt;/code&gt; and the trailing &lt;code&gt;$&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8892f7fe089926dde4ac4b4e3a939d4ad3dbd434" translate="yes" xml:space="preserve">
          <source>The redo log group capacity is the total combined size of all InnoDB redo logs. The relevant factors are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff4ded1badf3e43456eca56c8ba6b2ec39a98b2" translate="yes" xml:space="preserve">
          <source>The redo log is used by &lt;a href=&quot;../innodb/index&quot;&gt;InnoDB/XtraDB&lt;/a&gt; during crash recovery. The redo log files have names like &lt;code&gt;ib_logfileN&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is an integer. If the &lt;a href=&quot;../innodb-system-variables/index#innodb_log_group_home_dir&quot;&gt;innodb_log_group_home_dir&lt;/a&gt; system variable is configured, then the redo log files will be created in that directory. Otherwise, they will be created in the directory defined by the &lt;a href=&quot;../server-system-variables/index#datadir&quot;&gt;datadir&lt;/a&gt; system variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f5330e7810bb346b3ec3c87e6d0813cc671d57" translate="yes" xml:space="preserve">
          <source>The redo log occupancy is the percentage of the InnoDB redo log capacity that is taken up by dirty pages that have not yet been flushed to the physical InnoDB tablespace files in a checkpoint. Therefore, it's determined by the following calculation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712dd36bc323bc2607045a05ddd2b902a0a4eaae" translate="yes" xml:space="preserve">
          <source>The reference examples above are included in the standard build of MariaDB ColumnStore and so can be used by registering them as user defined aggregate functions. The same can be done for new functions assuming the instance has the updated libraries included. From a mcsmysql prompt:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ae100eab0e4654f4b0a22060c1139562612b17" translate="yes" xml:space="preserve">
          <source>The reference that is used to as the key value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78de7d1b69048779cc1242891024d28aa175520a" translate="yes" xml:space="preserve">
          <source>The referenced columns must be a PRIMARY KEY or a UNIQUE index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b3bb875cac06ff44029bc30d6c88c4aaf975a5" translate="yes" xml:space="preserve">
          <source>The regular expression for the table name can be negated by prefixing it with a tilde (&amp;ldquo;&lt;code&gt;~&lt;/code&gt;&amp;rdquo;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b976516e51c2acb7553c4272b275d0e4f4a42f6" translate="yes" xml:space="preserve">
          <source>The regular expression in the above example implements the following BNF grammar:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27000444f76ac159c10093da425abe717e95fb3e" translate="yes" xml:space="preserve">
          <source>The regular quote character is the backtick character - &lt;code&gt;`&lt;/code&gt;, but if the &lt;code&gt;ANSI_QUOTES&lt;/code&gt;&lt;a href=&quot;../sql-mode/index&quot;&gt;SQL_MODE&lt;/a&gt; option is specified, a regular double quote - &lt;code&gt;&quot;&lt;/code&gt; may be used as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d26ceade479cff3650e1d980545de76b5ab2c7f" translate="yes" xml:space="preserve">
          <source>The regular server &lt;a href=&quot;../configuring-mariadb-with-option-files/index#option-groups&quot;&gt;option groups&lt;/a&gt; can also be used for common options that are read by all instances:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199e143b693ef04e141b826316416f1cfd63514f" translate="yes" xml:space="preserve">
          <source>The related &lt;a href=&quot;../information-schema-innodb_buffer_page/index&quot;&gt;INFORMATION_SCHEMA.INNODB_BUFFER_PAGE&lt;/a&gt; table contains the same information, but with a block id rather than LRU position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12e1668b5cbe725da21a49ba3b4e04efe30197af" translate="yes" xml:space="preserve">
          <source>The related &lt;a href=&quot;../information-schema-innodb_buffer_page_lru-table/index&quot;&gt;INFORMATION_SCHEMA.INNODB_BUFFER_PAGE_LRU&lt;/a&gt; table contains the same information, but with an LRU (least recently used) position rather than block id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4fa1781a4a8445f584092ccd2267bc42810a850" translate="yes" xml:space="preserve">
          <source>The related &lt;a href=&quot;../xtradbinnodb-server-status-variables/index#innodb_available_undo_logs&quot;&gt;innodb_available_undo_logs&lt;/a&gt; status variable stores the total number of available InnoDB undo logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69415a5311b98dd3194975f4e50252f99167c10" translate="yes" xml:space="preserve">
          <source>The related tables, &lt;a href=&quot;../performance-schema-events_stages_history-table/index&quot;&gt;events_stages_history&lt;/a&gt; and &lt;a href=&quot;../performance-schema-events_stages_history_long-table/index&quot;&gt;events_stages_history_long&lt;/a&gt; derive their values from the current events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a024b8920d31b75f7418899433da00ce9d86be" translate="yes" xml:space="preserve">
          <source>The related tables, &lt;a href=&quot;../performance-schema-events_statements_history-table/index&quot;&gt;events_statements_history&lt;/a&gt; and &lt;a href=&quot;../performance-schema-events_statements_history_long-table/index&quot;&gt;events_statements_history_long&lt;/a&gt; derive their values from the current events table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b17c8cc0363cadb7f8df990105deb08a75565e7" translate="yes" xml:space="preserve">
          <source>The related tables, &lt;a href=&quot;../performance-schema-events_waits_history-table/index&quot;&gt;events_waits_history&lt;/a&gt; and &lt;a href=&quot;../performance-schema-events_waits_history_long-table/index&quot;&gt;events_waits_history_long&lt;/a&gt; derive their values from the current events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9927805c75e7e95885d7c0fee21dedbe361b7a1a" translate="yes" xml:space="preserve">
          <source>The relay log is a set of log files created by a slave during &lt;a href=&quot;../standard-replication/index&quot;&gt;replication&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45230ee4135d81662e4a0bdf9e24caa0e98de60" translate="yes" xml:space="preserve">
          <source>The relay-log name with a connection_name suffix. The xxxxx is the relay log number. This contains the replication data read from the master.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a8f3640376603ba8cebe0f80cc1405cb5f028d" translate="yes" xml:space="preserve">
          <source>The remainder of a division can be obtained using the &lt;a href=&quot;../mod/index&quot;&gt;MOD&lt;/a&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e9472502ac9b48e4b69549e2a88533cd5ee527" translate="yes" xml:space="preserve">
          <source>The remote column name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c974a400800b6aa7e70c8edad429046edb9debe8" translate="yes" xml:space="preserve">
          <source>The remote table or view to access. This can be specified within the connection string or using specific CONNECT options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719664d5913998a6caf1b9b552d8888ca1d9800e" translate="yes" xml:space="preserve">
          <source>The rename operation is done atomically, which means that no other session can access any of the tables while the rename is running. For example, if you have an existing table &lt;code&gt;old_table&lt;/code&gt;, you can create another table &lt;code&gt;new_table&lt;/code&gt; that has the same structure but is empty, and then replace the existing table with the empty one as follows (assuming that &lt;code&gt;backup_table&lt;/code&gt; does not already exist):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518de981b4195cdef3698908c54fdbf3df43f4f6" translate="yes" xml:space="preserve">
          <source>The replace program is used by &lt;a href=&quot;../msql2mysql/index&quot;&gt;msql2mysql&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793ea842052974769c31474fc7cb26007374317e" translate="yes" xml:space="preserve">
          <source>The replace string can have backreferences to the subexpressions in the form \N, where N is a number from 1 to 9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a74dd606327cd374b7c2062d67a834691407b2fb" translate="yes" xml:space="preserve">
          <source>The replace utility program changes strings in place in files or on the standard input. Invoke replace in one of the following ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f865947d9383d7ba313090d5b31240731cfb19" translate="yes" xml:space="preserve">
          <source>The replace utility program changes strings in place infiles or on the standard input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f308b84dae289cd0044980ca8de1e017dec0407" translate="yes" xml:space="preserve">
          <source>The requested server id %d clashes with the slave startup option --replicate-same-server-id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3230462e88b891c1c2a073af42ef2ed4239beeaa" translate="yes" xml:space="preserve">
          <source>The requested value %s for the master delay exceeds the maximum %u</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39beaffb53b2654ac34674528c8a6c4ea0940cc" translate="yes" xml:space="preserve">
          <source>The requested value for the heartbeat period exceeds the value of &lt;a href=&quot;../replication-and-binary-log-server-system-variables/index#slave_net_timeout&quot;&gt;slave_net_timeout&lt;/a&gt; seconds. A sensible value for the period should be less than the timeout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0533515064be9ec92e3cb31bbe7ed2d64d55d60" translate="yes" xml:space="preserve">
          <source>The requested value for the heartbeat period is either negative or exceeds the maximum allowed (%s seconds).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ddf9ff8103b02aa0caf79fcfdcc17f6939c73a8" translate="yes" xml:space="preserve">
          <source>The requested value for the heartbeat period is less than 1 millisecond. The value is reset to 0, meaning that heartbeating will effectively be disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e938c1db2f621e5bba8932a39f32fb9d07fd8be3" translate="yes" xml:space="preserve">
          <source>The requested view:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c14b3bc235ba7b79a8aca63586de3e943b878b93" translate="yes" xml:space="preserve">
          <source>The required parameters include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3d4790635d4f86e6b61e54ac15f75cf60907e9" translate="yes" xml:space="preserve">
          <source>The required syntax for an &lt;code&gt;ANY&lt;/code&gt; or &lt;code&gt;SOME&lt;/code&gt; quantified comparison is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca1ae18bca9923b4a2592ed5e3d758bdad2f425" translate="yes" xml:space="preserve">
          <source>The required syntax for the &lt;code&gt;COMMIT&lt;/code&gt; statement is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3eb46f38a3cff19d001caca6aadde05a8bb56ee" translate="yes" xml:space="preserve">
          <source>The resize operation waits until all active transactions and operations are completed, and new transactions and operations that need to access the buffer pool must wait until the resize is complete (although when decreasing the size, access is permitted when defragmenting and withdrawing pages).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92ebb94027eee210dc5d087b8b7e80489ba972a" translate="yes" xml:space="preserve">
          <source>The resources are tracked per account, which means &lt;code&gt;'user'@'server'&lt;/code&gt;; not per user name or per connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b45c6a4019a87e7cd240e979062a8e0a8638622" translate="yes" xml:space="preserve">
          <source>The response time decreases to 0.04. This is expected because the query latency is increased from multiple network round trips and condition push down is not implemented yet. Sysbench doing a lot of range queries. Just consider for now that this range query can be a badly optimized query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68dfc84270791799dad852908ee537b491b703a7" translate="yes" xml:space="preserve">
          <source>The rest of the article is dedicated to *major* upgrades, e.g 10.1.x to 10.2.y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9987352e9c2af8b623311ff99212a02ea3ba6687" translate="yes" xml:space="preserve">
          <source>The rest of the install and setup process is as normal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40251770c4e98d2ab3bad78b95877bb369b332b" translate="yes" xml:space="preserve">
          <source>The rest of this page is a complete reference of dynamic columns in MariaDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147c6e57f78fec9f4293aef9f10edd03a04cb159" translate="yes" xml:space="preserve">
          <source>The restore process for partial backups is quite different than the process for &lt;a href=&quot;../full-backup-and-restore-with-mariabackup/index&quot;&gt;full backups&lt;/a&gt;. A partial backup is not a completely functional data directory. The data dictionary in the &lt;a href=&quot;../innodb-system-tablespaces/index&quot;&gt;InnoDB system tablespace&lt;/a&gt; will still contain entries for the databases and tables that were not included in the backup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9ded18b2898b606a02e3ed44f4719440778695" translate="yes" xml:space="preserve">
          <source>The restore process for restoring individual tables and/or partitions is quite different than the process for &lt;a href=&quot;../full-backup-and-restore-with-mariabackup/index&quot;&gt;full backups&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8614fec14fe19846869f0ec5e91d24099426dd42" translate="yes" xml:space="preserve">
          <source>The result (limited by 10):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398a04078169628b7652ad4c5349f802422aabfe" translate="yes" xml:space="preserve">
          <source>The result is a binary string of the same length as &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d8170d98950c22e6026933d7548298a3e52f98" translate="yes" xml:space="preserve">
          <source>The result is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da60dfdb2a7a4840eb0d44bf35df06f2380b978" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;EXCEPT&lt;/code&gt; is all records of the left &lt;code&gt;SELECT&lt;/code&gt; result except records which are in right &lt;code&gt;SELECT&lt;/code&gt; result set, i.e. it is subtraction of two result sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9cfc17e20509ebd68875f033eae505fa775584" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;EXCEPT&lt;/code&gt; is all records of the left &lt;code&gt;SELECT&lt;/code&gt; result set except records which are in right &lt;code&gt;SELECT&lt;/code&gt; result set, i.e. it is subtraction of two result sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53bafc4323d0cd972718cc5d76e57b98c62dfe3f" translate="yes" xml:space="preserve">
          <source>The result of an intersect is the intersection of right and left &lt;code&gt;SELECT&lt;/code&gt; results, i.e. only records that are present in both result sets will be included in the result of the operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c1127f4c630f91933bfbe99db4ba35e6c6f7c8" translate="yes" xml:space="preserve">
          <source>The result of such an architecture is a natural &quot;commit grouping&quot; - If commits are coming faster than the system can sync, they do not stall. Instead, all commits that came since the last sync are logged to the same &quot;active&quot; page, and they all are synced with the next - one - sync. Thus, thought individual commits are delayed, throughput is not decreasing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="695ebd2a2f4abc718e13f4e240c3e0e3ca577358" translate="yes" xml:space="preserve">
          <source>The result of the &lt;code&gt;UNION&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4336133041bab26130cc712e91ea4f7c6c2e9921" translate="yes" xml:space="preserve">
          <source>The result of the query is a subset of the complete query, depending on when the query engine detected that the limit was reached. The result may be empty if no result rows could be computed before reaching the limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ea20f61c3be549481b1488251ff59008411fa9" translate="yes" xml:space="preserve">
          <source>The result returned by &lt;code&gt;SETVAL()&lt;/code&gt; is &lt;code&gt;next_value&lt;/code&gt; or NULL if the given &lt;code&gt;next_value&lt;/code&gt; and &lt;code&gt;round&lt;/code&gt; is smaller than the current value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e0112c7fd00af03051c84c37129f451dd9253c" translate="yes" xml:space="preserve">
          <source>The result returned by the SELECT statement is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6a6ec5e178be42383c85edd995b2c08aba2315" translate="yes" xml:space="preserve">
          <source>The result showing the first partition has been disabled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251de5db13293772e2a8c21262749b0cafff456e" translate="yes" xml:space="preserve">
          <source>The result showing the first partition has been dropped:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5cc65015794fae58f281a3d0b9bb13ab1b9397" translate="yes" xml:space="preserve">
          <source>The result showing the first partition has been enabled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f879f0ab5198f41a810081d6ece43a4fd747435" translate="yes" xml:space="preserve">
          <source>The result we get from the new table is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c5b940c2fddef28586699a689b629393751af9" translate="yes" xml:space="preserve">
          <source>The result will be that both the &lt;code&gt;INSERT&lt;/code&gt; and the &lt;code&gt;DROP&lt;/code&gt; will go through as separate transactions so the &lt;code&gt;ROLLBACK&lt;/code&gt; will have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e00afb986323ba904efea3a982c45371e5a241e" translate="yes" xml:space="preserve">
          <source>The result will be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32f62d90a0bb00b2ec1a6ce99110f9957e90f29" translate="yes" xml:space="preserve">
          <source>The result will have 0 rows. This is because according to the partition function query pruning will only look inside the second partition and will miss the row that is in the wrong partition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01be55a0c09b1d115faa58cff213ed7e949d0a99" translate="yes" xml:space="preserve">
          <source>The result:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37298dfaedd32ebfa6255ad5b63476300818330" translate="yes" xml:space="preserve">
          <source>The resulting module, for instance &lt;code&gt;mongo.so&lt;/code&gt; or &lt;code&gt;mongo.dll&lt;/code&gt;, must be placed in the plugin directory of the MariaDB server. Then, you will be able to use MONGO like tables simply replacing in the CREATE TABLE statement the option &lt;code&gt;TABLE_TYPE=MONGO&lt;/code&gt; with &lt;code&gt;TABLE_TYPE=OEM SUBTYPE=MONGO MODULE=&amp;rsquo;mongo.(so|dll)&amp;rsquo;&lt;/code&gt;. Actually, the module name, here supposedly &amp;lsquo;mongo&amp;rsquo;, can be anything you like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766380be9abf8a248a9dc0fae4cfafd8bc9dc0b3" translate="yes" xml:space="preserve">
          <source>The resulting module, for instance rest.so or rest.dll, must be placed in the plugin directory of the MariaDB server. Then, you will be able to use NoSQL tables simply replacing in the CREATE TABLE statement the TABLE_TYPE option =JSON or XML by TABLE_TYPE=OEM SUBTYPE=REST MODULE=&amp;rsquo;rest.(so|dll)&amp;rsquo;. Actually, the module name, here supposedly &amp;lsquo;rest&amp;rsquo;, can be anything you like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134e9001f9eef3a3de399c2589fb034d78785976" translate="yes" xml:space="preserve">
          <source>The results of &lt;code&gt;SHOW WARNINGS&lt;/code&gt; and &lt;code&gt;SHOW COUNT(*) WARNINGS&lt;/code&gt; are directly sent to the client. If you need to access those information in a stored program, you can use the &lt;code&gt;&lt;a href=&quot;../get-diagnostics/index&quot;&gt;GET DIAGNOSTICS&lt;/a&gt;&lt;/code&gt; statement instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a30113fae3978b1f717d263c22c29017478a8d0" translate="yes" xml:space="preserve">
          <source>The results show some statistics for the values returned by the query, and propose an optimal data type for the columns. This can be helpful for checking your existing tables, or after importing new data. You may need to try different settings for the arguments so that PROCEDURE ANALYSE() does not suggest the ENUM data type when it is not appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae23359249c0828c9bbf6976690f83f87ee08298" translate="yes" xml:space="preserve">
          <source>The return string is a binary string where the first character is &lt;code&gt;CHAR(128 | key_num)&lt;/code&gt;. If an error occurs, &lt;code&gt;DES_ENCRYPT()&lt;/code&gt; returns &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d80655901d1fc1c3b9cde1fd19d935f565e2988" translate="yes" xml:space="preserve">
          <source>The return string is lowercase, and is platform independent, since it does not use functions specific to the operating system. It has a maximum length of 39 characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8a291096229b5d96edd313fb9398165f026bca" translate="yes" xml:space="preserve">
          <source>The return value is 16 bytes in length, or NULL if the argument was NULL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c9ba4e751ad47695e0cb8b3339561ae80fc21d" translate="yes" xml:space="preserve">
          <source>The return value is 41-bytes in length, and the first character is always '*'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67705ab3b53dd115219738e273c103d6fafb0e5" translate="yes" xml:space="preserve">
          <source>The return value is a 32-hex digit string, and as of &lt;a href=&quot;../what-is-mariadb-55/index&quot;&gt;MariaDB 5.5&lt;/a&gt;, is a nonbinary string in the connection &lt;a href=&quot;../data-types-character-sets-and-collations/index&quot;&gt;character set and collation&lt;/a&gt;, determined by the values of the &lt;a href=&quot;../server-system-variables/index#character_set_connection&quot;&gt;character_set_connection&lt;/a&gt; and &lt;a href=&quot;../server-system-variables/index#collation_connection&quot;&gt;collation_connection&lt;/a&gt; system variables. Before 5.5, the return value was a binary string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3493efa90da5a58247500894bca2134d09165e7" translate="yes" xml:space="preserve">
          <source>The return value is a dynamic column blob after the modification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb333502081411c845909f304e7aacce837acc6f" translate="yes" xml:space="preserve">
          <source>The return value is a dynamic column blob after the modifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b65dcf2b223b1a98877182782e731cf1520982" translate="yes" xml:space="preserve">
          <source>The return value is a nonbinary string in the connection &lt;a href=&quot;../data-types-character-sets-and-collations/index&quot;&gt;character set and collation&lt;/a&gt;, determined by the values of the &lt;a href=&quot;../server-system-variables/index#character_set_connection&quot;&gt;character_set_connection&lt;/a&gt; and &lt;a href=&quot;../server-system-variables/index#collation_connection&quot;&gt;collation_connection&lt;/a&gt; system variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d50d69ce9f245c2ccdaa97d510867db381e72b" translate="yes" xml:space="preserve">
          <source>The return value is always positive, even if a negative &lt;code&gt;TIME&lt;/code&gt; value is provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e134dcff74b4fc62eb577bb6ad735535f561673" translate="yes" xml:space="preserve">
          <source>The return value is suitable for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a582e2f007607fff7c36a573a89a03792039eb" translate="yes" xml:space="preserve">
          <source>The return value's &lt;a href=&quot;../data-types/index&quot;&gt;data type&lt;/a&gt; (for stored functions).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e7f7fccd6013b61e6ff6c0379d5e12b04cf205" translate="yes" xml:space="preserve">
          <source>The returned (eventually error) message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d11cb3df06a966daeaef12aa800b080ead9fc9" translate="yes" xml:space="preserve">
          <source>The returned array can be applied other functions. For instance, to get the number of occurrences of an item in a json tree, you can do:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd33f694cd5dbba141a79722f76ae5ba0615df1" translate="yes" xml:space="preserve">
          <source>The returned binary string will be &lt;a href=&quot;../varbinary/index&quot;&gt;VARBINARY(16)&lt;/a&gt; or &lt;a href=&quot;../varbinary/index&quot;&gt;VARBINARY(4)&lt;/a&gt; for IPv6 and IPv4 addresses respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf022198a51c52421f12688e22624f52d49cd347" translate="yes" xml:space="preserve">
          <source>The returned string value is the created file name. If not specified as an argument, the file name can in some cases be retrieved from the first argument; in such cases the file itself is modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b795ace3381e7135bc762300597bcdebc02c56e" translate="yes" xml:space="preserve">
          <source>The reverse function, &lt;a href=&quot;../from_base64/index&quot;&gt;FROM_BASE64()&lt;/a&gt;, decodes an encoded base-64 string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a10d6331d7396759735fcac87208862c9517ce" translate="yes" xml:space="preserve">
          <source>The reverse of &lt;code&gt;SELECT INTO OUTFILE&lt;/code&gt; is &lt;a href=&quot;../load-data-into-tables-or-index/index&quot;&gt;LOAD DATA&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c090a3485d0cb2dc85622ea5da8881b1e5624a0" translate="yes" xml:space="preserve">
          <source>The role of &lt;code&gt;.frm&lt;/code&gt; files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc4e1fc2bcf43f8319197eca6fdf756c8c9312f" translate="yes" xml:space="preserve">
          <source>The roles that the current user can enable are listed in the &lt;a href=&quot;../information-schema-applicable_roles-table/index&quot;&gt;APPLICABLE_ROLES&lt;/a&gt; Information Schema table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444b643d6fad9d7c1b18d9babb797f613f80b786" translate="yes" xml:space="preserve">
          <source>The root cause is that InnoDB has a maximum row size that is roughly equivalent to half of the value of the &lt;code&gt;&lt;a href=&quot;../xtradbinnodb-server-system-variables/index#innodb_page_size&quot;&gt;innodb_page_size&lt;/a&gt;&lt;/code&gt; system variable. See &lt;a href=&quot;../innodb-row-formats-overview/index#maximum-row-size&quot;&gt;InnoDB Row Formats Overview: Maximum Row Size&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53501ce9a06b5c989cbba17f4b0ca775753fc860" translate="yes" xml:space="preserve">
          <source>The root/non-root password for the nodes (all nodes must have the same root/non-root password or root/non-root ssh keys must be set up between servers). MariaDB ColumnStore can be installed as root or a non-root user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb178f01962f7468e13e0552f07f2290d8c4efc" translate="yes" xml:space="preserve">
          <source>The routine parameters for a 'block' could have be start of this block and start of next block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f9e0b574901a26cab7ec6f046e6701ce358334" translate="yes" xml:space="preserve">
          <source>The routine privilege. See &lt;a href=&quot;../grant/index#function-privileges&quot;&gt;Function Privileges&lt;/a&gt; and &lt;a href=&quot;../grant/index#procedure-privileges&quot;&gt;Procedure Privileges&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3346c61b4b4e985e562c5a22a362a1abbec0c3e3" translate="yes" xml:space="preserve">
          <source>The routine_body consists of a valid SQL procedure statement. This can be a simple statement such as &lt;a href=&quot;../select/index&quot;&gt;SELECT&lt;/a&gt; or &lt;a href=&quot;../insert/index&quot;&gt;INSERT&lt;/a&gt;, or it can be a compound statement written using &lt;a href=&quot;../begin-end/index&quot;&gt;BEGIN and END&lt;/a&gt;. Compound statements can contain declarations, loops, and other control structure statements. See &lt;a href=&quot;../programmatic-and-compound-statements/index&quot;&gt;Programmatic and Compound Statements&lt;/a&gt; for syntax details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687f62a630be3d53fc3d949803c4e4ebec37a82a" translate="yes" xml:space="preserve">
          <source>The row id (1 to 8,388,608) within the column's extent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f739a8072fd63a71c49d462dcdaca4819f0cb8" translate="yes" xml:space="preserve">
          <source>The row nodes are by default the children of the table node. However, for instance to eliminate some children nodes that are not real row nodes, the row node name can be specified using the &lt;code&gt;rownode&lt;/code&gt; sub-option of the &lt;code&gt;option_list&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8226f93addd3c218454a4d237593b0bf45424e30" translate="yes" xml:space="preserve">
          <source>The row ordinal number in the file. This is different from ROWID for multiple tables, TBL/XCOL/OCCUR/PIVOT tables, XML tables with a multiple column, and for DBF tables where ROWNUM includes soft deleted rows.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
