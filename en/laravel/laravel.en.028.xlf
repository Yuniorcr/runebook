<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="en" datatype="htmlbody" original="laravel">
    <body>
      <group id="laravel">
        <trans-unit id="239ca5cadf6671c72f156e95aeef1033945dea02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mapWithKeys&lt;/code&gt; method iterates through the collection and passes each value to the given callback. The callback should return an associative array containing a single key / value pair:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95a7e846a0481718e35c9de2688703b19d3ab63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;max&lt;/code&gt; method returns the maximum value of a given key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16ebacfb4e303287aab6a0adf3680fe1bd24b66" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maximize&lt;/code&gt; method may be used to maximize the browser window:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a127cb91d36b68d2c64e7047e0795306a5b6f4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;median&lt;/code&gt; method returns the &lt;a href=&quot;https://en.wikipedia.org/wiki/Median&quot;&gt;median value&lt;/a&gt; of a given key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2bff9bee995c7358ce4025ac5922d6a7a5bd456" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;merge&lt;/code&gt; method merges the given array or collection with the original collection. If a string key in the given items matches a string key in the original collection, the given items's value will overwrite the value in the original collection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398f38332d8ae3960e7b621a3fe716b34e39460d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mergeWhen&lt;/code&gt; method should not be used within arrays that mix string and numeric keys. Furthermore, it should not be used within arrays with numeric keys that are not ordered sequentially.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640c85078418188c50cac52509c31ebbc2530ded" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;method&lt;/code&gt; method will return the HTTP verb for the request. You may use the &lt;code&gt;isMethod&lt;/code&gt; method to verify that the HTTP verb matches a given string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e2f9518f81ba4783dfac4477943886f0c42794" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;method_field&lt;/code&gt; function generates an HTML &lt;code&gt;hidden&lt;/code&gt; input field containing the spoofed value of the form's HTTP verb. For example, using &lt;a href=&quot;blade&quot;&gt;Blade syntax&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8988c90e84f509d07768de2b867d8b02f10fb7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;migrate:fresh&lt;/code&gt; command will drop all tables from the database and then execute the &lt;code&gt;migrate&lt;/code&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2d0f1b391f03e254e793a8c42737745d5c4cbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;migrate:refresh&lt;/code&gt; command will roll back all of your migrations and then execute the &lt;code&gt;migrate&lt;/code&gt; command. This command effectively re-creates your entire database:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f5170b9af3e3d88f6fe42e14675ce645af2675" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;migrate:reset&lt;/code&gt; command will roll back all of your application's migrations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca7071caa72089e029ff4edcf1c4a9dff0fbbb7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;min&lt;/code&gt; method returns the minimum value of a given key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1149e735f5c5d42e3772b15a284c23e90605bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mix&lt;/code&gt; function returns the path to a &lt;a href=&quot;mix&quot;&gt;versioned Mix file&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aacbdbfa47b90a6fcad6995986fcbc164d8795b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; method returns the &lt;a href=&quot;https://en.wikipedia.org/wiki/Mode_(statistics)&quot;&gt;mode value&lt;/a&gt; of a given key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95df8af425fa27dedb1b2da9f086ffc69a3934a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mouseover&lt;/code&gt; method may be used when you need to move the mouse over an element matching the given selector:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05cf2f85700546dde87e90cfedafa0814cccfc0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; method may be used to prefix each route name in the group with a given string. For example, you may want to prefix all of the grouped route's names with &lt;code&gt;admin&lt;/code&gt;. The given string is prefixed to the route name exactly as it is specified, so we will be sure to provide the trailing &lt;code&gt;.&lt;/code&gt; character in the prefix:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040f6a2749f129342687668914f15817cb00cdc2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;needsRehash&lt;/code&gt; function allows you to determine if the work factor used by the hasher has changed since the password was hashed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6026f4a33049fc65741233f9132c57749e409c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;networks&lt;/code&gt; property of the &lt;code&gt;Homestead.yaml&lt;/code&gt; configures network interfaces for your Homestead environment. You may configure as many interfaces as necessary:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba6a5c7a34ce639f0de0ed113a66ecc1ec20ec1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;noProrate&lt;/code&gt; method may be used to update the subscription's quantity without pro-rating the charges:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d70f8a7eeb39223815b593ca3a38c3887318de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;now&lt;/code&gt; function creates a new &lt;code&gt;Illuminate\Support\Carbon&lt;/code&gt; instance for the current time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842bb2958cf6c3adbcf037a1ae8c90d2d8d4a966" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;npm run watch&lt;/code&gt; command will continue running in your terminal and watch all relevant files for changes. Webpack will then automatically recompile your assets when it detects a change:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134db7b07acd55b76dba0809882e89ac9252d195" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nth&lt;/code&gt; method creates a new collection consisting of every n-th element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d5b94cd42f35d82ef3844ea54bcbd398fb8af7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;old&lt;/code&gt; function &lt;a href=&quot;requests#retrieving-input&quot;&gt;retrieves&lt;/a&gt; an &lt;a href=&quot;requests#old-input&quot;&gt;old input&lt;/a&gt; value flashed into the session:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb427cd1d8977ff2e1699c203dbcf75759642b91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;only&lt;/code&gt; method returns all of the key / value pairs that you request; however, it will not return key / value pairs that are not present on the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be8a8cab6455840c954f0fdc71a7556953d1d307" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;only&lt;/code&gt; method returns the items in the collection with the specified keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af883ebe90263f7e6a3323f4e092b4f3a352e701" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onlyTrashed&lt;/code&gt; method will retrieve &lt;strong&gt;only&lt;/strong&gt; soft deleted models:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c9831b6f4f0d752df25e88dd02284913903e10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;open&lt;/code&gt; method would typically be used in file based session store systems. Since Laravel ships with a &lt;code&gt;file&lt;/code&gt; session driver, you will almost never need to put anything in this method. You can leave it as an empty stub. It is a fact of poor interface design (which we'll discuss later) that PHP requires us to implement this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84359d31350f826c4639dfef5954189909025c6d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;optional&lt;/code&gt; function accepts any argument and allows you to access properties or call methods on that object. If the given object is &lt;code&gt;null&lt;/code&gt;, properties and methods will return &lt;code&gt;null&lt;/code&gt; instead of causing an error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e1e9b43f409ccc133138c47639b408f67a23be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;optional&lt;/code&gt; function also accepts a Closure as its second argument. The Closure will be invoked if the value provided as the first argument is not null:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a54834611c3d7ad719a628b634c95c4a1e3b260" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;or&lt;/code&gt; Operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7745a76ea7b7f8cf7e8ec5cf1a363149bd842b6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;orderBy&lt;/code&gt; method allows you to sort the result of the query by a given column. The first argument to the &lt;code&gt;orderBy&lt;/code&gt; method should be the column you wish to sort by, while the second argument controls the direction of the sort and may be either &lt;code&gt;asc&lt;/code&gt; or &lt;code&gt;desc&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4c8a33fb26d5c9bc75424d6723db07f691bde2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;orderByRaw&lt;/code&gt; method may be used to set a raw string as the value of the &lt;code&gt;order by&lt;/code&gt; clause:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38ee8eae5d203c985a302d1de11c2a018fca49b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pad&lt;/code&gt; method will fill the array with the given value until the array reaches the specified size. This method behaves like the &lt;a href=&quot;https://secure.php.net/manual/en/function.array-pad.php&quot;&gt;array_pad&lt;/a&gt; PHP function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4a1e7148b70496eec6aa8d0ec0fa9f7a5a51f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;partition&lt;/code&gt; method may be combined with the &lt;code&gt;list&lt;/code&gt; PHP function to separate elements that pass a given truth test from those that do not:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569671de5fca298904d9e891aafdd49774b02925" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;passport:client&lt;/code&gt; Command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbdef9370f668b35cd43bde443ac6d29f9e83c4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path&lt;/code&gt; method returns the request's path information. So, if the incoming request is targeted at &lt;code&gt;http://domain.com/foo/bar&lt;/code&gt;, the &lt;code&gt;path&lt;/code&gt; method will return &lt;code&gt;foo/bar&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebdb257fc1080f7cb941be5ef25cf644680e545" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pipe&lt;/code&gt; method passes the collection to the given callback and returns the result:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528d9bc815870e1b6376820f7d0020ca03f36b69" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pluck&lt;/code&gt; method retrieves all of the values for a given key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0873dc32625778ef83664878d34dfcd5204e636b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;policy&lt;/code&gt; method retrieves a &lt;a href=&quot;authorization#creating-policies&quot;&gt;policy&lt;/a&gt; instance for a given class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="385306a144b912f9b4444e82e097a10997114057" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pop&lt;/code&gt; method removes and returns the last item from the collection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae893db88b01fd2b7dba099b0e75eb6ce9e6619" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prefix&lt;/code&gt; method may be used to prefix each route in the group with a given URI. For example, you may want to prefix all route URIs within the group with &lt;code&gt;admin&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67db8bb38a38a5782b800f8889303beee287f59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;preg_replace_array&lt;/code&gt; function replaces a given pattern in the string sequentially using an array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad8f0110f8abc06cdd8e94021f9b0fa3f89df26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prepend&lt;/code&gt; and &lt;code&gt;append&lt;/code&gt; methods allow you to write to the beginning or end of a file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5212702153aa1d2c9668a678aaa3765bb9b347" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prepend&lt;/code&gt; method adds an item to the beginning of the collection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0a2192125e8b2f6c65f3ddbe45b15032f2dd5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;provider&lt;/code&gt; key in your &lt;code&gt;Homestead.yaml&lt;/code&gt; file indicates which Vagrant provider should be used: &lt;code&gt;virtualbox&lt;/code&gt;, &lt;code&gt;vmware_fusion&lt;/code&gt;, &lt;code&gt;vmware_workstation&lt;/code&gt;, &lt;code&gt;parallels&lt;/code&gt; or &lt;code&gt;hyperv&lt;/code&gt;. You may set this to the provider you prefer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2399280cfad8769cfcc16175bc23500bc89f1793" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;public&lt;/code&gt; Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971c1f44d68fff3e22554f0c9f6c0023cceb80f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;public&lt;/code&gt; directory contains the &lt;code&gt;index.php&lt;/code&gt; file, which is the entry point for all requests entering your application and configures autoloading. This directory also houses your assets such as images, JavaScript, and CSS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fec7ce553db676131b4b11dec36e83202cf6ed1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;public&lt;/code&gt; disk is intended for files that are going to be publicly accessible. By default, the &lt;code&gt;public&lt;/code&gt; disk uses the &lt;code&gt;local&lt;/code&gt; driver and stores these files in &lt;code&gt;storage/app/public&lt;/code&gt;. To make them accessible from the web, you should create a symbolic link from &lt;code&gt;public/storage&lt;/code&gt; to &lt;code&gt;storage/app/public&lt;/code&gt;. This convention will keep your publicly accessible files in one directory that can be easily shared across deployments when using zero down-time deployment systems like &lt;a href=&quot;https://envoyer.io&quot;&gt;Envoyer&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01d59dbd93ed61c06df9603687b5cb894e10659" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;public_path&lt;/code&gt; function returns the fully qualified path to the &lt;code&gt;public&lt;/code&gt; directory. You may also use the &lt;code&gt;public_path&lt;/code&gt; function to generate a fully qualified path to a given file within the public directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5638cb54cfeb095826943a2c955f08256996f444" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pull&lt;/code&gt; method removes and returns an item from the collection by its key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e6a85969f8cc91570c3830a303f326b98476b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pull&lt;/code&gt; method will retrieve and delete an item from the session in a single statement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e32bb82187800ddb1b2160076712cf00f00630" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;push&lt;/code&gt; method appends an item to the end of the collection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e0a43b237d95e9f2c8a822c35e5579795579b20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;push&lt;/code&gt; method may be used to push a new value onto a session value that is an array. For example, if the &lt;code&gt;user.teams&lt;/code&gt; key contains an array of team names, you may push a new value onto the array like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e0f4943fc019bf02f13e473acebb0628b205dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;put&lt;/code&gt; method may be used to store raw file contents on a disk. You may also pass a PHP &lt;code&gt;resource&lt;/code&gt; to the &lt;code&gt;put&lt;/code&gt; method, which will use Flysystem's underlying stream support. Using streams is greatly recommended when dealing with large files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df38bafe89832bfd92c9e939ebe01c7dfcfd0df5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;put&lt;/code&gt; method sets the given key and value in the collection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67397083187d9e7a084bea34cfbbed90b8654fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;putFile&lt;/code&gt; and &lt;code&gt;putFileAs&lt;/code&gt; methods also accept an argument to specify the &quot;visibility&quot; of the stored file. This is particularly useful if you are storing the file on a cloud disk such as S3 and would like the file to be publicly accessible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6cbbb8c18196e38a81e57bdcd46934f98defbbd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;queue:failed&lt;/code&gt; command will list the job ID, connection, queue, and failure time. The job ID may be used to retry the failed job. For instance, to retry a failed job that has an ID of &lt;code&gt;5&lt;/code&gt;, issue the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1a45f34a77a9d5179f6e9a8219f22fc0300a4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;queue:work&lt;/code&gt; Artisan command exposes a &lt;code&gt;--timeout&lt;/code&gt; option. The &lt;code&gt;--timeout&lt;/code&gt; option specifies how long the Laravel queue master process will wait before killing off a child queue worker that is processing a job. Sometimes a child queue process can become &quot;frozen&quot; for various reasons, such as an external HTTP call that is not responding. The &lt;code&gt;--timeout&lt;/code&gt; option removes frozen processes that have exceeded that specified time limit:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c3ea6d15ff16e346a2fac41ed2c51f93c40dbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;random&lt;/code&gt; method returns a random item from the collection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd982fec002d3056f6a0c69b646473d6af1808d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;raw&lt;/code&gt; method was changed from &lt;code&gt;protected&lt;/code&gt; to &lt;code&gt;public&lt;/code&gt; visibility. In addition, it &lt;a href=&quot;https://github.com/laravel/framework/pull/25143&quot;&gt;was added to the &lt;code&gt;Illuminate\Contracts\Auth\Access\Gate&lt;/code&gt; contract&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332ba93b670116207dc56f9ef2e1bdc5428cb313" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method should return the string version of the session data associated with the given &lt;code&gt;$sessionId&lt;/code&gt;. There is no need to do any serialization or other encoding when retrieving or storing session data in your driver, as Laravel will perform the serialization for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766833b27d81d2cd9969dc840d5eac3d7eff1885" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;readStream&lt;/code&gt; and &lt;code&gt;writeStream&lt;/code&gt; methods &lt;a href=&quot;https://github.com/laravel/framework/pull/23755&quot;&gt;have been added to the &lt;code&gt;Illuminate\Contracts\Filesystem\Filesystem&lt;/code&gt; contract&lt;/a&gt;. If you are implementing this interface, you should add these methods to your implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff481d1db22d8ecc19ebbb8cc3897a353368ed56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;redirect&lt;/code&gt; function returns a &lt;a href=&quot;responses#redirects&quot;&gt;redirect HTTP response&lt;/a&gt;, or returns the redirector instance if called with no arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d096535c97cbbc3cd169d88c8635b4628309d049" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;redirect&lt;/code&gt; method takes care of sending the user to the OAuth provider, while the &lt;code&gt;user&lt;/code&gt; method will read the incoming request and retrieve the user's information from the provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d31fff5b64d4c90b888b1bce3a0b86f1434d1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;redirectTo&lt;/code&gt; method will take precedence over the &lt;code&gt;redirectTo&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d294f19d2ca696ebac27054a9f4091af7d7103d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reduce&lt;/code&gt; method reduces the collection to a single value, passing the result of each iteration into the subsequent iteration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25397cfd76e9ddda01a424ec3f52534f1c2e3cd9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;refresh&lt;/code&gt; method will re-hydrate the existing model using fresh data from the database. In addition, all of its loaded relationships will be refreshed as well:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e74d06a1a3b9d18388f76259e43316fcedfa665" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;register&lt;/code&gt; Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02bdc513f7d6233ea2183e9e912f421635f8d84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reject&lt;/code&gt; method filters the collection using the given callback. The callback should return &lt;code&gt;true&lt;/code&gt; if the item should be removed from the resulting collection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426d6b97b5e856ea50b18bd0d19faccbcdfce7f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;render&lt;/code&gt; method is responsible for converting a given exception into an HTTP response that should be sent back to the browser. By default, the exception is passed to the base class which generates a response for you. However, you are free to check the exception type or return your own custom response:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27a91a8988770ca8af6e7bab7cf56bf3e429432" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;report&lt;/code&gt; Helper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70712e89fb6a675a051ba6be6838c7e31c9a010f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;report&lt;/code&gt; function will report an exception using your &lt;a href=&quot;errors#the-exception-handler&quot;&gt;exception handler&lt;/a&gt;'s &lt;code&gt;report&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f9cbef5b956c918c26aa6cdb425e157fcee3df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;request&lt;/code&gt; function returns the current &lt;a href=&quot;requests&quot;&gt;request&lt;/a&gt; instance or obtains an input item:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec1a130c0cf5b9a680f3f1ea0f7ae36b7eb80a82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rescue&lt;/code&gt; function executes the given Closure and catches any exceptions that occur during its execution. All exceptions that are caught will be sent to your &lt;a href=&quot;errors#the-exception-handler&quot;&gt;exception handler&lt;/a&gt;'s &lt;code&gt;report&lt;/code&gt; method; however, the request will continue processing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30d85687966c2da6ebc3f3c0bfe976963f1e212" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resolve&lt;/code&gt; function resolves a given class or interface name to its instance using the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21038d2fe650fc3254fb2b165af30c5d8d511c8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resource_path&lt;/code&gt; function returns the fully qualified path to the &lt;code&gt;resources&lt;/code&gt; directory. You may also use the &lt;code&gt;resource_path&lt;/code&gt; function to generate a fully qualified path to a given file within the resources directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f8355e2a94c709ed5a44a4284348ae7e014016" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resources&lt;/code&gt; Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb863b0abd74e2ee244bbefa5b2ec3ac1cd2bd95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resources&lt;/code&gt; directory contains your views as well as your raw, un-compiled assets such as LESS, SASS, or JavaScript. This directory also houses all of your language files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4bae6e8626d8ef5368db6a9b8fcc00dc88133a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;response&lt;/code&gt; function creates a &lt;a href=&quot;responses&quot;&gt;response&lt;/a&gt; instance or obtains an instance of the response factory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822eca7569c489409918e7898afd53ed149a72b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;response&lt;/code&gt; helper may be used to generate other types of response instances. When the &lt;code&gt;response&lt;/code&gt; helper is called without arguments, an implementation of the &lt;code&gt;Illuminate\Contracts\Routing\ResponseFactory&lt;/code&gt;&lt;a href=&quot;contracts&quot;&gt;contract&lt;/a&gt; is returned. This contract provides several helpful methods for generating responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0b911393c568c82f69436c6dcd9f8984098c81" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;retrieveByCredentials&lt;/code&gt; method receives the array of credentials passed to the &lt;code&gt;Auth::attempt&lt;/code&gt; method when attempting to sign into an application. The method should then &quot;query&quot; the underlying persistent storage for the user matching those credentials. Typically, this method will run a query with a &quot;where&quot; condition on &lt;code&gt;$credentials['username']&lt;/code&gt;. The method should then return an implementation of &lt;code&gt;Authenticatable&lt;/code&gt;. &lt;strong&gt;This method should not attempt to do any password validation or authentication.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9fb62aa0ae24e6e230091aff94755cfb86a48ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;retrieveById&lt;/code&gt; function typically receives a key representing the user, such as an auto-incrementing ID from a MySQL database. The &lt;code&gt;Authenticatable&lt;/code&gt; implementation matching the ID should be retrieved and returned by the method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc1f6d69d561d6b8fdda3b989d219e87beb610e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;retrieveByToken&lt;/code&gt; function retrieves a user by their unique &lt;code&gt;$identifier&lt;/code&gt; and &quot;remember me&quot; &lt;code&gt;$token&lt;/code&gt;, stored in a field &lt;code&gt;remember_token&lt;/code&gt;. As with the previous method, the &lt;code&gt;Authenticatable&lt;/code&gt; implementation should be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3daa20a2b081f7e02537bc3523cb6c0da609f9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;retrieved&lt;/code&gt; event will fire when an existing model is retrieved from the database. When a new model is saved for the first time, the &lt;code&gt;creating&lt;/code&gt; and &lt;code&gt;created&lt;/code&gt; events will fire. If a model already existed in the database and the &lt;code&gt;save&lt;/code&gt; method is called, the &lt;code&gt;updating&lt;/code&gt; / &lt;code&gt;updated&lt;/code&gt; events will fire. However, in both cases, the &lt;code&gt;saving&lt;/code&gt; / &lt;code&gt;saved&lt;/code&gt; events will fire.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7bb541b89ab7ed6ba7ba56ff2acb7e3ef559dec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;retry&lt;/code&gt; function attempts to execute the given callback until the given maximum attempt threshold is met. If the callback does not throw an exception, its return value will be returned. If the callback throws an exception, it will automatically be retried. If the maximum attempt count is exceeded, the exception will be thrown:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c53d92db0a6a97cabf94de3c454e6b59b0c736d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;retry_after&lt;/code&gt; configuration option and the &lt;code&gt;--timeout&lt;/code&gt; CLI option are different, but work together to ensure that jobs are not lost and that jobs are only successfully processed once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff767ec54e02a22caaefd9e0152b2e403557cc6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reverse&lt;/code&gt; method reverses the order of the collection's items, preserving the original keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183971ae544b21e27df9fe2d1ea566a8a996ca73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;route&lt;/code&gt; function generates a URL for the given named route:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffcb3135a54d5f844c76e3efc92dcafaccc89635" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;route&lt;/code&gt; helper may be used to generate URLs to named routes. Named routes allow you to generate URLs without being coupled to the actual URL defined on the route. Therefore, if the route's URL changes, no changes need to be made to your &lt;code&gt;route&lt;/code&gt; function calls. For example, imagine your application contains a route defined like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01cf5d15f8a2ab2b2b3a5f8902b6ce17d374bd5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;routes&lt;/code&gt; Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76a2e6519582fb20cf0b6b5e2e93f7de38f3d79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;routes&lt;/code&gt; directory contains all of the route definitions for your application. By default, several route files are included with Laravel: &lt;code&gt;web.php&lt;/code&gt;, &lt;code&gt;api.php&lt;/code&gt;, &lt;code&gt;console.php&lt;/code&gt; and &lt;code&gt;channels.php&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49214635ee516b94bcd2ee8bfcd1a99187aedac5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sass&lt;/code&gt; method allows you to compile &lt;a href=&quot;http://sass-lang.com/&quot;&gt;Sass&lt;/a&gt; into CSS. You may use the method like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7680e11e7f8a427076f44ee6f1b120a599e9a430" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;save&lt;/code&gt; Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3843c8dc1aa6110ffab27d11291447ee08061b70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;save&lt;/code&gt; method may also be used to update models that already exist in the database. To update a model, you should retrieve it, set any attributes you wish to update, and then call the &lt;code&gt;save&lt;/code&gt; method. Again, the &lt;code&gt;updated_at&lt;/code&gt; timestamp will automatically be updated, so there is no need to manually set its value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf48fae4fa404bbae55e67ac1ae8aa09ef4a307" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scope&lt;/code&gt; middleware may be assigned to a route to verify that the incoming request's access token has &lt;em&gt;at least one&lt;/em&gt; of the listed scopes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a310bc0ef4ae7e793e54310e3eba6b8f4db1ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scopes&lt;/code&gt; middleware may be assigned to a route to verify that the incoming request's access token has &lt;em&gt;all&lt;/em&gt; of the listed scopes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dda2e9b84941817b7c9d6eb03c8291a5993ce51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;search&lt;/code&gt; method searches the collection for the given value and returns its key if found. If the item is not found, &lt;code&gt;false&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee4763c03d0be57249a25d95042a9f0cd32561f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;searchable&lt;/code&gt; method can be considered an &quot;upsert&quot; operation. In other words, if the model record is already in your index, it will be updated. If it does not exist in the search index, it will be added to the index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c086c0c6f9dec2eeb042548fc0ca687b4c8cdf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;secret&lt;/code&gt; method is similar to &lt;code&gt;ask&lt;/code&gt;, but the user's input will not be visible to them as they type in the console. This method is useful when asking for sensitive information such as a password:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62a6cdd4c4ab71eac011662b003a43be7137b68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;secure_asset&lt;/code&gt; function generates a URL for an asset using HTTPS:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c6af967111503702995233eda67ec07b73dd02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;secure_url&lt;/code&gt; function generates a fully qualified HTTPS URL to the given path:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f9e0ec9872c5b538987dd1c1e81cb68523dc1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;select&lt;/code&gt; method will always return an &lt;code&gt;array&lt;/code&gt; of results. Each result within the array will be a PHP &lt;code&gt;stdClass&lt;/code&gt; object, allowing you to access the values of the results:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e08a681285541ca35226dee6d48a29d9e47f09c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;selectRaw&lt;/code&gt; method can be used in place of &lt;code&gt;select(DB::raw(...))&lt;/code&gt;. This method accepts an optional array of bindings as its second argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="450ab438f995408eacbc1059156f07a0aa129373" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;serves&lt;/code&gt; Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4766d08b723aa2b830ed6800840aec6343bbe478" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;serves&lt;/code&gt; method should return &lt;code&gt;true&lt;/code&gt; if your driver should handle the incoming request. Otherwise, the method should return &lt;code&gt;false&lt;/code&gt;. So, within this method you should attempt to determine if the given &lt;code&gt;$sitePath&lt;/code&gt; contains a project of the type you are trying to serve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b534c50023d2c67178ed16f560e0cacfe6668f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;session&lt;/code&gt; function may be used to get or set &lt;a href=&quot;session&quot;&gt;session&lt;/a&gt; values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="957a2b70386f9c78fcfcd6d7f2c57a0f8c8478d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shift&lt;/code&gt; method removes and returns the first item from the collection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352fe67c8d237daee0b7bddf917994e2b371e73b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shuffle&lt;/code&gt; method randomly shuffles the items in the collection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c91d996919a5633963bd24dca523e7339c79b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;singleton&lt;/code&gt; method binds a class or interface into the container that should only be resolved one time. Once a singleton binding is resolved, the same object instance will be returned on subsequent calls into the container:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90b5cda44ef5cb18fa383a07deafcb33948ce93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;skip&lt;/code&gt; method may be seen as the inverse of &lt;code&gt;when&lt;/code&gt;. If the &lt;code&gt;skip&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt;, the scheduled task will not be executed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361e1bd5c09cbe65eccb5dd54eb84604eb262430" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slack&lt;/code&gt; channel requires a &lt;code&gt;url&lt;/code&gt; configuration option. This URL should match a URL for an &lt;a href=&quot;https://slack.com/apps/A0F7XDUAZ-incoming-webhooks&quot;&gt;incoming webhook&lt;/a&gt; that you have configured for your Slack team.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a866a40c9d2102b6f55f9568eb1c01c2feda2bf6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slice&lt;/code&gt; method returns a slice of the collection starting at the given index:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb50f7a944201a22d2af60c21e8981e261454c04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sms_from&lt;/code&gt; option is the phone number that your SMS messages will be sent from. You should generate a phone number for your application in the Nexmo control panel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8eb3115015f39913ddb9e8e4eccb204701ca4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;snake_case&lt;/code&gt; function converts the given string to &lt;code&gt;snake_case&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad58ffee8416bc5d053b969e98a3e548eb43478" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;softDeletesTz&lt;/code&gt; Migration Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56db5041ae9561deeaf05ee2a513d20895a063bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sort&lt;/code&gt; method sorts the collection. The sorted collection keeps the original array keys, so in this example we'll use the &lt;a href=&quot;#method-values&quot;&gt;&lt;code&gt;values&lt;/code&gt;&lt;/a&gt; method to reset the keys to consecutively numbered indexes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ef76b95b7a145e504c2af650e1f9efcb39ad94" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sortBy&lt;/code&gt; method sorts the collection by the given key. The sorted collection keeps the original array keys, so in this example we'll use the &lt;a href=&quot;#method-values&quot;&gt;&lt;code&gt;values&lt;/code&gt;&lt;/a&gt; method to reset the keys to consecutively numbered indexes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467349866e5037da88cbcb494331d88496a2a558" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sortKeys&lt;/code&gt; method sorts the collection by the keys of the underlying associative array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24adcdedb569516f5b9a14741f40038e1f7f868" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;splice&lt;/code&gt; method removes and returns a slice of items starting at the specified index:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d60386a6443f73064b0eda92900e068e2dec667" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;split&lt;/code&gt; Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ce5a8b7a05d1d212d2bd34d4f3a1f4073f3b47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;split&lt;/code&gt; method &lt;a href=&quot;https://github.com/laravel/framework/pull/24088&quot;&gt;has been updated to always return the requested number of &quot;groups&quot;&lt;/a&gt;, unless the total number of items in the original collection is less than the requested collection count. Generally, this should be considered a bug fix; however, it is listed as a breaking change out of caution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44d07301a85adbcb784b440151955079613aaa6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;split&lt;/code&gt; method breaks a collection into the given number of groups:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef5eb18ebd62febeff4e1c89ac270ae0a85b089" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;starts_with&lt;/code&gt; function determines if the given string begins with the given value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe195a923d78dad4c825a0703027c201544d6672" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stateless&lt;/code&gt; method may be used to disable session state verification. This is useful when adding social authentication to an API:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557eb839d246b1081237432fdffc28fc357703f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sticky&lt;/code&gt; Option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2c7d09b9a378b5a38b56e1e7912aefcac9379f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sticky&lt;/code&gt; option is an &lt;em&gt;optional&lt;/em&gt; value that can be used to allow the immediate reading of records that have been written to the database during the current request cycle. If the &lt;code&gt;sticky&lt;/code&gt; option is enabled and a &quot;write&quot; operation has been performed against the database during the current request cycle, any further &quot;read&quot; operations will use the &quot;write&quot; connection. This ensures that any data written during the request cycle can be immediately read back from the database during that same request. It is up to you to decide if this is the desired behavior for your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a748f2838181e56ea12be5d9f01b7a068a44abfe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;storage/app/public&lt;/code&gt; directory may be used to store user-generated files, such as profile avatars, that should be publicly accessible. You should create a symbolic link at &lt;code&gt;public/storage&lt;/code&gt; which points to this directory. You may create the link using the &lt;code&gt;php artisan storage:link&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d39215b2f55526dcc2b5c6ff669534d1201be8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;storage&lt;/code&gt; Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e969ebfb2e3d6873978fcf72a6f565d1338a6820" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;storage&lt;/code&gt; directory contains your compiled Blade templates, file based sessions, file caches, and other files generated by the framework. This directory is segregated into &lt;code&gt;app&lt;/code&gt;, &lt;code&gt;framework&lt;/code&gt;, and &lt;code&gt;logs&lt;/code&gt; directories. The &lt;code&gt;app&lt;/code&gt; directory may be used to store any files generated by your application. The &lt;code&gt;framework&lt;/code&gt; directory is used to store framework generated files and caches. Finally, the &lt;code&gt;logs&lt;/code&gt; directory contains your application's log files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7e30ec3c9bb64e301ef57659123f4a2c1f14b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;storage_path&lt;/code&gt; function returns the fully qualified path to the &lt;code&gt;storage&lt;/code&gt; directory. You may also use the &lt;code&gt;storage_path&lt;/code&gt; function to generate a fully qualified path to a given file within the storage directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19abb4e2d9a34c936e46484efc8e94a9c76f6c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;store&lt;/code&gt; method accepts the path where the file should be stored relative to the filesystem's configured root directory. This path should not contain a file name, since a unique ID will automatically be generated to serve as the file name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032f495e417c24c04fb91115588453a8888de037" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;store&lt;/code&gt; method also accepts an optional second argument for the name of the disk that should be used to store the file. The method will return the path of the file relative to the disk's root:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd7c318edf37818ad402625d530705f3fc749e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_after&lt;/code&gt; function returns everything after the given value in a string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45dea7b5f7999f9da249eb0135057902a28a28b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_before&lt;/code&gt; function returns everything before the given value in a string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284d34a82422d83fa6b494d295f7fb5918c0daf7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_contains&lt;/code&gt; function determines if the given string contains the given value (case sensitive):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d581eaed85d42e756b87eb20d387846be7c1d04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_finish&lt;/code&gt; function adds a single instance of the given value to a string if it does not already end with the value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f62b85ff640f8d43f47c07ec836df7b1cf61229" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_is&lt;/code&gt; function determines if a given string matches a given pattern. Asterisks may be used to indicate wildcards:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f1247acee339fcc9e7b9c490c786c163521053" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_limit&lt;/code&gt; function truncates the given string at the specified length:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20517375593afdc1a5bd84609c3c581e39395942" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_plural&lt;/code&gt; function converts a string to its plural form. This function currently only supports the English language:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a7db2120814d94a296091d0037e14ca8180825" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_random&lt;/code&gt; function generates a random string of the specified length. This function uses PHP's &lt;code&gt;random_bytes&lt;/code&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07459ebf2a7f1e0e60f462de0b218a7cf7362afa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_replace_array&lt;/code&gt; function replaces a given value in the string sequentially using an array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322423cc02bb0a18ad4eea8997d852ca46302015" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_replace_first&lt;/code&gt; function replaces the first occurrence of a given value in a string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c56b65ebc87bb7cf98f7c605654cdb29e5318e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_replace_last&lt;/code&gt; function replaces the last occurrence of a given value in a string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b56534993e95e16f0044bf56df1c66ef54f5407" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_singular&lt;/code&gt; function converts a string to its singular form. This function currently only supports the English language:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8665063b576e4a5f0cb343f38c87d38ccdd25aa1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_slug&lt;/code&gt; function generates a URL friendly &quot;slug&quot; from the given string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db48883eb91ebcfbb95f9986591fb84771043fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_start&lt;/code&gt; function adds a single instance of the given value to a string if it does not already start with the value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a0d62cffd75be135b6750dd5fbddb30b5dcf03" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;studly_case&lt;/code&gt; function converts the given string to &lt;code&gt;StudlyCase&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f5be43e77881dfd125a132dd75f303c4eab17a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subscribed&lt;/code&gt; method also makes a great candidate for a &lt;a href=&quot;middleware&quot;&gt;route middleware&lt;/a&gt;, allowing you to filter access to routes and controllers based on the user's subscription status:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01fbfcd5ec7d3d1df5a5bfbd71d6c842c1be0d16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subscribedToPlan&lt;/code&gt; method may be used to determine if the user is subscribed to a given plan based on a given Stripe / Braintree plan ID. In this example, we will determine if the user's &lt;code&gt;main&lt;/code&gt; subscription is actively subscribed to the &lt;code&gt;monthly&lt;/code&gt; plan:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e13d041f04d47cd27a61c48f6780e2c25be1b84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sum&lt;/code&gt; method returns the sum of all items in the collection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ddd5adce2915291a53cedea96f6a4e1a0de384" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;table&lt;/code&gt; method makes it easy to correctly format multiple rows / columns of data. Just pass in the headers and rows to the method. The width and height will be dynamically calculated based on the given data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae12b512762d988949b58fe4014a3dfde2cc42d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;table&lt;/code&gt; method on the &lt;code&gt;Schema&lt;/code&gt; facade may be used to update existing tables. Like the &lt;code&gt;create&lt;/code&gt; method, the &lt;code&gt;table&lt;/code&gt; method accepts two arguments: the name of the table and a &lt;code&gt;Closure&lt;/code&gt; that receives a &lt;code&gt;Blueprint&lt;/code&gt; instance you may use to add columns to the table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54fe69ea873aa4d7abebb79ac2ff6224b13a0e12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;take&lt;/code&gt; method returns a new collection with the specified number of items:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d13799ca9fc824666f3c219d3def1a8def52c23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tap&lt;/code&gt; function accepts two arguments: an arbitrary &lt;code&gt;$value&lt;/code&gt; and a Closure. The &lt;code&gt;$value&lt;/code&gt; will be passed to the Closure and then be returned by the &lt;code&gt;tap&lt;/code&gt; function. The return value of the Closure is irrelevant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740480cafef47feb1dd6ddde00bf8f84ebe979a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tap&lt;/code&gt; method passes the collection to the given callback, allowing you to &quot;tap&quot; into the collection at a specific point and do something with the items while not affecting the collection itself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a97128f9832209e541685598be2b8e6dbe92ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;taxPercentage&lt;/code&gt; method enables you to apply a tax rate on a model-by-model basis, which may be helpful for a user base that spans multiple countries and tax rates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f09311868a6866c3840d4466928ccb43c6d025a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;taxPercentage&lt;/code&gt; method only applies to subscription charges. If you use Cashier to make &quot;one off&quot; charges, you will need to manually specify the tax rate at that time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aee7d97d5a77492473bf3d4e2f22946fa7a7d67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terminate&lt;/code&gt; method should receive both the request and the response. Once you have defined a terminable middleware, you should add it to the list of route or global middleware in the &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d35582c5d540cfa08de9bea0984c3bbfb929add" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tests&lt;/code&gt; Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef21d8e5debd32f6d61985aa668bd1791155f69" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tests&lt;/code&gt; directory contains your automated tests. An example &lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; is provided out of the box. Each test class should be suffixed with the word &lt;code&gt;Test&lt;/code&gt;. You may run your tests using the &lt;code&gt;phpunit&lt;/code&gt; or &lt;code&gt;php vendor/bin/phpunit&lt;/code&gt; commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c1ab2e2ca89a2eeaf925072d62753f9214e785" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;text&lt;/code&gt; method may be used to retrieve the display text of an element that matches the given selector:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa0179b9244cc5bacf82ba21097ab7c793d344f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;throw_if&lt;/code&gt; function throws the given exception if a given boolean expression evaluates to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3b300acc31bcc17d637f3fbb6ce3b03fa04204" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;throw_unless&lt;/code&gt; function throws the given exception if a given boolean expression evaluates to &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a40eeea3d6edb235843844758e036035dd5ef0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timeout&lt;/code&gt; feature is optimized for PHP 7.1+ and the &lt;code&gt;pcntl&lt;/code&gt; PHP extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c49ba8659463e2fbb052460f62b262724e88359" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;title_case&lt;/code&gt; function converts the given string to &lt;code&gt;Title Case&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f866b25e705b4a317fc6059f7df255a31a61b068" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toArray&lt;/code&gt; method converts the collection into a plain PHP &lt;code&gt;array&lt;/code&gt;. If the collection's values are &lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt; models, the models will also be converted to arrays:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7da7725b224b964acdd0cbbb8319c05f1641da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toArray&lt;/code&gt; method is also used by the &lt;code&gt;broadcast&lt;/code&gt; channel to determine which data to broadcast to your JavaScript client. If you would like to have two different array representations for the &lt;code&gt;database&lt;/code&gt; and &lt;code&gt;broadcast&lt;/code&gt; channels, you should define a &lt;code&gt;toDatabase&lt;/code&gt; method instead of a &lt;code&gt;toArray&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307b837291f33a5c6d08e6b7ae2c0901548b0717" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toJson&lt;/code&gt; method converts the collection into a JSON serialized string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11782d5dd244278d3f5d440f5f3b613bf7f36422" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;today&lt;/code&gt; function creates a new &lt;code&gt;Illuminate\Support\Carbon&lt;/code&gt; instance for the current date:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b11fc9e9f52162aed9eabbc14c2953614314aea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trait_uses_recursive&lt;/code&gt; function returns all traits used by a trait:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c799156af5c04197c505ac3af43aae84ba39331a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trans&lt;/code&gt; function translates the given translation key using your &lt;a href=&quot;localization&quot;&gt;localization files&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04b88218a6fdaadc91d45027351715c4022a00f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trans_choice&lt;/code&gt; function translates the given translation key with inflection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7c3e875ca3569c34d16f19afd5b5e965dd71b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transaction&lt;/code&gt; method accepts an optional second argument which defines the number of times a transaction should be reattempted when a deadlock occurs. Once these attempts have been exhausted, an exception will be thrown:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36206e74751a5b8db48fc70402b96827b93593d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transform&lt;/code&gt; function executes a &lt;code&gt;Closure&lt;/code&gt; on a given value if the value is not &lt;a href=&quot;#method-blank&quot;&gt;blank&lt;/a&gt; and returns the result of the &lt;code&gt;Closure&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3517128e034c56cb61a861810f9802ea390e30b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transform&lt;/code&gt; method iterates over the collection and calls the given callback with each item in the collection. The items in the collection will be replaced by the values returned by the callback:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d983925a2ded50f5b6afc63c0c7898acc018cc8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trialUntil&lt;/code&gt; method allows you to provide a &lt;code&gt;DateTime&lt;/code&gt; instance to specify when the trial period should end:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="270b488114b3084bd84fb4f1ed385a12c6794644" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;union&lt;/code&gt; method adds the given array to the collection. If the given array contains keys that are already in the original collection, the original collection's values will be preferred:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac02482c08fc2f473a4c4fc8deb3a7f78ab9ed42" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unionAll&lt;/code&gt; method is also available and has the same method signature as &lt;code&gt;union&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db7d47dfc47e25950198d6670ec5aa8c6b2c65b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unique&lt;/code&gt; method returns all of the unique items in the collection. The returned collection keeps the original array keys, so in this example we'll use the &lt;a href=&quot;#method-values&quot;&gt;&lt;code&gt;values&lt;/code&gt;&lt;/a&gt; method to reset the keys to consecutively numbered indexes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee916100f72aa33e524319308d575e40d86d91b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unique&lt;/code&gt; method uses &quot;loose&quot; comparisons when checking item values, meaning a string with an integer value will be considered equal to an integer of the same value. Use the &lt;a href=&quot;#method-uniquestrict&quot;&gt;&lt;code&gt;uniqueStrict&lt;/code&gt;&lt;/a&gt; method to filter using &quot;strict&quot; comparisons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a13414cd1e4f6177f94401048796692a239f3d4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unless&lt;/code&gt; method will execute the given callback unless the first argument given to the method evaluates to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdfdb3218a2d420ddc4d38ad69d20183cc100937" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;update&lt;/code&gt; method expects an array of column and value pairs representing the columns that should be updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd3bbe52d81b8c79b6a7d08fdad155edda0e99d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;update&lt;/code&gt; method should be used to update existing records in the database. The number of rows affected by the statement will be returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74907caee5fd9880b36e9b0c53817bda283b810" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;update&lt;/code&gt; method will receive a &lt;code&gt;User&lt;/code&gt; and a &lt;code&gt;Post&lt;/code&gt; instance as its arguments, and should return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; indicating whether the user is authorized to update the given &lt;code&gt;Post&lt;/code&gt;. So, for this example, let's verify that the user's &lt;code&gt;id&lt;/code&gt; matches the &lt;code&gt;user_id&lt;/code&gt; on the post:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e58fad51635d50a4ef65178ce29f617859c5d6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;updateCard&lt;/code&gt; method may be used to update a customer's credit card information. This method accepts a Stripe token and will assign the new credit card as the default billing source:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6518f6b62118b25b4b1577d228594a1fb7a7df6d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;updateRememberToken&lt;/code&gt; method updates the &lt;code&gt;$user&lt;/code&gt; field &lt;code&gt;remember_token&lt;/code&gt; with the new &lt;code&gt;$token&lt;/code&gt;. A fresh token is assigned on a successful &quot;remember me&quot; login attempt or when the user is logging out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688a6ad75a9a9f40f92def0735c1236a1c79b263" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3c567e6db1579eee645d660fde06e18269a2a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; function generates a fully qualified URL to the given path:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd3d2076a08fd03a5ae34f375e9aab083e70a90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; helper may be used to generate arbitrary URLs for your application. The generated URL will automatically use the scheme (HTTP or HTTPS) and host from the current request:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221d8b2500eaeeef3b09f14eb5e6e1a1d6500c8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; method should return the path of the URL that represents the page. Dusk will use this URL when navigating to the page in the browser:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6cb4eac2f5e9cdb184948de292fd380ab81c08f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;validate&lt;/code&gt; method &lt;a href=&quot;https://github.com/laravel/framework/pull/25128&quot;&gt;was added to the &lt;code&gt;Illuminate\Contracts\Validation\Validator&lt;/code&gt; contract&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e573afceb6b2ab2f12b4f601582003e27fba2dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;validateCredentials&lt;/code&gt; method should compare the given &lt;code&gt;$user&lt;/code&gt; with the &lt;code&gt;$credentials&lt;/code&gt; to authenticate the user. For example, this method should probably use &lt;code&gt;Hash::check&lt;/code&gt; to compare the value of &lt;code&gt;$user-&amp;gt;getAuthPassword()&lt;/code&gt; to the value of &lt;code&gt;$credentials['password']&lt;/code&gt;. This method should return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; indicating on whether the password is valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59fe7785fa47c76d7d0e3555beb00b535c06923c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;validator&lt;/code&gt; function creates a new &lt;a href=&quot;validation&quot;&gt;validator&lt;/a&gt; instance with the given arguments. You may use it instead of the &lt;code&gt;Validator&lt;/code&gt; facade for convenience:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82f51b471412c871f38a80a441df0b5bf2c74ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;validator&lt;/code&gt; method of the &lt;code&gt;RegisterController&lt;/code&gt; contains the validation rules for new users of the application. You are free to modify this method as you wish.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40f8770bc46501f61dec899b8fa75b3ace6bb72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; function returns the value it is given. However, if you pass a &lt;code&gt;Closure&lt;/code&gt; to the function, the &lt;code&gt;Closure&lt;/code&gt; will be executed then its result will be returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee49d72e589b96446102bb851c7ff4a52ea159e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;values&lt;/code&gt; method returns a new collection with the keys reset to consecutive integers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df4fcf8d1598924c32f09118a690b9928eee9dc4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vendor&lt;/code&gt; Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1a6dc554acf48da89aea8bd131ba04a586bc59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vendor&lt;/code&gt; directory contains your &lt;a href=&quot;https://getcomposer.org&quot;&gt;Composer&lt;/a&gt; dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3364016140be4286ae92f33a3f65e2f5ae801e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;version&lt;/code&gt; method will automatically append a unique hash to the filenames of all compiled files, allowing for more convenient cache busting:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050cf8f6e37ce355be7fbf7764d11c4322d2766b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;via&lt;/code&gt; method receives a &lt;code&gt;$notifiable&lt;/code&gt; instance, which will be an instance of the class to which the notification is being sent. You may use &lt;code&gt;$notifiable&lt;/code&gt; to determine which channels the notification should be delivered on:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a3cca286ee66d28729e52885d9e8f4931589cd3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;view&lt;/code&gt; function retrieves a &lt;a href=&quot;views&quot;&gt;view&lt;/a&gt; instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9a56952a3c0d80c616e265363336ed7553e22f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;waitFor&lt;/code&gt; method may be used to pause the execution of the test until the element matching the given CSS selector is displayed on the page. By default, this will pause the test for a maximum of five seconds before throwing an exception. If necessary, you may pass a custom timeout threshold as the second argument to the method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8256c7273069e70e76450a29524f0f98c67900" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;waitForLink&lt;/code&gt; method may be used to wait until the given link text is displayed on the page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951ca8cc17583c422892b432b0a40bea6c03f436" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;waitForText&lt;/code&gt; method may be used to wait until the given text is displayed on the page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b01c1dbfe1b7e194a7b2d45ad1bed9c367d6dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;wasChanged&lt;/code&gt; Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ff16ba4f56fe472d5a9e0aa00f154c02d8fc28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;web.php&lt;/code&gt; file contains routes that the &lt;code&gt;RouteServiceProvider&lt;/code&gt; places in the &lt;code&gt;web&lt;/code&gt; middleware group, which provides session state, CSRF protection, and cookie encryption. If your application does not offer a stateless, RESTful API, all of your routes will most likely be defined in the &lt;code&gt;web.php&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9afdcc3823ac944ec494d111934ddd1cc5cd91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webpack.mix.js&lt;/code&gt; file is your entry point for all asset compilation. Think of it as a light configuration wrapper around Webpack. Mix tasks can be chained together to define exactly how your assets should be compiled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc709626cea7579198349f724cf88ed417fced48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;when&lt;/code&gt; method also accepts a Closure as its second argument, allowing you to calculate the resulting value only if the given condition is &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a167d2902d4141320a7cd5b7af4eef99137d334e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;when&lt;/code&gt; method may be used to limit the execution of a task based on the result of a given truth test. In other words, if the given &lt;code&gt;Closure&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, the task will execute as long as no other constraining conditions prevent the task from running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e45add003663af7b0ee91e469eb2c531ce4b97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;when&lt;/code&gt; method only executes the given Closure when the first parameter is &lt;code&gt;true&lt;/code&gt;. If the first parameter is &lt;code&gt;false&lt;/code&gt;, the Closure will not be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf87d12a9b6c0c4c16bd78877b10b6d9323ad72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;when&lt;/code&gt; method will execute the given callback when the first argument given to the method evaluates to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="410d992dd6549df41bc10972072d08d6911df2d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;where&lt;/code&gt; method filters the collection by a given key / value pair:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01bd9a083ce332dbb25f9d51689c415a8b59c923" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;where&lt;/code&gt; method uses &quot;loose&quot; comparisons when checking item values, meaning a string with an integer value will be considered equal to an integer of the same value. Use the &lt;a href=&quot;#method-wherestrict&quot;&gt;&lt;code&gt;whereStrict&lt;/code&gt;&lt;/a&gt; method to filter using &quot;strict&quot; comparisons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c466231d08885d8b9e43aa06a56749e535e7b56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereBetween&lt;/code&gt; method verifies that a column's value is between two values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="facd195a751497e89437869083bbe8fa6dd55a0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereColumn&lt;/code&gt; method can also be passed an array of multiple conditions. These conditions will be joined using the &lt;code&gt;and&lt;/code&gt; operator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d054a8e7fea41e1fc2fa5fe065de148fc0f878e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereColumn&lt;/code&gt; method may be used to verify that two columns are equal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f560e9404364449f549c120dc05eecb4791163f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereDate&lt;/code&gt; method may be used to compare a column's value against a date:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69db8265e1882dbefa4a0433435e5db156dbce54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereDay&lt;/code&gt; method may be used to compare a column's value against a specific day of a month:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea6fe8efd22229f45070543000423cb868fdcb5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereExists&lt;/code&gt; method allows you to write &lt;code&gt;where exists&lt;/code&gt; SQL clauses. The &lt;code&gt;whereExists&lt;/code&gt; method accepts a &lt;code&gt;Closure&lt;/code&gt; argument, which will receive a query builder instance allowing you to define the query that should be placed inside of the &quot;exists&quot; clause:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538abf161dd6fa54a9381f70f42712e5c7ff8431" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereIn&lt;/code&gt; method filters the collection by a given key / value contained within the given array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8736eb833e3a9a142246a6a4a4256e6480d3454c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereIn&lt;/code&gt; method uses &quot;loose&quot; comparisons when checking item values, meaning a string with an integer value will be considered equal to an integer of the same value. Use the &lt;a href=&quot;#method-whereinstrict&quot;&gt;&lt;code&gt;whereInStrict&lt;/code&gt;&lt;/a&gt; method to filter using &quot;strict&quot; comparisons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de77fec88fcc5378b177d6bcf21e6e19018cca3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereIn&lt;/code&gt; method verifies that a given column's value is contained within the given array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c279e284a322f29f3050cb5778545b92f191d530" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereInstanceOf&lt;/code&gt; method filters the collection by a given class type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f124867947e37c79f185e923c0eaa1c5cc48279" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereMonth&lt;/code&gt; method may be used to compare a column's value against a specific month of a year:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d23007edcaa07be8b66242c7370e556076cbc7e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereNotBetween&lt;/code&gt; method verifies that a column's value lies outside of two values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d1bf39ce87844cb8cb70620cc8dee413a3caa7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereNotIn&lt;/code&gt; method filters the collection by a given key / value not contained within the given array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaae8337c2ce98faf771ab436ba9f571ffb387b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereNotIn&lt;/code&gt; method uses &quot;loose&quot; comparisons when checking item values, meaning a string with an integer value will be considered equal to an integer of the same value. Use the &lt;a href=&quot;#method-wherenotinstrict&quot;&gt;&lt;code&gt;whereNotInStrict&lt;/code&gt;&lt;/a&gt; method to filter using &quot;strict&quot; comparisons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2f7f031f8f5ed9e696a94e99a5846bb49f1eb3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereNotIn&lt;/code&gt; method verifies that the given column's value is &lt;strong&gt;not&lt;/strong&gt; contained in the given array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8e4f70bb765aa86171b4c8329cef3b792ecbd4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereNotNull&lt;/code&gt; method verifies that the column's value is not &lt;code&gt;NULL&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352acd613acbaedf7e686b7f27de67607ef3cb1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereNull&lt;/code&gt; method verifies that the value of the given column is &lt;code&gt;NULL&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b9e670524cfa047a29b3de1b28878aa1713d85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereRaw&lt;/code&gt; and &lt;code&gt;orWhereRaw&lt;/code&gt; methods can be used to inject a raw &lt;code&gt;where&lt;/code&gt; clause into your query. These methods accept an optional array of bindings as their second argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449e0b26672891aa912ff68977ec4c047d17f9df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereTime&lt;/code&gt; method may be used to compare a column's value against a specific time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc10b91d26041f637e47611f53159e9bb5d9a1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereYear&lt;/code&gt; method may be used to compare a column's value against a specific year:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf861dc58d410fa0ba8b699b2e520096c6bf787" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;with&lt;/code&gt; function returns the value it is given. If a &lt;code&gt;Closure&lt;/code&gt; is passed as the second argument to the function, the &lt;code&gt;Closure&lt;/code&gt; will be executed and its result will be returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960c2cef58d938232be13404119f75dbba190f48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;withPath&lt;/code&gt; method allows you to customize the URI used by the paginator when generating links. For example, if you want the paginator to generate links like &lt;code&gt;http://example.com/custom/url?page=N&lt;/code&gt;, you should pass &lt;code&gt;custom/url&lt;/code&gt; to the &lt;code&gt;withPath&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3682fa92140f63a2cad5fce4a0a1b539fb3f6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;withSwiftMessage&lt;/code&gt; method of the &lt;code&gt;Mailable&lt;/code&gt; base class allows you to register a callback which will be invoked with the raw SwiftMailer message instance before sending the message. This gives you an opportunity to customize the message before it is delivered:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7e0258b6ba429be0d884e2714a7064e4b62bfa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;withTrashed&lt;/code&gt; method may also be used on a &lt;a href=&quot;eloquent-relationships&quot;&gt;relationship&lt;/a&gt; query:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e803f4ac9e01234803d27db50e5880d0291c723" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;withoutWrapping&lt;/code&gt; method only affects the outer-most response and will not remove &lt;code&gt;data&lt;/code&gt; keys that you manually add to your own resource collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7194173cd4a700b8ff92a13e90f2b2697743bc4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; method should write the given &lt;code&gt;$data&lt;/code&gt; string associated with the &lt;code&gt;$sessionId&lt;/code&gt; to some persistent storage system, such as MongoDB, Dynamo, etc. Again, you should not perform any serialization - Laravel will have already handled that for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4197ee522aac639d56fdc3ad3dd44ba679b6657b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;zip&lt;/code&gt; method merges together the values of the given array with the values of the original collection at the corresponding index:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139b1714797076993db0def9c76841f738023179" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{ $slot }}&lt;/code&gt; variable will contain the content we wish to inject into the component. Now, to construct this component, we can use the &lt;code&gt;@component&lt;/code&gt; Blade directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51ab42825aa8b1761821dc400fd6167dd9b5c60" translate="yes" xml:space="preserve">
          <source>The APC wrapper instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3ca3e538c3c272a5d5f2699f282498e20e56b4" translate="yes" xml:space="preserve">
          <source>The API based drivers such as Mailgun and SparkPost are often simpler and faster than SMTP servers. If possible, you should use one of these drivers. All of the API drivers require the Guzzle HTTP library, which may be installed via the Composer package manager:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301c07776874fb44ea2a534c274bd6022326d7e2" translate="yes" xml:space="preserve">
          <source>The Amazon SES instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed8835e414caa95ddc2eea515011bcd2fd3b4ab" translate="yes" xml:space="preserve">
          <source>The Amazon SES transmission options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73a27d21a7df4b693a3269a78ec66e5fa2750f6" translate="yes" xml:space="preserve">
          <source>The Amazon SQS client instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4edeb1d5b6f5cff40bd82d818fea24bcde5f9663" translate="yes" xml:space="preserve">
          <source>The Amazon SQS instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a36b7d449233cd612a03fdecd320df732b1a40" translate="yes" xml:space="preserve">
          <source>The Amazon SQS job instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582b9297843ffde5fb89e7123408450b961f99e6" translate="yes" xml:space="preserve">
          <source>The Amazon SQS queue service has a maximum delay time of 15 minutes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8b5be5a2804781fe954cbe93c3a6c8cc4915f2" translate="yes" xml:space="preserve">
          <source>The App Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0811ac3b92a941731f1a6583a7d2737802bd0fba" translate="yes" xml:space="preserve">
          <source>The Argon2i driver requires PHP 7.2.0 or greater and the Argon2id driver requires PHP 7.3.0 or greater.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b812ae04cfbeeb4b318414708e3a2a2b5ffa0d00" translate="yes" xml:space="preserve">
          <source>The Artisan CLI can generate a new provider via the &lt;code&gt;make:provider&lt;/code&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d9cb30d7a3e95963dff46e403f348465030dc0" translate="yes" xml:space="preserve">
          <source>The Artisan application instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b890347ba26562cd39f537419d5de7d92fbebd0d" translate="yes" xml:space="preserve">
          <source>The Artisan commands provided by the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627fecde23153b2f37c2029df2e270d916b660d0" translate="yes" xml:space="preserve">
          <source>The Authenticatable Contract</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e05ba27d0dac24a40fdd0fb391833fbcfeb4b9" translate="yes" xml:space="preserve">
          <source>The Base Collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a093f7952b1838c4dd6aeda28ea5e1fc38030960" translate="yes" xml:space="preserve">
          <source>The Basics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c369a6457a4ec9e5e85887f082a5e39488e72769" translate="yes" xml:space="preserve">
          <source>The Blade &quot;or&quot; operator has been removed in favor of PHP's built-in &lt;code&gt;??&lt;/code&gt; &quot;null coalesce&quot; operator, which has the same purpose and functionality:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc3bf2103e087a2317c09362d97c210b68379ba8" translate="yes" xml:space="preserve">
          <source>The Blade compiler instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee00ec3206c354a0ce0d139df2f9dc15d887f13f" translate="yes" xml:space="preserve">
          <source>The Blueprint resolver callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="443e53b3c6779c58ed300efdd6feb989dbb2ad73" translate="yes" xml:space="preserve">
          <source>The Boot Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2edc9b3f11d52ea45dd64f6e7131b0096d052a91" translate="yes" xml:space="preserve">
          <source>The Bootstrap Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ade812a07a1a257ee3ae9e6a975d1ab8ef4b1e" translate="yes" xml:space="preserve">
          <source>The Broadcasting Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ee3fe5e6f9d75ad0c857d142de5a0d12d8db65" translate="yes" xml:space="preserve">
          <source>The Bus dispatcher instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4c25f60a5dddb880d4d49a3b8fdd6cb342a6d9" translate="yes" xml:space="preserve">
          <source>The CSRF middleware is automatically disabled when &lt;a href=&quot;testing&quot;&gt;running tests&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bfff69c02840b8b9f3411a8b481bd292605cfaa" translate="yes" xml:space="preserve">
          <source>The CSRF middleware is automatically disabled when running tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29b317c7a666531a77e36b2ccadf2dcef4a8354" translate="yes" xml:space="preserve">
          <source>The Cache Helper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3302227ce2dd19975e857bb37ac4f2d96c87635" translate="yes" xml:space="preserve">
          <source>The Closure is bound to the underlying command instance, so you have full access to all of the helper methods you would typically be able to access on a full command class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6f3476c88d39caece37eb5c0acd8fc671bca47" translate="yes" xml:space="preserve">
          <source>The Closure's transformed use variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3e5443f610c4b8b6371427d11438159e462e32" translate="yes" xml:space="preserve">
          <source>The Closure's use variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ff17d4b4a611bda7d92f6f57dcea95503691bf" translate="yes" xml:space="preserve">
          <source>The Composer class instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd56108d697599887c905a14eb25604c8489f793" translate="yes" xml:space="preserve">
          <source>The Composer instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c26013b5360a9e04cb59d82a55f3f813a7a0ac1" translate="yes" xml:space="preserve">
          <source>The Config Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0339c6f7a702b65b33234bad2b1977d9c9a8876b" translate="yes" xml:space="preserve">
          <source>The Console Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6444856e117b9eb2955667c60ff70f9912c299fe" translate="yes" xml:space="preserve">
          <source>The Create Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9efa992fda7990df3dbc808b31e95525222cf89e" translate="yes" xml:space="preserve">
          <source>The Cron expression representing the event's frequency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69b776a26b2608d569e11c844cb25054996a70a" translate="yes" xml:space="preserve">
          <source>The Cron job for the site will be defined in the &lt;code&gt;/etc/cron.d&lt;/code&gt; folder of the virtual machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a41270007681a4741ff9ce92f9696efaec03df7" translate="yes" xml:space="preserve">
          <source>The Database Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b681dbc230a800cac87280ebbe9fd370bca80a" translate="yes" xml:space="preserve">
          <source>The Default Route Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd13e1c49dfd339aadae35f9ceabbbcf0c08ae0" translate="yes" xml:space="preserve">
          <source>The Eloquent &lt;code&gt;all&lt;/code&gt; method will return all of the results in the model's table. Since each Eloquent model serves as a &lt;a href=&quot;queries&quot;&gt;query builder&lt;/a&gt;, you may also add constraints to queries, and then use the &lt;code&gt;get&lt;/code&gt; method to retrieve the results:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1773b89586b8883bb4fbd6999ee6e6a22f983ca4" translate="yes" xml:space="preserve">
          <source>The Eloquent ORM included with Laravel provides a beautiful, simple ActiveRecord implementation for working with your database. Each database table has a corresponding &quot;Model&quot; which is used to interact with that table. Models allow you to query for data in your tables, as well as insert new records into the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dfe0e8f7ed6972ced80c80ea7c384e0835f808a" translate="yes" xml:space="preserve">
          <source>The Eloquent query builder instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43117125a6f65d0cf5783101517fe1275d6539f0" translate="yes" xml:space="preserve">
          <source>The Eloquent query builder's &lt;code&gt;latest&lt;/code&gt; and &lt;code&gt;oldest&lt;/code&gt; methods have been updated to respect custom &quot;created at&quot; timestamp columns that may be specified on your Eloquent models. Generally, this should be considered a bug fix; however, it is listed as a breaking change out of caution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abaa704887ee88b153ac2407fe61e608929a7dc" translate="yes" xml:space="preserve">
          <source>The Eloquent user model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28c74cd6ec8e9ba218d7bd969d379ea45226957" translate="yes" xml:space="preserve">
          <source>The Email Verification Column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecca5baad482f1398d153519712ca4106639c48f" translate="yes" xml:space="preserve">
          <source>The Event Dispatcher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77f0898fd90ddd4fa0c8e710de9d181cd4211b3" translate="yes" xml:space="preserve">
          <source>The Events Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe47ba4bbe313684e2f4cde8dce65cde79995a3" translate="yes" xml:space="preserve">
          <source>The Exception Handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f60a25aba0e4bd19d1f7cf6d252ec710448a2749" translate="yes" xml:space="preserve">
          <source>The Exceptions Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757d085c4b22e14e05fb7eae81255a8ff968c9ed" translate="yes" xml:space="preserve">
          <source>The Faker instance for the builder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882aedcef0a33031b4c69997e44e0fd5118041c0" translate="yes" xml:space="preserve">
          <source>The Faker instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32af44e540b9cab990dca5bf2d034c1c8ed60bb" translate="yes" xml:space="preserve">
          <source>The Filesystem instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e9f5ef82d7e819321203ab1268d48bac9f6e745" translate="yes" xml:space="preserve">
          <source>The Flysystem filesystem implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c5e2a787d8639b9b3489e4e17f7c44c755e0d5" translate="yes" xml:space="preserve">
          <source>The Global Session Helper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c909b612c1ea5096a9ae2552100c4e5bab72ea" translate="yes" xml:space="preserve">
          <source>The HTML string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85e5b982448d1b87af3ea9f62077fda90155089" translate="yes" xml:space="preserve">
          <source>The HTML to use for the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80baef633b9c44055537d3a11a61eaf06587f7cf" translate="yes" xml:space="preserve">
          <source>The HTTP client instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b3235660eb17f27f3b662495b08dc28a3bd390" translate="yes" xml:space="preserve">
          <source>The HTTP kernel also defines a list of HTTP &lt;a href=&quot;middleware&quot;&gt;middleware&lt;/a&gt; that all requests must pass through before being handled by the application. These middleware handle reading and writing the &lt;a href=&quot;session&quot;&gt;HTTP session&lt;/a&gt;, determining if the application is in maintenance mode, &lt;a href=&quot;csrf&quot;&gt;verifying the CSRF token&lt;/a&gt;, and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4663030089860e2207c8c2791a1c80e4ee5251" translate="yes" xml:space="preserve">
          <source>The HTTP kernel extends the &lt;code&gt;Illuminate\Foundation\Http\Kernel&lt;/code&gt; class, which defines an array of &lt;code&gt;bootstrappers&lt;/code&gt; that will be run before the request is executed. These bootstrappers configure error handling, configure logging, &lt;a href=&quot;configuration#environment-configuration&quot;&gt;detect the application environment&lt;/a&gt;, and perform other tasks that need to be done before the request is actually handled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf7a233c10d9ef903da7e13f77b4410077b9321" translate="yes" xml:space="preserve">
          <source>The HTTP methods the route responds to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e536d4365c5b4034fd1f5488dd6fa742e801451e" translate="yes" xml:space="preserve">
          <source>The Hasher implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ab795192380d0e283a26aeae8d9f556b9d2112" translate="yes" xml:space="preserve">
          <source>The Hosts File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd49f0291e229bb356524be1c95c9bd9d5f9ff3" translate="yes" xml:space="preserve">
          <source>The Http Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59daf44b68c5d1eed138d3a5842f3333016b26a6" translate="yes" xml:space="preserve">
          <source>The ID that should be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef9fa937e54f16b86ccef11a29cc833760825a7" translate="yes" xml:space="preserve">
          <source>The Illuminate Filesystem instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="163f1ceab9ae0d9f913662d1d86b663da072d96d" translate="yes" xml:space="preserve">
          <source>The Illuminate application instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a3307986f460de66202f629caf04383c4f23cd" translate="yes" xml:space="preserve">
          <source>The Illuminate cookie creator service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a114daadee0e52223e884240ee159aab0c680ef" translate="yes" xml:space="preserve">
          <source>The IoC container instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04681c71ea9d080a52d08897ee26346efdeec116" translate="yes" xml:space="preserve">
          <source>The JSON decoded version of &quot;$job&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce3273298e876b9170e4623b4545a6efd595cfa" translate="yes" xml:space="preserve">
          <source>The JSON from the paginator will include meta information such as &lt;code&gt;total&lt;/code&gt;, &lt;code&gt;current_page&lt;/code&gt;, &lt;code&gt;last_page&lt;/code&gt;, and more. The actual result objects will be available via the &lt;code&gt;data&lt;/code&gt; key in the JSON array. Here is an example of the JSON created by returning a paginator instance from a route:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e304a6c8a65ff8a3a097a759a17d898878c68a3" translate="yes" xml:space="preserve">
          <source>The Jobs Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cfe54fefe5f4f03ae12660690e686736709cee6" translate="yes" xml:space="preserve">
          <source>The Laravel &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt; is used to resolve all Laravel controllers. As a result, you are able to type-hint any dependencies your controller may need in its constructor. The declared dependencies will automatically be resolved and injected into the controller instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="843b443002526e50cf80a41ba15aa1c4a14bbdb9" translate="yes" xml:space="preserve">
          <source>The Laravel &lt;code&gt;Hash&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt; provides secure Bcrypt and Argon2 hashing for storing user passwords. If you are using the built-in &lt;code&gt;LoginController&lt;/code&gt; and &lt;code&gt;RegisterController&lt;/code&gt; classes that are included with your Laravel application, they will use Bcrypt for registration and authentication by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47922fe09574ddf0f40edcd73f741bd8c9a91807" translate="yes" xml:space="preserve">
          <source>The Laravel &lt;code&gt;Schema&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt; provides database agnostic support for creating and manipulating tables across all of Laravel's supported database systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45617a8d11945067bf460b8f52a8c73cc3590533" translate="yes" xml:space="preserve">
          <source>The Laravel application instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b60cd0b0314ac8b4ee045c56042b1a0baee1fb12" translate="yes" xml:space="preserve">
          <source>The Laravel framework has a few system requirements. Of course, all of these requirements are satisfied by the &lt;a href=&quot;homestead&quot;&gt;Laravel Homestead&lt;/a&gt; virtual machine, so it's highly recommended that you use Homestead as your local Laravel development environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61e69f539a54e50bf77074b0414820fa609bfd9" translate="yes" xml:space="preserve">
          <source>The Laravel paginator result classes implement the &lt;code&gt;Illuminate\Contracts\Support\Jsonable&lt;/code&gt; Interface contract and expose the &lt;code&gt;toJson&lt;/code&gt; method, so it's very easy to convert your pagination results to JSON. You may also convert a paginator instance to JSON by returning it from a route or controller action:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63136f086335c4fe1c83559f0ad25695a9897e58" translate="yes" xml:space="preserve">
          <source>The Laravel query builder uses PDO parameter binding to protect your application against SQL injection attacks. There is no need to clean strings being passed as bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316107531d2823356e0988e2d5d4db6e46cb2a04" translate="yes" xml:space="preserve">
          <source>The Laravel scheduler provides several convenient methods for working with the output generated by scheduled tasks. First, using the &lt;code&gt;sendOutputTo&lt;/code&gt; method, you may send the output to a file for later inspection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da439996b7885cb7970634b650f497e79a558277" translate="yes" xml:space="preserve">
          <source>The Laravel service container is a powerful tool for managing class dependencies and performing dependency injection. Dependency injection is a fancy phrase that essentially means this: class dependencies are &quot;injected&quot; into the class via the constructor or, in some cases, &quot;setter&quot; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64500378f3bf6ec69936fc5117bcd6e3b65b1905" translate="yes" xml:space="preserve">
          <source>The Laravel source code is managed on GitHub, and there are repositories for each of the Laravel projects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c217d6493b69df2f9d57b24d973b99f173037afe" translate="yes" xml:space="preserve">
          <source>The Listeners Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473ce358fbb8fb0708f1a1a30001d351916d2b02" translate="yes" xml:space="preserve">
          <source>The Local Driver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b6b39d92d15396f60d018fc7d6970f64859c7d" translate="yes" xml:space="preserve">
          <source>The Log levels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d199d11a966a2ff1b111dada2661b9c4d0de12" translate="yes" xml:space="preserve">
          <source>The Logger instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a1333467e4b2d3f1d47b4ab3e3e832aaebee1f" translate="yes" xml:space="preserve">
          <source>The Loop Variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb7889b677e92cbc5596e6f41d17e79d814426c" translate="yes" xml:space="preserve">
          <source>The Mail Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f799bb2106e789c4894b9879d1feb809541e3796" translate="yes" xml:space="preserve">
          <source>The Mailgun API end-point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9cfa826f48012af95c3839d10cc5f456fda5ce" translate="yes" xml:space="preserve">
          <source>The Mailgun API key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0362084c836e7be97ff3ac9ac55a457621fb05" translate="yes" xml:space="preserve">
          <source>The Mailgun email domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3d47ae94ac63467b12c90248acdf667534d567" translate="yes" xml:space="preserve">
          <source>The Make Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6553be6f420bb4fb28b4302a28be0c9752b94003" translate="yes" xml:space="preserve">
          <source>The Mandrill API key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad159c763992129b185decb1bf4229a382e9c39" translate="yes" xml:space="preserve">
          <source>The Markdown template for the message (if applicable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e5852a89522d3f6030f5b84a04ab3d0be20a9f" translate="yes" xml:space="preserve">
          <source>The Markdown template to render (if applicable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80f0e68f97889dd4ccb1e6b8b21b7d3ecf78d96" translate="yes" xml:space="preserve">
          <source>The Memcached instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8bf3548f0c48d2d46189f33a8d67ddce8b893f" translate="yes" xml:space="preserve">
          <source>The Nexmo client instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67f9b007c94cf8198d3f379096c6b813bcd6771" translate="yes" xml:space="preserve">
          <source>The Notifications Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf49f9c0e9159f50a3803e4b975d156cfd2f65e" translate="yes" xml:space="preserve">
          <source>The OAuth2 password grant allows your other first-party clients, such as a mobile application, to obtain an access token using an e-mail address / username and password. This allows you to issue access tokens securely to your first-party clients without requiring your users to go through the entire OAuth2 authorization code redirect flow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72130596b75b8b0351ae6a237395e554d1916e5c" translate="yes" xml:space="preserve">
          <source>The PDO connection options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698483afcdb24b6c5dc06e58238e32a8d6e2d573" translate="yes" xml:space="preserve">
          <source>The PDO statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0502eb928f9f061c3334c9d4b7a246cf74f92fb2" translate="yes" xml:space="preserve">
          <source>The Passport service provider registers its own database migration directory with the framework, so you should migrate your database after registering the provider. The Passport migrations will create the tables your application needs to store clients and access tokens:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640bd5ae5dd08349acadf02631c419d78222787e" translate="yes" xml:space="preserve">
          <source>The Pheanstalk instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb39985ad14fb4408bdbed30697bc33ed4293e8" translate="yes" xml:space="preserve">
          <source>The Pheanstalk job instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d7f969a81a8c3dbf158316f3336194e01b2e71" translate="yes" xml:space="preserve">
          <source>The Policies Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0dafbc4d3849dcce2b7906a0650368efd57c4e3" translate="yes" xml:space="preserve">
          <source>The Predis client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0384ae8bc7c4e33787c290a62a31a4814a95bb" translate="yes" xml:space="preserve">
          <source>The Presence Verifier implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea17561f571ab5f439b595364605b7b7f1084341" translate="yes" xml:space="preserve">
          <source>The Providers Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4d66d26d98435f4bba3763f332e503ee29dd33" translate="yes" xml:space="preserve">
          <source>The Public Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139b3584416dda76043901b8387e46a4f2c17683" translate="yes" xml:space="preserve">
          <source>The Public Disk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173e5748d91cb1c51ba1b962885d473689d531bb" translate="yes" xml:space="preserve">
          <source>The Pusher SDK instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6026efeb0b8f403c2bf30b1191b3e7665e8f1c7e" translate="yes" xml:space="preserve">
          <source>The Redis broadcaster will broadcast messages using Redis' pub / sub feature; however, you will need to pair this with a WebSocket server that can receive the messages from Redis and broadcast them to your WebSocket channels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40a11b17bd967ba7a39499177b4de3956bfe372" translate="yes" xml:space="preserve">
          <source>The Redis command that was executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326bed2d2a81d02b1594aa11437a2683f50c4931" translate="yes" xml:space="preserve">
          <source>The Redis configuration for your application is located in the &lt;code&gt;config/database.php&lt;/code&gt; configuration file. Within this file, you will see a &lt;code&gt;redis&lt;/code&gt; array containing the Redis servers utilized by your application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31d91d4e01a229101b0a60866f140964aa34e8a" translate="yes" xml:space="preserve">
          <source>The Redis connection instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0856b25ef788202584d71398b3d5c887c4e6aaec" translate="yes" xml:space="preserve">
          <source>The Redis connection name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2ec35b8b3290a59dcb26421a128faf511d0615" translate="yes" xml:space="preserve">
          <source>The Redis connection that should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1b5b6e1427465ea843fc626cd75239666078d4" translate="yes" xml:space="preserve">
          <source>The Redis connection to use for broadcasting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c308ed25d3dbfd5964775e7ab9b58f6fe6dbce0f" translate="yes" xml:space="preserve">
          <source>The Redis connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a93dc27a4fac2b5fa66702cb93a7a63578ebae" translate="yes" xml:space="preserve">
          <source>The Redis connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb9d3a8d76647d45a7540fabe32ad81a6ece126" translate="yes" xml:space="preserve">
          <source>The Redis database instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f02387dbc55dbd7f02efa360935ba52ac45692" translate="yes" xml:space="preserve">
          <source>The Redis factory implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5df3192820caf2d455bb10810e3217f00d8f2df" translate="yes" xml:space="preserve">
          <source>The Redis instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87f79e665c81bd1b604d1552ba56e9d67e6d982" translate="yes" xml:space="preserve">
          <source>The Redis job payload inside the reserved queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0197538f42dfce3cbe8b158cd89447730fa308" translate="yes" xml:space="preserve">
          <source>The Redis queue instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf457870ad627b4883a494ff833f4a6ef5ad348" translate="yes" xml:space="preserve">
          <source>The Redis raw job payload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2964115659b934e1a733e32d8e78cba75a56b8be" translate="yes" xml:space="preserve">
          <source>The Redis server configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4457c3c81ea3fa5906aed88c149fc02a0ed0ab6e" translate="yes" xml:space="preserve">
          <source>The Register Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f4044aed19f58e681f5a4d8c0384d41d9dcd8b" translate="yes" xml:space="preserve">
          <source>The Render Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d0ec9874192f4d5d8a643c58b26075b33b7292" translate="yes" xml:space="preserve">
          <source>The Report Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a1bccea8e0363cc1f996669149203c2cd79aa7" translate="yes" xml:space="preserve">
          <source>The Resources Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c894b2a9564f9f0e6ea3dc8eb47cf742627fb94" translate="yes" xml:space="preserve">
          <source>The Root Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf39c92c36f7ae199dacac7238335603d2e3441" translate="yes" xml:space="preserve">
          <source>The Routes Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f05b439eeaa83d8b742747371dbca0556a2b9e5" translate="yes" xml:space="preserve">
          <source>The Rules Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1618a5998fbb8d48528db5039b22fc145e16b3d9" translate="yes" xml:space="preserve">
          <source>The S3 driver configuration information is located in your &lt;code&gt;config/filesystems.php&lt;/code&gt; configuration file. This file contains an example configuration array for an S3 driver. You are free to modify this array with your own S3 configuration and credentials. For convenience, these environment variables match the naming convention used by the AWS CLI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9195b751047aeea478906f4bc9903b672cb9e7c4" translate="yes" xml:space="preserve">
          <source>The SQL for the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6147d1bf44dd900c7401ac2a74ce2b6e3e365c15" translate="yes" xml:space="preserve">
          <source>The SQL query that was executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b936b7ca0c192a95711f29891eadb922b0c8edab" translate="yes" xml:space="preserve">
          <source>The Save Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45db588d1a98e41e91784c76195d2e7d1fc38337" translate="yes" xml:space="preserve">
          <source>The SparkPost API key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044400d3b1bf13cdf546ffb97e9e76638b3cc468" translate="yes" xml:space="preserve">
          <source>The SparkPost transmission options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa8d7239866abecad2a679a23ef7ad43d3ff729" translate="yes" xml:space="preserve">
          <source>The Storage Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807e694ca9cf477735c9f1908f7ea3d7f943b617" translate="yes" xml:space="preserve">
          <source>The Swift Mailer instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd2edb01a116b4a98fdba72dda210cf4869dc02" translate="yes" xml:space="preserve">
          <source>The Swift Message instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc1d507c2b61e19b5ed2873ed57558711e6ae06" translate="yes" xml:space="preserve">
          <source>The Swift message instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f2612987e198d7cfd8f6138f8f93aa5c7deec7" translate="yes" xml:space="preserve">
          <source>The Tests Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2bc355f53cc7bfb7412542c7fd687eee20fbea3" translate="yes" xml:space="preserve">
          <source>The Translator implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd66c4e671fd10b67017367d5b7234ec99a7487" translate="yes" xml:space="preserve">
          <source>The URI pattern the route responds to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2c1b00be85a5ec53cd86ed1f8ebf8f73d1dbfe" translate="yes" xml:space="preserve">
          <source>The URI to redirect to if validation fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c305027c142ee4a021edbfeb1d0d7766b7bb9dd" translate="yes" xml:space="preserve">
          <source>The URIs that should be accessible while maintenance mode is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744d02a5eb75c09979717f37025f5a7e78b7520d" translate="yes" xml:space="preserve">
          <source>The URIs that should be excluded from CSRF verification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec6a6e66f819a5418672668b52c15b845610d4c" translate="yes" xml:space="preserve">
          <source>The URL for the next page, or null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903e92780872da76add00455e19417b6de39bd4e" translate="yes" xml:space="preserve">
          <source>The URL fragment to add to all URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4768529a4ceec8429ac7a92ce37d0e47cf5bc35" translate="yes" xml:space="preserve">
          <source>The URL generator instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32acda0854d965e6228969f406dba2c6cbd53a2" translate="yes" xml:space="preserve">
          <source>The User Provider Contract</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b75e6a74de5a04178661124b23577408aebbb8" translate="yes" xml:space="preserve">
          <source>The Validator resolver instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc395b4e55ebe224b4843e6453bcc726435fd2c" translate="yes" xml:space="preserve">
          <source>The Vendor Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dec2635eac810be096aaccd954a32ed8dfa85d6" translate="yes" xml:space="preserve">
          <source>The abstract target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4675a9fdfe29505bb34d60cad4cf1158f8a0743" translate="yes" xml:space="preserve">
          <source>The accepted values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e159ca682099594c2692739fb50124af4fe0780" translate="yes" xml:space="preserve">
          <source>The accessors to append to the model's array form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb947566a6d799ffd6d697f69032688f96c5ffa" translate="yes" xml:space="preserve">
          <source>The action URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d619d5dc044d8b79fa6443a837d05734186ce17" translate="yes" xml:space="preserve">
          <source>The action text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f82709d71e854599336df425dc69c85b94871f" translate="yes" xml:space="preserve">
          <source>The active PDO connection used for reads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae7a442040496c42919452970c0ca6aa57bde4e" translate="yes" xml:space="preserve">
          <source>The active PDO connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fdfe4c84c01e05423007671a934f32fa1279806" translate="yes" xml:space="preserve">
          <source>The active connection instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71cba0a62ec55ffff5f8b76e705047846e21e3be" translate="yes" xml:space="preserve">
          <source>The active database connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8768a8f815e455e436d9f320bb9125bb7e672ec" translate="yes" xml:space="preserve">
          <source>The additional attributes passed to the middleware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508f48d615a26bf0a0727d921b1ab2f497f0fb94" translate="yes" xml:space="preserve">
          <source>The additional data that should be added to the top-level resource array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8bba62a29ae7d443003a1f26fc5ab5130a87e4c" translate="yes" xml:space="preserve">
          <source>The additional meta data that should be added to the resource response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3030b560c6faecd62fec7897bc64acf3de8cf93b" translate="yes" xml:space="preserve">
          <source>The affected model IDs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746db1bb74c15d821aedc5f3bfd29c9e18bcdc78" translate="yes" xml:space="preserve">
          <source>The algorithm used for encryption.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044dda2a34cb33bd7a37ed2af0058fbbd5715912" translate="yes" xml:space="preserve">
          <source>The allowed number of concurrent tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48cf19cd168ae8ec102f294e43d1aad8406caab" translate="yes" xml:space="preserve">
          <source>The amount of seconds to wait before polling the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5708568da35f894d3497f6c32e1540d556a785cd" translate="yes" xml:space="preserve">
          <source>The amount of time the lock window is maintained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9caa11a67ad0edbbb3e894afbd48e508872dc6" translate="yes" xml:space="preserve">
          <source>The amount of time the mutex should be valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40f6f87f1ac0a16385f90c9ed1480b7f0f21229" translate="yes" xml:space="preserve">
          <source>The amount of time to block until a lock is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b8982ee7772dea5813b992fab9c747e1bc70e9" translate="yes" xml:space="preserve">
          <source>The amount of times to try a job before logging it failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b55bbaf79db0204e53afde6d5aa6a6eb48e42d" translate="yes" xml:space="preserve">
          <source>The application implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2ad157501fdde4113eff5d436ab03050143492" translate="yes" xml:space="preserve">
          <source>The application instance being facaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700e78dfa7157e44ec6a33c8a07aa095209157cd" translate="yes" xml:space="preserve">
          <source>The application instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a1645a02eb52d127384833f8b918cbcb8bfe4f" translate="yes" xml:space="preserve">
          <source>The application must be using the AuthenticateSession middleware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a2b3170107d228012dd3ef4487d710eeb2a57e" translate="yes" xml:space="preserve">
          <source>The application namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ba8da71133ef34889523eff2cd0c6c420fbd36" translate="yes" xml:space="preserve">
          <source>The application's middleware stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38dd0e2ec12174a1115a37bb2c7b35a35ae69dbd" translate="yes" xml:space="preserve">
          <source>The application's route middleware groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865aa1e2de77b009cefb703159e4c42c50f9aee2" translate="yes" xml:space="preserve">
          <source>The application's route middleware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d240b3aecfbdef0a84960d2b07883ab05ce8e95" translate="yes" xml:space="preserve">
          <source>The array driver is used during &lt;a href=&quot;testing&quot;&gt;testing&lt;/a&gt; and prevents the data stored in the session from being persisted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5805051ef6294bed2612a20601d4a43c3e8fb7b5" translate="yes" xml:space="preserve">
          <source>The array of active view paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c413dd08be7d9863087ff27bf001e9f36ccf80f9" translate="yes" xml:space="preserve">
          <source>The array of booted callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b1c0748a98edea2d9fe74cdc9103512b58cac5" translate="yes" xml:space="preserve">
          <source>The array of booted models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f30ca408d9803f4cd365a1e5bad69fee33a71f4" translate="yes" xml:space="preserve">
          <source>The array of booting callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="575a7fd03b65e91a4178ede32badc2298d88b1f1" translate="yes" xml:space="preserve">
          <source>The array of callbacks to be run after the event is finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ccfd59c47387b11a0490b347b1f09b5bbdd4c68" translate="yes" xml:space="preserve">
          <source>The array of callbacks to be run before the event is started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a06c9f03662dee5c777e6605cea6ae7dd2cae3b" translate="yes" xml:space="preserve">
          <source>The array of class aliases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c164af2a5cb8f56404ea4e25d02b4262054e3294" translate="yes" xml:space="preserve">
          <source>The array of class pipes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92a24eff1309c0ed997b4aa2269a95c7b4225b9" translate="yes" xml:space="preserve">
          <source>The array of command parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260e54a16a4d38cf39117a00ce8e7fa7ac4cabc4" translate="yes" xml:space="preserve">
          <source>The array of created &quot;drivers&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55f3a1015f99051dc70c31ec12f692da8a7682d" translate="yes" xml:space="preserve">
          <source>The array of custom attribute names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c239ee135a77fd00f70f18e76d632341663bdf" translate="yes" xml:space="preserve">
          <source>The array of custom displayable values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e50ccf1208f5c7afb59e7574b58f1afc8fe4bc" translate="yes" xml:space="preserve">
          <source>The array of custom error messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222ea1aa774f25d8ad86d963dbc6064723fab1e7" translate="yes" xml:space="preserve">
          <source>The array of custom query callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d72235faa9df5401abb0d30837683976c01598a" translate="yes" xml:space="preserve">
          <source>The array of engine resolvers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d0a6e9e05c1bd83126a656ce30aafb6c209ffe" translate="yes" xml:space="preserve">
          <source>The array of fallback error messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c059084361f4d9fab16a7571835871a727fa69" translate="yes" xml:space="preserve">
          <source>The array of filter callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20685d34dc9014570b182df604703ace7eb368a" translate="yes" xml:space="preserve">
          <source>The array of global scopes on the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a917c855590eba39e155b9a764e6200ae2becf8f" translate="yes" xml:space="preserve">
          <source>The array of loaded translation groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b89670d4d86286968a4ff0fe65239a3e636d26c" translate="yes" xml:space="preserve">
          <source>The array of matched parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d282d07835e7c75e87d0253b3f5530768737667" translate="yes" xml:space="preserve">
          <source>The array of query bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83fbe499a5a7de9852761933ce5584a45c1fef2d" translate="yes" xml:space="preserve">
          <source>The array of reject callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d2c122c883ea431fc098f0ad169a3c202798aa" translate="yes" xml:space="preserve">
          <source>The array of resolved broadcast drivers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f7a94fdd67861952778b565610a3df564583c84" translate="yes" xml:space="preserve">
          <source>The array of resolved cache stores.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efdcf8bfef2613d19486cf3a4a1ac9ec4945e4fd" translate="yes" xml:space="preserve">
          <source>The array of resolved channels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3663dc622a8045a7eb9382356ec6cbef8fd2a939" translate="yes" xml:space="preserve">
          <source>The array of resolved filesystem drivers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249c05c5507e518b43372cadab01a7dd14b7c0bd" translate="yes" xml:space="preserve">
          <source>The array of resolved queue connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5e117bae3758d396e7f6615095994949366509" translate="yes" xml:space="preserve">
          <source>The array of resolved queue connectors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53417ef931e1f48aac494e28336e41dbf8df69c9" translate="yes" xml:space="preserve">
          <source>The array of stored values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1aeead12029d9880d0d6d9d8e4aa073c6f44f9" translate="yes" xml:space="preserve">
          <source>The array of terminating callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4319e89a4ee650e250e5646ecf67161bdee09c09" translate="yes" xml:space="preserve">
          <source>The array of the view error bags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57013583a8d1c6e8f3bd6c94213e8e5ef9024aa0" translate="yes" xml:space="preserve">
          <source>The array of trait initializers that will be called on each new instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6b35e3ec20c9b4a985b353dfe9535bb0267f30" translate="yes" xml:space="preserve">
          <source>The array of view data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fbff92bea79b0b5675a578d6aea62e09df38a9a" translate="yes" xml:space="preserve">
          <source>The array of views that have been located.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ef60aa7cf8353dcdcc347ed6877b34ff99be8e" translate="yes" xml:space="preserve">
          <source>The array of wildcard attributes with their asterisks expanded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce0514aa4727a7b646e4312e81942612d488ac4" translate="yes" xml:space="preserve">
          <source>The associated key of the relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b35263d7cab68e2fc83387297d0955ec85fb8ee" translate="yes" xml:space="preserve">
          <source>The associated key on the parent model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7147fd06ec1de2429be5fd0eac35daea0dad7905" translate="yes" xml:space="preserve">
          <source>The attach function requires the &lt;code&gt;Zip&lt;/code&gt; PHP extension to be installed and enabled on your server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79aae6a983ac5da9204e5bd88f9e0647f3a47cca" translate="yes" xml:space="preserve">
          <source>The attachment author's icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21771cd288a9ab171666e9e3d3a04d97fce788e3" translate="yes" xml:space="preserve">
          <source>The attachment author's link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece758f89012a64b9e88e7770b01755b81d43e79" translate="yes" xml:space="preserve">
          <source>The attachment author's name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002d459789b4ce93251c7592d4034b977f5c4a24" translate="yes" xml:space="preserve">
          <source>The attachment's URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3054e05694a112719718c0588f0fb444fea131ca" translate="yes" xml:space="preserve">
          <source>The attachment's color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a7607e85ce9611679260163ca32208ade99b03" translate="yes" xml:space="preserve">
          <source>The attachment's fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e904d0898664e5138a278881d7eee32db34c1426" translate="yes" xml:space="preserve">
          <source>The attachment's footer icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6beb1312bfa44bd06644aa4c863130daa2b5a40b" translate="yes" xml:space="preserve">
          <source>The attachment's footer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b141b8b48347725986ccc61e748185a93c25cfad" translate="yes" xml:space="preserve">
          <source>The attachment's image url.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae9eb34af2425cd680a179fbb4a56b625e0c403" translate="yes" xml:space="preserve">
          <source>The attachment's pretext.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66757fa7c301318275e431c47c9629905554fd79" translate="yes" xml:space="preserve">
          <source>The attachment's text content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990c751881d860bbebeb4a7978b1400a2008b83e" translate="yes" xml:space="preserve">
          <source>The attachment's thumb url.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd45689397d10fc62e831d3ce7d6037cb1247f9" translate="yes" xml:space="preserve">
          <source>The attachment's timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4c224be26c4fa8d8069593da0b71e5ab3595e5" translate="yes" xml:space="preserve">
          <source>The attachment's title.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107aeaf311ca2811f654a513806e587c9ce2aeac" translate="yes" xml:space="preserve">
          <source>The attachments for the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43053c769b001bcaa36141f59816a36bfd3ac79" translate="yes" xml:space="preserve">
          <source>The attachments from a storage disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa8327ac2748f50e1d3816a3021e710b14a55b1" translate="yes" xml:space="preserve">
          <source>The attributes that are aliased.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64acb04bbe7683eabc7c50f3ad110f9104b1820c" translate="yes" xml:space="preserve">
          <source>The attributes that are mass assignable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed278bd69ecf0340460a9100c869f8626dae71d" translate="yes" xml:space="preserve">
          <source>The attributes that aren't mass assignable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1012071b12ebdc93392de9ae5755b132344673" translate="yes" xml:space="preserve">
          <source>The attributes that can be set through this class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ee2cdf4b7e25967f811964400f0c29345ace353" translate="yes" xml:space="preserve">
          <source>The attributes that should be cast to native types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2d18d555fd7026977e1673462f055fccf7f24f" translate="yes" xml:space="preserve">
          <source>The attributes that should be hidden for serialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b5c23b5ec11b4705e89fe0aa81add279177372" translate="yes" xml:space="preserve">
          <source>The attributes that should be mutated to dates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69aeec3418a6961857d118dee464351eb361d74" translate="yes" xml:space="preserve">
          <source>The attributes that should be visible in serialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bc35b1af0cb7a426a433040365f8dc6465d39a" translate="yes" xml:space="preserve">
          <source>The attributes that should not be trimmed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f947bed39aa058152d836ab1f964583fb7beab25" translate="yes" xml:space="preserve">
          <source>The attributes to pass on to the router.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a772e293188e172ac8a90853f4d2011029dccf5f" translate="yes" xml:space="preserve">
          <source>The authenticated user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83481c43cd436000b3b339c40455db30d6f30f99" translate="yes" xml:space="preserve">
          <source>The authentication factory implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90dcfab34a254e0252e7d5bdd4f51d485b273c21" translate="yes" xml:space="preserve">
          <source>The authentication factory instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a846af0788c3c2525b21d2e5515ac03f129ab6" translate="yes" xml:space="preserve">
          <source>The authentication guard name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a175eeab0cbebd86412db5394870320b7d3bb814" translate="yes" xml:space="preserve">
          <source>The available site types are: &lt;code&gt;apache&lt;/code&gt;, &lt;code&gt;apigility&lt;/code&gt;, &lt;code&gt;expressive&lt;/code&gt;, &lt;code&gt;laravel&lt;/code&gt; (the default), &lt;code&gt;proxy&lt;/code&gt;, &lt;code&gt;silverstripe&lt;/code&gt;, &lt;code&gt;statamic&lt;/code&gt;, &lt;code&gt;symfony2&lt;/code&gt;, &lt;code&gt;symfony4&lt;/code&gt;, and &lt;code&gt;zf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfddf4965ef67022e632331b0f2d6dc65643e961" translate="yes" xml:space="preserve">
          <source>The base path for the Laravel installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d547ebbdf03ae9bab4930919c0bf077d430b1e8" translate="yes" xml:space="preserve">
          <source>The base path to assign to all URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b852a76cd5a6949014a186f5febef03dcf4e07f" translate="yes" xml:space="preserve">
          <source>The base path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d78dee4598da0e7c808528705b1d9b058ec291" translate="yes" xml:space="preserve">
          <source>The base query builder instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269007b92b3c11ffc7f22d23c91ea154b8d5ab89" translate="yes" xml:space="preserve">
          <source>The binding registrar instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3930e7b5e0c4ecd4ef5e60574479fd1547d23b23" translate="yes" xml:space="preserve">
          <source>The bindings for the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac6382e6ab7674b907522a13fcca289e7d8e6bf" translate="yes" xml:space="preserve">
          <source>The bootstrap classes for the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e548e5ec316df976c332cc48e3e8d00ee6a1ade" translate="yes" xml:space="preserve">
          <source>The bus dispatcher implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb6df32035414a54e912e6531a4aa97bf4ae643" translate="yes" xml:space="preserve">
          <source>The button component renders a centered button link. The component accepts two arguments, a &lt;code&gt;url&lt;/code&gt; and an optional &lt;code&gt;color&lt;/code&gt;. Supported colors are &lt;code&gt;blue&lt;/code&gt;, &lt;code&gt;green&lt;/code&gt;, and &lt;code&gt;red&lt;/code&gt;. You may add as many button components to a notification as you wish:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23dd08417a76546506cc055e5ac18ee880e10e9a" translate="yes" xml:space="preserve">
          <source>The button component renders a centered button link. The component accepts two arguments, a &lt;code&gt;url&lt;/code&gt; and an optional &lt;code&gt;color&lt;/code&gt;. Supported colors are &lt;code&gt;primary&lt;/code&gt;, &lt;code&gt;success&lt;/code&gt;, and &lt;code&gt;error&lt;/code&gt;. You may add as many button components to a message as you wish:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67148b676160696a259f611cb3910f272e3ad8e9" translate="yes" xml:space="preserve">
          <source>The cache configuration file also contains various other options, which are documented within the file, so make sure to read over these options. By default, Laravel is configured to use the &lt;code&gt;file&lt;/code&gt; cache driver, which stores the serialized, cached objects in the filesystem. For larger applications, it is recommended that you use a more robust driver such as Memcached or Redis. You may even configure multiple cache configurations for the same driver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ca5292f22499cf82d42dcb1798f76798728140" translate="yes" xml:space="preserve">
          <source>The cache copy of the file's hash name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b2dcbb6a19519ffbda856669929d0a72248340" translate="yes" xml:space="preserve">
          <source>The cache expiration time in minutes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02de754d591e29fea01ba41c492e8aca34a4142" translate="yes" xml:space="preserve">
          <source>The cache factory implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed932c407e300bda3165f87b6e6c5be39a9c83aa" translate="yes" xml:space="preserve">
          <source>The cache key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73bcbba3573ed974e10d1e1797d522c1b6c8375f" translate="yes" xml:space="preserve">
          <source>The cache manager instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6cfd0a7e883b1021d9c48623c52ebd477907933" translate="yes" xml:space="preserve">
          <source>The cache of camel-cased words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d39f86a958a1d5c6d0a0a46aa194d1fc3497b7" translate="yes" xml:space="preserve">
          <source>The cache of snake-cased words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27debf93803a4e457324945e1299df1b1a2a0f5" translate="yes" xml:space="preserve">
          <source>The cache of studly-cased words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74431da7634d0b922e468ad28f12ca74532a4df3" translate="yes" xml:space="preserve">
          <source>The cache of the mutated attributes for each class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c2591968533523333c6a39ba8efbd1f1ed59800" translate="yes" xml:space="preserve">
          <source>The cache repository implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a874270b238c44e2d5eca0fcd142bc1eb79b2ce6" translate="yes" xml:space="preserve">
          <source>The cache repository instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65bc0f91dceb2f266962aaad21fa3b90224f4406" translate="yes" xml:space="preserve">
          <source>The cache store implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfd7fb6ddb7da2adc5c74fd86472e61e652f11c" translate="yes" xml:space="preserve">
          <source>The cache store that should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5566a1e57e09d248596d91ef9b0b31a96cf2a58d" translate="yes" xml:space="preserve">
          <source>The cached wildcard listeners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215c20183ff3ba51c0b832fb57414436223351d7" translate="yes" xml:space="preserve">
          <source>The callback should return an associative array with a single key/value pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5f02ad70fa7e25965e4bc2f5b43c1cb7590440" translate="yes" xml:space="preserve">
          <source>The callback that should be invoked while building the view data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e30373c1fe8b902039abdcbfaf49c7e776016f" translate="yes" xml:space="preserve">
          <source>The callback that should be used to build the mail message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02bc874d1ae8840525238424c555655e5f4e3632" translate="yes" xml:space="preserve">
          <source>The callback that validates the attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea72b773337529317fc7c52411e6f22e496799e" translate="yes" xml:space="preserve">
          <source>The callback to call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2028f2c104eb135cc29f791c064ca0c10e253acf" translate="yes" xml:space="preserve">
          <source>The callback to use to format hosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6e3e8b26a848ea695a6da80bb28dd74307a4b1" translate="yes" xml:space="preserve">
          <source>The callback to use to format paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa629646aba0f3e0f413cdc1411782f72493c720" translate="yes" xml:space="preserve">
          <source>The callbacks for the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f95b440ca124ca9d721ecf85089410e8f791570" translate="yes" xml:space="preserve">
          <source>The callbacks that should be run after the application is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ac19a80df1481a0d6aa0df9062c35284f29366" translate="yes" xml:space="preserve">
          <source>The callbacks that should be run before the application is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7785745576b149f7f84e0c415b3dfb9a32c7cb51" translate="yes" xml:space="preserve">
          <source>The changed model attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a750b09a5e1e616bdc7608b8e51c92de3fcca119" translate="yes" xml:space="preserve">
          <source>The channel name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d19143a32f30c1b96965041373022936a285f90" translate="yes" xml:space="preserve">
          <source>The channel to send the message on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e45770d224a704f9de2a897aa23aba8cfd816cb" translate="yes" xml:space="preserve">
          <source>The channel's name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b4bae60241b6f75bca8b6b9f1b3ca95213fecc" translate="yes" xml:space="preserve">
          <source>The channel's response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8c6c5efc0d04b833fab530d00a7954e1d74f5c" translate="yes" xml:space="preserve">
          <source>The child model instance of the relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30924fcb1c018c520a183d38ded93d253119e0d3" translate="yes" xml:space="preserve">
          <source>The choices available via the prompt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eefb0db1eed0afb59b2123576316d98a161197c" translate="yes" xml:space="preserve">
          <source>The class name of the custom pivot model to use for the relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a57065cc249ee14b3d53c653e94fd50c24d79db" translate="yes" xml:space="preserve">
          <source>The class name of the job being dispatched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7f6668acb4bb1138c4cd10c049c0c958c15084" translate="yes" xml:space="preserve">
          <source>The class name of the job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053b021471f1941d7aa6f72456bbe7eb6df43188" translate="yes" xml:space="preserve">
          <source>The class name of the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8f6ab6a44372d75a4e3b1ee0e706fb58b0c5084" translate="yes" xml:space="preserve">
          <source>The class name of the morph type constraint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a9913521a35f63697e4ed0b87f77db77194e7a" translate="yes" xml:space="preserve">
          <source>The class name of the parent model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19fecb96c0222357648490e6d2e66b102958d0ec" translate="yes" xml:space="preserve">
          <source>The client credentials grant is suitable for machine-to-machine authentication. For example, you might use this grant in a scheduled job which is performing maintenance tasks over an API. To use this method you first need to add new middleware to your &lt;code&gt;$routeMiddleware&lt;/code&gt; in &lt;code&gt;app/Http/Kernel.php&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a557c7752ffed0165257d52f58c494110828ccc0" translate="yes" xml:space="preserve">
          <source>The collation that should be used for the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d161049c5fc7a9102d88e7ac5ae9bebaca5ea4" translate="yes" xml:space="preserve">
          <source>The collection being operated on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01e8b3226ac92f5b9b8aa11c6d7d9191b9ca001" translate="yes" xml:space="preserve">
          <source>The collection of Swift Messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8b3dd7eb2249ca097ee1edcb9a94a4e793080e" translate="yes" xml:space="preserve">
          <source>The column name of the &quot;remember me&quot; token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cfd8f3867da21e4171725e559104a5f313aec8" translate="yes" xml:space="preserve">
          <source>The column to check on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f42ba6470acd1e013aa2ef5972ef51a7e3899ad" translate="yes" xml:space="preserve">
          <source>The columns available as serials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd17a40e73ed533546cad6e3d9f8e8228c9b6964" translate="yes" xml:space="preserve">
          <source>The columns that should be added to the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="305734dd589f1a233a2dbcc6e6863a596458af18" translate="yes" xml:space="preserve">
          <source>The columns that should be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b25abdd5cb1d9ecca7fa48eba62242a3970d45d" translate="yes" xml:space="preserve">
          <source>The command callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8e98cb562c95858cab63ecbbb54498daf48e7a" translate="yes" xml:space="preserve">
          <source>The command exit code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405247f56b7f4734c23c1f9c25e3909231176501" translate="yes" xml:space="preserve">
          <source>The command name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a1e16a391f6f4d736ba43647827fc1e18cbbc31" translate="yes" xml:space="preserve">
          <source>The command output implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a0ce3b2d0df18946a97638250ea307669c29048" translate="yes" xml:space="preserve">
          <source>The command string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7efc699195f886a6e429e80a840d60f071ebb3" translate="yes" xml:space="preserve">
          <source>The command to handler mapping for non-self-handling events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00359a0dca401027fc2f7ecc09b53bb13510f297" translate="yes" xml:space="preserve">
          <source>The command to run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea1363078ef51d901215f7647516956b7a109925" translate="yes" xml:space="preserve">
          <source>The command working path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3a2f0d81e718f024a743f953cfb6d255564ae6" translate="yes" xml:space="preserve">
          <source>The commands that have been dispatched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74f08dd8d8e5dcd6e9d959883dc3885beac59d2" translate="yes" xml:space="preserve">
          <source>The commands that should be run for the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="163005040f977cecfbeee5028ad322b7e4be210f" translate="yes" xml:space="preserve">
          <source>The commands to be executed outside of create or alter command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f048890b432a9c86163d260c37870b39780927bd" translate="yes" xml:space="preserve">
          <source>The commands to be registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a670104a9f5bacef6236288900a6a5926db076" translate="yes" xml:space="preserve">
          <source>The compiled version of the route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa22de72750bfe57d707e716bf7311d09feea1c" translate="yes" xml:space="preserve">
          <source>The components being rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4e39b6678459fe4fb865d02c137b590f6267f5" translate="yes" xml:space="preserve">
          <source>The components that make up a select clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12892e5318915b15cbf0a8b9ffa3fff8fd19847a" translate="yes" xml:space="preserve">
          <source>The computed gathered middleware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52977139fb28317679211c44bbaea25e5940df08" translate="yes" xml:space="preserve">
          <source>The concrete instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d6e731e3917be04af959cc0046843eb69ac2d4" translate="yes" xml:space="preserve">
          <source>The condition that validates the attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e03210a72c57d04fc2c15f4de4f0eb27445c48" translate="yes" xml:space="preserve">
          <source>The connection name for the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c51803c3932a06a9f1e374c4eedb1303ac9feb" translate="yes" xml:space="preserve">
          <source>The connection name for the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98cba6f3ad229b578612487a1ff8987cbd17def2" translate="yes" xml:space="preserve">
          <source>The connection name of the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343fd81d6f1a4446806d31cb1d23c06ed567e5b2" translate="yes" xml:space="preserve">
          <source>The connection name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5fbeda9ddcca43ea32b6c56ff2df05f9c0746a" translate="yes" xml:space="preserve">
          <source>The connection resolver implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3354896d32418683925500f6db70ca7374a41aa7" translate="yes" xml:space="preserve">
          <source>The connection resolver instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7058b955ecc83e1d26cc6e320866345659888aa" translate="yes" xml:space="preserve">
          <source>The connection resolvers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7fe01f528d0fcde7ec89d80c8fb060aa8f29312" translate="yes" xml:space="preserve">
          <source>The console application bootstrappers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2532730970567092616a6328a6ad8a70c63647b" translate="yes" xml:space="preserve">
          <source>The console command description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b01f51cbe8dea0d0b9116e91ed069a80cb578d3" translate="yes" xml:space="preserve">
          <source>The console command instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb4aeceb29f92ede0d63d1e8a0f6bf9b029f2af" translate="yes" xml:space="preserve">
          <source>The console command name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0938b0826b6f6e620614a417b6b22ec073df281a" translate="yes" xml:space="preserve">
          <source>The console command signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c1c11166357d8f741809964c8062f73c16514f" translate="yes" xml:space="preserve">
          <source>The console input implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73617af24f42855738f9900de8b3217976a725a1" translate="yes" xml:space="preserve">
          <source>The constraints for the dimensions rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb251b5c0c332650dbb79a477751fe40f4249fb" translate="yes" xml:space="preserve">
          <source>The container implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e09d88b93f6cb957fa174614e40812debac667" translate="yes" xml:space="preserve">
          <source>The container instance used by the route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56f4a65de0f2d42e39d42d58b0cffa75169879c" translate="yes" xml:space="preserve">
          <source>The container instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b3fa70421f0b847292b720346ab316ac592d7b" translate="yes" xml:space="preserve">
          <source>The container's bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c2195c69962a63509a33b718ae7e3e3e88e169" translate="yes" xml:space="preserve">
          <source>The container's method bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d318b906d0c6bf72d995ddd84a7666f8d16b10ae" translate="yes" xml:space="preserve">
          <source>The container's shared instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a669f9698ebbb55d57cb7749c399a0291e041fd" translate="yes" xml:space="preserve">
          <source>The content of the attachment field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29eb17d3305eea1742f5ba9562fbdf3b5a38ef4" translate="yes" xml:space="preserve">
          <source>The contextual binding map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c7e87f3973612b653efffad51badfb548c12e8" translate="yes" xml:space="preserve">
          <source>The controller action to redirect to if validation fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835ca03df413c70422d6350b4525769f4962be19" translate="yes" xml:space="preserve">
          <source>The controller instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2455b441d537fd50725f310e0ed3a5e30012919e" translate="yes" xml:space="preserve">
          <source>The controller namespace for the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6e4b6ce9962cabecf1aa9c1720990ac7727d58" translate="yes" xml:space="preserve">
          <source>The cookie jar instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f781ca3d87e9a2dae6feab9b7882c909cccab49e" translate="yes" xml:space="preserve">
          <source>The count of self joins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209f2edbb17077274395b569fa158e3ca7cdc143" translate="yes" xml:space="preserve">
          <source>The create payload callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8ed4a867917c469a73c29bec7570da26d3291b" translate="yes" xml:space="preserve">
          <source>The credentials for the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf1a4735b1444d2f7e692973d82dfe672098948" translate="yes" xml:space="preserve">
          <source>The credentials provided by the attempter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331a1592d5481ec48a33fa74e62051f79a9ea374" translate="yes" xml:space="preserve">
          <source>The cron expression representing the event's frequency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f91ff1baa6bd31d64077cdaa2225a2b948453cf" translate="yes" xml:space="preserve">
          <source>The current application environment detection can be overridden by a server-level &lt;code&gt;APP_ENV&lt;/code&gt; environment variable. This can be useful when you need to share the same application for different environment configurations, so you can set up a given host to match a given environment in your server's configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d2883de79a98e54cd519f5cf1d0b7df9fed230" translate="yes" xml:space="preserve">
          <source>The current application environment is determined via the &lt;code&gt;APP_ENV&lt;/code&gt; variable from your &lt;code&gt;.env&lt;/code&gt; file. You may access this value via the &lt;code&gt;environment&lt;/code&gt; method on the &lt;code&gt;App&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c34698e264b1e328cd66f04adaa7f0bdd9e4fc1" translate="yes" xml:space="preserve">
          <source>The current globally available container (if any).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577a8fb4f677360e3043460895b5389a0e2bef1b" translate="yes" xml:space="preserve">
          <source>The current globally used instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba9fc81885346678c07c834eebded15105068ce" translate="yes" xml:space="preserve">
          <source>The current loop iteration (starts at 1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a1e77a867a8d13f9e6bd71d03d604a85e51d75" translate="yes" xml:space="preserve">
          <source>The current page being &quot;viewed&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43215ce1bf85049263e5a88f4453fcc490e63cf5" translate="yes" xml:space="preserve">
          <source>The current page resolver callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a0e140c43b8db40942b3f016a7092697ab2093" translate="yes" xml:space="preserve">
          <source>The current path resolver callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10fe5c916092a4c9967adc2e37ee31d32f66963e" translate="yes" xml:space="preserve">
          <source>The current query value bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea1280187790712d0bfead39ef0e6db3de995d3c" translate="yes" xml:space="preserve">
          <source>The current rule that is validating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b125d1c6700c052b7530670a83617a47b1aec5" translate="yes" xml:space="preserve">
          <source>The current theme being used when generating emails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b3d52da3605f70e951eab4e8d26ec7e17382b2" translate="yes" xml:space="preserve">
          <source>The currently authenticated user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f591fab5edf159ac9ce03edcc3fea5093d71c3c2" translate="yes" xml:space="preserve">
          <source>The currently dispatched route instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520caa91022ca1d07c64ed6b57975699c314dfcd" translate="yes" xml:space="preserve">
          <source>The custom connection resolvers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1488a087d824b4e58c2919bd8b97dccf6a01ed47" translate="yes" xml:space="preserve">
          <source>The custom database path defined by the developer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357d0ae7a004a3dbefb1c1a01aba1f5f3590629e" translate="yes" xml:space="preserve">
          <source>The custom environment path defined by the developer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906038720134a815e12006c60cd6829aa20ca40f" translate="yes" xml:space="preserve">
          <source>The custom password validator callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46888afbbd5714f46c95f8b6b3e70d609ea3d6bd" translate="yes" xml:space="preserve">
          <source>The custom pivot table column for the created_at timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f286c11807281691e121721fe5da5f83b7852cfc" translate="yes" xml:space="preserve">
          <source>The custom pivot table column for the updated_at timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00df67432bd39694f4d935f3622a03fccd587391" translate="yes" xml:space="preserve">
          <source>The custom storage path defined by the developer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5e25fd500daa95678198812fe5bd345cd561de" translate="yes" xml:space="preserve">
          <source>The custom validator Closure receives four arguments: the name of the &lt;code&gt;$attribute&lt;/code&gt; being validated, the &lt;code&gt;$value&lt;/code&gt; of the attribute, an array of &lt;code&gt;$parameters&lt;/code&gt; passed to the rule, and the &lt;code&gt;Validator&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c886a362322afd4e1e6bc24f0a03c2967292a8f" translate="yes" xml:space="preserve">
          <source>The data being validated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0e63b343d17808511075194a4f63b6e9f94f10" translate="yes" xml:space="preserve">
          <source>The data for the notification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61cbc87c5eeba281b2f8991440950d568563a42" translate="yes" xml:space="preserve">
          <source>The data needed to process this failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a954ed8ff1930878f5ba86aeedda59358d39bc" translate="yes" xml:space="preserve">
          <source>The data returned by the authorization callback will be made available to the presence channel event listeners in your JavaScript application. If the user is not authorized to join the presence channel, you should return &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848a2ff188b53d966c1a25ab209f1e78fa1a1ea2" translate="yes" xml:space="preserve">
          <source>The data that should be stored with the notification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f8980b319b16f2dcb81802b272bbcaf515a9f1" translate="yes" xml:space="preserve">
          <source>The data that will be used to narrow the search in the database table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c490414a8e5d0bd6c0855a1a857cae124bae757a" translate="yes" xml:space="preserve">
          <source>The data to be merged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae2666d66ea8794455b418835919252b3dc68c0" translate="yes" xml:space="preserve">
          <source>The data to be passed to the listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f385415a332e0a53dca370f090f04a9228a2da3" translate="yes" xml:space="preserve">
          <source>The data to pass to the Artisan command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f4e176f7613d19ae0f2af41b43a7080c3338d5" translate="yes" xml:space="preserve">
          <source>The data under validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96fc2cf2b62c101966a04533975a4dece941ca17" translate="yes" xml:space="preserve">
          <source>The database configuration for your application is located at &lt;code&gt;config/database.php&lt;/code&gt;. In this file you may define all of your database connections, as well as specify which connection should be used by default. Examples for most of the supported database systems are provided in this file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac8080be469edc754796ea472ced1cf67fa532b" translate="yes" xml:space="preserve">
          <source>The database connection configuration options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f931d64cbf314666e6e778147a9c279d770ae17f" translate="yes" xml:space="preserve">
          <source>The database connection factory instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca5446854706bcd28bfbb77963c19f814cc1083" translate="yes" xml:space="preserve">
          <source>The database connection instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6487c7ea29f84ab88d09d6d6cb30e8cae4e19168" translate="yes" xml:space="preserve">
          <source>The database connection name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7bd54a54781e7a7a20e8020f30c64cebe76f7e7" translate="yes" xml:space="preserve">
          <source>The database connection on which the model instance should be persisted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5011770cc75a8b14e6efb54b69e9ed95044a04" translate="yes" xml:space="preserve">
          <source>The database connection resolver instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4de6d6c03772c5e49b7f91ab0398e90ac4782d6" translate="yes" xml:space="preserve">
          <source>The database connection to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d896ab0d77560d20ef06568f5349d769d430c4" translate="yes" xml:space="preserve">
          <source>The database connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53fe936722e92bb909a6e1f56567842ee540c134" translate="yes" xml:space="preserve">
          <source>The database connections that should have transactions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338a9506b2de62643bec0a56cba74e790604cab4" translate="yes" xml:space="preserve">
          <source>The database job payload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41010f22c3198f06dbbc47d9f91f0a8ddc30b9e2" translate="yes" xml:space="preserve">
          <source>The database manager instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5244afe27be3131c233acd605fe328b1be779fb5" translate="yes" xml:space="preserve">
          <source>The database query grammar instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58f8f68884ac02dfce4a3f86ad540a7e94d87b1" translate="yes" xml:space="preserve">
          <source>The database query post processor instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fff9e2fb149639d60a5a3ba77be4ce345b3903d" translate="yes" xml:space="preserve">
          <source>The database queue instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873af029e33fa0cdb773d785df2fe16a4043556f" translate="yes" xml:space="preserve">
          <source>The database table that holds the jobs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392721a86903089f1c1b861cb24dd3ed0bbd2c6e" translate="yes" xml:space="preserve">
          <source>The database table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="617cc0e4f5ea8788318ebaab1c07b42a108d9adc" translate="yes" xml:space="preserve">
          <source>The decoded JSON content for the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18c24ed1d34f6c541091afbd0060f61ba5fbbe5" translate="yes" xml:space="preserve">
          <source>The default &quot;simple&quot; pagination view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a83d0a1602e7d7be16305532cd70a72223cf81c" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;webpack.mix.js&lt;/code&gt; included with Laravel will compile the &lt;code&gt;resources/sass/app.scss&lt;/code&gt; SASS file. This &lt;code&gt;app.scss&lt;/code&gt; file imports a file of SASS variables and loads Bootstrap, which provides a good starting point for most applications. Feel free to customize the &lt;code&gt;app.scss&lt;/code&gt; file however you wish or even use an entirely different pre-processor by &lt;a href=&quot;mix&quot;&gt;configuring Laravel Mix&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8706e93e3110f03a20488bab6b4719633fe5ca8d" translate="yes" xml:space="preserve">
          <source>The default Cashier currency is United States Dollars (USD). You can change the default currency by calling the &lt;code&gt;Cashier::useCurrency&lt;/code&gt; method from within the &lt;code&gt;boot&lt;/code&gt; method of one of your service providers. The &lt;code&gt;useCurrency&lt;/code&gt; method accepts two string parameters: the currency and the currency's symbol:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6255088d897422691671b71c3258c802cc44e1d3" translate="yes" xml:space="preserve">
          <source>The default Laravel application structure is intended to provide a great starting point for both large and small applications. Of course, you are free to organize your application however you like. Laravel imposes almost no restrictions on where any given class is located - as long as Composer can autoload the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5d16b8314b1bb7a252e1452337dd1ac9e4f507" translate="yes" xml:space="preserve">
          <source>The default MongoDB installation will set the database username to &lt;code&gt;homestead&lt;/code&gt; and the corresponding password to &lt;code&gt;secret&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525c714686f602f4f3e9ec1b57a158375aaf6b3d" translate="yes" xml:space="preserve">
          <source>The default Neo4j installation will set the database username to &lt;code&gt;homestead&lt;/code&gt; and corresponding password to &lt;code&gt;secret&lt;/code&gt;. To access the Neo4j browser, visit &lt;code&gt;http://homestead.test:7474&lt;/code&gt; via your web browser. The ports &lt;code&gt;7687&lt;/code&gt; (Bolt), &lt;code&gt;7474&lt;/code&gt; (HTTP), and &lt;code&gt;7473&lt;/code&gt; (HTTPS) are ready to serve requests from the Neo4j client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6b1424188083c99b9aea337c2a85553ab52f96" translate="yes" xml:space="preserve">
          <source>The default PDO connection options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c9e3ceb013ebbad4f5f365a80c5b845ee41bbfc" translate="yes" xml:space="preserve">
          <source>The default SameSite option (if specified).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4962f43acd630cf0814bf0588614427cc8f0b19d" translate="yes" xml:space="preserve">
          <source>The default actions for a resourceful controller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5e47c1af9483e4019d3135bb6b6afcd2b0f097" translate="yes" xml:space="preserve">
          <source>The default channel used to deliver messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc3c64cb76c2543934bf1c9d10978c765b6f4b2" translate="yes" xml:space="preserve">
          <source>The default character set that should be used for the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf954a72b54bd738f6bf64397a57855a9fad71b" translate="yes" xml:space="preserve">
          <source>The default connection name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc292d4b4fc7dc631ca7600ccb13ddcf3636be17" translate="yes" xml:space="preserve">
          <source>The default cost factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447c3c94a920918fb2ff1fb0d13256250f683906" translate="yes" xml:space="preserve">
          <source>The default domain (if specified).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6176ba31f894cc3ff5b7c01522ae693c8d4838c0" translate="yes" xml:space="preserve">
          <source>The default fetch mode of the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de2f01714f723c4f5b0a5f7c32583d999efe3579" translate="yes" xml:space="preserve">
          <source>The default hashing driver for your application is configured in the &lt;code&gt;config/hashing.php&lt;/code&gt; configuration file. There are currently three supported drivers: &lt;a href=&quot;https://en.wikipedia.org/wiki/Bcrypt&quot;&gt;Bcrypt&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Argon2&quot;&gt;Argon2&lt;/a&gt; (Argon2i and Argon2id variants).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41c8afbf3129958255db409570232eb5082e7c0" translate="yes" xml:space="preserve">
          <source>The default language for your application is stored in the &lt;code&gt;config/app.php&lt;/code&gt; configuration file. Of course, you may modify this value to suit the needs of your application. You may also change the active language at runtime using the &lt;code&gt;setLocale&lt;/code&gt; method on the &lt;code&gt;App&lt;/code&gt; facade:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8c9dc80a251d5c4c8ba7601af3f524f99e8881" translate="yes" xml:space="preserve">
          <source>The default locale being used by the translator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194c0a1cbd579b50906faf243c0f0ab41963bc9d" translate="yes" xml:space="preserve">
          <source>The default memory cost factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed798817e2137f335a9043fbb2b7ecf4f46ef23" translate="yes" xml:space="preserve">
          <source>The default number of minutes to store items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c83b4ef3cbb0249af45a47db01924a18f95825" translate="yes" xml:space="preserve">
          <source>The default pagination view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a90be75157f80cac695f2469e17da7688a6d494" translate="yes" xml:space="preserve">
          <source>The default path (if specified).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf11c99a42af969aef66360609092ab9410600b" translate="yes" xml:space="preserve">
          <source>The default path for the loader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ac42dbb37605c08dbb0265c31690d987af6544" translate="yes" xml:space="preserve">
          <source>The default secure setting (defaults to false).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35ebdbf56ae016d2c64106bcd0fa1104faab3ae" translate="yes" xml:space="preserve">
          <source>The default server configuration should suffice for development. However, you are free to modify this array based on your environment. Each Redis server defined in your configuration file is required to have a name, host, and port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629176cd954f99eea5baf508625e17f349ecfae3" translate="yes" xml:space="preserve">
          <source>The default string length for migrations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a44b3ce83a02c76d85803e5fc4e0ad9603fdc0" translate="yes" xml:space="preserve">
          <source>The default threads factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10f360372705c5922322dd2a987fdd129bdead0" translate="yes" xml:space="preserve">
          <source>The default time cost factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8892ce8b8b36fcb40bb99a3ed09479509d9c5d2" translate="yes" xml:space="preserve">
          <source>The default values for the pivot columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c238edd979504540147bd0d63365b38a3bab0ac7" translate="yes" xml:space="preserve">
          <source>The default values for the route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ddc559aeab08209f416ae7dd5115fff02c5758" translate="yes" xml:space="preserve">
          <source>The default verbosity of output commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c22f14c11f3b2ece2b32ae2b87ba5f4c48ec8fa" translate="yes" xml:space="preserve">
          <source>The deferred services and their providers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175d17b2e9d035b54253f3643668f50dbdeb489b" translate="yes" xml:space="preserve">
          <source>The directory itself may be optionally preserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cedde5b04038f0c3c5440201039a475a94805667" translate="yes" xml:space="preserve">
          <source>The discount amount configured in the Braintree control panel can be any value you wish, as Cashier will override the defined amount with our own custom amount each time we apply the coupon. This coupon is needed since Braintree does not natively support prorating subscriptions across subscription frequencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef4834040c86887b6fe445a8cceb794c6445f637" translate="yes" xml:space="preserve">
          <source>The easiest way to create a model instance is using the &lt;code&gt;make:model&lt;/code&gt;&lt;a href=&quot;artisan&quot;&gt;Artisan command&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc155a87004fabf3f52dc836a920417bca15e4fc" translate="yes" xml:space="preserve">
          <source>The encrypter implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c52fa0eaf8cfb2d8b294485ed16738e3b128d2" translate="yes" xml:space="preserve">
          <source>The encrypter instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e43bbaa94b3b95ddd6708e1f288f9fd67b564ed" translate="yes" xml:space="preserve">
          <source>The encryption key resolver callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25cc8d38b09cab3013e497988f5a867d549c90ba" translate="yes" xml:space="preserve">
          <source>The encryption key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4ef61bf8a2a1e93c56b6fb968c01db53285487" translate="yes" xml:space="preserve">
          <source>The engine implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6e70041af85a73ca44bb4fafb7c65e39bb0f15" translate="yes" xml:space="preserve">
          <source>The engine string typically corresponds to a file extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0081dba1c987aef38685e2ec6d2d00ae0a4230" translate="yes" xml:space="preserve">
          <source>The entry point for all requests to a Laravel application is the &lt;code&gt;public/index.php&lt;/code&gt; file. All requests are directed to this file by your web server (Apache / Nginx) configuration. The &lt;code&gt;index.php&lt;/code&gt; file doesn't contain much code. Rather, it is a starting point for loading the rest of the framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c253de2a26b428168f673da70205bfbe5557e399" translate="yes" xml:space="preserve">
          <source>The environment file to load during bootstrapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d9ca146e77074cbc26db3f34a5e5afdf3a9cec" translate="yes" xml:space="preserve">
          <source>The environment the worker should run in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370707d37296456c2507ac28d5305cb3f5ba695d" translate="yes" xml:space="preserve">
          <source>The environment the workers should run under.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62abe49314e61d1f978981b8ba6bb525c85b4b5" translate="yes" xml:space="preserve">
          <source>The event dispatcher implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ac62ccdd37e286552a478279470afa9ab144ad" translate="yes" xml:space="preserve">
          <source>The event dispatcher instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20152120ff625bc2eac49b576a1fc7c0206ceeec" translate="yes" xml:space="preserve">
          <source>The event dispatcher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f834a23c2feaa2d086ea0fbb2036bf81d75a435e" translate="yes" xml:space="preserve">
          <source>The event handler mappings for the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef5b5144a87e82a338c6d478b9aba2ab7f23270" translate="yes" xml:space="preserve">
          <source>The event instance and the exception will be passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84aacd0f4a81887473d5e51ae02234710e0c4ece" translate="yes" xml:space="preserve">
          <source>The event instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c408dce3ddfd8fe79238e595d7d4e4836ab02eaa" translate="yes" xml:space="preserve">
          <source>The event map for the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345590942c0017d54d16ffd795d8e90bf6b5fe1c" translate="yes" xml:space="preserve">
          <source>The event mutex implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8766b35a1a08c5e52f68078405527e26b6cc078" translate="yes" xml:space="preserve">
          <source>The event types that should be intercepted instead of dispatched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453dc2d1cb777bea033da1c39d69b0a04255ddda" translate="yes" xml:space="preserve">
          <source>The example above generates the following URIs for the resource's &lt;code&gt;show&lt;/code&gt; route:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42f8d0502b847ab4e7a4e18fe6354b3d371b10b" translate="yes" xml:space="preserve">
          <source>The example above will create a Slack message that looks like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa640435e0f7c4eb16ce8dbbaf193935b46b959f" translate="yes" xml:space="preserve">
          <source>The example above will generate a Slack message that looks like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ead109401e4da4cecefc2f03826d8c9dd22b260" translate="yes" xml:space="preserve">
          <source>The exception handler instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a1d67e93863a71373e92779e33fd22666aab59b" translate="yes" xml:space="preserve">
          <source>The exception instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d458a26e38e122cde7a3df2d3e5fbb0d5ce4b39c" translate="yes" xml:space="preserve">
          <source>The exception that caused the failure will be passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb2d63c80b6adb1255e7c55c9454bf785b16474" translate="yes" xml:space="preserve">
          <source>The exception that caused the job to fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2616e993a16b63b2ecbc7d71313250791dfdbf2" translate="yes" xml:space="preserve">
          <source>The exception that triggered the error response (if applicable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cbc33744915019446465547561781a9e2b51865" translate="yes" xml:space="preserve">
          <source>The exceptions are converted to HTTP responses for proper middleware handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34953f3f68af37ada510f6c7e6bef5e57b4855be" translate="yes" xml:space="preserve">
          <source>The existence state of the session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a502d88f2de6db5dcac6b71118e27f419a0d677c" translate="yes" xml:space="preserve">
          <source>The exit status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0977543b0b7737e0f6b5323af7778218fc9fa980" translate="yes" xml:space="preserve">
          <source>The expected exit code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c0f6b97f4678462da0b9c76c4dd5a1ae2d0f63" translate="yes" xml:space="preserve">
          <source>The expiration time of a job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a867d4b5f4ee2867499a4d35ccdf10b1302635d7" translate="yes" xml:space="preserve">
          <source>The extension closures for services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf5647f8442ac2edd77bf32b98f832cbb77e8cc" translate="yes" xml:space="preserve">
          <source>The extension to engine bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109bf5bf062dcf8ad2d1813bd528a67ab6bf3b03" translate="yes" xml:space="preserve">
          <source>The extra where clauses for the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1a673769790aec83cbd7464e8e1dcc8d5bfbc0" translate="yes" xml:space="preserve">
          <source>The failed validation rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6725d3c69cf57a334d39c24e3b150b6dc2bfaf00" translate="yes" xml:space="preserve">
          <source>The fallback locale used by the translator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f372fe54967de154a6496a53350e9090001c010" translate="yes" xml:space="preserve">
          <source>The far key on the relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="816c26b58ad06f52496b6de4f62e1752e5061487" translate="yes" xml:space="preserve">
          <source>The far parent model instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517f751583396638bc131e0417f18be41e33832a" translate="yes" xml:space="preserve">
          <source>The field under validation may be &lt;code&gt;null&lt;/code&gt;. This is particularly useful when validating primitive such as strings and integers that can contain &lt;code&gt;null&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f5a54641cab05cdfb25d3ce7a46eeecbcfaf91" translate="yes" xml:space="preserve">
          <source>The field under validation may have alpha-numeric characters, as well as dashes and underscores.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65015bc22b5c178cef357ca4094c78a585692fce" translate="yes" xml:space="preserve">
          <source>The field under validation must be &lt;em&gt;numeric&lt;/em&gt; and must have an exact length of &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf3e55ec01f00f1fd0cf1557bfbf2335160a6ff" translate="yes" xml:space="preserve">
          <source>The field under validation must be &lt;em&gt;yes&lt;/em&gt;, &lt;em&gt;on&lt;/em&gt;, &lt;em&gt;1&lt;/em&gt;, or &lt;em&gt;true&lt;/em&gt;. This is useful for validating &quot;Terms of Service&quot; acceptance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8829786efc6eafa9bbfa1e99c7828d7adaea002d" translate="yes" xml:space="preserve">
          <source>The field under validation must be a PHP &lt;code&gt;array&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b005a0b7bdc9173a47e1539967362f2a4a061d0" translate="yes" xml:space="preserve">
          <source>The field under validation must be a string. If you would like to allow the field to also be &lt;code&gt;null&lt;/code&gt;, you should assign the &lt;code&gt;nullable&lt;/code&gt; rule to the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe2dfb73914e647b00c6c2e309be917bfc344fb" translate="yes" xml:space="preserve">
          <source>The field under validation must be a successfully uploaded file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c653f5d28170f1220d66e19b97919cdfa0a802" translate="yes" xml:space="preserve">
          <source>The field under validation must be a valid JSON string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582e1ff2438ed37c719e28be28663948eb270ef5" translate="yes" xml:space="preserve">
          <source>The field under validation must be a valid URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9054e98dba0c7654e2eedb6cde552da2b15c1bbb" translate="yes" xml:space="preserve">
          <source>The field under validation must be a valid date according to the &lt;code&gt;strtotime&lt;/code&gt; PHP function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512143d7e661cb671abc9c21126c86580e124238" translate="yes" xml:space="preserve">
          <source>The field under validation must be a valid timezone identifier according to the &lt;code&gt;timezone_identifiers_list&lt;/code&gt; PHP function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a72a51a75d7f51b8ddd035b021afa5f2dcc73b" translate="yes" xml:space="preserve">
          <source>The field under validation must be a value after a given date. The dates will be passed into the &lt;code&gt;strtotime&lt;/code&gt; PHP function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab8ea70d563757e0afbb3809e5f6ebc36f7f917" translate="yes" xml:space="preserve">
          <source>The field under validation must be a value after or equal to the given date. For more information, see the &lt;a href=&quot;#rule-after&quot;&gt;after&lt;/a&gt; rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1d58cdb0e451eec0f1d60162473c64e1338c3f" translate="yes" xml:space="preserve">
          <source>The field under validation must be a value preceding or equal to the given date. The dates will be passed into the PHP &lt;code&gt;strtotime&lt;/code&gt; function. In addition, like the &lt;a href=&quot;#rule-after&quot;&gt;&lt;code&gt;after&lt;/code&gt;&lt;/a&gt; rule, the name of another field under validation may be supplied as the value of &lt;code&gt;date&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66889ddff59e4d7a92b46d5fd570d0265cdce3c3" translate="yes" xml:space="preserve">
          <source>The field under validation must be a value preceding the given date. The dates will be passed into the PHP &lt;code&gt;strtotime&lt;/code&gt; function. In addition, like the &lt;a href=&quot;#rule-after&quot;&gt;&lt;code&gt;after&lt;/code&gt;&lt;/a&gt; rule, the name of another field under validation may be supplied as the value of &lt;code&gt;date&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4c23632ddfb48c4ae7d672e654b943b585eefb" translate="yes" xml:space="preserve">
          <source>The field under validation must be able to be cast as a boolean. Accepted input are &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;&quot;1&quot;&lt;/code&gt;, and &lt;code&gt;&quot;0&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758f229cdf6ae4f6ebf9400f847efea1befe7878" translate="yes" xml:space="preserve">
          <source>The field under validation must be an IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648fa16eabef351e4d1c8727553f3ba35cc419a1" translate="yes" xml:space="preserve">
          <source>The field under validation must be an IPv4 address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f967690078d750b4ecc6611fa95cd92a15872a0f" translate="yes" xml:space="preserve">
          <source>The field under validation must be an IPv6 address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f37af8123d653a4f425c62f52864e199b7663315" translate="yes" xml:space="preserve">
          <source>The field under validation must be an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff2f04d6f7184301655c168b3954eb881cc54ae" translate="yes" xml:space="preserve">
          <source>The field under validation must be entirely alpha-numeric characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c33c337a15fb8ca8616283402a92b40470045fa" translate="yes" xml:space="preserve">
          <source>The field under validation must be entirely alphabetic characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7a13e2084e255d32fe9941d5313c75ad0d0c0e" translate="yes" xml:space="preserve">
          <source>The field under validation must be equal to the given date. The dates will be passed into the PHP &lt;code&gt;strtotime&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e76c941f16d17e58a286edfa0a6657251ec1569" translate="yes" xml:space="preserve">
          <source>The field under validation must be formatted as an e-mail address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e4a6e72cc590b92ec83c9441b4c89bb54143bb" translate="yes" xml:space="preserve">
          <source>The field under validation must be greater than or equal to the given &lt;em&gt;field&lt;/em&gt;. The two fields must be of the same type. Strings, numerics, arrays, and files are evaluated using the same conventions as the &lt;code&gt;size&lt;/code&gt; rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb92e5110934700ec9d688ba16e91552fe11226" translate="yes" xml:space="preserve">
          <source>The field under validation must be greater than the given &lt;em&gt;field&lt;/em&gt;. The two fields must be of the same type. Strings, numerics, arrays, and files are evaluated using the same conventions as the &lt;code&gt;size&lt;/code&gt; rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5ee6be17446070de55f3707ac22cd8304df2aa" translate="yes" xml:space="preserve">
          <source>The field under validation must be included in the given list of values. Since this rule often requires you to &lt;code&gt;implode&lt;/code&gt; an array, the &lt;code&gt;Rule::in&lt;/code&gt; method may be used to fluently construct the rule:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60f1b4904cc1f1485aa0e0d6cb6a9aa7dcc1542" translate="yes" xml:space="preserve">
          <source>The field under validation must be less than or equal to a maximum &lt;em&gt;value&lt;/em&gt;. Strings, numerics, arrays, and files are evaluated in the same fashion as the &lt;a href=&quot;#rule-size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt; rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e643f1722481d45cec96103c11e8f401f5e49e2" translate="yes" xml:space="preserve">
          <source>The field under validation must be less than or equal to the given &lt;em&gt;field&lt;/em&gt;. The two fields must be of the same type. Strings, numerics, arrays, and files are evaluated using the same conventions as the &lt;code&gt;size&lt;/code&gt; rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef24df25d0003cc52ddc98bbde019d087c93d308" translate="yes" xml:space="preserve">
          <source>The field under validation must be less than the given &lt;em&gt;field&lt;/em&gt;. The two fields must be of the same type. Strings, numerics, arrays, and files are evaluated using the same conventions as the &lt;code&gt;size&lt;/code&gt; rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b1e38dd6e7be31a049ef293ea14cab50b82839" translate="yes" xml:space="preserve">
          <source>The field under validation must be numeric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7339d27e9678db4f56903ba78c3c048f315e7fe" translate="yes" xml:space="preserve">
          <source>The field under validation must be present and not empty &lt;em&gt;only if&lt;/em&gt; all of the other specified fields are present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc11820ecb72b6571f80d3efb9371ebfaff70ac4" translate="yes" xml:space="preserve">
          <source>The field under validation must be present and not empty &lt;em&gt;only if&lt;/em&gt; any of the other specified fields are present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a768a6560578c58238a83dbec378ef0f79b38eb7" translate="yes" xml:space="preserve">
          <source>The field under validation must be present and not empty &lt;em&gt;only when&lt;/em&gt; all of the other specified fields are not present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ca51152fe764804007b02379cf8f2567ab0643" translate="yes" xml:space="preserve">
          <source>The field under validation must be present and not empty &lt;em&gt;only when&lt;/em&gt; any of the other specified fields are not present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d41eda9e2478e3263701a8217660c9f6c0f6d7" translate="yes" xml:space="preserve">
          <source>The field under validation must be present and not empty if the &lt;em&gt;anotherfield&lt;/em&gt; field is equal to any &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0149e7251ab935b5aca91e2645965b9786eb8e7e" translate="yes" xml:space="preserve">
          <source>The field under validation must be present and not empty unless the &lt;em&gt;anotherfield&lt;/em&gt; field is equal to any &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8daecafd5578a8ee995a51ea7ea74d7def53444c" translate="yes" xml:space="preserve">
          <source>The field under validation must be present in the input data and not empty. A field is considered &quot;empty&quot; if one of the following conditions are true:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0507f3d9b179e0fc22a4218980f2c629059596a" translate="yes" xml:space="preserve">
          <source>The field under validation must be present in the input data but can be empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fefaee0859650816fe83eac29f4b5fb73e355054" translate="yes" xml:space="preserve">
          <source>The field under validation must be unique in a given database table. If the &lt;code&gt;column&lt;/code&gt; option is not specified, the field name will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281f23c6b943acbcca50bfaec26570f4064af2d0" translate="yes" xml:space="preserve">
          <source>The field under validation must exist in &lt;em&gt;anotherfield&lt;/em&gt;'s values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f621c8a64dc374a921ef14d96e784369e8f546" translate="yes" xml:space="preserve">
          <source>The field under validation must exist on a given database table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186c8e4aef9113f14e077c238304976c4a81d8cb" translate="yes" xml:space="preserve">
          <source>The field under validation must have a different value than &lt;em&gt;field&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d572b66cbec044baebcaac5927d04c42920e3637" translate="yes" xml:space="preserve">
          <source>The field under validation must have a length between the given &lt;em&gt;min&lt;/em&gt; and &lt;em&gt;max&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590046be0cdde8beb9c47cb4a23b3e4673677530" translate="yes" xml:space="preserve">
          <source>The field under validation must have a matching field of &lt;code&gt;foo_confirmation&lt;/code&gt;. For example, if the field under validation is &lt;code&gt;password&lt;/code&gt;, a matching &lt;code&gt;password_confirmation&lt;/code&gt; field must be present in the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3431edc9c59a061bc70dde5686895b8e1da6af5" translate="yes" xml:space="preserve">
          <source>The field under validation must have a minimum &lt;em&gt;value&lt;/em&gt;. Strings, numerics, arrays, and files are evaluated in the same fashion as the &lt;a href=&quot;#rule-size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt; rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03f351e7f08912462090b81df9f6e8390325d7c" translate="yes" xml:space="preserve">
          <source>The field under validation must have a size between the given &lt;em&gt;min&lt;/em&gt; and &lt;em&gt;max&lt;/em&gt;. Strings, numerics, arrays, and files are evaluated in the same fashion as the &lt;a href=&quot;#rule-size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt; rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cffa05bcde5ff6a2939e27df9ad4cdef8be704c" translate="yes" xml:space="preserve">
          <source>The field under validation must have a size matching the given &lt;em&gt;value&lt;/em&gt;. For string data, &lt;em&gt;value&lt;/em&gt; corresponds to the number of characters. For numeric data, &lt;em&gt;value&lt;/em&gt; corresponds to a given integer value. For an array, &lt;em&gt;size&lt;/em&gt; corresponds to the &lt;code&gt;count&lt;/code&gt; of the array. For files, &lt;em&gt;size&lt;/em&gt; corresponds to the file size in kilobytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7db3011c7c9daa51c71233a534d2130bc092b0a" translate="yes" xml:space="preserve">
          <source>The field under validation must have a valid A or AAAA record according to the &lt;code&gt;dns_get_record&lt;/code&gt; PHP function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011e71da82cd2e0e85b1ae965f580ab1415b5566" translate="yes" xml:space="preserve">
          <source>The field under validation must match the given &lt;em&gt;format&lt;/em&gt;. You should use &lt;strong&gt;either&lt;/strong&gt;&lt;code&gt;date&lt;/code&gt; or &lt;code&gt;date_format&lt;/code&gt; when validating a field, not both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c10420b2be26cf7074f2bb769c04508e745a0e57" translate="yes" xml:space="preserve">
          <source>The field under validation must match the given regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a847be0c2205c38e1e64e8e0ff8c25f860305c" translate="yes" xml:space="preserve">
          <source>The field under validation must not be empty when it is present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac85d9a4cb01f1654787ad6b9150a409b00a985" translate="yes" xml:space="preserve">
          <source>The field under validation must not be included in the given list of values. The &lt;code&gt;Rule::notIn&lt;/code&gt; method may be used to fluently construct the rule:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f476638a00ac38e816ba1183350c78d86db0ca6b" translate="yes" xml:space="preserve">
          <source>The field under validation must not match the given regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b311376068542cc747898540fa58f4d80b9f7c2f" translate="yes" xml:space="preserve">
          <source>The fields containing markdown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afce30c1365e3dd99cd40ab955c3fcf2b43e357d" translate="yes" xml:space="preserve">
          <source>The file cache directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ed5f5a08bc16a332213a6eaed4d23ba60556ce" translate="yes" xml:space="preserve">
          <source>The file currently being compiled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c673f8cd9e704bd8d5393296993d13ce91793c2" translate="yes" xml:space="preserve">
          <source>The file under validation must be an image (jpeg, png, bmp, gif, or svg)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1862b70482f8dfe806443c3b04f04624c5e042eb" translate="yes" xml:space="preserve">
          <source>The file under validation must be an image meeting the dimension constraints as specified by the rule's parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f157d04b42db6bbd1ec5f370b86b049e389a34" translate="yes" xml:space="preserve">
          <source>The file under validation must have a MIME type corresponding to one of the listed extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4317283d4403119eea7c8e9735be642e936f84ad" translate="yes" xml:space="preserve">
          <source>The file under validation must match one of the given MIME types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016a501813a8ccb15b61fc4795fc0bafffc87117" translate="yes" xml:space="preserve">
          <source>The filesystem configuration file is located at &lt;code&gt;config/filesystems.php&lt;/code&gt;. Within this file you may configure all of your &quot;disks&quot;. Each disk represents a particular storage driver and storage location. Example configurations for each supported driver are included in the configuration file. So, modify the configuration to reflect your storage preferences and credentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91413ed7e1c34b494d35777fb5b15bb639f43cb4" translate="yes" xml:space="preserve">
          <source>The filesystem instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dafa9119d63a180ee2af5f702e756b4e7ab1283e" translate="yes" xml:space="preserve">
          <source>The first argument is the view partial to render for each element in the array or collection. The second argument is the array or collection you wish to iterate over, while the third argument is the variable name that will be assigned to the current iteration within the view. So, for example, if you are iterating over an array of &lt;code&gt;jobs&lt;/code&gt;, typically you will want to access each job as a &lt;code&gt;job&lt;/code&gt; variable within your view partial. The key for the current iteration will be available as the &lt;code&gt;key&lt;/code&gt; variable within your view partial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f5fcf566cd72f103ec4af3c20cb836e9635baf1" translate="yes" xml:space="preserve">
          <source>The first argument of the &lt;code&gt;extend&lt;/code&gt; method is the name of the driver and the second is a Closure that receives the &lt;code&gt;$app&lt;/code&gt; and &lt;code&gt;$config&lt;/code&gt; variables. The resolver Closure must return an instance of &lt;code&gt;League\Flysystem\Filesystem&lt;/code&gt;. The &lt;code&gt;$config&lt;/code&gt; variable contains the values defined in &lt;code&gt;config/filesystems.php&lt;/code&gt; for the specified disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7404bc0526d28f376423d4a266e16394b821bf0" translate="yes" xml:space="preserve">
          <source>The first argument passed to the &lt;code&gt;extend&lt;/code&gt; method is the name of the driver. This will correspond to your &lt;code&gt;driver&lt;/code&gt; option in the &lt;code&gt;config/cache.php&lt;/code&gt; configuration file. The second argument is a Closure that should return an &lt;code&gt;Illuminate\Cache\Repository&lt;/code&gt; instance. The Closure will be passed an &lt;code&gt;$app&lt;/code&gt; instance, which is an instance of the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b507c10d3594a69ed1b9b6b0586b7081f52d30" translate="yes" xml:space="preserve">
          <source>The first argument passed to the &lt;code&gt;hasManyThrough&lt;/code&gt; method is the name of the final model we wish to access, while the second argument is the name of the intermediate model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f8f2d6820ac321be011030c0e2ebb792caac24" translate="yes" xml:space="preserve">
          <source>The first argument passed to the &lt;code&gt;hasOne&lt;/code&gt; method is the name of the related model. Once the relationship is defined, we may retrieve the related record using Eloquent's dynamic properties. Dynamic properties allow you to access relationship methods as if they were properties defined on the model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295ba5b9f408320ff2c2ed22d3b743c61cab68c7" translate="yes" xml:space="preserve">
          <source>The first argument passed to the &lt;code&gt;make&lt;/code&gt; method is the data under validation. The second argument is the validation rules that should be applied to the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7beca6628743ee2608c5ee0825f7da178add7a" translate="yes" xml:space="preserve">
          <source>The first argument passed to the &lt;code&gt;newSubscription&lt;/code&gt; method should be the name of the subscription. If your application only offers a single subscription, you might call this &lt;code&gt;main&lt;/code&gt; or &lt;code&gt;primary&lt;/code&gt;. The second argument is the specific Stripe / Braintree plan the user is subscribing to. This value should correspond to the plan's identifier in Stripe or Braintree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be447c2681d54bff7ab5bf7c71dc7df64d672fd" translate="yes" xml:space="preserve">
          <source>The first argument passed to the &lt;code&gt;select&lt;/code&gt; method is the raw SQL query, while the second argument is any parameter bindings that need to be bound to the query. Typically, these are the values of the &lt;code&gt;where&lt;/code&gt; clause constraints. Parameter binding provides protection against SQL injection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829ed86d3efa71df893c7127b580c182fef14f01" translate="yes" xml:space="preserve">
          <source>The first argument passed to the &lt;code&gt;sometimes&lt;/code&gt; method is the name of the field we are conditionally validating. The second argument is the rules we want to add. If the &lt;code&gt;Closure&lt;/code&gt; passed as the third argument returns &lt;code&gt;true&lt;/code&gt;, the rules will be added. This method makes it a breeze to build complex conditional validations. You may even add conditional validations for several fields at once:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03f6248406324f319078d71bbfeb7d25db59831" translate="yes" xml:space="preserve">
          <source>The first argument passed to the method is the number of records you wish to receive per &quot;chunk&quot;. The Closure passed as the second argument will be called for each chunk that is retrieved from the database. A database query will be executed to retrieve each chunk of records passed to the Closure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4174179de152bf97aac95e1a12bdf5381e9ad13" translate="yes" xml:space="preserve">
          <source>The following dependencies are needed for the listed queue drivers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83201631b2681b296c2829c3f6efb81f065a1e41" translate="yes" xml:space="preserve">
          <source>The following example creates a &lt;code&gt;@datetime($var)&lt;/code&gt; directive which formats a given &lt;code&gt;$var&lt;/code&gt;, which should be an instance of &lt;code&gt;DateTime&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bfda179ea942288181cf23cb6b24129c6458fef" translate="yes" xml:space="preserve">
          <source>The forced URL root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e034f6baa0667bda77bd581072bacd3d7d3f7dea" translate="yes" xml:space="preserve">
          <source>The forced schema for URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf893a971e80b5a251e4ae57eba10f6f9ea3adea" translate="yes" xml:space="preserve">
          <source>The foreign key of the parent model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3901089d030ba6bc9bc4887d3c02119d11e75826" translate="yes" xml:space="preserve">
          <source>The foreign key type for the relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9682f76a361ec117aac1b911b7a4eaa23d338090" translate="yes" xml:space="preserve">
          <source>The form request class also contains an &lt;code&gt;authorize&lt;/code&gt; method. Within this method, you may check if the authenticated user actually has the authority to update a given resource. For example, you may determine if a user actually owns a blog comment they are attempting to update:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="081e4b319a676b1be9658183a32fc3a8252d4d28" translate="yes" xml:space="preserve">
          <source>The gate instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10c3a88309f571beab12f7838cae9baad0d560b" translate="yes" xml:space="preserve">
          <source>The generated class will be placed in the &lt;code&gt;app/Http/Requests&lt;/code&gt; directory. If this directory does not exist, it will be created when you run the &lt;code&gt;make:request&lt;/code&gt; command. Let's add a few validation rules to the &lt;code&gt;rules&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beed63704e946dcb1c9ad59bdf5c968837541423" translate="yes" xml:space="preserve">
          <source>The generated class will implement the &lt;code&gt;Illuminate\Contracts\Queue\ShouldQueue&lt;/code&gt; interface, indicating to Laravel that the job should be pushed onto the queue to run asynchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62616ce0bc5ab312e8ba3f704c76ba4ab2a22e39" translate="yes" xml:space="preserve">
          <source>The given &lt;em&gt;field&lt;/em&gt; must match the field under validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3213f50bf619ef77040ae49b62571c0660ae40b" translate="yes" xml:space="preserve">
          <source>The global from address and name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09fa2cf16a67a29592b1f06a04fc9e261d8eed54" translate="yes" xml:space="preserve">
          <source>The global parameter mapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3cf58f2ef4a3d5b1be344f413260be0aad9e6a" translate="yes" xml:space="preserve">
          <source>The global reply-to address and name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="effb589f97aeda866fc02be9958463cce4087dc5" translate="yes" xml:space="preserve">
          <source>The global to address and name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b217e3c7f79c0a4fa9ddb5a46a1a01a653e6ffe" translate="yes" xml:space="preserve">
          <source>The globally available parameter patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b769ae5ae7b6203657ac06f7b5707ede2963fc" translate="yes" xml:space="preserve">
          <source>The goal of this document is to give you a good, high-level overview of how the Laravel framework works. By getting to know the overall framework better, everything feels less &quot;magical&quot; and you will be more confident building your applications. If you don't understand all of the terms right away, don't lose heart! Just try to get a basic grasp of what is going on, and your knowledge will grow as you explore other sections of the documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c3b03f17d754794244154c3143ee369db4bfef" translate="yes" xml:space="preserve">
          <source>The grammar specific operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a6e9d35e7369ac3bc3af6bdb0c3fd0e94162ad" translate="yes" xml:space="preserve">
          <source>The grammar table prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb6a30e625caa24187fafe1b37f4c84c1adae4c" translate="yes" xml:space="preserve">
          <source>The groupings for the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a948245d9502c8eb059af75ae32b07236ca2718c" translate="yes" xml:space="preserve">
          <source>The guard callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4697eb78b387da0d05ada9cea2376d99c543bd" translate="yes" xml:space="preserve">
          <source>The guard factory instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b120a0850c6e62c5fdb0d654a9bd0283d465aa00" translate="yes" xml:space="preserve">
          <source>The guard name passed to the &lt;code&gt;guard&lt;/code&gt; method should correspond to one of the guards configured in your &lt;code&gt;auth.php&lt;/code&gt; configuration file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464c107c26e54cea71e8b1fbef02e1e0af419b71" translate="yes" xml:space="preserve">
          <source>The guarded attributes on the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34ccfd32f2e4f962bd042259ab4f46cc065b9c7" translate="yes" xml:space="preserve">
          <source>The hasher implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391e7d7c028ba64207e63d7996d54d62b94b3f98" translate="yes" xml:space="preserve">
          <source>The hashing key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6e7b07f82c9400628e797aab4f48ab91268a62" translate="yes" xml:space="preserve">
          <source>The having constraints for the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a317cc86e8ced3dc37fb4e97d8afefa07731e3" translate="yes" xml:space="preserve">
          <source>The human readable description of the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92baa1b0825d52a8aa9b3db9caaa4164c711ebbd" translate="yes" xml:space="preserve">
          <source>The implicit attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908a3c88a9400a81694f05a52edda4c1879ef17d" translate="yes" xml:space="preserve">
          <source>The implicit grant is similar to the authorization code grant; however, the token is returned to the client without exchanging an authorization code. This grant is most commonly used for JavaScript or mobile applications where the client credentials can't be securely stored. To enable the grant, call the &lt;code&gt;enableImplicitGrant&lt;/code&gt; method in your &lt;code&gt;AuthServiceProvider&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fe7b924f1f7049ea685bf91a7b4ec99fbaf525" translate="yes" xml:space="preserve">
          <source>The index of the current loop iteration (starts at 0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b53874bc426c61b5878a09958bdf6b8e16d74b" translate="yes" xml:space="preserve">
          <source>The initial rules provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79cb5c849a17ae6c2c0c1aac9a56d8310334f627" translate="yes" xml:space="preserve">
          <source>The input interface implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e150463f6265878d923123904dc5e5515787cbb7" translate="yes" xml:space="preserve">
          <source>The instance of Doctrine connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323d7ba318084a459cbcd6b9ea16ac5224b87186" translate="yes" xml:space="preserve">
          <source>The intermediate table for the relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cacf73ae7bb28e1a69b339be79502c78e5db47d1" translate="yes" xml:space="preserve">
          <source>The invoice will be charged immediately against the user's credit card. The &lt;code&gt;invoiceFor&lt;/code&gt; method also accepts an array as its third argument, allowing you to pass any options you wish to the underlying Stripe / Braintree charge creation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0422d0cb3495624096dd20066715ad9292cf24f" translate="yes" xml:space="preserve">
          <source>The items contained in the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d72c0dcfc95c90a8a7393337bef2f0e2beb742" translate="yes" xml:space="preserve">
          <source>The iterations remaining in the loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6128c00f1ef6dd14d3a3335865802b245522db34" translate="yes" xml:space="preserve">
          <source>The job handler instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72cf7d97803d2fbe81984fd41a86c952dbb4a1d" translate="yes" xml:space="preserve">
          <source>The job instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee78a704d9df965b1a1d37d68eb07b803469534" translate="yes" xml:space="preserve">
          <source>The job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1fbb55ed3d806d2d1405e8906185a0d5b50cd2" translate="yes" xml:space="preserve">
          <source>The jobs that should run if this job is successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223ce2f7e41c85cd8018d06b070c0c4660d742f2" translate="yes" xml:space="preserve">
          <source>The jobs to be chained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0307ec42cbce3f7a9b9f7618785fb76fa73252fb" translate="yes" xml:space="preserve">
          <source>The key name of the parent model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0bebe24621d4d8bc639a7f370194997fc78743c" translate="yes" xml:space="preserve">
          <source>The key name of the related model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4544b847eac0c93f606d802a1e30568b4a47e1c6" translate="yes" xml:space="preserve">
          <source>The key of the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727c09ff8d4e899fd29d44e3630db9c926e4af48" translate="yes" xml:space="preserve">
          <source>The key to be used for the view error bag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d7137f288c9376bbf985d242e9e918fb7a0f6c" translate="yes" xml:space="preserve">
          <source>The last available page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee4fb64ed5e580bb5d768521c40c2726a91d77d" translate="yes" xml:space="preserve">
          <source>The last value that failed to pass validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4fb8e206ae468a58c0b9446752ac9613fd43a72" translate="yes" xml:space="preserve">
          <source>The list of environments the command should run under.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313b7b7b1a8a900f1f1f934bff755d7022814e3d" translate="yes" xml:space="preserve">
          <source>The list of models classes that should not be affected with touch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62083b8d8705674a46012fe46863e984806b7f65" translate="yes" xml:space="preserve">
          <source>The listener class name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3efb87e0f834b6fe11adcc5ed751a992a993ae1" translate="yes" xml:space="preserve">
          <source>The listener method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea10ad6384efe9cd08f232a266d0898f6d05d3b" translate="yes" xml:space="preserve">
          <source>The loaded manifest array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6da623a2d0e4f495d2f81aff9c0db6fbf582cc" translate="yes" xml:space="preserve">
          <source>The loaded relationships for the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33eac44cef603e9f9995014cccde04f50571dbe" translate="yes" xml:space="preserve">
          <source>The loader implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc2b81cf21095f08d60a5368f8bc14a9e8d2e9d" translate="yes" xml:space="preserve">
          <source>The local key of the parent model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae211a0a74572f371ed1341c4a4b9d9d69388c6" translate="yes" xml:space="preserve">
          <source>The local key on the intermediary model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f942b4e600abdf1332de4a6636171e9da766c8" translate="yes" xml:space="preserve">
          <source>The local key on the relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2038683148b1d5ba40a49c33f3f4ee73449660" translate="yes" xml:space="preserve">
          <source>The locale of the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="324bebb80e5ed3dc46391777467c513f9d65a2a1" translate="yes" xml:space="preserve">
          <source>The locale to be used when sending notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e260a7d4f3fee4bec0549a6f417dc6fd1f9f3593" translate="yes" xml:space="preserve">
          <source>The locale to be used when sending the notification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2195e6a9cb16cf4943a72f81b1093bb882706413" translate="yes" xml:space="preserve">
          <source>The locale used when sending notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5934101a38b532aca0280731a37c5dd1d5955e15" translate="yes" xml:space="preserve">
          <source>The location that output should be sent to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817f4201fc3c3e60127a59d7ba7cd83944a8c4d2" translate="yes" xml:space="preserve">
          <source>The log &quot;level&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e0abdae26dfaa30a6467a542e97e2d6fa8fe26" translate="yes" xml:space="preserve">
          <source>The log context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7983308decdb84ca9b691e3569034887d71cd3" translate="yes" xml:space="preserve">
          <source>The log message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb55d8bc882d8da699d1d48e9283308255b47c9a" translate="yes" xml:space="preserve">
          <source>The logger implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114fec96ba496a639853e23ed4951394f2f994d1" translate="yes" xml:space="preserve">
          <source>The mailable message instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9fac630571f4dec3a25720b416fadc2b717be1d" translate="yes" xml:space="preserve">
          <source>The mailer implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd48f6a3b5e7fab082e83ee7e16f2edaa1db90a7" translate="yes" xml:space="preserve">
          <source>The mailer instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5183b14b7a288c6edee8c82de17086c6964a93ec" translate="yes" xml:space="preserve">
          <source>The majority of your application is housed in the &lt;code&gt;app&lt;/code&gt; directory. By default, this directory is namespaced under &lt;code&gt;App&lt;/code&gt; and is autoloaded by Composer using the &lt;a href=&quot;http://www.php-fig.org/psr/psr-4/&quot;&gt;PSR-4 autoloading standard&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ef8dd2ed04d853cdb1a88e6493264a116d00fd" translate="yes" xml:space="preserve">
          <source>The manifest path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d65451f3d966236b99e1b7b656c3f9b4953b58" translate="yes" xml:space="preserve">
          <source>The many to many relationship methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f21472e2f82ecde6b8ae91f70a26961ddffe31c" translate="yes" xml:space="preserve">
          <source>The many-to-many relationship also provides a &lt;code&gt;toggle&lt;/code&gt; method which &quot;toggles&quot; the attachment status of the given IDs. If the given ID is currently attached, it will be detached. Likewise, if it is currently detached, it will be attached:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7582e12209b3926f58e9e5e30c98e492458c6ef6" translate="yes" xml:space="preserve">
          <source>The mapped collection instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353f115092484058315ae88e3d9a6131a9e9a497" translate="yes" xml:space="preserve">
          <source>The mapping between human readable verbosity levels and Symfony's OutputInterface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14c5f8dbec84f041c585cf7e619b06d0088d53f" translate="yes" xml:space="preserve">
          <source>The markdown implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a958db6d6439b1a2c69f3ced87e254082ea7aaf" translate="yes" xml:space="preserve">
          <source>The maximum amount of RAM the worker may consume.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39cacd1ef99870da51207755bac0a3331ca7ade0" translate="yes" xml:space="preserve">
          <source>The maximum amount of times a job may be attempted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0633df1f77c92380885aa35bf5fe555db5f0412" translate="yes" xml:space="preserve">
          <source>The maximum number of entities that can hold the lock at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e7193edfc58b5536979bb056bffa2b23892ae5" translate="yes" xml:space="preserve">
          <source>The maximum number of locks that can obtained per time window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99984ef90abdb57c8db5a61bf5d620af754788ea" translate="yes" xml:space="preserve">
          <source>The maximum number of records to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecaa5b6ab2dfab1f81cb4862b415e5c19fc0a917" translate="yes" xml:space="preserve">
          <source>The maximum number of seconds a child worker may run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa957542b2e71c53c68ebf159e34a6e51ca6b181" translate="yes" xml:space="preserve">
          <source>The maximum number of seconds to block for a job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6af1eba02cca87e2c0e33c501f2f963943ff15a" translate="yes" xml:space="preserve">
          <source>The maximum number of union records to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993b40aedcd92e8a06e247bf1d625f9abd57ee28" translate="yes" xml:space="preserve">
          <source>The message bag instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84220a6ee2a1dab924c4b7c7a369ce567d9c2e5d" translate="yes" xml:space="preserve">
          <source>The message content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d6bedcab67d2611ea8c5f29eb515bdf1d61133" translate="yes" xml:space="preserve">
          <source>The message data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3ccb7d3c1da1ef7798dc43323aa40eeab9eecb" translate="yes" xml:space="preserve">
          <source>The message selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d98a7b539a28e74b8d0159b6b8aca81512d8658" translate="yes" xml:space="preserve">
          <source>The message type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f231a2ddcc9b5a9c4660c4a18b25391e8f3f0672" translate="yes" xml:space="preserve">
          <source>The message's attachments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a63e25de15485f3a8b6fce2d0daf0dd888bdef" translate="yes" xml:space="preserve">
          <source>The method being proxied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9014c4fb807da0dac539db1b64d8c7a5a3acb534" translate="yes" xml:space="preserve">
          <source>The method signature for the HTTP kernel's &lt;code&gt;handle&lt;/code&gt; method is quite simple: receive a &lt;code&gt;Request&lt;/code&gt; and return a &lt;code&gt;Response&lt;/code&gt;. Think of the Kernel as being a big black box that represents your entire application. Feed it HTTP requests and it will return HTTP responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf87b60ab3aef41e6c6fe0eaeb5ea3c61a7f3c4" translate="yes" xml:space="preserve">
          <source>The method to call on each pipe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a79bc89bb7c8c2575cea8bf7dad1f342bf0ebda" translate="yes" xml:space="preserve">
          <source>The methods that can be proxied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d9fa140ad11444a9bece191d698fc22a59bc18c" translate="yes" xml:space="preserve">
          <source>The methods that should be returned from query builder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b681e83c549a5bee3caf1cc6242f8c9e1ae7363" translate="yes" xml:space="preserve">
          <source>The methods to dynamically pass through to the router.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18cd93cc2dd9ae70d055c1e6b62b998412411d9" translate="yes" xml:space="preserve">
          <source>The middleware options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96511fb7d60117b95e07db49cb4f44f5f1a4dac4" translate="yes" xml:space="preserve">
          <source>The middleware registered on the controller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef88eca4df2866c7ad8212b4912e1ba7031ae6d" translate="yes" xml:space="preserve">
          <source>The migration creator instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a44edac08e101e00a3fc8acde5577ef185cdd57" translate="yes" xml:space="preserve">
          <source>The migration repository implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f82b4981f2e225c056f3142564ac36c675e759" translate="yes" xml:space="preserve">
          <source>The migrator instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2de1c1cf4767d6612c422dd8e05597a4d842cfa" translate="yes" xml:space="preserve">
          <source>The model after creating callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06fd143fac396758fdbe0dae97868d04c6156ed6" translate="yes" xml:space="preserve">
          <source>The model after making callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82fccf4b5a63c4fad7bedc6a977cf56c49a9bb6" translate="yes" xml:space="preserve">
          <source>The model attribute's original state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688e65b76d79fd2eaf9dc4e0ebbfa96f214d389d" translate="yes" xml:space="preserve">
          <source>The model being built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99fa9a45733217accfe8cb6d4ca89b6cd79e118" translate="yes" xml:space="preserve">
          <source>The model being queried.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae3e969a6cb12235882723b97bd75e49de86c50" translate="yes" xml:space="preserve">
          <source>The model definitions in the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c60f1f30ecebb9f72a4b37ff91a2a5242237eb" translate="yes" xml:space="preserve">
          <source>The model states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aeef7ee830525798b65130b5fab876c14db75b2" translate="yes" xml:space="preserve">
          <source>The model's attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a7493003442141dda079ef8c9cc094b73f7dfce" translate="yes" xml:space="preserve">
          <source>The models whose relations are being eager loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9153bf9d16b8863be6d39ab950b98bde9eec71" translate="yes" xml:space="preserve">
          <source>The most basic Laravel routes accept a URI and a &lt;code&gt;Closure&lt;/code&gt;, providing a very simple and expressive method of defining routes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89764178243a4477f7fda0eeb32a6b63d8126285" translate="yes" xml:space="preserve">
          <source>The mutator will receive the value that is being set on the attribute, allowing you to manipulate the value and set the manipulated value on the Eloquent model's internal &lt;code&gt;$attributes&lt;/code&gt; property. So, for example, if we attempt to set the &lt;code&gt;first_name&lt;/code&gt; attribute to &lt;code&gt;Sally&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7552d531bfd89ff28d38ad8df7a78b87e883a15b" translate="yes" xml:space="preserve">
          <source>The name and signature of the console command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498cb4a4aab85af2c4c487211c03a8ceab99f6ae" translate="yes" xml:space="preserve">
          <source>The name of the &quot;other key&quot; column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc583fd7420cdf2eadc907214938aba5d5f4cd5c" translate="yes" xml:space="preserve">
          <source>The name of the Guard. Typically &quot;session&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27e51bad7676e2093d6ec9cfe1f4111c0457b27" translate="yes" xml:space="preserve">
          <source>The name of the ID column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e46021a603fa412de189b8c2dfac895cc2e5125b" translate="yes" xml:space="preserve">
          <source>The name of the accessor to use for the &quot;pivot&quot; relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae657b0302a36cba96611d5538ab7b09b797c9b" translate="yes" xml:space="preserve">
          <source>The name of the affected Eloquent model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa57d077bc6c6fc7452848e32946a30db3519de" translate="yes" xml:space="preserve">
          <source>The name of the cache table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc581b28360ad7e686c159ce66da558b68e3cc4b" translate="yes" xml:space="preserve">
          <source>The name of the connected database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b947920b066d4fc97e95b3dc0d81eefa7fde77" translate="yes" xml:space="preserve">
          <source>The name of the connection the chain should be sent to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7cfa6fdc4fccc82f46a8d85d988dbbb19699fde" translate="yes" xml:space="preserve">
          <source>The name of the connection the job belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f214d21b531287200c68b6a0d852432f137f3ef2" translate="yes" xml:space="preserve">
          <source>The name of the connection the job should be sent to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f520507624fc6bf4b0c6d91f15ab1c8cb30cd7d9" translate="yes" xml:space="preserve">
          <source>The name of the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e33b9f4acbeb63038c36a3d5c7c831603ba2601" translate="yes" xml:space="preserve">
          <source>The name of the database connection to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874c47a64cad4a796b48b528b9a54bf1455cbc79" translate="yes" xml:space="preserve">
          <source>The name of the default connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8294b4302e7c1e53a4c64ee57a10ecd21061d1cf" translate="yes" xml:space="preserve">
          <source>The name of the default driver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf49c0caa435b6a1b46819c4b48074e51a811af" translate="yes" xml:space="preserve">
          <source>The name of the default queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7786bb5f50f51747b492acf1531ef0392d083ed7" translate="yes" xml:space="preserve">
          <source>The name of the default tube.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb4ad0df6115c3939e5bdf6d394fabaf0b4e4f2" translate="yes" xml:space="preserve">
          <source>The name of the error bag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264313247d929c3123a9e7fe3982f9c4d6734ea2" translate="yes" xml:space="preserve">
          <source>The name of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b7750286ee583a4d18bff182d4b34229abb2ae" translate="yes" xml:space="preserve">
          <source>The name of the foreign key column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae516b12e58feb17ba3b4eca608a885082d8e8c" translate="yes" xml:space="preserve">
          <source>The name of the last section that was started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51230789c60521a29be0ee707addae50323ce49" translate="yes" xml:space="preserve">
          <source>The name of the limiter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa51d17fcc8ac87b4193f1488845426da62dad0" translate="yes" xml:space="preserve">
          <source>The name of the lock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e00432d8c482f2a6b145ab56ee112aba4f0b2c4" translate="yes" xml:space="preserve">
          <source>The name of the migration table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ccecf6045d404ce6c12b195b54c31f34813408" translate="yes" xml:space="preserve">
          <source>The name of the model being built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16500564e12ce6277b1623fe391c263ccbc345d4" translate="yes" xml:space="preserve">
          <source>The name of the query string item from the request containing the API token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0290c415792dc170ff325efbed456e958cd0f4" translate="yes" xml:space="preserve">
          <source>The name of the queue the chain should be sent to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858b993eaee550b6e97dc87e2305bb1f52cdf045" translate="yes" xml:space="preserve">
          <source>The name of the queue the job belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c415b8e6f6dc380606a6690ee74b1a1290e6471" translate="yes" xml:space="preserve">
          <source>The name of the queue the job should be sent to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d8a75368562a9284d1d2552bdc24e16c3ea0eb" translate="yes" xml:space="preserve">
          <source>The name of the relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8edaeecdb62ef346d86348b31b5660b04307e2ce" translate="yes" xml:space="preserve">
          <source>The name of the relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5594fd9a7a8d236077457b26bb684f84e9b0cbf" translate="yes" xml:space="preserve">
          <source>The name of the resource being collected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68571b872fa7b8f8079fd1ba260bb804a973feb2" translate="yes" xml:space="preserve">
          <source>The name of the rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13f277af2024bbbd9963295fc867933de6c3e79" translate="yes" xml:space="preserve">
          <source>The name of the session table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88369be570a7e1c5f636d11a5a27cabb5b49ba5" translate="yes" xml:space="preserve">
          <source>The name of the token &quot;column&quot; in persistent storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684ebd59c4aa877a1e3bc4c8244a896fe309e3cc" translate="yes" xml:space="preserve">
          <source>The name of the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f7cc889eba42ec254d46d4fbc7d1cfb76aec5f" translate="yes" xml:space="preserve">
          <source>The named parameter defaults.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b4ae6419b96dc716b3a538ffb773d351b882ae" translate="yes" xml:space="preserve">
          <source>The names of the cookies that should not be encrypted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3adbb3bfdd03d176b31db2576376109d815b069" translate="yes" xml:space="preserve">
          <source>The names of the loaded service providers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbad307b0f441ae4620ea5e4ae033c9725643b5f" translate="yes" xml:space="preserve">
          <source>The names of the slots being rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5608155a256581e586060c8ad5ee5fac176320b2" translate="yes" xml:space="preserve">
          <source>The namespace for all real-time facades.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c04c66ce4e736c82d7330c14829dfb5ab699be" translate="yes" xml:space="preserve">
          <source>The namespace to file path hints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee73f5faf521ee383b00d089b5ab059163c090be" translate="yes" xml:space="preserve">
          <source>The near key on the relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe42927174eb02dcb2f93e0bb3c739c55feb30b7" translate="yes" xml:space="preserve">
          <source>The nesting level of the current loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123e82b5a0c075b1e3e27e6db6dca4cced167458" translate="yes" xml:space="preserve">
          <source>The new factory will be placed in your &lt;code&gt;database/factories&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f60cee89830d88380be4187b15e1b2b1fbf189ad" translate="yes" xml:space="preserve">
          <source>The new locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764b99c31c8beccd3e228ec1573d87d300956b5b" translate="yes" xml:space="preserve">
          <source>The new migration will be placed in your &lt;code&gt;database/migrations&lt;/code&gt; directory. Each migration file name contains a timestamp which allows Laravel to determine the order of the migrations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27801c8a367b58439bae2456128d9e40fc3da2b9" translate="yes" xml:space="preserve">
          <source>The next thing you should do after installing Laravel is set your application key to a random string. If you installed Laravel via Composer or the Laravel installer, this key has already been set for you by the &lt;code&gt;php artisan key:generate&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ccda4b455f3e997b65865dd2581c4085d5aca8b" translate="yes" xml:space="preserve">
          <source>The notifiable entities that should receive the notification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c454a1eec609a836f513501ff9678b7c92a472c2" translate="yes" xml:space="preserve">
          <source>The notifiable entity who received the notification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1557bd26e7b0601cf81c80b242d3987078a1bf8f" translate="yes" xml:space="preserve">
          <source>The notification data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53c1366baf5fafeeefad84f8dcb933fb651a54d" translate="yes" xml:space="preserve">
          <source>The notification instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a77bff0364898016ad86a31dfa0d1a1069e07d" translate="yes" xml:space="preserve">
          <source>The notification manager instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad048cdbe8a10a82a11eafc1c3f016d6ad24798" translate="yes" xml:space="preserve">
          <source>The notification to be sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1679d67e9d5406ad3f8f7544d93dc78f29094b" translate="yes" xml:space="preserve">
          <source>The notification's greeting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5fa61f889c4dc2eeffb97f1664ce87d846beab" translate="yes" xml:space="preserve">
          <source>The notification's salutation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bee3bcf04e80485f28e23df51231b41ddef81b3" translate="yes" xml:space="preserve">
          <source>The number of active rendering operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e24a7e2b0246051da0a32b010bf69ffe5e3a7b" translate="yes" xml:space="preserve">
          <source>The number of active transactions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738db0ff268de4bb23ed47f16463738565566757" translate="yes" xml:space="preserve">
          <source>The number of items to be shown per page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9caaf174c5d5dd85bb435efd737773dbc04ee07" translate="yes" xml:space="preserve">
          <source>The number of links to display on each side of current page link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138ce44fb6904a19feb9f1c77f4157e9c42f65e6" translate="yes" xml:space="preserve">
          <source>The number of milliseconds it took to execute the command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8a405cc3afde43f4363a17ca8d61738a0b2718" translate="yes" xml:space="preserve">
          <source>The number of milliseconds it took to execute the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2e51621668e3b6fb44ae89829fea5185b03cdf" translate="yes" xml:space="preserve">
          <source>The number of minutes the key should be valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73a7b20c59aa78b37897ae00dc2a477851430d0" translate="yes" xml:space="preserve">
          <source>The number of minutes the session should be valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4dc7dc29d255f3b9f9ff5a0bc82d5790ff1b223" translate="yes" xml:space="preserve">
          <source>The number of minutes to store the data in the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5e1fbf9aa83cbc491a1ab597d6340c9c058542" translate="yes" xml:space="preserve">
          <source>The number of models to build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398f2515815835039783a4cf11ef68f39f256b2a" translate="yes" xml:space="preserve">
          <source>The number of models to return for pagination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0932abab8129293c311af32f24cd194b506206" translate="yes" xml:space="preserve">
          <source>The number of records to skip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e706b5e9840cda93dea8d57b55d174003f57d2a" translate="yes" xml:space="preserve">
          <source>The number of remaining slots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c749af1ec90417e8dafd10f58849dd65938e33" translate="yes" xml:space="preserve">
          <source>The number of seconds a slot should be maintained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea19a6da3e742485c83090c17e642921f74e644d" translate="yes" xml:space="preserve">
          <source>The number of seconds a token should last.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5405721c1804bb81e140b16f221f693a8711d9a4" translate="yes" xml:space="preserve">
          <source>The number of seconds before a released job will be available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769a2dca8304dfded526c6ba24d72eaedc6c85a3" translate="yes" xml:space="preserve">
          <source>The number of seconds before the job should be made available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c02455b97b035af62fccbe5ab60841b9874c4e" translate="yes" xml:space="preserve">
          <source>The number of seconds the job can run before timing out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e114e33c85bb7a26cf14653c83bd078bd7ffb364" translate="yes" xml:space="preserve">
          <source>The number of seconds the lock should be maintained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad289a7c911cb1819ffce7054da9efa8c67c91fd" translate="yes" xml:space="preserve">
          <source>The number of seconds to maintain the lock until it is automatically released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20689d16a77ebe9220d15ada6af4f9aa5f8c052a" translate="yes" xml:space="preserve">
          <source>The number of seconds to wait before retrying.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564bc5bc889ee4ed61559613aff2e393e1e305fa" translate="yes" xml:space="preserve">
          <source>The number of seconds to wait in between polling the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ce555e17b13ebba28bf48a95c8baa81213ad9c" translate="yes" xml:space="preserve">
          <source>The number of times the job may be attempted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4905e81c06ccc0abf035c42f1ded6c37b475723a" translate="yes" xml:space="preserve">
          <source>The number of union records to skip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e99177d1b739332a6a4afcf3063aae30c70b0b" translate="yes" xml:space="preserve">
          <source>The numeric related validation rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aafb5a5fb6c12013187a9c8b1cc702d45ceece7" translate="yes" xml:space="preserve">
          <source>The object being passed through the pipeline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5540e3f6a0c52916bed4f73516e284b39a02394e" translate="yes" xml:space="preserve">
          <source>The only queue connection which does not contain a &lt;code&gt;retry_after&lt;/code&gt; value is Amazon SQS. SQS will retry the job based on the &lt;a href=&quot;https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AboutVT.html&quot;&gt;Default Visibility Timeout&lt;/a&gt; which is managed within the AWS console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637106a5510394f584fe55f13c997014a0ef7791" translate="yes" xml:space="preserve">
          <source>The only remaining step is to install Laravel Mix. Within a fresh installation of Laravel, you'll find a &lt;code&gt;package.json&lt;/code&gt; file in the root of your directory structure. The default &lt;code&gt;package.json&lt;/code&gt; file includes everything you need to get started. Think of this like your &lt;code&gt;composer.json&lt;/code&gt; file, except it defines Node dependencies instead of PHP. You may install the dependencies it references by running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f7a53f619a187742d496d1a58c909e850db77f" translate="yes" xml:space="preserve">
          <source>The orderings for the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc743c3df3486e9f04ee69888a47e36f146e105" translate="yes" xml:space="preserve">
          <source>The orderings for the union query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e8668d4d24010d5c689664553e68adb4faa652" translate="yes" xml:space="preserve">
          <source>The original content of the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7acbf49abea49d063cb1b4febfb3de985b7c9f25" translate="yes" xml:space="preserve">
          <source>The original data passed to the component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a41c64c4e559a6a05268a90dd0d99420f3ecae3" translate="yes" xml:space="preserve">
          <source>The original event dispatcher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9ca2287a55e60d15085d83fb482bb69a6bdd5b" translate="yes" xml:space="preserve">
          <source>The original exception handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4109eada795c34376a36892b72c8e7cd72b8c50d" translate="yes" xml:space="preserve">
          <source>The output from the previous command.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
