<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="en" datatype="htmlbody" original="apache_http_server">
    <body>
      <group id="apache_http_server">
        <trans-unit id="946dae953d57b3f4601b4d94875984e7fd96c374" translate="yes" xml:space="preserve">
          <source>Sending error pages without a specified character set may allow a cross-site-scripting attack for existing browsers (MSIE) which do not follow the HTTP/1.1 specification and attempt to &quot;guess&quot; the character set from the content. Such browsers can be easily fooled into using the UTF-7 character set, and UTF-7 content from input data (such as the request-URI) will not be escaped by the usual escaping mechanisms designed to prevent cross-site-scripting attacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f875081c72c0849321aecf5cc55335f046feb4" translate="yes" xml:space="preserve">
          <source>Sending the &lt;code&gt;HUP&lt;/code&gt; or &lt;code&gt;restart&lt;/code&gt; signal to the parent causes it to kill off its children like in &lt;code&gt;TERM&lt;/code&gt;, but the parent doesn't exit. It re-reads its configuration files, and re-opens any log files. Then it spawns a new set of children and continues serving hits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4e2076a4476a1f271519a4b1d465a4cfb7b788" translate="yes" xml:space="preserve">
          <source>Sending the &lt;code&gt;TERM&lt;/code&gt; or &lt;code&gt;stop&lt;/code&gt; signal to the parent causes it to immediately attempt to kill off all of its children. It may take it several seconds to complete killing off its children. Then the parent itself exits. Any requests in progress are terminated, and no further requests are served.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8658957255347f5fb52a682307d7435b65858653" translate="yes" xml:space="preserve">
          <source>Sends a status code of &lt;code&gt;204 No Content&lt;/code&gt;, telling the client to keep the same page displayed. Valid for all but &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5737d86110bbe2a400868c7faedb102fae1b63c1" translate="yes" xml:space="preserve">
          <source>Sends an external permanent redirect asking the client to fetch a different URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911cc79259d0bd56b62ed04780415f1bfe69ea5b" translate="yes" xml:space="preserve">
          <source>Sends an external redirect asking the client to fetch a different URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0db3488fbddeba309c7c9fc1d8aec2a053b5a38" translate="yes" xml:space="preserve">
          <source>Sends an external redirect based on a regular expression match of the current URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452884d1a564a58ae4837e68b4b9e6496c2ac19b" translate="yes" xml:space="preserve">
          <source>Sends an external temporary redirect asking the client to fetch a different URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b5fbf3acd2165ddbf8cdadf40db3a4ac5f149d7" translate="yes" xml:space="preserve">
          <source>Sends files that contain their own HTTP headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5eaa6c1e11f6069da6752cfad15dbcdd24d6f4" translate="yes" xml:space="preserve">
          <source>Sends messages with server status to frontend proxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ffe62ecc45dd6ce8e281b453da301af5d5144f5" translate="yes" xml:space="preserve">
          <source>Separately from the &lt;var&gt;condition&lt;/var&gt; parameter described above, you can limit an action based on HTTP status codes for e.g. proxied or CGI requests. See the example that uses %{REQUEST_STATUS} in the section above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6877e2890cf91231e2d23782ef57f28a40671101" translate="yes" xml:space="preserve">
          <source>Serial number and issuer of the certificate. The format matches that of the CertificateExactAssertion in RFC4523</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775d7ac05e6fa8fe9011e38b2eb3daf88d99b624" translate="yes" xml:space="preserve">
          <source>Serialization will lower performance, but gives more backward compatibility in case custom filters/hooks need it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd626144c2569ba62548c2a474c3e3b9205b58cd" translate="yes" xml:space="preserve">
          <source>Serialize Request/Response Processing Switch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87ce8496b10433f6888ea5f3264f13535f560c0" translate="yes" xml:space="preserve">
          <source>Serve stale content in place of 5xx responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533619109b207b73cc4c3d4075b3f747e5063cbc" translate="yes" xml:space="preserve">
          <source>Server Hostname</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569eaacd28158e048c57baa1ae8f017291e90e81" translate="yes" xml:space="preserve">
          <source>Server Identification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751ba215aa0c3603b8d17d5cc884e893526608c2" translate="yes" xml:space="preserve">
          <source>Server PEM-encoded X.509 certificate data file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8b573d3f335fcf136f451e0abbb1efe351b5660" translate="yes" xml:space="preserve">
          <source>Server PEM-encoded private key file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5f43a30503e4ed9ae96da8d80c8e3d2ec0a074" translate="yes" xml:space="preserve">
          <source>Server Port</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ee7ae65085322c05dfb74b02b17d2977308fb7" translate="yes" xml:space="preserve">
          <source>Server Push</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c5480c9024cdbf44fcc86938429f0bf5cac5cb" translate="yes" xml:space="preserve">
          <source>Server Side Included Documents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c729b6f6b7d3001eee59617d1c89af071299aec" translate="yes" xml:space="preserve">
          <source>Server Side Includes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2d00af1f7d3104402193d59b07863fcfbb0d75" translate="yes" xml:space="preserve">
          <source>Server Side Includes (SSI)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d063adab0c624f7f3ff95bc561069c2ade22086d" translate="yes" xml:space="preserve">
          <source>Server Side Includes (SSI) present a server administrator with several potential security risks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b429924b39071a1ce8f8d54de75065f296d42c77" translate="yes" xml:space="preserve">
          <source>Server Side Includes are implemented by the &lt;code&gt;INCLUDES&lt;/code&gt;&lt;a href=&quot;../filter&quot;&gt;filter&lt;/a&gt;. If documents containing server-side include directives are given the extension .shtml, the following directives will make Apache parse them and assign the resulting document the mime type of &lt;code&gt;text/html&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b68a4fc75f98ee2acc119b497943fd34f192d3" translate="yes" xml:space="preserve">
          <source>Server Side Includes example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52a4c162603996a8d16c0eb075646269caaec78" translate="yes" xml:space="preserve">
          <source>Server Software</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64614955c19ea47f29d3c32e8b4809fd318ba39" translate="yes" xml:space="preserve">
          <source>Server and Supporting Programs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65235dc8fb2ca4e3c93528d419c9e93c5915fecf" translate="yes" xml:space="preserve">
          <source>Server certificate's subjectAltName extension entries of type dNSName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39f2bdc66a0eff45d894e17d8728c4564c9d07c" translate="yes" xml:space="preserve">
          <source>Server certificate's subjectAltName extension entries of type otherName, SRVName form (OID 1.3.6.1.5.5.7.8.7, RFC 4985)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c83a8f1d7a4a2e452fb3705165457bc44c04ff" translate="yes" xml:space="preserve">
          <source>Server certificate's subjectAltName extension entries of type rfc822Name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187220e4670af68a9adf0ecd6f9846d69307520b" translate="yes" xml:space="preserve">
          <source>Server parsed files are always assumed to be in native (&lt;em&gt;i.e.&lt;/em&gt;, EBCDIC) format as used on the machine, and are converted after processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7fc446f1f5b6b81a39d3399271f22045f221fe" translate="yes" xml:space="preserve">
          <source>Server pushes are detected by inspecting the &lt;code&gt;Link&lt;/code&gt; headers of responses (see https://tools.ietf.org/html/rfc5988 for the specification). When a link thus specified has the &lt;code&gt;rel=preload&lt;/code&gt; attribute, it is treated as a resource to be pushed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33390f17bd34be408cb180a660b1249f63175be0" translate="yes" xml:space="preserve">
          <source>Server sends (&lt;em&gt;e.g.&lt;/em&gt;): &lt;code&gt;Server: Apache/2.4.2 (Unix) PHP/4.2.2 MyMod/1.2&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9875cc005f9d42b380248eaf17a55222d5f6ba4" translate="yes" xml:space="preserve">
          <source>Server sends (&lt;em&gt;e.g.&lt;/em&gt;): &lt;code&gt;Server: Apache/2.4.2 (Unix)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aee522ca99c166450cfe3d8e9b79fbe3d71e50b" translate="yes" xml:space="preserve">
          <source>Server sends (&lt;em&gt;e.g.&lt;/em&gt;): &lt;code&gt;Server: Apache/2.4.2&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68993fee3fffabdb5fb0e72df633ccb941e7de6f" translate="yes" xml:space="preserve">
          <source>Server sends (&lt;em&gt;e.g.&lt;/em&gt;): &lt;code&gt;Server: Apache/2.4&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fabd0071e9c5255f9ac8a1b734fb3ac8fafc974" translate="yes" xml:space="preserve">
          <source>Server sends (&lt;em&gt;e.g.&lt;/em&gt;): &lt;code&gt;Server: Apache/2&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5b939a4756527dac40b1479c3b0539fb6186a4" translate="yes" xml:space="preserve">
          <source>Server sends (&lt;em&gt;e.g.&lt;/em&gt;): &lt;code&gt;Server: Apache&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06fc99ef0849eff48461313756588c8792fba530" translate="yes" xml:space="preserve">
          <source>Server side Includes (SSI)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3526f348fc5a0c1882fcd4813d568bad3a281758" translate="yes" xml:space="preserve">
          <source>Server-Wide Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a38da035d8e8892dc94f40d16836fb87aac3a3de" translate="yes" xml:space="preserve">
          <source>Server-parsed (SSI) documents processed by &lt;code&gt;&lt;a href=&quot;mod/mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;INCLUDES&lt;/code&gt; filter can print environment variables using the &lt;code&gt;echo&lt;/code&gt; element, and can use environment variables in flow control elements to makes parts of a page conditional on characteristics of a request. Apache also provides SSI pages with the standard CGI environment variables as discussed above. For more details, see the &lt;a href=&quot;howto/ssi&quot;&gt;SSI tutorial&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7945a9403d51fc31f532d2674800539771415a8" translate="yes" xml:space="preserve">
          <source>Server-parsed html documents (Server Side Includes)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784f3dab4d60745ec7441a1ee7f726d4b60192b9" translate="yes" xml:space="preserve">
          <source>Server-side imagemap processing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe43a347fb8aa614d647e8505ee8deed6a58f51" translate="yes" xml:space="preserve">
          <source>Server-side includes are permitted, but the &lt;code&gt;#exec cmd&lt;/code&gt; and &lt;code&gt;#exec cgi&lt;/code&gt; are disabled. It is still possible to &lt;code&gt;#include virtual&lt;/code&gt; CGI scripts from &lt;code&gt;&lt;a href=&quot;mod_alias#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt;ed directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a603c24ccb3f4bfa02d5fb65a30f5dc2154c82f" translate="yes" xml:space="preserve">
          <source>Server-side includes provide a means to add dynamic content to existing HTML documents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e852ff9de2d0f638f9dbe3bb8e9ce2a895e87d7d" translate="yes" xml:space="preserve">
          <source>Server-side includes provided by &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; are permitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e95a361392cbbd0c3b1f1a74a26ea00722e9b4" translate="yes" xml:space="preserve">
          <source>ServerAdmin Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf8118a8799bcff58c0e47b892758ac34d09acc" translate="yes" xml:space="preserve">
          <source>ServerAlias Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50a0bd85f96333a1188b7da51758ca9588c1743" translate="yes" xml:space="preserve">
          <source>ServerLimit Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7baca8173c23af4b1d5a6acebbe6a96898d4d092" translate="yes" xml:space="preserve">
          <source>ServerName Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41754d32a9f105fdc6ab316a79f8b995de1d67f9" translate="yes" xml:space="preserve">
          <source>ServerPath Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd11c28812c6f04dc69cb7c5fc6f9d91d058731" translate="yes" xml:space="preserve">
          <source>ServerRoot Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b56f37af27da6f1eb5f915192a77dac3aa0404" translate="yes" xml:space="preserve">
          <source>ServerSignature</source>
          <target state="translated">ServerSignature</target>
        </trans-unit>
        <trans-unit id="ade3f1f8a68a13b2f5fc20cc8f7d341bf07f566a" translate="yes" xml:space="preserve">
          <source>ServerSignature Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e130f6f677166606e9210e5a7a89d0ea4b975b5" translate="yes" xml:space="preserve">
          <source>ServerTokens Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e6d23f44f6312d0a3e00a3eef7abd16d97c8ab" translate="yes" xml:space="preserve">
          <source>Serving directly from system memory is universally the fastest method of serving content. Reading files from a disk controller or, even worse, from a remote network is orders of magnitude slower. Disk controllers usually involve physical processes, and network access is limited by your available bandwidth. Memory access on the other hand can take mere nano-seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d35ee455a1688cfc06f48849c3648737fa80b219" translate="yes" xml:space="preserve">
          <source>Serving pre-compressed content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc4871fa7bf9f678530077ab1af1972963999a9" translate="yes" xml:space="preserve">
          <source>Serving the same content on different IP addresses (such as an internal and external address).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74df77f1e0b6107af1f1584886f5fdc847cadff5" translate="yes" xml:space="preserve">
          <source>Servlet-Engine</source>
          <target state="translated">Servlet-Engine</target>
        </trans-unit>
        <trans-unit id="f7f1997c6cd1aa051279675742272a956e7db628" translate="yes" xml:space="preserve">
          <source>Session</source>
          <target state="translated">Session</target>
        </trans-unit>
        <trans-unit id="eea2b6852bc60f4f162c42f99ba89e259d3650aa" translate="yes" xml:space="preserve">
          <source>Session Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d88cf956b9ad87e8594119cf2607ae1b9174cc" translate="yes" xml:space="preserve">
          <source>Session Privacy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc63e6c14e8abb303b1e89576d6a37d43d822fb" translate="yes" xml:space="preserve">
          <source>Session Support for Authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989c8f798cf436c5c100fefda89fe3c246c79225" translate="yes" xml:space="preserve">
          <source>Session encryption support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567b28676d3b1082346c70c1aa283c132be8ec53" translate="yes" xml:space="preserve">
          <source>Session support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0939f556f71b5a28640732fc9d9eb7e8b273f581" translate="yes" xml:space="preserve">
          <source>SessionCookieName Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1f3ed91c2f7cfd92ad31a66cbd516214c2e986" translate="yes" xml:space="preserve">
          <source>SessionCookieName2 Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b49118d828165c1b7c6e910ec985eb4f2481e05" translate="yes" xml:space="preserve">
          <source>SessionCookieRemove Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7549501eaaff312f78fac31279c1b6a5e8adcbb1" translate="yes" xml:space="preserve">
          <source>SessionCryptoCipher Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9344270d90fee9165e4242d7122f5f4fc890fb2a" translate="yes" xml:space="preserve">
          <source>SessionCryptoDriver Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89fb764f81c7e027131d3b30c5b03fe7b12dce13" translate="yes" xml:space="preserve">
          <source>SessionCryptoPassphrase Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1380f69c798b0f2abbd54d0e5bbb13108d60e1" translate="yes" xml:space="preserve">
          <source>SessionCryptoPassphraseFile Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5fe37ff3df47fd592dc80a32523956a6ae23dae" translate="yes" xml:space="preserve">
          <source>SessionDBDCookieName Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="014a29a064110b0730550b02356aae03f5a95834" translate="yes" xml:space="preserve">
          <source>SessionDBDCookieName2 Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad3870f904d2c08f5bf63c16770355d001ce0cc" translate="yes" xml:space="preserve">
          <source>SessionDBDCookieRemove Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f13ed35a4eae83c9d85d4f059d37c4a48c1fe3d" translate="yes" xml:space="preserve">
          <source>SessionDBDDeleteLabel Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc6425b4f48ea534bf0ed792f4e54709d9c9ca2" translate="yes" xml:space="preserve">
          <source>SessionDBDInsertLabel Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ed7be8c6bfa9b4e3d604dfb6bdb7c94edb966b" translate="yes" xml:space="preserve">
          <source>SessionDBDPerUser Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5111936bd3fd6a5fe0930b9a94dfed9fb7560d" translate="yes" xml:space="preserve">
          <source>SessionDBDSelectLabel Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f625f892534270edba9a7eac6cf631144f211cc" translate="yes" xml:space="preserve">
          <source>SessionDBDUpdateLabel Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf5c56c75df79bac11a70f57c2bc48dcd7845bf" translate="yes" xml:space="preserve">
          <source>SessionEnv</source>
          <target state="translated">SessionEnv</target>
        </trans-unit>
        <trans-unit id="ba99e4a77f2efb3b18523637325e8b96b56d251b" translate="yes" xml:space="preserve">
          <source>SessionEnv Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4930f2be1cc7723e356c668d143469d491a81cf0" translate="yes" xml:space="preserve">
          <source>SessionExclude Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf0aed5c5087c5730af2bc5c34a3341bdf48bda2" translate="yes" xml:space="preserve">
          <source>SessionHeader</source>
          <target state="translated">SessionHeader</target>
        </trans-unit>
        <trans-unit id="5443286d64edb28ac8df0bd005d8a2445422d238" translate="yes" xml:space="preserve">
          <source>SessionHeader Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c47d1de83bc264b2f100f4b0bf8d6c3296e5af7d" translate="yes" xml:space="preserve">
          <source>SessionInclude</source>
          <target state="translated">SessionInclude</target>
        </trans-unit>
        <trans-unit id="a353d699f961085893896fc06d5f60b2744f4cd0" translate="yes" xml:space="preserve">
          <source>SessionInclude Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a27b694fcec05d9e1d939f98bec2ad91e50093" translate="yes" xml:space="preserve">
          <source>SessionMaxAge</source>
          <target state="translated">SessionMaxAge</target>
        </trans-unit>
        <trans-unit id="9400059d32ce4cfc70243487f0cc3e9ca5a9c34b" translate="yes" xml:space="preserve">
          <source>SessionMaxAge Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ffd19975152e7640c2b5cb5308d523120f0346" translate="yes" xml:space="preserve">
          <source>Sessions can either be &lt;strong&gt;anonymous&lt;/strong&gt;, where the session is keyed by a unique UUID string stored on the browser in a cookie, or &lt;strong&gt;per user&lt;/strong&gt;, where the session is keyed against the userid of the logged in user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b79dfb1ab7e2ac6cebd97743f514a227e2c01ff" translate="yes" xml:space="preserve">
          <source>Sessions may be manipulated from other modules that depend on the session, or the session may be read from and written to using environment variables and HTTP headers, as appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b64d293c16f470927ecebf784c77732f379877" translate="yes" xml:space="preserve">
          <source>Sessions may be stored on the server, or may be stored on the browser. Sessions may also be optionally encrypted for added security. These features are divided into several modules in addition to &lt;code&gt;&lt;a href=&quot;mod_session&quot;&gt;mod_session&lt;/a&gt;&lt;/code&gt;; &lt;code&gt;&lt;a href=&quot;mod_session_crypto&quot;&gt;mod_session_crypto&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_session_cookie&quot;&gt;mod_session_cookie&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_session_dbd&quot;&gt;mod_session_dbd&lt;/a&gt;&lt;/code&gt;. Depending on the server requirements, load the appropriate modules into the server (either statically at compile time or dynamically via the &lt;code&gt;&lt;a href=&quot;mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; directive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a765e4b30eac2faa4b48a038834db1d2ce9a529d" translate="yes" xml:space="preserve">
          <source>Sessions stored on the server rather than on the browser can also be encrypted as needed, offering privacy where potentially sensitive information is being shared between webservers in a server farm using the &lt;code&gt;&lt;a href=&quot;mod_session_dbd&quot;&gt;mod_session_dbd&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f10bae2fea1006a71639d25721e36000006303bd" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;umask&lt;/code&gt; for processes started by &lt;code&gt;&lt;a href=&quot;suexec&quot;&gt;suexec&lt;/a&gt;&lt;/code&gt;. It defaults to your system settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033cc289dd5e5ba6afdf4227baa032cb5a326384" translate="yes" xml:space="preserve">
          <source>Set C compiler flags you want to use for compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36e026216a0ea5e55eaa3c8443f404dff88fb2f" translate="yes" xml:space="preserve">
          <source>Set C/C++ preprocessor flags, e.g. &lt;code&gt;-Iincludedir&lt;/code&gt; if you have headers in a nonstandard directory &lt;var&gt;includedir&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaadbae5bf98211b9d0126034ec5326b2f092287" translate="yes" xml:space="preserve">
          <source>Set Environment Variables Based On URL Parts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056ba22c0c55a6c2a26bdeb8a07ed563ae76f572" translate="yes" xml:space="preserve">
          <source>Set a test cookie if and only if the client didn't send us a cookie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51096883175926f6437f03eb2977fa6a117b7713" translate="yes" xml:space="preserve">
          <source>Set a timeout for cache entries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5cddf4f6b872a17a21e165832df2dcf918c56f" translate="yes" xml:space="preserve">
          <source>Set linker flags, e.g. &lt;code&gt;-Llibdir&lt;/code&gt; if you have libraries in a nonstandard directory &lt;var&gt;libdir&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c94709683988a2c96f77984a914ac6dc8d258a8" translate="yes" xml:space="preserve">
          <source>Set local IP address for outgoing proxy connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befd8963d1fd400df202ba0a6fb637c04c38b872" translate="yes" xml:space="preserve">
          <source>Set of trusted PEM encoded OCSP responder certificates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2083c6013dd0b6921020bdb68936aa1125e0dd" translate="yes" xml:space="preserve">
          <source>Set the default responder URI for OCSP validation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c508acda00835cfa9bb6cfa106c5db2b03505a7a" translate="yes" xml:space="preserve">
          <source>Set the environment variable &lt;code&gt;APR_WORK&lt;/code&gt; to the full path of the &lt;code&gt;apr&lt;/code&gt; source code directory. Typically &lt;code&gt;\httpd\srclib\apr&lt;/code&gt; but the APR project can be outside of the httpd directory structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2f661e3c384eb2b155c6d8f39c09d0a60a827a" translate="yes" xml:space="preserve">
          <source>Set the environment variable &lt;code&gt;APU_WORK&lt;/code&gt; to the full path of the &lt;code&gt;apr-util&lt;/code&gt; source code directory. Typically &lt;code&gt;\httpd\srclib\apr-util&lt;/code&gt; but the APR-UTIL project can be outside of the httpd directory structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0637017c623745d0094e2c7217978b9ee0b7eae" translate="yes" xml:space="preserve">
          <source>Set the environment variable &lt;code&gt;AP_WORK&lt;/code&gt; to the full path of the &lt;code&gt;httpd&lt;/code&gt; source code directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe4dbd9a590482ac9a99f804114f62e97007564" translate="yes" xml:space="preserve">
          <source>Set the environment variable &lt;code&gt;LDAPSDK&lt;/code&gt; to the location where you installed the LDAP Libraries for C, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0d55e9dbf838c8d0102193e24cbc04f9e222b0" translate="yes" xml:space="preserve">
          <source>Set the environment variable &lt;code&gt;METROWERKS&lt;/code&gt; to the location where you installed the Metrowerks CodeWarrior compiler, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b042195fba37892eb3ecf43012366de5ed8fa53" translate="yes" xml:space="preserve">
          <source>Set the environment variable &lt;code&gt;NOVELLLIBC&lt;/code&gt; to the location of the NetWare Libraries for C SDK, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a22a740f0376b997a5ba047affce522425bdd90" translate="yes" xml:space="preserve">
          <source>Set the environment variable &lt;code&gt;PCRESDK&lt;/code&gt; to the location where you installed the source code for the PCRE Library, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a2b73a3c2907301b675298f4a54ed4b06d3111" translate="yes" xml:space="preserve">
          <source>Set the environment variable &lt;code&gt;ZLIBSDK&lt;/code&gt; to the location where you installed the source code for the ZLib Library, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29fe5f8a024046ef6b36759ea5f737c6681e18a" translate="yes" xml:space="preserve">
          <source>Set the hard maximum number of connections per process (threaded platforms only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7195c11628e34d91273bf28362ab498ad4be5deb" translate="yes" xml:space="preserve">
          <source>Set the initial value for the &lt;code&gt;&lt;a href=&quot;../mod/core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; directive to &lt;var&gt;serverroot&lt;/var&gt;. This can be overridden by the ServerRoot directive in the configuration file. The default is &lt;code&gt;/usr/local/apache2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524ef12f7a6ac45858f0dd0675e196905750f58d" translate="yes" xml:space="preserve">
          <source>Set the lock path directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f054ae5e34ce3e3eb624b097be33348b402c5ad" translate="yes" xml:space="preserve">
          <source>Set the maximum line size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d29c1298c17fd6ac0cc08e44b55fadf074173bf5" translate="yes" xml:space="preserve">
          <source>Set the maximum number of connections per process to be sustained, other than for handling peak demand (threaded platforms only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e6d8f3e9488955e2a691b52a5c9ae83af1b573" translate="yes" xml:space="preserve">
          <source>Set the maximum number of worker threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb3c81d9f3cd6e35711001ca459d7f0be97fef26" translate="yes" xml:space="preserve">
          <source>Set the maximum possible age of a cache lock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34522c9483dccb217b1c75f1e1295ee56c8a592" translate="yes" xml:space="preserve">
          <source>Set the minimum number of connections per process (threaded platforms only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7ef2aa4357a2aadd3486460ae91f6a3e3b7bf6" translate="yes" xml:space="preserve">
          <source>Set the same header value under multiple nonexclusive conditions, but do not duplicate the value in the final header. If all of the following conditions applied to a request (i.e., if the &lt;code&gt;CGI&lt;/code&gt;, &lt;code&gt;NO_CACHE&lt;/code&gt; and &lt;code&gt;NO_STORE&lt;/code&gt; environment variables all existed for the request):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b0728af6752e572145d87283250660e4eb82f9" translate="yes" xml:space="preserve">
          <source>Set the size for the SSL renegotiation buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f7460481adb865e7131b4c31d9bb045fb343803" translate="yes" xml:space="preserve">
          <source>Set the time to keep idle connections alive when the number of connections specified in DBDKeep has been exceeded (threaded platforms only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62f0d94c3a5fccbd642b08d7f8b99b6424ef6dc" translate="yes" xml:space="preserve">
          <source>Set the time to keep idle connections with the memcache server(s) alive (threaded platforms only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c22604933a82d19137a43a6c2209da0833f0f0" translate="yes" xml:space="preserve">
          <source>Set timeout and minimum data rate for receiving requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44cf412c970312de5f77e7973d092cd480dc203e" translate="yes" xml:space="preserve">
          <source>Set timeout values for receiving request headers and body from client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597f47e40fbbaaf06f35b2c611abdcac90f215fe" translate="yes" xml:space="preserve">
          <source>Set to &quot;off&quot; to allow downloading files even if they have wildcard characters in their names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9cde0ba488d45b754d419a314a25b17c6e8282" translate="yes" xml:space="preserve">
          <source>Set to &quot;off&quot; to allow downloading files with wildcards in their names from FTP servers that don't understand wildcard escaping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e953a70ad3f73ff7e59b0fb14705c01f8293259" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;1&lt;/code&gt; if the route in the request is different from the route of the worker, i.e. the request couldn't be handled sticky.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ee67fd240e56a6890d322581914e058ef91370" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;Off&lt;/code&gt;, HTML links are rewritten according to the &lt;code&gt;&lt;a href=&quot;#proxyhtmlurlmap&quot;&gt;ProxyHTMLURLMap&lt;/a&gt;&lt;/code&gt; directives, but links appearing in Javascript and CSS are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4567242cde18477eac857e2393dbfd1e127f71a5" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;On&lt;/code&gt;, all scripting events (as determined by &lt;code&gt;&lt;a href=&quot;#proxyhtmlevents&quot;&gt;ProxyHTMLEvents&lt;/a&gt;&lt;/code&gt;) and embedded scripts or stylesheets are also processed by the &lt;code&gt;&lt;a href=&quot;#proxyhtmlurlmap&quot;&gt;ProxyHTMLURLMap&lt;/a&gt;&lt;/code&gt; rules, according to the flags set for each rule. Since this requires more parsing, performance will be best if you only enable it when strictly necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05f2ac20fb9a6ad1b36f5a4fda7e61aa7a9584b" translate="yes" xml:space="preserve">
          <source>Set to true if this is an HTTP/0.9 style request (e.g. &lt;code&gt;GET /foo&lt;/code&gt; (with no headers) )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d432e2b603136a1b815853d6a5196900705b18" translate="yes" xml:space="preserve">
          <source>Set type and size of the private keys generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b0c2ee6c71fb285b69bc32e26ef045126b8703" translate="yes" xml:space="preserve">
          <source>Set various Proxy balancer or member parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfa8c6a7b9140e034a09ccb18ea875422b75af56" translate="yes" xml:space="preserve">
          <source>Set verbosity level - &lt;code&gt;4&lt;/code&gt; and above prints information on headers, &lt;code&gt;3&lt;/code&gt; and above prints response codes (404, 200, etc.), &lt;code&gt;2&lt;/code&gt; and above prints warnings and info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022fdea4f5415891e9e91eb009e62c3e949a0107" translate="yes" xml:space="preserve">
          <source>Set with the content of the related &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67233534b4d5d60d7ab7a379093273c09370928" translate="yes" xml:space="preserve">
          <source>Set with the content of the related &lt;code&gt;&lt;a href=&quot;core#serveradmin&quot;&gt;ServerAdmin&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da18d02d9a384ec87b2924aa70bb99b190dfa12c" translate="yes" xml:space="preserve">
          <source>Set-Cookie</source>
          <target state="translated">Set-Cookie</target>
        </trans-unit>
        <trans-unit id="e9cace35e90b037b0140e79e5bff9090459aef6c" translate="yes" xml:space="preserve">
          <source>Set-Cookie2</source>
          <target state="translated">Set-Cookie2</target>
        </trans-unit>
        <trans-unit id="8b662dd75fb3e504a1298842dcb6acff49e32f3d" translate="yes" xml:space="preserve">
          <source>SetEnv</source>
          <target state="translated">SetEnv</target>
        </trans-unit>
        <trans-unit id="0b867027f8e621e35fab1a38012f000005c12f3b" translate="yes" xml:space="preserve">
          <source>SetEnv Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d9ed1b73da5cb5213db646dd6397baadda8c80" translate="yes" xml:space="preserve">
          <source>SetEnvIf</source>
          <target state="translated">SetEnvIf</target>
        </trans-unit>
        <trans-unit id="7cd45092131833f43533c9f118bbe31f136cfb33" translate="yes" xml:space="preserve">
          <source>SetEnvIf Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3deacac1d2b01d9adf89d211a5854e0d062ff840" translate="yes" xml:space="preserve">
          <source>SetEnvIfExpr</source>
          <target state="translated">SetEnvIfExpr</target>
        </trans-unit>
        <trans-unit id="7b11b1fb7cb0ae53b2fb45e009cf0e25fc87eab4" translate="yes" xml:space="preserve">
          <source>SetEnvIfExpr Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="affe57d2301ecf3069891ef96a52640658f64dff" translate="yes" xml:space="preserve">
          <source>SetEnvIfNoCase</source>
          <target state="translated">SetEnvIfNoCase</target>
        </trans-unit>
        <trans-unit id="d609179faba1b7fbec8958d5712e4a0e4ecd1d45" translate="yes" xml:space="preserve">
          <source>SetEnvIfNoCase Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6bc8910aab5c988210b47ac3906d034ff824e71" translate="yes" xml:space="preserve">
          <source>SetHandler</source>
          <target state="translated">SetHandler</target>
        </trans-unit>
        <trans-unit id="f153aa7a0348e91f09afbe496627b16801972937" translate="yes" xml:space="preserve">
          <source>SetHandler Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1ce94b8f63faf4d5649499933c8c83c61a2bf6" translate="yes" xml:space="preserve">
          <source>SetIfEmpty available in 2.4.7 and later, expr=value available in 2.4.10 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50fb83561491c6111b49c7ca3fb1c48b9271231" translate="yes" xml:space="preserve">
          <source>SetInputFilter</source>
          <target state="translated">SetInputFilter</target>
        </trans-unit>
        <trans-unit id="7347ee1e5d0fc122d2b9b72d2dd6bda3abf9950c" translate="yes" xml:space="preserve">
          <source>SetInputFilter Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681c4448e1c2fd4d6f1f8ac07dcb3fe16cd31c3b" translate="yes" xml:space="preserve">
          <source>SetOutputFilter</source>
          <target state="translated">SetOutputFilter</target>
        </trans-unit>
        <trans-unit id="54f37d81c7b4f1199c12eb62b7430c005ef8677c" translate="yes" xml:space="preserve">
          <source>SetOutputFilter Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cda95cae22c019bc1146186184d091fe471a8fe" translate="yes" xml:space="preserve">
          <source>Sets a configuration &lt;var&gt;parameter &lt;/var&gt;which can be used with &lt;code&gt;&lt;a href=&quot;../mod/core#ifdefine&quot;&gt;&amp;lt;IfDefine&amp;gt;&lt;/a&gt;&lt;/code&gt; sections in the configuration files to conditionally skip or process commands at server startup and restart. Also can be used to set certain less-common startup parameters including &lt;code&gt;-DNO_DETACH&lt;/code&gt; (prevent the parent from forking) and &lt;code&gt;-DFOREGROUND&lt;/code&gt; (prevent the parent from calling &lt;code&gt;setsid()&lt;/code&gt; et al).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdfb69b26a6e4ca961947b7db8fe857dfa4f1512" translate="yes" xml:space="preserve">
          <source>Sets a cookie in the client browser. Full syntax is: CO=&lt;em&gt;NAME&lt;/em&gt;:&lt;em&gt;VAL&lt;/em&gt;:&lt;em&gt;domain&lt;/em&gt;[:&lt;em&gt;lifetime&lt;/em&gt;[:&lt;em&gt;path&lt;/em&gt;[:&lt;em&gt;secure&lt;/em&gt;[:&lt;em&gt;httponly&lt;/em&gt;]]]] &lt;em&gt;&lt;a href=&quot;../rewrite/flags#flag_co&quot;&gt;details ...&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5181592ddf52898b877d8af09e82327e9e181dc" translate="yes" xml:space="preserve">
          <source>Sets a default encoding to assume when absolutely no information can be &lt;a href=&quot;#sniffing&quot;&gt;automatically detected&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b57ab665cd9b7b469cf1d1a3eabdd212c2561f" translate="yes" xml:space="preserve">
          <source>Sets an HTML or XHTML document type declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89a27126f7dcabbb1db27bf9a811738fe0bd299" translate="yes" xml:space="preserve">
          <source>Sets an internal environment variable, which is then available to Apache HTTP Server modules, and passed on to CGI scripts and SSI pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d20f6d71597974251bdc52a9789a25367f3c44" translate="yes" xml:space="preserve">
          <source>Sets challenge types and their execution order when proving domain ownership. The names are protocol specific. The current ACME protocol version implemented by Let's Encrypt defines two challenge types that are supported by &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt;. By default, it will try the one on port 443 when available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9612fe53aacb098152fba92094ae948776593de" translate="yes" xml:space="preserve">
          <source>Sets environment variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc77dc56bd045ebedb25dde48cdedb5a8d86b53e" translate="yes" xml:space="preserve">
          <source>Sets environment variables based on an ap_expr expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c699c714ec7bb696cc774d71f5ee1f17c13b8aed" translate="yes" xml:space="preserve">
          <source>Sets environment variables based on attributes of the request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96c012e704ab9ca1960ca27bfba53a0d92b12e9" translate="yes" xml:space="preserve">
          <source>Sets environment variables based on attributes of the request without respect to case</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d242ccc88035267c593e02dd3c2ab1dee2c585b2" translate="yes" xml:space="preserve">
          <source>Sets environment variables conditional on HTTP User-Agent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679cb7c62c6a58f60940440f39faa4200d9521cb" translate="yes" xml:space="preserve">
          <source>Sets environment variables conditional on User-Agent without respect to case</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf5667d65d06b8c57fe5706f7d44b72878fcc33" translate="yes" xml:space="preserve">
          <source>Sets filename and format of log file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27722362ea9b76961c3cb545cfb3d05791b07f1d" translate="yes" xml:space="preserve">
          <source>Sets filename of the forensic log</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2512d8d85c5ab3d8d5166f8d99b6971753d067" translate="yes" xml:space="preserve">
          <source>Sets some special options for the rewrite engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a46538ac8a9468d1ab5a0e50fbdb0dbdd0fa63" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;../mod/core#loglevel&quot;&gt;LogLevel&lt;/a&gt;&lt;/code&gt; to &lt;var&gt;level&lt;/var&gt; during server startup. This is useful for temporarily increasing the verbosity of the error messages to find problems during startup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f401f6bfabdfb1194894623616b21409f1fd854" translate="yes" xml:space="preserve">
          <source>Sets the Group ID under which a virtual host runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5ece86a628119282ae86b4024dec09d52e77aa" translate="yes" xml:space="preserve">
          <source>Sets the MIME type with which the resulting response will be sent. This has the same effect as the &lt;code&gt;&lt;a href=&quot;../mod/mod_mime#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22313667a60caa6b3fecd6ce8eae3d70c2f55459" translate="yes" xml:space="preserve">
          <source>Sets the User ID under which a virtual host runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="961ee88f8c617d97884e0450a7f2d4b45ddf5271" translate="yes" xml:space="preserve">
          <source>Sets the authentication provider(s) for this location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d286a936b2d382bc837adb8e60e319879ea48a3a" translate="yes" xml:space="preserve">
          <source>Sets the base URL for per-directory rewrites</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afd24c269a4e08ec0cb5aa3026b3cd6e59c3aaa" translate="yes" xml:space="preserve">
          <source>Sets the buffer size increment for buffering inline scripts and stylesheets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66654e7ba030fd9c8b8195788429f4cbb671e693" translate="yes" xml:space="preserve">
          <source>Sets the default ordering of the directory index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22b93140d9d0dd54eb27fb413c3ec38d2ede00c5" translate="yes" xml:space="preserve">
          <source>Sets the file containing or nickname referring to a per connection client certificate. Not all LDAP toolkits support per connection client certificates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a331a426d4fb6a947aa22b40591b39f506d8b4e" translate="yes" xml:space="preserve">
          <source>Sets the file or database containing global trusted Certificate Authority or global client certificates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479d18e6303854c458827d3a0cb07ab3599789a7" translate="yes" xml:space="preserve">
          <source>Sets the filters that will process client requests and POST input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b609b34afa582f907d55ccaf2b6232bb090377c" translate="yes" xml:space="preserve">
          <source>Sets the filters that will process responses from the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f47bc587a1df6b4f3267df020dc700c9be5973d" translate="yes" xml:space="preserve">
          <source>Sets the interval at which the watchdog_step hook runs. Default is to run every second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e60bbe6b942bee8abf4e2c30aa55cbf600d34d" translate="yes" xml:space="preserve">
          <source>Sets the load balancer cluster set that the worker is a member of. The load balancer will try all members of a lower numbered lbset before trying higher numbered ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa53df8c756b60f4077d8b3bf6e40c48ecb3dec" translate="yes" xml:space="preserve">
          <source>Sets the name of a database file containing the list of users and passwords for authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7e991a7aac8734ab7e6584f080effd865a9d4a" translate="yes" xml:space="preserve">
          <source>Sets the name of a text file containing the list of user groups for authorization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a73bb408e2d0f586404ac2a9af6b07f91d2561e" translate="yes" xml:space="preserve">
          <source>Sets the name of a text file containing the list of users and passwords for authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe58def1e29403f75f657d925d8dfc4263a2ab2" translate="yes" xml:space="preserve">
          <source>Sets the name of the database file containing the list of user groups for authorization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad398cc8f73bf42bcc00a39bfc0386ed896258df" translate="yes" xml:space="preserve">
          <source>Sets the separation symbol in the session cookie. Some backend application servers do not use the '.' as the symbol. For example, the Oracle Weblogic server uses '!'. The correct symbol can be set using this option. The setting of 'Off' signifies that no symbol is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2b32cae9a297b4c2290361740662b0c026cf63" translate="yes" xml:space="preserve">
          <source>Sets the server's TCP send buffer size to the number of bytes specified. It is often useful to set this past the OS's standard default value on high speed, high latency connections (&lt;em&gt;i.e.&lt;/em&gt;, 100ms or so, such as transcontinental fast pipes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2338328dd76e42f9da9d7ad24c8776f80411146a" translate="yes" xml:space="preserve">
          <source>Sets the shared memory cache file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7183b6534eba8c2ba8c32491d9eed68d61a2b95e" translate="yes" xml:space="preserve">
          <source>Sets the timeout in seconds before &lt;em&gt;invalid&lt;/em&gt; responses in the OCSP stapling cache (configured through &lt;code&gt;&lt;a href=&quot;#sslstaplingcache&quot;&gt;SSLStaplingCache&lt;/a&gt;&lt;/code&gt;) will expire. To set the cache timeout for valid responses, see &lt;code&gt;&lt;a href=&quot;#sslstaplingstandardcachetimeout&quot;&gt;SSLStaplingStandardCacheTimeout&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3946ae2762c3ea5b0785038566fd2e0a9ffd752" translate="yes" xml:space="preserve">
          <source>Sets the timeout in seconds before responses in the OCSP stapling cache (configured through &lt;code&gt;&lt;a href=&quot;#sslstaplingcache&quot;&gt;SSLStaplingCache&lt;/a&gt;&lt;/code&gt;) will expire. This directive applies to &lt;em&gt;valid&lt;/em&gt; responses, while &lt;code&gt;&lt;a href=&quot;#sslstaplingerrorcachetimeout&quot;&gt;SSLStaplingErrorCacheTimeout&lt;/a&gt;&lt;/code&gt; is used for controlling the timeout for invalid/unavailable responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160a4031a68eb409ec3663efbde2c46a37191c6f" translate="yes" xml:space="preserve">
          <source>Sets the total server-wide size of the threadpool used for the health check workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cba1ba7473ab42c829b43513c31e7feaf8d55d3" translate="yes" xml:space="preserve">
          <source>Sets the type of database file that is used to store list of user groups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05165504d4341e1013f87d0e3062f29b102ff828" translate="yes" xml:space="preserve">
          <source>Sets the type of database file that is used to store passwords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa29e899e47db33ae8c8b1b38d3b9a2420c5f350" translate="yes" xml:space="preserve">
          <source>Sets the type of database file that is used to store the list of user groups. The default database type is determined at compile time. The availability of other types of database files also depends on &lt;a href=&quot;../install#dbm&quot;&gt;compile-time settings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8515cdcfd592e31c9e8838e00c862c25490033" translate="yes" xml:space="preserve">
          <source>Sets the type of database file that is used to store the passwords. The default database type is determined at compile time. The availability of other types of database files also depends on &lt;a href=&quot;../programs/configure#options&quot;&gt;compile-time settings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf6a9056db80645864620c2553bf982757ec7a4" translate="yes" xml:space="preserve">
          <source>Sets the upper limit on the configurable number of threads per child process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89542dcc575b56aaef311c09f47c90179eeba87a" translate="yes" xml:space="preserve">
          <source>Sets whether authorization and authentication are passed to lower level modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3e9cfacc30e98921d5652cbe11e499664a24de" translate="yes" xml:space="preserve">
          <source>Sets whether the password entered will be logged in the error log</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729e162622a1a43442bad5569fc9577b64fb48fa" translate="yes" xml:space="preserve">
          <source>Sets whether the userID field may be empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc303b83d1b06a2856b201eb3ae6c4ceced4381" translate="yes" xml:space="preserve">
          <source>Sets whether to check the password field for a correctly formatted email address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2035450003ddff24f2d19c01d183d5b8452241" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;&lt;a href=&quot;mod/mod_cache_disk#cachedirlevels&quot;&gt;CacheDirLevels&lt;/a&gt;&lt;/code&gt; depends on how many files you anticipate to store in the cache. With the setting of &quot;2&quot; used in the above example, a grand total of 4096 subdirectories can ultimately be created. With 1 million files cached, this works out at roughly 245 cached URLs per directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664d79f93b87df531c84da7dd0b239940126da5b" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;KeepAliveTimeout&lt;/code&gt; to a high value may cause performance problems in heavily loaded servers. The higher the timeout, the more server processes will be kept occupied waiting on connections with idle clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a52304caa187e874bbacd5bacc4844d84d3c2c" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;MaxConnectionsPerChild&lt;/code&gt; to a non-zero value limits the amount of memory that process can consume by (accidental) memory leakage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7a08d213d332e831f6072c287c48b0e22a689c" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;ScriptInterpreterSource Registry&lt;/code&gt; will cause the Windows Registry tree &lt;code&gt;HKEY_CLASSES_ROOT&lt;/code&gt; to be searched using the script file extension (e.g., &lt;code&gt;.pl&lt;/code&gt;) as a search key. The command defined by the registry subkey &lt;code&gt;Shell\ExecCGI\Command&lt;/code&gt; or, if it does not exist, by the subkey &lt;code&gt;Shell\Open\Command&lt;/code&gt; is used to open the script file. If the registry keys cannot be found, Apache httpd falls back to the behavior of the &lt;code&gt;Script&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53096415fa9a8c68a972a1f9162fff50da505c71" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;ServerTokens&lt;/code&gt; to less than &lt;code&gt;minimal&lt;/code&gt; is not recommended because it makes it more difficult to debug interoperational problems. Also note that disabling the Server: header does nothing at all to make your server more secure. The idea of &quot;security through obscurity&quot; is a myth and leads to a false sense of safety.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ce28ef459d11025685b81ff15aefc0b750e065" translate="yes" xml:space="preserve">
          <source>Setting Environment Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a06ec60c7432858c0c2dc1ae69c690c3abeec327" translate="yes" xml:space="preserve">
          <source>Setting cookie parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7a9b00966d181b92e9a6201724b159ea651b89" translate="yes" xml:space="preserve">
          <source>Setting paranoid permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48425dfb45035f084d546472d04b3c141febc6aa" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;AuthBasicUseDigestAlgorithm&lt;/code&gt; directive to &lt;code&gt;MD5&lt;/code&gt; will cause the user's Basic Authentication password to be checked using the same encrypted format as for Digest Authentication. First a string composed from the username, realm name, and password is hashed with MD5; then the username and this encrypted string are passed to the providers listed in &lt;code&gt;&lt;a href=&quot;#authbasicprovider&quot;&gt;AuthBasicProvider&lt;/a&gt;&lt;/code&gt; as if &lt;code&gt;&lt;a href=&quot;mod_authn_core#authtype&quot;&gt;AuthType&lt;/a&gt;&lt;/code&gt; was set to &lt;code&gt;Digest&lt;/code&gt; and Digest Authentication was in force.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1462f0beff5651d2cc4b6e7c9339ecb38c1c585d" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;SO_REUSEPORT&lt;/code&gt; option on the listening socket(s) consequently allows multiple processes (sharing the same &lt;code&gt;EUID&lt;/code&gt;, e.g. &lt;code&gt;root&lt;/code&gt;) to bind to the the same IP address and port, without the binding error raised by the system in the usual case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14661064cb6bda676769e7c8e44d9c0cc398c941" translate="yes" xml:space="preserve">
          <source>Setting the body of a non-200 response; if the authorizer provides a response body with a non-200 response, that body will be returned to the client; up to 8192 bytes of text are supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8478b5f475c9ae7461ba0a5f9b3e4774d5ac5a" translate="yes" xml:space="preserve">
          <source>Setting the file path with UserDir</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0dae153177e0e55a4d69351e32db9daa589c05" translate="yes" xml:space="preserve">
          <source>Setting the maxage to zero disables session expiry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d50d5b921cdc7592a12ca2ad7b3ed9b73aca9d" translate="yes" xml:space="preserve">
          <source>Setting this environment variable causes Apache to omit the character set for the redirection text, and these broken browsers will then correctly use that of the destination page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fcaf0a2657d0779970e564bcc45c4b3a9c9ab6b" translate="yes" xml:space="preserve">
          <source>Setting this value to zero means that the server will wait indefinitely until all remaining requests have been fully served.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b97401d6c2373cccd111d5d50f3146782814ed6" translate="yes" xml:space="preserve">
          <source>Setting up a hot-standby that will only be used if no other members (or spares) are available in the load balancer set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd429efd45f0a9de4661d8230b08a679bc73f5a" translate="yes" xml:space="preserve">
          <source>Setting up a single daemon with virtual hosts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca59d341d09668592f0088277536339368cf7f0a" translate="yes" xml:space="preserve">
          <source>Setting up multiple daemons</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f5540e56a138ef21c1febe7f4eb5a7edf28798" translate="yes" xml:space="preserve">
          <source>Setting variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13243e1eded586520059b28e82f79cc3387e6b21" translate="yes" xml:space="preserve">
          <source>Setting which addresses and ports Apache HTTP Server uses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01a84ada90ba33eaec41b96b65ae098ea2bb94c" translate="yes" xml:space="preserve">
          <source>Several directives are available to handle timeouts and errors. Refer to the documentation for the &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslstaplingfaketrylater&quot;&gt;SSLStaplingFakeTryLater&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslstaplingrespondertimeout&quot;&gt;SSLStaplingResponderTimeout&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslstaplingreturnrespondererrors&quot;&gt;SSLStaplingReturnResponderErrors&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="120ab82dc277b68f652292be16f18a8a956212d8" translate="yes" xml:space="preserve">
          <source>Several features of the Apache HTTP Server, including &lt;code&gt;&lt;a href=&quot;../mod/mod_authn_dbm&quot;&gt;mod_authn_dbm&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;'s DBM &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritemap&quot;&gt;RewriteMap&lt;/a&gt;&lt;/code&gt; use simple key/value databases for quick lookups of information. SDBM is included in the APU, so this database is always available. If you would like to use other database types, use the following options to enable them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6c8f5d2359783ea3d4fdb936489b2191da727a" translate="yes" xml:space="preserve">
          <source>Several of the non-browser client implementations support HTTP/2 over cleartext, h2c. The most versatile being &lt;a href=&quot;https://curl.haxx.se&quot;&gt;curl&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9c885239a93c2800762c74afbc49eb8f57d171" translate="yes" xml:space="preserve">
          <source>Several of the override classes are quite powerful and give .htaccess users a large amount of control over the server. For a stricter approach, set &lt;code&gt;AllowOverride None&lt;/code&gt; and use &lt;code&gt;&lt;a href=&quot;core#allowoverridelist&quot;&gt;AllowOverrideList&lt;/a&gt;&lt;/code&gt; to specify the exact list of directives that .htaccess users are allowed to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ee3a684c2d70529093e87103a07a8d03464d25" translate="yes" xml:space="preserve">
          <source>Several steps recommended here require a perl interpreter during the build preparation process, but it is otherwise not required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ca5a4748aa7a28b9d36d80e9994a3fd1889109" translate="yes" xml:space="preserve">
          <source>Shared Object Cache Providers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5869199078ebacb8f7b2058bb0e1acf42f029f2d" translate="yes" xml:space="preserve">
          <source>Shared Object Cache in Apache HTTP Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35189f3aa315d3dd8e82f9218595309d688aff83" translate="yes" xml:space="preserve">
          <source>Shared memory based shared object cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcab33b8c2eb372ef0883b1b51c502d8011ff15a" translate="yes" xml:space="preserve">
          <source>Shared object cache (socache) based storage module for the HTTP caching filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f604992ba8776c5bae44c27b2babd44eb163f15" translate="yes" xml:space="preserve">
          <source>Sharing of the httpd configuration between virtual hosts is acceptable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ffa2ad13622be3c268dae3b87650489366448bf" translate="yes" xml:space="preserve">
          <source>Shell-style (&lt;code&gt;fnmatch()&lt;/code&gt;) wildcard characters can be used in the filename or directory parts of the path to include several files at once, in alphabetical order. In addition, if &lt;code&gt;Include&lt;/code&gt; points to a directory, rather than a file, Apache httpd will read all files in that directory and any subdirectory. However, including entire directories is not recommended, because it is easy to accidentally leave temporary files in a directory that can cause &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; to fail. Instead, we encourage you to use the wildcard syntax shown below, to include files that match a particular pattern, such as *.conf, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbaa8261c245385ab3fd2c9062fd5d93f7311d0d" translate="yes" xml:space="preserve">
          <source>Short circuit evaluation is turned off as long as there are regular expressions to deal with. These must be evaluated to fill in the backreference variables (&lt;code&gt;$1&lt;/code&gt; .. &lt;code&gt;$9&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a227607d30f6801b7c5e3c183dfe8760c8d2974a" translate="yes" xml:space="preserve">
          <source>Shorter Priority Rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747435c7e033bfc2ffd6b505ef9062c16adc862f" translate="yes" xml:space="preserve">
          <source>Should you wish to check to which key or certificate a particular CSR belongs you can perform the same calculation on the CSR as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff8f7771b9516072e3a67bd4b386978c9fd931a" translate="yes" xml:space="preserve">
          <source>Show Proxy LoadBalancer status in mod_status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40694fc293b97aaa81a5e3b7aa01cd8ff1029200" translate="yes" xml:space="preserve">
          <source>Show the settings as parsed from the config file (currently only shows the virtualhost settings).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b32789d0227276f6f97a3512a6c4613e848fe88" translate="yes" xml:space="preserve">
          <source>ShowForbidden</source>
          <target state="translated">ShowForbidden</target>
        </trans-unit>
        <trans-unit id="7fddb7d8d1d60b1eeefa9af01082e0811d4b484d" translate="yes" xml:space="preserve">
          <source>Shutdown</source>
          <target state="translated">Shutdown</target>
        </trans-unit>
        <trans-unit id="e5deadcf1497e8ef2e3fcd630f31918e9e99cbf1" translate="yes" xml:space="preserve">
          <source>Signal: HUP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e532dc729daf41a6aec6a0c7c0208084118ad10c" translate="yes" xml:space="preserve">
          <source>Signal: TERM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65abdcbb499706e5e6fd8ed11131823582487dfd" translate="yes" xml:space="preserve">
          <source>Signal: USR1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4abb34cd96b0ddc170714f03292b9a4233d6ee6b" translate="yes" xml:space="preserve">
          <source>Signal: WINCH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f599435883791e279c37765399e5c9cda86b2bf7" translate="yes" xml:space="preserve">
          <source>Signals &lt;code&gt;httpd&lt;/code&gt; to start, restart, or stop. See &lt;a href=&quot;../stopping&quot;&gt;Stopping Apache httpd&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e5c90a607b3254bc013d8be98cf4dec49f7395" translate="yes" xml:space="preserve">
          <source>Signals the end of this request-handling cycle. If the &lt;code&gt;reuse&lt;/code&gt; flag is true &lt;code&gt;(anything other than 0 in the actual C code)&lt;/code&gt;, this TCP connection can now be used to handle new incoming requests. If &lt;code&gt;reuse&lt;/code&gt; is false (==0), the connection should be closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c583282b3b2002f0e3f608244867764b0580c32e" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;On&lt;/code&gt;, but instead of the hardcoded header name &lt;code&gt;X-Sendfile&lt;/code&gt;, the argument is used as the header name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d527a25603c4745676c34e0335592c9215d9951" translate="yes" xml:space="preserve">
          <source>Similar to the previous case, except the netmask consists of nnn high-order 1 bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc52cc44f2d25aeb71b25257be416c92fdd6bf52" translate="yes" xml:space="preserve">
          <source>Similarly, any &lt;code&gt;text/foo&lt;/code&gt; MIME type can be served as &quot;raw ASCII&quot; by configuring a MIME type &quot;&lt;code&gt;text/x-ascii-foo&lt;/code&gt;&quot; for it using &lt;code&gt;AddType&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9636f295dcc07758ebb6a4b7cf1e8aca246fd9" translate="yes" xml:space="preserve">
          <source>Similarly, the dbm support can be extended with DBM_LIST to build a Berkeley DB provider (db) and/or gdbm provider, by similarly configuring LIB, INCLUDE and PATH first to ensure the client library libs and headers are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999fa024d3ce168e9e496e3deaa59fa71f44370d" translate="yes" xml:space="preserve">
          <source>Simple Proxying</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba6243c61f263f503336ce2ed353e3cfe7866404" translate="yes" xml:space="preserve">
          <source>Simple Redirection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f6c9958cbc23386b09223da3d826f79790b8f7" translate="yes" xml:space="preserve">
          <source>Simple Reverse Proxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e275d6f576890ff627fa690b0b277a13924a5bb1" translate="yes" xml:space="preserve">
          <source>Simple configuration example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301a0a90775438fa5929a0c19868f6fe1111d55d" translate="yes" xml:space="preserve">
          <source>Simple gateway</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0beea0d977a2aad420b667da409d3e8c1582e7" translate="yes" xml:space="preserve">
          <source>Simple reverse proxying</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dcbaf310a2e67ce1a8a420f470059dbbc91ecf6" translate="yes" xml:space="preserve">
          <source>Simplified Dynamic Virtual Hosts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67ab1380aa69d9e5a64a49d12ca4ba50383e360" translate="yes" xml:space="preserve">
          <source>Since 2.4.10, new measures are in place to avoid the reference time from being inflated by cache hits or slow requests. First, the reference time is not updated if no backend LDAP conncetions were needed. Second, the reference time uses the time the HTTP request was received instead of the time the request is completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6424cd6b58cbd17b5145703dcfbfc1915223072" translate="yes" xml:space="preserve">
          <source>Since 2.4.8: The peer IP address of the connection (see the &lt;code&gt;&lt;a href=&quot;mod_remoteip&quot;&gt;mod_remoteip&lt;/a&gt;&lt;/code&gt; module).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9c726b38c5e47cb6b7471ab93b467fc9a7b646" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;&lt;a href=&quot;mod_brotli&quot;&gt;mod_brotli&lt;/a&gt;&lt;/code&gt; re-compresses content each time a request is made, some performance benefit can be derived by pre-compressing the content and telling mod_brotli to serve them without re-compressing them. This may be accomplished using a configuration like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50db7d056a760d2b67f6e947648b6043118cb400" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;&lt;a href=&quot;mod_deflate&quot;&gt;mod_deflate&lt;/a&gt;&lt;/code&gt; re-compresses content each time a request is made, some performance benefit can be derived by pre-compressing the content and telling mod_deflate to serve them without re-compressing them. This may be accomplished using a configuration like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a852dba5d0f2340fd2d1e2f8a9189e2f389c3f" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;filesystem&lt;/code&gt; is the default provider for &lt;code&gt;&lt;a href=&quot;mod_dav&quot;&gt;mod_dav&lt;/a&gt;&lt;/code&gt;, you may simply use the value &lt;code&gt;On&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e661451214b83ef1f8d419d74e935ae6007912a7" translate="yes" xml:space="preserve">
          <source>Since DAV access methods allow remote clients to manipulate files on the server, you must take particular care to assure that your server is secure before enabling &lt;code&gt;&lt;a href=&quot;mod_dav&quot;&gt;mod_dav&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179793a98a7409bfa5fe404967e239689a0b6a2a" translate="yes" xml:space="preserve">
          <source>Since all Apache input and output is based upon the BUFF data type and its methods, the easiest solution was to add the conversion to the BUFF handling routines. The conversion must be settable at any time, so a BUFF flag was added which defines whether a BUFF object has currently enabled conversion or not. This flag is modified at several points in the HTTP protocol:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd70edd2e1365e98d1bcf7226a542469841fc15" translate="yes" xml:space="preserve">
          <source>Since custom DH parameters always take precedence over the default ones, this issue can be avoided by creating and configuring them (as described above), thus using a custom/suitable length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeadc86ea493eacdadcb6d824777509e8816fe85" translate="yes" xml:space="preserve">
          <source>Since httpd 2.0, &lt;code&gt;&lt;a href=&quot;mod_isapi&quot;&gt;mod_isapi&lt;/a&gt;&lt;/code&gt; supports additional features introduced in later versions of the ISAPI specification, as well as limited emulation of async I/O and the &lt;code&gt;TransmitFile&lt;/code&gt; semantics. Apache httpd also supports preloading ISAPI .dlls for performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389d690aad599bf725eea4065d502efaecebb266" translate="yes" xml:space="preserve">
          <source>Since httpd 2.0, unlike 1.3, the &lt;code&gt;%b&lt;/code&gt; and &lt;code&gt;%B&lt;/code&gt; format strings do not represent the number of bytes sent to the client, but simply the size in bytes of the HTTP response (which will differ, for instance, if the connection is aborted, or if SSL is used). The &lt;code&gt;%O&lt;/code&gt; format provided by &lt;code&gt;&lt;a href=&quot;mod_logio&quot;&gt;mod_logio&lt;/a&gt;&lt;/code&gt; will log the actual number of bytes sent over the network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1f03b3da19c15c28fbbec385cbfa1168c5cab2" translate="yes" xml:space="preserve">
          <source>Since httpd 2.2.4, responses which have already expired are not stored in the cache. The &lt;code&gt;CacheStoreExpired&lt;/code&gt; directive allows this behavior to be overridden. &lt;code&gt;CacheStoreExpired&lt;/code&gt; On tells the server to attempt to cache the resource if it is stale. Subsequent requests would trigger an If-Modified-Since request of the origin server, and the response may be fulfilled from cache if the backend resource has not changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4dd27302418f108742396575a36c91b580b3d0" translate="yes" xml:space="preserve">
          <source>Since it is often difficult to manage files with names like &lt;code&gt;.htaccess&lt;/code&gt; in Windows, you may find it useful to change the name of this per-directory configuration file using the &lt;code&gt;&lt;a href=&quot;../mod/core#accessfilename&quot;&gt;AccessFilename&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3f84cbcc23c1214c6ec80cf9bfa3b0c1aa16c1" translate="yes" xml:space="preserve">
          <source>Since memory usage is such an important consideration in performance, you should attempt to eliminate modules that you are not actually using. If you have built the modules as &lt;a href=&quot;../dso&quot;&gt;DSOs&lt;/a&gt;, eliminating modules is a simple matter of commenting out the associated &lt;code&gt;&lt;a href=&quot;../mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; directive for that module. This allows you to experiment with removing modules and seeing if your site still functions in their absence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11bfbdff7dfb5a8b7f4969e2e05524c3d9ab62e4" translate="yes" xml:space="preserve">
          <source>Since mod_rewrite is so powerful, it can indeed be rather complex. This document supplements the &lt;a href=&quot;../mod/mod_rewrite&quot;&gt;reference documentation&lt;/a&gt;, and attempts to allay some of that complexity, and provide highly annotated examples of common scenarios that you may handle with mod_rewrite. But we also attempt to show you when you should not use mod_rewrite, and use other standard Apache features instead, thus avoiding this unnecessary complexity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90679c7c433162f67550a5911084e0b6064789db" translate="yes" xml:space="preserve">
          <source>Since the &lt;var&gt;File&lt;/var&gt; argument may be a partial file name, please remember that a too-short partial filename may match unintended files. For example, &lt;code&gt;le.html&lt;/code&gt; will match the file &lt;code&gt;le.html&lt;/code&gt; but will also match the file &lt;code&gt;example.html&lt;/code&gt;. In the event that there may be ambiguity, use as complete a filename as you can, but keep in mind that the first match encountered will be used, and order your list of &lt;code&gt;AddDescription&lt;/code&gt; directives accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03eb5688a4ae41f3be16b8359a5687291dacdb7e" translate="yes" xml:space="preserve">
          <source>Since the MD5 function is commonly available, other software can populate a database with encrypted passwords that are usable by Apache digest authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79a9433967803665a75665195b41b74be0a1d5c" translate="yes" xml:space="preserve">
          <source>Since v2.4.8, &lt;a href=&quot;../expr&quot;&gt;expressions&lt;/a&gt; are supported within the DBD require directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8e137b44007827dae890dff03079474ca46b1d" translate="yes" xml:space="preserve">
          <source>Since v2.4.8, &lt;a href=&quot;../expr&quot;&gt;expressions&lt;/a&gt; are supported within the DBM require directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e8acaaa358538aede09ddc49e9d396c1bdf87f" translate="yes" xml:space="preserve">
          <source>Since v2.4.8, &lt;a href=&quot;../expr&quot;&gt;expressions&lt;/a&gt; are supported within the LDAP require directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888a9c19c6aa32b89f1646adfd37af325b7c75cd" translate="yes" xml:space="preserve">
          <source>Since v2.4.8, &lt;a href=&quot;../expr&quot;&gt;expressions&lt;/a&gt; are supported within the groupfile require directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2a25108eccea0b709a8b71c3469d5297b6f4bb" translate="yes" xml:space="preserve">
          <source>Since v2.4.8, &lt;a href=&quot;../expr&quot;&gt;expressions&lt;/a&gt; are supported within the host require directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e47f03bd616e6e967fb65ad0bc499ff4313d21" translate="yes" xml:space="preserve">
          <source>Since v2.4.8, &lt;a href=&quot;../expr&quot;&gt;expressions&lt;/a&gt; are supported within the user require directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5280110ad2d69bb981f4f33f25076b04092c1793" translate="yes" xml:space="preserve">
          <source>Since version 2.0.51 &lt;code&gt;Satisfy&lt;/code&gt; directives can be restricted to particular methods by &lt;code&gt;&lt;a href=&quot;core#limit&quot;&gt;&amp;lt;Limit&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;core#limitexcept&quot;&gt;&amp;lt;LimitExcept&amp;gt;&lt;/a&gt;&lt;/code&gt; sections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ecb95075d02aceae22e39af5eb55cd8e70adb8" translate="yes" xml:space="preserve">
          <source>Since we're talking here about authentication, you will need an &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; directive like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a22b0750a4d3e002b0f82706a8c9da693d1bb2" translate="yes" xml:space="preserve">
          <source>Single application instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3bb422f41bf115b83c754e93a9371545f4d4c3" translate="yes" xml:space="preserve">
          <source>Single application instance, connection reuse (2.4.11 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e758e60919d6a4d735f537af0ac1721bea8418c6" translate="yes" xml:space="preserve">
          <source>Single letter value defining the initial status of this worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3d4b980d2d71e3ca1a83e0880e42628b785ed1" translate="yes" xml:space="preserve">
          <source>Sioux 1.x compatibility:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ec3e71d2c9d85aaaf417a243c8e7d9f42135fc" translate="yes" xml:space="preserve">
          <source>Sitemap</source>
          <target state="translated">Sitemap</target>
        </trans-unit>
        <trans-unit id="0cdd382f40ee121cbec85087e174724313bb463b" translate="yes" xml:space="preserve">
          <source>Size (2 bytes) and corresponding body data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfebdd4b3d9187be5923de0bbe447dd4802a7246" translate="yes" xml:space="preserve">
          <source>Size in bytes of the shared-memory cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10fc15cfad81279917f3aa34db7303f71527d202" translate="yes" xml:space="preserve">
          <source>Size limit of the CGI script logfile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1e7dac68403a0edebd6999bee3e60f1789bab0" translate="yes" xml:space="preserve">
          <source>Size of Stream Window for upstream data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9e21947fecb0b372e9b0741db31b7f6fb9fd24" translate="yes" xml:space="preserve">
          <source>Size of TCP send/receive buffer, in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468138f7021465f50ecbb7b6737d3e2f4cea4aef" translate="yes" xml:space="preserve">
          <source>Size of response in bytes, excluding HTTP headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e3442a02be94e42c7a72e574bb34856f2f8b8e" translate="yes" xml:space="preserve">
          <source>Size of response in bytes, excluding HTTP headers. In CLF format, &lt;em&gt;i.e.&lt;/em&gt; a '&lt;code&gt;-&lt;/code&gt;' rather than a 0 when no bytes are sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c502174c15ede4dcd62568c051ab172e7f71427e" translate="yes" xml:space="preserve">
          <source>Size of the Read Ahead Buffer sent to ISAPI extensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f35e3ba8559d426111027f193521495771fe602" translate="yes" xml:space="preserve">
          <source>Skip document root check at startup/restart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf65e4e9fcaa36f1e95444d5d47764ba71fcc27" translate="yes" xml:space="preserve">
          <source>Skip the OCSP responder certificates verification, mostly useful when testing an OCSP server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0780f959eb451782dd73a35ff75c097ff9958a2" translate="yes" xml:space="preserve">
          <source>Slot-based shared memory provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b45b661369823b7def253ae97f5c03db59b477" translate="yes" xml:space="preserve">
          <source>Slow Startup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323681d14809f08320b160fb78b229b3a6c5a3dd" translate="yes" xml:space="preserve">
          <source>Slowing down the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a79fcfab39ed417316e5356f04dfb845ac20c60" translate="yes" xml:space="preserve">
          <source>Smart Filtering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4e6ac14db8a2e989cb935c26933e31dd784972" translate="yes" xml:space="preserve">
          <source>So to use this extension mechanism your platform has to support the DSO feature and your Apache &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; binary has to be built with the &lt;code&gt;&lt;a href=&quot;../mod/mod_so&quot;&gt;mod_so&lt;/a&gt;&lt;/code&gt; module. The &lt;code&gt;apxs&lt;/code&gt; tool automatically complains if this is not the case. You can check this yourself by manually running the command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2031ff03f125e9fef3a13edee32f6ff381ab7eb" translate="yes" xml:space="preserve">
          <source>So, after a request comes in and a corresponding server or virtual host has been determined, the rewriting engine starts processing any &lt;code&gt;mod_rewrite&lt;/code&gt; directives appearing in the per-server configuration. (i.e., in the main server configuration file and &lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;&amp;lt;Virtualhost&amp;gt;&lt;/a&gt;&lt;/code&gt; sections.) This happens in the URL-to-filename phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73904de7f9c3d4130124776ae4251cab18657e74" translate="yes" xml:space="preserve">
          <source>So, for example, once a client has authenticated in the &lt;code&gt;&quot;Restricted Files&quot;&lt;/code&gt; area, it will automatically retry the same password for any area on the same server that is marked with the &lt;code&gt;&quot;Restricted Files&quot;&lt;/code&gt; Realm. Therefore, you can prevent a user from being prompted more than once for a password by letting multiple restricted areas share the same realm. Of course, for security reasons, the client will always need to ask again for the password whenever the hostname of the server changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20bfb30e052ccb459173c32905e2207f0d2932a" translate="yes" xml:space="preserve">
          <source>So, if you have several virtual hosts using the same certificate and want to use HTTP/2 for them, you need to make sure that all vhosts have exactly the same SSL configuration. You need the same protocol, ciphers and settings for client verification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce3b73042ae08555dd2dc3968434245beba6108" translate="yes" xml:space="preserve">
          <source>So, when an image is requested and the first of these rules is matched, &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritemap&quot;&gt;RewriteMap&lt;/a&gt;&lt;/code&gt; looks up the string &lt;code&gt;static&lt;/code&gt; in the map file, which returns one of the specified hostnames at random, which is then used in the &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eda35e136955838a4b9fcfcdaf9d91b87a8cf2d" translate="yes" xml:space="preserve">
          <source>Solaris SDK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b4be76f4063ebb50e8962cb56601d4fb13d56d" translate="yes" xml:space="preserve">
          <source>Solaris and Linux are notable exceptions as they provide a mechanism which usually allows the mutex to be recovered after a child process terminates abnormally while holding a mutex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8129a7cedfa96eea2f85417f88084f6a4e75848a" translate="yes" xml:space="preserve">
          <source>Solaris on SPARC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4190ac35a0d65d8420cd953993197fee2c185752" translate="yes" xml:space="preserve">
          <source>Solution:</source>
          <target state="translated">Solution:</target>
        </trans-unit>
        <trans-unit id="9453d67706f2e201685f53d3590a63d25ccf70ae" translate="yes" xml:space="preserve">
          <source>Solutions:</source>
          <target state="translated">Solutions:</target>
        </trans-unit>
        <trans-unit id="59d6b766dd53b782bc8a4cd324316ce579124b0f" translate="yes" xml:space="preserve">
          <source>Some &quot;do&quot;s - and &quot;don't&quot;s - for keeping your Apache web site secure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6901ba2ca736bbe2ba643170209085d02df096f1" translate="yes" xml:space="preserve">
          <source>Some Caveats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b2bc3261dfd6cc36c4642b9de887a33159c95a" translate="yes" xml:space="preserve">
          <source>Some LDAP servers divide their directory among multiple domains and use referrals to direct a client when a domain boundary is crossed. This is similar to a HTTP redirect. LDAP client libraries may or may not chase referrals by default. This directive explicitly configures the referral chasing in the underlying SDK.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9f0af2898122022b2e6624e98966ea4afc9ef0" translate="yes" xml:space="preserve">
          <source>Some additional examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3eb8ce5019a470312fefa9e9f7ea9d971d9abb3" translate="yes" xml:space="preserve">
          <source>Some administrators may wish to implement client-side session management that works in concert with the server-side login/logout capabilities offered by this module, for example, by setting or unsetting an HTTP cookie or other such token when a user logs in or out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a9c022b7f4d35f5bcab1cce851f3a9c2186bf1" translate="yes" xml:space="preserve">
          <source>Some back-ends use a slightly different form of stickyness cookie, for instance Apache Tomcat. Tomcat adds the name of the Tomcat instance to the end of its session id cookie, separated with a dot (&lt;code&gt;.&lt;/code&gt;) from the session id. Thus if the Apache web server finds a dot in the value of the stickyness cookie, it only uses the part behind the dot to search for the route. In order to let Tomcat know about its instance name, you need to set the attribute &lt;code&gt;jvmRoute&lt;/code&gt; inside the Tomcat configuration file &lt;code&gt;conf/server.xml&lt;/code&gt; to the value of the &lt;var&gt;route&lt;/var&gt; of the worker that connects to the respective Tomcat. The name of the session cookie used by Tomcat (and more generally by Java web applications based on servlets) is &lt;code&gt;JSESSIONID&lt;/code&gt; (upper case) but can be configured to something else.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21bd1740535610a6673379d42143c24273907c19" translate="yes" xml:space="preserve">
          <source>Some capabilities of FastCGI authorizers require enablement using this directive instead of &lt;code&gt;AuthBasicProvider&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaaab37dcdc4675895d4b79501fc0af26a3bbc03" translate="yes" xml:space="preserve">
          <source>Some commonly used log format strings are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d57cea2963be6ada485deb8c4460b7ec50be5b" translate="yes" xml:space="preserve">
          <source>Some examples of filtering in the standard Apache distribution are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d7a3d10fe1a9294a9aeb577d180ccf3285bd84" translate="yes" xml:space="preserve">
          <source>Some format string items accept additional parameters in braces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78c5467c413c29bd621c1834199b1801cbfdc24" translate="yes" xml:space="preserve">
          <source>Some hints and tips on security issues in setting up a web server. Some of the suggestions will be general, others specific to Apache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f49de00a162a809ed12731a7be9cdb3d1db6110" translate="yes" xml:space="preserve">
          <source>Some important remarks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abe0d22b3f1e781633d67f993d6dc7b8fdf578d" translate="yes" xml:space="preserve">
          <source>Some modules are only useful for developers and will not be build. when using the module set &lt;em&gt;all&lt;/em&gt;. To build all available modules including developer modules use &lt;em&gt;reallyall&lt;/em&gt;. In addition the &lt;code&gt;&lt;a href=&quot;mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; directives for all built modules can be activated via the configure option &lt;code&gt;--enable-load-all-modules&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408386a148cf0f72903d71be893652c439a52fa5" translate="yes" xml:space="preserve">
          <source>Some modules register additional variables, see e.g. &lt;code&gt;&lt;a href=&quot;mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8784db792a6e079f71059692f32b2cabcbd95a95" translate="yes" xml:space="preserve">
          <source>Some modules, such as &lt;code&gt;&lt;a href=&quot;../mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; and recent development builds of the worker MPM, use APR's atomic API. This API provides atomic operations that can be used for lightweight thread synchronization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04c5709002e0138a56f9e41608a773f24521a42" translate="yes" xml:space="preserve">
          <source>Some of the &lt;code&gt;SSLOpenSSLConfCmd&lt;/code&gt; commands can be used as an alternative to existing directives (such as &lt;code&gt;&lt;a href=&quot;#sslciphersuite&quot;&gt;SSLCipherSuite&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#sslprotocol&quot;&gt;SSLProtocol&lt;/a&gt;&lt;/code&gt;), though it should be noted that the syntax / allowable values for the parameters may sometimes differ.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680a836b5029cd2acd30fc93d31b8061f7b95952" translate="yes" xml:space="preserve">
          <source>Some of the HTTP cookie privacy features are either non-standard, or are not implemented consistently across browsers. The session modules allow you to set cookie parameters, but it makes no guarantee that privacy will be respected by the browser. If security is a concern, use the &lt;code&gt;&lt;a href=&quot;mod_session_crypto&quot;&gt;mod_session_crypto&lt;/a&gt;&lt;/code&gt; to encrypt the contents of the session, or store the session on the server using the &lt;code&gt;&lt;a href=&quot;mod_session_dbd&quot;&gt;mod_session_dbd&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da0c3dd0baaa9828d50a4a9e87e25548af38fe0" translate="yes" xml:space="preserve">
          <source>Some of the allowed syntaxes provided by &lt;code&gt;&lt;a href=&quot;mod_authz_user&quot;&gt;mod_authz_user&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;mod_authz_groupfile&quot;&gt;mod_authz_groupfile&lt;/a&gt;&lt;/code&gt; are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="506cf1f524af1ca76989a54ba8bb0b403e386bdb" translate="yes" xml:space="preserve">
          <source>Some of this code is derived from the free version of the file command originally posted to comp.sources.unix. Copyright info for that program is included below as required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a8ba1825d3954d4c42eb083277cad3f2f3adca" translate="yes" xml:space="preserve">
          <source>Some people find the &quot;~&quot; symbol (which is often encoded on the web as &lt;code&gt;%7e&lt;/code&gt;) to be awkward and prefer to use an alternate string to represent user directories. This functionality is not supported by mod_userdir. However, if users' home directories are structured in a regular way, then it is possible to use the &lt;code&gt;&lt;a href=&quot;mod/mod_alias#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; directive to achieve the desired effect. For example, to make &lt;code&gt;http://www.example.com/upages/user/file.html&lt;/code&gt; map to &lt;code&gt;/home/user/public_html/file.html&lt;/code&gt;, use the following &lt;code&gt;AliasMatch&lt;/code&gt; directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0cb128e8df05cfe5cde90bcc6516dab94175cff" translate="yes" xml:space="preserve">
          <source>Some platforms may have broken sendfile support that the build system did not detect, especially if the binaries were built on another box and moved to such a machine with broken sendfile support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0c79c43fac2bb6efeb2bfa747fb72ccea7e8fa" translate="yes" xml:space="preserve">
          <source>Some request methods such as POST include a request body. The HTTP protocol requires that requests which include a body either use chunked transfer encoding or send a &lt;code&gt;Content-Length&lt;/code&gt; request header. When passing these requests on to the origin server, &lt;code&gt;&lt;a href=&quot;mod_proxy_http&quot;&gt;mod_proxy_http&lt;/a&gt;&lt;/code&gt; will always attempt to send the &lt;code&gt;Content-Length&lt;/code&gt;. But if the body is large and the original request used chunked encoding, then chunked encoding may also be used in the upstream request. You can control this selection using &lt;a href=&quot;../env&quot;&gt;environment variables&lt;/a&gt;. Setting &lt;code&gt;proxy-sendcl&lt;/code&gt; ensures maximum compatibility with upstream servers by always sending the &lt;code&gt;Content-Length&lt;/code&gt;, while setting &lt;code&gt;proxy-sendchunked&lt;/code&gt; minimizes resource usage by using chunked encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7587c3d158be01c887c1833de9d31188eeae74cb" translate="yes" xml:space="preserve">
          <source>Some section types can be nested inside other section types. On the one hand, &lt;code&gt;&lt;a href=&quot;mod/core#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt; can be used inside &lt;code&gt;&lt;a href=&quot;mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt;. On the other hand, &lt;code&gt;&lt;a href=&quot;mod/core#if&quot;&gt;&amp;lt;If&amp;gt;&lt;/a&gt;&lt;/code&gt; can be used inside &lt;code&gt;&lt;a href=&quot;mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;mod/core#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt; sections (but not inside another &lt;code&gt;&lt;a href=&quot;mod/core#if&quot;&gt;&amp;lt;If&amp;gt;&lt;/a&gt;&lt;/code&gt;). The regex counterparts of the named section behave identically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462f8e58334c26ee484f5b0438bd58e567be9c12" translate="yes" xml:space="preserve">
          <source>Some servers, like Microsoft IIS, load the ISAPI extension into the server and keep it loaded until memory usage is too high, or unless configuration options are specified. Apache currently loads and unloads the ISAPI extension each time it is requested, unless the &lt;code&gt;&lt;a href=&quot;#isapicachefile&quot;&gt;ISAPICacheFile&lt;/a&gt;&lt;/code&gt; directive is specified. This is inefficient, but Apache's memory model makes this the most effective method. Many ISAPI modules are subtly incompatible with the Apache server, and unloading these modules helps to ensure the stability of the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e522f368ef39965929697005421133b8f4650a3" translate="yes" xml:space="preserve">
          <source>Some sites with thousands of users use a structured homedir layout, &lt;em&gt;i.e.&lt;/em&gt; each homedir is in a subdirectory which begins (for instance) with the first character of the username. So, &lt;code&gt;/~larry/anypath&lt;/code&gt; is &lt;code&gt;/home/l/larry/public_html/anypath&lt;/code&gt; while &lt;code&gt;/~waldo/anypath&lt;/code&gt; is &lt;code&gt;/home/w/waldo/public_html/anypath&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5402e23d86e593c1ed1b450072ec8f109171b1e" translate="yes" xml:space="preserve">
          <source>Some tools need to be forced to use CRLF, otherwise httpd will return a HTTP 400 response like described in the above use case. For example, the &lt;strong&gt;OpenSSL s_client needs the -crlf parameter to work properly&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e74d3bcf82d38c0dd7281411bf158c3c1a76c9" translate="yes" xml:space="preserve">
          <source>Some useful examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17f65d8b617a249c62984bd9110e4e3c91b2348" translate="yes" xml:space="preserve">
          <source>Some users of DBD authentication in HTTPD 2.2/2.4 have reported that it imposes a problematic load on the database. This is most likely where an HTML page contains hundreds of objects (e.g. images, scripts, etc) each of which requires authentication. Users affected (or concerned) by this kind of problem should use &lt;code&gt;&lt;a href=&quot;mod_authn_socache&quot;&gt;mod_authn_socache&lt;/a&gt;&lt;/code&gt; to cache credentials and take most of the load off the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19974893f6acdfe97ea8729a7efe872e5ddfc803" translate="yes" xml:space="preserve">
          <source>Some users of more heavyweight authentication such as SQL database lookups (&lt;code&gt;&lt;a href=&quot;mod_authn_dbd&quot;&gt;mod_authn_dbd&lt;/a&gt;&lt;/code&gt;) have reported it putting an unacceptable load on their authentication provider. A typical case in point is where an HTML page contains hundreds of objects (images, scripts, stylesheets, media, etc), and a request to the page generates hundreds of effectively-immediate requests for authenticated additional contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c223dbaf934446f8805e8d269975cf6e39f1bb10" translate="yes" xml:space="preserve">
          <source>Some web applications are vulnerable to an information disclosure attack when a TLS connection carries compressed data. For more information, review the details of the &quot;BREACH&quot; family of attacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e0524f8932058bc7be6ec94ecf441b2995771b" translate="yes" xml:space="preserve">
          <source>Some web applications are vulnerable to an information disclosure attack when a TLS connection carries deflate compressed data. For more information, review the details of the &quot;BREACH&quot; family of attacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f501ff4d553c839b09a6eff860bbfa9c5bdcdc" translate="yes" xml:space="preserve">
          <source>Sometimes applications encode the session identifier into the URL like in the following Examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9582886df336bfc7b9e5c175d9ea4fcd98baf6cc" translate="yes" xml:space="preserve">
          <source>Sometimes the MPM needs to perform a lingering close, namely sending back an early error to the client while it is still transmitting data to httpd. Sending the response and then closing the connection immediately is not the correct thing to do since the client (still trying to send the rest of the request) would get a connection reset and could not read the httpd's response. The lingering close is time bounded but it can take relatively long time, so it's offloaded to a worker thread (including the shutdown hooks and real socket close). From 2.4.28 onward this is also the case when connections finally timeout (the listener thread never handles connections besides waiting for and dispatching their events).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef78c220312e90a13624c209723d6f623a336d4" translate="yes" xml:space="preserve">
          <source>Sometimes, the server runs behind a device that processes SSL, such as a reverse proxy, load balancer or SSL offload appliance. When this is the case, specify the &lt;code&gt;https://&lt;/code&gt; scheme and the port number to which the clients connect in the &lt;code&gt;ServerName&lt;/code&gt; directive to make sure that the server generates the correct self-referential URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da13addb000b67d42a6d66391713819e634149f" translate="yes" xml:space="preserve">
          <source>Source</source>
          <target state="translated">Source</target>
        </trans-unit>
        <trans-unit id="421f40ac4b0aac1f78ebf16dfea810d0ee00223b" translate="yes" xml:space="preserve">
          <source>Source charset of files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29b27a1a601065518aac6d29cb78e64d3223d7c" translate="yes" xml:space="preserve">
          <source>Source file name and line number of the log call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21def9fb52234b06f0af1d8890c3a58eb62893a0" translate="yes" xml:space="preserve">
          <source>SourceFile:</source>
          <target state="translated">SourceFile:</target>
        </trans-unit>
        <trans-unit id="6b5e018c94934019c8be3b84c32246d1c5fc88e2" translate="yes" xml:space="preserve">
          <source>Speaking of SSL, you need to be aware that most browsers will speak HTTP/2 only on &lt;code&gt;https:&lt;/code&gt; URLs, so you need a server with SSL support. But not only that, you will need a SSL library that supports the &lt;code&gt;ALPN&lt;/code&gt; extension. If OpenSSL is the library you use, you need at least version 1.0.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d31c224ab1dfb776a8a6a8f02519d77bfffe603a" translate="yes" xml:space="preserve">
          <source>Special IPv6 Considerations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1622c28bba7b661aad991420576b6438f06b8fbb" translate="yes" xml:space="preserve">
          <source>Special Purpose Environment Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e3c7cac16668d71da02d9e73478f4d98aa412fb" translate="yes" xml:space="preserve">
          <source>Special care must be taken when using this directive. If &lt;code&gt;ServerLimit&lt;/code&gt; is set to a value much higher than necessary, extra, unused shared memory will be allocated. If both &lt;code&gt;ServerLimit&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#maxrequestworkers&quot;&gt;MaxRequestWorkers&lt;/a&gt;&lt;/code&gt; are set to values higher than the system can handle, Apache httpd may not start or the system may become unstable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885024cb78f1bd93a75f03e0edb356b56e6a596c" translate="yes" xml:space="preserve">
          <source>Special care must be taken when using this directive. If &lt;code&gt;ThreadLimit&lt;/code&gt; is set to a value much higher than &lt;code&gt;&lt;a href=&quot;#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt;, extra unused shared memory will be allocated. If both &lt;code&gt;ThreadLimit&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt; are set to values higher than the system can handle, Apache httpd may not start or the system may become unstable. Do not set the value of this directive any higher than your greatest predicted setting of &lt;code&gt;&lt;a href=&quot;#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt; for the current run of Apache httpd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3f0946155151c2a6c31c379b8f06066b240d8c" translate="yes" xml:space="preserve">
          <source>Special notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0918fc5f5771c24b728295c780457bc8c4ef7af" translate="yes" xml:space="preserve">
          <source>Specialized File Caching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7565acc0617abc279a8934cb2f57d648297068b4" translate="yes" xml:space="preserve">
          <source>Specialized file caching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0159d7634783125db0d3f0a6509124518a4b1e47" translate="yes" xml:space="preserve">
          <source>Specific IP addresses or ports have precedence over their wildcard equivalents, and any virtual host that matches has precedence over the servers base configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef4ce7b5c0e12e556cbebc1d4214fe78c9801d2" translate="yes" xml:space="preserve">
          <source>Specific packages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7e108aa4eec7b2a39806bd199d6cdc04b2853a" translate="yes" xml:space="preserve">
          <source>Specifies &lt;a href=&quot;#early&quot;&gt;early processing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86c7d2e9d4d9658a65988aa908770b9d528afcd" translate="yes" xml:space="preserve">
          <source>Specifies a filename to record statistics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8646fb4b0f927b793453e866e4bbeb89722cab" translate="yes" xml:space="preserve">
          <source>Specifies a list of client certificate files (DER format) that are used when creating a proxied SSL connection. Each client certificate used by a server must be listed separately in its own &lt;code&gt;.der&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eae44ccbe480bb86f227ca904deb42b59fcc702" translate="yes" xml:space="preserve">
          <source>Specifies a space-separated list of file names to be loaded when the Apache server is launched, and remain loaded until the server is shut down. This directive may be repeated for every ISAPI .dll file desired. The full path name of each file should be specified. If the path name is not absolute, it will be treated relative to &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad0240e07411b60b4aad5d73e5c1c787e67b29e" translate="yes" xml:space="preserve">
          <source>Specifies an expression that controls whether the environment variable that follows will be modified. For information on the expression syntax, see the examples that follow or the full specification at the &lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e0fc4c939167cbada35376d6b65fb84ea1d959" translate="yes" xml:space="preserve">
          <source>Specifies an optional SQL query to use after successful login (or logout) to redirect the user to a URL, which may be specific to the user. The user's ID will be passed as a single string parameter when the SQL query is executed. It may be referenced within the query statement using a &lt;code&gt;%s&lt;/code&gt; format specifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a53065f0ed447d398a6f9703aea178d9b0d52ba" translate="yes" xml:space="preserve">
          <source>Specifies elements that have URL attributes that should be rewritten using standard &lt;code&gt;&lt;a href=&quot;#proxyhtmlurlmap&quot;&gt;ProxyHTMLURLMap&lt;/a&gt;&lt;/code&gt;s. You will need one &lt;code&gt;ProxyHTMLLinks&lt;/code&gt; directive per element, but it can have any number of attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca544f4280bac1e516634f85f6bdfd19a8849a28" translate="yes" xml:space="preserve">
          <source>Specifies how Apache should encode special characters contained in the variable before outputting them. If set to &lt;code&gt;none&lt;/code&gt;, no encoding will be done. If set to &lt;code&gt;url&lt;/code&gt;, then URL encoding (also known as %-encoding; this is appropriate for use within URLs in links, etc.) will be performed. If set to &lt;code&gt;urlencoded&lt;/code&gt;, application/x-www-form-urlencoded compatible encoding will be performed instead, and should be used with query strings. If set to &lt;code&gt;base64&lt;/code&gt;, base64 encoding will be performed. At the start of an &lt;code&gt;echo&lt;/code&gt; element, the default is set to &lt;code&gt;entity&lt;/code&gt;, resulting in entity encoding (which is appropriate in the context of a block-level HTML element, &lt;em&gt;e.g.&lt;/em&gt; a paragraph of text). This can be changed by adding an &lt;code&gt;encoding&lt;/code&gt; attribute, which will remain in effect until the next &lt;code&gt;encoding&lt;/code&gt; attribute is encountered or the element ends, whichever comes first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35a5fe013beef36c0732691d94d978196c1e4b4" translate="yes" xml:space="preserve">
          <source>Specifies how Apache should encode special characters contained in the variable before setting them. The default is &lt;code&gt;none&lt;/code&gt;, where no encoding will be done. If set to &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;urlencoding&lt;/code&gt;, &lt;code&gt;base64&lt;/code&gt; or &lt;code&gt;entity&lt;/code&gt;, URL encoding, application/x-www-form-urlencoded encoding, base64 encoding or HTML entity encoding will be performed respectively. More than one encoding can be specified by separating with commas. The encoding setting will remain in effect until the next encoding attribute is encountered, or the element ends. The &lt;code&gt;encoding&lt;/code&gt; attribute must &lt;em&gt;precede&lt;/em&gt; the corresponding &lt;code&gt;var&lt;/code&gt; attribute to be effective. Encodings are applied after all decodings have been stripped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af4b2e869d585a9e6012e19f32f482abf46c508" translate="yes" xml:space="preserve">
          <source>Specifies one or more attributes to treat as scripting events and apply &lt;code&gt;&lt;a href=&quot;#proxyhtmlurlmap&quot;&gt;ProxyHTMLURLMap&lt;/a&gt;&lt;/code&gt;s to where enabled. You can specify any number of attributes in one or more &lt;code&gt;ProxyHTMLEvents&lt;/code&gt; directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a41db3578ad041357835496453cdf9c8dc95081" translate="yes" xml:space="preserve">
          <source>Specifies one or more native system environment variables to make available as internal environment variables, which are available to Apache HTTP Server modules as well as propagated to CGI scripts and SSI pages. Values come from the native OS environment of the shell which invoked the &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbd77af42f28995b11d472042b28aca442779f64" translate="yes" xml:space="preserve">
          <source>Specifies the CGI environment variable to change, such as PATH_INFO. If preceded by an exclamation point, the variable will be unset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7e19b2a40ce4210de2412f79f09c98b291f06d" translate="yes" xml:space="preserve">
          <source>Specifies the LDAP objectClass values used to identify if queried directory objects really are group objects (as opposed to user objects) during the &lt;code&gt;Require ldap-group&lt;/code&gt; directive's sub-group processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3fc628ba74a852302f1fae9c1eaae7fa4a81cb" translate="yes" xml:space="preserve">
          <source>Specifies the LDAP server, the base DN, the attribute to use in the search, as well as the extra search filter to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2adbe61c6a67ba57d090ee0dc18615b046e034b4" translate="yes" xml:space="preserve">
          <source>Specifies the SSL/TLS mode to be used when connecting to an LDAP server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ae8b260ef4380e83c9c819776cf52dbd688e0b" translate="yes" xml:space="preserve">
          <source>Specifies the attribute labels, one value per directive line, used to distinguish the members of the current group that are groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0557bbd7467fac8fae43ebdd914e4e3970a36b14" translate="yes" xml:space="preserve">
          <source>Specifies the directory path and file name of the shared memory cache file. If not set, anonymous shared memory will be used if the platform supports it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ffa9240335d56430ebafa6d9ab98af1594bb6d4" translate="yes" xml:space="preserve">
          <source>Specifies the file name suffix for the file containing the meta information. For example, the default values for the two directives will cause a request to &lt;code&gt;DOCUMENT_ROOT/somedir/index.html&lt;/code&gt; to look in &lt;code&gt;DOCUMENT_ROOT/somedir/.web/index.html.meta&lt;/code&gt; and will use its contents to generate additional MIME header information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de8db1cc009a0d8de199c7006af59afc4d32485" translate="yes" xml:space="preserve">
          <source>Specifies the maximum age, in seconds, that a pooled LDAP connection can remain idle and still be available for use. Connections are cleaned up when they are next needed, not asynchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e82423187058fa2b78af7a131aa6c22f2f7234" translate="yes" xml:space="preserve">
          <source>Specifies the maximum number of servers that will be sending heartbeat requests to this server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1291f0d65e411203c835d19faf2f83fbc9a9e233" translate="yes" xml:space="preserve">
          <source>Specifies the maximum size of the primary LDAP cache. This cache contains successful search/binds. Set it to 0 to turn off search/bind caching. The default size is 1024 cached searches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64de54e2e04ee9395196dc56cbe9719950484abb" translate="yes" xml:space="preserve">
          <source>Specifies the maximum sub-group nesting depth that will be evaluated before the user search is discontinued.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3bfd446abd787a07a0707bfad1a3419c0cea02" translate="yes" xml:space="preserve">
          <source>Specifies the name of the directory in which Apache can find meta information files. The directory is usually a 'hidden' subdirectory of the directory that contains the file being accessed. Set to &quot;&lt;code&gt;.&lt;/code&gt;&quot; to look in the same directory as the file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05670c9790ccd16e4ed5e60ed301ae141fdcacbc" translate="yes" xml:space="preserve">
          <source>Specifies the number of bytes to allocate for the shared memory cache. The default is 500kb. If set to 0, shared memory caching will not be used and every HTTPD process will create its own cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0b8e421b7a39d129981fdbc4e501089c328e82" translate="yes" xml:space="preserve">
          <source>Specifies the port and the eDirectory based certificate name that will be used to enable SSL encryption. An optional third parameter also enables mutual authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb5003d6e1ece390ea1fec6c9ef189bd1a9ab1d" translate="yes" xml:space="preserve">
          <source>Specifies the prefix for environment variables set during authorization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b842289764e80c8abe76f7b7be102b52dbcc6a3" translate="yes" xml:space="preserve">
          <source>Specifies the protocol to use. Currently, only &lt;code&gt;ACME&lt;/code&gt; is supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3511622e0dcd81a60774ff570c66b4d7933b414" translate="yes" xml:space="preserve">
          <source>Specifies the replacement value for the preceding environment variable. Backreferences, such as &quot;$1&quot;, can be included from regular expression captures in &lt;var&gt;conditional-expression&lt;/var&gt;. If omitted, the variable is set (or overridden) to an empty string &amp;mdash; but see the Note below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0927acc7a450cdd60c7bdaa24f49f3d9092558" translate="yes" xml:space="preserve">
          <source>Specifies the socket connection timeout in seconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2bffcaaa6c574ae5195a82ad2d92dd13b42e6e" translate="yes" xml:space="preserve">
          <source>Specifies the time (in seconds) that an item in the search/bind cache remains valid. The default is 600 seconds (10 minutes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133e539c52234d80dcd8eb108b7d951f3ad641ab" translate="yes" xml:space="preserve">
          <source>Specifies the time (in seconds) that entries in the operation cache remain valid. The default is 600 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7719057cc042bfe1647174366c2a825c9140f770" translate="yes" xml:space="preserve">
          <source>Specifies the timeout for LDAP search and bind operations, in seconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e600a5709ff150a088ce7d0ae3b64dcae628da" translate="yes" xml:space="preserve">
          <source>Specifies the transformation of the basic authentication username to be used when binding to the LDAP server to perform a DN lookup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba15c00a0d0871a0384b30738e995ae0085fee6" translate="yes" xml:space="preserve">
          <source>Specifies userIDs that are allowed access without password verification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ed0ac5ed9b6d8889b8ff44b267593b25ed8ad0" translate="yes" xml:space="preserve">
          <source>Specifies whether Apache should strip an encoding from the variable before processing the variable further. The default is &lt;code&gt;none&lt;/code&gt;, where no decoding will be done. If set to &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;urlencoded&lt;/code&gt;, &lt;code&gt;base64&lt;/code&gt; or &lt;code&gt;entity&lt;/code&gt;, URL decoding, application/x-www-form-urlencoded decoding, base64 decoding or HTML entity decoding will be performed respectively. More than one decoding can be specified by separating with commas. The decoding setting will remain in effect until the next decoding attribute is encountered, or the element ends. The &lt;code&gt;decoding&lt;/code&gt; attribute must &lt;em&gt;precede&lt;/em&gt; the corresponding &lt;code&gt;var&lt;/code&gt; attribute to be effective.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c723b1f8dc4a1da4484d613cb98449c0dd1feb7b" translate="yes" xml:space="preserve">
          <source>Specifies whether Apache should strip an encoding from the variable before processing the variable further. The default is &lt;code&gt;none&lt;/code&gt;, where no decoding will be done. If set to &lt;code&gt;url&lt;/code&gt;, then URL decoding (also known as %-encoding; this is appropriate for use within URLs in links, etc.) will be performed. If set to &lt;code&gt;urlencoded&lt;/code&gt;, application/x-www-form-urlencoded compatible encoding (found in query strings) will be stripped. If set to &lt;code&gt;base64&lt;/code&gt;, base64 will be decoded, and if set to &lt;code&gt;entity&lt;/code&gt;, HTML entity encoding will be stripped. Decoding is done prior to any further encoding on the variable. Multiple encodings can be stripped by specifying more than one comma separated encoding. The decoding setting will remain in effect until the next decoding attribute is encountered, or the element ends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73b577be332cd88cc8d713984a963ce65553042" translate="yes" xml:space="preserve">
          <source>Specifies whether blank passwords are allowed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839334e03545f1128fc2d12a1114513b5376bcfb" translate="yes" xml:space="preserve">
          <source>Specifies whether the filter changes the content, including possibly the content length. The &quot;no&quot; argument is supported in 2.4.7 and later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9401020029f84b9cffde9ab3f1985e0592d131c" translate="yes" xml:space="preserve">
          <source>Specifies whether the user must specify an email address as the password. This prohibits blank passwords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65a74e145e0a91991616bd8d61863311ff96e10" translate="yes" xml:space="preserve">
          <source>Specifies whether to force the verification of a server certificate when establishing an SSL connection to the LDAP server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3443954c3b67c52aa680111ab3fa2f097d631467" translate="yes" xml:space="preserve">
          <source>Specifies whether to use the user DN or the username when doing comparisons for the &lt;code&gt;Require ldap-group&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f500dd06eaae3ddb889e95fc4d0e4f393f94e2" translate="yes" xml:space="preserve">
          <source>Specifies which LDAP objectClass values identify directory objects that are groups during sub-group processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49e2c45f12d3c3910be05a9fa2b4b8ad4fb755f" translate="yes" xml:space="preserve">
          <source>Specify &lt;code&gt;None&lt;/code&gt; to disable a provider enabled with this directive in an outer scope, such as in a parent directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc5dea24c33724408013c3988cd2a31e379eaf3" translate="yes" xml:space="preserve">
          <source>Specify &lt;var&gt;limit&lt;/var&gt; as the total disk cache inode limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3ef05dc41a16451cd78b0cac83f0aeec13a985" translate="yes" xml:space="preserve">
          <source>Specify &lt;var&gt;limit&lt;/var&gt; as the total disk cache size limit. The value is expressed in bytes by default (or attaching &lt;code&gt;B&lt;/code&gt; to the number). Attach &lt;code&gt;K&lt;/code&gt; for Kbytes or &lt;code&gt;M&lt;/code&gt; for MBytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd534fff4e84b33ab2f2a15a59a1643625b791a" translate="yes" xml:space="preserve">
          <source>Specify &lt;var&gt;path&lt;/var&gt; as the root directory of the disk cache. This should be the same value as specified with the &lt;code&gt;&lt;a href=&quot;../mod/mod_cache_disk#cacheroot&quot;&gt;CacheRoot&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10bd836c8ec4f82b47760756f322bb901ccb9f10" translate="yes" xml:space="preserve">
          <source>Specify &lt;var&gt;pidfile&lt;/var&gt; as the name of the file to write the process ID to when daemonized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdcfcd69bbaf0bc1c1e4631b545bbe23b09789c0" translate="yes" xml:space="preserve">
          <source>Specify &lt;var&gt;round&lt;/var&gt; as the amount to round sizes up to, to compensate for disk block sizes. Set to the block size of the cache partition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5482bf7af3edd4d6bbe7a7f504e9d60b85a27e05" translate="yes" xml:space="preserve">
          <source>Specify HTML elements that have URL attributes to be rewritten.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093d6cbd8a970d762957e352304fce617bd61f27" translate="yes" xml:space="preserve">
          <source>Specify SSL/TLS cipher suite (See openssl ciphers)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4f5b2971f128b4a32bedb62903c5c3af99b62c" translate="yes" xml:space="preserve">
          <source>Specify SSL/TLS protocol (SSL2, SSL3, TLS1, TLS1.1, TLS1.2, or ALL). TLS1.1 and TLS1.2 support available in 2.4.4 and later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f553322d644e3df0ce8365ee31c6b63da3117b2c" translate="yes" xml:space="preserve">
          <source>Specify a charset for mod_proxy_html output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc7c579a1bfc09f73c9b75461ca97344d9bb987" translate="yes" xml:space="preserve">
          <source>Specify a context string for use in the cache key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f11d6317d40e1111cf8c438ff9e28eea1ad3a47" translate="yes" xml:space="preserve">
          <source>Specify a query to look up a login page for the user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272cf25e418076a6892cbc31f7dbb5ab13fbf8f3" translate="yes" xml:space="preserve">
          <source>Specify a timeout after which a gracefully shutdown server will exit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2849c1ca6c1c8ddf3823b933c7cc271f0d6f930e" translate="yes" xml:space="preserve">
          <source>Specify an SQL driver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add6eb26dea1f0f592e769911fec590f283453b4" translate="yes" xml:space="preserve">
          <source>Specify attributes to treat as scripting events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96dd0aecd7b735496fd5e0031993a227919a65eb" translate="yes" xml:space="preserve">
          <source>Specify character set translation or recoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a535d01e4ade814c19e5126e512e7d1e62a164dd" translate="yes" xml:space="preserve">
          <source>Specify location of a log file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f287384ee3e7e32fce7343c6b44156c1df04e77f" translate="yes" xml:space="preserve">
          <source>Specify that the markup parser should start at the first instance of any of the elements specified. This can be used as a workaround where a broken backend inserts leading junk that messes up the parser (&lt;a href=&quot;http://bahumbug.wordpress.com/2006/10/12/mod_proxy_html-revisited/&quot;&gt;example here&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b90bf93feefd11b4a93c7b5ab9930634433832" translate="yes" xml:space="preserve">
          <source>Specify the DBM type to be used for the output. If not specified, will use the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR&lt;/a&gt; Default. Available types are: &lt;code&gt;GDBM&lt;/code&gt; for GDBM files, &lt;code&gt;SDBM&lt;/code&gt; for SDBM files, &lt;code&gt;DB&lt;/code&gt; for berkeley DB files, &lt;code&gt;NDBM&lt;/code&gt; for NDBM files, &lt;code&gt;default&lt;/code&gt; for the default DBM type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ceb9564aa5e180f83393aa4bad44611d8b85be" translate="yes" xml:space="preserve">
          <source>Specify the SQL Query for the required operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05dcbd3afc518d9f07871d8ba4b0116c2c92ecac" translate="yes" xml:space="preserve">
          <source>Specify the authn provider on &lt;code&gt;&lt;a href=&quot;mod_auth_basic#authbasicprovider&quot;&gt;AuthBasicProvider&lt;/a&gt;&lt;/code&gt; and the authz provider on &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906258aec5a5d54c6b314d6d8bd8b486d3771e42" translate="yes" xml:space="preserve">
          <source>Specify the authnz provider on both &lt;code&gt;AuthBasicProvider&lt;/code&gt; and &lt;code&gt;Require&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d6007bb3450e21523925d9795c9c02de1738bc" translate="yes" xml:space="preserve">
          <source>Specify the base path for resolving relative paths for mod_lua directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498eed92bcea4def5466d845596370b22f42cef1" translate="yes" xml:space="preserve">
          <source>Specify the base path which will be used to evaluate all relative paths within mod_lua. If not specified they will be resolved relative to the current working directory, which may not always work well for a server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db53d5332bb5426d5d6295e9480646477d30005" translate="yes" xml:space="preserve">
          <source>Specify the behavior of the in-memory code cache. The default is stat, which stats the top level script (not any included ones) each time that file is needed, and reloads it if the modified time indicates it is newer than the one it has already loaded. The other values cause it to keep the file cached forever (don't stat and replace) or to never cache the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f660716fd3a493eeaff411f43d04155fe1941d" translate="yes" xml:space="preserve">
          <source>Specify the life cycle scope of the Lua interpreter which will be used by handlers in this &quot;Directory.&quot; The default is &quot;once&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a949c009d41578995b08530f49d2750a692a5d5c" translate="yes" xml:space="preserve">
          <source>Specify the type of backend FastCGI application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b52702879da83a35f5a3b3d61432b8f4a791dba" translate="yes" xml:space="preserve">
          <source>Specify what modem standard you wish to simulate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b921fe0087289f0cc7bb36cd0052a32731fd6e4" translate="yes" xml:space="preserve">
          <source>Specify which authn provider(s) to cache for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f34682129ac7178ee897f0cae88b982947ce6a8" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;connection&lt;/code&gt; or &lt;code&gt;request&lt;/code&gt; as first parameter allows to specify additional formats, causing additional information to be logged when the first message is logged for a specific connection or request, respectively. This additional information is only logged once per connection/request. If a connection or request is processed without causing any log message, the additional information is not logged either.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b1c9a38da1e5291c0b08c885b4c5f27a4b8395" translate="yes" xml:space="preserve">
          <source>Specifying a level without a module name will reset the level for all modules to that level. Specifying a level with a module name will set the level for that module only. It is possible to use the module source file name, the module identifier, or the module identifier with the trailing &lt;code&gt;_module&lt;/code&gt; omitted as module specification. This means the following three specifications are equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0049d4e40acda8f1174604010897524ef6fa8ea7" translate="yes" xml:space="preserve">
          <source>Specifying the protocol with Listen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7351bf22fb7bd6f9cc6f6c5761c83ed2596040b1" translate="yes" xml:space="preserve">
          <source>Specifying the same charset for both &lt;code&gt;&lt;a href=&quot;#charsetsourceenc&quot;&gt;CharsetSourceEnc&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#charsetdefault&quot;&gt;CharsetDefault&lt;/a&gt;&lt;/code&gt; disables translation. The charset need not match the charset of the response, but it must be a valid charset on the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8155e48925c0ebd301101594f5c7a20ecbe73575" translate="yes" xml:space="preserve">
          <source>Split a multi-vhost logfile into per-host logfiles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6552a72b6c034a6144bd9b2fc7fad9da3fcaa050" translate="yes" xml:space="preserve">
          <source>Split off from &lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt; in 2.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0261adc8698504c0c10e0f494114400d4f744351" translate="yes" xml:space="preserve">
          <source>Splitting up your log files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de45337ae8417ab949b298355998b97c9459bcd" translate="yes" xml:space="preserve">
          <source>Squid %2f hack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189cc40c2206ee1b649acd5022b1604d4d7fcb1a" translate="yes" xml:space="preserve">
          <source>Stale</source>
          <target state="translated">Stale</target>
        </trans-unit>
        <trans-unit id="1fa3d0db3fc8ebe44ba8bba95e769394f2a686a7" translate="yes" xml:space="preserve">
          <source>Standalone Login</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6154214b2211297656ff7105f58d3a7f71331e" translate="yes" xml:space="preserve">
          <source>Standalone applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc1a6dc394716340076ffed2d7b566a9bafa278" translate="yes" xml:space="preserve">
          <source>Standard CGI Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39056ea49badd85360cb4e09f41e89779f2bf7ec" translate="yes" xml:space="preserve">
          <source>Standard cookie parameters can be specified after the name of the cookie, as in the example below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952f375412e89ff213a8aca383d18e5691354347" translate="yes" xml:space="preserve">
          <source>Start</source>
          <target state="translated">Start</target>
        </trans-unit>
        <trans-unit id="b2c302ae81f64126b42976070470ab17297c6669" translate="yes" xml:space="preserve">
          <source>Start a FastCGI program</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70f5b3019d2c25e9eb9f58339f1f766482a0e7f" translate="yes" xml:space="preserve">
          <source>Start the Apache &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; daemon. Gives an error if it is already running. This is equivalent to &lt;code&gt;apachectl -k start&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98838b45d7a3a2d5ad868b8c6467d60a3881225e" translate="yes" xml:space="preserve">
          <source>Start the server and try to reproduce the core-dump. For this you may want to use a directive like ``&lt;code&gt;CoreDumpDirectory /tmp&lt;/code&gt;'' to make sure that the core-dump file can be written. This should result in a &lt;code&gt;/tmp/core&lt;/code&gt; or &lt;code&gt;/tmp/httpd.core&lt;/code&gt; file. If you don't get one of these, try running your server under a non-root UID. Many modern kernels do not allow a process to dump core after it has done a &lt;code&gt;setuid()&lt;/code&gt; (unless it does an &lt;code&gt;exec()&lt;/code&gt;) for security reasons (there can be privileged information left over in memory). If necessary, you can run &lt;code&gt;/path/to/httpd -X&lt;/code&gt; manually to force Apache to not fork.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939a5d01e424f8d789b0f033929adc59f5bb5be5" translate="yes" xml:space="preserve">
          <source>Start the server as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d92e169bccd3e381f7931c03985d6bff1cf3d8" translate="yes" xml:space="preserve">
          <source>Start with the set of directives in the &lt;code&gt;AllowOverrideList&lt;/code&gt; for the directory in question. (By default, this is set to &lt;code&gt;None&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2db080dea223a43dc2abc6efb45b821153d889a" translate="yes" xml:space="preserve">
          <source>StartServers Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0172151abcefcdd3a2067bb84ba4cd2ddbf9860" translate="yes" xml:space="preserve">
          <source>StartThreads Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7725e05476ed2d82c0f887aff3382e0fb31309ae" translate="yes" xml:space="preserve">
          <source>Starting</source>
          <target state="translated">Starting</target>
        </trans-unit>
        <trans-unit id="826d71707f778166abba98a7f461e8dea9ed61dc" translate="yes" xml:space="preserve">
          <source>Starting Apache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33816d2e1e3c9884d0c8ddbb624fdd99ac638230" translate="yes" xml:space="preserve">
          <source>Starting at Boot-Time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2edc1ca06d77c001bb10a1f7109962d0b3451678" translate="yes" xml:space="preserve">
          <source>Starting with version 2.4, Apache is more strict about how HTTP headers are converted to environment variables in &lt;code&gt;&lt;a href=&quot;mod/mod_cgi&quot;&gt;mod_cgi &lt;/a&gt;&lt;/code&gt; and other modules: Previously any invalid characters in header names were simply translated to underscores. This allowed for some potential cross-site-scripting attacks via header injection (see &lt;a href=&quot;http://events.ccc.de/congress/2007/Fahrplan/events/2212.en.html&quot;&gt; Unusual Web Bugs&lt;/a&gt;, slide 19/20).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09842a1d8822392a62578f5e59ca4d833e6560b4" translate="yes" xml:space="preserve">
          <source>Startup will fail if this directive is specified but the suEXEC feature is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b19f84098767ca9c68285f81a77d6c5cd992ab0" translate="yes" xml:space="preserve">
          <source>State/Province</source>
          <target state="translated">State/Province</target>
        </trans-unit>
        <trans-unit id="a2a517187a4753bb529c023147eadf6ed87eb61f" translate="yes" xml:space="preserve">
          <source>Static content is things like HTML files, image files, CSS files, and other files that reside in the filesystem. The &lt;code&gt;&lt;a href=&quot;mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; directive specifies where in your filesystem you should place these files. This directive is either set globally, or per virtual host. Look in your configuration file(s) to determine how this is set for your server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">Status</target>
        </trans-unit>
        <trans-unit id="84a8ff1906d8b46e3b131db7cf728bada7bc040f" translate="yes" xml:space="preserve">
          <source>Status can be set (which is the default) by prepending with '+' or cleared by prepending with '-'. Thus, a setting of 'S-E' sets this worker to Stopped and clears the in-error flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4bf8c19a4fe4f1c364553ba868df7d1abd1954" translate="yes" xml:space="preserve">
          <source>Status of the cached response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569e4706b53c9a48073cb36fa03ef22559a778fa" translate="yes" xml:space="preserve">
          <source>Status. For requests that have been internally redirected, this is the status of the &lt;em&gt;original&lt;/em&gt; request. Use &lt;code&gt;%&amp;gt;s&lt;/code&gt; for the final status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11dc9e1952928d4ca947651277656b4d8b55fffc" translate="yes" xml:space="preserve">
          <source>Status:</source>
          <target state="translated">Status:</target>
        </trans-unit>
        <trans-unit id="fba1099a29a76ed36366e658fcfa663ccdbca667" translate="yes" xml:space="preserve">
          <source>Still with us? Yes? Good. Let's move on!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b801876e3a71399dcf7cb43aeb1d81ba7e477d" translate="yes" xml:space="preserve">
          <source>Stop Now</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed38ad82ac3722e4ee03f6f7c2e7b3bad705cd98" translate="yes" xml:space="preserve">
          <source>Stop the rewriting process immediately and don't apply any more rules. Also prevents further execution of rewrite rules in per-directory and .htaccess context. (Available in 2.3.9 and later) &lt;em&gt;&lt;a href=&quot;../rewrite/flags#flag_end&quot;&gt;details ...&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f8e71a52d533b958d83965a15a5af950339b0e" translate="yes" xml:space="preserve">
          <source>Stop the rewriting process immediately and don't apply any more rules. Especially note caveats for per-directory and .htaccess context (see also the END flag). &lt;em&gt;&lt;a href=&quot;../rewrite/flags#flag_l&quot;&gt;details ...&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f2fd0bd4bb317f01fdde94bdaa604fcc7fce36" translate="yes" xml:space="preserve">
          <source>Stopping and Restarting Apache HTTP Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8703d6c789157f1e43b3f1d81e9a5c78fa54142" translate="yes" xml:space="preserve">
          <source>Stopping or Restarting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2120471e16d32d9719e4b0482ac3f1957056e4d" translate="yes" xml:space="preserve">
          <source>Stops the Apache &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; daemon. This is equivalent to &lt;code&gt;apachectl -k stop&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5656b47f25ff321c80bfd7a90e046695c6ee45" translate="yes" xml:space="preserve">
          <source>Store an object in a cache instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc5cc1f6b9125bff519ec6e7f88df63135c5963" translate="yes" xml:space="preserve">
          <source>Store the byte count of the filter's input stream in the note.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1371a7ea51ec58a481c9b804664afd35dc0ac00d" translate="yes" xml:space="preserve">
          <source>Store the byte count of the filter's output stream in the note.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c95bc9deef06f6f3bc0613244fa0e7f3df095f" translate="yes" xml:space="preserve">
          <source>Store the compression ratio (&lt;code&gt;output/input * 100&lt;/code&gt;) in the note. This is the default, if the &lt;var&gt;type&lt;/var&gt; argument is omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444ea41ea8576fb19575bdebd4c29ac402c33501" translate="yes" xml:space="preserve">
          <source>Stream Ciphers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc3277d8d7e359b579684391a2b11ad0cb72d0c" translate="yes" xml:space="preserve">
          <source>Strictly limiting access is essential if you are using a forward proxy (using the &lt;code&gt;&lt;a href=&quot;#proxyrequests&quot;&gt;ProxyRequests&lt;/a&gt;&lt;/code&gt; directive). Otherwise, your server can be used by any client to access arbitrary hosts while hiding his or her true identity. This is dangerous both for your network and for the Internet at large. When using a reverse proxy (using the &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; directive with &lt;code&gt;ProxyRequests Off&lt;/code&gt;), access control is less critical because clients can only contact the hosts that you have specifically configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0d3884cf8368ccb868c77c772edf589a0d42a4" translate="yes" xml:space="preserve">
          <source>Strict|Unsafe</source>
          <target state="translated">Strict|Unsafe</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="b88d9965e6532b8db67fc33945e787f6f1d43992" translate="yes" xml:space="preserve">
          <source>String displayed when an unset variable is echoed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491633bf08f900be922604e010e165fa102e637f" translate="yes" xml:space="preserve">
          <source>String does not match the regular expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebceef310a77c35fb6fd882bccb7a4d7d5f0e995" translate="yes" xml:space="preserve">
          <source>String equality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36712c9e9a41630a933193514a693150d61db72c" translate="yes" xml:space="preserve">
          <source>String greater than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462f1121477b34ead0219208321cd8510ba17ff3" translate="yes" xml:space="preserve">
          <source>String greater than or equal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6a746e17d253ccf20e14e30128dcece65b4164" translate="yes" xml:space="preserve">
          <source>String inequality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc055eede79c7407a84a44c9481d75091299f3c" translate="yes" xml:space="preserve">
          <source>String less than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ddcf1bd34c9eb59fcbf95877c01567bf58b9f6" translate="yes" xml:space="preserve">
          <source>String less than or equal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c8e6469f00719e9ee972b642c8887c4010ad780" translate="yes" xml:space="preserve">
          <source>String matches the regular expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad01d584c68d6d7c3a279fa713295feefc707663" translate="yes" xml:space="preserve">
          <source>String that ends an include element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a8b5c0085c8d622783c7a5ac20e66ee1dd8a6d" translate="yes" xml:space="preserve">
          <source>String that starts an include element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396d6109eb6542f10f79be61a5bb315ee2c291e5" translate="yes" xml:space="preserve">
          <source>String to use as attributes for &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;. Attributes are inserted &lt;code&gt;&amp;lt;table here &amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452a9886e9178410c89c9dc7a81c7f686dabe521" translate="yes" xml:space="preserve">
          <source>String to use as attributes for &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88196ef18edcb1ce32b9db6ea490eeaf523e4cf8" translate="yes" xml:space="preserve">
          <source>String to use as attributes for &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a734d9d879a80c775179be72cd4996dc51d36fa" translate="yes" xml:space="preserve">
          <source>String-valued expressions can be used to reference per-request variables, including backreferences to named regular expressions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb0ef6cbcc66ede2aead875153717ee08848738" translate="yes" xml:space="preserve">
          <source>Strong cryptography using the Secure Sockets Layer (SSL) and Transport Layer Security (TLS) protocols</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adedf57ac3c7cad3edcdfc439602f845d954237b" translate="yes" xml:space="preserve">
          <source>Stronghold 2.x compatibility:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e3c2105fb07fe4d4f4ab40b01e127a295961e3" translate="yes" xml:space="preserve">
          <source>Structured Userdirs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d466aad5af4aaae1b21b1d36b3be9c2df9c9c8b7" translate="yes" xml:space="preserve">
          <source>SubNet</source>
          <target state="translated">SubNet</target>
        </trans-unit>
        <trans-unit id="8d183dbdcea3b29906090bd83fa6fa37923cc8ec" translate="yes" xml:space="preserve">
          <source>Subject</source>
          <target state="translated">Subject</target>
        </trans-unit>
        <trans-unit id="bb39a8abfc4d28f2b1765bc4ea619755857dc879" translate="yes" xml:space="preserve">
          <source>Subject DN in client's certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2b4c6a6d29da1784a76079485e07bef46fa63c" translate="yes" xml:space="preserve">
          <source>Subject DN in server's certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="debc1981f12095efa0678f8358581ba0e204abf8" translate="yes" xml:space="preserve">
          <source>Subsequent parameters can appear in any order and define the external command to run and certain other characteristics. The only required parameter is &lt;code&gt;cmd=&lt;/code&gt;. These parameters are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8017bd7de9961cf42f59abc587d0495a9d25c2a9" translate="yes" xml:space="preserve">
          <source>Substitute</source>
          <target state="translated">Substitute</target>
        </trans-unit>
        <trans-unit id="1836baf3ac98fc16d86f6f2db4005031f67c6419" translate="yes" xml:space="preserve">
          <source>Substitute Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe65802f9300e3b8f867b5ae1789e512df911b5" translate="yes" xml:space="preserve">
          <source>SubstituteInheritBefore</source>
          <target state="translated">SubstituteInheritBefore</target>
        </trans-unit>
        <trans-unit id="a635c504ccc27871feb03c094cfecf2b719c9e51" translate="yes" xml:space="preserve">
          <source>SubstituteInheritBefore Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c85a74df2591d97fd5f5f9e5dc769edc8b78be2" translate="yes" xml:space="preserve">
          <source>SubstituteMaxLineLength</source>
          <target state="translated">SubstituteMaxLineLength</target>
        </trans-unit>
        <trans-unit id="9a0286a374844f1e31792ba6b66961ba55fedb4f" translate="yes" xml:space="preserve">
          <source>SubstituteMaxLineLength Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9462e14a8861a35da9ebf249a2eddfe2743f95d1" translate="yes" xml:space="preserve">
          <source>Suexec</source>
          <target state="translated">Suexec</target>
        </trans-unit>
        <trans-unit id="f0ec815d397c4dbb4a149c8b0581fe63923e2a91" translate="yes" xml:space="preserve">
          <source>Suexec Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b9c03e5c59a49c945d712e2779d645d0723f8d" translate="yes" xml:space="preserve">
          <source>Suexec Execution for CGI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc8b21e582fc6c842c31da43263f384e44e580e" translate="yes" xml:space="preserve">
          <source>SuexecUserGroup Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="92bde397aad68445673afee0c771d951c9cb41a8" translate="yes" xml:space="preserve">
          <source>Supply BASIC Authentication credentials to a proxy en-route. The username and password are separated by a single &lt;code&gt;:&lt;/code&gt; and sent on the wire base64 encoded. The string is sent regardless of whether the proxy needs it (&lt;em&gt;i.e.&lt;/em&gt;, has sent an 407 proxy authentication needed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45db4fc20d1b1c5473c47742b2550eb9e645e927" translate="yes" xml:space="preserve">
          <source>Supply BASIC Authentication credentials to the server. The username and password are separated by a single &lt;code&gt;:&lt;/code&gt; and sent on the wire base64 encoded. The string is sent regardless of whether the server needs it (&lt;em&gt;i.e.&lt;/em&gt;, has sent an 401 authentication needed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d422b6afceeb7e7b1a3d4ee8ccc8c6d7cca5aa" translate="yes" xml:space="preserve">
          <source>Support for LDAP over SSL (requires the Netscape SDK) or TLS (requires the OpenLDAP 2.x SDK or Novell LDAP SDK).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53eb349310b5af3ae6e21cb9e98a094fb5437f76" translate="yes" xml:space="preserve">
          <source>Support for Solaris privileges and for running virtual hosts under different user IDs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fcaec8930f169a495ae657ba1bae48676287afb" translate="yes" xml:space="preserve">
          <source>Support for digest authentication using AuthDigestProvider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916d4e99cb348a6ac6a61c5b89e84e13a7278123" translate="yes" xml:space="preserve">
          <source>Support for mod_authn_socache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a771ff372ff429ba0d24e74bd7f02de62317ced" translate="yes" xml:space="preserve">
          <source>Support for request buffering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06acb1428be23ba3cfead89c2b48a6d6e219124" translate="yes" xml:space="preserve">
          <source>Support for the HTTP/2 transport layer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3090fc7916b4cd17eaa9bdfa16e75928e5b9b4da" translate="yes" xml:space="preserve">
          <source>Support for this tunable is uncommon in LDAP SDKs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86357f3df6067cf4701809cd469c16322e01a41" translate="yes" xml:space="preserve">
          <source>Supported Encodings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760c03263294d86c067e9bd3006682a91acba9f7" translate="yes" xml:space="preserve">
          <source>Supporting tools for the webserver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d14d15eba40813e54a81776fdbdfeebb0a1c12b" translate="yes" xml:space="preserve">
          <source>Suppose Alice wants to send a message to her bank to transfer some money. Alice would like the message to be private, since it will include information such as her account number and transfer amount. One solution is to use a cryptographic algorithm, a technique that would transform her message into an encrypted form, unreadable until it is decrypted. Once in this form, the message can only be decrypted by using a secret key. Without the key the message is useless: good cryptographic algorithms make it so difficult for intruders to decode the original text that it isn't worth their effort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347c5871f99d26e72ad4bc8bfe7a4563b9d13e4e" translate="yes" xml:space="preserve">
          <source>Suppose that &lt;code&gt;www.example.dom&lt;/code&gt; has address 192.0.2.1. Then consider this configuration snippet:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18bc3125d66b04b98cda6d15b4905235f1d7be39" translate="yes" xml:space="preserve">
          <source>Suppose that time repeats itself for some reason. That is, suppose that the system's clock is screwed up and it revisits a past time (or it is too far forward, is reset correctly, and then revisits the future time). In this case we can easily show that we can get pid and time stamp reuse. The choice of initializer for the counter is intended to help defeat this. Note that we really want a random number to initialize the counter, but there aren't any readily available numbers on most systems (&lt;em&gt;i.e.&lt;/em&gt;, you can't use rand() because you need to seed the generator, and can't seed it with the time because time, at least at one second resolution, has repeated itself). This is not a perfect defense.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70e56b7cf8749233a9e5bf1ca84a767d778b456d" translate="yes" xml:space="preserve">
          <source>Suppose that you've assigned 192.0.2.1 to &lt;code&gt;www.example1.dom&lt;/code&gt; and 192.0.2.2 to &lt;code&gt;www.example2.dom&lt;/code&gt;. Furthermore, suppose that &lt;code&gt;example1.dom&lt;/code&gt; has control of their own DNS. With this config you have put &lt;code&gt;example1.dom&lt;/code&gt; into a position where they can steal all traffic destined to &lt;code&gt;example2.dom&lt;/code&gt;. To do so, all they have to do is set &lt;code&gt;www.example1.dom&lt;/code&gt; to 192.0.2.2. Since they control their own DNS you can't stop them from pointing the &lt;code&gt;www.example1.dom&lt;/code&gt; record wherever they wish.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b15db959a05cb147025ea5e7046930040d35207" translate="yes" xml:space="preserve">
          <source>Suppose the local server has address &lt;code&gt;http://example.com/&lt;/code&gt;; then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c2a943fd78f3edce7c2cd9207334a9da3e238f" translate="yes" xml:space="preserve">
          <source>Suppose we want to downsample all web images, and have filters for GIF, JPEG and PNG.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a4f2a7cdac1b91699710296dfc1985b52a4ef7f" translate="yes" xml:space="preserve">
          <source>SuppressColumnSorting</source>
          <target state="translated">SuppressColumnSorting</target>
        </trans-unit>
        <trans-unit id="ec98e7072686b13f59fe9c925649bdfe9ce2ea86" translate="yes" xml:space="preserve">
          <source>SuppressDescription</source>
          <target state="translated">SuppressDescription</target>
        </trans-unit>
        <trans-unit id="2f180a7e085f3f92a589636097c52033aea4117d" translate="yes" xml:space="preserve">
          <source>SuppressHTMLPreamble</source>
          <target state="translated">SuppressHTMLPreamble</target>
        </trans-unit>
        <trans-unit id="43fc2d0dcbd432a96ebb6142c258bf698c262d65" translate="yes" xml:space="preserve">
          <source>SuppressIcon</source>
          <target state="translated">SuppressIcon</target>
        </trans-unit>
        <trans-unit id="51222ce49e0ae946be3f99b1acdd3702e1856b7b" translate="yes" xml:space="preserve">
          <source>SuppressLastModified</source>
          <target state="translated">SuppressLastModified</target>
        </trans-unit>
        <trans-unit id="eb247152a26274ba6f8d2598014a0498daed4658" translate="yes" xml:space="preserve">
          <source>SuppressRules</source>
          <target state="translated">SuppressRules</target>
        </trans-unit>
        <trans-unit id="568ea9004bc504a165500883aae1f0e11a7ec7df" translate="yes" xml:space="preserve">
          <source>SuppressSize</source>
          <target state="translated">SuppressSize</target>
        </trans-unit>
        <trans-unit id="59dcd9e54c1bec95016c22a8252fdad850d0570f" translate="yes" xml:space="preserve">
          <source>Swap the contents of the hold buffer and the current line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088a7e1a0e47fa33eb1886d5998b621400ed205b" translate="yes" xml:space="preserve">
          <source>Switch User For Exec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690a5b69a3b94adb33e028240e40771c01b830e0" translate="yes" xml:space="preserve">
          <source>Symbolic links would be another way to accomplish the same thing, if you have &lt;code&gt;Options FollowSymLinks&lt;/code&gt; enabled on your server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1981108dbc00bb426ba0c6e319e75cfa667a67" translate="yes" xml:space="preserve">
          <source>Symbols in the executable program are usually not referenced by the DSO (because it's a reusable library of general code) and hence no further resolving has to be done. The executable program has no need to do anything on its own to use the symbols from the DSO because the complete resolving is done by the Unix loader. (In fact, the code to invoke &lt;code&gt;ld.so&lt;/code&gt; is part of the run-time startup code which is linked into every executable program which has been bound non-static). The advantage of dynamic loading of common library code is obvious: the library code needs to be stored only once, in a system library like &lt;code&gt;libc.so&lt;/code&gt;, saving disk space for every program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01493383e49bc005923211d82779d32a9b9265ee" translate="yes" xml:space="preserve">
          <source>Synonymous with &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="c8973957caec97064f3bf09cdb857f81d4b7869d" translate="yes" xml:space="preserve">
          <source>Syntax of the Configuration Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b7983d2e504250a1564052087eb7f06102660f" translate="yes" xml:space="preserve">
          <source>Syntax of the RewriteCond directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf994d087738b4ce5f757c6dee45b7a21852861" translate="yes" xml:space="preserve">
          <source>Syntax of the RewriteRule directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de8dba368e7754dc199c99b017f5c51265ee8dc" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Syntax:</target>
        </trans-unit>
        <trans-unit id="e605221530dd11eac71c59aed319c59208fb1125" translate="yes" xml:space="preserve">
          <source>Synthesize &quot;tryLater&quot; responses for failed OCSP stapling queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801042e2e09887feac19531ab08407c86bfe1a96" translate="yes" xml:space="preserve">
          <source>System memory isn't cheap though, byte for byte it's by far the most expensive type of storage and it's important to ensure that it is used efficiently. By caching files in memory you decrease the amount of memory available on the system. As we'll see, in the case of operating system caching, this is not so much of an issue, but when using httpd's own in-memory caching it is important to make sure that you do not allocate too much memory to a cache. Otherwise the system will be forced to swap out memory, which will likely degrade performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8652f6cf8392638c00eff2da783b240d56a727ce" translate="yes" xml:space="preserve">
          <source>System requirements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a58b1c46cb7535ef2af1dbd65753712abd1f27" translate="yes" xml:space="preserve">
          <source>System types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0324c1bcc89db0498c54e9d4881d23f6642052a8" translate="yes" xml:space="preserve">
          <source>System unique thread ID of current thread (the same ID as displayed by e.g. &lt;code&gt;top&lt;/code&gt;; currently Linux only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1787b4902eb05f1a53e452bddea036aa26cdac" translate="yes" xml:space="preserve">
          <source>S|skip</source>
          <target state="translated">S|skip</target>
        </trans-unit>
        <trans-unit id="f544fb304c83e23652a63e1bb1b28f4fcc7f6ac0" translate="yes" xml:space="preserve">
          <source>TCP</source>
          <target state="translated">TCP</target>
        </trans-unit>
        <trans-unit id="99642dd458e1c6757c4580ba24bbe68c7e2fa286" translate="yes" xml:space="preserve">
          <source>TCP buffer size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d19bc4740be362813d8dd52bd02735a6e6a7b3" translate="yes" xml:space="preserve">
          <source>TCP receive buffer size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99bdbf870fe4c0b9473112f886bcfcf9aff2806c" translate="yes" xml:space="preserve">
          <source>THE_REQUEST</source>
          <target state="translated">THE_REQUEST</target>
        </trans-unit>
        <trans-unit id="64269f9bd268bf28815bb69e82601cd7e806a37b" translate="yes" xml:space="preserve">
          <source>TIME</source>
          <target state="translated">TIME</target>
        </trans-unit>
        <trans-unit id="b82a4265ceb3608fd3d404ca8c587d7ce5644768" translate="yes" xml:space="preserve">
          <source>TIME_DAY</source>
          <target state="translated">TIME_DAY</target>
        </trans-unit>
        <trans-unit id="eeac10ae1a29c6e45281097fb5638091fcb69c92" translate="yes" xml:space="preserve">
          <source>TIME_HOUR</source>
          <target state="translated">TIME_HOUR</target>
        </trans-unit>
        <trans-unit id="4e41e88a10063e0c108dc903f14a4f1bce5956d5" translate="yes" xml:space="preserve">
          <source>TIME_MIN</source>
          <target state="translated">TIME_MIN</target>
        </trans-unit>
        <trans-unit id="3c149342574a969ffa737aaeffc0438c40596edb" translate="yes" xml:space="preserve">
          <source>TIME_MON</source>
          <target state="translated">TIME_MON</target>
        </trans-unit>
        <trans-unit id="3d4773cb6eb641838050abebe3289f1053514a8f" translate="yes" xml:space="preserve">
          <source>TIME_SEC</source>
          <target state="translated">TIME_SEC</target>
        </trans-unit>
        <trans-unit id="9346190df9e273d9097db964a16af4ddb66283f2" translate="yes" xml:space="preserve">
          <source>TIME_WDAY</source>
          <target state="translated">TIME_WDAY</target>
        </trans-unit>
        <trans-unit id="0609a5e48261bd1b1a008f7d1480f9b41d43f6cd" translate="yes" xml:space="preserve">
          <source>TIME_YEAR</source>
          <target state="translated">TIME_YEAR</target>
        </trans-unit>
        <trans-unit id="458b21fd0445719bf65aa05f98ad3fc740ffb5fb" translate="yes" xml:space="preserve">
          <source>TLS - STARTTLS encryption on default port 389</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf54d6d41c43a1b4f9422c8d3ce0b9406a954b9" translate="yes" xml:space="preserve">
          <source>TLS session tickets are enabled by default. Using them without restarting the web server with an appropriate frequency (e.g. daily) compromises perfect forward secrecy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89d27ec0a89fb067380255369c7302722a0973a" translate="yes" xml:space="preserve">
          <source>TLS v1.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b52b4cdeac63e7bd652d2fc72c38a2e8573294b" translate="yes" xml:space="preserve">
          <source>TLS v1.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61470c670c1fe45a6b24f86a9a82bd6e017cbd40" translate="yes" xml:space="preserve">
          <source>TLS v1.2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642594e6b2017585966993dbefafd2432126eb5c" translate="yes" xml:space="preserve">
          <source>TLS | STARTTLS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b12ed8e894df996cd5c124c3c1a849092381433b" translate="yes" xml:space="preserve">
          <source>TLS-SRP (Secure Remote Password key exchange for TLS, specified in RFC 5054) can supplement or replace certificates in authenticating an SSL connection. To use TLS-SRP, set the &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslsrpverifierfile&quot;&gt;SSLSRPVerifierFile&lt;/a&gt;&lt;/code&gt; directive to point to an OpenSSL SRP verifier file. To create the verifier file, use the &lt;code&gt;openssl&lt;/code&gt; tool:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf8a55c683ee58c6268b4264acb1d703195d588" translate="yes" xml:space="preserve">
          <source>TRACE</source>
          <target state="translated">TRACE</target>
        </trans-unit>
        <trans-unit id="f90f5e0cecbbc5672fef457a12d8fa5a55015e4c" translate="yes" xml:space="preserve">
          <source>Table 1: Certificate Information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc4134a6807304708ef4c7c1c8043d0d305fbf1" translate="yes" xml:space="preserve">
          <source>Table 1: Configuration Directive Mapping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc70e749e0f2c4cde54c11933c6d72b943a0a1cc" translate="yes" xml:space="preserve">
          <source>Table 2: Distinguished Name Information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0be9f79323e9845a1df4e10a33f254e43b28e0" translate="yes" xml:space="preserve">
          <source>Table 2: Environment Variable Derivation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9163ed8b5d7e2da0237f29958e8f93a05f5cece0" translate="yes" xml:space="preserve">
          <source>Table 3: Custom Log Cryptography Function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a549a715e41b73ceec2fe518f7f34004f6bbc4" translate="yes" xml:space="preserve">
          <source>Table 4: Versions of the SSL protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982963c1c41cbed8cab073724749592fe35c532b" translate="yes" xml:space="preserve">
          <source>Tag</source>
          <target state="translated">Tag</target>
        </trans-unit>
        <trans-unit id="af1b10ee7cc9cf20c24bad2c2df693458259a44a" translate="yes" xml:space="preserve">
          <source>Take care when constructing the target URL of the rule, considering the security impact from allowing the client influence over the set of URLs to which your server will act as a proxy. Ensure that the scheme and hostname part of the URL is either fixed or does not allow the client undue influence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70aa09c2514873441fa5baf93a674e7d787f1357" translate="yes" xml:space="preserve">
          <source>Take care when constructing the target URL of the rule, considering the security impact from allowing the client influence over the set of URLs to which your server will act as a proxy. Ensure that the scheme and hostname part of the URL is either fixed, or does not allow the client undue influence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae034de20c8780b904a255cfeb0b2728fb3b2c0" translate="yes" xml:space="preserve">
          <source>Take care when setting this directive. If two separate virtual hosts are accidentally given the same base URL, entries from one virtual host will be served to the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82428e19f8b31fc7045396c982678c215c58a906" translate="yes" xml:space="preserve">
          <source>Take care when using these. The fixes will correct certain authoring mistakes, but risk also erroneously fixing links that were correct to start with. Only use them if you know you have a broken backend server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a188a608e68e79648dfa5e58d71753933001d94" translate="yes" xml:space="preserve">
          <source>Takes 1 or 2 parameters. The first parameter sets the soft resource limit for all processes and the second parameter sets the maximum resource limit. Either parameter can be a number, or &lt;code&gt;max&lt;/code&gt; to indicate to the server that the limit should be set to the maximum allowed by the operating system configuration. Raising the maximum resource limit requires that the server is running as &lt;code&gt;root&lt;/code&gt; or in the initial startup phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a719ee7556f55ddc53c53ffb6d2929f6534384" translate="yes" xml:space="preserve">
          <source>Takes 1 or 2 parameters. The first parameter sets the soft resource limit for all processes, and the second parameter sets the maximum resource limit. Either parameter can be a number, or &lt;code&gt;max&lt;/code&gt; to indicate to the server that the limit should be set to the maximum allowed by the operating system configuration. Raising the maximum resource limit requires that the server is running as &lt;code&gt;root&lt;/code&gt; or in the initial startup phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e5de2023f92fa2dd95408220573710dd3d6278" translate="yes" xml:space="preserve">
          <source>Takes a single point. The point directive closest to the user selected point is obeyed if no other directives are satisfied. Note that &lt;code&gt;default&lt;/code&gt; will not be followed if a &lt;code&gt;point&lt;/code&gt; directive is present and valid coordinates are given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2167641b88b69540307c0dd2e3b730d1d360ded" translate="yes" xml:space="preserve">
          <source>Takes an Apache log file on standard input. The IP addresses must be the first thing on each line and must be separated from the remainder of the line by a space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d355f0100202aeb74c2f48c404e4dc4ce7ea807" translate="yes" xml:space="preserve">
          <source>Takes the center coordinates of a circle and a point on the circle. Is obeyed if the user selected point is with the circle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2907e00f1b4767e7df706d1d68da6c4e4d9963fd" translate="yes" xml:space="preserve">
          <source>Takes the coordinates of two opposing corners of a rectangle. Obeyed if the point selected is within this rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106129c471ff689cd8c923e7c25b09dfb43a0d48" translate="yes" xml:space="preserve">
          <source>Takes three to one-hundred points, and is obeyed if the user selected coordinates fall within the polygon defined by these points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be64fbf4f1c8de321b1c97a72c757d7d958e0b99" translate="yes" xml:space="preserve">
          <source>Technical Solution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be37be90bfccb09eab627d2a5d3f9b1c85287e5" translate="yes" xml:space="preserve">
          <source>Technical details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3750b2a5685772579a74cc63cf4f5154a25c1300" translate="yes" xml:space="preserve">
          <source>Technique for locating the interpreter for CGI scripts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe30b620b8e833e5ad04b06ba226e66d32a7709" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt; to treat &lt;code&gt;path_info&lt;/code&gt; components as part of the filename</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885cf69e4480f6fa08668d779fe1fd5d54c20bb6" translate="yes" xml:space="preserve">
          <source>Tells the rewriting engine to skip the next &lt;em&gt;num&lt;/em&gt; rules if the current rule matches. &lt;em&gt;&lt;a href=&quot;../rewrite/flags#flag_s&quot;&gt;details ...&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f7d9147d334608cfebea31357bf9d08391bdb6" translate="yes" xml:space="preserve">
          <source>Template Generation Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e81f681fbac3dc9b821af9033cd39a0f68ea9c" translate="yes" xml:space="preserve">
          <source>Terminates the running instance of the Apache web server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640ab2bae07bedc4c163f679a746f7ab7fb5d1fa" translate="yes" xml:space="preserve">
          <source>Test</source>
          <target state="translated">Test</target>
        </trans-unit>
        <trans-unit id="f28a041f6a086b36b36b1cb0f56870c77bad720f" translate="yes" xml:space="preserve">
          <source>Testing the Installation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62750db7bf96b4903f2e51c5c66de18d0fbee23a" translate="yes" xml:space="preserve">
          <source>Tests whether an authenticated user is authorized by an authorization provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dede2af5f695810e37b5ebe4441049bd5313647" translate="yes" xml:space="preserve">
          <source>Text Documents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5e0eeefe32a22a7211b51321da8e46913b392c" translate="yes" xml:space="preserve">
          <source>Text search-and-replace editing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66de26595e17d727e36f92eced818f8fc79e38c4" translate="yes" xml:space="preserve">
          <source>Text to be displayed (if none of the above). The text must be wrapped in quotes (&quot;) if it consists of more than one word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeed7d62f2383ba4bedfd4f8ad4519016dfb3a8d" translate="yes" xml:space="preserve">
          <source>That is after 10 schedules, the schedule repeats and 7 &lt;var&gt;a&lt;/var&gt; are selected with 3 &lt;var&gt;b&lt;/var&gt; interspersed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a18ad9d1dc250464f486ab067f84f75a81f1ba9" translate="yes" xml:space="preserve">
          <source>That is it schedules: &lt;var&gt;a&lt;/var&gt;&lt;var&gt;c&lt;/var&gt;&lt;var&gt;d&lt;/var&gt;&lt;var&gt;a&lt;/var&gt;&lt;var&gt;c&lt;/var&gt;&lt;var&gt;d&lt;/var&gt;&lt;var&gt;a&lt;/var&gt;&lt;var&gt;c&lt;/var&gt;&lt;var&gt;d&lt;/var&gt; ... Please note that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6829f0f84397f4393a9fcf1d846f6a3e9ea5fd77" translate="yes" xml:space="preserve">
          <source>That is, the entire URL is appended to the mapped backend URL. This is in keeping with the intent of being a simple but fast reverse proxy switch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79bb11ae126ce055f654274da725df04c8f9a37d" translate="yes" xml:space="preserve">
          <source>That means that there is a permissions problem. Check the &lt;a href=&quot;#errorlogs&quot;&gt;Apache error log&lt;/a&gt; and the section below on &lt;a href=&quot;#permissions&quot;&gt;file permissions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40696f9adbe3417963b6394d9a6ea2c596aec4e6" translate="yes" xml:space="preserve">
          <source>That means that you have not properly configured Apache to process your CGI program. Reread the section on &lt;a href=&quot;#configuring&quot;&gt;configuring Apache&lt;/a&gt; and try to find what you missed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4433b87b3beee4a9b15481e2973e964857f3415a" translate="yes" xml:space="preserve">
          <source>That's just a list of the members of the group in a long line separated by spaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="967617580ce5733774d67ac464ac6d4be964932c" translate="yes" xml:space="preserve">
          <source>The &quot;Referer&quot; (sic) HTTP request header. This gives the site that the client reports having been referred from. (This should be the page that links to or includes &lt;code&gt;/apache_pb.gif&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc1f3c695d0d44419437ff0f96aa90bc8b809cb" translate="yes" xml:space="preserve">
          <source>The &quot;hyphen&quot; in the output indicates that the requested piece of information is not available. In this case, the information that is not available is the RFC 1413 identity of the client determined by &lt;code&gt;identd&lt;/code&gt; on the clients machine. This information is highly unreliable and should almost never be used except on tightly controlled internal networks. Apache httpd will not even attempt to determine this information unless &lt;code&gt;&lt;a href=&quot;mod/mod_ident#identitycheck&quot;&gt;IdentityCheck&lt;/a&gt;&lt;/code&gt; is set to &lt;code&gt;On&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8245031d098b7f010d35b3bbddbdee676c6283" translate="yes" xml:space="preserve">
          <source>The &quot;lookup defaults&quot; that define the default directory permissions for a vhost are merged with those of the main server. This includes any per-directory configuration information for any module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272b158f6062a85c3c8aa8587f15a93e3e6b761d" translate="yes" xml:space="preserve">
          <source>The &quot;main server&quot; Address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7330c5dba3349edc4fb9347a519b909c85ef87a" translate="yes" xml:space="preserve">
          <source>The &quot;session&quot; is a &lt;strong&gt;application/x-www-form-urlencoded&lt;/strong&gt; string containing these key value pairs, as defined by the &lt;a href=&quot;http://www.w3.org/TR/html4/&quot;&gt;HTML specification&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abda6d903d3d7348554e45e7ad8212a8f28fe5d2" translate="yes" xml:space="preserve">
          <source>The &quot;special format&quot; is very simple. A field name and its value are joined together with an equals (=) sign, and pairs of values are joined together with an ampersand (&amp;amp;). Inconvenient characters like spaces, ampersands, and equals signs, are converted into their hex equivalent so that they don't gum up the works. The whole data string might look something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92f67345a6221bbec6120097870125799a652c3" translate="yes" xml:space="preserve">
          <source>The '&lt;code&gt;#&lt;/code&gt;' hash character designates a comment line, otherwise each whitespace or newline separated entry is processed identically to the &lt;code&gt;&lt;a href=&quot;#remoteipinternalproxy&quot;&gt;RemoteIPInternalProxy&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c0ba6ff25282ef4d933ca4e14949a6ed9f8211" translate="yes" xml:space="preserve">
          <source>The '&lt;code&gt;#&lt;/code&gt;' hash character designates a comment line, otherwise each whitespace or newline separated entry is processed identically to the &lt;code&gt;&lt;a href=&quot;#remoteiptrustedproxy&quot;&gt;RemoteIPTrustedProxy&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e5a5b008d260a53be2d147c399699dd39e7ec5" translate="yes" xml:space="preserve">
          <source>The (%-decoded) URL path of the document requested by the user. Note that in the case of nested include files, this is &lt;em&gt;not&lt;/em&gt; the URL for the current document. Note also that if the URL is modified internally (e.g. by an &lt;code&gt;&lt;a href=&quot;mod_alias#alias&quot;&gt;alias&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_dir#directoryindex&quot;&gt;directoryindex&lt;/a&gt;&lt;/code&gt;), the modified URL is shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3035f2fef6d37bf311dd73f57eeec17414fb191c" translate="yes" xml:space="preserve">
          <source>The (current) HTTP return code for this request, f.x. &lt;code&gt;200&lt;/code&gt; or &lt;code&gt;404&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a84f4f130a6af2a63aa9b166dd40bc11045faaf" translate="yes" xml:space="preserve">
          <source>The 3rd parameter, MapTypeOptions, in only available from Apache 2.4.29 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88fc2a3f67ddb61b1e91ce230a86456745359866" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../expr&quot;&gt;expression engine&lt;/a&gt; gives you a great deal of power to do a variety of things based on arbitrary server variables, and you should consult that document for more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed42ad5f00ebb3dd77673fe18af6aa580aa938c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../expr&quot;&gt;expression&lt;/a&gt; can use curly-parens (&quot;{}&quot;) as quoting deliminators in addition to normal quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a373007e94ffe89ec1949e0a5a1bc0b26867654" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../suexec&quot;&gt;suexec&lt;/a&gt; support program allows CGI programs to be run under different user permissions, depending on which virtual host or user home directory they are located in. Suexec has very strict permission checking, and any failure in that checking will result in your CGI programs failing with &lt;code&gt;Premature end of script headers&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db708f5189e7df8cacdd84377c8b29f161957046" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;htaccess&quot;&gt;&lt;code&gt;.htaccess&lt;/code&gt; tutorial&lt;/a&gt; shows how to activate CGI programs if you do not have access to &lt;code&gt;httpd.conf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48e982a3d045035069a031b3d01515fbce53049" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;HTTP/1.1 RFC&lt;/a&gt;, section 14.11 puts it this way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028d70987fca01ef94f2da275e43861ffcf8620a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;Apache Portable Runtime&lt;/a&gt; (APR) is part of the httpd source distribution and will automatically be build together with the HTTP server. If you want to use an already installed APR instead you have to tell &lt;code&gt;configure&lt;/code&gt; the path to the &lt;code&gt;apr-config&lt;/code&gt; script. You may set the absolute path and name or the directory to the installed APR. &lt;code&gt;apr-config&lt;/code&gt; must exist within this directory or the subdirectory &lt;code&gt;bin&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0962ac92341fa65b9926125b470f375fcb842c7e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#mime-type&quot;&gt;MIME media type&lt;/a&gt; of the document, with optional parameters. Parameters are separated from the media type and from one another by a semi-colon, with a syntax of &lt;code&gt;name=value&lt;/code&gt;. Common parameters include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf1e11f3f04f5bb66539fae6ea6116badac1c28" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://nghttp2.org&quot;&gt;nghttp2&lt;/a&gt; package also includes clients, such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e065d1b681b268b5a1b9f9ad068d9dbba7a969" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;mod/mpm_common#user&quot;&gt;username&lt;/a&gt; under which httpd normally runs. This is the only user allowed to execute the suEXEC wrapper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6912d9a5d51066c721850f4cfb713541eaf1c06" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;socache&quot;&gt;shared object cache API&lt;/a&gt; (socache) and its provider modules provide a server wide key/value based shared object cache. These modules are designed to cache low level data such as SSL sessions and authentication credentials. Backends allow the data to be stored server wide in shared memory, or datacenter wide in a cache such as memcache or distcache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052c9ecf90cc423f2260055a895bf4c7e2e0d2c2" translate="yes" xml:space="preserve">
          <source>The &lt;a id=&quot;mapfunc&quot; name=&quot;mapfunc&quot;&gt;&lt;em&gt;MapName&lt;/em&gt;&lt;/a&gt; is an arbitray name that you assign to the map, and which you will use in directives later on. Arguments are passed to the map via the following syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2455231d5879a37afb617dfc313042aa2c3c4a8f" translate="yes" xml:space="preserve">
          <source>The &lt;a id=&quot;mapfunc&quot; name=&quot;mapfunc&quot;&gt;&lt;em&gt;MapName&lt;/em&gt;&lt;/a&gt; is the name of the map and will be used to specify a mapping-function for the substitution strings of a rewriting rule via one of the following constructs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="892b89efa92729dd8d51dfabcbd6e26bef2ec5a1" translate="yes" xml:space="preserve">
          <source>The &lt;a id=&quot;rhs&quot; name=&quot;rhs&quot;&gt;&lt;em&gt;Substitution&lt;/em&gt;&lt;/a&gt; of a rewrite rule is the string that replaces the original URL-path that was matched by &lt;em&gt;Pattern&lt;/em&gt;. The &lt;em&gt;Substitution&lt;/em&gt; may be a:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f545e990c404a5b8d4860e56fc8fcd1ba3e850fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;!&lt;/code&gt; directive is useful in situations where you don't want to reverse-proxy a subdirectory, &lt;em&gt;e.g.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2f8eb4e1aca8f9fa25ae2bbc99efd0218041c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;!&lt;/code&gt; directive is useful in situations where you don't want to reverse-proxy a subdirectory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50575b370a7c603912258d727bb4560533255f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;%s&lt;/code&gt; format specifier is only available in Apache 2.1 and later; it can be used instead of &lt;code&gt;%e&lt;/code&gt; to avoid the overhead of enabling &lt;code&gt;SSLOptions +StdEnvVars&lt;/code&gt;. If &lt;code&gt;SSLOptions +StdEnvVars&lt;/code&gt; must be enabled anyway for some other reason, &lt;code&gt;%e&lt;/code&gt; will be more efficient than &lt;code&gt;%s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd9caec3cd5a78b6e8167581715a6758c271226" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;%v&lt;/code&gt; is used to log the name of the virtual host that is serving the request. Then a program like &lt;a href=&quot;programs/split-logfile&quot;&gt;split-logfile&lt;/a&gt; can be used to post-process the access log in order to split it into one file per virtual host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ef1deb0eb69a742fdc57396c33f58c32598440" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;%{ENV:&lt;em&gt;variable&lt;/em&gt;}&lt;/code&gt; form of &lt;em&gt;TestString&lt;/em&gt; in the &lt;code&gt;&lt;a href=&quot;mod/mod_rewrite#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt; allows &lt;code&gt;&lt;a href=&quot;mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;'s rewrite engine to make decisions conditional on environment variables. Note that the variables accessible in &lt;code&gt;&lt;a href=&quot;mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; without the &lt;code&gt;ENV:&lt;/code&gt; prefix are not actually environment variables. Rather, they are variables special to &lt;code&gt;&lt;a href=&quot;mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; which cannot be accessed from other modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62cb90bf66917d9303148ce51e184383e448431b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;Else&amp;gt;&lt;/code&gt; applies the enclosed directives if and only if the most recent &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;ElseIf&amp;gt;&lt;/code&gt; section in the same scope has not been applied. For example: In</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8933d08b702a72c1498474f61b648032b9bab45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;ElseIf&amp;gt;&lt;/code&gt; applies the enclosed directives if and only if both the given condition evaluates to true and the most recent &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;ElseIf&amp;gt;&lt;/code&gt; section in the same scope has not been applied. For example: In</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea71c5488e81ebdc067a49174a155a2ca8ee2858" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;ElseIf&amp;gt;&lt;/code&gt; would match if the remote address of a request belongs to the subnet 10.0.0.0/8 but not to the subnet 10.1.0.0/16.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b05ed4af0e582b99d6ec13ab4a95022c154d76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;Files&amp;gt;&lt;/code&gt; directive limits the scope of the enclosed directives by filename. It is comparable to the &lt;code&gt;&lt;a href=&quot;#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; directives. It should be matched with a &lt;code&gt;&amp;lt;/Files&amp;gt;&lt;/code&gt; directive. The directives given within this section will be applied to any object with a basename (last component of filename) matching the specified filename. &lt;code&gt;&amp;lt;Files&amp;gt;&lt;/code&gt; sections are processed in the order they appear in the configuration file, after the &lt;code&gt;&lt;a href=&quot;#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; sections and &lt;code&gt;.htaccess&lt;/code&gt; files are read, but before &lt;code&gt;&lt;a href=&quot;#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; sections. Note that &lt;code&gt;&amp;lt;Files&amp;gt;&lt;/code&gt; can be nested inside &lt;code&gt;&lt;a href=&quot;#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; sections to restrict the portion of the filesystem they apply to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97517461b93b07a07de74ffeae4c9e847206f741" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;FilesMatch&amp;gt;&lt;/code&gt; directive limits the scope of the enclosed directives by filename, just as the &lt;code&gt;&lt;a href=&quot;#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt; directive does. However, it accepts a &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a642f9b787249a8e93dc6a9a2206abcf9fb7be0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt; directive evaluates an expression at runtime, and applies the enclosed directives if and only if the expression evaluates to true. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2090d508e931063f9e51ccc51f98e665895aa630" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt; would match HTTP/1.0 requests without a &lt;var&gt;Host:&lt;/var&gt; header and the &lt;code&gt;&amp;lt;Else&amp;gt;&lt;/code&gt; would match requests with a &lt;var&gt;Host:&lt;/var&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3bdaa8e4fae68ee98da10849bc835629393021b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;IfDefine test&amp;gt;...&amp;lt;/IfDefine&amp;gt;&lt;/code&gt; section is used to mark directives that are conditional. The directives within an &lt;code&gt;&amp;lt;IfDefine&amp;gt;&lt;/code&gt; section are only processed if the &lt;var&gt;test&lt;/var&gt; is true. If &lt;var&gt; test&lt;/var&gt; is false, everything between the start and end markers is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="077ebf762401f4cd3aad27ef33a4c58bd806f62a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;IfDirective test&amp;gt;...&amp;lt;/IfDirective&amp;gt;&lt;/code&gt; section is used to mark directives that are conditional on the presence of a specific directive. The directives within an &lt;code&gt;&amp;lt;IfDirective&amp;gt;&lt;/code&gt; section are only processed if the &lt;var&gt;test&lt;/var&gt; is true. If &lt;var&gt;test&lt;/var&gt; is false, everything between the start and end markers is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96dd38ea4b20311bb2de9c546cfc1f6cfa08d34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;IfFile filename&amp;gt;...&amp;lt;/IfFile&amp;gt;&lt;/code&gt; section is used to mark directives that are conditional on the existence of a file on disk. The directives within an &lt;code&gt;&amp;lt;IfFile&amp;gt;&lt;/code&gt; section are only processed if &lt;var&gt;filename&lt;/var&gt; exists. If &lt;var&gt;filename&lt;/var&gt; doesn't exist, everything between the start and end markers is ignored. &lt;var&gt;filename&lt;/var&gt; can be an absolute path or a path relative to the server root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3889bc0e99b4d1a09561fdc9e503704c72d411" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;IfModule test&amp;gt;...&amp;lt;/IfModule&amp;gt;&lt;/code&gt; section is used to mark directives that are conditional on the presence of a specific module. The directives within an &lt;code&gt;&amp;lt;IfModule&amp;gt;&lt;/code&gt; section are only processed if the &lt;var&gt;test&lt;/var&gt; is true. If &lt;var&gt;test&lt;/var&gt; is false, everything between the start and end markers is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4704dcef595f437ef980bf009a929b41a9886f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;IfSection test&amp;gt;...&amp;lt;/IfSection&amp;gt;&lt;/code&gt; section is used to mark directives that are conditional on the presence of a specific section directive. A section directive is any directive such as &lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt; which encloses other directives, and has a directive name with a leading &quot;&amp;lt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96d21837984a214d06694d957870bd34d31c0ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;IfVersion&amp;gt;&lt;/code&gt; section encloses configuration directives which are executed only if the &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; version matches the desired criteria. For normal (numeric) comparisons the &lt;var&gt;version&lt;/var&gt; argument has the format &lt;code&gt;major[.minor[.patch]]&lt;/code&gt;, e.g. &lt;code&gt;2.1.0&lt;/code&gt; or &lt;code&gt;2.2&lt;/code&gt;. &lt;var&gt;minor&lt;/var&gt; and &lt;var&gt;patch&lt;/var&gt; are optional. If these numbers are omitted, they are assumed to be zero. The following numerical &lt;var&gt;operator&lt;/var&gt;s are possible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69232d12be54285fa6d61bb64722031b82a39124" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;Limit&amp;gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#limitexcept&quot;&gt;&amp;lt;LimitExcept&amp;gt;&lt;/a&gt;&lt;/code&gt; directives may be nested. In this case, each successive level of &lt;code&gt;&amp;lt;Limit&amp;gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#limitexcept&quot;&gt;&amp;lt;LimitExcept&amp;gt;&lt;/a&gt;&lt;/code&gt; directives must further restrict the set of methods to which access controls apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a2a346d07450c30e92acaac2d0caf79bd2e1413" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; directive limits the scope of the enclosed directives by URL. It is similar to the &lt;code&gt;&lt;a href=&quot;#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; directive, and starts a subsection which is terminated with a &lt;code&gt;&amp;lt;/Location&amp;gt;&lt;/code&gt; directive. &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; sections are processed in the order they appear in the configuration file, after the &lt;code&gt;&lt;a href=&quot;#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; sections and &lt;code&gt;.htaccess&lt;/code&gt; files are read, and after the &lt;code&gt;&lt;a href=&quot;#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt; sections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd98db3e6e7cabbac6d2b5dbb39e2499c26523e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; functionality is especially useful when combined with the &lt;code&gt;&lt;a href=&quot;#sethandler&quot;&gt;SetHandler&lt;/a&gt;&lt;/code&gt; directive. For example, to enable status requests but allow them only from browsers at &lt;code&gt;example.com&lt;/code&gt;, you might use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa330d0f9fa01946c1b2380f8a5d8e6a4caac64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;LocationMatch&amp;gt;&lt;/code&gt; directive limits the scope of the enclosed directives by URL, in an identical manner to &lt;code&gt;&lt;a href=&quot;#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt;. However, it takes a &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt; as an argument instead of a simple string. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdfbc966269641ec66645da099feff1275bd9068" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;Macro&amp;gt;&lt;/code&gt; directive controls the definition of a macro within the server runtime configuration files. The first argument is the name of the macro. Other arguments are parameters to the macro. It is good practice to prefix parameter names with any of '&lt;code&gt;$%@&lt;/code&gt;', and not macro names with such characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323ea1b4584a306df0f1652fc678d00db4edf27d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;ProxyMatch&amp;gt;&lt;/code&gt; directive is identical to the &lt;code&gt;&lt;a href=&quot;#proxy&quot;&gt;&amp;lt;Proxy&amp;gt;&lt;/a&gt;&lt;/code&gt; directive, except that it matches URLs using &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expressions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d38e924a37c33eb089006f229c2bbc5d6b94ea7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--enable-nonportable-atomics&lt;/code&gt; option is relevant for the following platforms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b42d090a903877aab29ec92dbe504f4b0cb733c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-U&lt;/code&gt; operator determines whether the test string (in this case, &lt;code&gt;REQUEST_URI&lt;/code&gt;) is a valid URL. It does this via a subrequest. In the event that this subrequest fails - that is, the requested resource doesn't exist - this rule invokes the CGI program &lt;code&gt;/regenerate_page.cgi&lt;/code&gt;, which generates the requested resource and saves it into the document directory, so that the next time it is requested, a static copy can be served.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5a4360f732235b9ef4a7cfc782cedcabe245fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-d&lt;/code&gt; switch on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4999f67b6648871d6f9b0e0831053a756bb7645c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-l&lt;/code&gt; option tells truss to log the ID of the LWP (lightweight process--Solaris' form of kernel-level thread) that invokes each system call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2210b2f4d387e3fdbbffd0dd241e9cfdc36efd8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.+&lt;/code&gt; at the start of the regex ensures that files named &lt;code&gt;.png&lt;/code&gt;, or &lt;code&gt;.gif&lt;/code&gt;, for example, are not matched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a456781874a0213c6ee2cddbec0fd46661124856" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.dsp&lt;/code&gt; project files are distributed in Visual Studio 6.0 (98) format. Visual C++ 5.0 (97) will recognize them. Visual Studio 2002 (.NET) and later users must convert &lt;code&gt;Apache.dsw&lt;/code&gt; plus the &lt;code&gt;.dsp&lt;/code&gt; files into an &lt;code&gt;Apache.sln&lt;/code&gt; plus &lt;code&gt;.msproj&lt;/code&gt; files. Be sure you reconvert the &lt;code&gt;.msproj&lt;/code&gt; file again if its source &lt;code&gt;.dsp&lt;/code&gt; file changes! This is really trivial, just open &lt;code&gt;Apache.dsw&lt;/code&gt; in the VC++ 7.0 IDE once again and reconvert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b872fd84a3fb6f7c294f7397ba29f6af59eeae74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#authformdisablenostore&quot;&gt;AuthFormDisableNoStore&lt;/a&gt;&lt;/code&gt; flag disables the sending of a &lt;code&gt;Cache-Control no-store&lt;/code&gt; header with the error 401 page returned when the user is not yet logged in. The purpose of the header is to make it difficult for an &lt;code&gt;ecmascript&lt;/code&gt; application to attempt to resubmit the login form, and reveal the username and password to the backend application. Disable at your own risk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0022b27d00a34ace611346fc8ee50b5e05bf8420" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#authformfakebasicauth&quot;&gt;AuthFormFakeBasicAuth&lt;/a&gt;&lt;/code&gt; flag determines whether a &lt;code&gt;Basic Authentication&lt;/code&gt; header will be added to the request headers. This can be used to expose the username and password to an underlying application, without the underlying application having to be aware of how the login was achieved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0bd09aef23a087a5f9e8ee9183b00e13c97af88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#authformlocation&quot;&gt;AuthFormLocation&lt;/a&gt;&lt;/code&gt; directive specifies the name of an HTML field which, if present, will contain a URL to redirect the browser to should login be successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2283a43ba0e5a1a11fa3f853df13ab8db8901f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#authformloginrequiredlocation&quot;&gt;AuthFormLoginRequiredLocation&lt;/a&gt;&lt;/code&gt; directive specifies the URL to redirect to should the user not be authorised to view a page. The value is parsed using the &lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt; parser before being sent to the client. By default, if a user is not authorised to view a page, the HTTP response code &lt;code&gt;HTTP_UNAUTHORIZED&lt;/code&gt; will be returned with the page specified by the &lt;code&gt;&lt;a href=&quot;core#errordocument&quot;&gt;ErrorDocument&lt;/a&gt;&lt;/code&gt; directive. This directive overrides this default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c5c8b46e51e0582299e051fec3468a42c01224" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#authformloginsuccesslocation&quot;&gt;AuthFormLoginSuccessLocation&lt;/a&gt;&lt;/code&gt; directive specifies the URL to redirect to should the user have logged in successfully. The value is parsed using the &lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt; parser before being sent to the client. This directive can be overridden if a form field has been defined containing another URL using the &lt;code&gt;&lt;a href=&quot;#authformlocation&quot;&gt;AuthFormLocation&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0605d21aa10e2cbbaa6fa180364323a4c3b12f65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#authformlogoutlocation&quot;&gt;AuthFormLogoutLocation&lt;/a&gt;&lt;/code&gt; directive specifies the URL of a page on the server to redirect to should the user attempt to log out. The value is parsed using the &lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt; parser before being sent to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c266398c57139d88c9081dff44e9d50070d2b654" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#authformmethod&quot;&gt;AuthFormMethod&lt;/a&gt;&lt;/code&gt; directive specifies the name of an HTML field which, if present, will contain the method of the request to to submit should login be successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c698e5f7dc31e1ad771b5129bded93aabd5d79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#authformmethod&quot;&gt;AuthFormMethod&lt;/a&gt;&lt;/code&gt; directive specifies the name of an HTML field which, if present, will contain the mimetype of the request to submit should login be successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cdf7dc40a2b17a8986b0f8b4130eaa821cb2afc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#authformpassword&quot;&gt;AuthFormPassword&lt;/a&gt;&lt;/code&gt; directive specifies the name of an HTML field which, if present, will contain the password to be used to log in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3bd3e585656b96c5830f88539223942ae9d98f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#authformsitepassphrase&quot;&gt;AuthFormSitePassphrase&lt;/a&gt;&lt;/code&gt; directive specifies a passphrase which, if present in the user session, causes Apache httpd to bypass authentication checks for the given URL. It can be used on high traffic websites to reduce the load induced on authentication infrastructure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca7ebb634a5d55266322afd25290041ff3ad97d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#authformsize&quot;&gt;AuthFormSize&lt;/a&gt;&lt;/code&gt; directive specifies the maximum size of the body of the request that will be parsed to find the login form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2437bc2ac2b74fb28d269c126d2e92266b1f238b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#authformusername&quot;&gt;AuthFormUsername&lt;/a&gt;&lt;/code&gt; directive specifies the name of an HTML field which, if present, will contain the username to be used to log in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5604b8849154f33e5989de81b2d6f572039b881f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#authmerging&quot;&gt;AuthMerging&lt;/a&gt;&lt;/code&gt; directive can be used to control how authorization configuration sections are merged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cef9dfd819dbdcc7ca3ca675857b539e30893e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#buffersize&quot;&gt;BufferSize&lt;/a&gt;&lt;/code&gt; directive specifies the amount of data in bytes that will be buffered before being read from or written to each request. The default is 128 kilobytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fabb52eba6be3286b5ad447e27ceff4080fff35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#cachefile&quot;&gt;CacheFile&lt;/a&gt;&lt;/code&gt; directive of &lt;code&gt;&lt;a href=&quot;mod_file_cache&quot;&gt;mod_file_cache&lt;/a&gt;&lt;/code&gt; opens an active &lt;em&gt;handle&lt;/em&gt; or &lt;em&gt;file descriptor&lt;/em&gt; to the file (or files) listed in the configuration directive and places these open file handles in the cache. When the file is requested, the server retrieves the handle from the cache and passes it to the &lt;code&gt;sendfile()&lt;/code&gt; (or &lt;code&gt;TransmitFile()&lt;/code&gt; on Windows), socket API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165edaf73c360bc3f60171e8362e8d4001704d6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#cachequickhandler&quot;&gt;CacheQuickHandler&lt;/a&gt;&lt;/code&gt; directive controls the phase in which the cache is handled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f49989e23f70a6e340202288d91b1a6a7901fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#expiresdefault&quot;&gt;ExpiresDefault&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#expiresbytype&quot;&gt;ExpiresByType&lt;/a&gt;&lt;/code&gt; directives can also be defined in a more readable syntax of the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93e0c5bd7b8aff29df8d1f4b9d05207f6d1b64d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#filterdeclare&quot;&gt;FilterDeclare&lt;/a&gt;&lt;/code&gt; directive declares a filter, assigning it a name and filter type. Required only if the filter is not the default type AP_FTYPE_RESOURCE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688e96c9242d05d56cd4322d9fdb6c0009f67435" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#filterprovider&quot;&gt;FilterProvider&lt;/a&gt;&lt;/code&gt; directive has changed from httpd 2.2: the &lt;var&gt;match&lt;/var&gt; and &lt;var&gt;dispatch&lt;/var&gt; arguments are replaced with a single but more versatile &lt;var&gt;expression&lt;/var&gt;. In general, you can convert a match/dispatch pair to the two sides of an expression, using something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10058be1faf09f502f41fce2e99d881db679294f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#filterprovider&quot;&gt;FilterProvider&lt;/a&gt;&lt;/code&gt; directive registers a provider with a filter. The filter may have been declared with &lt;code&gt;&lt;a href=&quot;#filterdeclare&quot;&gt;FilterDeclare&lt;/a&gt;&lt;/code&gt;; if not, FilterProvider will implicitly declare it with the default type AP_FTYPE_RESOURCE. The provider must have been registered with &lt;code&gt;ap_register_output_filter&lt;/code&gt; by some module. The final argument to &lt;code&gt;&lt;a href=&quot;#filterprovider&quot;&gt;FilterProvider&lt;/a&gt;&lt;/code&gt; is an expression: the provider will be selected to run for a request if and only if the expression evaluates to true. The expression may evaluate HTTP request or response headers, environment variables, or the Handler used by this request. Unlike earlier versions, mod_filter now supports complex expressions involving multiple criteria with AND / OR logic (&amp;amp;&amp;amp; / ||) and brackets. The details of the expression syntax are described in the &lt;a href=&quot;../expr&quot;&gt;ap_expr documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2749d0ad358450dae091866906d7004b94636db5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#include&quot;&gt;Include&lt;/a&gt;&lt;/code&gt; directive will &lt;strong&gt;fail with an error&lt;/strong&gt; if a wildcard expression does not match any file. The &lt;code&gt;&lt;a href=&quot;#includeoptional&quot;&gt;IncludeOptional&lt;/a&gt;&lt;/code&gt; directive can be used if non-matching wildcards should be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7db26433d7b6ed24bcacee0e1d1c21d9ea5c52b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#includevirtual&quot;&gt;include virtual&lt;/a&gt;&lt;/code&gt; element should be used in preference to &lt;code&gt;exec cgi&lt;/code&gt;. In particular, if you need to pass additional arguments to a CGI program, using the query string, this cannot be done with &lt;code&gt;exec cgi&lt;/code&gt;, but can be done with &lt;code&gt;include virtual&lt;/code&gt;, as shown here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868fbe6add053e09c75fe9364ea23abe91a4b0a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#mmapfile&quot;&gt;MMapFile&lt;/a&gt;&lt;/code&gt; directive of &lt;code&gt;&lt;a href=&quot;mod_file_cache&quot;&gt;mod_file_cache&lt;/a&gt;&lt;/code&gt; maps a list of statically configured files into memory through the system call &lt;code&gt;mmap()&lt;/code&gt;. This system call is available on most modern Unix derivatives, but not on all. There are sometimes system-specific limits on the size and number of files that can be &lt;code&gt;mmap()&lt;/code&gt;ed, experimentation is probably the easiest way to find out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3decb677f95bc6ac8616caf3c2faeb132f77c84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#proxyrequests&quot;&gt;ProxyRequests&lt;/a&gt;&lt;/code&gt; directive should usually be set &lt;strong&gt;off&lt;/strong&gt; when using &lt;code&gt;ProxyPass&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efc932f30d5b0bb8b0a0594dd3991cb30d3af01" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#redirect&quot;&gt;Redirect&lt;/a&gt;&lt;/code&gt; directives are used to instruct clients to make a new request with a different URL. They are often used when a resource has moved to a new location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68d3af5a902dbcfa49c7953e467764e1f08c33f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#remoteipheader&quot;&gt;RemoteIPHeader&lt;/a&gt;&lt;/code&gt; directive triggers &lt;code&gt;&lt;a href=&quot;mod_remoteip&quot;&gt;mod_remoteip&lt;/a&gt;&lt;/code&gt; to treat the value of the specified &lt;var&gt;header-field&lt;/var&gt; header as the useragent IP address, or list of intermediate useragent IP addresses, subject to further configuration of the &lt;code&gt;&lt;a href=&quot;#remoteipinternalproxy&quot;&gt;RemoteIPInternalProxy&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#remoteiptrustedproxy&quot;&gt;RemoteIPTrustedProxy&lt;/a&gt;&lt;/code&gt; directives. Unless these other directives are used, &lt;code&gt;&lt;a href=&quot;mod_remoteip&quot;&gt;mod_remoteip&lt;/a&gt;&lt;/code&gt; will trust all hosts presenting a &lt;code&gt;&lt;a href=&quot;#remoteipheader&quot;&gt;RemoteIPHeader&lt;/a&gt;&lt;/code&gt; IP value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0624c200532a40efb3fe93c22f195c9516bb1937" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#remoteipinternalproxy&quot;&gt;RemoteIPInternalProxy&lt;/a&gt;&lt;/code&gt; directive adds one or more addresses (or address blocks) to trust as presenting a valid RemoteIPHeader value of the useragent IP. Unlike the &lt;code&gt;&lt;a href=&quot;#remoteiptrustedproxy&quot;&gt;RemoteIPTrustedProxy&lt;/a&gt;&lt;/code&gt; directive, any IP address presented in this header, including private intranet addresses, are trusted when passed from these proxies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96dcd2017c255eb5d02e2cda62c8ef6f99e19b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#remoteipinternalproxylist&quot;&gt;RemoteIPInternalProxyList&lt;/a&gt;&lt;/code&gt; directive specifies a file parsed at startup, and builds a list of addresses (or address blocks) to trust as presenting a valid RemoteIPHeader value of the useragent IP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7fbf49795c7ecdbbc72d0de3c62794e3ccf94ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#remoteipproxiesheader&quot;&gt;RemoteIPProxiesHeader&lt;/a&gt;&lt;/code&gt; directive specifies a header into which &lt;code&gt;&lt;a href=&quot;mod_remoteip&quot;&gt;mod_remoteip&lt;/a&gt;&lt;/code&gt; will collect a list of all of the intermediate client IP addresses trusted to resolve the useragent IP of the request. Note that intermediate &lt;code&gt;&lt;a href=&quot;#remoteiptrustedproxy&quot;&gt;RemoteIPTrustedProxy&lt;/a&gt;&lt;/code&gt; addresses are recorded in this header, while any intermediate &lt;code&gt;&lt;a href=&quot;#remoteipinternalproxy&quot;&gt;RemoteIPInternalProxy&lt;/a&gt;&lt;/code&gt; addresses are discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04cb63a6b08efeaa7dd89c72bb57750b365883b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#remoteiptrustedproxy&quot;&gt;RemoteIPTrustedProxy&lt;/a&gt;&lt;/code&gt; directive adds one or more addresses (or address blocks) to trust as presenting a valid RemoteIPHeader value of the useragent IP. Unlike the &lt;code&gt;&lt;a href=&quot;#remoteipinternalproxy&quot;&gt;RemoteIPInternalProxy&lt;/a&gt;&lt;/code&gt; directive, any intranet or private IP address reported by such proxies, including the 10/8, 172.16/12, 192.168/16, 169.254/16 and 127/8 blocks (or outside of the IPv6 public 2000::/3 block) are not trusted as the useragent IP, and are left in the &lt;code&gt;&lt;a href=&quot;#remoteipheader&quot;&gt;RemoteIPHeader&lt;/a&gt;&lt;/code&gt; header's value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80076778e1d744217d79309859254a8c80570715" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#remoteiptrustedproxylist&quot;&gt;RemoteIPTrustedProxyList&lt;/a&gt;&lt;/code&gt; directive specifies a file parsed at startup, and builds a list of addresses (or address blocks) to trust as presenting a valid RemoteIPHeader value of the useragent IP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bcf9d9593e0360f43599b81d4fb28d2656219c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#ssilastmodified&quot;&gt;SSILastModified&lt;/a&gt;&lt;/code&gt; directive takes precedence over the &lt;code&gt;&lt;a href=&quot;#xbithack&quot;&gt;XBitHack&lt;/a&gt;&lt;/code&gt; directive when &lt;code&gt;&lt;a href=&quot;#ssilastmodified&quot;&gt;SSILastModified&lt;/a&gt;&lt;/code&gt; is set to &lt;code&gt;on&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fcc71eaacd30021589f057b72b0e40f9603f2f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;#undefmacro&quot;&gt;UndefMacro&lt;/a&gt;&lt;/code&gt; directive is used so that later macros using the same variable names don't result in conflicting definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187bf43cfd410e62b29b85b120880cd2d7cd2c99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/core#if&quot;&gt;&amp;lt;If&amp;gt;&lt;/a&gt;&lt;/code&gt; directive, added in 2.4, replaces many things that &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; has traditionally been used to do, and you should probably look there first before resorting to mod_rewrite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e7a1de5a60d2965ae65dc7357bcaecfa60d0f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/core#keepalivetimeout&quot;&gt;KeepAliveTimeout&lt;/a&gt;&lt;/code&gt; directive may be also lowered on sites that are subject to DoS attacks. Some sites even turn off the keepalives completely via &lt;code&gt;&lt;a href=&quot;../mod/core#keepalive&quot;&gt;KeepAlive&lt;/a&gt;&lt;/code&gt;, which has of course other drawbacks on performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d635be0677677e8836332c7677d267297f8cac93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/core#mutex&quot;&gt;Mutex&lt;/a&gt;&lt;/code&gt; directive can be used to change the mutex implementation of the &lt;code&gt;mpm-accept&lt;/code&gt; mutex at run-time. Special considerations for different mutex implementations are documented with that directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d982501c28e630de2620eb7680856c34242b06d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; directive may appear anywhere within the definition of a server. However, each appearance overrides the previous appearance (within that server). If no &lt;code&gt;ServerName&lt;/code&gt; is specified, the server attempts to deduce it from the server's IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ead8e8b6a095f77ad3e79913c2a22eb1774f6c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/core#timeout&quot;&gt;TimeOut&lt;/a&gt;&lt;/code&gt; directive should be lowered on sites that are subject to DoS attacks. Setting this to as low as a few seconds may be appropriate. As &lt;code&gt;&lt;a href=&quot;../mod/core#timeout&quot;&gt;TimeOut&lt;/a&gt;&lt;/code&gt; is currently used for several different operations, setting it to a low value introduces problems with long running CGI scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63743934117e49f67f31c0ff1b1bb4c6bcf69031" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/event&quot;&gt;event&lt;/a&gt;&lt;/code&gt; MPM is threaded like the Worker MPM, but is designed to allow more requests to be served simultaneously by passing off some processing work to supporting threads, freeing up the main threads to work on new requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c39398ebfd7915015940a148151912a8ca78140" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt; directives, provided by &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt;, are deprecated and will go away in a future version. You should avoid using them, and avoid outdated tutorials recommending their use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02072739b9dc56437348ba69bd0d7c0e4976c348" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; directive provides mapping from a URI to a directory - usually a directory outside of your &lt;code&gt;&lt;a href=&quot;../mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt;. Although it is possible to perform this mapping with &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; is the preferred method, for reasons of simplicity and performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696095564a2a7c02cfaccd999f79c9800c91fa66" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; directive looks like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9094581514a47c953a3929888384fb3006683429" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; directive tells Apache that a particular directory is set aside for CGI programs. Apache will assume that every file in this directory is a CGI program, and will attempt to execute it, when that particular resource is requested by a client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3161b27567e0525fc916aae6508065ff43ba77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_auth_basic&quot;&gt;mod_auth_basic&lt;/a&gt;&lt;/code&gt; method is generally required when the certificates are completely arbitrary, or when their DNs have no common fields (usually the organisation, etc.). In this case, you should establish a password database containing &lt;em&gt;all&lt;/em&gt; clients allowed, as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b367f4057c678e08584da1b98844be31aae58a2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_auth_basic#authbasicprovider&quot;&gt;AuthBasicProvider&lt;/a&gt;&lt;/code&gt; is, in this case, optional, since &lt;code&gt;file&lt;/code&gt; is the default value for this directive. You'll need to use this directive if you are choosing a different source for authentication, such as &lt;code&gt;&lt;a href=&quot;../mod/mod_authn_dbm&quot;&gt;mod_authn_dbm&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../mod/mod_authn_dbd&quot;&gt;mod_authn_dbd&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1c3cd162e306fb0475a36ab4af9ebf88863ea9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_authn_core#authname&quot;&gt;AuthName&lt;/a&gt;&lt;/code&gt; directive sets the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da31b36d17507d12c656bf5da047593b13e3054" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_authn_file#authuserfile&quot;&gt;AuthUserFile&lt;/a&gt;&lt;/code&gt; directive sets the path to the password file that we just created with &lt;code&gt;&lt;a href=&quot;../programs/htpasswd&quot;&gt;htpasswd&lt;/a&gt;&lt;/code&gt;. If you have a large number of users, it can be quite slow to search through a plain text file to authenticate the user on each request. Apache also has the ability to store user information in fast database files. The &lt;code&gt;&lt;a href=&quot;../mod/mod_authn_dbm&quot;&gt;mod_authn_dbm&lt;/a&gt;&lt;/code&gt; module provides the &lt;code&gt;&lt;a href=&quot;../mod/mod_authn_dbm#authdbmuserfile&quot;&gt;AuthDBMUserFile&lt;/a&gt;&lt;/code&gt; directive. These files can be created and manipulated with the &lt;code&gt;&lt;a href=&quot;../programs/dbmmanage&quot;&gt;dbmmanage&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../programs/htdbm&quot;&gt;htdbm&lt;/a&gt;&lt;/code&gt; programs. Many other types of authentication options are available from third party modules in the &lt;a href=&quot;http://modules.apache.org/&quot;&gt;Apache Modules Database&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26016257b4f9adaf4629ec615c9c1abc031c390f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; provides a variety of different ways to allow or deny access to resources. In conjunction with the &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_core#requireall&quot;&gt;RequireAll&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_core#requireany&quot;&gt;RequireAny&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_core#requirenone&quot;&gt;RequireNone&lt;/a&gt;&lt;/code&gt; directives, these requirements may be combined in arbitrarily complex ways, to enforce whatever your access policy happens to be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e031b68f8309b0ab7dd63fdb1f079f757ca70caa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; directive specifies the mapping of incoming requests to the backend server (or a cluster of servers known as a &lt;code&gt;Balancer&lt;/code&gt; group). The simpliest example proxies all requests (&lt;code&gt;&quot;/&quot;&lt;/code&gt;) to a single backend:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d616896c6a5d2d71de8a480f779f4b8b0485f4b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_reqtimeout#requestreadtimeout&quot;&gt;RequestReadTimeout&lt;/a&gt;&lt;/code&gt; directive allows to limit the time a client may take to send the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adbd9f47870dcaf1a1a1eec6a289609f2afee586" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt; directive captures the last portion of the hostname of the requesting client - the country code - and the following RewriteRule uses that value to look up the appropriate mirror host in the map file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a12dd775bcaebd7278178a3b3be25b1aeb5a5614" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritemap&quot;&gt;RewriteMap&lt;/a&gt;&lt;/code&gt; directive can occur more than once. For each mapping-function use one &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritemap&quot;&gt;RewriteMap&lt;/a&gt;&lt;/code&gt; directive to declare its rewriting mapfile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc9f91eaba6d73eb40ef83f4f71f87c83ede3311" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritemap&quot;&gt;RewriteMap&lt;/a&gt;&lt;/code&gt; directive defines an external function which can be called in the context of &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt; directives to perform rewriting that is too complicated, or too specialized to be performed just by regular expressions. The source of this lookup can be any of the types listed in the sections below, and enumerated in the &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritemap&quot;&gt;RewriteMap&lt;/a&gt;&lt;/code&gt; reference documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0af37ac1a30036cb42e33e97f6d4cf28d9c8541" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritemap&quot;&gt;RewriteMap&lt;/a&gt;&lt;/code&gt; directive may not be used in &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; sections or &lt;code&gt;.htaccess&lt;/code&gt; files. You must declare the map in server or virtualhost context. You may use the map, once created, in your &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt; directives in those scopes. You just can't &lt;strong&gt;declare&lt;/strong&gt; it in those scopes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e6cc4b3a3740276beccb3c8f01152731ce65e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritemap&quot;&gt;RewriteMap&lt;/a&gt;&lt;/code&gt; directive provides a way to call an external function, so to speak, to do your rewriting for you. This is discussed in greater detail in the &lt;a href=&quot;rewritemap&quot;&gt;RewriteMap supplementary documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbfe6d89ee53e68b563d963b293362334e05a927" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directives are used to make sure that a client which sent a correct &lt;code&gt;Host:&lt;/code&gt; header can use both URL variants, &lt;em&gt;i.e.&lt;/em&gt;, with or without URL prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a514e52fd00b9da64b695e9fa952ca9299f845c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; directives for the chosen modules will be automatically generated in the main configuration file. By default, all those directives will be commented out except for the modules that are either required or explicitly selected by a configure &lt;code&gt;--enable-foo&lt;/code&gt; argument. You can change the set of loaded modules by activating or deactivating the &lt;code&gt;&lt;a href=&quot;../mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; directives in &lt;code&gt;httpd.conf&lt;/code&gt;. In addition the &lt;code&gt;&lt;a href=&quot;../mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; directives for all built modules can be activated via the configure option &lt;code&gt;--enable-load-all-modules&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d00adc9b528bf34f42b81ee2fb7c8f245ab5ed8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslciphersuite&quot;&gt;SSLCipherSuite&lt;/a&gt;&lt;/code&gt; needs to be configured with a strong TLS cipher suite. The current version of &lt;code&gt;&lt;a href=&quot;../mod/mod_http2&quot;&gt;mod_http2&lt;/a&gt;&lt;/code&gt; does not enforce any cipher but most clients do so. Pointing a browser to a &lt;code&gt;h2&lt;/code&gt; enabled server with a inappropriate cipher suite will force it to simply refuse and fall back to HTTP 1.1. This is a common mistake that is done while configuring httpd for HTTP/2 the first time, so please keep it in mind to avoid long debugging sessions! If you want to be sure about the cipher suite to choose please avoid the ones listed in the &lt;a href=&quot;http://httpwg.org/specs/rfc7540.html#BadCipherSuites&quot;&gt;HTTP/2 TLS blacklist&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed14fb39f41f8421af4580581f11039b55082e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_userdir#userdir&quot;&gt;UserDir&lt;/a&gt;&lt;/code&gt; directive can be used to redirect user directory requests to external URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bed5cfccffc72c15de374853b0fbb70caf7ca91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/mod_userdir#userdir&quot;&gt;UserDir&lt;/a&gt;&lt;/code&gt; directive specifies a directory out of which per-user content is loaded. This directive may take several different forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb92d42738d130091c9ed09203c67056c3da085" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt; MPM uses multiple child processes with one thread each. Each process handles one connection at a time. On many systems, prefork is comparable in speed to worker, but it uses more memory. Prefork's threadless design has advantages over worker in some situations: it can be used with non-thread-safe third-party modules, and it is easier to debug on platforms with poor thread debugging support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16913bab414f1539a61f86276df3ca92401e0caf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../mod/worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt; MPM uses multiple child processes with many threads each. Each thread handles one connection at a time. Worker generally is a good choice for high-traffic servers because it has a smaller memory footprint than the prefork MPM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6baad9e0725ee24f424442191a0b75cddd1e9bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt;&lt;/code&gt; tool is provided to list cached URLs, remove cached URLs, or to maintain the size of the disk cache within size and/or inode limits. The tool can be run on demand, or can be daemonized to offer continuous monitoring of directory sizes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac04d2e3dde26ae8a7d546bd40b10c4d7afb366c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;event&quot;&gt;event&lt;/a&gt;&lt;/code&gt; Multi-Processing Module (MPM) is designed to allow more requests to be served simultaneously by passing off some processing work to the listeners threads, freeing up the worker threads to serve new requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0944e3833c5de42b448c6553b935228535b96d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; directive works only in &lt;code&gt;&lt;a href=&quot;mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; sections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d527634c06a8050288b6fb00b7de615a8a66d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod/core#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt; directives, along with their &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regex&lt;/a&gt; counterparts, apply directives to parts of the filesystem. Directives enclosed in a &lt;code&gt;&lt;a href=&quot;mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; section apply to the named filesystem directory and all subdirectories of that directory (as well as the files in those directories). The same effect can be obtained using &lt;a href=&quot;howto/htaccess&quot;&gt;.htaccess files&lt;/a&gt;. For example, in the following configuration, directory indexes will be enabled for the &lt;code&gt;/var/web/dir1&lt;/code&gt; directory and all subdirectories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d27d0becc85e2e99e0e0a5bf2dea7fda59e17d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/core#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;mod/core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; directives can each use shell-style wildcard characters as in &lt;code&gt;fnmatch&lt;/code&gt; from the C standard library. The character &quot;*&quot; matches any sequence of characters, &quot;?&quot; matches any single character, and &quot;[&lt;em&gt;seq&lt;/em&gt;]&quot; matches any character in &lt;em&gt;seq&lt;/em&gt;. The &quot;/&quot; character will not be matched by any wildcard; it must be specified explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a40ba5ab7e87328b6f03cff6eca9ea0f9e0373" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; directive is set in your main server configuration file (&lt;code&gt;httpd.conf&lt;/code&gt;) and, possibly, once per additional &lt;a href=&quot;vhosts/index&quot;&gt;Virtual Host&lt;/a&gt; you create.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ae0798ef41ae79e41647088972bd401fd5f508" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; of the current vhost</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e15d9af0cfcbeae638f6349c67f7e2f9024f51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/core#if&quot;&gt;&amp;lt;If&amp;gt;&lt;/a&gt;&lt;/code&gt; directive change the configuration depending on a condition which can be expressed by a boolean expression. For example, the following configuration denies access if the HTTP Referer header does not start with &quot;http://www.example.com/&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbd939334fa5acbb058d0252c693a37cfd19e28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/core#ifdefine&quot;&gt;&amp;lt;IfDefine&amp;gt;&lt;/a&gt;&lt;/code&gt; directive encloses directives that will only be applied if an appropriate parameter is defined on the &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; command line. For example, with the following configuration, all requests will be redirected to another site only if the server is started using &lt;code&gt;httpd -DClosedForNow&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2300a83657a9180120e38f04e8498f156c5cee5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/core#ifmodule&quot;&gt;&amp;lt;IfModule&amp;gt;&lt;/a&gt;&lt;/code&gt; directive is very similar, except it encloses directives that will only be applied if a particular module is available in the server. The module must either be statically compiled in the server, or it must be dynamically compiled and its &lt;code&gt;&lt;a href=&quot;mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; line must be earlier in the configuration file. This directive should only be used if you need your configuration file to work whether or not certain modules are installed. It should not be used to enclose directives that you want to work all the time, because it can suppress useful error messages about missing modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b4bd65a472473ef5ac35fc9116bfda7e7d0db4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; directive and its &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regex&lt;/a&gt; counterpart, on the other hand, change the configuration for content in the webspace. For example, the following configuration prevents access to any URL-path that begins in /private. In particular, it will apply to requests for &lt;code&gt;http://yoursite.example.com/private&lt;/code&gt;, &lt;code&gt;http://yoursite.example.com/private123&lt;/code&gt;, and &lt;code&gt;http://yoursite.example.com/private/dir/file.html&lt;/code&gt; as well as any other requests starting with the &lt;code&gt;/private&lt;/code&gt; string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa95cd0cefe4a1f3532aa74018e1ae66052be9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; directive need not have anything to do with the filesystem. For example, the following example shows how to map a particular URL to an internal Apache HTTP Server handler provided by &lt;code&gt;&lt;a href=&quot;mod/mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt;. No file called &lt;code&gt;server-status&lt;/code&gt; needs to exist in the filesystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8a52046ff224595c0c8dfd45c3f6ced1014c86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/core#loglevel&quot;&gt;LogLevel&lt;/a&gt;&lt;/code&gt; directive allows you to specify a log severity level on a per-module basis. In this way, if you are troubleshooting a problem with just one particular module, you can turn up its logging volume without also getting the details of other modules that you're not interested in. This is particularly useful for modules such as &lt;code&gt;&lt;a href=&quot;mod/mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; where you want to know details about what it's trying to do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e228c8593c846ebdc5af9e39f6dcfe313dbf58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/core#options&quot;&gt;Options&lt;/a&gt;&lt;/code&gt; directive cannot be used in &lt;code&gt;&lt;a href=&quot;mod/core#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod/core#filesmatch&quot;&gt;&amp;lt;FilesMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; sections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ebb196446924cc898debf896852e111ea6f2e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/core#serveradmin&quot;&gt;ServerAdmin&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod/core#servertokens&quot;&gt;ServerTokens&lt;/a&gt;&lt;/code&gt; directives control what information about the server will be presented in server-generated documents such as error messages. The &lt;code&gt;&lt;a href=&quot;mod/core#servertokens&quot;&gt;ServerTokens&lt;/a&gt;&lt;/code&gt; directive sets the value of the Server HTTP response header field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d65d725eb063cd740279b3805c03458abc00e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/core#serveradmin&quot;&gt;ServerAdmin&lt;/a&gt;&lt;/code&gt; of the current vhost</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ea10d2e58020693eee596d7aaa8e0ae09fe6d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; of the current vhost</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269ecc188e773a5a7b5d57514bd9346cd629e57c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/core#usecanonicalname&quot;&gt;UseCanonicalName&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod/core#usecanonicalphysicalport&quot;&gt;UseCanonicalPhysicalPort&lt;/a&gt;&lt;/code&gt; directives are used by the server to determine how to construct self-referential URLs. For example, when a client requests a directory, but does not include the trailing slash in the directory name, httpd must redirect the client to the full name including the trailing slash so that the client will correctly resolve relative references in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec801e955ef957f0526ca7f9675bd88251df4805" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; container encloses directives that apply to specific hosts. This is useful when serving multiple hosts from the same machine with a different configuration for each. For more information, see the &lt;a href=&quot;vhosts/index&quot;&gt;Virtual Host Documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d4993e0a2405595436f3083096ca7c5cb3a95e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/mod_authn_socache&quot;&gt;mod_authn_socache&lt;/a&gt;&lt;/code&gt; module allows the result of authentication to be cached, relieving load on authentication backends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5740cb4e75d44d964582c15cf46ac886aeae7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; module hooks into the server in two possible places depending on the value of the &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachequickhandler&quot;&gt;CacheQuickHandler&lt;/a&gt;&lt;/code&gt; directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c0c09ae172761167576c4bea0a7e1a494eb98c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; module relies on specific backend store implementations in order to manage the cache, and for caching to disk &lt;code&gt;&lt;a href=&quot;mod/mod_cache_disk&quot;&gt;mod_cache_disk&lt;/a&gt;&lt;/code&gt; is provided to support this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2715244c134e3fe49e366e6c1c815ac9afa0b564" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/mod_cache_disk&quot;&gt;mod_cache_disk&lt;/a&gt;&lt;/code&gt; module makes no attempt to regulate the amount of disk space used by the cache, although it will gracefully stand down on any disk error and behave as if the cache was never present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc45f175d1509426c7b1cfd7447fd775399fea5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/mod_env#setenv&quot;&gt;SetEnv&lt;/a&gt;&lt;/code&gt; directive runs late during request processing meaning that directives such as &lt;code&gt;&lt;a href=&quot;mod/mod_setenvif#setenvif&quot;&gt;SetEnvIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod/mod_rewrite#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt; will not see the variables set with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3966d901993090b6da71529c82f032df916d62a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/mod_file_cache#cachefile&quot;&gt;CacheFile&lt;/a&gt;&lt;/code&gt; directive instructs httpd to open the file when it is started and to re-use this file-handle for all subsequent access to this file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b8f0b5c345931c2b28f29d6fcb0d3b3a249070" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/mod_file_cache#mmapfile&quot;&gt;MMapFile&lt;/a&gt;&lt;/code&gt; directive does not keep track of how much memory it allocates, so you must ensure not to over-use the directive. Each httpd child process will replicate this memory, so it is critically important to ensure that the files mapped are not so large as to cause the system to swap memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e3a5494dde8cb2464083407cec8ffcd437056c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/mod_headers#header&quot;&gt;Header&lt;/a&gt;&lt;/code&gt; directive can use the presence or absence of an environment variable to determine whether or not a certain HTTP header will be placed in the response to the client. This allows, for example, a certain response header to be sent only if a corresponding header is received in the request from the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2731b289789b8977a3af5ad544e3538aef390c54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/mod_log_config#customlog&quot;&gt;CustomLog&lt;/a&gt;&lt;/code&gt; directive sets up a new log file using the defined &lt;em&gt;nickname&lt;/em&gt;. The filename for the access log is relative to the &lt;code&gt;&lt;a href=&quot;mod/core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; unless it begins with a slash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aafd89fb3e5f4288a7a2cabfb864cb8cc6754a8c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/mod_proxy#proxy&quot;&gt;&amp;lt;Proxy&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod/mod_proxy#proxymatch&quot;&gt;&amp;lt;ProxyMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; containers apply enclosed configuration directives only to sites accessed through &lt;code&gt;&lt;a href=&quot;mod/mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;'s proxy server that match the specified URL. For example, the following configuration will allow only a subset of clients to access the &lt;code&gt;www.example.com&lt;/code&gt; website using the proxy server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60194b7395aab7f5c6a5e55578bf901e58d91260" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; configures the server to fetch the appropriate documents, while the &lt;code&gt;&lt;a href=&quot;mod/mod_proxy#proxypassreverse&quot;&gt;ProxyPassReverse&lt;/a&gt;&lt;/code&gt; directive rewrites redirects originating at &lt;code&gt;internal.example.com&lt;/code&gt; so that they target the appropriate directory on the local server. Similarly, the &lt;code&gt;&lt;a href=&quot;mod/mod_proxy#proxypassreversecookiedomain&quot;&gt;ProxyPassReverseCookieDomain&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod/mod_proxy#proxypassreversecookiepath&quot;&gt;ProxyPassReverseCookiePath&lt;/a&gt;&lt;/code&gt; rewrite cookies set by the backend server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4eb02cf2c2c84cfcc5225ecef223edbacb34f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; module uses the &lt;code&gt;socache&lt;/code&gt; interface to provide a session cache and a stapling cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45384395dfef54839c1bc7d4e00d38a7b3c7ac2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/mod_version#ifversion&quot;&gt;&amp;lt;IfVersion&amp;gt;&lt;/a&gt;&lt;/code&gt; directive is very similar to &lt;code&gt;&lt;a href=&quot;mod/core#ifdefine&quot;&gt;&amp;lt;IfDefine&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod/core#ifmodule&quot;&gt;&amp;lt;IfModule&amp;gt;&lt;/a&gt;&lt;/code&gt;, except it encloses directives that will only be applied if a particular version of the server is executing. This module is designed for the use in test suites and large networks which have to deal with different httpd versions and different configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c22e758096f2af957437b1851b4ccdd598e113b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; directive does not implement Virtual Hosts - it only tells the main server what addresses and ports to listen on. If no &lt;code&gt;&lt;a href=&quot;mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; directives are used, the server will behave in the same way for all accepted requests. However, &lt;code&gt;&lt;a href=&quot;mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; can be used to specify a different behavior for one or more of the addresses or ports. To implement a VirtualHost, the server must first be told to listen to the address and port to be used. Then a &lt;code&gt;&lt;a href=&quot;mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; section should be created for the specified address and port to set the behavior of this virtual host. Note that if the &lt;code&gt;&lt;a href=&quot;mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; is set for an address and port that the server is not listening to, it cannot be accessed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14917cf5fdbb6bd9e902be1a86a632862a178af1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; directive tells the server to accept incoming requests only on the specified port(s) or address-and-port combinations. If only a port number is specified in the &lt;code&gt;&lt;a href=&quot;mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; directive, the server listens to the given port on all interfaces. If an IP address is given as well as a port, the server will listen on the given port and interface. Multiple &lt;code&gt;&lt;a href=&quot;mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; directives may be used to specify a number of addresses and ports to listen on. The server will respond to requests from any of the listed addresses and ports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eedb1a3562d51d4b07062a90fd138029b0f2140e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod/mpm_common#threadstacksize&quot;&gt;ThreadStackSize&lt;/a&gt;&lt;/code&gt; directive is used with some platforms to control the stack size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418e2e31677b202a21077547022502073b2973a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod_brotli&quot;&gt;mod_brotli&lt;/a&gt;&lt;/code&gt; module provides the &lt;code&gt;BROTLI_COMPRESS&lt;/code&gt; output filter that allows output from your server to be compressed using the brotli compression format before being sent to the client over the network. This module uses the Brotli library found at &lt;a href=&quot;https://github.com/google/brotli&quot;&gt;https://github.com/google/brotli&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0547ba951ca8d0fff3ee243761b95972743a882" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod_brotli&quot;&gt;mod_brotli&lt;/a&gt;&lt;/code&gt; module sends a &lt;code&gt;Vary: Accept-Encoding&lt;/code&gt; HTTP response header to alert proxies that a cached response should be sent only to clients that send the appropriate &lt;code&gt;Accept-Encoding&lt;/code&gt; request header. This prevents compressed content from being sent to a client that will not understand it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e43750cfb11d93c1c45fbab378bdfef012a07ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod_cache_socache&quot;&gt;mod_cache_socache&lt;/a&gt;&lt;/code&gt; module will only attempt to cache responses that have an explicit content length, or that are small enough to be written in one pass. This is done to allow the &lt;code&gt;&lt;a href=&quot;mod_cache_disk&quot;&gt;mod_cache_disk&lt;/a&gt;&lt;/code&gt; module to have an opportunity to cache responses larger than those cacheable within &lt;code&gt;&lt;a href=&quot;mod_cache_socache&quot;&gt;mod_cache_socache&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1889ab7fc855e0ed784ec684df7ae55138d7fbf5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod_deflate&quot;&gt;mod_deflate&lt;/a&gt;&lt;/code&gt; module also provides a filter for decompressing a gzip compressed request body . In order to activate this feature you have to insert the &lt;code&gt;DEFLATE&lt;/code&gt; filter into the input filter chain using &lt;code&gt;&lt;a href=&quot;core#setinputfilter&quot;&gt;SetInputFilter&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_mime#addinputfilter&quot;&gt;AddInputFilter&lt;/a&gt;&lt;/code&gt;, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbdf6376f68bdd0c727ea77b6b32bb3977a981e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod_deflate&quot;&gt;mod_deflate&lt;/a&gt;&lt;/code&gt; module also provides a filter for inflating/uncompressing a gzip compressed response body. In order to activate this feature you have to insert the &lt;code&gt;INFLATE&lt;/code&gt; filter into the output filter chain using &lt;code&gt;&lt;a href=&quot;core#setoutputfilter&quot;&gt;SetOutputFilter&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_mime#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt;, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f483b3e7971df2f05aa7f51197f799d40987ea0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod_deflate&quot;&gt;mod_deflate&lt;/a&gt;&lt;/code&gt; module provides the &lt;code&gt;DEFLATE&lt;/code&gt; output filter that allows output from your server to be compressed before being sent to the client over the network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368ecc7d2013046b367c8b1f03aaf7dff615aee1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod_deflate&quot;&gt;mod_deflate&lt;/a&gt;&lt;/code&gt; module sends a &lt;code&gt;Vary: Accept-Encoding&lt;/code&gt; HTTP response header to alert proxies that a cached response should be sent only to clients that send the appropriate &lt;code&gt;Accept-Encoding&lt;/code&gt; request header. This prevents compressed content from being sent to a client that will not understand it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884bea6958afdd2c60c8b4059ab309395558d369" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod_dumpio#dumpioinput&quot;&gt;DumpIOInput&lt;/a&gt;&lt;/code&gt; directive can help while reviewing the HTTP request to identify issues like the absence of CRLF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8431e4683d240f3ba85018be38a5e44629a04b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9742b4edfebe5e80b7fc8b9b91b1483c63b81b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod_log_config#logformat&quot;&gt;LogFormat&lt;/a&gt;&lt;/code&gt; directives &lt;code&gt;%V&lt;/code&gt; and &lt;code&gt;%A&lt;/code&gt; are useful in conjunction with this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6ee5c4c5bcbdd0c8064c5d9c29b9a5a03e11a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod_mime#multiviewsmatch&quot;&gt;MultiviewsMatch&lt;/a&gt;&lt;/code&gt; directive configures whether Apache will consider files that do not have content negotiation meta-information assigned to them when choosing files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b83e75ec0c311f186da3f303dba3ff126940b07" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; module uses a rule-based rewriting engine, based on a PCRE regular-expression parser, to rewrite requested URLs on the fly. By default, &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; maps a URL to a filesystem path. However, it can also be used to redirect one URL to another URL, or to invoke an internal proxy fetch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3848fc4fc997051c6892eca1560688a0f356e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod_sed&quot;&gt;mod_sed&lt;/a&gt;&lt;/code&gt; input filter reads the data from the next filter in the chain, executes the &lt;code&gt;sed&lt;/code&gt; scripts, and returns the generated data to the caller filter in the filter chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaffccf716be67bb66b8edbae65c2305f320fca6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod_sed&quot;&gt;mod_sed&lt;/a&gt;&lt;/code&gt; output filter accepts a chunk of data, executes the &lt;code&gt;sed&lt;/code&gt; scripts on the data, and generates the output which is passed to the next filter in the chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881ace5c2ea9e9b58a9215f72a0d12dbb02fc7b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod_session_cookie&quot;&gt;mod_session_cookie&lt;/a&gt;&lt;/code&gt; allows the storage of user sessions on the browser within an HTTP cookie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a38637348d5c1e9cc92c2da87cea3a654313d1a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod_session_dbd&quot;&gt;mod_session_dbd&lt;/a&gt;&lt;/code&gt; module allows the storage of user sessions within a SQL database via &lt;code&gt;&lt;a href=&quot;mod_dbd&quot;&gt;mod_dbd&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d109d7ae971238f82f487c6f94dda453ec571c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mod_setenvif&quot;&gt;mod_setenvif&lt;/a&gt;&lt;/code&gt; module allows you to set internal environment variables according to whether different aspects of the request match regular expressions you specify. These environment variables can be used by other parts of the server to make decisions about actions to be taken, as well as becoming available to CGI scripts and SSI pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840c6c26a69f28ccdde2033f68393e4d04848963" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mpm_common#startservers&quot;&gt;StartServers&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#minspareservers&quot;&gt;MinSpareServers&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#maxspareservers&quot;&gt;MaxSpareServers&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;mpm_common#maxrequestworkers&quot;&gt;MaxRequestWorkers&lt;/a&gt;&lt;/code&gt; regulate how the parent process creates children to serve requests. In general, Apache httpd is very self-regulating, so most sites do not need to adjust these directives from their default values. Sites which need to serve more than 256 simultaneous requests may need to increase &lt;code&gt;&lt;a href=&quot;mpm_common#maxrequestworkers&quot;&gt;MaxRequestWorkers&lt;/a&gt;&lt;/code&gt;, while sites with limited memory may need to decrease &lt;code&gt;&lt;a href=&quot;mpm_common#maxrequestworkers&quot;&gt;MaxRequestWorkers&lt;/a&gt;&lt;/code&gt; to keep the server from thrashing (swapping memory to disk and back). More information about tuning process creation is provided in the &lt;a href=&quot;../misc/perf-tuning&quot;&gt;performance hints&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ca2cd4ad5cd748d86b6a8b3e20dc051229f29f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;mpm_common#startthreads&quot;&gt;StartThreads&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mpm_common#minsparethreads&quot;&gt;MinSpareThreads&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mpm_common#maxsparethreads&quot;&gt;MaxSpareThreads&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#maxthreads&quot;&gt;MaxThreads&lt;/a&gt;&lt;/code&gt; regulate how the main thread creates worker threads to serve requests. In general, Apache httpd is very self-regulating, so most sites do not need to adjust these directives from their default values. Sites with limited memory may need to decrease &lt;code&gt;&lt;a href=&quot;#maxthreads&quot;&gt;MaxThreads&lt;/a&gt;&lt;/code&gt; to keep the server from thrashing (spawning and terminating idle threads). More information about tuning process creation is provided in the &lt;a href=&quot;../misc/perf-tuning&quot;&gt;performance hints&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f038afc3b76a3fd8e13f989c5ca7db11265e880" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;programs/apachectl&quot;&gt;apachectl&lt;/a&gt;&lt;/code&gt; script is designed to act like a standard SysV init script; it can take the arguments &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;restart&lt;/code&gt;, and &lt;code&gt;stop&lt;/code&gt; and translate them into the appropriate signals to &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt;. So you can often simply link &lt;code&gt;&lt;a href=&quot;programs/apachectl&quot;&gt;apachectl&lt;/a&gt;&lt;/code&gt; into the appropriate init directory. But be sure to check the exact requirements of your system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77459b90a47cc75f7fa24c5bd3455ee8748b813d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AJP13&lt;/code&gt; protocol is packet-oriented. A binary format was presumably chosen over the more readable plain text for reasons of performance. The web server communicates with the servlet container over TCP connections. To cut down on the expensive process of socket creation, the web server will attempt to maintain persistent TCP connections to the servlet container, and to reuse a connection for multiple request/response cycles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e3b6ff69b5ed2e0330294295756c191854e8bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Accept:&lt;/code&gt; request header indicates preferences for media types. It can also include 'wildcard' media types, such as &quot;image/*&quot; or &quot;*/*&quot; where the * matches any string. So a request including:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e288a99738e5972e90e2238396f9060dc31ff88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AddCharset&lt;/code&gt; directive maps the given filename extensions to the specified content charset (the Internet registered name for a given character encoding). &lt;var&gt;charset&lt;/var&gt; is the &lt;a href=&quot;http://www.iana.org/assignments/character-sets&quot;&gt;media type's charset parameter&lt;/a&gt; for resources with filenames containing &lt;var&gt;extension&lt;/var&gt;. This mapping is added to any already in force, overriding any mappings that already exist for the same &lt;var&gt;extension&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fce4dd304683289699acfc41889fe9f7bc532c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AddEncoding&lt;/code&gt; directive maps the given filename extensions to the specified HTTP content-encoding. &lt;var&gt;encoding&lt;/var&gt; is the HTTP content coding to append to the value of the Content-Encoding header field for documents named with the &lt;var&gt;extension&lt;/var&gt;. This mapping is added to any already in force, overriding any mappings that already exist for the same &lt;var&gt;extension&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ad0ecaf207783ff6938e18a3516b2c8c09eb2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AddLanguage&lt;/code&gt; directive maps the given filename extension to the specified content language. Files with the filename &lt;var&gt;extension&lt;/var&gt; are assigned an HTTP Content-Language value of &lt;var&gt;language-tag&lt;/var&gt; corresponding to the language identifiers defined by RFC 3066. This directive overrides any mappings that already exist for the same &lt;var&gt;extension&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872ffbb6343cebd7b7534a2e928d66f8ac9a90cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AddOutputFilter&lt;/code&gt; directive maps the filename extension &lt;var&gt;extension&lt;/var&gt; to the &lt;a href=&quot;../filter&quot;&gt;filters&lt;/a&gt; which will process responses from the server before they are sent to the client. This is in addition to any filters defined elsewhere, including &lt;code&gt;&lt;a href=&quot;core#setoutputfilter&quot;&gt;SetOutputFilter&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_filter#addoutputfilterbytype&quot;&gt;AddOutputFilterByType&lt;/a&gt;&lt;/code&gt; directive. This mapping is merged over any already in force, overriding any mappings that already exist for the same &lt;var&gt;extension&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6988a461422e84fed1f93b8dae02e55f88f598" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AddType&lt;/code&gt; directive maps the given filename extensions onto the specified content type. &lt;var&gt;media-type&lt;/var&gt; is the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#media-type&quot;&gt;media type&lt;/a&gt; to use for filenames containing &lt;var&gt;extension&lt;/var&gt;. This mapping is added to any already in force, overriding any mappings that already exist for the same &lt;var&gt;extension&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68a2ba7500d98a2767a3c538f6a7855e5b8ee79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Alias&lt;/code&gt; directive allows documents to be stored in the local filesystem other than under the &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt;. URLs with a (%-decoded) path beginning with &lt;var&gt;URL-path&lt;/var&gt; will be mapped to local files beginning with &lt;var&gt;directory-path&lt;/var&gt;. The &lt;var&gt;URL-path&lt;/var&gt; is case-sensitive, even on case-insensitive file systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6565d6b54a9512bf3716e1eb8fe9041ae003b11e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Allow&lt;/code&gt; directive affects which hosts can access an area of the server. Access can be controlled by hostname, IP address, IP address range, or by other characteristics of the client request captured in environment variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2f1857106addead16b3f9552ba80fc2280e32a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AllowCONNECT&lt;/code&gt; directive specifies a list of port numbers or ranges to which the proxy &lt;code&gt;CONNECT&lt;/code&gt; method may connect. Today's browsers use this method when a &lt;code&gt;https&lt;/code&gt; connection is requested and proxy tunneling over HTTP is in effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="077559e4841df1483d38262899aee3bf8df53ba8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AllowEncodedSlashes&lt;/code&gt; directive allows URLs which contain encoded path separators (&lt;code&gt;%2F&lt;/code&gt; for &lt;code&gt;/&lt;/code&gt; and additionally &lt;code&gt;%5C&lt;/code&gt; for &lt;code&gt;\&lt;/code&gt; on accordant systems) to be used in the path info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26de8ff3f0c2670794e50bddeca463f5ef87de28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AuthBasicProvider&lt;/code&gt; directive sets which provider is used to authenticate the users for this location. The default &lt;code&gt;file&lt;/code&gt; provider is implemented by the &lt;code&gt;&lt;a href=&quot;mod_authn_file&quot;&gt;mod_authn_file&lt;/a&gt;&lt;/code&gt; module. Make sure that the chosen provider module is present in the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae249278d7a940397dc391cadd764d6206df67b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AuthDBDUserPWQuery&lt;/code&gt; specifies an SQL query to look up a password for a specified user. The user's ID will be passed as a single string parameter when the SQL query is executed. It may be referenced within the query statement using a &lt;code&gt;%s&lt;/code&gt; format specifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca669bc6a882e84a9a0a2dd77249cfd99459d97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AuthDBDUserRealmQuery&lt;/code&gt; specifies an SQL query to look up a password for a specified user and realm in a digest authentication process. The user's ID and the realm, in that order, will be passed as string parameters when the SQL query is executed. They may be referenced within the query statement using &lt;code&gt;%s&lt;/code&gt; format specifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e0758861b1a0b487b63956d55137cbaa451043" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AuthDBMGroupFile&lt;/code&gt; directive sets the name of a DBM file containing the list of user groups for user authorization. &lt;var&gt;File-path&lt;/var&gt; is the absolute path to the group file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d5dd8509c0de513c46ba6fa034af72f5fce7da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AuthDBMUserFile&lt;/code&gt; directive sets the name of a DBM file containing the list of users and passwords for user authentication. &lt;var&gt;File-path&lt;/var&gt; is the absolute path to the user file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17286cca81e8d72e6125ffc4b9624e3dfa1072ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AuthDigestAlgorithm&lt;/code&gt; directive selects the algorithm used to calculate the challenge and response hashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2add37b3e5d060bc6f117071c6b381e5eb43f9a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AuthDigestDomain&lt;/code&gt; directive allows you to specify one or more URIs which are in the same protection space (&lt;em&gt;i.e.&lt;/em&gt; use the same realm and username/password info). The specified URIs are prefixes; the client will assume that all URIs &quot;below&quot; these are also protected by the same username/password. The URIs may be either absolute URIs (&lt;em&gt;i.e.&lt;/em&gt; including a scheme, host, port, etc.) or relative URIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe916b494fa24518c8b22814024ce6ffb72330d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AuthDigestNonceLifetime&lt;/code&gt; directive controls how long the server nonce is valid. When the client contacts the server using an expired nonce the server will send back a 401 with &lt;code&gt;stale=true&lt;/code&gt;. If &lt;var&gt;seconds&lt;/var&gt; is greater than 0 then it specifies the amount of time for which the nonce is valid; this should probably never be set to less than 10 seconds. If &lt;var&gt;seconds&lt;/var&gt; is less than 0 then the nonce never expires.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="206ca2ce7a57f1d5b2d877dd47b4c34951354963" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AuthDigestProvider&lt;/code&gt; directive sets which provider is used to authenticate the users for this location. The default &lt;code&gt;file&lt;/code&gt; provider is implemented by the &lt;code&gt;&lt;a href=&quot;mod_authn_file&quot;&gt;mod_authn_file&lt;/a&gt;&lt;/code&gt; module. Make sure that the chosen provider module is present in the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed864c9e6692f98389addba6c2cbffe0f55a9d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AuthDigestQop&lt;/code&gt; directive determines the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcae80e07f4ed0b6e5c1d7a44f4a62f8bc98bbee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AuthDigestShmemSize&lt;/code&gt; directive defines the amount of shared memory, that will be allocated at the server startup for keeping track of clients. Note that the shared memory segment cannot be set less than the space that is necessary for tracking at least &lt;em&gt;one&lt;/em&gt; client. This value is dependent on your system. If you want to find out the exact value, you may simply set &lt;code&gt;AuthDigestShmemSize&lt;/code&gt; to the value of &lt;code&gt;0&lt;/code&gt; and read the error message after trying to start the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08bce56873edc296237f2b65ebd4cb448eb20bc0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AuthFormProvider&lt;/code&gt; directive sets which provider is used to authenticate the users for this location. The default &lt;code&gt;file&lt;/code&gt; provider is implemented by the &lt;code&gt;&lt;a href=&quot;mod_authn_file&quot;&gt;mod_authn_file&lt;/a&gt;&lt;/code&gt; module. Make sure that the chosen provider module is present in the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684259f64215e59ed3761a72c6c57557f779ceed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AuthGroupFile&lt;/code&gt; directive sets the name of a textual file containing the list of user groups for user authorization. &lt;var&gt;File-path&lt;/var&gt; is the path to the group file. If it is not absolute, it is treated as relative to the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7d90899335be44058bf8768bfbfd915a2a79e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AuthLDAPCharsetConfig&lt;/code&gt; directive sets the location of the language to charset conversion configuration file. &lt;var&gt;File-path&lt;/var&gt; is relative to the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;. This file specifies the list of language extensions to character sets. Most administrators use the provided &lt;code&gt;charset.conv&lt;/code&gt; file, which associates common language extensions to character sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5748e8ccf4c9b59022258305a561f67eb29c1df5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AuthUserFile&lt;/code&gt; directive sets the name of a textual file containing the list of users and passwords for user authentication. &lt;var&gt;File-path&lt;/var&gt; is the path to the user file. If it is not absolute, it is treated as relative to the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b8ee13a4aac052a6b1b1b7bb04569684691bd6d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AuthzDBDQuery&lt;/code&gt; specifies an SQL query to run. The purpose of the query depends on the &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; directive in effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b23ac4ec1ed6abdb06f6fb61a4ed578fd43bf739" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BROTLI_COMPRESS&lt;/code&gt; filter is always inserted after RESOURCE filters like PHP or SSI. It never touches internal subrequests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830efdd63d61387ca455b11c1be4aeded1fd7d53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrotliAlterETag&lt;/code&gt; directive specifies how the ETag hader should be altered when a response is compressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d1e84a3c8777763e571fc4be42c283bcd002f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrotliCompressionMaxInputBlock&lt;/code&gt; directive specifies the maximum input block size between 16 and 24, with the caveat that larger block sizes require more memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8222a8921577b79c486cc8504108e2be2cea5ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrotliCompressionQuality&lt;/code&gt; directive specifies the compression quality (a value between 0 and 11). Higher quality values result in better, but also slower compression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed3e6d91ae92088073f27f6bd373be29d3bc265" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrotliCompressionWindow&lt;/code&gt; directive specifies the brotli sliding compression window size (a value between 10 and 24). Larger window sizes can improve compression quality, but require more memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb7977a10074f4eb4af20421ea30ab6a3cb315c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrotliFilterNote&lt;/code&gt; directive specifies that a note about compression ratios should be attached to the request. The name of the note is the value specified for the directive. You can use that note for statistical purposes by adding the value to your &lt;a href=&quot;../logs#accesslog&quot;&gt;access log&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280665b67002e3d71419d79a70cfbaea14fad7bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrowserMatch&lt;/code&gt; and &lt;code&gt;BrowserMatchNoCase&lt;/code&gt; directives are special cases of the &lt;code&gt;&lt;a href=&quot;#setenvif&quot;&gt;SetEnvIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#setenvifnocase&quot;&gt;SetEnvIfNoCase&lt;/a&gt;&lt;/code&gt; directives. The following two lines have the same effect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8356a20034b889e8bc7a5774aa17c9dd03f6fa6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrowserMatch&lt;/code&gt; is a special cases of the &lt;code&gt;&lt;a href=&quot;#setenvif&quot;&gt;SetEnvIf&lt;/a&gt;&lt;/code&gt; directive that sets environment variables conditional on the &lt;code&gt;User-Agent&lt;/code&gt; HTTP request header. The following two lines have the same effect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e191f32911ba637272cb1558aeb1b1bf2ee7f1ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrowserMatchNoCase&lt;/code&gt; directive is semantically identical to the &lt;code&gt;&lt;a href=&quot;#browsermatch&quot;&gt;BrowserMatch&lt;/a&gt;&lt;/code&gt; directive. However, it provides for case-insensitive matching. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2a84d15e82d57e7a3d36f3c20f2a7a9e541c7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BufferedLogs&lt;/code&gt; directive causes &lt;code&gt;&lt;a href=&quot;mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt; to store several log entries in memory and write them together to disk, rather than writing them after each request. On some systems, this may result in more efficient disk access and hence higher performance. It may be set only once for the entire server; it cannot be configured per virtual-host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b56ba0419bcaa0895e23951a01826523b1d224" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheDefaultExpire&lt;/code&gt; directive specifies a default time, in seconds, to cache a document if neither an expiry date nor last-modified date are provided with the document. The value specified with the &lt;code&gt;CacheMaxExpire&lt;/code&gt; directive does &lt;em&gt;not&lt;/em&gt; override this setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab0ec28d3e8615872e63e630785317f5e57ba60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheDirLength&lt;/code&gt; directive sets the number of characters for each subdirectory name in the cache hierarchy. It can be used in conjunction with &lt;code&gt;CacheDirLevels&lt;/code&gt; to determine the approximate structure of your cache hierarchy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5ebccb56132bb44d40516e7f31e13363311858" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheDirLevels&lt;/code&gt; directive sets the number of subdirectory levels in the cache. Cached data will be saved this many directory levels below the &lt;code&gt;&lt;a href=&quot;#cacheroot&quot;&gt;CacheRoot&lt;/a&gt;&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919f9dd15d82ed099ae36de5c19a3c26e5bacbac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheDisable&lt;/code&gt; directive instructs &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; to &lt;em&gt;not&lt;/em&gt; cache urls at or below &lt;var&gt;url-string&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c628b6326cbadc06110e61e6df4999ff05678e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheEnable&lt;/code&gt; directive instructs &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; to cache urls at or below &lt;var&gt;url-string&lt;/var&gt;. The cache storage manager is specified with the &lt;var&gt;cache_type&lt;/var&gt; argument. The &lt;code&gt;CacheEnable&lt;/code&gt; directive can alternatively be placed inside either &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;LocationMatch&amp;gt;&lt;/code&gt; sections to indicate the content is cacheable. &lt;var&gt;cache_type&lt;/var&gt;&lt;code&gt;disk&lt;/code&gt; instructs &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; to use the disk based storage manager implemented by &lt;code&gt;&lt;a href=&quot;mod_cache_disk&quot;&gt;mod_cache_disk&lt;/a&gt;&lt;/code&gt;. &lt;var&gt;cache_type&lt;/var&gt;&lt;code&gt;socache&lt;/code&gt; instructs &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; to use the shared object cache based storage manager implemented by &lt;code&gt;&lt;a href=&quot;mod_cache_socache&quot;&gt;mod_cache_socache&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="336b2ccafdecf594c21f957fcdc81658b9444f8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheFile&lt;/code&gt; directive opens handles to one or more files (given as whitespace separated arguments) and places these handles into the cache at server startup time. Handles to cached files are automatically closed on a server shutdown. When the files have changed on the filesystem, the server should be restarted to re-cache them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242d70ae6f3225929c1acf3e18703939927d7ec6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheLock&lt;/code&gt; directive enables the thundering herd lock for the given URL space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba136dc503fac395b95549b715d74710a59167b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheLockMaxAge&lt;/code&gt; directive specifies the maximum age of any cache lock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f20aa3b29505ff2a91c1e95819895853d4fc54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheLockPath&lt;/code&gt; directive allows you to specify the directory in which the locks are created. By default, the system's temporary folder is used. Locks consist of empty files that only exist for stale URLs in flight, so is significantly less resource intensive than the traditional disk cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a423da72ab451b1ea72d270ce8014917ba53e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheMaxExpire&lt;/code&gt; directive specifies the maximum number of seconds for which cacheable HTTP documents will be retained without checking the origin server. Thus, documents will be out of date at most this number of seconds. This maximum value is enforced even if an expiry date was supplied with the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff574121f6e411bb27b3351daf52da828f11ad79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheMaxFileSize&lt;/code&gt; directive sets the maximum size, in bytes, for a document to be considered for storage in the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6213667c993aa0e7f8c7b67271aa7d2177d226b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheMinExpire&lt;/code&gt; directive specifies the minimum number of seconds for which cacheable HTTP documents will be retained without checking the origin server. This is only used if no valid expire time was supplied with the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de3c4a3d127d8d8401dd41d72a12b916a8d1740" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheMinFileSize&lt;/code&gt; directive sets the minimum size, in bytes, for a document to be considered for storage in the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8566fcb23a97129f4a30768574e4fb535239988" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheReadSize&lt;/code&gt; directive sets the minimum amount of data, in bytes, to be read from the backend before the data is sent to the client. The default of zero causes all data read of any size to be passed downstream to the client immediately as it arrives. Setting this to a higher value causes the disk cache to buffer at least this amount before sending the result to the client. This can improve performance when caching content from a reverse proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4be4952f56b3bdf79d2abef5aba2a700e412089" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheReadTime&lt;/code&gt; directive sets the minimum amount of elapsed time that should pass before making an attempt to send data downstream to the client. During the time period, data will be buffered before sending the result to the client. This can improve performance when caching content from a reverse proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afdc3b6d8bf7fab353fc3c1456bba535e7a1731f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheRoot&lt;/code&gt; directive defines the name of the directory on the disk to contain cache files. If the &lt;code&gt;&lt;a href=&quot;mod_cache_disk&quot;&gt;mod_cache_disk&lt;/a&gt;&lt;/code&gt; module has been loaded or compiled in to the Apache server, this directive &lt;em&gt;must&lt;/em&gt; be defined. Failing to provide a value for &lt;code&gt;CacheRoot&lt;/code&gt; will result in a configuration file processing error. The &lt;code&gt;&lt;a href=&quot;#cachedirlevels&quot;&gt;CacheDirLevels&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#cachedirlength&quot;&gt;CacheDirLength&lt;/a&gt;&lt;/code&gt; directives define the structure of the directories under the specified root directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4e68cb83953b6978bf46eecffd5c9c6ac3c3de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheSocache&lt;/code&gt; directive defines the name of the shared object cache implementation to use, followed by optional arguments for that implementation. A &lt;a href=&quot;../socache&quot;&gt;number of implementations&lt;/a&gt; of shared object caches are available to choose from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1bfaaf041cf6e4459413ce9a4e287eb7519b4aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheSocacheMaxSize&lt;/code&gt; directive sets the maximum size, in bytes, for the combined headers and body of a document to be considered for storage in the cache. The larger the headers that are stored alongside the body, the smaller the body may be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937e7b84280d2f738ce168ee3489e1df61206c77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheSocacheMaxTime&lt;/code&gt; directive sets the maximum freshness lifetime, in seconds, for a document to be stored in the cache. This value overrides the freshness lifetime defined for the document by the HTTP protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1625111fb8496fda8b8103d6cbed3a169391c7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheSocacheMinTime&lt;/code&gt; directive sets the amount of seconds beyond the freshness lifetime of the response that the response should be cached for in the shared object cache. If a response is only stored for its freshness lifetime, there will be no opportunity to revalidate the response to make it fresh again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e2684333fd429f305c422f49a83d2bc4cb6659" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheSocacheReadSize&lt;/code&gt; directive sets the minimum amount of data, in bytes, to be read from the backend before the data is sent to the client. The default of zero causes all data read of any size to be passed downstream to the client immediately as it arrives. Setting this to a higher value causes the disk cache to buffer at least this amount before sending the result to the client. This can improve performance when caching content from a slow reverse proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6348ae69e398a1040c48932343043fc4f9fb82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CacheSocacheReadTime&lt;/code&gt; directive sets the minimum amount of elapsed time that should pass before making an attempt to send data downstream to the client. During the time period, data will be buffered before sending the result to the client. This can improve performance when caching content from a reverse proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9d12f804bcd7f01a9274a4c1476192c374eb8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Charset&lt;/code&gt; keyword allows you to specify the character set of the generated page. The default is &lt;code&gt;UTF-8&lt;/code&gt; on Windows and Mac OS X, and &lt;code&gt;ISO-8859-1&lt;/code&gt; elsewhere. (It depends on whether the underlying file system uses Unicode filenames or not.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949c1e35443809e26dd4b97f7aeb46e645695472" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CharsetDefault&lt;/code&gt; directive specifies the charset that content in the associated container should be translated to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f77ab149170aacc7a120a79fbece52057ebdb130" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CharsetOptions&lt;/code&gt; directive configures certain behaviors of &lt;code&gt;&lt;a href=&quot;mod_charset_lite&quot;&gt;mod_charset_lite&lt;/a&gt;&lt;/code&gt;. &lt;var&gt;Option&lt;/var&gt; can be one of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c96a027e2d502943923aa8745b3cac4a08612f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CharsetSourceEnc&lt;/code&gt; directive specifies the source charset of files in the associated container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c928a54f3d7f31fd7cb66341895437ae9d8d828" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Content-MD5&lt;/code&gt; header provides an end-to-end message integrity check (MIC) of the entity-body. A proxy or client may check this header for detecting accidental modification of the entity-body in transit. Example header:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0800400540ba7afc72ea8304653dce4b4826d2ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CustomLog&lt;/code&gt; directive is used to log requests to the server. A log format is specified, and the logging can optionally be made conditional on request characteristics using environment variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b54c964ca2331faf79321e934205b3d82e49912" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DEFLATE&lt;/code&gt; filter is always inserted after RESOURCE filters like PHP or SSI. It never touches internal subrequests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a197b6a6567444fc414048adcfa4102ef71c7a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultIcon&lt;/code&gt; directive sets the icon to display for files when no specific icon is known, for &lt;code&gt;&lt;a href=&quot;#indexoptions.fancyindexing&quot;&gt;FancyIndexing&lt;/a&gt;&lt;/code&gt;. &lt;var&gt;Url-path&lt;/var&gt; is a (%-escaped) relative URL to the icon, or a fully qualified remote URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b7cd0124b26b42efd061275d0011b3e980e3f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultLanguage&lt;/code&gt; directive tells Apache that all resources in the directive's scope (&lt;em&gt;e.g.&lt;/em&gt;, all resources covered by the current &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; container) that don't have an explicit language extension (such as &lt;code&gt;.fr&lt;/code&gt; or &lt;code&gt;.de&lt;/code&gt; as configured by &lt;code&gt;&lt;a href=&quot;#addlanguage&quot;&gt;AddLanguage&lt;/a&gt;&lt;/code&gt;) should be assigned a Content-Language of &lt;var&gt;language-tag&lt;/var&gt;. This allows entire directory trees to be marked as containing Dutch content, for instance, without having to rename each file. Note that unlike using extensions to specify languages, &lt;code&gt;DefaultLanguage&lt;/code&gt; can only specify a single language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0ef4cba0f1a8bb95ceb9c7dbafb48f6440e931" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultRuntimeDir&lt;/code&gt; directive sets the directory in which the server will create various run-time files (shared memory, locks, etc.). If set as a relative path, the full path will be relative to &lt;code&gt;ServerRoot&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4126845b580a97664080b9a0d8fc27876c2ef1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DeflateBufferSize&lt;/code&gt; directive specifies the size in bytes of the fragments that zlib should compress at one time. If the compressed response size is bigger than the one specified by this directive then httpd will switch to chunked encoding (HTTP header &lt;code&gt;Transfer-Encoding&lt;/code&gt; set to &lt;code&gt;Chunked&lt;/code&gt;), with the side effect of not setting any &lt;code&gt;Content-Length&lt;/code&gt; HTTP header. This is particularly important when httpd works behind reverse caching proxies or when httpd is configured with &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_cache_disk&quot;&gt;mod_cache_disk&lt;/a&gt;&lt;/code&gt; because HTTP responses without any &lt;code&gt;Content-Length&lt;/code&gt; header might not be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc24b035f367f53f1e814ec4723889f5106252b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DeflateCompressionLevel&lt;/code&gt; directive specifies what level of compression should be used, the higher the value, the better the compression, but the more CPU time is required to achieve this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f08b4cde7740ee8b687bed335d9bb1acec249e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DeflateFilterNote&lt;/code&gt; directive specifies that a note about compression ratios should be attached to the request. The name of the note is the value specified for the directive. You can use that note for statistical purposes by adding the value to your &lt;a href=&quot;../logs#accesslog&quot;&gt;access log&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5195f728b71710f172f1fa9311b9c272dc158a8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DeflateInflateLimitRequestBody&lt;/code&gt; directive specifies the maximum size of an inflated request body. If it is unset, &lt;code&gt;&lt;a href=&quot;core#limitrequestbody&quot;&gt;LimitRequestBody&lt;/a&gt;&lt;/code&gt; is applied to the inflated body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af8fab83e0809fd3fb550cfc99a4637c8e14813" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DeflateInflateRatioBurst&lt;/code&gt; directive specifies the maximum number of times the &lt;code&gt;DeflateInflateRatioLimit&lt;/code&gt; can be crossed before terminating the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa56b3970dca6e809dc037e61933d2f655f70e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DeflateInflateRatioLimit&lt;/code&gt; directive specifies the maximum ratio of deflated to inflated size of an inflated request body. This ratio is checked as the body is streamed in, and if crossed more than &lt;code&gt;DeflateInflateRatioBurst&lt;/code&gt; times, the request will be terminated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67863231d498b9c9038a1cac44b80d3e804fee7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DeflateMemLevel&lt;/code&gt; directive specifies how much memory should be used by zlib for compression (a value between 1 and 9).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5190c30895151f6c21bbc673eec423f044148df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DeflateWindowSize&lt;/code&gt; directive specifies the zlib compression window size (a value between 1 and 15). Generally, the higher the window size, the higher can the compression ratio be expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630a762a6731e7060c08fe1284001f90d242c62b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DescriptionWidth&lt;/code&gt; keyword allows you to specify the width of the description column in characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4badfce6b26f0601632f52118310a7d81d17aa27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DirectoryCheckHandler&lt;/code&gt; directive determines whether &lt;code&gt;&lt;a href=&quot;mod_dir&quot;&gt;mod_dir&lt;/a&gt;&lt;/code&gt; should check for directory indexes or add trailing slashes when some other handler has been configured for the current URL. Handlers can be set by directives such as &lt;code&gt;&lt;a href=&quot;core#sethandler&quot;&gt;SetHandler&lt;/a&gt;&lt;/code&gt; or by other modules, such as &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; during per-directory substitutions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50930fa6f77e6c135a2e8d3137645a6e3c8d934" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DirectoryIndex&lt;/code&gt; directive sets the list of resources to look for, when the client requests an index of the directory by specifying a / at the end of the directory name. &lt;var&gt;Local-url&lt;/var&gt; is the (%-encoded) URL of a document on the server relative to the requested directory; it is usually the name of a file in the directory. Several URLs may be given, in which case the server will return the first one that it finds. If none of the resources exist and the &lt;code&gt;Indexes&lt;/code&gt; option is set, the server will generate its own listing of the directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed122822e1b7fbb67bb33f63e5a79c389f7798fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DirectorySlash&lt;/code&gt; directive determines whether &lt;code&gt;&lt;a href=&quot;mod_dir&quot;&gt;mod_dir&lt;/a&gt;&lt;/code&gt; should fixup URLs pointing to a directory or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c6565ab22b58712c2098ebfeed2011a7ae54e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DocumentRoot&lt;/code&gt; should be specified without a trailing slash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0eb09292c030bac473087f0c88a33be6a3d5506" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ErrorLog&lt;/code&gt; directive sets the name of the file to which the server will log any errors it encounters. If the &lt;var&gt;file-path&lt;/var&gt; is not absolute then it is assumed to be relative to the &lt;code&gt;&lt;a href=&quot;#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10784e16421fca661bf61e2ea06e2c2b51c7bda4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Example&lt;/code&gt; directive just sets a demonstration flag which the example module's content handler displays. It takes no arguments. If you browse to an URL to which the example-hooks content-handler applies, you will get a display of the routines within the module and how and in what order they were called to service the document request. The effect of this directive one can observe under the point &quot;&lt;code&gt;Example directive declared here: YES/NO&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93fcbf9c4f70d47275fe58f61ec4445af660ecdd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExtFilterDefine&lt;/code&gt; directive defines the characteristics of an external filter, including the program to run and its arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04bbd278c486a1db90e589c8da86a014bd5b889c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExtFilterOptions&lt;/code&gt; directive specifies special processing options for &lt;code&gt;&lt;a href=&quot;mod_ext_filter&quot;&gt;mod_ext_filter&lt;/a&gt;&lt;/code&gt;. &lt;var&gt;Option&lt;/var&gt; can be one of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74355f7a5a4fe66072ba40fb708d6fdaef17e54d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileETag&lt;/code&gt; directive configures the file attributes that are used to create the &lt;code&gt;ETag&lt;/code&gt; (entity tag) response header field when the document is based on a static file. (The &lt;code&gt;ETag&lt;/code&gt; value is used in cache management to save network bandwidth.) The &lt;code&gt;FileETag&lt;/code&gt; directive allows you to choose which of these -- if any -- should be used. The recognized keywords are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befe9dc2b26d58d955a510be8e59b66fb8d23c70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FollowSymLinks&lt;/code&gt; and &lt;code&gt;SymLinksIfOwnerMatch&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#options&quot;&gt;Options&lt;/a&gt;&lt;/code&gt; work only in &lt;code&gt;&lt;a href=&quot;#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; sections or &lt;code&gt;.htaccess&lt;/code&gt; files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f46adbe8da008eb00e2793a46e35f9e5d81755e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FollowSymLinks&lt;/code&gt; and &lt;code&gt;SymLinksIfOwnerMatch&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;mod/core#options&quot;&gt;Options&lt;/a&gt;&lt;/code&gt; work only in &lt;code&gt;&lt;a href=&quot;mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; sections or &lt;code&gt;.htaccess&lt;/code&gt; files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876fdeb6c3ad63880e003e4eaa69757a0f6da688" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ForceLanguagePriority&lt;/code&gt; directive uses the given &lt;code&gt;&lt;a href=&quot;#languagepriority&quot;&gt;LanguagePriority&lt;/a&gt;&lt;/code&gt; to satisfy negotiation where the server could otherwise not return a single matching document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d3a62d84142685a1a65de9efb741fd9a045c73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ForensicLog&lt;/code&gt; directive is used to log requests to the server for forensic analysis. Each log entry is assigned a unique ID which can be associated with the request using the normal &lt;code&gt;&lt;a href=&quot;mod_log_config#customlog&quot;&gt;CustomLog&lt;/a&gt;&lt;/code&gt; directive. &lt;code&gt;&lt;a href=&quot;mod_log_forensic&quot;&gt;mod_log_forensic&lt;/a&gt;&lt;/code&gt; creates a token called &lt;code&gt;forensic-id&lt;/code&gt;, which can be added to the transfer log using the &lt;code&gt;%{forensic-id}n&lt;/code&gt; format string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f62beea79ea5c2158a5144fa03634889ea030c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GlobalLog&lt;/code&gt; directive defines a log shared by the main server configuration and all defined virtual hosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3aad0d372a0cd718b21f6b5ba5951c53cdfb15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GlobalLog&lt;/code&gt; directive is identical to the &lt;code&gt;CustomLog&lt;/code&gt; directive, apart from the following differences:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992e5711534d338db53973faccf0a587167ad3c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GracefulShutdownTimeout&lt;/code&gt; specifies how many seconds after receiving a &quot;graceful-stop&quot; signal, a server should continue to run, handling the existing connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76390bc2ddb3cb9c6b6e9ee0a3e3fc819ca9d025" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Group&lt;/code&gt; directive sets the group under which the server will answer requests. In order to use this directive, the server must be run initially as &lt;code&gt;root&lt;/code&gt;. If you start the server as a non-root user, it will fail to change to the specified group, and will instead continue to run as the group of the original user. &lt;var&gt;Unix-group&lt;/var&gt; is one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc3c5a8d2b427aacd7e7f69a9e010652b5471c19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Header&lt;/code&gt; directive may be followed by an additional argument, which may be any of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4256cc2ea639cbfaa3a1ca232bdea872413a2ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeaderName&lt;/code&gt; directive sets the name of the file that will be inserted at the top of the index listing. &lt;var&gt;Filename&lt;/var&gt; is the name of the file to include.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5c6dfcb5380687eb9dffc57e56d7a7bb00c8c5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeartbeatAddress&lt;/code&gt; directive specifies the multicast address to which &lt;code&gt;&lt;a href=&quot;mod_heartbeat&quot;&gt;mod_heartbeat&lt;/a&gt;&lt;/code&gt; will send status information. This address will usually correspond to a configured &lt;code&gt;&lt;a href=&quot;mod_heartmonitor#heartbeatlisten&quot;&gt;HeartbeatListen&lt;/a&gt;&lt;/code&gt; on a frontend proxy system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2ee8ad5699d57e723b8a21cc3b76b8007eec26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeartbeatListen&lt;/code&gt; directive specifies the multicast address on which the server will listen for status information from &lt;code&gt;&lt;a href=&quot;mod_heartbeat&quot;&gt;mod_heartbeat&lt;/a&gt;&lt;/code&gt;-enabled servers. This address will usually correspond to a configured &lt;code&gt;&lt;a href=&quot;mod_heartbeat#heartbeataddress&quot;&gt;HeartbeatAddress&lt;/a&gt;&lt;/code&gt; on an origin server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062c19276decbef63509366c229f9d5e5ca81234" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeartbeatMaxServers&lt;/code&gt; directive specifies the maximum number of servers that will be sending requests to this monitor server. It is used to control the size of the shared memory allocated to store the heartbeat info when &lt;code&gt;&lt;a href=&quot;mod_slotmem_shm&quot;&gt;mod_slotmem_shm&lt;/a&gt;&lt;/code&gt; is in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15f6ef5384989d45f6d05e563858c6cb50b081f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeartbeatStorage&lt;/code&gt; directive specifies the path to read heartbeat data. This flat-file is used only when &lt;code&gt;&lt;a href=&quot;mod_slotmem_shm&quot;&gt;mod_slotmem_shm&lt;/a&gt;&lt;/code&gt; is not loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec467c804cd28ba7328730c74b3deaec7a7f596" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeartbeatStorage&lt;/code&gt; directive specifies the path to store heartbeat data. This flat-file is used only when &lt;code&gt;&lt;a href=&quot;mod_slotmem_shm&quot;&gt;mod_slotmem_shm&lt;/a&gt;&lt;/code&gt; is not loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cfe78ac97dd4ebe9d379eb93ada73ef9059a328" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INode&lt;/code&gt;, &lt;code&gt;MTime&lt;/code&gt;, and &lt;code&gt;Size&lt;/code&gt; keywords may be prefixed with either &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt;, which allow changes to be made to the default setting inherited from a broader scope. Any keyword appearing without such a prefix immediately and completely cancels the inherited setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d14c8b3b2192892c9cc3a3b17f2c1febbb9d40b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImapBase&lt;/code&gt; directive sets the default &lt;code&gt;base&lt;/code&gt; used in the imagemap files. Its value is overridden by a &lt;code&gt;base&lt;/code&gt; directive within the imagemap file. If not present, the &lt;code&gt;base&lt;/code&gt; defaults to &lt;code&gt;http://servername/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e2ae77e0cc2d19be122649304a9479abd524d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImapDefault&lt;/code&gt; directive sets the default &lt;code&gt;default&lt;/code&gt; used in the imagemap files. Its value is overridden by a &lt;code&gt;default&lt;/code&gt; directive within the imagemap file. If not present, the &lt;code&gt;default&lt;/code&gt; action is &lt;code&gt;nocontent&lt;/code&gt;, which means that a &lt;code&gt;204 No Content&lt;/code&gt; is sent to the client. In this case, the client should continue to display the original page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f87befa25e58e7c1677c91249d33b66a96d39e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImapMenu&lt;/code&gt; directive determines the action taken if an imagemap file is called without valid coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee9e4973d4baa1666de32606c806c9bbda0d680" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImplicitAdd&lt;/code&gt; keyword specifies that &lt;code&gt;&lt;a href=&quot;mod_charset_lite&quot;&gt;mod_charset_lite&lt;/a&gt;&lt;/code&gt; should implicitly insert its filter when the configuration specifies that the character set of content should be translated. If the filter chain is explicitly configured using the &lt;code&gt;&lt;a href=&quot;mod_mime#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; directive, &lt;code&gt;NoImplicitAdd&lt;/code&gt; should be specified so that &lt;code&gt;&lt;a href=&quot;mod_charset_lite&quot;&gt;mod_charset_lite&lt;/a&gt;&lt;/code&gt; doesn't add its filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a55be0d9ef707afba2ffcaf227610483f21b471" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IndexHeadInsert&lt;/code&gt; directive specifies a string to insert in the &lt;var&gt;&amp;lt;head&amp;gt;&lt;/var&gt; section of the HTML generated for the index page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c20e406e2c853efa95591bf484aa253f5462120" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IndexIgnore&lt;/code&gt; directive adds to the list of files to hide when listing a directory. &lt;var&gt;File&lt;/var&gt; is a shell-style wildcard expression or full filename. Multiple IndexIgnore directives add to the list, rather than replacing the list of ignored files. By default, the list contains &lt;code&gt;.&lt;/code&gt; (the current directory).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d080ca85d759eb26671eacffd4d6adc92ab6914" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IndexIgnoreReset&lt;/code&gt; directive removes any files ignored by &lt;code&gt;IndexIgnore&lt;/code&gt; otherwise inherited from other configuration sections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c1b881b8f1d55122e2c06e6029367bb70e685b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IndexOptions&lt;/code&gt; directive specifies the behavior of the directory indexing. &lt;var&gt;Option&lt;/var&gt; can be one of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3915816bef9b03b7d9e90f7065218899a4f7dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IndexOrderDefault&lt;/code&gt; directive is used in combination with the &lt;code&gt;&lt;a href=&quot;#indexoptions.fancyindexing&quot;&gt;FancyIndexing&lt;/a&gt;&lt;/code&gt; index option. By default, fancyindexed directory listings are displayed in ascending order by filename; the &lt;code&gt;IndexOrderDefault&lt;/code&gt; allows you to change this initial display order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1da8c2f298f28a1c70266a421cd700e556aacc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IndexStyleSheet&lt;/code&gt; directive sets the name of the file that will be used as the CSS for the index listing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be751803b9babc9cac07f475902b2d6bf4e5451" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;InputSed&lt;/code&gt; directive specifies the &lt;code&gt;sed&lt;/code&gt; command to execute on the request data e.g., &lt;code&gt;POST&lt;/code&gt; data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ee7e1e89976317ab9f25548a244b291904bee6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LanguagePriority&lt;/code&gt; sets the precedence of language variants for the case where the client does not express a preference, when handling a Multiviews request. The list of &lt;var&gt;MIME-lang&lt;/var&gt; are in order of decreasing preference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9aa8b8814c1e4df59a70cc19497238163b7a62b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Last-Modified&lt;/code&gt; header will be respected if already present in a response, and added to the response if the response is a file and the header is missing. The &lt;code&gt;&lt;a href=&quot;#ssilastmodified&quot;&gt;SSILastModified&lt;/a&gt;&lt;/code&gt; directive takes precedence over &lt;code&gt;&lt;a href=&quot;#xbithack&quot;&gt;XBitHack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b70b767571ac739abed6f1429b65507b04cfe5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Last-Modified&lt;/code&gt; header will be stripped from responses, unless the &lt;code&gt;&lt;a href=&quot;#xbithack&quot;&gt;XBitHack&lt;/a&gt;&lt;/code&gt; directive is set to &lt;code&gt;full&lt;/code&gt; as described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3110ae431bfe54a0207951d982d0a7d05357413" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LimitRequest&lt;/code&gt;* directives are used to place limits on the amount of resources httpd will use in reading requests from clients. By limiting these values, some kinds of denial of service attacks can be mitigated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c95989e10f95cf3bbd32eee144a1d8acd45cb8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LimitRequestBody&lt;/code&gt; directive allows the user to set a limit on the allowed size of an HTTP request message body within the context in which the directive is given (server, per-directory, per-file or per-location). If the client request exceeds that limit, the server will return an error response instead of servicing the request. The size of a normal request message body will vary greatly depending on the nature of the resource and the methods allowed on that resource. CGI scripts typically use the message body for retrieving form information. Implementations of the &lt;code&gt;PUT&lt;/code&gt; method will require a value at least as large as any representation that the server wishes to accept for that resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c163654e31d7154d772705d9508097f631048998" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LimitRequestFieldSize&lt;/code&gt; directive allows the server administrator to set the limit on the allowed size of an HTTP request header field. A server needs this value to be large enough to hold any one header field from a normal client request. The size of a normal request header field will vary greatly among different client implementations, often depending upon the extent to which a user has configured their browser to support detailed content negotiation. SPNEGO authentication headers can be up to 12392 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbc970377da071cf1ffa41de87da35a29e3b610" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LimitRequestFields&lt;/code&gt; directive allows the server administrator to modify the limit on the number of request header fields allowed in an HTTP request. A server needs this value to be larger than the number of fields that a normal client request might include. The number of request header fields used by a client rarely exceeds 20, but this may vary among different client implementations, often depending upon the extent to which a user has configured their browser to support detailed content negotiation. Optional HTTP extensions are often expressed using request header fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7e30bb38c7bf2749dac4bf189cfa9fc23429e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LimitRequestLine&lt;/code&gt; directive allows the server administrator to set the limit on the allowed size of a client's HTTP request-line. Since the request-line consists of the HTTP method, URI, and protocol version, the &lt;code&gt;LimitRequestLine&lt;/code&gt; directive places a restriction on the length of a request-URI allowed for a request on the server. A server needs this value to be large enough to hold any of its resource names, including any information that might be passed in the query part of a &lt;code&gt;GET&lt;/code&gt; request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10db0448b811d9f8ea1bc92b938679f7db38b3ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Listen&lt;/code&gt; directive instructs Apache httpd to listen to only specific IP addresses or ports; by default it responds to requests on all IP interfaces. &lt;code&gt;Listen&lt;/code&gt; is now a required directive. If it is not in the config file, the server will fail to start. This is a change from previous versions of Apache httpd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1fd1a9de2ac280acddd1498f95cdff90ec033c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Listen&lt;/code&gt; directive tells the server to accept incoming requests on the specified port or address-and-port combination. If only a port number is specified, the server listens to the given port on all interfaces. If an IP address is given as well as a port, the server will listen on the given port and interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d95a24093939cb2cc11d2cf195d9476398d715b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LoadFile&lt;/code&gt; directive links in the named object files or libraries when the server is started or restarted; this is used to load additional code which may be required for some module to work. &lt;em&gt;Filename&lt;/em&gt; is either an absolute path or relative to &lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78043435d67f13cde065415d0e3d2383b331e10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LoadModule&lt;/code&gt; directive links in the object file or library &lt;em&gt;filename&lt;/em&gt; and adds the module structure named &lt;em&gt;module&lt;/em&gt; to the list of active modules. &lt;em&gt;Module&lt;/em&gt; is the name of the external variable of type &lt;code&gt;module&lt;/code&gt; in the file, and is listed as the Module Identifier in the module documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d75b3582d3004de1e96870504eedb9f84639346" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LogFormat&lt;/code&gt; directive can take one of two forms. In the first form, where only one argument is specified, this directive sets the log format which will be used by logs specified in subsequent &lt;code&gt;TransferLog&lt;/code&gt; directives. The single argument can specify an explicit &lt;var&gt;format&lt;/var&gt; as discussed in the &lt;a href=&quot;#formats&quot;&gt;custom log formats&lt;/a&gt; section above. Alternatively, it can use a &lt;var&gt;nickname&lt;/var&gt; to refer to a log format defined in a previous &lt;code&gt;LogFormat&lt;/code&gt; directive as described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4bd31db1babb398056b8ad0c4bb92e0b350db9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LogStderr&lt;/code&gt; keyword specifies that messages written to standard error by the external filter program will be saved in the Apache error log. &lt;code&gt;NoLogStderr&lt;/code&gt; disables this feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9788b318e19fb0f9e04ac2b56558fd825e4b65ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MMapFile&lt;/code&gt; directive maps one or more files (given as whitespace separated arguments) into memory at server startup time. They are automatically unmapped on a server shutdown. When the files have changed on the filesystem at least a &lt;code&gt;HUP&lt;/code&gt; or &lt;code&gt;USR1&lt;/code&gt; signal should be send to the server to re-&lt;code&gt;mmap()&lt;/code&gt; them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48b3bfa9c6b3495b7950fe6f32b4d6f33a38542" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MaxConnectionsPerChild&lt;/code&gt; directive sets the limit on the number of connections that an individual child server process will handle. After &lt;code&gt;MaxConnectionsPerChild&lt;/code&gt; connections, the child process will die. If &lt;code&gt;MaxConnectionsPerChild&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, then the process will never expire.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ded54ed9bc9d050632cc2bf011c71f1624a4c3b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MaxKeepAliveRequests&lt;/code&gt; directive limits the number of requests allowed per connection when &lt;code&gt;&lt;a href=&quot;#keepalive&quot;&gt;KeepAlive&lt;/a&gt;&lt;/code&gt; is on. If it is set to &lt;code&gt;0&lt;/code&gt;, unlimited requests will be allowed. We recommend that this setting be kept to a high value for maximum server performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c67714b0b1448719bb73012b266010a4348fbe1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MaxMemFree&lt;/code&gt; directive sets the maximum number of free Kbytes that every allocator is allowed to hold without calling &lt;code&gt;free()&lt;/code&gt;. In threaded MPMs, every thread has its own allocator. When set to zero, the threshold will be set to unlimited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0234b78b09980e8c52e757b5a8a3e42cc0ea07" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MaxRangeOverlaps&lt;/code&gt; directive limits the number of overlapping HTTP ranges the server is willing to return to the client. If more overlapping ranges than permitted are requested, the complete resource is returned instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75cfe1fd9d327eb8ce26c8d7611bbe5082b30335" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MaxRangeReversals&lt;/code&gt; directive limits the number of HTTP Range reversals the server is willing to return to the client. If more ranges reversals than permitted are requested, the complete resource is returned instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad0d38ea334467e379f6d25dcfafd75defe94e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MaxRanges&lt;/code&gt; directive limits the number of HTTP ranges the server is willing to return to the client. If more ranges than permitted are requested, the complete resource is returned instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ffdc489414002c86f26a6c98881d038bbe03a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MaxRequestWorkers&lt;/code&gt; directive sets the limit on the number of simultaneous requests that will be served. Any connection attempts over the &lt;code&gt;MaxRequestWorkers&lt;/code&gt; limit will normally be queued, up to a number based on the &lt;code&gt;&lt;a href=&quot;#listenbacklog&quot;&gt;ListenBacklog&lt;/a&gt;&lt;/code&gt; directive. Once a child process is freed at the end of a different request, the connection will then be serviced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d201889ccb2c5dae5019f4723a0e67e2b43206e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MaxSpareServers&lt;/code&gt; directive sets the desired maximum number of &lt;em&gt;idle&lt;/em&gt; child server processes. An idle process is one which is not handling a request. If there are more than &lt;code&gt;MaxSpareServers&lt;/code&gt; idle, then the parent process will kill off the excess processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8756a987e4626cbc150ea90cde893c53ad4cc39d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MaxThreads&lt;/code&gt; directive sets the desired maximum number worker threads allowable. The default value is also the compiled in hard limit. Therefore it can only be lowered, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd6d119b3a51a6f6abe14d4bbff1d67e47275c10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MimeMagicFile&lt;/code&gt; directive can be used to enable this module, the default file is distributed at &lt;code&gt;conf/magic&lt;/code&gt;. Non-rooted paths are relative to the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;. Virtual hosts will use the same file as the main server unless a more specific setting is used, in which case the more specific setting overrides the main server's file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a63ef02527eb11f7ba2607d3309dc21ca0e8b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MinSpareServers&lt;/code&gt; directive sets the desired minimum number of &lt;em&gt;idle&lt;/em&gt; child server processes. An idle process is one which is not handling a request. If there are fewer than &lt;code&gt;MinSpareServers&lt;/code&gt; idle, then the parent process creates new children: It will spawn one, wait a second, then spawn two, wait a second, then spawn four, and it will continue exponentially until it is spawning 32 children per second. It will stop whenever it satisfies the &lt;code&gt;MinSpareServers&lt;/code&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39d9126c94dbac6b8178b32fe80bb04df2be254" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ModMimeUsePathInfo&lt;/code&gt; directive is used to combine the filename with the &lt;code&gt;path_info&lt;/code&gt; URL component to apply &lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt;'s directives to the request. The default value is &lt;code&gt;Off&lt;/code&gt; - therefore, the &lt;code&gt;path_info&lt;/code&gt; component is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a242de3e43bd169a351b111ef9110c5d893663cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mutex&lt;/code&gt; directive can be used to change the underlying implementation used for mutexes, in order to relieve functional or performance problems with &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR&lt;/a&gt;'s default choice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8b98e4bb74d6c8ceef3f4e236769ff929b7720" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mutex&lt;/code&gt; directive is typically used in the following exceptional situations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855ba960702ac258fb09fad1f9a712de86e138e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mutex&lt;/code&gt; directive sets the mechanism, and optionally the lock file location, that httpd and modules use to serialize access to resources. Specify &lt;code&gt;default&lt;/code&gt; as the second argument to change the settings for all mutexes; specify a mutex name (see table below) as the second argument to override defaults only for that mutex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a82757b936b82a2fb81837eacdd53a7d36d784" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NameWidth&lt;/code&gt; keyword allows you to specify the width of the filename column in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf652253d2658dc6dd02d33373dbf346ecd67732" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NegotiatedOnly&lt;/code&gt; option provides that every extension following the base name must correlate to a recognized &lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt; extension for content negotiation, &lt;em&gt;e.g.&lt;/em&gt; Charset, Content-Type, Language, or Encoding. This is the strictest implementation with the fewest unexpected side effects, and is the default behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c9993765ba5c194ab54d2997f26f486ae5425d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Off&lt;/code&gt; setting, which is the default, suppresses the footer line (and is therefore compatible with the behavior of Apache-1.2 and below). The &lt;code&gt;On&lt;/code&gt; setting simply adds a line with the server version number and &lt;code&gt;&lt;a href=&quot;#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; of the serving virtual host, and the &lt;code&gt;EMail&lt;/code&gt; setting additionally creates a &quot;mailto:&quot; reference to the &lt;code&gt;&lt;a href=&quot;#serveradmin&quot;&gt;ServerAdmin&lt;/a&gt;&lt;/code&gt; of the referenced document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b2be23f10b16e376a727a7d3c19c27b51c0641" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OmitPID&lt;/code&gt; keyword suppresses the addition of the httpd parent process id from the lock file name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469b774a02b89cab7e30f3a204c7b32e7dd8bd2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Options&lt;/code&gt; directive controls which server features are available in a particular directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5c740835079b24daee0cfc6b038cae6ce5fd04c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Order&lt;/code&gt; directive controls the order of access directive processing only within each phase of the server's configuration processing. This implies, for example, that an &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; directive occurring in a &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; section will always be evaluated after an &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; directive occurring in a &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; section or &lt;code&gt;.htaccess&lt;/code&gt; file, regardless of the setting of the &lt;code&gt;Order&lt;/code&gt; directive. For details on the merging of configuration sections, see the documentation on &lt;a href=&quot;../sections&quot;&gt;How Directory, Location and Files sections work&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207bc357beb72a07c77745f5ab04464adf46ad23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Order&lt;/code&gt; directive, along with the &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; directives, controls a three-pass access control system. The first pass processes either all &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; or all &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; directives, as specified by the &lt;code&gt;&lt;a href=&quot;#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt; directive. The second pass parses the rest of the directives (&lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt;). The third pass applies to all requests which do not match either of the first two.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48927642bad1dbcb462ae859bef010c13854f2ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OutputSed&lt;/code&gt; directive specifies the &lt;code&gt;sed&lt;/code&gt; command to execute on the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c2978780147c4c5795aee4fb3e08caa7fd6f37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PT&lt;/code&gt; flag implies the &lt;code&gt;L&lt;/code&gt; flag: rewriting will be stopped in order to pass the request to the next phase of processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ff01d8e7ff8ac6f2fa074f205ba57883b34783" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PeerExtList(&lt;em&gt;object-ID&lt;/em&gt;)&lt;/code&gt; function expects to find zero or more instances of the X.509 certificate extension identified by the given &lt;em&gt;object ID&lt;/em&gt; (OID) in the client certificate. The expression evaluates to true if the left-hand side string matches exactly against the value of an extension identified with this OID. (If multiple extensions with the same OID are present, at least one extension must match).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd965d7691e70338d0469f9a3625debed77cc8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PidFile&lt;/code&gt; directive sets the file to which the server records the process id of the daemon. If the filename is not absolute then it is assumed to be relative to the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e7b1a8f3e7d0d92481816fc797a410cebd477a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PidFile&lt;/code&gt; is subject to the same warnings about log file placement and &lt;a href=&quot;../misc/security_tips#serverroot&quot;&gt;security&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de06118d58b504228b24c69c4f2a18979f822cc1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PreservesContentLength&lt;/code&gt; keyword specifies that the filter preserves the content length. This is not the default, as most filters change the content length. In the event that the filter doesn't modify the length, this keyword should be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6baacdfe63b6eb368df66a9386a7d5d560891d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PrivilegesMode&lt;/code&gt; directive allows you to select either &lt;var&gt;FAST&lt;/var&gt; or &lt;var&gt;SECURE&lt;/var&gt; mode. You can mix modes, using &lt;var&gt;FAST&lt;/var&gt; mode for trusted users and fully-audited code paths, while imposing SECURE mode where an untrusted user has scope to introduce code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1527722f657eab31d1b2106ccc0badb4ec20789" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProtocolEcho&lt;/code&gt; directive enables or disables the echo server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4045ad0738598223f1baf290cc56f16213c2475b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyBadHeader&lt;/code&gt; directive determines the behavior of &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; if it receives syntactically invalid response header lines (&lt;em&gt;i.e.&lt;/em&gt; containing no colon) from the origin server. The following arguments are possible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978f50a7a4d11fa6ec90c37f8fd99f34f41c888f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyBlock&lt;/code&gt; directive specifies a list of words, hosts and/or domains, separated by spaces. HTTP, HTTPS, and FTP document requests to sites whose names contain matched words, hosts or domains are &lt;em&gt;blocked&lt;/em&gt; by the proxy server. The proxy module will also attempt to determine IP addresses of list items which may be hostnames during startup, and cache them for match test as well. That may slow down the startup time of the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd6cb629e4911e631c6079eb55a93088666f26f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyExpressDBMFile&lt;/code&gt; directive points to the location of the Express map DBM file. This file serves to map the incoming server name, obtained from the Host: header, to a backend URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df4a3563619867849bac584e307099d96cefe2f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyExpressDBMType&lt;/code&gt; directive controls the DBM type expected by the module. The default is the default DBM type created with &lt;code&gt;&lt;a href=&quot;../programs/httxt2dbm&quot;&gt;httxt2dbm&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92eb7ee34a93af990ddb39d906088f81afd5aa79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyExpressEnable&lt;/code&gt; directive controls whether the module will be active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="446053fbb2d7ac3ddbdf68da7e1968d31ed35b5b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyFtpDirCharset&lt;/code&gt; directive defines the character set to be set for FTP directory listings in HTML generated by &lt;code&gt;&lt;a href=&quot;mod_proxy_ftp&quot;&gt;mod_proxy_ftp&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce78758313c9b35047cac1c0ee77244969e2a65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyFtpEscapeWildcards&lt;/code&gt; directive controls whether wildcard characters (&quot;*?[{~&quot;) in requested filenames are escaped with backslash before sending them to the FTP server. That is the default behavior, but many FTP servers don't know about the escaping and try to serve the literal filenames they were sent, including the backslashes in the names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa80f7a5601790221401e6771c57ddc89a5c598e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyFtpListOnWildcard&lt;/code&gt; directive controls whether wildcard characters (&quot;*?[{~&quot;) in requested filenames cause &lt;code&gt;&lt;a href=&quot;mod_proxy_ftp&quot;&gt;mod_proxy_ftp&lt;/a&gt;&lt;/code&gt; to return a listing of files instead of downloading a file. By default (value on), they do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d810ef116b0d8d9ad66887ba204114c4c98dfb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyHCExpr&lt;/code&gt; directive allows for creating a named condition expression that checks the response headers of the backend server to determine its health. This named condition can then be assigned to balancer members via the &lt;code&gt;hcexpr&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce318cb530bc0f759078bf0660069da794da5b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyHCTemplate&lt;/code&gt; directive allows for creating a named set (template) of health check parameters that can then be assigned to balancer members via the &lt;code&gt;hctemplate&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33a2b8a7be08fcbaf30aeb0d102ca567ff4c2e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyIOBufferSize&lt;/code&gt; directive adjusts the size of the internal buffer which is used as a scratchpad for the data between input and output. The size must be at least &lt;code&gt;512&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e185b02916358aeff4d52556a1d270bd9f7cd480" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyMaxForwards&lt;/code&gt; directive specifies the maximum number of proxies through which a request may pass if there's no &lt;code&gt;Max-Forwards&lt;/code&gt; header supplied with the request. This may be set to prevent infinite proxy loops or a DoS attack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146b8f5c5b583a1efc65e9fa44b07bbf6178f8a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyReceiveBufferSize&lt;/code&gt; directive specifies an explicit (TCP/IP) network buffer size for proxied HTTP and FTP connections, for increased throughput. It has to be greater than &lt;code&gt;512&lt;/code&gt; or set to &lt;code&gt;0&lt;/code&gt; to indicate that the system's default buffer size should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb4e4ae64a5d1c78dfd7ed938a960715054ca65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxyRemoteMatch&lt;/code&gt; is identical to the &lt;code&gt;&lt;a href=&quot;#proxyremote&quot;&gt;ProxyRemote&lt;/a&gt;&lt;/code&gt; directive, except that the first argument is a &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt; match against the requested URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa084d8828ecacafedd572f431e2fb8ab5a2f6cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxySCGIInternalRedirect&lt;/code&gt; enables the backend to internally redirect the gateway to a different URL. This feature originates in &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt;, which internally redirects the response if the response status is &lt;code&gt;OK&lt;/code&gt; (&lt;code&gt;200&lt;/code&gt;) and the response contains a &lt;code&gt;Location&lt;/code&gt; (or configured alternate header) and its value starts with a slash (&lt;code&gt;/&lt;/code&gt;). This value is interpreted as a new local URL that Apache httpd internally redirects to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741a9d147882b9d7d924ecb1b6e46913b2896731" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxySCGISendfile&lt;/code&gt; argument determines the gateway behaviour:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49882af03eb55d05451faea7724ab17b01657e65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProxySCGISendfile&lt;/code&gt; directive enables the SCGI backend to let files be served directly by the gateway. This is useful for performance purposes &amp;mdash; httpd can use &lt;code&gt;sendfile&lt;/code&gt; or other optimizations, which are not possible if the file comes over the backend socket. Additionally, the file contents are not transmitted twice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f163e8e6321eac0a97541af0a8c72e8206d8319c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RLimit&lt;/code&gt;* directives are used to limit the amount of resources which can be used by processes forked off from the httpd children. In particular, this will control resources used by CGI scripts and SSI exec commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831e0c0010b9edcb4e8f63f1bf1b21cad9c7bcaa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ReadmeName&lt;/code&gt; directive sets the name of the file that will be appended to the end of the index listing. &lt;var&gt;Filename&lt;/var&gt; is the name of the file to include, and is taken to be relative to the location being indexed. If &lt;var&gt;Filename&lt;/var&gt; begins with a slash, as in example 2, it will be taken to be relative to the &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469f0f35ec8e6ed0f301d1bef84b93e1cbbabdb8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Redirect&lt;/code&gt; directive maps an old URL into a new one by asking the client to refetch the resource at the new location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe78c451560ba9010d052d464d137d0b8399929" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RegisteredMethods&lt;/code&gt; option should &lt;strong&gt;not&lt;/strong&gt; be toggled for forward proxy hosts, as the methods supported by the origin servers are unknown to the proxy server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64350918c017f0e3bdc4ce615f7af67e0515a3b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoteIPProxyProtocol&lt;/code&gt; directive enables or disables the reading and handling of the PROXY protocol connection header. If enabled with the &lt;code&gt;On&lt;/code&gt; flag, the upstream client &lt;em&gt;must&lt;/em&gt; send the header every time it opens a connection or the connection will be aborted unless it is in the list of disabled hosts provided by the &lt;code&gt;&lt;a href=&quot;#remoteipproxyprotocolexceptions&quot;&gt;RemoteIPProxyProtocolExceptions&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ffa9c340f19c6199a33dac5ce42f70acfa99dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoteIPProxyProtocol&lt;/code&gt; directive enables or disables the reading and handling of the PROXY protocol connection header. Sometimes it is desirable to require clients to provide the PROXY header, but permit other clients to connect without it. This directive allows a server administrator to configure a single host or CIDR range of hosts that may do so. This is generally useful for monitoring and administrative traffic to a virtual host direct to the server behind the upstream load balancer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5d227503f00da08ff20e2a9939e4b54fa74c76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveCharset&lt;/code&gt; directive removes any character set associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b4a1cd54a7542b44670f3215ca2d5fa8e67e5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveEncoding&lt;/code&gt; directive removes any encoding associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files. An example of its use might be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a5e8dc4cd1086dc1762f4e655ce6973e61a7c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveHandler&lt;/code&gt; directive removes any handler associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files. An example of its use might be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c964cbda619d88084dcbcced8fc7ebed80dd896d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveInputFilter&lt;/code&gt; directive removes any input &lt;a href=&quot;../filter&quot;&gt;filter&lt;/a&gt; associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067e40d40a9add74d02e5617c937a640845971cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveLanguage&lt;/code&gt; directive removes any language associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82c512d1dab46f2925e480a7738a3c60032ee37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveOutputFilter&lt;/code&gt; directive removes any output &lt;a href=&quot;../filter&quot;&gt;filter&lt;/a&gt; associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c60cbfeb10085f7e085f9dd8dbe9195a913a0e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoveType&lt;/code&gt; directive removes any &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#media-type&quot;&gt;media type&lt;/a&gt; associations for files with the given extensions. This allows &lt;code&gt;.htaccess&lt;/code&gt; files in subdirectories to undo any associations inherited from parent directories or the server config files. An example of its use might be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713f70c6e6443a921374045e32b3edfa3e60722d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RequestHeader&lt;/code&gt; directive may be followed by an additional argument, which may be any of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243b03130625c7468a074d3de07b183ccca5169a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Require ldap-attribute&lt;/code&gt; directive allows the administrator to grant access based on attributes of the authenticated user in the LDAP directory. If the attribute in the directory matches the value given in the configuration, access is granted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d236ee0f6eb912cb62f3c598015f64c66860c20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Require ldap-dn&lt;/code&gt; directive allows the administrator to grant access based on distinguished names. It specifies a DN that must match for access to be granted. If the distinguished name that was retrieved from the directory server matches the distinguished name in the &lt;code&gt;Require ldap-dn&lt;/code&gt;, then authorization is granted. Note: do not surround the distinguished name with quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe9021e5c8640a0e4e3bd2ec557717967ae7bb4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Require ldap-filter&lt;/code&gt; directive allows the administrator to grant access based on a complex LDAP search filter. If the dn returned by the filter search matches the authenticated user dn, access is granted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef88e5123b08953dd5e184d8f555ee39fb22c40" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Require ldap-user&lt;/code&gt; directive specifies what usernames can access the resource. Once &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; has retrieved a unique DN from the directory, it does an LDAP compare operation using the username specified in the &lt;code&gt;Require ldap-user&lt;/code&gt; to see if that username is part of the just-fetched LDAP entry. Multiple users can be granted access by putting multiple usernames on the line, separated with spaces. If a username has a space in it, then it must be surrounded with double quotes. Multiple users can also be granted access by using multiple &lt;code&gt;Require ldap-user&lt;/code&gt; directives, with one user per line. For example, with a &lt;code&gt;&lt;a href=&quot;#authldapurl&quot;&gt;AuthLDAPURL&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;ldap://ldap/o=Example?cn&lt;/code&gt; (i.e., &lt;code&gt;cn&lt;/code&gt; is used for searches), the following Require directives could be used to restrict access:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce414fb159ae14c3d70b751923bf486df3ea44a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RewriteBase&lt;/code&gt; directive specifies the URL prefix to be used for per-directory (htaccess) &lt;code&gt;&lt;a href=&quot;#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directives that substitute a relative path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f0d14bdb86ea947f4f38920ee65518563161b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RewriteCond&lt;/code&gt; directive defines a rule condition. One or more &lt;code&gt;RewriteCond&lt;/code&gt; can precede a &lt;code&gt;&lt;a href=&quot;#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directive. The following rule is then only used if both the current state of the URI matches its pattern, &lt;strong&gt;and&lt;/strong&gt; if these conditions are met.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a552381de520bf80bb3e059c66a9bc2921f095" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RewriteEngine&lt;/code&gt; directive enables or disables the runtime rewriting engine. If it is set to &lt;code&gt;off&lt;/code&gt; this module does no runtime processing at all. It does not even update the &lt;code&gt;SCRIPT_URx&lt;/code&gt; environment variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9670cd0760982afc3779130c37c8069f52beff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RewriteMap&lt;/code&gt; directive defines a &lt;em&gt;Rewriting Map&lt;/em&gt; which can be used inside rule substitution strings by the mapping-functions to insert/substitute fields through a key lookup. The source of this lookup can be of various types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c92685ac24c0b2506efe1e5934f88cc414f2b08" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RewriteOptions&lt;/code&gt; directive sets some special options for the current per-server or per-directory configuration. The &lt;em&gt;Option&lt;/em&gt; string can currently only be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f960d06e41d2fd8dcd316784d2939f44322000" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RewriteRule&lt;/code&gt; directive is the real rewriting workhorse. The directive can occur more than once, with each instance defining a single rewrite rule. The order in which these rules are defined is important - this is the order in which they will be applied at run-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc59b3abfd7475187e5c82df250cf88faf15383" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSIETag&lt;/code&gt; directive suppresses this behaviour, and allows the server to generate an &lt;code&gt;ETag&lt;/code&gt; header. This can be used to enable caching of the output. Note that a backend server or dynamic content generator may generate an ETag of its own, ignoring &lt;code&gt;no-etag&lt;/code&gt;, and this ETag will be passed by &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; regardless of the value of this setting. &lt;code&gt;SSIETag&lt;/code&gt; can take on the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62153d56a94e14cb5ba8d7b8e86f764b4e3df10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSIErrorMsg&lt;/code&gt; directive changes the error message displayed when &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; encounters an error. For production servers you may consider changing the default error message to &lt;code&gt;&quot;&amp;lt;!-- Error --&amp;gt;&quot;&lt;/code&gt; so that the message is not presented to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c745a2589d38b38daaaef30a33dc9acbc14e47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSILastModified&lt;/code&gt; directive overrides this behaviour, and allows the &lt;code&gt;Last-Modified&lt;/code&gt; header to be respected if already present, or set if the header is not already present. This can be used to enable caching of the output. &lt;code&gt;SSILastModified&lt;/code&gt; can take on the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46109fbeaeda0f4b6a7bee26de973ddc50665e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSL_SECURE_RENEG&lt;/code&gt; environment variable can be used from an SSI or CGI script to determine whether secure renegotiation is supported for a given SSL connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9234e34e039cbd2cce88e7045d4de005c36c09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptAlias&lt;/code&gt; directive has the same behavior as the &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; directive, except that in addition it marks the target directory as containing CGI scripts that will be processed by &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt;'s cgi-script handler. URLs with a case-sensitive (%-decoded) path beginning with &lt;var&gt;URL-path&lt;/var&gt; will be mapped to scripts beginning with the second argument, which is a full pathname in the local filesystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68acc0d42490bf582d6f9e6753ece18e1a299f88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptLog&lt;/code&gt; directive sets the CGI script error logfile. If no &lt;code&gt;ScriptLog&lt;/code&gt; is given, no error log is created. If given, any CGI errors are logged into the filename given as argument. If this is a relative file or path it is taken relative to the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b85563f489b494dd0649c84db9666544afbc5ab4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerAdmin&lt;/code&gt; sets the contact address that the server includes in any error messages it returns to the client. If the &lt;code&gt;httpd&lt;/code&gt; doesn't recognize the supplied argument as an URL, it assumes, that it's an &lt;var&gt;email-address&lt;/var&gt; and prepends it with &lt;code&gt;mailto:&lt;/code&gt; in hyperlink targets. However, it's recommended to actually use an email address, since there are a lot of CGI scripts that make that assumption. If you want to use an URL, it should point to another server under your control. Otherwise users may not be able to contact you in case of errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a79115a05069fe02e06b3b78b6c9f833777341e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerAlias&lt;/code&gt; directive sets the alternate names for a host, for use with &lt;a href=&quot;../vhosts/name-based&quot;&gt;name-based virtual hosts&lt;/a&gt;. The &lt;code&gt;ServerAlias&lt;/code&gt; may include wildcards, if appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6ec5a2eeab9c9f2e0aaa9be5377be801378073" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerName&lt;/code&gt; directive may appear anywhere within the definition of a server. However, each appearance overrides the previous appearance (within that server).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4496b84e94af2335c447b8949ed7b550d61558c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerName&lt;/code&gt; directive sets the request scheme, hostname and port that the server uses to identify itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d3122af841d6fb35cea31c44dc05186784ba6e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerPath&lt;/code&gt; directive sets the legacy URL pathname for a host, for use with &lt;a href=&quot;../vhosts/index&quot;&gt;name-based virtual hosts&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447c006b438923833d051bdf3e7f7c92a8d7c7d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerRoot&lt;/code&gt; directive sets the directory in which the server lives. Typically it will contain the subdirectories &lt;code&gt;conf/&lt;/code&gt; and &lt;code&gt;logs/&lt;/code&gt;. Relative paths in other configuration directives (such as &lt;code&gt;&lt;a href=&quot;#include&quot;&gt;Include&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt;, for example) are taken as relative to this directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9419ead675b5023fb59e852cbdbfda02581ade73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerSignature&lt;/code&gt; directive allows the configuration of a trailing footer line under server-generated documents (error messages, &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; ftp directory listings, &lt;code&gt;&lt;a href=&quot;mod_info&quot;&gt;mod_info&lt;/a&gt;&lt;/code&gt; output, ...). The reason why you would want to enable such a footer line is that in a chain of proxies, the user often has no possibility to tell which of the chained servers actually produced a returned error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d7a656dfbfa8f77cfc60799ae0419051b12b6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Session&lt;/code&gt; directive enables a session for the directory or location container. Further directives control where the session will be stored and how privacy is maintained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3581218c8006dba78b105a8a57fa59c1d26a7efe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionCookieName2&lt;/code&gt; directive specifies the name and optional attributes of an RFC2965 compliant cookie inside which the session will be stored. RFC2965 cookies are set using the &lt;code&gt;Set-Cookie2&lt;/code&gt; HTTP header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73eb531e517f03332ca3f819a512afe742aa0c25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionCookieName&lt;/code&gt; directive specifies the name and optional attributes of an RFC2109 compliant cookie inside which the session will be stored. RFC2109 cookies are set using the &lt;code&gt;Set-Cookie&lt;/code&gt; HTTP header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ceda7bf6c33969658896de8929697901b953a46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionCookieRemove&lt;/code&gt; flag controls whether the cookies containing the session will be removed from the headers during request processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f386d77442a21c2f57fef72d7ac2d54f295033f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionCryptoCipher&lt;/code&gt; directive allows the cipher to be used during encryption. If not specified, the cipher defaults to &lt;code&gt;aes256&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da9fa22befc785c4869ea1efda287df125572b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SessionCryptoDriver&lt;/code&gt; directive specifies the name of the crypto driver to be used for encryption. If not specified, the driver defaults to the recommended driver compiled into APR-util.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
