<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="">
    <body>
      <group id="">
        <trans-unit id="ad494601d6a7738ada3db6d85dcb2a508f609fc4" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-3&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c9b83d77f6e3476f7cd4b580b2014f4a472f9c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-3&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(value: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;, &amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;convert/trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;convert/trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4721-4723&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d45d4d64c97375d8d964fcd1072b1976ca887c7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-3&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(value: U) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;T, &amp;lt;T as &lt;a href=&quot;convert/trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;U&amp;gt;&amp;gt;::&lt;a href=&quot;convert/trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert.rs.html#568-570&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a053635dbe16e00c0235b60f40d14920a34047ad" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-30&quot;&gt;fn &lt;a href=&quot;#method.try_from-29&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba78745613ec41006d548141c4c676d6712ea79" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-30&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 26]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be3f4df56e1dfba07777047a399243eaad563ed" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-31&quot;&gt;fn &lt;a href=&quot;#method.try_from-30&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3299a642f5545489a22bcb83d04a8955877add8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-31&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 27]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8b6d6f832e7de88877827dc810158c9e493db1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-32&quot;&gt;fn &lt;a href=&quot;#method.try_from-31&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddaba3a24120d5b37627cb331e2631b6799f1d55" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-32&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 24]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54649183cf6fcf66561fcf48472af0ad57915bb3" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-33&quot;&gt;fn &lt;a href=&quot;#method.try_from-32&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a4c7894fa20c725040ba5e61e2c5a93b400e26" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-33&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 5]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff227e8e82c25bd35a949069cccc77f60829a49" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-34&quot;&gt;fn &lt;a href=&quot;#method.try_from-33&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b6000969aef4d1081bc9ad79b1c1bba4e3eca7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-34&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 8]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3467460645ddb3d3e4645a2783b8ce2895d17ab8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-35&quot;&gt;fn &lt;a href=&quot;#method.try_from-34&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965c1f7750f55cfec40b8d70f3e167afde40a6da" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-35&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 7]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11495f488ca6591d82a1af13a34056d6b2e47ac" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-36&quot;&gt;fn &lt;a href=&quot;#method.try_from-35&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9a99b73489388c850c42a8c7e0082af9024a4c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-36&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 27]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38795563502d343195c3f24fe072c05fbdb0d5b6" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-37&quot;&gt;fn &lt;a href=&quot;#method.try_from-36&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0a9059865107027e030eea1892867f0e0d6555" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-37&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 12]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2897766bffdcb2d157d0591fc3481b84e81a0eb2" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-38&quot;&gt;fn &lt;a href=&quot;#method.try_from-37&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed8ea56fa7d5a86e33ea3b086966a392db49943" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-38&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 22]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c400587554fde1e6f90ab7f0bdaa576ba1d4bc" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-39&quot;&gt;fn &lt;a href=&quot;#method.try_from-38&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c615c23b6db00941464c5e1d60e60f270ff72f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-39&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 4]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64cd18f1c9fe65ff7e2ce644c8d4f3b0ca5981e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-4&quot;&gt;fn &lt;a href=&quot;#method.try_from-3&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e77b11653acffa125d661fca97b11798f7ce36" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-4&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 3]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045a8ad923a46b3857358b65ea45188ee410a515" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-4&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2a6fefb64bae594d6edb310de3c2f9e4a3fccf1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-4&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ba34a906bea13ea24299b5478a6455015acf54" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-4&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36dfa1c22591fc94ea0e79016f66fd04f1d38b8c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-4&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e15702ead30d463fa78c742f58aa1e05d4b07b6" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-4&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412e7bdd2af845a17a8ecc9aedb34f5567c0f466" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-4&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f757f066146c2a486b27f3ed4b4f0e1698b92c6" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-4&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92fb27bb9c051890f6b9d93f7be6386837193863" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-4&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c6da3b4449c512ec110e8329ddc1d87aef735b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-4&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edbd315347fccb95c4d8b721d448492d5a25bf94" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-4&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9872b9a73339364690f76c514c5cfc6c02fa6edb" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-4&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16bf24e1681c21e51ab856abd431657667f4136d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-40&quot;&gt;fn &lt;a href=&quot;#method.try_from-39&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147c50400c1fab023a2def641eaf1f7acd4f2f69" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-40&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 9]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94e25752dc3923f677824b0769682267d176d1e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-41&quot;&gt;fn &lt;a href=&quot;#method.try_from-40&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b69ee399cd79c9d5d05ae1cd9e7a114336ea27b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-41&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 25]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949634dd1a312380bb1d857c534409e96d15d10a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-42&quot;&gt;fn &lt;a href=&quot;#method.try_from-41&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36dd968443f2a0645ccd02f7cfc7a45c877d5e87" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-42&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 32]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a800a01925a9d8f20db4b1e10ac01bcec3252e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-43&quot;&gt;fn &lt;a href=&quot;#method.try_from-42&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b10eb22888ed0f1e22d4f60fdd3cf6519395ec2" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-43&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 13]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf88402a6c4593230c8f9035b41b91b727814d5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-44&quot;&gt;fn &lt;a href=&quot;#method.try_from-43&quot;&gt;try_from&lt;/a&gt;(value: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;, &amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4721-4723&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e981b95ef704d0fe85bf18a6b3ca0e2545c76f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-44&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 32]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaba3dd1d9b29eebe78de54775cfc81df57a5eb3" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-45&quot;&gt;fn &lt;a href=&quot;#method.try_from-44&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aba04167ac9798c2486f7cfcc91cc711720e2b1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-45&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 10]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71fbc8b54e9a244db38ff3108e674d7fe756f13" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-46&quot;&gt;fn &lt;a href=&quot;#method.try_from-45&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa9662cd792dffa430eb58955aa42901143f0bb" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-46&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 1]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8cdfa99264d427212b3e32150cd7507cdf8466" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-47&quot;&gt;fn &lt;a href=&quot;#method.try_from-46&quot;&gt;try_from&lt;/a&gt;(value: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;, &amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4721-4723&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dee0364cdff6ef05ba95a30ee7fc5019059dcde" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-47&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 4]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131eabc5bde4df5b5668be79614cd1375d714a40" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-48&quot;&gt;fn &lt;a href=&quot;#method.try_from-47&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f01a837db65e8acac760605237f83dabe44611" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-48&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 21]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c4c14aa38d70b4d0b017dd96b5719464183ee0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-49&quot;&gt;fn &lt;a href=&quot;#method.try_from-48&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d071c4ad5862b6cc924b4f47cb6bcfe9d739415" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-49&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 29]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1966d26e4c7b54967938cca4a77866355b1a316e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-5&quot;&gt;fn &lt;a href=&quot;#method.try_from-4&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc085d8d955e51efbe7973930bae47198e8294c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-5&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 1]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be25813c9c60f070cffacbf8e08a7f11b13a0325" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-5&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9225269f2099de894b100938eb26f4ab8be52206" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-5&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ee523a762b63a1ad2e62aea2b9d9841062be4d0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-5&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e68fd6f575af5c18fb2c66cbd343b7ed3925cf47" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-5&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c9e166ec61ba3337ddf769475db1fe7890eff4" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-5&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010b0e8c0176eb5a31e777a9d029cd3754aeea06" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-5&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51fafbb3f9f67b6467ae21472268860b5878e305" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-5&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b91ed046a07b5b72c483c66cbd4ac1ef2d6150b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-5&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4847279cb2c56043f29ca7a90e37e53266f81f11" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-5&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7301de2572e88f142df33ae635d061108ea2c1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-5&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(value: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;, &amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;convert/trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;convert/trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4721-4723&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0516a1ef550cd387c8a4de79132707e194dc668" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-5&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(value: U) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;T, &amp;lt;T as &lt;a href=&quot;convert/trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;U&amp;gt;&amp;gt;::&lt;a href=&quot;convert/trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert.rs.html#568-570&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1edf324df8230febb35c93a828279a71e35f07" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-50&quot;&gt;fn &lt;a href=&quot;#method.try_from-49&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8436f84c4fee52cc76558e1986f25a4dc99cebf2" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-50&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 8]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc0dbe2a99056d9cd25a9ccbfccde110edc5b00" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-51&quot;&gt;fn &lt;a href=&quot;#method.try_from-50&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44824f573bf99e19db05669c93f07c1688e7620e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-51&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 6]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58eeba3affbb6fab97f55d070fcf087a8113bd5a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-52&quot;&gt;fn &lt;a href=&quot;#method.try_from-51&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb2bbf1075a5ddfdc4114c4931c061c1d70e8a0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-52&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 20]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84136fb987359622109c5950ef97f8dc1e62344f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-53&quot;&gt;fn &lt;a href=&quot;#method.try_from-52&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599ab7b8a63b65a81503766b0155b4b90f7a3238" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-53&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 12]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b843bbab3f48afaff948703baab5d85a660da0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-54&quot;&gt;fn &lt;a href=&quot;#method.try_from-53&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eca34da7b0420356e4f4b27aba14bab7cc60984" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-54&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 28]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6055296109a0bd02011f151b0f4599a98c247035" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-55&quot;&gt;fn &lt;a href=&quot;#method.try_from-54&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389ca2eed4e4ade67b44d26d9b444a9074182de1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-55&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 16]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883baf1671bfac6704e09e3209b156a4bdff84ef" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-56&quot;&gt;fn &lt;a href=&quot;#method.try_from-55&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="163202b862e600c6085026e8d5bf129fa591d0f3" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-56&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 20]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b91ba40acf25392a4162ca3068f729052ce5a208" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-57&quot;&gt;fn &lt;a href=&quot;#method.try_from-56&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc36474650f4a749ad3121e5196567d5f76e290e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-57&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 30]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e90c12db16aae7f8223251eeba63b8b8c22771" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-58&quot;&gt;fn &lt;a href=&quot;#method.try_from-57&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b81637c2a65f4e05fffe604ce58d7873b9f70773" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-58&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 32]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63c37acf8c587ad1d041eac4f900a9a21a5408c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-59&quot;&gt;fn &lt;a href=&quot;#method.try_from-58&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4a418b5c44d9ad8c70ad3ed543e9317d3cc57f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-59&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 25]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c235833acf2441b61d7bfd154c0737a661030388" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-6&quot;&gt;fn &lt;a href=&quot;#method.try_from-5&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf89bbed585d1f037e38af4458ad256502b025b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-6&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 25]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e56596ef620d72294e061b499738eda30b4784a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-6&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52fbf104b087803f66884ccc4016882bf5644477" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-6&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8900c81f794e7f421174f32332504521f61a8660" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-6&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9710ccca4f74760506a76c984fd4d38679eaef" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-6&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6113f1e05dcad830b59b521cdd54cd7cec9be9b3" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-6&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ebe37168ace7489493f1b7e5238001a28c09f51" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-6&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea534f80986cf691f8e8f99f11dc0f51016a8374" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-6&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f622eb41377b96a8f070f1dc1e517ff87c44879" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-6&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5c44111beeb78321394dd162dfd27b213f30b6" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-6&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(value: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;, &amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;convert/trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;convert/trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4721-4723&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85577de4e484a5c438e8d1b0783afe33e5768118" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-6&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(value: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, &amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;convert/trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;convert/trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4721-4723&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c51a9a028a77c4783e80cf1f0e1def5105cb13" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-60&quot;&gt;fn &lt;a href=&quot;#method.try_from-59&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3e8d71ea1c29e06f6d744bf1221f472979fe15" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-60&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 14]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abb867e8fbd62e6088ae1d1ac37fe0753dc81cc" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-61&quot;&gt;fn &lt;a href=&quot;#method.try_from-60&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe67853280b5c7e384244c608ce84c95ce77ee56" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-61&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 0]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be9d5c5c6e1b5e255d86b75202e3a987457d9bb" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-62&quot;&gt;fn &lt;a href=&quot;#method.try_from-61&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a223c10670ede9cad4ee6a7b458d0ec3e24775" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-62&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 24]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47625760737cf36f89c38fece0a0404c6614a58b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-63&quot;&gt;fn &lt;a href=&quot;#method.try_from-62&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e61086c19f898a283247a4374e89c4249967d0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-63&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 27]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00672b198f63e5d06bf4197cb123ccd8933338b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-64&quot;&gt;fn &lt;a href=&quot;#method.try_from-63&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d75320ab5841c98af46f9eed61142e27a161768" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-64&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 15]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b8e9158e2c671f34b7d2bf4d9504285f4a2ad8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-65&quot;&gt;fn &lt;a href=&quot;#method.try_from-64&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026f84ba97fd243a0379b5029c213f1dce8295d5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-65&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 11]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30f0ea7ba259fe33a2655910062adde0fb79080" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-66&quot;&gt;fn &lt;a href=&quot;#method.try_from-65&quot;&gt;try_from&lt;/a&gt;(value: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;, &amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4721-4723&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57db91b436fb79e7b751865bc0568bc1d6f9a38d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-66&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 7]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05806d7aebd7cf7bd54d76580edf241e9c93cae" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-67&quot;&gt;fn &lt;a href=&quot;#method.try_from-66&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0396eafcc962aad2734440f18c9b57c29be026" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-67&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 5]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a89f2925ab9ebd1e7ad13e29e7e49e1da5117e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-68&quot;&gt;fn &lt;a href=&quot;#method.try_from-67&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b877a01b97f3bd5854af01aed4c5d56978895c65" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-68&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 8]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1ae417b9dc41960390059439410d135ef4f85e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-69&quot;&gt;fn &lt;a href=&quot;#method.try_from-68&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd5ce23f3b490ac8e515c2a7912901d0472de46" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-69&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 2]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2e2f3c794cf9d0eb1fd3d280033b1299d8653d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-7&quot;&gt;fn &lt;a href=&quot;#method.try_from-6&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb63cd9dacccc77d1f51a6651563445873cd6c56" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-7&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 26]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c347df69d5fe00f185fde473e14f3cb28ed942e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-7&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7caab164fed788ec8bc2a957f74954ffddcd7572" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-7&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74980a6d026d0c12b2a7ff2e3a1997f4df99f85" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-7&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473ce8bb477949379eefbb67b645d2c4ec5f7023" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-7&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74bdf567a8549e52f2f4a8d0c73e3202567fac4a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-7&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d044bad2e31d18b9aeb86c1bb2ed199049041bd" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-7&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23ea5a94b85ceac96523140f776966a13087bfc" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-7&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8c95a68e795cb84d33a3ffad4b4b355ba63afc" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-7&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(value: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, &amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;convert/trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;convert/trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4721-4723&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8423d959509dda43a48cce80c1a30e80cb15fb1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-7&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(value: U) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;T, &amp;lt;T as &lt;a href=&quot;convert/trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;U&amp;gt;&amp;gt;::&lt;a href=&quot;convert/trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert.rs.html#568-570&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b10f5763938c723416460436099e9a572eba5d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-70&quot;&gt;fn &lt;a href=&quot;#method.try_from-69&quot;&gt;try_from&lt;/a&gt;(i: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.char&quot;&gt;char&lt;/a&gt;, &amp;lt;&lt;a href=&quot;../primitive.char&quot;&gt;char&lt;/a&gt; as &lt;a href=&quot;trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/convert.rs.html#227-233&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b945c6871e96cb304915eb1d7935309689bd92" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-70&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 28]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0cc4bd9757930764e0a393d3f4810b3b3130eb" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-71&quot;&gt;fn &lt;a href=&quot;#method.try_from-70&quot;&gt;try_from&lt;/a&gt;(value: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;, &amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4721-4723&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0506b252240923154c4466c215c58f03619faee2" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-71&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 23]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a9ebb009d7af66ab69f46b2764e5d71abf9034" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-72&quot;&gt;fn &lt;a href=&quot;#method.try_from-71&quot;&gt;try_from&lt;/a&gt;(value: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4721-4723&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71a33cb7f6987446da174d60ef856b442261632" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-72&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 6]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e191981cb124673091cc8caa64116e2330d79d8a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-73&quot;&gt;fn &lt;a href=&quot;#method.try_from-72&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ad6ecefef4a828a0d5d5d919c2bb87846d6811" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-73&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 30]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de043c7ab0e8627cd54abb9cebb7df4e300c36d8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-74&quot;&gt;fn &lt;a href=&quot;#method.try_from-73&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6991aba6affdd3dafc89e330e541070cea9cec1b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-74&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 20]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ea3259592edc4565a089896df7098630d2157b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-75&quot;&gt;fn &lt;a href=&quot;#method.try_from-74&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdba6c07cb5d1107618841309476e1bc7f647865" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-75&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 7]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec123168c22a3251ecc5c57a33d1a705bb3f3db0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-76&quot;&gt;fn &lt;a href=&quot;#method.try_from-75&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1945cb9feb10f87fa0343019ad3500244fd5a1c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-76&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 18]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee8bb9e6db590be8d2e6f170a333133fef19b0c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-77&quot;&gt;fn &lt;a href=&quot;#method.try_from-76&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab75dc2fcafc860e45ab7db4a724b0048e23a9b9" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-77&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 21]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653f930a3a659efa6e29cb08f097e2cbfb1f5363" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-78&quot;&gt;fn &lt;a href=&quot;#method.try_from-77&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532c8828419cc1b6b9f77f26ea92ef4b1aa40e24" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-78&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 21]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb696240d690527d24d8f26fd4ac70f3372e8772" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-79&quot;&gt;fn &lt;a href=&quot;#method.try_from-78&quot;&gt;try_from&lt;/a&gt;(value: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4721-4723&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67da73e8c6ab53970373eac36fa1cf0829aefba5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-79&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 2]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbbc47384efe6b02cefe8d991505d64fc6b8d4a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-8&quot;&gt;fn &lt;a href=&quot;#method.try_from-7&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383e918263d803b65258d2b3d6de7d4f7a268e84" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-8&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 17]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0828126b86cfae646dbab893f1db9978c9c6e050" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-8&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b4372c11c4042bc4ae61b0b200044da5d325d7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-8&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c327e8baa5193bd2aa1e1e9f20a28e4d190f495" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-8&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74cefcc22708654c03dca13472add33dfbe7cc2f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-8&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4739-4745&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309bb7d4a3fc7bbbc3db152163871d9d85829743" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-8&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8721c0ebe42b1a291982694020e97af63d231bd5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-8&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4dc65733505f34cbfb1b7b065ad983e23c93257" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-8&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(value: U) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;T, &amp;lt;T as &lt;a href=&quot;convert/trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;U&amp;gt;&amp;gt;::&lt;a href=&quot;convert/trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert.rs.html#568-570&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6163edf476dd4e76218e30bb07df34cc10a27d9" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-80&quot;&gt;fn &lt;a href=&quot;#method.try_from-79&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f833cc8305c99a12f9fe7564d1cb02ab7d74b293" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-80&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 3]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f377058ecc0fd00ca7d4595c2d32eab16cb4c8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-81&quot;&gt;fn &lt;a href=&quot;#method.try_from-80&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f52c4c53ae68e643b71a097afc3b19c80b752b8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-81&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 12]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c91e51b9ec416ebb26f269ffa973e45241c74dc" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-82&quot;&gt;fn &lt;a href=&quot;#method.try_from-81&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef73d1c397717fcf7960e782b5292f51040f597" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-82&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 16]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5df855d5670f49c34ecc890d9308b4b60643055" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-83&quot;&gt;fn &lt;a href=&quot;#method.try_from-82&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc8571079c3b724552af3e797b5c329d9ce9468" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-83&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 13]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136b390564281e125661554f12c09069439828cd" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-84&quot;&gt;fn &lt;a href=&quot;#method.try_from-83&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7c0be82c7184a453de0ff71795534d0e2531a6b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-84&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 31]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49902470322b3b01bd7431ef1e79f0de6ba8932c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-85&quot;&gt;fn &lt;a href=&quot;#method.try_from-84&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08489aeafb67f8122c7ff6b6063265fea0576ec1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-85&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 16]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0801a4553337123248d45d322b85906a59a96f7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-86&quot;&gt;fn &lt;a href=&quot;#method.try_from-85&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b269ccf1b614fdd8a612afe60c1f7ac06bb828c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-86&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 1]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72b90536772f2e7c183c46429d85e0c288047e9" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-87&quot;&gt;fn &lt;a href=&quot;#method.try_from-86&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb823c939aea70a7129ba37a9b321dcd268a6c2c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-87&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 19]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8886bde59206bf03ca8fe3f2cbb217e76d30f96c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-88&quot;&gt;fn &lt;a href=&quot;#method.try_from-87&quot;&gt;try_from&lt;/a&gt;(value: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;, &amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4721-4723&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68eac2ee787c4e44b0bb693a5e9940cfe4949c68" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-88&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 9]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f60b065b26be32a3da04c0dcdb10b8d1c6f1c12" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-89&quot;&gt;fn &lt;a href=&quot;#method.try_from-88&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b95ea70bdbf7d1a996686dc8ec752ccca705b5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-89&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 22]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d11aa265c8d630e1b136c1f58df81260d28d22f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-9&quot;&gt;fn &lt;a href=&quot;#method.try_from-8&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c07b731d03991dc06d207691bb9e6da4fff817d6" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-9&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 0]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f760054b4bf4377ce49563cc466506e56b672edd" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-9&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4cd7c52ff9f6591ebb9bf8d6ce03bee14ea52eb" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-9&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4783-4791&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12e8f31c46a7db9b6acc56f5254e2bf8f8412ba8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-9&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a03678e33930490c6c70c20c860b9e82de2fed" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-9&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(value: U) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;T, &amp;lt;T as &lt;a href=&quot;convert/trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;U&amp;gt;&amp;gt;::&lt;a href=&quot;convert/trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert.rs.html#568-570&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2b4b77ae9990616b3989e0ff4c22b1ac2f84e84" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-90&quot;&gt;fn &lt;a href=&quot;#method.try_from-89&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cbdd6ead3ecdf00832bf34a5e226c6005e537f8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-90&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 13]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de974d0b1599d6ccf23a93d200a1753a0af364b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-91&quot;&gt;fn &lt;a href=&quot;#method.try_from-90&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e089ad341aba2f94616729272773a3382eb935d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-91&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 22]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea57122e1d76b0a608de465c949c94899bd0e5d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-92&quot;&gt;fn &lt;a href=&quot;#method.try_from-91&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85030edbd57657c2c3c09836724e7bb1b1b49f52" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-92&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 17]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f26f76498b7b401c8a7aa6f398f376a4e52f91" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-93&quot;&gt;fn &lt;a href=&quot;#method.try_from-92&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508a384c7f21087397b8fc9f8950205f6a742121" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-93&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 15]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c570ef74f389778df5d65dfce576b22351687d52" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-94&quot;&gt;fn &lt;a href=&quot;#method.try_from-93&quot;&gt;try_from&lt;/a&gt;(value: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;, &amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4721-4723&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50dc19e6dea1825892bb1d33e5eea7c2247edd94" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-94&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 18]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3433b9b7a9b0082c8ea6fb3a7d524268d396018" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-95&quot;&gt;fn &lt;a href=&quot;#method.try_from-94&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02af395813bbd2abcdd1abe85e1c07935cc399b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-95&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 2]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e169462c5c6c42f622d33a9b8d0ff95b255d70" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-96&quot;&gt;fn &lt;a href=&quot;#method.try_from-95&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef1f1d302d20e74fc98403951b6f337c07f7474" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-96&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 9]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#163-170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae235f22b88abf2ca4cfe8e0f6825df630d73bd9" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-97&quot;&gt;fn &lt;a href=&quot;#method.try_from-96&quot;&gt;try_from&lt;/a&gt;(value: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;, &amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4721-4723&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853aedd9df015e98ba02375551cfb8fe75bc6975" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-97&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 19]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb4dffbfab23dcc464518de6029d0ea6f0b466c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-98&quot;&gt;fn &lt;a href=&quot;#method.try_from-97&quot;&gt;try_from&lt;/a&gt;(u: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;../num/struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4761-4767&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0bf29e219c777c14c870926f125325fb4d6c514" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-98&quot;&gt;fn &lt;a href=&quot;convert/trait.tryfrom#tymethod.try_from&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&amp;amp;mut &lt;a href=&quot;primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.array&quot;&gt;; 31]&lt;/a&gt;, &lt;a href=&quot;array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#177-184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5df42cc648660f219ff27be542792e85caba7a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_from.v-99&quot;&gt;fn &lt;a href=&quot;#method.try_from-98&quot;&gt;try_from&lt;/a&gt;(slice: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.array&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.array&quot;&gt;; 0]&lt;/a&gt;, &lt;a href=&quot;../array/struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#154-156&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17908f0ce261ef1d095f4f03870ef8a90a0318e5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_into.v&quot;&gt;fn &lt;a href=&quot;../../../convert/trait.tryinto#tymethod.try_into&quot;&gt;try_into&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;../../../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;U, &amp;lt;U as &lt;a href=&quot;../../../convert/trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;::&lt;a href=&quot;../../../convert/trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert.rs.html#557-559&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efadfd53077be906a7a8c59af0e2d999efa860ee" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_into.v&quot;&gt;fn &lt;a href=&quot;../../convert/trait.tryinto#tymethod.try_into&quot;&gt;try_into&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;../../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;U, &amp;lt;U as &lt;a href=&quot;../../convert/trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;::&lt;a href=&quot;../../convert/trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert.rs.html#557-559&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8643cdd9b62375e7fbec429383a871da34e0659f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_into.v&quot;&gt;fn &lt;a href=&quot;../convert/trait.tryinto#tymethod.try_into&quot;&gt;try_into&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;U, &amp;lt;U as &lt;a href=&quot;../convert/trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;::&lt;a href=&quot;../convert/trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert.rs.html#557-559&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad43c97f9c267b3abb6bf671fd6130e251eca59" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_into.v&quot;&gt;fn &lt;a href=&quot;../convert/trait.tryinto#tymethod.try_into&quot;&gt;try_into&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;U, &amp;lt;U as &lt;a href=&quot;../convert/trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;::&lt;a href=&quot;../convert/trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert.rs.html#557-559&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543e203b196d9c1a76466276f10c7fa303f6e48a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_into.v&quot;&gt;fn &lt;a href=&quot;convert/trait.tryinto#tymethod.try_into&quot;&gt;try_into&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;U, &amp;lt;U as &lt;a href=&quot;convert/trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;::&lt;a href=&quot;convert/trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert.rs.html#557-559&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cca2e6fb4767867b0cd2451c0a724ace9b982b6" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_into.v&quot;&gt;fn &lt;a href=&quot;trait.tryinto#tymethod.try_into&quot;&gt;try_into&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;U, &amp;lt;U as &lt;a href=&quot;trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;::&lt;a href=&quot;trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert.rs.html#557-559&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133458c813b09b1df0b1c4646918a1a8ac908460" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_into.v-1&quot;&gt;fn &lt;a href=&quot;#method.try_into&quot;&gt;try_into&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;U, &amp;lt;U as &lt;a href=&quot;trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;::&lt;a href=&quot;trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert.rs.html#557-559&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88dea9b73e1a380c6bbedc921072dcfd1a5576a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_into.v-1&quot;&gt;fn &lt;a href=&quot;convert/trait.tryinto#tymethod.try_into&quot;&gt;try_into&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;U, &amp;lt;U as &lt;a href=&quot;convert/trait.tryfrom&quot;&gt;TryFrom&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;::&lt;a href=&quot;convert/trait.tryfrom#associatedtype.Error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert.rs.html#557-559&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13794cca353edb382c6d19a5a5871bb5a21fa918" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_iter.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_iter&quot;&gt;try_iter&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.tryiter&quot;&gt;TryIter&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1502-1504&quot;&gt;[src]&lt;/a&gt;1.15.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e633d5384935076410381114a157af505a1cf37" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_lock.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_lock&quot;&gt;try_lock&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.trylockresult&quot;&gt;TryLockResult&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.mutexguard&quot;&gt;MutexGuard&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mutex.rs.html#261-269&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e70c9a7c4e17c72a593051f3b027782862db942" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_read.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_read&quot;&gt;try_read&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.trylockresult&quot;&gt;TryLockResult&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rwlockreadguard&quot;&gt;RwLockReadGuard&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#222-230&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b82973acdc07ebcafc88fd3398cdf6222c3de62" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_recv.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_recv&quot;&gt;try_recv&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;T, &lt;a href=&quot;enum.tryrecverror&quot;&gt;TryRecvError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1078-1125&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae12a0d52a5d9f17753d25f1ed28addb45eedae5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_reserve.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_reserve&quot;&gt;try_reserve&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;additional: &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/vec_deque.rs.html#634-648&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ad6fba9e6c6590fdf7115407c2fa42236dc2fb" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_reserve.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_reserve&quot;&gt;try_reserve&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;additional: &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#591-595&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42680d38682e7120ccb0c6aac9899d639705820" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_reserve.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_reserve&quot;&gt;try_reserve&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;additional: &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#386-388&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc4d1bdca21ebddb278471deec124393c51e1de" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_reserve.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_reserve&quot;&gt;try_reserve&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;additional: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../collections/enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#956-958&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ffb5cb00b5bb9f116eb1f7931c94b09774323d6" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_reserve.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_reserve&quot;&gt;try_reserve&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;additional: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../collections/enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#518-520&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fcba86f72d046871064311978ec3e053133ec3b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_reserve.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_reserve&quot;&gt;try_reserve&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;additional: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/vec_deque.rs.html#634-648&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ed87f4cf102b4a80f583b440df3fb30c96f403" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_reserve.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_reserve&quot;&gt;try_reserve&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;additional: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#591-595&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e5b1d2ab4287e8f0a0ab50c3adba2561cf9666" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_reserve.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_reserve&quot;&gt;try_reserve&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;additional: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#386-388&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769987cdf1fd758b0ec32a70701b8cb883ce1859" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_reserve_exact.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_reserve_exact&quot;&gt;try_reserve_exact&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;additional: &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/vec_deque.rs.html#596-598&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf26089df480fc50a0b9709aee5d137f255d4d9" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_reserve_exact.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_reserve_exact&quot;&gt;try_reserve_exact&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;additional: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../collections/enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#994-996&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f0d391cd081023e34d180a2529801e62fc3787" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_reserve_exact.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_reserve_exact&quot;&gt;try_reserve_exact&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;additional: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../collections/enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#558-560&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504589ef6792636ff7feb34a4bb90a9beda22698" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_reserve_exact.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_reserve_exact&quot;&gt;try_reserve_exact&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;additional: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/vec_deque.rs.html#596-598&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15dfc87ffedb10430f9fd2d06ee91c149aaaf915" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, Self::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&amp;nbsp;&lt;/code&gt;1.27.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531a05d9a8c57673ffe3a08647ca9b72488499b3" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;../../iter/trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;struct.iter&quot;&gt;Iter&lt;/a&gt;&amp;lt;'a, T&amp;gt; as &lt;a href=&quot;../../iter/trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;../../iter/trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.iter&quot;&gt;Iter&lt;/a&gt;&amp;lt;'a, T&amp;gt;: &lt;a href=&quot;../../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/vec_deque.rs.html#2230-2252&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d4a73965076f0e251dce274a608105bae8c383" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;../../iter/trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, Self::&lt;a href=&quot;../../iter/trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/double_ended.rs.html#156-167&quot;&gt;[src]&lt;/a&gt;1.27.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="617e357d1ea0bdb3c8a4b737760ef91b4c0f9583" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;../iter/trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;struct.iter&quot;&gt;Iter&lt;/a&gt;&amp;lt;'a, T&amp;gt; as &lt;a href=&quot;../iter/trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;../iter/trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.iter&quot;&gt;Iter&lt;/a&gt;&amp;lt;'a, T&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#3255-3273&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153a0199e15bd3ecba48cc4cf96179ab691ea1a2" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;../iter/trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;struct.itermut&quot;&gt;IterMut&lt;/a&gt;&amp;lt;'a, T&amp;gt; as &lt;a href=&quot;../iter/trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;../iter/trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.itermut&quot;&gt;IterMut&lt;/a&gt;&amp;lt;'a, T&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#3255-3273&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1a93be157b0769794af11687cffc5dd9632e94" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;../iter/trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, Self::&lt;a href=&quot;../iter/trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/double_ended.rs.html#156-167&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8725c5616591e6f6eb731314cbd3d979beada9b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;../iter/trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, Self::&lt;a href=&quot;../iter/trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/double_ended.rs.html#156-167&quot;&gt;[src]&lt;/a&gt;1.27.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa18048023a128e02557a83c69cd06e8eb24931" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;../iter/trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;struct.rangeinclusive&quot;&gt;RangeInclusive&lt;/a&gt;&amp;lt;A&amp;gt; as &lt;a href=&quot;../iter/trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;../iter/trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.rangeinclusive&quot;&gt;RangeInclusive&lt;/a&gt;&amp;lt;A&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#483-507&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5d433a2371deb84b22258cf7e968cae5ec873b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;../iter/trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, Self::&lt;a href=&quot;../iter/trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/double_ended.rs.html#156-167&quot;&gt;[src]&lt;/a&gt;1.27.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba5b3ef886d6ab3f1519b93a9ff8dc732ffb262" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;iter/trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, Self::&lt;a href=&quot;iter/trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/double_ended.rs.html#156-167&quot;&gt;[src]&lt;/a&gt;1.27.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b04a33890ac11e5d014d15db9834f8b975655d1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, F, R&amp;gt;(&amp;amp;mut self, init: Acc, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;A, B&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;A, B&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/chain.rs.html#210-227&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f249a302d5455681a90c9598b5801feaba8517b1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.enumerate&quot;&gt;Enumerate&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.enumerate&quot;&gt;Enumerate&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#996-1006&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cec360dddeec4c15b49b1c0ed40b3bc29b26be3" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.filter&quot;&gt;Filter&lt;/a&gt;&amp;lt;I, P&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.filter&quot;&gt;Filter&lt;/a&gt;&amp;lt;I, P&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#747-756&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c8f7a37f6cd58d4c9117a33e776a8a83a19f277" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.filtermap&quot;&gt;FilterMap&lt;/a&gt;&amp;lt;I, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.filtermap&quot;&gt;FilterMap&lt;/a&gt;&amp;lt;I, F&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#854-862&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f4eb135c91042b362b438a6eb462351840c9bf" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.flatmap&quot;&gt;FlatMap&lt;/a&gt;&amp;lt;I, U, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.flatmap&quot;&gt;FlatMap&lt;/a&gt;&amp;lt;I, U, F&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/flatten.rs.html#79-83&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a04166132033d6256bdf63c8746bf6fbaa2d56" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.flatten&quot;&gt;Flatten&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.flatten&quot;&gt;Flatten&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/flatten.rs.html#173-177&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7639faeb1d94b43e20136fb710e0784b12fcfa99" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1923-1927&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee682a08271ac288b07d20c199bd52e6e65d5587" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.inspect&quot;&gt;Inspect&lt;/a&gt;&amp;lt;I, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.inspect&quot;&gt;Inspect&lt;/a&gt;&amp;lt;I, F&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2033-2038&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33890ce02a14a4e9986a7237ef04cf847a9af3e5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.skip&quot;&gt;Skip&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.skip&quot;&gt;Skip&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1526-1540&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6dce26e6c85a32b6ddb091d3ebf58825961694" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, G, R&amp;gt;(&amp;amp;mut self, init: Acc, g: G) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;G: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.map&quot;&gt;Map&lt;/a&gt;&amp;lt;I, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.map&quot;&gt;Map&lt;/a&gt;&amp;lt;I, F&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#602-607&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ec3a17da615bd9b635fae573271b3ba0843cef" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;struct.cloned&quot;&gt;Cloned&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.cloned&quot;&gt;Cloned&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#286-290&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8cf54a9e6b1b0b1fef352464a8f7e2dd1a46a2" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;struct.copied&quot;&gt;Copied&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.copied&quot;&gt;Copied&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#181-185&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a768e2d44da440dc4d8178be34357086a2ffe0df" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;struct.rev&quot;&gt;Rev&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.rev&quot;&gt;Rev&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#86-90&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e334b2384a1026588f7685e894fb4bc1de522b67" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v&quot;&gt;fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, Self::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/double_ended.rs.html#156-167&quot;&gt;[src]&lt;/a&gt;1.27.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f705dfe8ebb0d8c2290f85efd1ae1cc52f47cf" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v-1&quot;&gt;default fn &lt;a href=&quot;trait.doubleendediterator#method.try_rfold&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1830-1840&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a12cd0b5dec4d8ac1692c6b09c6c735b6667a5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v-1&quot;&gt;fn &lt;a href=&quot;#method.try_rfold-1&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;struct.cloned&quot;&gt;Cloned&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.cloned&quot;&gt;Cloned&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#286-290&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66afb4af61d1f06e4800549a78c7e2eb85bdd754" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v-10&quot;&gt;fn &lt;a href=&quot;#method.try_rfold-10&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.enumerate&quot;&gt;Enumerate&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.enumerate&quot;&gt;Enumerate&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#996-1006&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe5bc8cd4c196aa0e29cabf08e44b98103c8cc6" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v-11&quot;&gt;fn &lt;a href=&quot;#method.try_rfold-11&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1923-1927&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ca7f0714827e7f218849edc2af370129f32a8c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v-12&quot;&gt;default fn &lt;a href=&quot;#method.try_rfold-12&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1830-1840&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37ea2393984425e24f980cb1a3f2844647db5a2" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v-13&quot;&gt;fn &lt;a href=&quot;#method.try_rfold-13&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;struct.rev&quot;&gt;Rev&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.rev&quot;&gt;Rev&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#86-90&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37181d232ccfc495f658e9057902f680bc1f5e46" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v-14&quot;&gt;fn &lt;a href=&quot;#method.try_rfold-14&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.skip&quot;&gt;Skip&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.skip&quot;&gt;Skip&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1526-1540&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceae9e4e07b045f834a34c5a260fabec63530eca" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v-15&quot;&gt;fn &lt;a href=&quot;#method.try_rfold-15&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.inspect&quot;&gt;Inspect&lt;/a&gt;&amp;lt;I, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.inspect&quot;&gt;Inspect&lt;/a&gt;&amp;lt;I, F&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2033-2038&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8adc5336af53f88cf025c1c6f71241d5d4fcb5c8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v-16&quot;&gt;fn &lt;a href=&quot;#method.try_rfold-16&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.filter&quot;&gt;Filter&lt;/a&gt;&amp;lt;I, P&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.filter&quot;&gt;Filter&lt;/a&gt;&amp;lt;I, P&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#747-756&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c028432267a75b7300ea3211aeba5163050e48f4" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v-17&quot;&gt;fn &lt;a href=&quot;#method.try_rfold-17&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.flatten&quot;&gt;Flatten&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.flatten&quot;&gt;Flatten&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/flatten.rs.html#173-177&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a3d83829a5fff91f27e90ed8a6035e41800bd7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v-18&quot;&gt;fn &lt;a href=&quot;#method.try_rfold-18&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.flatmap&quot;&gt;FlatMap&lt;/a&gt;&amp;lt;I, U, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.flatmap&quot;&gt;FlatMap&lt;/a&gt;&amp;lt;I, U, F&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/flatten.rs.html#79-83&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992c6f6ae97621f612c9b9f9f1ec266353294cf5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v-2&quot;&gt;fn &lt;a href=&quot;#method.try_rfold-2&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;struct.copied&quot;&gt;Copied&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.copied&quot;&gt;Copied&lt;/a&gt;&amp;lt;I&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#181-185&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f68bdc292ec216ea4d1b91e8849e6c955182a8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v-3&quot;&gt;fn &lt;a href=&quot;#method.try_rfold-3&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;../collections/vec_deque/struct.iter&quot;&gt;Iter&lt;/a&gt;&amp;lt;'a, T&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;../collections/vec_deque/struct.iter&quot;&gt;Iter&lt;/a&gt;&amp;lt;'a, T&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/vec_deque.rs.html#2230-2252&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888af03288a5283af813366242cac9384f912fa8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v-4&quot;&gt;fn &lt;a href=&quot;#method.try_rfold-4&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;../slice/struct.iter&quot;&gt;Iter&lt;/a&gt;&amp;lt;'a, T&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;../slice/struct.iter&quot;&gt;Iter&lt;/a&gt;&amp;lt;'a, T&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#3255-3273&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266aa5d05dcc739e13711b4a9a3e853710fb1b79" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v-5&quot;&gt;fn &lt;a href=&quot;#method.try_rfold-5&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;../slice/struct.itermut&quot;&gt;IterMut&lt;/a&gt;&amp;lt;'a, T&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;../slice/struct.itermut&quot;&gt;IterMut&lt;/a&gt;&amp;lt;'a, T&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#3255-3273&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762bb3dcd8db99cee8979541452eedf2af8c2a17" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v-6&quot;&gt;fn &lt;a href=&quot;#method.try_rfold-6&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;B, F, R&amp;gt;(&amp;amp;mut self, init: B, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(B, &amp;lt;&lt;a href=&quot;../ops/struct.rangeinclusive&quot;&gt;RangeInclusive&lt;/a&gt;&amp;lt;A&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;../ops/struct.rangeinclusive&quot;&gt;RangeInclusive&lt;/a&gt;&amp;lt;A&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#483-507&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124112af9c4d301ff8e803a44fd9da428eb9efaa" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v-7&quot;&gt;fn &lt;a href=&quot;#method.try_rfold-7&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, F, R&amp;gt;(&amp;amp;mut self, init: Acc, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;A, B&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.chain&quot;&gt;Chain&lt;/a&gt;&amp;lt;A, B&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/chain.rs.html#210-227&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513ed50116dc825a1e460023a4516355e09d39b9" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v-8&quot;&gt;fn &lt;a href=&quot;#method.try_rfold-8&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, Fold, R&amp;gt;(&amp;amp;mut self, init: Acc, fold: Fold) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fold: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.filtermap&quot;&gt;FilterMap&lt;/a&gt;&amp;lt;I, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.filtermap&quot;&gt;FilterMap&lt;/a&gt;&amp;lt;I, F&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#854-862&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f535673973d18dfc3d2d9748eae911608467f7fa" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_rfold.v-9&quot;&gt;fn &lt;a href=&quot;#method.try_rfold-9&quot;&gt;try_rfold&lt;/a&gt;&amp;lt;Acc, G, R&amp;gt;(&amp;amp;mut self, init: Acc, g: G) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;G: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(Acc, &amp;lt;&lt;a href=&quot;struct.map&quot;&gt;Map&lt;/a&gt;&amp;lt;I, F&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; R,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R: &lt;a href=&quot;../ops/trait.try&quot;&gt;Try&lt;/a&gt;&amp;lt;Ok = Acc&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.map&quot;&gt;Map&lt;/a&gt;&amp;lt;I, F&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#602-607&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba121fdc08318bf1ed5c1c0a3a2bcd0b28f4bc0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_send.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_send&quot;&gt;try_send&lt;/a&gt;(&amp;amp;self, t: T) -&amp;gt; &lt;a href=&quot;../../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;enum.trysenderror&quot;&gt;TrySendError&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1018-1020&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035a0d4f31747a42700c26bbd196201151a4ddb3" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_unwrap.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_unwrap&quot;&gt;try_unwrap&lt;/a&gt;(this: &lt;a href=&quot;struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;T, &lt;a href=&quot;struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#326-343&quot;&gt;[src]&lt;/a&gt;1.4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b806a9ee0050d66f27762aea8ce6be86da90c317" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_unwrap.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_unwrap&quot;&gt;try_unwrap&lt;/a&gt;(this: &lt;a href=&quot;struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;T, &lt;a href=&quot;struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/rc.rs.html#345-362&quot;&gt;[src]&lt;/a&gt;1.4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66780c40662858dd5ec269221f07f679ed53aa51" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_wait.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_wait&quot;&gt;try_wait&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.exitstatus&quot;&gt;ExitStatus&lt;/a&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#1394-1396&quot;&gt;[src]&lt;/a&gt;1.18.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a5eb5715c0198fa185f28530560bd78d2da1765" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_with.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_with&quot;&gt;try_with&lt;/a&gt;&amp;lt;F, R&amp;gt;(&amp;amp;'static self, f: F) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;R, &lt;a href=&quot;struct.accesserror&quot;&gt;AccessError&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;(&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T) -&amp;gt; R,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/local.rs.html#249-259&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff1f078eb64944f09a094515c527b8d249843aa" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;try_write.v&quot;&gt;pub fn &lt;a href=&quot;#method.try_write&quot;&gt;try_write&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.trylockresult&quot;&gt;TryLockResult&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rwlockwriteguard&quot;&gt;RwLockWriteGuard&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#304-312&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6625c8fc075df595f5c6e8be3cda4e1080a211f8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;ttl.v&quot;&gt;pub fn &lt;a href=&quot;#method.ttl&quot;&gt;ttl&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/tcp.rs.html#496-498&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5fc8c27b8296841c52fbcc6666ae4a2086911b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;ttl.v&quot;&gt;pub fn &lt;a href=&quot;#method.ttl&quot;&gt;ttl&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/tcp.rs.html#812-814&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff565e93894909590d7bd731974dcf0bc4707302" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;ttl.v&quot;&gt;pub fn &lt;a href=&quot;#method.ttl&quot;&gt;ttl&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/udp.rs.html#576-578&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd8a47e0aedc005fb139727b8323686cdce92ac" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;type_id.v&quot;&gt;fn &lt;a href=&quot;#tymethod.type_id&quot;&gt;type_id&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.typeid&quot;&gt;TypeId&lt;/a&gt;&lt;/code&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a37bdce4397d83f09c69640aa79cf8f6e384ec" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;type_id.v&quot;&gt;fn &lt;a href=&quot;../../../any/trait.any#tymethod.type_id&quot;&gt;type_id&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../../../any/struct.typeid&quot;&gt;TypeId&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/any.rs.html#101&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a601a62ba65c0d2d1d1e02704be3097c3b8c92e5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;type_id.v&quot;&gt;fn &lt;a href=&quot;../../any/trait.any#tymethod.type_id&quot;&gt;type_id&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../../any/struct.typeid&quot;&gt;TypeId&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/any.rs.html#101&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea71f3b5156b03830675436e581faa8549801f4b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;type_id.v&quot;&gt;fn &lt;a href=&quot;../any/trait.any#tymethod.type_id&quot;&gt;type_id&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../any/struct.typeid&quot;&gt;TypeId&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/any.rs.html#101&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82a1487f0b04dd061003f4f15ad9e91fa15291d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;type_id.v&quot;&gt;fn &lt;a href=&quot;any/trait.any#tymethod.type_id&quot;&gt;type_id&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;any/struct.typeid&quot;&gt;TypeId&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/any.rs.html#101&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2999ff1a5fd3faaf0a8ff1da8e8fc9ca41d16729" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;type_id.v&quot;&gt;fn &lt;a href=&quot;trait.any#tymethod.type_id&quot;&gt;type_id&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.typeid&quot;&gt;TypeId&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/any.rs.html#101&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb813636223807e95e3b5b07089a524d76e0931" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;type_id.v-1&quot;&gt;fn &lt;a href=&quot;#method.type_id&quot;&gt;type_id&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.typeid&quot;&gt;TypeId&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/any.rs.html#101&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e66bb860998168e98189d4fd836045c8f46d6af" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;type_id.v-1&quot;&gt;fn &lt;a href=&quot;any/trait.any#tymethod.type_id&quot;&gt;type_id&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;any/struct.typeid&quot;&gt;TypeId&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/any.rs.html#101&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f3a848d4b5602aedab5c1c972ccc036b8f47dd" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;uid.v&quot;&gt;fn &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.uid&quot;&gt;uid&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/fs.rs.html#664&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32215cae320e7fbed6121fc214d46e419c94cb2c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;uid.v&quot;&gt;fn &lt;a href=&quot;../os/unix/process/trait.commandext#tymethod.uid&quot;&gt;uid&lt;/a&gt;(&amp;amp;mut self, id: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;amp;mut &lt;a href=&quot;struct.command&quot;&gt;Command&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#110-113&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c68a740d098cf69ad5692735d298fbcdbe01d45" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;uid.v-1&quot;&gt;fn &lt;a href=&quot;#method.uid&quot;&gt;uid&lt;/a&gt;(&amp;amp;mut self, id: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../../../process/struct.command&quot;&gt;Command&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#110-113&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e115b50d91fc0306c5a1d3ad55bdbcaecf5a3f9" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;uid.v-1&quot;&gt;fn &lt;a href=&quot;#method.uid&quot;&gt;uid&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/fs.rs.html#664&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4478e49b9b1d2748b13844d568bcd5a556657b64" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unbound.v&quot;&gt;pub fn &lt;a href=&quot;#method.unbound&quot;&gt;unbound&lt;/a&gt;() -&amp;gt; &lt;a href=&quot;../../../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.unixdatagram&quot;&gt;UnixDatagram&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#1060-1063&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb4a8f42198f949f3e42097c9c03ac3457f011c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;uninit.v&quot;&gt;pub const fn &lt;a href=&quot;#method.uninit&quot;&gt;uninit&lt;/a&gt;() -&amp;gt; &lt;a href=&quot;union.maybeuninit&quot;&gt;MaybeUninit&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/mem/maybe_uninit.rs.html#249-251&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8799617b48368a16e2ffffa7e5690caba2ca59e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;union.v&quot;&gt;pub fn &lt;a href=&quot;#method.union&quot;&gt;union&lt;/a&gt;&amp;lt;'a&amp;gt;(&amp;amp;'a self, other: &amp;amp;'a &lt;a href=&quot;../struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;) -&amp;gt; &lt;a href=&quot;struct.union&quot;&gt;Union&lt;/a&gt;&amp;lt;'a, T, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#555-565&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5389cbebee2302c88df595975a7f5f1f545894" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;union.v&quot;&gt;pub fn &lt;a href=&quot;#method.union&quot;&gt;union&lt;/a&gt;&amp;lt;'a&amp;gt;(&amp;amp;'a self, other: &amp;amp;'a &lt;a href=&quot;struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;) -&amp;gt; &lt;a href=&quot;hash_set/struct.union&quot;&gt;Union&lt;/a&gt;&amp;lt;'a, T, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#555-565&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="663b33591614f94cf137002e8f8eb73cf6b2c4d3" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;union.v&quot;&gt;pub fn &lt;a href=&quot;#method.union&quot;&gt;union&lt;/a&gt;(&amp;amp;'a self, other: &amp;amp;'a &lt;a href=&quot;btree_set/struct.btreeset&quot;&gt;BTreeSet&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;btree_set/struct.union&quot;&gt;Union&lt;/a&gt;&amp;lt;'a, T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/btree/set.rs.html#435-440&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="970a18b1a6855a85187cf2b3486816492290d636" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;union.v&quot;&gt;pub fn &lt;a href=&quot;#method.union&quot;&gt;union&lt;/a&gt;(&amp;amp;'a self, other: &amp;amp;'a &lt;a href=&quot;struct.btreeset&quot;&gt;BTreeSet&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;struct.union&quot;&gt;Union&lt;/a&gt;&amp;lt;'a, T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/btree/set.rs.html#435-440&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6861c4b3b69bb4cf6de7bc2f9590ff15d9a566b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unpaired_surrogate.v&quot;&gt;pub fn &lt;a href=&quot;#method.unpaired_surrogate&quot;&gt;unpaired_surrogate&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/decode.rs.html#124-126&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db0aa6b0a0fca76282ed21c45ec204486b66126" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unpark.v&quot;&gt;pub fn &lt;a href=&quot;#method.unpark&quot;&gt;unpark&lt;/a&gt;(&amp;amp;self)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/mod.rs.html#1164-1191&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6bc7a625cf821a7121b044e2d9d74969b44c9b0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unwrap.v&quot;&gt;pub fn &lt;a href=&quot;#method.unwrap&quot;&gt;unwrap&lt;/a&gt;(self) -&amp;gt; T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/option.rs.html#344-349&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25560ed773fbed7b1b54dd8ab3e41cbe88d6e121" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unwrap.v&quot;&gt;pub fn &lt;a href=&quot;#method.unwrap&quot;&gt;unwrap&lt;/a&gt;(self) -&amp;gt; T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/result.rs.html#797-802&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7dc09f03347eb291142b7968dc886ece79a90b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unwrap_err.v&quot;&gt;pub fn &lt;a href=&quot;#method.unwrap_err&quot;&gt;unwrap_err&lt;/a&gt;(self) -&amp;gt; E&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/result.rs.html#857-862&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a00672a3fe4de25e2008c70a10baf0f9485262" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unwrap_or.v&quot;&gt;pub fn &lt;a href=&quot;#method.unwrap_or&quot;&gt;unwrap_or&lt;/a&gt;(self, def: T) -&amp;gt; T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/option.rs.html#367-372&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6455e8f05bab81ce2b8d5665c49b59948790f83f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unwrap_or.v&quot;&gt;pub fn &lt;a href=&quot;#method.unwrap_or&quot;&gt;unwrap_or&lt;/a&gt;(self, optb: T) -&amp;gt; T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/result.rs.html#738-743&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f4feb61c2bb134dd0741b7d9965c448f9816c8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unwrap_or_default.v&quot;&gt;pub fn &lt;a href=&quot;#method.unwrap_or_default&quot;&gt;unwrap_or_default&lt;/a&gt;(self) -&amp;gt; T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/option.rs.html#984-989&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60715517461cda8ab6f0635228a3dcf4b03ad396" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unwrap_or_default.v&quot;&gt;pub fn &lt;a href=&quot;#method.unwrap_or_default&quot;&gt;unwrap_or_default&lt;/a&gt;(self) -&amp;gt; T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/result.rs.html#922-927&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d6d439bb9870ff89571b6841ac2b7c89571221" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unwrap_or_else.v&quot;&gt;pub fn &lt;a href=&quot;#method.unwrap_or_else&quot;&gt;unwrap_or_else&lt;/a&gt;&amp;lt;F&amp;gt;(self, f: F) -&amp;gt; T where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;() -&amp;gt; T,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/option.rs.html#385-390&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf555d1712be9348531b3147e7c37ccf9176c0d0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unwrap_or_else.v&quot;&gt;pub fn &lt;a href=&quot;#method.unwrap_or_else&quot;&gt;unwrap_or_else&lt;/a&gt;&amp;lt;F&amp;gt;(self, op: F) -&amp;gt; T where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;(E) -&amp;gt; T,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/result.rs.html#763-768&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93a195f0eaee0a681d9d349d38c987184b5b90a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unzip.v&quot;&gt;fn &lt;a href=&quot;../../../iter/trait.iterator#method.unzip&quot;&gt;unzip&lt;/a&gt;&amp;lt;A, B, FromA, FromB&amp;gt;(self) -&amp;gt; &lt;a href=&quot;../../../primitive.tuple&quot;&gt;(&lt;/a&gt;FromA, FromB&lt;a href=&quot;../../../primitive.tuple&quot;&gt;)&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FromA: &lt;a href=&quot;../../../default/trait.default&quot;&gt;Default&lt;/a&gt; + &lt;a href=&quot;../../../iter/trait.extend&quot;&gt;Extend&lt;/a&gt;&amp;lt;A&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FromB: &lt;a href=&quot;../../../default/trait.default&quot;&gt;Default&lt;/a&gt; + &lt;a href=&quot;../../../iter/trait.extend&quot;&gt;Extend&lt;/a&gt;&amp;lt;B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Self: &lt;a href=&quot;../../../iter/trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;lt;Item = &lt;a href=&quot;../../../primitive.tuple&quot;&gt;(&lt;/a&gt;A, B&lt;a href=&quot;../../../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#2184-2198&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e85ff11582ef27c14200bd0e9f20d25af69cfcd" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unzip.v&quot;&gt;fn &lt;a href=&quot;../../../iter/trait.iterator#method.unzip&quot;&gt;unzip&lt;/a&gt;&amp;lt;A, B, FromA, FromB&amp;gt;(self) -&amp;gt; &lt;a href=&quot;../../../primitive.tuple&quot;&gt;(&lt;/a&gt;FromA, FromB&lt;a href=&quot;../../../primitive.tuple&quot;&gt;)&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FromA: &lt;a href=&quot;../../../default/trait.default&quot;&gt;Default&lt;/a&gt; + &lt;a href=&quot;../../../iter/trait.extend&quot;&gt;Extend&lt;/a&gt;&amp;lt;A&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FromB: &lt;a href=&quot;../../../default/trait.default&quot;&gt;Default&lt;/a&gt; + &lt;a href=&quot;../../../iter/trait.extend&quot;&gt;Extend&lt;/a&gt;&amp;lt;B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Self: &lt;a href=&quot;../../../iter/trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;lt;Item = &lt;a href=&quot;../../../primitive.tuple&quot;&gt;(&lt;/a&gt;A, B&lt;a href=&quot;../../../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#2184-2198&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb8c5226b2bda1bbd281e73f2caf9c21844fbba" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unzip.v&quot;&gt;fn &lt;a href=&quot;../../iter/trait.iterator#method.unzip&quot;&gt;unzip&lt;/a&gt;&amp;lt;A, B, FromA, FromB&amp;gt;(self) -&amp;gt; &lt;a href=&quot;../../primitive.tuple&quot;&gt;(&lt;/a&gt;FromA, FromB&lt;a href=&quot;../../primitive.tuple&quot;&gt;)&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FromA: &lt;a href=&quot;../../default/trait.default&quot;&gt;Default&lt;/a&gt; + &lt;a href=&quot;../../iter/trait.extend&quot;&gt;Extend&lt;/a&gt;&amp;lt;A&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FromB: &lt;a href=&quot;../../default/trait.default&quot;&gt;Default&lt;/a&gt; + &lt;a href=&quot;../../iter/trait.extend&quot;&gt;Extend&lt;/a&gt;&amp;lt;B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Self: &lt;a href=&quot;../../iter/trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;lt;Item = &lt;a href=&quot;../../primitive.tuple&quot;&gt;(&lt;/a&gt;A, B&lt;a href=&quot;../../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#2184-2198&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39c143c8b34aa998c8144702d04895283857d71" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unzip.v&quot;&gt;fn &lt;a href=&quot;../../iter/trait.iterator#method.unzip&quot;&gt;unzip&lt;/a&gt;&amp;lt;A, B, FromA, FromB&amp;gt;(self) -&amp;gt; &lt;a href=&quot;../../primitive.tuple&quot;&gt;(&lt;/a&gt;FromA, FromB&lt;a href=&quot;../../primitive.tuple&quot;&gt;)&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FromA: &lt;a href=&quot;../../default/trait.default&quot;&gt;Default&lt;/a&gt; + &lt;a href=&quot;../../iter/trait.extend&quot;&gt;Extend&lt;/a&gt;&amp;lt;A&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FromB: &lt;a href=&quot;../../default/trait.default&quot;&gt;Default&lt;/a&gt; + &lt;a href=&quot;../../iter/trait.extend&quot;&gt;Extend&lt;/a&gt;&amp;lt;B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Self: &lt;a href=&quot;../../iter/trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;lt;Item = &lt;a href=&quot;../../primitive.tuple&quot;&gt;(&lt;/a&gt;A, B&lt;a href=&quot;../../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#2184-2198&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b76812f96fde7481134bb0c34c90eff6294f837" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unzip.v&quot;&gt;fn &lt;a href=&quot;../iter/trait.iterator#method.unzip&quot;&gt;unzip&lt;/a&gt;&amp;lt;A, B, FromA, FromB&amp;gt;(self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;FromA, FromB&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FromA: &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; + &lt;a href=&quot;../iter/trait.extend&quot;&gt;Extend&lt;/a&gt;&amp;lt;A&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FromB: &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; + &lt;a href=&quot;../iter/trait.extend&quot;&gt;Extend&lt;/a&gt;&amp;lt;B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Self: &lt;a href=&quot;../iter/trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;lt;Item = &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;A, B&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#2184-2198&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5113d65a2fa027ae081b601755738f60e760ced" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unzip.v&quot;&gt;fn &lt;a href=&quot;../iter/trait.iterator#method.unzip&quot;&gt;unzip&lt;/a&gt;&amp;lt;A, B, FromA, FromB&amp;gt;(self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;FromA, FromB&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FromA: &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; + &lt;a href=&quot;../iter/trait.extend&quot;&gt;Extend&lt;/a&gt;&amp;lt;A&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FromB: &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; + &lt;a href=&quot;../iter/trait.extend&quot;&gt;Extend&lt;/a&gt;&amp;lt;B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Self: &lt;a href=&quot;../iter/trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;lt;Item = &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;A, B&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#2184-2198&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a1bc370647277a176d4e7f0a17023017bfb24f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unzip.v&quot;&gt;fn &lt;a href=&quot;iter/trait.iterator#method.unzip&quot;&gt;unzip&lt;/a&gt;&amp;lt;A, B, FromA, FromB&amp;gt;(self) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;FromA, FromB&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FromA: &lt;a href=&quot;default/trait.default&quot;&gt;Default&lt;/a&gt; + &lt;a href=&quot;iter/trait.extend&quot;&gt;Extend&lt;/a&gt;&amp;lt;A&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FromB: &lt;a href=&quot;default/trait.default&quot;&gt;Default&lt;/a&gt; + &lt;a href=&quot;iter/trait.extend&quot;&gt;Extend&lt;/a&gt;&amp;lt;B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Self: &lt;a href=&quot;iter/trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;lt;Item = &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;A, B&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#2184-2198&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2185a40fc430a2fea85e1751ce461ab48960ff" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unzip.v&quot;&gt;fn &lt;a href=&quot;trait.iterator#method.unzip&quot;&gt;unzip&lt;/a&gt;&amp;lt;A, B, FromA, FromB&amp;gt;(self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;FromA, FromB&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FromA: &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; + &lt;a href=&quot;trait.extend&quot;&gt;Extend&lt;/a&gt;&amp;lt;A&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FromB: &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; + &lt;a href=&quot;trait.extend&quot;&gt;Extend&lt;/a&gt;&amp;lt;B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Self: &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;lt;Item = &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;A, B&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#2184-2198&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eafe14df91e9ae58900bfd732f34ca00ab4a73e2" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unzip.v&quot;&gt;fn &lt;a href=&quot;trait.iterator#method.unzip&quot;&gt;unzip&lt;/a&gt;&amp;lt;A, B, FromA, FromB&amp;gt;(self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;FromA, FromB&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FromA: &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; + &lt;a href=&quot;trait.extend&quot;&gt;Extend&lt;/a&gt;&amp;lt;A&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FromB: &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; + &lt;a href=&quot;trait.extend&quot;&gt;Extend&lt;/a&gt;&amp;lt;B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Self: &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;lt;Item = &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;A, B&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#2184-2198&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd9df05ecfcbed3dfd97af7969f9c4154ce5807" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;unzip.v-1&quot;&gt;fn &lt;a href=&quot;trait.iterator#method.unzip&quot;&gt;unzip&lt;/a&gt;&amp;lt;A, B, FromA, FromB&amp;gt;(self) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;FromA, FromB&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FromA: &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; + &lt;a href=&quot;trait.extend&quot;&gt;Extend&lt;/a&gt;&amp;lt;A&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FromB: &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; + &lt;a href=&quot;trait.extend&quot;&gt;Extend&lt;/a&gt;&amp;lt;B&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Self: &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;lt;Item = &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;A, B&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#2184-2198&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8cb0974e837103e2a992db4b3037642810a7d36" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;update.v&quot;&gt;pub fn &lt;a href=&quot;#method.update&quot;&gt;update&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;self, f: F) -&amp;gt; T where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;(T) -&amp;gt; T,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/cell.rs.html#267-275&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f62e1f1ed5b09cbdb2ec68c3f4ff92d715dcf54" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;upgrade.v&quot;&gt;pub fn &lt;a href=&quot;#method.upgrade&quot;&gt;upgrade&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#1238-1271&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c81fe9b7a3b4aa1e6b786c417e1100c6970374" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;upgrade.v&quot;&gt;pub fn &lt;a href=&quot;#method.upgrade&quot;&gt;upgrade&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/rc.rs.html#1453-1461&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c554848d3b3ca40e54262607bc91c3c01c856fe" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;usable_size.v&quot;&gt;fn &lt;a href=&quot;trait.alloc#method.usable_size&quot;&gt;usable_size&lt;/a&gt;(&amp;amp;self, layout: &amp;amp;&lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc.rs.html#759-761&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b1d1c95cb98665d614608dfcc0d755e9f53871" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;utf8_error.v&quot;&gt;pub fn &lt;a href=&quot;#method.utf8_error&quot;&gt;utf8_error&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../str/struct.utf8error&quot;&gt;Utf8Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#1672-1674&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f6264301639aaa8acc81da886fd62702037098" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;utf8_error.v&quot;&gt;pub fn &lt;a href=&quot;#method.utf8_error&quot;&gt;utf8_error&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../str/struct.utf8error&quot;&gt;Utf8Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#904-906&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ecbac64254662b23ca1b999c01b588743cab70" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;valid_up_to.v&quot;&gt;pub fn &lt;a href=&quot;#method.valid_up_to&quot;&gt;valid_up_to&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#232&quot;&gt;[src]&lt;/a&gt;1.5.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9189d022c8fd0d6ea9b69ae062eda736ef79f50" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;values.v&quot;&gt;pub fn &lt;a href=&quot;#method.values&quot;&gt;values&lt;/a&gt;(&amp;amp;'a self) -&amp;gt; &lt;a href=&quot;btree_map/struct.values&quot;&gt;Values&lt;/a&gt;&amp;lt;'a, K, V&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/btree/map.rs.html#2028-2030&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d1ebb2521dd0cfa12363a867ee119214809ccd" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;values.v&quot;&gt;pub fn &lt;a href=&quot;#method.values&quot;&gt;values&lt;/a&gt;(&amp;amp;'a self) -&amp;gt; &lt;a href=&quot;struct.values&quot;&gt;Values&lt;/a&gt;&amp;lt;'a, K, V&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/btree/map.rs.html#2028-2030&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008c2772f4a65e19193750a8dced4fb92f42985e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;values.v&quot;&gt;pub fn &lt;a href=&quot;#method.values&quot;&gt;values&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;hash_map/struct.values&quot;&gt;Values&lt;/a&gt;&amp;lt;K, V&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#306-308&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0617d33c822dcf5b252bfb9b6d8cf0817b48dc68" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;values.v&quot;&gt;pub fn &lt;a href=&quot;#method.values&quot;&gt;values&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.values&quot;&gt;Values&lt;/a&gt;&amp;lt;K, V&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#306-308&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec79a92049ef22d07804a561f3378cf117efa83" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;values_mut.v&quot;&gt;pub fn &lt;a href=&quot;#method.values_mut&quot;&gt;values_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;btree_map/struct.valuesmut&quot;&gt;ValuesMut&lt;/a&gt;&amp;lt;K, V&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/btree/map.rs.html#2054-2056&quot;&gt;[src]&lt;/a&gt;1.10.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1783369efca7e91b3861c9d8b220cfed68452617" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;values_mut.v&quot;&gt;pub fn &lt;a href=&quot;#method.values_mut&quot;&gt;values_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;hash_map/struct.valuesmut&quot;&gt;ValuesMut&lt;/a&gt;&amp;lt;K, V&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#333-335&quot;&gt;[src]&lt;/a&gt;1.10.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da7065a24b7016b9ebd97d09d7e8a7e0939a5b4" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;values_mut.v&quot;&gt;pub fn &lt;a href=&quot;#method.values_mut&quot;&gt;values_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;struct.valuesmut&quot;&gt;ValuesMut&lt;/a&gt;&amp;lt;K, V&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/btree/map.rs.html#2054-2056&quot;&gt;[src]&lt;/a&gt;1.10.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9957bf78d75c137f657fde3549d97bd15a904ec" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;values_mut.v&quot;&gt;pub fn &lt;a href=&quot;#method.values_mut&quot;&gt;values_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;struct.valuesmut&quot;&gt;ValuesMut&lt;/a&gt;&amp;lt;K, V&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#333-335&quot;&gt;[src]&lt;/a&gt;1.10.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25295ad49e27105fec916fa1f97ee61b04af51cd" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wait.v&quot;&gt;pub fn &lt;a href=&quot;#method.wait&quot;&gt;wait&lt;/a&gt;&amp;lt;'a, T&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;guard: &lt;a href=&quot;struct.mutexguard&quot;&gt;MutexGuard&lt;/a&gt;&amp;lt;'a, T&amp;gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;type.lockresult&quot;&gt;LockResult&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.mutexguard&quot;&gt;MutexGuard&lt;/a&gt;&amp;lt;'a, T&amp;gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/condvar.rs.html#199-212&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5e46f7042c5c599dadb9131881c207c840a962" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wait.v&quot;&gt;pub fn &lt;a href=&quot;#method.wait&quot;&gt;wait&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.exitstatus&quot;&gt;ExitStatus&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#1354-1357&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e402e6e4a7299bc4f32dc10e61daa21f6d2eb691" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wait.v&quot;&gt;pub fn &lt;a href=&quot;#method.wait&quot;&gt;wait&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.barrierwaitresult&quot;&gt;BarrierWaitResult&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/barrier.rs.html#131-149&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5858c83977a87a8450115dcd346124fff8cecb74" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wait_timeout.v&quot;&gt;pub fn &lt;a href=&quot;#method.wait_timeout&quot;&gt;wait_timeout&lt;/a&gt;&amp;lt;'a, T&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;guard: &lt;a href=&quot;struct.mutexguard&quot;&gt;MutexGuard&lt;/a&gt;&amp;lt;'a, T&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dur: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;type.lockresult&quot;&gt;LockResult&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;struct.mutexguard&quot;&gt;MutexGuard&lt;/a&gt;&amp;lt;'a, T&amp;gt;, &lt;a href=&quot;struct.waittimeoutresult&quot;&gt;WaitTimeoutResult&lt;/a&gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/condvar.rs.html#399-413&quot;&gt;[src]&lt;/a&gt;1.5.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2f38171a399ba3764acdde1df1f44055c23a24" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wait_timeout_ms.v&quot;&gt;pub fn &lt;a href=&quot;#method.wait_timeout_ms&quot;&gt;wait_timeout_ms&lt;/a&gt;&amp;lt;'a, T&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;guard: &lt;a href=&quot;struct.mutexguard&quot;&gt;MutexGuard&lt;/a&gt;&amp;lt;'a, T&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ms: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;type.lockresult&quot;&gt;LockResult&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;struct.mutexguard&quot;&gt;MutexGuard&lt;/a&gt;&amp;lt;'a, T&amp;gt;, &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/condvar.rs.html#327-333&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b857f4a8b963f9fc4cc55a16ba9771c2cb0c03" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wait_timeout_until.v&quot;&gt;pub fn &lt;a href=&quot;#method.wait_timeout_until&quot;&gt;wait_timeout_until&lt;/a&gt;&amp;lt;'a, T, F&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;guard: &lt;a href=&quot;struct.mutexguard&quot;&gt;MutexGuard&lt;/a&gt;&amp;lt;'a, T&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dur: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;condition: F&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;type.lockresult&quot;&gt;LockResult&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;struct.mutexguard&quot;&gt;MutexGuard&lt;/a&gt;&amp;lt;'a, T&amp;gt;, &lt;a href=&quot;struct.waittimeoutresult&quot;&gt;WaitTimeoutResult&lt;/a&gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;T) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/condvar.rs.html#472-487&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d31706a34decfd8e150d734416c5c6bb186d6d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wait_until.v&quot;&gt;pub fn &lt;a href=&quot;#method.wait_until&quot;&gt;wait_until&lt;/a&gt;&amp;lt;'a, T, F&amp;gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;guard: &lt;a href=&quot;struct.mutexguard&quot;&gt;MutexGuard&lt;/a&gt;&amp;lt;'a, T&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;condition: F&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;type.lockresult&quot;&gt;LockResult&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.mutexguard&quot;&gt;MutexGuard&lt;/a&gt;&amp;lt;'a, T&amp;gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;T) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/condvar.rs.html#261-269&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="169c30802aa560489ebfc52c28259ccfb40a6772" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wait_with_output.v&quot;&gt;pub fn &lt;a href=&quot;#method.wait_with_output&quot;&gt;wait_with_output&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.output&quot;&gt;Output&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#1431-1457&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f7ddb55504523f45794cd985e8b6f677ae0139" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wake.v&quot;&gt;pub fn &lt;a href=&quot;#method.wake&quot;&gt;wake&lt;/a&gt;(self)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/task/wake.rs.html#240-253&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e48f08339173fa1d0082dfe56198093c54e8cb" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wake_by_ref.v&quot;&gt;pub fn &lt;a href=&quot;#method.wake_by_ref&quot;&gt;wake_by_ref&lt;/a&gt;(&amp;amp;self)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/task/wake.rs.html#262-268&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef94c2a671d20a36e7fd66147dcd0d980684edd" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;waker.v&quot;&gt;pub fn &lt;a href=&quot;#method.waker&quot;&gt;waker&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;'a &lt;a href=&quot;struct.waker&quot;&gt;Waker&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/task/wake.rs.html#200-202&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ea58f0b38c74b6eddbe1515bd3167cb61744b7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;weak_count.v&quot;&gt;pub fn &lt;a href=&quot;#method.weak_count&quot;&gt;weak_count&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/rc.rs.html#1485-1493&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974fe77ecba7c23360382f7217c350d9df52f2b9" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;weak_count.v&quot;&gt;pub fn &lt;a href=&quot;#method.weak_count&quot;&gt;weak_count&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#1302-1326&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d38a579af469802343943c3831de80e81758768" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;weak_count.v&quot;&gt;pub fn &lt;a href=&quot;#method.weak_count&quot;&gt;weak_count&lt;/a&gt;(this: &amp;amp;&lt;a href=&quot;struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#501-506&quot;&gt;[src]&lt;/a&gt;1.15.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9b86b8130f48159f803fa81ff6b6fab141068d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;weak_count.v&quot;&gt;pub fn &lt;a href=&quot;#method.weak_count&quot;&gt;weak_count&lt;/a&gt;(this: &amp;amp;&lt;a href=&quot;struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/rc.rs.html#489-491&quot;&gt;[src]&lt;/a&gt;1.15.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6246ab0ec1c8dcb92abf7de4cfa7f6ace6bcb746" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;while-let-conditional-loops&quot;&gt;while let&lt;/code&gt; Conditional Loops</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf7185beed6852ebbdff717b06fab200fcd589f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;width.v&quot;&gt;pub fn &lt;a href=&quot;#method.width&quot;&gt;width&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#1565&quot;&gt;[src]&lt;/a&gt;1.5.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd272b497db65da162044f09227669b65eb059e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;will_wake.v&quot;&gt;pub fn &lt;a href=&quot;#method.will_wake&quot;&gt;will_wake&lt;/a&gt;(&amp;amp;self, other: &amp;amp;&lt;a href=&quot;struct.waker&quot;&gt;Waker&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/task/wake.rs.html#279-281&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610bf9eece0c85a99a65f53bf883136ff69fdc13" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;windows.v&quot;&gt;pub fn &lt;a href=&quot;#method.windows&quot;&gt;windows&lt;/a&gt;(&amp;amp;self, size: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../slice/struct.windows&quot;&gt;Windows&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#601-604&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e534fddcf1ee9e801bb934db79fe1eb74723316" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;windows.v&quot;&gt;pub fn &lt;a href=&quot;#method.windows&quot;&gt;windows&lt;/a&gt;(&amp;amp;self, size: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../slice/struct.windows&quot;&gt;Windows&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#601-604&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8bb5a3d2ea95775b623bbe86a6e0cf9a313a96b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;windows.v&quot;&gt;pub fn &lt;a href=&quot;#method.windows&quot;&gt;windows&lt;/a&gt;(&amp;amp;self, size: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;slice/struct.windows&quot;&gt;Windows&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#601-604&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba4bb080c526fcc24adcf194a337624d2b0c103" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with.v&quot;&gt;pub fn &lt;a href=&quot;#method.with&quot;&gt;with&lt;/a&gt;&amp;lt;F, R&amp;gt;(&amp;amp;'static self, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;(&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T) -&amp;gt; R,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/local.rs.html#232-236&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a79600c14697afbee9ed481d62c71e3a7d0d871" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_capacity.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_capacity&quot;&gt;with_capacity&lt;/a&gt;(capacity: &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../struct.hashmap&quot;&gt;HashMap&lt;/a&gt;&amp;lt;K, V, &lt;a href=&quot;struct.randomstate&quot;&gt;RandomState&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#242-244&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f766633531ef9ec24a2e77868bc3c6125711fead" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_capacity.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_capacity&quot;&gt;with_capacity&lt;/a&gt;(capacity: &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, &lt;a href=&quot;../hash_map/struct.randomstate&quot;&gt;RandomState&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#147-149&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3445ae77e66e507dd7851d7591c15c55bc524b7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_capacity.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_capacity&quot;&gt;with_capacity&lt;/a&gt;(capacity: &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.binaryheap&quot;&gt;BinaryHeap&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/binary_heap.rs.html#373-375&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d34cb44bcd749824852c4a927648e8656d88c1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_capacity.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_capacity&quot;&gt;with_capacity&lt;/a&gt;(capacity: &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.vecdeque&quot;&gt;VecDeque&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/vec_deque.rs.html#382-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d033c1c7a0f8d6550a52499b464cb2670a1c98a4" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_capacity.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_capacity&quot;&gt;with_capacity&lt;/a&gt;(capacity: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;binary_heap/struct.binaryheap&quot;&gt;BinaryHeap&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/binary_heap.rs.html#373-375&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6875c9a3d5bfc6d4e459b6696a5196815f19f8e0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_capacity.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_capacity&quot;&gt;with_capacity&lt;/a&gt;(capacity: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.hashmap&quot;&gt;HashMap&lt;/a&gt;&amp;lt;K, V, &lt;a href=&quot;hash_map/struct.randomstate&quot;&gt;RandomState&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#242-244&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c06b04ec4a15adca8fcf4bd65c7a41854a2517" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_capacity.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_capacity&quot;&gt;with_capacity&lt;/a&gt;(capacity: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, &lt;a href=&quot;hash_map/struct.randomstate&quot;&gt;RandomState&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#147-149&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c852d3807a402d15f518ba30baedd730e799a384" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_capacity.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_capacity&quot;&gt;with_capacity&lt;/a&gt;(capacity: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#197-201&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32126b66817ce355dda800c055546c6a7a9eeab" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_capacity.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_capacity&quot;&gt;with_capacity&lt;/a&gt;(capacity: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1170-1174&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd261a7b098ab695e93cd70c0c3240aa2fa22f2" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_capacity.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_capacity&quot;&gt;with_capacity&lt;/a&gt;(capacity: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#416-418&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3dbb7923783bce3f5ecb6c984b1e4753259e836" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_capacity.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_capacity&quot;&gt;with_capacity&lt;/a&gt;(capacity: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#353-358&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9abfbd0622ff3792c247007e4df697eeebb32937" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_capacity.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_capacity&quot;&gt;with_capacity&lt;/a&gt;(capacity: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;vec_deque/struct.vecdeque&quot;&gt;VecDeque&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/vec_deque.rs.html#382-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62755b86887b34619b0148b6d9528e858ac07dcf" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_capacity.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_capacity&quot;&gt;with_capacity&lt;/a&gt;(capacity: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, inner: R) -&amp;gt; &lt;a href=&quot;struct.bufreader&quot;&gt;BufReader&lt;/a&gt;&amp;lt;R&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#96-108&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10abde45c3fe9c2f4d44848a02b403c682e9bcad" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_capacity.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_capacity&quot;&gt;with_capacity&lt;/a&gt;(capacity: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, inner: W) -&amp;gt; &lt;a href=&quot;struct.bufwriter&quot;&gt;BufWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#480-486&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eba5570da080f706631955540353e193c836660" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_capacity.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_capacity&quot;&gt;with_capacity&lt;/a&gt;(capacity: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, inner: W) -&amp;gt; &lt;a href=&quot;struct.linewriter&quot;&gt;LineWriter&lt;/a&gt;&amp;lt;W&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#853-858&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e98c4a255c7af321d26dd4be0eba2ab2fd1a68" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_capacity_and_hasher.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_capacity_and_hasher&quot;&gt;with_capacity_and_hasher&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;capacity: &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hash_builder: S&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../struct.hashmap&quot;&gt;HashMap&lt;/a&gt;&amp;lt;K, V, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#523-527&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8afe227cb0fdb91800629890d7befb82cfa07eba" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_capacity_and_hasher.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_capacity_and_hasher&quot;&gt;with_capacity_and_hasher&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;capacity: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hash_builder: S&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;struct.hashmap&quot;&gt;HashMap&lt;/a&gt;&amp;lt;K, V, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#523-527&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9aeac10227e2a8dbb7e1465d09885ff82f806d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_capacity_and_hasher.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_capacity_and_hasher&quot;&gt;with_capacity_and_hasher&lt;/a&gt;(capacity: &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;, hasher: S) -&amp;gt; &lt;a href=&quot;../struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#321-323&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1737a2e0172554d0bf2a2e7862f77105d832db3" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_capacity_and_hasher.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_capacity_and_hasher&quot;&gt;with_capacity_and_hasher&lt;/a&gt;(capacity: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, hasher: S) -&amp;gt; &lt;a href=&quot;struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#321-323&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064e142bda929fdb0dbcf97410c97f0b0547726c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_copy.v&quot;&gt;pub unsafe fn &lt;a href=&quot;#method.with_copy&quot;&gt;with_copy&lt;/a&gt;&amp;lt;F, R&amp;gt;(&amp;amp;self, f: F) -&amp;gt; R where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;(&lt;a href=&quot;struct.valist&quot;&gt;VaList&lt;/a&gt;&amp;lt;'copy, 'f&amp;gt;) -&amp;gt; R,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ffi.rs.html#314-320&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ffff3c9af1fb3754904488a7cd923f5edeadf1f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_extension.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_extension&quot;&gt;with_extension&lt;/a&gt;&amp;lt;S:&amp;nbsp;&lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt;&amp;gt;(&amp;amp;self, extension: S) -&amp;gt; &lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2263-2265&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a7c90d07d30b5a3ab78fe80d75771d974cab21" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_file_name.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_file_name&quot;&gt;with_file_name&lt;/a&gt;&amp;lt;S:&amp;nbsp;&lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt;&amp;gt;(&amp;amp;self, file_name: S) -&amp;gt; &lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2237-2239&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cc50c53855d2838005ea8871e2aa36eed4604d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_hasher.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_hasher&quot;&gt;with_hasher&lt;/a&gt;(hash_builder: S) -&amp;gt; &lt;a href=&quot;../struct.hashmap&quot;&gt;HashMap&lt;/a&gt;&amp;lt;K, V, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#494-498&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519c8981517d1025140e35c1cfa4e190d608b2df" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_hasher.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_hasher&quot;&gt;with_hasher&lt;/a&gt;(hash_builder: S) -&amp;gt; &lt;a href=&quot;struct.hashmap&quot;&gt;HashMap&lt;/a&gt;&amp;lt;K, V, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#494-498&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40691d42d0f7f9ce981b671fe73b4c03f53780b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_hasher.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_hasher&quot;&gt;with_hasher&lt;/a&gt;(hasher: S) -&amp;gt; &lt;a href=&quot;../struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#294-296&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd844dbdda8996b612344de00992eeb6402c49ca" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;with_hasher.v&quot;&gt;pub fn &lt;a href=&quot;#method.with_hasher&quot;&gt;with_hasher&lt;/a&gt;(hasher: S) -&amp;gt; &lt;a href=&quot;struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#294-296&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18629f0b8a345d2cb10618bfabfa9d46614675ea" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_abs.v&quot;&gt;pub fn &lt;a href=&quot;#method.wrapping_abs&quot;&gt;wrapping_abs&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1390-1396&quot;&gt;[src]&lt;/a&gt;1.13.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffa3b3bd465c098881514980d95a9e86881c60b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_abs.v&quot;&gt;pub fn &lt;a href=&quot;#method.wrapping_abs&quot;&gt;wrapping_abs&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1390-1396&quot;&gt;[src]&lt;/a&gt;1.13.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be7f0423a35ca2c0899e637f60d3625a10d1a34" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_abs.v&quot;&gt;pub fn &lt;a href=&quot;#method.wrapping_abs&quot;&gt;wrapping_abs&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1390-1396&quot;&gt;[src]&lt;/a&gt;1.13.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752054c9064761200270880178adb26661724ede" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_abs.v&quot;&gt;pub fn &lt;a href=&quot;#method.wrapping_abs&quot;&gt;wrapping_abs&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1390-1396&quot;&gt;[src]&lt;/a&gt;1.13.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e56fd12774dc30a8c71dc31d1f30f23b273e77" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_abs.v&quot;&gt;pub fn &lt;a href=&quot;#method.wrapping_abs&quot;&gt;wrapping_abs&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1390-1396&quot;&gt;[src]&lt;/a&gt;1.13.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4befef1669796daa2d3fd7bf7b0e126a599f329d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_abs.v&quot;&gt;pub fn &lt;a href=&quot;#method.wrapping_abs&quot;&gt;wrapping_abs&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1390-1396&quot;&gt;[src]&lt;/a&gt;1.13.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b1edd02252ee33ea1e78424528c0e9df9efce3" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_add.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1116-1118&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773198ce67d929d0600ab6d6709e3c265ae069b4" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_add.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1116-1118&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307c828eb414aea7c35e40f92a91296b3029e9ae" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_add.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1116-1118&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e8ed408d5ee67713036612fa532d4e8af91236a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_add.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1116-1118&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="206f0e10c6f507276170c90f015c7a503384e194" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_add.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1116-1118&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab37bf710f2552b9e7c0080074d4041b829eccf" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_add.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1116-1118&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd370ea8e3d96617170f9f68395251bd47e69a7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_add.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3043-3045&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44173edead3c2b2ce2188a8aa7630f2992040a4" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_add.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3043-3045&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89da3b4f479c674ca16227d6266f01220cd6eed7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_add.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3043-3045&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718ae7ff291fd4f7b1ee01ffc2ad22e1b6ab65a0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_add.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3043-3045&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58cca3ea273b38c36765eaeb4723f4fc5ad15b39" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_add.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3043-3045&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3462928d8bdfe63a47e39f29d94a73c968f7aa96" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_add.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3043-3045&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a144fbaa3a2053e7ed4e7d42ff7d7205f38b764c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_add.v&quot;&gt;pub fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mod.rs.html#1450-1454&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed466dcf7ab85cb7783bec71c70985b31e18e78" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_add.v-1&quot;&gt;pub fn &lt;a href=&quot;#method.wrapping_add-1&quot;&gt;wrapping_add&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mod.rs.html#2117-2121&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6869259ca4a47a41258cdacddd9ab99d5861e8b4" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1191-1193&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0632a208b0cf04d25bcc9e03727c205086673785" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1191-1193&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd328e946b11d717406ca065dc6b5b393caffcec" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1191-1193&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857617245b06cbd37f17e226cf50d190bf91560a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1191-1193&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf08062a75b72c94e18c1fab36a7da7abeac9423" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1191-1193&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098afadbbc6092bd242b557bf4c7ebf537eae2a4" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1191-1193&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b868324a2bb5aa323bbc8119784014757d2401b6" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3110-3112&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17890866ca4f94c9fd7503f07a9a6ece49e8fb98" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3110-3112&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9967be3f6d496fe2c56643d4036eb782e8ada157" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3110-3112&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26284417aea6c04b1001f9c941e4897f5273e51" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3110-3112&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944e6a09dafb5ca530364d4bcb52351935987064" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3110-3112&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b106fb0e0e73772ba79c6ae9aaaca3f78f49172e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3110-3112&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6151e874fd68a11a152373b647d7f5976b0689f5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1221-1223&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342dd5f014a51864d03810d3128eb2060147cc58" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1221-1223&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb6f3e1124bd0d7f28d9b9ce223722669b7abb44" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1221-1223&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9f4f8a49e906d42cd0e2c15d7ef135fa32593d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1221-1223&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085d601ad5b2295eda75e99b7c49409dfd47aa7e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1221-1223&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01239a2bc14eccd5ec202e169790308aa1a4b433" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1221-1223&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6621e6e3bdb387057a611feec676d2892d52327e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3137-3139&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d087c0587b75462b462290c66a55fb1e02621586" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3137-3139&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d3a6391e47b121bea4349e2e6b66a98f45e94b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3137-3139&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074e8e538c0104ef669daa1c75f51984df167f42" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3137-3139&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64319fcb4a158e4b5369063ac33d46b1aaa96133" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3137-3139&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc94f21bf529e3679f60b3b38750d53afcf8a31" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_div_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3137-3139&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a030b2ab78f86cc67cb6e87d53af32608e77c15" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_mul.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1161-1163&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fbac8f692930a7cdb1c90babf384e5a46cb088b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_mul.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1161-1163&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4067fb819dd9f55cacf3b2199f6df1a8d530eeb2" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_mul.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1161-1163&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7af8e892594a3436ba1392a94a5f0f70fda012b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_mul.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1161-1163&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475880dfc1244234c148bed68a86bcd99b2b4205" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_mul.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1161-1163&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28eef916bf55c84cc3de25f86db99c8b14d79d13" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_mul.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1161-1163&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0902faceec18155a171f8f07cd9f57f3b4642790" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_mul.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3088-3090&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a3b3393a7ffcf51c75dc8c455e114c0069b15a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_mul.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3088-3090&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a6e31d0b33dc802781eb5cc966277470a03db01" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_mul.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3088-3090&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b22c8d135b2be04e49735a8eda8f7fd0150d36" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_mul.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3088-3090&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e62cfd9a0d2d3b742a01a39a80eccda17139fc" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_mul.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3088-3090&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65fba13a0671ac4c181f07105c7431c0ceb3262" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_mul.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3088-3090&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a413878a40b9c4734d3ee566bf494e3884f6e9" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_neg.v&quot;&gt;pub const fn &lt;a href=&quot;#method.wrapping_neg&quot;&gt;wrapping_neg&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1305-1307&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ce3d673c64504d757e85c1cc4c50939f2e2ee2" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_neg.v&quot;&gt;pub const fn &lt;a href=&quot;#method.wrapping_neg&quot;&gt;wrapping_neg&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1305-1307&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f734eb665bf31b15878974709584e5bc43c8db" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_neg.v&quot;&gt;pub const fn &lt;a href=&quot;#method.wrapping_neg&quot;&gt;wrapping_neg&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1305-1307&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06152a640cd699ea338c1008e26fcb30352efb5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_neg.v&quot;&gt;pub const fn &lt;a href=&quot;#method.wrapping_neg&quot;&gt;wrapping_neg&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1305-1307&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f1f2907e7b31bfd9930f64e5de69e25f8348852" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_neg.v&quot;&gt;pub const fn &lt;a href=&quot;#method.wrapping_neg&quot;&gt;wrapping_neg&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1305-1307&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bbeb51866f64d4266d0d606573493f7849bfdc" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_neg.v&quot;&gt;pub const fn &lt;a href=&quot;#method.wrapping_neg&quot;&gt;wrapping_neg&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1305-1307&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734a599badb82ffd043d2521d0b1bf6c048f23c1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_neg.v&quot;&gt;pub const fn &lt;a href=&quot;#method.wrapping_neg&quot;&gt;wrapping_neg&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3217-3219&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118c194e9c7af93831aa44aa7d3f8bd6c6d0c2a7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_neg.v&quot;&gt;pub const fn &lt;a href=&quot;#method.wrapping_neg&quot;&gt;wrapping_neg&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3217-3219&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96581fc75dfa55cd84da5fe1eda70fdb8f07791" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_neg.v&quot;&gt;pub const fn &lt;a href=&quot;#method.wrapping_neg&quot;&gt;wrapping_neg&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3217-3219&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76723f2c1caad3ca0b57abcc8880ef06711880e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_neg.v&quot;&gt;pub const fn &lt;a href=&quot;#method.wrapping_neg&quot;&gt;wrapping_neg&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3217-3219&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af8c94cd4b6077b3d40dd6117d1df979a59463d2" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_neg.v&quot;&gt;pub const fn &lt;a href=&quot;#method.wrapping_neg&quot;&gt;wrapping_neg&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3217-3219&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3945396061ffac83b75872897b08b48d5e8faedb" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_neg.v&quot;&gt;pub const fn &lt;a href=&quot;#method.wrapping_neg&quot;&gt;wrapping_neg&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3217-3219&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9797cdd4b29dd611cae405d25aee8406029d7d27" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_next_power_of_two.v&quot;&gt;pub fn &lt;a href=&quot;#method.wrapping_next_power_of_two&quot;&gt;wrapping_next_power_of_two&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3843-3845&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ffb6d5207adaa9f8a35e2d676eb74c7a26bfe43" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_next_power_of_two.v&quot;&gt;pub fn &lt;a href=&quot;#method.wrapping_next_power_of_two&quot;&gt;wrapping_next_power_of_two&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3843-3845&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f58ec2a3161fbb4f0ece994891eae6d8b5a0301" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_next_power_of_two.v&quot;&gt;pub fn &lt;a href=&quot;#method.wrapping_next_power_of_two&quot;&gt;wrapping_next_power_of_two&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3843-3845&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98f3882d1788ced17503fcfe7d307e925ccd7a7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_next_power_of_two.v&quot;&gt;pub fn &lt;a href=&quot;#method.wrapping_next_power_of_two&quot;&gt;wrapping_next_power_of_two&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3843-3845&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d565996ab259b7c90eb65810ae0be115565edd23" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_next_power_of_two.v&quot;&gt;pub fn &lt;a href=&quot;#method.wrapping_next_power_of_two&quot;&gt;wrapping_next_power_of_two&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3843-3845&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3a6767c5c514e6942f331b61e5f3bc572e9cc6" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_next_power_of_two.v&quot;&gt;pub fn &lt;a href=&quot;#method.wrapping_next_power_of_two&quot;&gt;wrapping_next_power_of_two&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3843-3845&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23abb697fb96ccd2e6461c9a2c340f10d96451ad" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_offset.v&quot;&gt;pub fn &lt;a href=&quot;#method.wrapping_offset&quot;&gt;wrapping_offset&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mod.rs.html#1178-1182&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c010fda6850ecee20721483dbceb3cc7d932a8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_offset.v-1&quot;&gt;pub fn &lt;a href=&quot;#method.wrapping_offset-1&quot;&gt;wrapping_offset&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mod.rs.html#1812-1816&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9772a449f916eeb33e44f57d38afda8282dce0a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_offset_from.v&quot;&gt;pub fn &lt;a href=&quot;#method.wrapping_offset_from&quot;&gt;wrapping_offset_from&lt;/a&gt;(self, origin: &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mod.rs.html#1294-1300&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc7b1c4b6858c9c8da7e816dc5971de282c06463" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_offset_from.v-1&quot;&gt;pub fn &lt;a href=&quot;#method.wrapping_offset_from-1&quot;&gt;wrapping_offset_from&lt;/a&gt;(self, origin: &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mod.rs.html#1965-1967&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7914edc3ed743a3550847559667da45246fc82d9" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_pow.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1417-1437&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c88b3b93397c021c503fd57d25262c7e88e4d64" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_pow.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1417-1437&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a718c763b2137f11ee1ae2fc279407ea8796ddef" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_pow.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1417-1437&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5164e39cacd33159c55bc0b9104adf70dcd9aa6c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_pow.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1417-1437&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3f2ad970866eb28411cdef523cb9471737b999" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_pow.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1417-1437&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4fe4744ebd0efbc45d713cfca6709b52163722f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_pow.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1417-1437&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002408722a4995cd4731a8aabcc4d4ed8d7fb18a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_pow.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3299-3319&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e96c61a051487575e56d29e360871badbdd920" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_pow.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3299-3319&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da872f990e71204cf9e0d628c46fc4339701b0e7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_pow.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3299-3319&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c13ca1b363e034f52f94d773b1ea55ec3c60bee" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_pow.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3299-3319&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f8182dabe3d11453a8501202833d852cce74aa" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_pow.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3299-3319&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f4dd2e8b259f89937d32338471332c82ea006e1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_pow.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3299-3319&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93dc6263fbf74625843aab1c764f1be37fb411f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1251-1253&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c5e599d778e05661c2b97f8e275c1f8aa052c1d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1251-1253&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c9b9d4a5d94bac2972b8fdbb3e067b97ef4a5c1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1251-1253&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf983783c2efec57cc92ed57b58739b26b629be" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1251-1253&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea846df8a55c41fea910f3a3a44959d9fd81a7d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1251-1253&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4376b065b6c72707d606dc2d4a97f68752371c02" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1251-1253&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4acfc9270e12af5a27ef7293d13ffb05acd5b6b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3161-3163&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff997609c1fbb81901f07d355e6409fcbe99bd6" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3161-3163&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a63b44291e01e1357c1b180d76d987eadcc14c0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3161-3163&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="401656627c8563f975f8677d131f876c47834005" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3161-3163&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb23ac4582bcc2bd3c673177ef62c3414f111fe8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3161-3163&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38769a123a547aab0fe38f1be9eb1b3cc184b54" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3161-3163&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9cde2e7ce58f445f557c21219b69063f79c714e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1280-1282&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8022b3942131376d75c6cf3f4c65125510fa62e1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1280-1282&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f2c153dffa3263af1265d7ad475ce81d0d68fa" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1280-1282&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ead5042393fb0c5d5478a2dd1e9c7e3a3895e8a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1280-1282&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999d3bdf27bd94209581cabc683ff0499d115753" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1280-1282&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a096b89fda59e48b8b2223f050b7a3f606e652b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1280-1282&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5189c75b210d4897dc9dc0f5cb39c3b472701205" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3189-3191&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94dd36db8a08711d40ff9af75961299b45752f10" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3189-3191&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825488332e8057262c6fee08d71aa7161dbd184a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3189-3191&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d4d06acd6cce1366295af71f4132bac9e9b718" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3189-3191&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74fe09bd89ae65a0d9ef318821ab86d6be9daf6a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3189-3191&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a37172d4e2a3f39e014bb088c562c6688db5b8ee" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_rem_euclid.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3189-3191&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60190658e1049f3d0273c2244f895b34b263fdef" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shl.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1332-1336&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdecf00e8b28fbc542626c3c6679ab4f77fe1c66" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shl.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1332-1336&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e333f23fd905590d514ff851e5ff6c6cf8268761" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shl.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1332-1336&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56606544a4640f59025b996b07b00cbbae531cea" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shl.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1332-1336&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b16d8adf28942e5173cc3660fca8911d89c2ba9" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shl.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1332-1336&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb6f58ef436d4fe6a7c36dccb6f8c02e6b47eb4" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shl.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1332-1336&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="947f3c762690f1ccce513f706f10b629dc12ac9b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shl.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3245-3249&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab460ba9180f7020ca6ab52d17c3488e9f222d19" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shl.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3245-3249&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8c8eb295a984a23ba6bb8d605720f4fed718cc" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shl.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3245-3249&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74415df534f59dfb29853dfe5443b5cce8bb3e5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shl.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3245-3249&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d553e006da98314d110b41ee1914c6060a6f28" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shl.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3245-3249&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4235ee7615458fb52d7c22b65c7ad1571753df" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shl.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3245-3249&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9edbf3daf44add46dbc3d39f6a7eafa148ab9ea" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shr.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1361-1365&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70caf93ab4d2bf619f932cd43e4c8f96e9c37e3e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shr.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1361-1365&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2dad1772d5c23ccd2a0d55c068508f7f04fda7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shr.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1361-1365&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413cdf108e7d8f4baf9bfd513506bd675cf29ea5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shr.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1361-1365&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69897ebd56f8b2c8bd1059fd2e6e6a5a70fefc0b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shr.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1361-1365&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e8d9097fbf653dc1ac1a082169909234d95438" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shr.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1361-1365&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2bf408f62f5bae539b2d364e3873725474bab04" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shr.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3276-3280&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d8c97ebe0bb727d77228cca53e65bb1347e33c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shr.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3276-3280&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10f0f9105c78004f20342df32dae23fcb33e48c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shr.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3276-3280&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33601e1659144bc3016c96b6ef4c930c5a9e2690" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shr.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3276-3280&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a742afe50579f2a57f403e0caec7fba54f295814" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shr.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3276-3280&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a9e0ee7187043e4683e6e230e90bb603c1e77f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_shr.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3276-3280&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839d717328535b212d2b63b4ac7762d73e22a176" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_sub.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1139-1141&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb47e872d37f36e6969c22c2c0fe88808d2389f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_sub.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1139-1141&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab6599325dbcba8c62e62386102f3d18d7e97e0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_sub.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1139-1141&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a23075e2507d27988f5f9a25a483228f50f955ff" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_sub.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1139-1141&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d32613297c6749b95364e123771eba5fa1a9c4" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_sub.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1139-1141&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44dfdb012b20f9fbb0283760c35ff971d6e6793a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_sub.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1139-1141&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff8f6aad90aeb6c1fc53d675de5933117e17b69" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_sub.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3065-3067&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7b88f3e76abdb3a76267292bccaddc91aafa00" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_sub.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3065-3067&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757642af0e669e50ee0c350749cd6477ddd631c2" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_sub.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3065-3067&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f21f92403a73a2795bd1f33a841958c80975ef9" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_sub.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3065-3067&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009fdbfdabc13105f5fa6141ca037f04fea076e6" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_sub.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3065-3067&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113e600d1c843d9c713ea3e2a60e489f07c92931" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_sub.v&quot;&gt;#[must_use = &quot;this returns the result of the operation, without modifying the original&quot;]
pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#3065-3067&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0eb2db10d457ca9abf94ae9a1229fe4a31cc362" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_sub.v&quot;&gt;pub fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mod.rs.html#1491-1495&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95feab80e002087f2083076a49f9ab714a2c04ea" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;wrapping_sub.v-1&quot;&gt;pub fn &lt;a href=&quot;#method.wrapping_sub-1&quot;&gt;wrapping_sub&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mod.rs.html#2158-2162&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833f00cd49634c6e309e5ec82bd025341cba9298" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;fn &lt;a href=&quot;../../../io/trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../../../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../../../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../../../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#581-583&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31fbcf1e969a3b40f2f86694c6a39afcc68fe0ad" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;fn &lt;a href=&quot;../../hash/trait.hasher#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, msg: &lt;a href=&quot;../../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../../primitive.slice&quot;&gt;]&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#2510-2512&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5f152fe17b2ede299e84695daf899ca0bc31a3" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;fn &lt;a href=&quot;../hash/trait.hasher#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, bytes: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#462-464&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d950651a9340d8d84752ec7be208e231ca41f20a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;fn &lt;a href=&quot;../io/trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#631-633&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276d6bcf1b68afb9afb160d2cceb0a2e6b2df801" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;fn &lt;a href=&quot;../io/trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#313-316&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12714657b062cadeca83e455c93e5d4d6ea059a4" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;fn &lt;a href=&quot;../io/trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/tcp.rs.html#583&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b3748e45cafb387eac00ec891e6ef2b2bf38f6" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;fn &lt;a href=&quot;../io/trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#236-238&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189fd5aabca806d7e2c7a0978811ab946f00aa6a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;fn &lt;a href=&quot;hash/trait.hasher#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, bytes: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#354-356&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28583a0adca3c3c89ae217fa35a4fced1127a0f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;fn &lt;a href=&quot;io/trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, data: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#274-280&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171c2fe5ac4c128d784b2dea778185f5485576d1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;fn &lt;a href=&quot;trait.hasher#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, msg: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/sip.rs.html#244-246&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b094bf093934b236b749d1b94a160ef544319037" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;fn &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#597-609&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01712bc5cff53cce923b7d76055d6cd1e4923032" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;fn &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#938-972&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a326651203089818e45115a3f52ba8f1c0a8abcd" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;fn &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#337-339&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee04b96ce91af0f948f060f361e6fa979f6859ca" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;fn &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#520-522&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c460c059f0edb1ed4320d7bf7de61a3e1fec608" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;fn &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#538-540&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9632099423acdde2c5c28fa73f3b93536e7e7d4f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;fn &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#679-681&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7b7431d2c919864956e80ae6c93976cf9ef485" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;fn &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#697-699&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5324b7f21761bb9a6b32300fee9187f75881af" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;fn &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/util.rs.html#206&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837201d61139eb55d57a36ebe324836e620ab269" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;pub fn &lt;a href=&quot;#method.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, val: T) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/mem/maybe_uninit.rs.html#304-309&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1885b9a9c99194b0c474e88f7a8232dd5b230fde" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;pub fn &lt;a href=&quot;#method.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, write: &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;) -&amp;gt; &amp;amp;mut &lt;a href=&quot;struct.openoptions&quot;&gt;OpenOptions&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#732-734&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da1ee33ef7314b5001796e189551334873fa05f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;pub fn &lt;a href=&quot;#method.write&quot;&gt;write&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.lockresult&quot;&gt;LockResult&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rwlockwriteguard&quot;&gt;RwLockWriteGuard&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/rwlock.rs.html#265-270&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2714c965a0b258d1b4a7858bdddcabec59e9e9a9" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v&quot;&gt;pub unsafe fn &lt;a href=&quot;#method.write&quot;&gt;write&lt;/a&gt;(self, val: T)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mod.rs.html#2295-2299&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5287984ef29a2da6406ff57763b386f1add6aa03" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-1&quot;&gt;fn &lt;a href=&quot;#method.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#631-633&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f02c82c361b6687037c9e1355463b107e650c0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-1&quot;&gt;fn &lt;a href=&quot;#method.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, msg: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#2510-2512&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f79cb0d81fccafa3d96cf5d13087ae17c1166e3" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-1&quot;&gt;fn &lt;a href=&quot;../../../io/trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../../../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../../../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../../../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#596-598&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8198825d724d21886aa94119699cc23f528157aa" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-1&quot;&gt;fn &lt;a href=&quot;../io/trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#664-666&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e87def79deba5a4df12b06f2d5ccb7f0db666d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-1&quot;&gt;fn &lt;a href=&quot;../io/trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#124&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f694b6c0bbc91b6300c4f923c3b3ac7cd1c80664" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-1&quot;&gt;fn &lt;a href=&quot;../io/trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/tcp.rs.html#606&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a1f811d089d55dc9816481c47673a37afb6769" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-1&quot;&gt;fn &lt;a href=&quot;io/trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#45&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c3375a780274ea8bd3cbda9c8550d3e361c9191" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-1&quot;&gt;fn &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#352-354&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2602c842136f37c9a948a70679df087eea86e0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-10&quot;&gt;fn &lt;a href=&quot;#method.write-9&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#313-316&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81631c891ff3e9925f93b2548384117e0319466f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-11&quot;&gt;fn &lt;a href=&quot;#method.write-10&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#664-666&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffff09d4be1279de7b94420c21e8315df514d075" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-12&quot;&gt;fn &lt;a href=&quot;#method.write-11&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/tcp.rs.html#606&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbe799f7ce145f11dc50308a31587a4ab2365cf" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-13&quot;&gt;fn &lt;a href=&quot;#method.write-12&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, data: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#274-280&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f492142ec0df19aed1a1cde55102646231afd3b4" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-14&quot;&gt;fn &lt;a href=&quot;#method.write-13&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#352-354&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9866c3b245f2e1feb5e739aa820e0ec64ef54064" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-15&quot;&gt;fn &lt;a href=&quot;#method.write-14&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#337-339&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a5a5e122c53ecc7721928f1dfc3562a10afbce" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-16&quot;&gt;fn &lt;a href=&quot;#method.write-15&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#697-699&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa7227ad0fc0b7bf8c1e15afc61c4256387e147" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-17&quot;&gt;fn &lt;a href=&quot;#method.write-16&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#538-540&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b1361a7761b08b0c3f33b1d5faed5489c220ee" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-18&quot;&gt;fn &lt;a href=&quot;#method.write-17&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#45&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e6acbe20a5706b84f43e92c017703984cfa35d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-19&quot;&gt;fn &lt;a href=&quot;#method.write-18&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#596-598&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ef1d4a1209a22ef397695f72003ff37fe32881" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-2&quot;&gt;fn &lt;a href=&quot;#method.write-1&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#381-383&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f77f26556fcf0c1f9601f015d4ee9292fbba09e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-2&quot;&gt;fn &lt;a href=&quot;#method.write-1&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, msg: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/sip.rs.html#244-246&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ea8b447fc8d68fa8a0ef60badfa8a02161b628" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-2&quot;&gt;fn &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#366-368&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8982ba9d44c4ef6674b154f2ea7c0db1f1467b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-20&quot;&gt;fn &lt;a href=&quot;#method.write-19&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#124&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800d380ef4be9a4292632e49a7c8c946047f553b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-21&quot;&gt;fn &lt;a href=&quot;#method.write-20&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#597-609&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ac85d9fb280a8120c85d3258c6939b68843eb8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-22&quot;&gt;fn &lt;a href=&quot;#method.write-21&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#938-972&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d052122a324ffa09350974570250df3e90c5832" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-3&quot;&gt;fn &lt;a href=&quot;#method.write-2&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#366-368&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e1bebe31135ae4426ca170ae5c4e1e27bcd361" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-3&quot;&gt;fn &lt;a href=&quot;#method.write-2&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, bytes: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#354-356&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e17eac8370acf43283f94ede6d842e5b7287e1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-3&quot;&gt;fn &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#381-383&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948fa0e4c6881a6333734805936848e49306e643" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-4&quot;&gt;fn &lt;a href=&quot;#method.write-3&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/util.rs.html#206&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9efb52716fdbcb320beb2c97b02f24fccc3c29a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-4&quot;&gt;fn &lt;a href=&quot;#method.write-3&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, bytes: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#462-464&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c47e940cb5640a26606edaaab67e9d06a5a4d9" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-5&quot;&gt;fn &lt;a href=&quot;#method.write-4&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#679-681&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c76fa6e9dc43244f5086871d6e1a2b8df9301f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-6&quot;&gt;fn &lt;a href=&quot;#method.write-5&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#520-522&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0fed59e0f91980570c393ae4f15b7fbeba9872" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-7&quot;&gt;fn &lt;a href=&quot;#method.write-6&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/tcp.rs.html#583&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2098208c897619f8b05cbf05ebdb8d715ee6f36d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-8&quot;&gt;fn &lt;a href=&quot;#method.write-7&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#581-583&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f549000e99e384137531fed46c3c35dc462f43e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write.v-9&quot;&gt;fn &lt;a href=&quot;#method.write-8&quot;&gt;write&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#236-238&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f4db866ea46f0cbd2c61c0044899aaa1970d7c2" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all.v&quot;&gt;fn &lt;a href=&quot;../../../io/trait.write#method.write_all&quot;&gt;write_all&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../../../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../../../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../../../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1215-1226&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5634ad871ae87b947c0eb973676da7b0e522a14d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all.v&quot;&gt;fn &lt;a href=&quot;../io/trait.write#method.write_all&quot;&gt;write_all&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#135-137&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e828671518fdd076a690a9369e52a854907ccd5a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all.v&quot;&gt;fn &lt;a href=&quot;../io/trait.write#method.write_all&quot;&gt;write_all&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#329-332&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e60326ca5dabc79ec8fab97edc9debb33891b7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all.v&quot;&gt;fn &lt;a href=&quot;../io/trait.write#method.write_all&quot;&gt;write_all&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1215-1226&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387b2afe3bfb89151cdfad626e00942f89f43aec" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all.v&quot;&gt;fn &lt;a href=&quot;io/trait.write#method.write_all&quot;&gt;write_all&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#56-58&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348375e4169eb51539b134a678ab5c18823c6314" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all.v&quot;&gt;fn &lt;a href=&quot;io/trait.write#method.write_all&quot;&gt;write_all&lt;/a&gt;(&amp;amp;mut self, data: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#296-302&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156bd24108353b17790f4d9b5e685ebfbd321d29" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all.v&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_all&quot;&gt;write_all&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1215-1226&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ce8f614a65755f7769bcb0e9d800354b5a5566" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all.v&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_all&quot;&gt;write_all&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#529-531&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed5cd320a32a96263351cb7f79ae2f4053239671" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all.v&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_all&quot;&gt;write_all&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#688-690&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32fa2286e4968c82d4548e51c5da09ba1de6eb4d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all.v-1&quot;&gt;fn &lt;a href=&quot;#method.write_all-1&quot;&gt;write_all&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#688-690&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc070f16ef1d90bfe4b8b5b201efec74c91b2e9" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all.v-1&quot;&gt;fn &lt;a href=&quot;../../../io/trait.write#method.write_all&quot;&gt;write_all&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../../../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../../../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../../../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1215-1226&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e816cd66a587e18c2609899c14a4f08d0828a2" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all.v-1&quot;&gt;fn &lt;a href=&quot;../io/trait.write#method.write_all&quot;&gt;write_all&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1215-1226&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3a425725d8fad52c377a76ac046d8c36330b77" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all.v-1&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_all&quot;&gt;write_all&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1215-1226&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e629aa2997b43ae8f722bb16e9cf659f4b972734" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all.v-2&quot;&gt;fn &lt;a href=&quot;#method.write_all-2&quot;&gt;write_all&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#529-531&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2d13c17e0b88d1c92ab90b0c06887f1c87edbe" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all.v-2&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_all&quot;&gt;write_all&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1215-1226&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e76d5f386b9522cf0a2ed745dd5768c2750b17" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all.v-3&quot;&gt;fn &lt;a href=&quot;#method.write_all-3&quot;&gt;write_all&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#329-332&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373e6c0cef3801dccd07c533987dd60d3ae8bfa3" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all.v-3&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_all&quot;&gt;write_all&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1215-1226&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6971d8b3a7fcfb0a575f65091b13cf6353caa5d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all.v-4&quot;&gt;fn &lt;a href=&quot;#method.write_all-4&quot;&gt;write_all&lt;/a&gt;(&amp;amp;mut self, data: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#296-302&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e27ff06f9f73fe997807222816987cd55af2b6" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all.v-5&quot;&gt;fn &lt;a href=&quot;#method.write_all-5&quot;&gt;write_all&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#56-58&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b3b046e3308e56c225af21a965d3721241d1c2" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all.v-6&quot;&gt;fn &lt;a href=&quot;#method.write_all-6&quot;&gt;write_all&lt;/a&gt;(&amp;amp;mut self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#135-137&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a90a0552580dae52572d94b69ce733e37dc5e5a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all_at.v&quot;&gt;fn &lt;a href=&quot;#method.write_all_at&quot;&gt;write_all_at&lt;/a&gt;(&amp;amp;self, buf: &lt;a href=&quot;../../../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../../../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../../../primitive.slice&quot;&gt;]&lt;/a&gt;, offset: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;1.33.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1677317fbcb112769ba000ba9fa0a0170461bb3d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_all_at.v&quot;&gt;fn &lt;a href=&quot;../os/unix/fs/trait.fileext#method.write_all_at&quot;&gt;write_all_at&lt;/a&gt;(&amp;amp;self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;, offset: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/fs.rs.html#195-209&quot;&gt;[src]&lt;/a&gt;1.33.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9672f5dd44d1e50c38cc549074537675bcb132" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_at.v&quot;&gt;fn &lt;a href=&quot;../os/unix/fs/trait.fileext#tymethod.write_at&quot;&gt;write_at&lt;/a&gt;(&amp;amp;self, buf: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;, offset: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/fs.rs.html#217-219&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758d9528ecbf2eaaf78cae92ae1b209b5b73d4d0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_at.v-1&quot;&gt;fn &lt;a href=&quot;#method.write_at&quot;&gt;write_at&lt;/a&gt;(&amp;amp;self, buf: &lt;a href=&quot;../../../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../../../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../../../primitive.slice&quot;&gt;]&lt;/a&gt;, offset: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/fs.rs.html#217-219&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd00d1dc08ff45c1b0843ec823dc1f70ad8e366" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_bytes.v&quot;&gt;pub unsafe fn &lt;a href=&quot;#method.write_bytes&quot;&gt;write_bytes&lt;/a&gt;(self, val: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mod.rs.html#2309-2313&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d69dce4309a983c288ec56b0c423c397c1f3f51" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_char.v&quot;&gt;fn &lt;a href=&quot;#method.write_char&quot;&gt;write_char&lt;/a&gt;(&amp;amp;mut self, c: &lt;a href=&quot;../primitive.char&quot;&gt;char&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;1.1.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b647d2ac02eacb6088dd5ccd0ba80c52c53a2a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_char.v&quot;&gt;fn &lt;a href=&quot;../fmt/trait.write#method.write_char&quot;&gt;write_char&lt;/a&gt;(&amp;amp;mut self, c: &lt;a href=&quot;../primitive.char&quot;&gt;char&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../fmt/struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2325-2328&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d672d2afff202b827d5e2476d8c7910eaa6dcb23" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_char.v&quot;&gt;fn &lt;a href=&quot;fmt/trait.write#method.write_char&quot;&gt;write_char&lt;/a&gt;(&amp;amp;mut self, c: &lt;a href=&quot;primitive.char&quot;&gt;char&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;fmt/struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#205-207&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0a4d08206084e1af694174124d4d3bf893b004" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_char.v&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_char&quot;&gt;write_char&lt;/a&gt;(&amp;amp;mut self, c: &lt;a href=&quot;../primitive.char&quot;&gt;char&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#1891-1893&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59bbe9879c12ad56abb48b9f1e25cfa6fd419582" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_char.v-1&quot;&gt;fn &lt;a href=&quot;#method.write_char-1&quot;&gt;write_char&lt;/a&gt;(&amp;amp;mut self, c: &lt;a href=&quot;../primitive.char&quot;&gt;char&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2325-2328&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407aa0bf613aac1664a3dbdab22f17e8315fec3b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_char.v-2&quot;&gt;fn &lt;a href=&quot;#method.write_char-2&quot;&gt;write_char&lt;/a&gt;(&amp;amp;mut self, c: &lt;a href=&quot;../primitive.char&quot;&gt;char&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#1891-1893&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a56d7583a47df8d25ec9fbb18752650817c42d5d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_char.v-3&quot;&gt;fn &lt;a href=&quot;#method.write_char-3&quot;&gt;write_char&lt;/a&gt;(&amp;amp;mut self, c: &lt;a href=&quot;../primitive.char&quot;&gt;char&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#205-207&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5e9a2c7c6c5928eff2bfbe4a92498726a9b41d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v&quot;&gt;fn &lt;a href=&quot;../../../io/trait.write#method.write_fmt&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, fmt: &lt;a href=&quot;../../../fmt/struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1267-1299&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d696e08a7619c50ffc34c9c19f99033f81c022" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v&quot;&gt;fn &lt;a href=&quot;../fmt/trait.write#method.write_fmt&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, args: &lt;a href=&quot;../fmt/struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../fmt/struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#194-196&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ceff75d6e93ba1ceb46cc8d389ff86380a1ef13" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v&quot;&gt;fn &lt;a href=&quot;../io/trait.write#method.write_fmt&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, fmt: &lt;a href=&quot;../fmt/struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#140-142&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50118d6ae1703ad63e40e7786b6529c6d95cef32" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v&quot;&gt;fn &lt;a href=&quot;../io/trait.write#method.write_fmt&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, fmt: &lt;a href=&quot;../fmt/struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1267-1299&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf0ba8c1bb4528b4a281e25807258762cabd8ae" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v&quot;&gt;fn &lt;a href=&quot;fmt/trait.write#method.write_fmt&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, args: &lt;a href=&quot;fmt/struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;fmt/struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#209-211&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d44e6846962fd88e35c0ad7b793f8651c01b491" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v&quot;&gt;fn &lt;a href=&quot;io/trait.write#method.write_fmt&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, fmt: &lt;a href=&quot;fmt/struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1267-1299&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e1ac938105a9f81972c0417e0ce5213087168e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, args: &lt;a href=&quot;../fmt/struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#532-534&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c25c36bb78fee98b6cc20ecff0a0d969fb2cf48" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, args: &lt;a href=&quot;../fmt/struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#691-693&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db75ed1705615f85c5bf1a0362017b152f8ab842" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, fmt: &lt;a href=&quot;../fmt/struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1267-1299&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87e6f5303be2cf07a4acd7612e8b5c31eb7f34b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v&quot;&gt;pub fn &lt;a href=&quot;#method.write_fmt&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, fmt: &lt;a href=&quot;struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#1456-1458&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e468fe8b9d5f2c9d4c1d4ef4a3f9858654b89388" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v-1&quot;&gt;fn &lt;a href=&quot;#method.write_fmt-1&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, args: &lt;a href=&quot;../fmt/struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#691-693&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef09f423d0381570ac0cd503c43e466ca51ae8a3" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v-1&quot;&gt;fn &lt;a href=&quot;#method.write_fmt-1&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, args: &lt;a href=&quot;struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#1895-1897&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7fe7c2dfefcca638b2b2ab543d9fe8ed83e90ee" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v-1&quot;&gt;fn &lt;a href=&quot;../../../io/trait.write#method.write_fmt&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, fmt: &lt;a href=&quot;../../../fmt/struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1267-1299&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1432e567a7615551850fd2c90db2302380f05de7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v-1&quot;&gt;fn &lt;a href=&quot;../io/trait.write#method.write_fmt&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, fmt: &lt;a href=&quot;../fmt/struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1267-1299&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c81a516d1002672d030ab4c45b2540d2baa9859" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v-1&quot;&gt;fn &lt;a href=&quot;io/trait.write#method.write_fmt&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, fmt: &lt;a href=&quot;fmt/struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#61-63&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c999e551b4c5b374692a4255fae2485ed320b01e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v-1&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, args: &lt;a href=&quot;struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#1895-1897&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e705659d0773f5841e5b2cae2dd7ab2c4b15bb5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v-1&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, fmt: &lt;a href=&quot;../fmt/struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1267-1299&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411b625c575876f6cf6c8e32289d95e8ae5f25f1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v-2&quot;&gt;fn &lt;a href=&quot;#method.write_fmt-2&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, args: &lt;a href=&quot;../fmt/struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#532-534&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce33daaf73b0ad9d4a846a4ec4df3e5a3effac9" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v-2&quot;&gt;fn &lt;a href=&quot;#method.write_fmt-2&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, args: &lt;a href=&quot;struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#209-211&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa9bed57c9c806f69f292fe23bdea1bc3e967eb" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v-2&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, fmt: &lt;a href=&quot;../fmt/struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1267-1299&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4280e1732f685f2ab06c87e84df63ec94c17ea" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v-3&quot;&gt;fn &lt;a href=&quot;#method.write_fmt-3&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, fmt: &lt;a href=&quot;../fmt/struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#61-63&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02fb9caa3c72a9ef4980f86a6847f8548ead00f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v-3&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, fmt: &lt;a href=&quot;../fmt/struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1267-1299&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb7032b0393d49c84f1dbfd7651ddddc0411386" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_fmt.v-4&quot;&gt;fn &lt;a href=&quot;#method.write_fmt-4&quot;&gt;write_fmt&lt;/a&gt;(&amp;amp;mut self, fmt: &lt;a href=&quot;../fmt/struct.arguments&quot;&gt;Arguments&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#140-142&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf17bc168d35ba2298bcb0f86ffc44c12f6583eb" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i128.v&quot;&gt;fn &lt;a href=&quot;#method.write_i128&quot;&gt;write_i128&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1094c82488b5105d4d19117001086be2b0096a5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i128.v&quot;&gt;fn &lt;a href=&quot;../../hash/trait.hasher#method.write_i128&quot;&gt;write_i128&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../../primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#338-340&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c16432c9fb60126b575629721c91c73aa66b85" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i128.v&quot;&gt;fn &lt;a href=&quot;../hash/trait.hasher#method.write_i128&quot;&gt;write_i128&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#495-497&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9246d1d6bae274262e39bb665300bc5c7819c4" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i128.v&quot;&gt;fn &lt;a href=&quot;hash/trait.hasher#method.write_i128&quot;&gt;write_i128&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#387-389&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dbe7aaf9c81aa5617aeba1f90d0ed642133a45c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i128.v&quot;&gt;fn &lt;a href=&quot;trait.hasher#method.write_i128&quot;&gt;write_i128&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#338-340&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba14d575de134ba78452ac278b9e536d9f08b1b0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i128.v-1&quot;&gt;fn &lt;a href=&quot;#method.write_i128-1&quot;&gt;write_i128&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#387-389&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae796a00c6317f7ec3423cc3f3e39519f515978" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i128.v-2&quot;&gt;fn &lt;a href=&quot;#method.write_i128-2&quot;&gt;write_i128&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#495-497&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea1c822fe515b0eb1c860c8ba6be05d030767613" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i16.v&quot;&gt;fn &lt;a href=&quot;#method.write_i16&quot;&gt;write_i16&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c347cb0d67ff1cddeb2288bd769eb77636b711" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i16.v&quot;&gt;fn &lt;a href=&quot;../../hash/trait.hasher#method.write_i16&quot;&gt;write_i16&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../../primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#320-322&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7377f88d1f3a340839680e4fb0c3185f27dd19b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i16.v&quot;&gt;fn &lt;a href=&quot;../hash/trait.hasher#method.write_i16&quot;&gt;write_i16&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#486-488&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e248d9aee82086e0086b8c475e801aaabdf2f98" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i16.v&quot;&gt;fn &lt;a href=&quot;hash/trait.hasher#method.write_i16&quot;&gt;write_i16&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#378-380&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4e3c65f378e4ec3c2019dd10ee30f931b1ca0b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i16.v&quot;&gt;fn &lt;a href=&quot;trait.hasher#method.write_i16&quot;&gt;write_i16&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#320-322&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b72180d891e6d1c84d866d5ceed04c64784a05" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i16.v-1&quot;&gt;fn &lt;a href=&quot;#method.write_i16-1&quot;&gt;write_i16&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#378-380&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046b273e0b2cb9a80627436002d6486e9a949a65" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i16.v-2&quot;&gt;fn &lt;a href=&quot;#method.write_i16-2&quot;&gt;write_i16&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#486-488&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd0ed2993f200a1f8dd34f5f6df9e0c87cf657f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i32.v&quot;&gt;fn &lt;a href=&quot;#method.write_i32&quot;&gt;write_i32&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe5e8084cd84d309e8d5c363f5230908644f298" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i32.v&quot;&gt;fn &lt;a href=&quot;../../hash/trait.hasher#method.write_i32&quot;&gt;write_i32&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../../primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#326-328&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9bc8531a397343a0eabd0896d11528f5100aaed" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i32.v&quot;&gt;fn &lt;a href=&quot;../hash/trait.hasher#method.write_i32&quot;&gt;write_i32&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#489-491&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8baf1658ef11f4c17a4d81be9c230469c96b794a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i32.v&quot;&gt;fn &lt;a href=&quot;hash/trait.hasher#method.write_i32&quot;&gt;write_i32&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#381-383&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dcb9fa230e08e5644a464807e10d7c06324c6e9" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i32.v&quot;&gt;fn &lt;a href=&quot;trait.hasher#method.write_i32&quot;&gt;write_i32&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#326-328&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df931a8e51385d54a955194c217f745746b4dc4a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i32.v-1&quot;&gt;fn &lt;a href=&quot;#method.write_i32-1&quot;&gt;write_i32&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#381-383&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790451b9fa4d9604effe548b67d63245ee8e8d6f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i32.v-2&quot;&gt;fn &lt;a href=&quot;#method.write_i32-2&quot;&gt;write_i32&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#489-491&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960883c68b0257d13987c8d4d719cd45676278db" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i64.v&quot;&gt;fn &lt;a href=&quot;#method.write_i64&quot;&gt;write_i64&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da98928449ac231f787671c5ee6c7cdc7967d529" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i64.v&quot;&gt;fn &lt;a href=&quot;../../hash/trait.hasher#method.write_i64&quot;&gt;write_i64&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#332-334&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fed0fba806eb98398c84732d9b851883fe3f5cf" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i64.v&quot;&gt;fn &lt;a href=&quot;../hash/trait.hasher#method.write_i64&quot;&gt;write_i64&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#492-494&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c523715f80939b0a0dcfd2e43565d791e822e179" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i64.v&quot;&gt;fn &lt;a href=&quot;hash/trait.hasher#method.write_i64&quot;&gt;write_i64&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#384-386&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c539c806e36068a1cc97f2f8e31237da9e15de4b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i64.v&quot;&gt;fn &lt;a href=&quot;trait.hasher#method.write_i64&quot;&gt;write_i64&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#332-334&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab40d8fc6d414e50ab91748a47d8d3cd4dee0bb7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i64.v-1&quot;&gt;fn &lt;a href=&quot;#method.write_i64-1&quot;&gt;write_i64&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#384-386&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e7b76486cde9cfe66b136215c3f8e5ff8e4e256" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i64.v-2&quot;&gt;fn &lt;a href=&quot;#method.write_i64-2&quot;&gt;write_i64&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#492-494&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab230217572d4b807e22cce54d541abc9d28cfe4" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i8.v&quot;&gt;fn &lt;a href=&quot;#method.write_i8&quot;&gt;write_i8&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ed706743ad0525d2ed59b2a9b88a2d4283d829" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i8.v&quot;&gt;fn &lt;a href=&quot;../../hash/trait.hasher#method.write_i8&quot;&gt;write_i8&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../../primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#314-316&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b087e4bbb88ebb0c64cd76e831911e679f9078" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i8.v&quot;&gt;fn &lt;a href=&quot;../hash/trait.hasher#method.write_i8&quot;&gt;write_i8&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#483-485&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e9878477de42fcfdab5e09b47a21e72db16d84" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i8.v&quot;&gt;fn &lt;a href=&quot;hash/trait.hasher#method.write_i8&quot;&gt;write_i8&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#375-377&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a9bf917e88551000eb4170a9637b0fd5828b45" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i8.v&quot;&gt;fn &lt;a href=&quot;trait.hasher#method.write_i8&quot;&gt;write_i8&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#314-316&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9465cc2bfb784c03f400fc6035a58da9ee8237a5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i8.v-1&quot;&gt;fn &lt;a href=&quot;#method.write_i8-1&quot;&gt;write_i8&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#375-377&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a66f40caf1721ea8fc57e2c4ea49f6aa6529791" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_i8.v-2&quot;&gt;fn &lt;a href=&quot;#method.write_i8-2&quot;&gt;write_i8&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#483-485&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbf8bbf8875eb07d51a68c4142e191138f40da7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_isize.v&quot;&gt;fn &lt;a href=&quot;#method.write_isize&quot;&gt;write_isize&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7918fd733b81a9a69d03bea8efb90bec40805224" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_isize.v&quot;&gt;fn &lt;a href=&quot;../../hash/trait.hasher#method.write_isize&quot;&gt;write_isize&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../../primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#344-346&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="158a34ef674345bff21f650ee4559add1f849f5e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_isize.v&quot;&gt;fn &lt;a href=&quot;../hash/trait.hasher#method.write_isize&quot;&gt;write_isize&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#498-500&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63fc1d62d2326edd2ae47d31aaf5dc2bcc758de3" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_isize.v&quot;&gt;fn &lt;a href=&quot;hash/trait.hasher#method.write_isize&quot;&gt;write_isize&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#390-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbeb3179c9859a1279925e93aaff0d7e975aa752" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_isize.v&quot;&gt;fn &lt;a href=&quot;trait.hasher#method.write_isize&quot;&gt;write_isize&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#344-346&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1281dc6c262c5ef39b335d319e1c122e930bca0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_isize.v-1&quot;&gt;fn &lt;a href=&quot;#method.write_isize-1&quot;&gt;write_isize&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#390-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9687d4c15e3b5bf2387f00eae91d38e3fc4caa5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_isize.v-2&quot;&gt;fn &lt;a href=&quot;#method.write_isize-2&quot;&gt;write_isize&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#498-500&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0fd6326619db7fe4ca1eefb35bec741e26d9a59" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_str.v&quot;&gt;fn &lt;a href=&quot;../fmt/trait.write#tymethod.write_str&quot;&gt;write_str&lt;/a&gt;(&amp;amp;mut self, s: &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../fmt/struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2319-2322&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bbd71b2487c723d6cfb7ef5989bbb288076d11a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_str.v&quot;&gt;fn &lt;a href=&quot;fmt/trait.write#tymethod.write_str&quot;&gt;write_str&lt;/a&gt;(&amp;amp;mut self, s: &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;fmt/struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#201-203&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522f97198e75c762534761d83cf43eb223bd56fd" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_str.v&quot;&gt;pub fn &lt;a href=&quot;#method.write_str&quot;&gt;write_str&lt;/a&gt;(&amp;amp;mut self, data: &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#1433-1435&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736cb585367235772b01caa4c2a2cb7febecb898" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_str.v-1&quot;&gt;fn &lt;a href=&quot;#method.write_str&quot;&gt;write_str&lt;/a&gt;(&amp;amp;mut self, s: &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2319-2322&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa303d03cb216a033e5abc713386adaf40718c8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_str.v-1&quot;&gt;fn &lt;a href=&quot;trait.write#tymethod.write_str&quot;&gt;write_str&lt;/a&gt;(&amp;amp;mut self, s: &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#1887-1889&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3217439c921d97ca769968b13afcdd005b4e9883" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_str.v-2&quot;&gt;fn &lt;a href=&quot;#method.write_str-1&quot;&gt;write_str&lt;/a&gt;(&amp;amp;mut self, s: &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#1887-1889&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e555382770b6077e18609366b02b58056f237d8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_str.v-3&quot;&gt;fn &lt;a href=&quot;#method.write_str-2&quot;&gt;write_str&lt;/a&gt;(&amp;amp;mut self, s: &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#201-203&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2cc145f73147552f62fa49114198e9fc5b574d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_timeout.v&quot;&gt;pub fn &lt;a href=&quot;#method.write_timeout&quot;&gt;write_timeout&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../../../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../time/struct.duration&quot;&gt;Duration&lt;/a&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#1403-1405&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252107184808625ea134d6e4ffc6375cc6cb21a7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_timeout.v&quot;&gt;pub fn &lt;a href=&quot;#method.write_timeout&quot;&gt;write_timeout&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../../../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../time/struct.duration&quot;&gt;Duration&lt;/a&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#485-487&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb2442dac780d23dcb24c22d4f40431a3daef56a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_timeout.v&quot;&gt;pub fn &lt;a href=&quot;#method.write_timeout&quot;&gt;write_timeout&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/tcp.rs.html#391-393&quot;&gt;[src]&lt;/a&gt;1.4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc72e23f361caf6796484f6f12d2a25f6b84e40" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_timeout.v&quot;&gt;pub fn &lt;a href=&quot;#method.write_timeout&quot;&gt;write_timeout&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/udp.rs.html#379-381&quot;&gt;[src]&lt;/a&gt;1.4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22eca02c22747fe6af0db1d82adc86996f65ba7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u128.v&quot;&gt;fn &lt;a href=&quot;#method.write_u128&quot;&gt;write_u128&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726f8e14f696f82a7326e2d0b1d337f6b0dc8bda" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u128.v&quot;&gt;fn &lt;a href=&quot;../../hash/trait.hasher#method.write_u128&quot;&gt;write_u128&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../../primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#301-303&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e093e96e943b3a4aef042c77c872514da3acdd" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u128.v&quot;&gt;fn &lt;a href=&quot;../hash/trait.hasher#method.write_u128&quot;&gt;write_u128&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#477-479&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362b04314aea2653c46ab1ac460d65062b0f5f33" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u128.v&quot;&gt;fn &lt;a href=&quot;hash/trait.hasher#method.write_u128&quot;&gt;write_u128&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#369-371&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce255d3652951a274a764a28fc1f714fd0e9c3b7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u128.v&quot;&gt;fn &lt;a href=&quot;trait.hasher#method.write_u128&quot;&gt;write_u128&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#301-303&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57329f7dc31f5592a8365400c62b567e6a527d71" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u128.v-1&quot;&gt;fn &lt;a href=&quot;#method.write_u128-1&quot;&gt;write_u128&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#369-371&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69046118a93376d423cd8ec208818713c706b43" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u128.v-2&quot;&gt;fn &lt;a href=&quot;#method.write_u128-2&quot;&gt;write_u128&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#477-479&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3511309f107c2c7a7e0629558bb6531622494234" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u16.v&quot;&gt;fn &lt;a href=&quot;#method.write_u16&quot;&gt;write_u16&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76afe45c25dbe8376d96cd3c7c216080e1a1c935" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u16.v&quot;&gt;fn &lt;a href=&quot;../../hash/trait.hasher#method.write_u16&quot;&gt;write_u16&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../../primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#283-285&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60534bb42cc66dca84972dee879fe7f62896441f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u16.v&quot;&gt;fn &lt;a href=&quot;../hash/trait.hasher#method.write_u16&quot;&gt;write_u16&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#468-470&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5282dabf5394da79431620c426207d6e0c79d888" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u16.v&quot;&gt;fn &lt;a href=&quot;hash/trait.hasher#method.write_u16&quot;&gt;write_u16&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#360-362&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0abf70eccfcc7e766ae40408fa2e59818ed84971" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u16.v&quot;&gt;fn &lt;a href=&quot;trait.hasher#method.write_u16&quot;&gt;write_u16&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#283-285&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9dc184faa759978525ea2e0e09edb0182e2430" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u16.v-1&quot;&gt;fn &lt;a href=&quot;#method.write_u16-1&quot;&gt;write_u16&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#360-362&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e3dad238349f4a9bced752b922c671c1f3ff1b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u16.v-2&quot;&gt;fn &lt;a href=&quot;#method.write_u16-2&quot;&gt;write_u16&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#468-470&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f976d126c535635c7925b294073cde7a202c56b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u32.v&quot;&gt;fn &lt;a href=&quot;#method.write_u32&quot;&gt;write_u32&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8176a8c1b7cf63dd9f4b5a4bd54d2925d121da36" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u32.v&quot;&gt;fn &lt;a href=&quot;../../hash/trait.hasher#method.write_u32&quot;&gt;write_u32&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../../primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#289-291&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8178ab130b6fa30da606600d8db571ae27ad909" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u32.v&quot;&gt;fn &lt;a href=&quot;../hash/trait.hasher#method.write_u32&quot;&gt;write_u32&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#471-473&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed864bacf7e471188eae7d691b272e7929d2cca" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u32.v&quot;&gt;fn &lt;a href=&quot;hash/trait.hasher#method.write_u32&quot;&gt;write_u32&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#363-365&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b40d7e6186e658515c9d33a2a8a78a6bd60ff6" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u32.v&quot;&gt;fn &lt;a href=&quot;trait.hasher#method.write_u32&quot;&gt;write_u32&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#289-291&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1083d773429eb95dbe369a96b2a6be0c2e5d47" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u32.v-1&quot;&gt;fn &lt;a href=&quot;#method.write_u32-1&quot;&gt;write_u32&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#363-365&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679ce59289f6e114d5b08eac4f04d0b8c2c6656e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u32.v-2&quot;&gt;fn &lt;a href=&quot;#method.write_u32-2&quot;&gt;write_u32&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#471-473&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750f3eecc308bd223b7e1c28743962bdfe4ce445" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u64.v&quot;&gt;fn &lt;a href=&quot;#method.write_u64&quot;&gt;write_u64&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91905717caca2647c799a1ab7058c1447ebde988" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u64.v&quot;&gt;fn &lt;a href=&quot;../../hash/trait.hasher#method.write_u64&quot;&gt;write_u64&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#295-297&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db76818074e24e9cab95a2398fd0d7cbb6fb47f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u64.v&quot;&gt;fn &lt;a href=&quot;../hash/trait.hasher#method.write_u64&quot;&gt;write_u64&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#474-476&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3452361f7260995616003827915645a26f6ac2ac" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u64.v&quot;&gt;fn &lt;a href=&quot;hash/trait.hasher#method.write_u64&quot;&gt;write_u64&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#366-368&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa03a47c0fc2e8f1349c07be5c675932d38bf8b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u64.v&quot;&gt;fn &lt;a href=&quot;trait.hasher#method.write_u64&quot;&gt;write_u64&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#295-297&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0481d432740457d603eb8ce968c5f5bfaa727fb" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u64.v-1&quot;&gt;fn &lt;a href=&quot;#method.write_u64-1&quot;&gt;write_u64&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#366-368&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873f5db18fe5f4569f363714cc97bbd960002868" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u64.v-2&quot;&gt;fn &lt;a href=&quot;#method.write_u64-2&quot;&gt;write_u64&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#474-476&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec97c4e33a049230850c2005ac2f6caef04b76e0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u8.v&quot;&gt;fn &lt;a href=&quot;#method.write_u8&quot;&gt;write_u8&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a59f74d537e187409f5210f5f0511f5a2279b9" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u8.v&quot;&gt;fn &lt;a href=&quot;../../hash/trait.hasher#method.write_u8&quot;&gt;write_u8&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#277-279&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de8b17bb1652c34e76c74d276062a87f3f27305" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u8.v&quot;&gt;fn &lt;a href=&quot;../hash/trait.hasher#method.write_u8&quot;&gt;write_u8&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#465-467&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d21434e09cc3c8fb5302256a9bb07d4085e11251" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u8.v&quot;&gt;fn &lt;a href=&quot;hash/trait.hasher#method.write_u8&quot;&gt;write_u8&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#357-359&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83ea0096a33fb6885fc1258c02cf535400bb387" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u8.v&quot;&gt;fn &lt;a href=&quot;trait.hasher#method.write_u8&quot;&gt;write_u8&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#277-279&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e7d5a163aa3f5025680f1d58a1ab808637d517" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u8.v-1&quot;&gt;fn &lt;a href=&quot;#method.write_u8-1&quot;&gt;write_u8&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#357-359&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d87edae61c5dcaf6bffc7c04420b8680759aaf" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_u8.v-2&quot;&gt;fn &lt;a href=&quot;#method.write_u8-2&quot;&gt;write_u8&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#465-467&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed9704783d645ea939a6b285b672c2663701306" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_unaligned.v&quot;&gt;pub unsafe fn &lt;a href=&quot;#method.write_unaligned&quot;&gt;write_unaligned&lt;/a&gt;(self, val: T)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mod.rs.html#2343-2347&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ca269973c55805663b57f099e78be20484ccae" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_usize.v&quot;&gt;fn &lt;a href=&quot;#method.write_usize&quot;&gt;write_usize&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39db58fb84b1e387a67972cf06c8595b0beb57bc" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_usize.v&quot;&gt;fn &lt;a href=&quot;../../hash/trait.hasher#method.write_usize&quot;&gt;write_usize&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#307-309&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2ed847af2bca8876b65ae7bfd8b73bbbb95ae8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_usize.v&quot;&gt;fn &lt;a href=&quot;../hash/trait.hasher#method.write_usize&quot;&gt;write_usize&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#480-482&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb24456b2bd54c1af6f198676ac91cd48a62f8f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_usize.v&quot;&gt;fn &lt;a href=&quot;hash/trait.hasher#method.write_usize&quot;&gt;write_usize&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#372-374&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28feffae7fbb8104098db248f6d6b6179589590" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_usize.v&quot;&gt;fn &lt;a href=&quot;trait.hasher#method.write_usize&quot;&gt;write_usize&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#307-309&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7aec671c445aa84866e709529be6423ef242200" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_usize.v-1&quot;&gt;fn &lt;a href=&quot;#method.write_usize-1&quot;&gt;write_usize&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/mod.rs.html#372-374&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08007f77e0f2ea9d091427f564a9e250d9dd7667" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_usize.v-2&quot;&gt;fn &lt;a href=&quot;#method.write_usize-2&quot;&gt;write_usize&lt;/a&gt;(&amp;amp;mut self, i: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#480-482&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248c7d9aa7cc75755638d0d873fadc9e236f7875" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v&quot;&gt;fn &lt;a href=&quot;#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;1.36.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9006ba57dc24fb87c98b7b08bb7be1f89e1c5c86" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v&quot;&gt;fn &lt;a href=&quot;../../../io/trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../../../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../../../io/struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../../../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#585-587&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807180e3c8a438062fc8180e93f44eaabcff8538" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v&quot;&gt;fn &lt;a href=&quot;../io/trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../io/struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#635-637&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d9ac00fb327a43954bac115cadc4a23f2d22a4" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v&quot;&gt;fn &lt;a href=&quot;../io/trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../io/struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#127-129&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ecae849e92038a2dc3b66abaf053ffd023093e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v&quot;&gt;fn &lt;a href=&quot;../io/trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../io/struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#319-326&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3543a24c00b202b21b1ad3753af4d7387292ecd5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v&quot;&gt;fn &lt;a href=&quot;../io/trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../io/struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/tcp.rs.html#585-587&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46f4050545aa84b08da18103735393dd9651671" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v&quot;&gt;fn &lt;a href=&quot;../io/trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../io/struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#240-242&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="378f52b8297d5d2f16982ef32769579b10ddff90" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v&quot;&gt;fn &lt;a href=&quot;io/trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;io/struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#283-293&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fba7446ebda756ea076eae43442016268fcf9b5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v&quot;&gt;fn &lt;a href=&quot;io/trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;io/struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#48-50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8518a45148c541aab53f85862e47bbf8528163b4" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#611-624&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4ef78eee09d48e33dc52458571cd4439108a03" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#342-344&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c925957221797a6118825308d45bd29184b57d86" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1154-1156&quot;&gt;[src]&lt;/a&gt;1.36.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efcb0dda76a878040c0960a2cd94e72b4058fa83" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#523-525&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09913bb54e5e6a1770728ebb5b4344e774e0c3f5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#541-543&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbff03fbd5b9ee79386804e92a3a6fc2f1b3f28" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#682-684&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a504bd9bfd80837dc6b1a9aab68ad94164b2a031" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#700-702&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59304201af5b1870741ae6b3eb11041302406422" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/util.rs.html#209-212&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41fd484b9995c69087041a4af55a5177710d5ba8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-1&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-1&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#635-637&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ede14863e3445605a94ef2784d85acb34a9820c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-1&quot;&gt;fn &lt;a href=&quot;../../../io/trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../../../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../../../io/struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../../../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../../../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#600-602&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90310cf6c7da36cbc73cba44babc9582cce00f46" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-1&quot;&gt;fn &lt;a href=&quot;../io/trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../io/struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#668-670&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b520bd740ed21c43dc1ec35bdec45666c61ab6" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-1&quot;&gt;fn &lt;a href=&quot;../io/trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../io/struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/tcp.rs.html#608-610&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d29a61933dc4ee6c29813188521074205c660b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-1&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#356-358&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4924a1d5019ae59da21b6e39b101ba5860cb92" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-10&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-10&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#319-326&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d98ed36ffd094c40e6591185cacad4c7f81385" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-11&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-11&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#668-670&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4909bffe4baa0ff1a1ea829c9f06e036aec46c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-12&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-12&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/tcp.rs.html#608-610&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b82daa5a1523487b38a64457e28fd19f7163b0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-13&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-13&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#283-293&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd031e322bc2287d6236e9e9bf00a45b91b76958" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-14&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-14&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#356-358&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c410a8e35c8b0c0b8c196fbbba5ccedcc4c7bf" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-15&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-15&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#342-344&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa9206f059903ac2836671f65a4ea7bd7be4bb1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-16&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-16&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#700-702&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6f5514e9dd9379afdf12c28da83e7d839efee0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-17&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-17&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#541-543&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248310a03a71d20538e25b091e07600bc1780c68" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-18&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-18&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#48-50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d547397a9081215e2c33d78949628d11ebff7164" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-19&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-19&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#600-602&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4957301eaa20e8ae14cdf420b4afd9e5166b81ae" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-2&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-2&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#386-388&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3e318eb62ef9c35a5653a3557592601d2ccea6d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-2&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#370-372&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba2c6f7277dc434d18390191df367c338d110a2" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-20&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-20&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#127-129&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3538caf0200f8eb5137a8bed4399dd2788096c35" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-21&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-21&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#611-624&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="871bd2e90f344dbc4640bd301e11b9d6e7120d5f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-3&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-3&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#370-372&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167a5a98997389358e598f35a2e2b1b0d973f831" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-3&quot;&gt;fn &lt;a href=&quot;trait.write#method.write_vectored&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#386-388&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40569609a8e616bd8a0565acadb4aa5cc1f2e54" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-4&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-4&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/util.rs.html#209-212&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd887ac027d8ee465ec40f71cbc6b302d5fa75e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-5&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-5&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#682-684&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75bf76896599efb17739a4dde89f28c92ce5ab16" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-6&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-6&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#523-525&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c69dfedd8f4c99ef3cf792c42623555fceaf8af" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-7&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-7&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/tcp.rs.html#585-587&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2123f35bc64e4a0fab7cb0eba471d6ffaa78fb7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-8&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-8&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#585-587&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff2cf3df5015a35585754dedf2064d5774931da9" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_vectored.v-9&quot;&gt;fn &lt;a href=&quot;#method.write_vectored-9&quot;&gt;write_vectored&lt;/a&gt;(&amp;amp;mut self, bufs: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;struct.ioslice&quot;&gt;IoSlice&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#240-242&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6db12c3ef4c8e5ea685cce78367b64f78af99a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;write_volatile.v&quot;&gt;pub unsafe fn &lt;a href=&quot;#method.write_volatile&quot;&gt;write_volatile&lt;/a&gt;(self, val: T)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mod.rs.html#2327-2331&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209c6f64fc46de6ec0cac3e2f325468f14a48e75" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;xor.v&quot;&gt;pub fn &lt;a href=&quot;#method.xor&quot;&gt;xor&lt;/a&gt;(self, optb: &lt;a href=&quot;enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/option.rs.html#746-752&quot;&gt;[src]&lt;/a&gt;1.37.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef17aa80ebb25105929806ed7dee6a33e20a2c5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;zeroed.v&quot;&gt;pub fn &lt;a href=&quot;#method.zeroed&quot;&gt;zeroed&lt;/a&gt;() -&amp;gt; &lt;a href=&quot;union.maybeuninit&quot;&gt;MaybeUninit&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/mem/maybe_uninit.rs.html#290-296&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea1ce6a2b6fa1fa5ba0f2437d33db8c11bd15ea" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;zeroing.v&quot;&gt;pub fn &lt;a href=&quot;#method.zeroing&quot;&gt;zeroing&lt;/a&gt;() -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1013-1015&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e586f05dcae5b2a0b46de96f832754860aac4963" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;zip.v&quot;&gt;fn &lt;a href=&quot;../../../iter/trait.iterator#method.zip&quot;&gt;zip&lt;/a&gt;&amp;lt;U&amp;gt;(self, other: U) -&amp;gt; &lt;a href=&quot;../../../iter/struct.zip&quot;&gt;Zip&lt;/a&gt;&amp;lt;Self, &amp;lt;U as &lt;a href=&quot;../../../iter/trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;../../../iter/trait.intoiterator#associatedtype.IntoIter&quot;&gt;IntoIter&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;U: &lt;a href=&quot;../../../iter/trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#501-505&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9d197ebece69e5d89b1207df75601f027ad38c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;zip.v&quot;&gt;fn &lt;a href=&quot;../../../iter/trait.iterator#method.zip&quot;&gt;zip&lt;/a&gt;&amp;lt;U&amp;gt;(self, other: U) -&amp;gt; &lt;a href=&quot;../../../iter/struct.zip&quot;&gt;Zip&lt;/a&gt;&amp;lt;Self, &amp;lt;U as &lt;a href=&quot;../../../iter/trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;../../../iter/trait.intoiterator#associatedtype.IntoIter&quot;&gt;IntoIter&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;U: &lt;a href=&quot;../../../iter/trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#501-505&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098eee38b0b2a0c65f75c9e1388ee351a925fdd8" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;zip.v&quot;&gt;fn &lt;a href=&quot;../../iter/trait.iterator#method.zip&quot;&gt;zip&lt;/a&gt;&amp;lt;U&amp;gt;(self, other: U) -&amp;gt; &lt;a href=&quot;../../iter/struct.zip&quot;&gt;Zip&lt;/a&gt;&amp;lt;Self, &amp;lt;U as &lt;a href=&quot;../../iter/trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;../../iter/trait.intoiterator#associatedtype.IntoIter&quot;&gt;IntoIter&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;U: &lt;a href=&quot;../../iter/trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#501-505&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92aaf26b7de46fda58fb87c2077bc715d7507c06" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;zip.v&quot;&gt;fn &lt;a href=&quot;../../iter/trait.iterator#method.zip&quot;&gt;zip&lt;/a&gt;&amp;lt;U&amp;gt;(self, other: U) -&amp;gt; &lt;a href=&quot;../../iter/struct.zip&quot;&gt;Zip&lt;/a&gt;&amp;lt;Self, &amp;lt;U as &lt;a href=&quot;../../iter/trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;../../iter/trait.intoiterator#associatedtype.IntoIter&quot;&gt;IntoIter&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;U: &lt;a href=&quot;../../iter/trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#501-505&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee3ce6a9293140d3e5ab254188b7e6a274745d1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;zip.v&quot;&gt;fn &lt;a href=&quot;../iter/trait.iterator#method.zip&quot;&gt;zip&lt;/a&gt;&amp;lt;U&amp;gt;(self, other: U) -&amp;gt; &lt;a href=&quot;../iter/struct.zip&quot;&gt;Zip&lt;/a&gt;&amp;lt;Self, &amp;lt;U as &lt;a href=&quot;../iter/trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;../iter/trait.intoiterator#associatedtype.IntoIter&quot;&gt;IntoIter&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;U: &lt;a href=&quot;../iter/trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#501-505&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef004892cd9abbc7a86d18d4c131cc007f03711" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;zip.v&quot;&gt;fn &lt;a href=&quot;../iter/trait.iterator#method.zip&quot;&gt;zip&lt;/a&gt;&amp;lt;U&amp;gt;(self, other: U) -&amp;gt; &lt;a href=&quot;../iter/struct.zip&quot;&gt;Zip&lt;/a&gt;&amp;lt;Self, &amp;lt;U as &lt;a href=&quot;../iter/trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;../iter/trait.intoiterator#associatedtype.IntoIter&quot;&gt;IntoIter&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;U: &lt;a href=&quot;../iter/trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#501-505&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327f8bd9ff5d97913567263f08b24e504aa961fe" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;zip.v&quot;&gt;fn &lt;a href=&quot;iter/trait.iterator#method.zip&quot;&gt;zip&lt;/a&gt;&amp;lt;U&amp;gt;(self, other: U) -&amp;gt; &lt;a href=&quot;iter/struct.zip&quot;&gt;Zip&lt;/a&gt;&amp;lt;Self, &amp;lt;U as &lt;a href=&quot;iter/trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;iter/trait.intoiterator#associatedtype.IntoIter&quot;&gt;IntoIter&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;U: &lt;a href=&quot;iter/trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#501-505&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf8d348e528dbc0a33b48c625c050d3811c392d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;zip.v&quot;&gt;fn &lt;a href=&quot;trait.iterator#method.zip&quot;&gt;zip&lt;/a&gt;&amp;lt;U&amp;gt;(self, other: U) -&amp;gt; &lt;a href=&quot;struct.zip&quot;&gt;Zip&lt;/a&gt;&amp;lt;Self, &amp;lt;U as &lt;a href=&quot;trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.intoiterator#associatedtype.IntoIter&quot;&gt;IntoIter&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;U: &lt;a href=&quot;trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#501-505&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e03da9bfd5cfe7c214fd06c1b9e3b17bd3affa" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;zip.v&quot;&gt;fn &lt;a href=&quot;trait.iterator#method.zip&quot;&gt;zip&lt;/a&gt;&amp;lt;U&amp;gt;(self, other: U) -&amp;gt; &lt;a href=&quot;struct.zip&quot;&gt;Zip&lt;/a&gt;&amp;lt;Self, &amp;lt;U as &lt;a href=&quot;trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.intoiterator#associatedtype.IntoIter&quot;&gt;IntoIter&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;U: &lt;a href=&quot;trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#501-505&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acce1db1c9ccb18338896ca6adddc1248e7c8c4e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;zip.v-1&quot;&gt;fn &lt;a href=&quot;trait.iterator#method.zip&quot;&gt;zip&lt;/a&gt;&amp;lt;U&amp;gt;(self, other: U) -&amp;gt; &lt;a href=&quot;struct.zip&quot;&gt;Zip&lt;/a&gt;&amp;lt;Self, &amp;lt;U as &lt;a href=&quot;trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.intoiterator#associatedtype.IntoIter&quot;&gt;IntoIter&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;U: &lt;a href=&quot;trait.intoiterator&quot;&gt;IntoIterator&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#501-505&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a061f022d86569d88e11ab054b62c27b7e5262c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!&lt;/code&gt; and generics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eaaa957584793a309fdb3dd9cc5320fbf348a14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!&lt;/code&gt; and traits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4cfde0cbd82c531209d9b06a1c4df4b05b138bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!&lt;/code&gt; represents the type of computations which never resolve to any value at all. For example, the &lt;a href=&quot;process/fn.exit&quot;&gt;&lt;code&gt;exit&lt;/code&gt;&lt;/a&gt; function &lt;code&gt;fn exit(code: i32) -&amp;gt; !&lt;/code&gt; exits the process without ever returning, and so returns &lt;code&gt;!&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe2491d3e1d0f1ff487d75726cb70c83152fb6f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!&lt;/code&gt; to any &lt;code&gt;T&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6017a6f1dec58f11656142a647ecb24c3014c268" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;&quot;&lt;/code&gt; (an empty string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a289998a5dc3c63060079d64d269c0ccfb58b04a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;&lt;/code&gt; (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63cc428c95c74fee90b544afd2f0f6fac10aea2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;&lt;/code&gt; ( ~ &lt;em&gt;IsolatedCR&lt;/em&gt; )&lt;sup&gt;* (non-greedy)&lt;/sup&gt;&lt;code&gt;&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055134df1c7f39aabbbeaa8d0c38a3e0bf7ad2c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;&lt;/code&gt; ASCII&lt;sup&gt;* (non-greedy)&lt;/sup&gt;&lt;code&gt;&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8c975a7ad3bb662d719d4c23bebed7eabd7ff9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#&lt;/code&gt; - This flag is indicates that the &quot;alternate&quot; form of printing should be used. The alternate forms are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a67ad6a8ada7f5343c2d86710541625af03e12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#&lt;/code&gt; sets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1e3799cec12cc2634250de6113eb7a1482f7a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#&lt;/code&gt;&lt;code&gt;!&lt;/code&gt;&lt;code&gt;[&lt;/code&gt;&lt;em&gt;Attr&lt;/em&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;#&lt;/code&gt;&lt;code&gt;!&lt;/code&gt;&lt;code&gt;[&lt;/code&gt;&lt;em&gt;Attr&lt;/em&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e62498755f59bd3c44eb1c3af46fb6e0a45622da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#&lt;/code&gt;&lt;code&gt;[&lt;/code&gt;&lt;em&gt;Attr&lt;/em&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;#&lt;/code&gt;&lt;code&gt;[&lt;/code&gt;&lt;em&gt;Attr&lt;/em&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4762cfcad8ae2bc407905cdbfc616bea381ed84b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#?&lt;/code&gt; - pretty-print the &lt;a href=&quot;trait.debug&quot;&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/a&gt; formatting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a23311343be6bf470228d40dcea8c14afdc55b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#X&lt;/code&gt; - precedes the argument with a &lt;code&gt;0x&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d862d0b2d0175071d9e12a0697ae5c37b666139" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[inline(always)]&lt;/code&gt; suggests that an inline expansion should always be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787e3b39ad4b9a0fd8c5ce56ba261ff5d9f11de6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[inline(never)]&lt;/code&gt; suggests that an inline expansion should never be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b477bedd710d931ef4952220c783c09295f3ba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[inline]&lt;/code&gt; hints the compiler whether or not to attempt to inline a method or function. By default, the compiler does a pretty good job of figuring this out itself, but if you feel the need for annotations, &lt;code&gt;#[inline(always)]&lt;/code&gt; and &lt;code&gt;#[inline(never)]&lt;/code&gt; can override or force the compiler's decision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d83931403ba24654d385ec7f42c58600413069" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[inline]&lt;/code&gt; suggests performing an inline expansion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a0fb174403cf2d490415efd095fd770ddf4efc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[repr(packed)]&lt;/code&gt; reduces padding to make the struct size smaller. The representation of enums isn't strictly defined in Rust, and this attribute won't work on enums.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe3d6cef98af858d0d5d918f9b632e38d05312e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[repr(simd)]&lt;/code&gt; will give a struct consisting of a homogeneous series of machine types (i.e., &lt;code&gt;u8&lt;/code&gt;, &lt;code&gt;i32&lt;/code&gt;, etc) a representation that permits vectorization via SIMD. This doesn't make much sense for enums since they don't consist of a single list of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e22c77dfb5bdc39cf85f2511d005d182b68ac69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[unwind(aborts)]&lt;/code&gt; -- specifies that if a non-Rust ABI function should abort the process if it attempts to unwind. This is the safer and preferred option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ef8afa07009120ba1ff814dbb9b76006904869" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[unwind(allowed)]&lt;/code&gt; -- specifies that a non-Rust ABI function should be allowed to unwind. This can easily result in Undefined Behavior (UB), so be careful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2141675567e2ff5af40224f9104bc000706071a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#b&lt;/code&gt; - precedes the argument with a &lt;code&gt;0b&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27213319ed7730957b4ff0bab03dd5ca3bd1367" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#o&lt;/code&gt; - precedes the argument with a &lt;code&gt;0o&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edebe4d36cf7b19364e0464326bee8846ebdde2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#x&lt;/code&gt; - precedes the argument with a &lt;code&gt;0x&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556dbb315900c0a8252cc4637442128cc2c845f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$(i:ident),\*&lt;/code&gt; is &lt;em&gt;also&lt;/em&gt; an NT; it is a complex NT that matches a comma-separated repetition of identifiers. The &lt;code&gt;,&lt;/code&gt; is the separator token for the complex NT; it occurs in between each pair of elements (if any) of the matched fragment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6854746382a364c36a12ffd25cb936fbfb709b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$crate&lt;/code&gt; is only used within &lt;a href=&quot;macros-by-example&quot;&gt;macro transcribers&lt;/a&gt;, and can only be used as the first segment, without a preceding &lt;code&gt;::&lt;/code&gt;. &lt;code&gt;$crate&lt;/code&gt; will expand to a path to access items from the top level of the crate where the macro is defined, regardless of which crate the macro is invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679d8433733458586e46b500fc8086472e219797" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54d7e8aae1d7d250920a5c4fa2d1906438e69c1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; (only dereferencing of references, not raw pointers)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100b85a2a9d4dd25222be6f6e9373487495df2f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="003a3eb1987d2ceeb5c27dc2dec9740cbefe4089" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;Lifetime&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeNoBounds&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;Lifetime&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeNoBounds&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8cfad7584c9bbb0b669e0b14816e837f362b14f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;=&lt;/code&gt;&lt;code&gt;|=&lt;/code&gt;&lt;code&gt;^=&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;=&lt;/code&gt;&lt;code&gt;|=&lt;/code&gt;&lt;code&gt;^=&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3dabac979268ce43c29120df6a9a25cb04ca0786" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;CStr&lt;/code&gt; is to &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; is to &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;: the former in each pair are borrowed references; the latter are owned strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231a608bd66cb7f4fedf355a72aeb9dabc04ae6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;OsStr&lt;/code&gt; is to &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; is to &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;: the former in each pair are borrowed references; the latter are owned strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a979315d4e1967955d0501abf490f0085268c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;T&lt;/code&gt; or &lt;code&gt;&amp;amp;mut T&lt;/code&gt; to &lt;code&gt;&amp;amp;U&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; implements &lt;code&gt;Deref&amp;lt;Target = U&amp;gt;&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0161cd0539110f53c2febf48c1cca2447115c0df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;T&lt;/code&gt; to &lt;code&gt;*const T&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46dda6233dba0ecad7934ea0813e4914047cfeab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;T&lt;/code&gt;, &lt;code&gt;&amp;amp;mut T&lt;/code&gt;, &lt;code&gt;*const T&lt;/code&gt;, &lt;code&gt;*mut T&lt;/code&gt;, &lt;code&gt;[T; n]&lt;/code&gt; and &lt;code&gt;[T]&lt;/code&gt; implement the trait if &lt;code&gt;T&lt;/code&gt; does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50da4761f95f8b4904a2b4673cd94aa0fa7b26f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;[T]&lt;/code&gt; - &lt;em&gt;shared slice&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e24aa999f8934769ffd4c780b39a8e4fb6a9424" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;[T]&lt;/code&gt;, a 'shared slice', often just called a 'slice', it doesn't own the data it points to, it borrows it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837b4b1aa442e15d820d83dbd88f70dbe053cf46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;expr&lt;/code&gt;, &lt;code&gt;&amp;amp;mut expr&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b729c5a5ac065b8dd74eee17a83326f430f766" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; and &lt;code&gt;&amp;amp;T&lt;/code&gt; follow LLVM&amp;rsquo;s scoped &lt;a href=&quot;http://llvm.org/docs/LangRef.html#noalias&quot;&gt;noalias&lt;/a&gt; model, except if the &lt;code&gt;&amp;amp;T&lt;/code&gt; contains an &lt;a href=&quot;../std/cell/struct.unsafecell&quot;&gt;&lt;code&gt;UnsafeCell&amp;lt;U&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e74d9ebf04af4dc90c16effe573bf17b812351" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; references can be freely coerced into &lt;code&gt;&amp;amp;T&lt;/code&gt; references with the same referent type, and references with longer lifetimes can be freely coerced into references with shorter ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994822c40583180d62be96191de5478d1f130277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; references get all of the above except &lt;code&gt;Copy&lt;/code&gt; and &lt;code&gt;Clone&lt;/code&gt; (to prevent creating multiple simultaneous mutable borrows), plus the following, regardless of the type of its referent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58231ba0fe17b906446ee76384afc785ea3cf780" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; references get all of the above except &lt;code&gt;ToSocketAddrs&lt;/code&gt;, plus the following, if &lt;code&gt;T&lt;/code&gt; implements that trait:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3e4a0e475933a54d975d40cd0187e169300438" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; to &lt;code&gt;&amp;amp;T&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cafff14ac73559830fb93ee301a81f3f716d8d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; to &lt;code&gt;&amp;amp;mut U&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; implements &lt;code&gt;DerefMut&amp;lt;Target = U&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f58f2fca8c8b73d2398dfdb8b109feaba2f26e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; to &lt;code&gt;*mut T&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314c822c9bb0a94fd29dddc9cc81ed697c1733b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut [T]&lt;/code&gt; - &lt;em&gt;mutable slice&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="605363775d1f90fd43b62d85732f360a5bccbdfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut [T]&lt;/code&gt;, a 'mutable slice', mutably borrows the data it points to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c76a341db428f538063d9949d921df1bd350ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;type&lt;/code&gt;, &lt;code&gt;&amp;amp;mut type&lt;/code&gt;, &lt;code&gt;&amp;amp;'a type&lt;/code&gt;, &lt;code&gt;&amp;amp;'a mut type&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e46f816411016db64167d67808550c9a4e1de4a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&lt;/code&gt; - the argument is right-aligned in &lt;code&gt;width&lt;/code&gt; columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b9944b1a3b4ab996e45769e6a7d492f69bd586" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0f2df8356639a025d9c2c68f00d02b26c7d98800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt; - the argument is left-aligned in &lt;code&gt;width&lt;/code&gt; columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1521eb066642c72f0edfb9d98bc93d57ee54bbb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt; (&lt;code&gt;as&lt;/code&gt;&lt;em&gt;TypePath&lt;/em&gt;)? &lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c6a581d48ddd7b26ffd61864801566caa2ead1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2dbbaf6a02a43903e03096aff35adf3a1a3b43ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;em&gt;GenericParams&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;em&gt;GenericParams&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="028839fbf25c4f0df369882e065239cc563d52f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt; ( ~[&lt;code&gt;'&lt;/code&gt;&lt;code&gt;\&lt;/code&gt; \n \r \t] | QUOTE_ESCAPE | ASCII_ESCAPE | UNICODE_ESCAPE ) &lt;code&gt;'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45d46db2c9cb6be797290a1904f27933d568b9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt;&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER_OR_KEYWORD&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;'&lt;/code&gt;&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER_OR_KEYWORD&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="262b1239e297499c69379411bda505caaab17575" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt;&lt;a href=&quot;identifiers&quot;&gt;NON_KEYWORD_IDENTIFIER&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;'&lt;/code&gt;&lt;a href=&quot;identifiers&quot;&gt;NON_KEYWORD_IDENTIFIER&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf7a1d050349eb0a9405c6fd243d43af7d15ed3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'a + trait&lt;/code&gt;, &lt;code&gt;trait + trait&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3a2f028142c8a5e43a922d060f7bb6597aba89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'static&lt;/code&gt; is used for the static lifetime and cannot be used as a generic lifetime parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e921e8c236df635ceb7f81bd144058177296ca55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'static&lt;/code&gt; lifetime elision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ec56d05d6ab6d5da38345a1ca5bd84376907d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;( $($a:tt $b:tt)* ; )&lt;/code&gt; : legal, because FIRST(&lt;code&gt;$b:tt&lt;/code&gt;) = { &lt;code&gt;$b:tt&lt;/code&gt; } is &amp;sube; FOLLOW(&lt;code&gt;tt&lt;/code&gt;) = ANYTOKEN, as is FIRST(&lt;code&gt;;&lt;/code&gt;) = { &lt;code&gt;;&lt;/code&gt; }.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8684b12a0aaa57d30fa673b0fe225241654fd25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;( $($t:tt),* , $(t:tt),* )&lt;/code&gt; : legal, (though any attempt to actually use this macro will signal a local ambiguity error during expansion).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56547248e7530810d57671a54cda37e9b3352f80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;($($e:expr)*)&lt;/code&gt; : illegal, because expr NTs are not in FOLLOW(expr NT).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55585a8535a57d73d71c16e179bbeb81714a782" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;($($ty:ty)-+)&lt;/code&gt; : illegal, because separator &lt;code&gt;-&lt;/code&gt; is not in FOLLOW(&lt;code&gt;ty&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993f4f862973836c075125ff5c2f713d6d815015" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;($pa:pat $pb:pat $ty:ty ,)&lt;/code&gt; : illegal, because FIRST(&lt;code&gt;$pb:pat $ty:ty ,&lt;/code&gt;) = { &lt;code&gt;$pb:pat&lt;/code&gt; } ⊈ FOLLOW(&lt;code&gt;pat&lt;/code&gt;), and also FIRST(&lt;code&gt;$ty:ty ,&lt;/code&gt;) = { &lt;code&gt;$ty:ty&lt;/code&gt; } ⊈ FOLLOW(&lt;code&gt;pat&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e74763727a913538df9dabbce72da9e2cf6c0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;($ty:ty $(; not sep)* -)&lt;/code&gt; : illegal, because FIRST(&lt;code&gt;$(; not sep)* -&lt;/code&gt;) = { &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt; } is not in FOLLOW(&lt;code&gt;ty&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3b057ee5cfe6e8bfec5288c6d4e782ac470fb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;($ty:ty &amp;lt; foo ,)&lt;/code&gt; : illegal, because FIRST(&lt;code&gt;&amp;lt; foo ,&lt;/code&gt;) = { &lt;code&gt;&amp;lt;&lt;/code&gt; } ⊈ FOLLOW(&lt;code&gt;ty&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4ff89d2055a40fe14d24fa4126bffbd9cc45fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;($ty:ty , foo &amp;lt;)&lt;/code&gt; : legal, because FIRST(&lt;code&gt;, foo &amp;lt;&lt;/code&gt;) = { &lt;code&gt;,&lt;/code&gt; } is &amp;sube; FOLLOW(&lt;code&gt;ty&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0539b3c0db4be4abfee21cc9878f98aaa385d3d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&amp;amp;str)::Searcher&lt;/code&gt; is not a &lt;code&gt;DoubleEndedSearcher&lt;/code&gt; because the pattern &lt;code&gt;&quot;aa&quot;&lt;/code&gt; in the haystack &lt;code&gt;&quot;aaa&quot;&lt;/code&gt; matches as either &lt;code&gt;&quot;[aa]a&quot;&lt;/code&gt; or &lt;code&gt;&quot;a[aa]&quot;&lt;/code&gt;, depending from which side it is searched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3270960ea9ef61405038cc8ca9bc030cb6189760" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt; ( &lt;em&gt;NamedFunctionParameters&lt;/em&gt; | &lt;em&gt;NamedFunctionParametersWithVariadics&lt;/em&gt; )&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb4b1cb7f078b919498ddacb73676b692438d49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8051f59d7a315a8ad3b88e3d66ae9b30745551e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;TupleElements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;TupleElements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa0ec7fe01991e3f5f7275d59b43c4728e1862f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;&lt;code&gt;, &lt;/code&gt;&lt;a href=&quot;../primitive.u16&quot;&gt;&lt;code&gt;u16&lt;/code&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;: the string should be either a string representation of an &lt;a href=&quot;enum.ipaddr&quot;&gt;&lt;code&gt;IpAddr&lt;/code&gt;&lt;/a&gt; address as expected by &lt;a href=&quot;../str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt; implementation or a host name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f2ad445d33233a41450be81a768f5137382954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;associated-items#methods&quot;&gt;&lt;em&gt;SelfParam&lt;/em&gt;&lt;/a&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;TraitFunctionParam&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f752d7fa86210a2ae237207713c0a3cd74f1ff7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96d19ff5ae8cd742a0988f5c24e68538a6f9b2df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;structs&quot;&gt;&lt;em&gt;TupleFields&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;structs&quot;&gt;&lt;em&gt;TupleFields&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b521abe1164dc0ac980c183d64a2b10f3ffbcc3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="abb6050cd3752fc6923fbffc151a9ef3346eb750" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ddaf7e72fa6acac0009a90d87fb214f638b22a0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;FunctionParameters&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;FunctionParameters&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="57523ac3e3d7e480b19a1ea5c9bc5ecb877f8112" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;FunctionParametersMaybeNamedVariadic&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;&lt;em&gt;BareFunctionReturnType&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;FunctionParametersMaybeNamedVariadic&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;&lt;em&gt;BareFunctionReturnType&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d5871fd10034fb1e354bac32de3d2c61906ec0ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;MacroMatch&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;MacroMatch&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="74b55f5c151548403aaa3b478e3ecac044413984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;MacroRules&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;MacroRules&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2363c70dc5d2a2b18f346fb77b70abfe460a6d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;SelfParam&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;functions&quot;&gt;&lt;em&gt;FunctionParam&lt;/em&gt;&lt;/a&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70af26dcd6fad35f4b4fcae06243f12d1f21387b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TokenTree&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TokenTree&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0be71c00c0efbb926d5d2eb26e5c5a250aed194" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TraitFunctionParameters&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TraitFunctionParameters&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06cc40d2a528db267a6648db6a2b72ac9bb006a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TuplePatternItems&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TuplePatternItems&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="08ac5232fc6093780b1acf7241b4e7bab7156e18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TypePathFnInputs&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt; (&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15179412d8625594c23d62eb76f731a89d6072f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(start $foo:expr $($i:ident),\* end)&lt;/code&gt; is a matcher. The whole matcher is a delimited sequence (with open- and close-delimiters &lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt;), and &lt;code&gt;$foo&lt;/code&gt; and &lt;code&gt;$i&lt;/code&gt; are simple NT's with &lt;code&gt;expr&lt;/code&gt; and &lt;code&gt;ident&lt;/code&gt; as their respective fragment specifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8e0bcd3c877e04636e8e5d2cc120bc201c7ba0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; &amp;mdash; indicates any number of repetitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282e5f6c59b67793cae57d08e6da597177d4c4ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; ( &lt;code&gt;mut&lt;/code&gt; | &lt;code&gt;const&lt;/code&gt; ) &lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeNoBounds&lt;/em&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1193cded4594582953508928c736d3daf7d0988" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; All number literals allow &lt;code&gt;_&lt;/code&gt; as a visual separator: &lt;code&gt;1_234.0E+18f64&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a40702b8b24d39bac688bed4e569511e90dbde4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; | &lt;code&gt;+&lt;/code&gt; | &lt;code&gt;?&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee43d15d8efc0763bf888632f5de5af405f54b7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b556ae5ded966b100577546007e959b0f58fc09f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt;&lt;code&gt;/&lt;/code&gt;&lt;code&gt;%&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt;&lt;code&gt;/&lt;/code&gt;&lt;code&gt;%&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7e7b5489f017aedaf04aa71701ce9a7772610d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*T&lt;/code&gt; where &lt;code&gt;T: Sized&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8245cc67913c0555fa10740cfa5f0270bffc311b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*V&lt;/code&gt; where &lt;code&gt;V: Sized&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9081132c760081d69b04aa7ba3b2618d0f8a6dc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*V&lt;/code&gt; where &lt;code&gt;V: Sized&lt;/code&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601f7465e6a41711507a94ee440b07fdd00bb248" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*const type&lt;/code&gt;, &lt;code&gt;*mut type&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a728e640ea1abe3301c9e1227384335723dcab5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*mut T&lt;/code&gt; but non-zero and covariant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582c2739d4e8826d3d84328fd57ac1b0847a2665" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*mut T&lt;/code&gt; to &lt;code&gt;*const T&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67b647c0c8fa1af24503640eb7546e487545e7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt; &amp;mdash; indicates any number but at least one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ba6bcf257280d5b355dd73ac85086da5cb4e2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt; - This is intended for numeric types and indicates that the sign should always be printed. Positive signs are never printed by default, and the negative sign is only printed by default for the &lt;code&gt;Signed&lt;/code&gt; trait. This flag indicates that the correct sign (&lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt;) should always be printed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58721e317a663f3f70bd919555e501c8280c19c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0e3474e7e06d60a73bc2968ca4a191e87573a45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a120d3aa1b45dbb0a50cb7006f6f73b8ea480013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeNoBounds&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeNoBounds&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab5b67e8eb7b4ac2b96fd7bc3a598f810162f6d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=bin&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;bin&quot;]&lt;/code&gt; - A runnable executable will be produced. This requires that there is a &lt;code&gt;main&lt;/code&gt; function in the crate which will be run when the program begins executing. This will link in all Rust and native dependencies, producing a distributable binary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f63ac98efdf94d2bc7fddfafef0d70a6bff9afed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=cdylib&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;cdylib&quot;]&lt;/code&gt; - A dynamic system library will be produced. This is used when compiling a dynamic library to be loaded from another language. This output type will create &lt;code&gt;*.so&lt;/code&gt; files on Linux, &lt;code&gt;*.dylib&lt;/code&gt; files on macOS, and &lt;code&gt;*.dll&lt;/code&gt; files on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703b282fa50bb5a0c4679638926e4bc23a2522d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=dylib&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;dylib&quot;]&lt;/code&gt; - A dynamic Rust library will be produced. This is different from the &lt;code&gt;lib&lt;/code&gt; output type in that this forces dynamic library generation. The resulting dynamic library can be used as a dependency for other libraries and/or executables. This output type will create &lt;code&gt;*.so&lt;/code&gt; files on linux, &lt;code&gt;*.dylib&lt;/code&gt; files on osx, and &lt;code&gt;*.dll&lt;/code&gt; files on windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23ec523239fb33f66c9ffb1db77192fdf59eab3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=lib&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;lib&quot;]&lt;/code&gt; - A Rust library will be produced. This is an ambiguous concept as to what exactly is produced because a library can manifest itself in several forms. The purpose of this generic &lt;code&gt;lib&lt;/code&gt; option is to generate the &quot;compiler recommended&quot; style of library. The output library will always be usable by rustc, but the actual type of library may change from time-to-time. The remaining output types are all different flavors of libraries, and the &lt;code&gt;lib&lt;/code&gt; type can be seen as an alias for one of them (but the actual one is compiler-defined).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426b054cd0b79fc4683fcd9b9699aebe53e66145" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=proc-macro&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;proc-macro&quot;]&lt;/code&gt; - The output produced is not specified, but if a &lt;code&gt;-L&lt;/code&gt; path is provided to it then the compiler will recognize the output artifacts as a macro and it can be loaded for a program. Crates compiled with this crate type must only export &lt;a href=&quot;procedural-macros&quot;&gt;procedural macros&lt;/a&gt;. The compiler will automatically set the &lt;code&gt;proc_macro&lt;/code&gt;&lt;a href=&quot;conditional-compilation&quot;&gt;configuration option&lt;/a&gt;. The crates are always compiled with the same target that the compiler itself was built with. For example, if you are executing the compiler from Linux with an &lt;code&gt;x86_64&lt;/code&gt; CPU, the target will be &lt;code&gt;x86_64-unknown-linux-gnu&lt;/code&gt; even if the crate is a dependency of another crate being built for a different target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5965747c226601f33886cabe7850717326736605" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=rlib&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;rlib&quot;]&lt;/code&gt; - A &quot;Rust library&quot; file will be produced. This is used as an intermediate artifact and can be thought of as a &quot;static Rust library&quot;. These &lt;code&gt;rlib&lt;/code&gt; files, unlike &lt;code&gt;staticlib&lt;/code&gt; files, are interpreted by the compiler in future linkage. This essentially means that &lt;code&gt;rustc&lt;/code&gt; will look for metadata in &lt;code&gt;rlib&lt;/code&gt; files like it looks for metadata in dynamic libraries. This form of output is used to produce statically linked executables as well as &lt;code&gt;staticlib&lt;/code&gt; outputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c235658c9abcef8e535a11dc9e0638db29f373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=staticlib&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;staticlib&quot;]&lt;/code&gt; - A static system library will be produced. This is different from other library outputs in that the compiler will never attempt to link to &lt;code&gt;staticlib&lt;/code&gt; outputs. The purpose of this output type is to create a static library containing all of the local crate's code along with all upstream dependencies. The static library is actually a &lt;code&gt;*.a&lt;/code&gt; archive on linux and osx and a &lt;code&gt;*.lib&lt;/code&gt; file on windows. This format is recommended for use in situations such as linking Rust code into an existing non-Rust application because it will not have dynamic dependencies on other Rust code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dead096e4b70a9faed25da037024e64c045d649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1.0&lt;/code&gt; if the number is negative, &lt;code&gt;-0.0&lt;/code&gt; or &lt;code&gt;NEG_INFINITY&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589c9414c02ace58b0a0f039ffbffedfebf0e0dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1&lt;/code&gt; if the number is negative</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9bf1d94259a76276430b45a63099ca8d243d211" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt; - Currently not used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5cf011131be26d1bee8a68adfc2ae7040345794" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f3f860d0116a88fb25d1c00bf8378a9e15043c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.*&lt;/code&gt; means that this &lt;code&gt;{...}&lt;/code&gt; is associated with &lt;em&gt;two&lt;/em&gt; format inputs rather than one: the first input holds the &lt;code&gt;usize&lt;/code&gt; precision, and the second holds the value to print. Note that in this case, if one uses the format string &lt;code&gt;{&amp;lt;arg&amp;gt;:&amp;lt;spec&amp;gt;.*}&lt;/code&gt;, then the &lt;code&gt;&amp;lt;arg&amp;gt;&lt;/code&gt; part refers to the &lt;em&gt;value&lt;/em&gt; to print, and the &lt;code&gt;precision&lt;/code&gt; must come in the input preceding &lt;code&gt;&amp;lt;arg&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3faa709365d20a07db7d880a673ee21fa6785f94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;...u8&lt;/code&gt;, &lt;code&gt;...i32&lt;/code&gt;, &lt;code&gt;...f64&lt;/code&gt;, &lt;code&gt;...usize&lt;/code&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e77e8ba90e2a5ef7a27956fe1edebeabbefebda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..&lt;/code&gt;, &lt;code&gt;expr..&lt;/code&gt;, &lt;code&gt;..expr&lt;/code&gt;, &lt;code&gt;expr..expr&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a526f1646ea3a7b488fe557e8d31a2c74d39da0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;..&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6bba69e10bb49e73faa35a5bb3352b8749536585" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..&lt;/code&gt;&lt;code&gt;..=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;..&lt;/code&gt;&lt;code&gt;..=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="170b37b39510ef836b6026bc9cd0fd6c6386e377" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..&lt;/code&gt;end</source>
          <target state="translated">&lt;code&gt;..&lt;/code&gt;end</target>
        </trans-unit>
        <trans-unit id="2e9a03838ece4d3cb456c185d151acc103f5a77c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;..=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a107c2197842219d3ccfc167a7dca700bb702b0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..=&lt;/code&gt;end</source>
          <target state="translated">&lt;code&gt;..=&lt;/code&gt;end</target>
        </trans-unit>
        <trans-unit id="4ce4765390d4da7a503ab0d7bb81bf99eb4e058f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..=expr&lt;/code&gt;, &lt;code&gt;expr..=expr&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a3e949ab19958f3ab7174b05a29e935939b6f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/*!&lt;/code&gt; ( &lt;em&gt;BlockCommentOrDoc&lt;/em&gt; | ~[&lt;code&gt;*/&lt;/code&gt;&lt;em&gt;IsolatedCR&lt;/em&gt;] )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;*/&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b1da013479634a395d70e05b21a30764a0f30c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/**&lt;/code&gt; (~&lt;code&gt;*&lt;/code&gt; | &lt;em&gt;BlockCommentOrDoc&lt;/em&gt; ) (&lt;em&gt;BlockCommentOrDoc&lt;/em&gt; | ~[&lt;code&gt;*/&lt;/code&gt;&lt;em&gt;IsolatedCR&lt;/em&gt;])&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;*/&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8b7134d9abe13e7e7365e6720f73466482e63e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/*&lt;/code&gt; (~[&lt;code&gt;*&lt;/code&gt;&lt;code&gt;!&lt;/code&gt;] | &lt;code&gt;**&lt;/code&gt; | &lt;em&gt;BlockCommentOrDoc&lt;/em&gt;) (&lt;em&gt;BlockCommentOrDoc&lt;/em&gt; | ~&lt;code&gt;*/&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;*/&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7c9e73d2cbe4ae753289c389520b64986cb877" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;//!&lt;/code&gt; ~[&lt;code&gt;\n&lt;/code&gt;&lt;em&gt;IsolatedCR&lt;/em&gt;]&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629c93bbf9c0b68e100509408b61ca4750affa3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;///&lt;/code&gt; (~&lt;code&gt;/&lt;/code&gt; ~[&lt;code&gt;\n&lt;/code&gt;&lt;em&gt;IsolatedCR&lt;/em&gt;]&lt;sup&gt;*&lt;/sup&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9b5ddc27888c9abf50f321981ddf4160e4e689" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;//&lt;/code&gt; (~[&lt;code&gt;/&lt;/code&gt;&lt;code&gt;!&lt;/code&gt;] | &lt;code&gt;//&lt;/code&gt;) ~&lt;code&gt;\n&lt;/code&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568ea99a199a81fbe37d329517cd35012139953d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; - This is used to indicate for integer formats that the padding should both be done with a &lt;code&gt;0&lt;/code&gt; character as well as be sign-aware. A format like &lt;code&gt;{:08}&lt;/code&gt; would yield &lt;code&gt;00000001&lt;/code&gt; for the integer &lt;code&gt;1&lt;/code&gt;, while the same format would yield &lt;code&gt;-0000001&lt;/code&gt; for the integer &lt;code&gt;-1&lt;/code&gt;. Notice that the negative version has one fewer zero than the positive version. Note that padding zeroes are always placed after the sign (if any) and before the digits. When used together with the &lt;code&gt;#&lt;/code&gt; flag, a similar rule applies: padding zeroes are inserted after the prefix but before the digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d3b4f960fab8b951592016be741bd27c2b1554" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if the number is zero</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30f8b1bf339634e4790b245c5c679cc53cb30a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; | NON_ZERO_DEC_DIGIT DEC_DIGIT&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4789ff4626cf9f8a3e731720085aad5a8da29ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0b&lt;/code&gt; (BIN_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt; BIN_DIGIT (BIN_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="163f2d22ec0fea83f242b51ab292f17fe1833643" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o&lt;/code&gt; (OCT_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt; OCT_DIGIT (OCT_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9014b67d02c6a0687cd4bad98dbf84226bb385" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x&lt;/code&gt; (HEX_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt; HEX_DIGIT (HEX_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="128574ba868b01112ed81bf50b65a339b823b8d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1.0&lt;/code&gt; if the number is positive, &lt;code&gt;+0.0&lt;/code&gt; or &lt;code&gt;INFINITY&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b673697935bd789cb32c1981da35fcd7352e9e5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;192.0.0.10/32&lt;/code&gt; is used for NAT traversal (see &lt;a href=&quot;https://tools.ietf.org/html/rfc8155&quot;&gt;IETF RFC 8155&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32aaa1076a63e49b9731869dba6f42ce4d62f9ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;192.0.0.8/32&lt;/code&gt; is the &quot;IPv4 dummy address&quot; (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7600&quot;&gt;IETF RFC 7600&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2020782007c65be6a3004609a412eab934e74d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;192.0.0.9/32&lt;/code&gt; is the &quot;Port Control Protocol Anycast&quot; (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7723&quot;&gt;IETF RFC 7723&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91e1c7bc7ffdb5e7103fddafafdec5f547becff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if the number is positive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda9c317ff4ee7c07b54750659d19b2c5bdbb582" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;em&gt;PathExprSegment&lt;/em&gt; (&lt;code&gt;::&lt;/code&gt;&lt;em&gt;PathExprSegment&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b8dde90d161683cb64e57970ca01c85f50fade" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;em&gt;SimplePathSegment&lt;/em&gt; (&lt;code&gt;::&lt;/code&gt;&lt;em&gt;SimplePathSegment&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c8bc148d00e01e76a79b4049233c66448004ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;em&gt;TypePathSegment&lt;/em&gt; (&lt;code&gt;::&lt;/code&gt;&lt;em&gt;TypePathSegment&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d3346b7cb0480509b7b4a937dafaca05264da8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c8a1301840ae3c7bc54db174e5ca5a64c07aa0e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&lt;/code&gt;&lt;code&gt;+=&lt;/code&gt;&lt;code&gt;-=&lt;/code&gt;&lt;code&gt;*=&lt;/code&gt;&lt;code&gt;/=&lt;/code&gt;&lt;code&gt;%=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt;&lt;code&gt;+=&lt;/code&gt;&lt;code&gt;-=&lt;/code&gt;&lt;code&gt;*=&lt;/code&gt;&lt;code&gt;/=&lt;/code&gt;&lt;code&gt;%=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7f4d91e1161fccf09895736e7f69d1d145c93bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;==&lt;/code&gt;&lt;code&gt;!=&lt;/code&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt;&lt;code&gt;!=&lt;/code&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3317371770d66af9b594e8415446c62cf9e5d2d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; &amp;mdash; indicates an optional fragment with zero or one occurrences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b5542f0315a1671873fc7475e2d5ed5b7abb17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.debug&quot;&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a665e581da78a74589a8d3f4c9945ce4f5040d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; cannot be overloaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12095140abf1098f29175c19125eb34ed21aee60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c78908808d0313e75c7d9961adda4cf1bdbe680" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; is only used to declare that the &lt;a href=&quot;special-types-and-traits#sized&quot;&gt;&lt;code&gt;Sized&lt;/code&gt;&lt;/a&gt; trait may not be implemented for a type parameter or associated type. &lt;code&gt;?Sized&lt;/code&gt; may not be used as a bound for other types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9b173c211b337e137665d048d935506be3c498" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;trait-bounds#higher-ranked-trait-bounds&quot;&gt;&lt;em&gt;ForLifetimes&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;paths#paths-in-types&quot;&gt;&lt;em&gt;TypePath&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;trait-bounds#higher-ranked-trait-bounds&quot;&gt;&lt;em&gt;ForLifetimes&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;paths#paths-in-types&quot;&gt;&lt;em&gt;TypePath&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="204de2a077254b15e9b6591a38c031a2eb4d7a8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Add&lt;/code&gt;able points</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c1a8a8626c17cd761792798b715028e1b334fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AddrParseError&lt;/code&gt; may be thrown because the provided string does not parse as the given type, often because it includes information only handled by a different address type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474c77bcf98993f2d7df3861dff64b79cf23d925" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Any&lt;/code&gt; itself can be used to get a &lt;code&gt;TypeId&lt;/code&gt;, and has more features when used as a trait object. As &lt;code&gt;&amp;amp;Any&lt;/code&gt; (a borrowed trait object), it has the &lt;code&gt;is&lt;/code&gt; and &lt;code&gt;downcast_ref&lt;/code&gt; methods, to test if the contained value is of a given type, and to get a reference to the inner value as a type. As &lt;code&gt;&amp;amp;mut Any&lt;/code&gt;, there is also the &lt;code&gt;downcast_mut&lt;/code&gt; method, for getting a mutable reference to the inner value. &lt;code&gt;Box&amp;lt;Any&amp;gt;&lt;/code&gt; adds the &lt;code&gt;downcast&lt;/code&gt; method, which attempts to convert to a &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt; documentation for the full details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0347266b8ca23df94d1eea50c39e297394012091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; automatically dereferences to &lt;code&gt;T&lt;/code&gt; (via the &lt;a href=&quot;../ops/trait.deref&quot;&gt;&lt;code&gt;Deref&lt;/code&gt;&lt;/a&gt; trait), so you can call &lt;code&gt;T&lt;/code&gt;'s methods on a value of type &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt;. To avoid name clashes with &lt;code&gt;T&lt;/code&gt;'s methods, the methods of &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; itself are associated functions, called using function-like syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58e5a32606ccc9227d7e5cee3f5ba4531679824" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; will implement &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt; as long as the &lt;code&gt;T&lt;/code&gt; implements &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;. Why can't you put a non-thread-safe type &lt;code&gt;T&lt;/code&gt; in an &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; to make it thread-safe? This may be a bit counter-intuitive at first: after all, isn't the point of &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; thread safety? The key is this: &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; makes it thread safe to have multiple ownership of the same data, but it doesn't add thread safety to its data. Consider &lt;code&gt;Arc&amp;lt;&lt;/code&gt;&lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;. &lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; isn't &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;, and if &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; was always &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;Arc&amp;lt;&lt;/code&gt;&lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; would be as well. But then we'd have a problem: &lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; is not thread safe; it keeps track of the borrowing count using non-atomic operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4d76c39e3c91d21d508efeb04ca509a86768a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AsMut&lt;/code&gt; auto-dereferences if the inner type is a mutable reference (e.g.: &lt;code&gt;foo.as_mut()&lt;/code&gt; will work the same if &lt;code&gt;foo&lt;/code&gt; has type &lt;code&gt;&amp;amp;mut Foo&lt;/code&gt; or &lt;code&gt;&amp;amp;mut &amp;amp;mut Foo&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32e1af96a8f528edf4fe1a43d0d4239e586669e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AsRef&lt;/code&gt; auto-dereferences if the inner type is a reference or a mutable reference (e.g.: &lt;code&gt;foo.as_ref()&lt;/code&gt; will work the same if &lt;code&gt;foo&lt;/code&gt; has type &lt;code&gt;&amp;amp;mut Foo&lt;/code&gt; or &lt;code&gt;&amp;amp;&amp;amp;mut Foo&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71335601db38af9f595633f1fc7a0e382672c521" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AsRef&lt;/code&gt; has the same signature as &lt;a href=&quot;../borrow/trait.borrow&quot;&gt;&lt;code&gt;Borrow&lt;/code&gt;&lt;/a&gt;, but &lt;code&gt;Borrow&lt;/code&gt; is different in few aspects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a88b6811da8d1dc2aede6016feb769d59697b85d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BTreeMap&lt;/code&gt; also implements an &lt;a href=&quot;#method.entry&quot;&gt;&lt;code&gt;Entry API&lt;/code&gt;&lt;/a&gt;, which allows for more complex methods of getting, setting, updating and removing keys and their values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a702e2dc9eec81c3300f51b86ef48a55faebb29e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bar&amp;lt;T&amp;gt;: Unsize&amp;lt;Bar&amp;lt;U&amp;gt;&amp;gt;&lt;/code&gt;, if the last field of &lt;code&gt;Foo&lt;/code&gt; has type &lt;code&gt;Bar&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d850a262b1c205e08e5c184fd070770af4b4a1e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Borrow&lt;/code&gt; also requires that &lt;code&gt;Hash&lt;/code&gt;, &lt;code&gt;Eq&lt;/code&gt; and &lt;code&gt;Ord&lt;/code&gt; for borrowed value are equivalent to those of the owned value. For this reason, if you want to borrow only a single field of a struct you can implement &lt;code&gt;AsRef&lt;/code&gt;, but not &lt;code&gt;Borrow&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32758f679236e5bd47c4070dc34a78871f6826ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bound&lt;/code&gt;s are range endpoints:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823e83c4cafd4a53a8d81698b9684ab42c618434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; allows immutable or mutable borrows checked at compile time; &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; allows only immutable borrows checked at compile time; &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; allows immutable or mutable borrows checked at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1fad64290b5103584e9141501ddf617fcaa1a90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; for allocating values on the heap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b361da1c68fefbf2972f5ece3ba3bec6a2786de8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;, casually referred to as a 'box', provides the simplest form of heap allocation in Rust. Boxes provide ownership for this allocation, and drop their contents when they go out of scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f542bc4d35eabefd9e8e45fafc0c38b7e4f4b6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt;, a 'boxed slice'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7332fc1afe6dc4cd1b0346eac1443d4308c89637" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BufReader&lt;/code&gt; can improve the speed of programs that make &lt;em&gt;small&lt;/em&gt; and &lt;em&gt;repeated&lt;/em&gt; read calls to the same file or network socket. It does not help when reading very large amounts at once, or reading just one or a few times. It also provides no advantage when reading from a source that is already in memory, like a &lt;code&gt;Vec&amp;lt;u8&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127a433311968328cd3a97c18edbbeb5f32e62cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BufWriter&lt;/code&gt; can improve the speed of programs that make &lt;em&gt;small&lt;/em&gt; and &lt;em&gt;repeated&lt;/em&gt; write calls to the same file or network socket. It does not help when writing very large amounts at once, or writing just one or a few times. It also provides no advantage when writing to a destination that is in memory, like a &lt;code&gt;Vec&amp;lt;u8&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e427f05884440b18ca96be2a61cf17fee3e0a22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BuildHasherDefault&amp;lt;H&amp;gt;&lt;/code&gt; can be used when a type &lt;code&gt;H&lt;/code&gt; implements &lt;a href=&quot;trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../default/trait.default&quot;&gt;&lt;code&gt;Default&lt;/code&gt;&lt;/a&gt;, and you need a corresponding &lt;a href=&quot;trait.buildhasher&quot;&gt;&lt;code&gt;BuildHasher&lt;/code&gt;&lt;/a&gt; instance, but none is defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a08c268371f28820805349860175373a33b1ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CString&lt;/code&gt; implements a &lt;a href=&quot;#method.as_ptr&quot;&gt;&lt;code&gt;as_ptr&lt;/code&gt;&lt;/a&gt; method through the &lt;a href=&quot;../ops/trait.deref&quot;&gt;&lt;code&gt;Deref&lt;/code&gt;&lt;/a&gt; trait. This method will give you a &lt;code&gt;*const c_char&lt;/code&gt; which you can feed directly to extern functions that expect a nul-terminated string, like C's &lt;code&gt;strdup()&lt;/code&gt;. Notice that &lt;a href=&quot;#method.as_ptr&quot;&gt;&lt;code&gt;as_ptr&lt;/code&gt;&lt;/a&gt; returns a read-only pointer; if the C code writes to it, that causes undefined behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ea63d9370201ac1bfdd27cde7a7640430710b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CString&lt;/code&gt; is intended for working with traditional C-style strings (a sequence of non-nul bytes terminated by a single nul byte); the primary use case for these kinds of strings is interoperating with C-like code. Often you will need to transfer ownership to/from that external code. It is strongly recommended that you thoroughly read through the documentation of &lt;code&gt;CString&lt;/code&gt; before use, as improper ownership management of &lt;code&gt;CString&lt;/code&gt; instances can lead to invalid memory accesses, memory leaks, and other memory errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a550be35eb9aaa7c141746a99cd7257172fa9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CString&lt;/code&gt; is just a wrapper over a buffer of bytes with a nul terminator; &lt;a href=&quot;struct.cstring#method.into_string&quot;&gt;&lt;code&gt;into_string&lt;/code&gt;&lt;/a&gt; performs UTF-8 validation on those bytes and may return this error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e063319f7cc23f7970916db3429671bad4b5a04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CString&lt;/code&gt; is to &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;&amp;amp;CStr&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; is to &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;: the former in each pair are owned strings; the latter are borrowed references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4d891119f919e3d7f845218eb14020ba6e6b20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChangeColor&lt;/code&gt; includes three &lt;code&gt;i32&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7593d5009a5b67a50d84bcc3fa1dd4f49da1fe78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChildStdin&lt;/code&gt; will be converted to &lt;code&gt;Stdio&lt;/code&gt; using &lt;code&gt;Stdio::from&lt;/code&gt; under the hood.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a91e3d8a4e2fbfaaee5efbc9a26f632756103a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChildStdout&lt;/code&gt; will be converted to &lt;code&gt;Stdio&lt;/code&gt; using &lt;code&gt;Stdio::from&lt;/code&gt; under the hood.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838c24d6ca940a21454e98a65ab2bb3085568399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CoerceUnsized&lt;/code&gt; is used to coerce one struct containing an unsized type into another struct containing a different unsized type. If the struct doesn't have any fields of unsized types then you don't need explicit coercion to get the types you want. To fix this you can either not try to implement &lt;code&gt;CoerceUnsized&lt;/code&gt; or you can add a field that is unsized to the struct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03c9790dd9391a6ff361ba0d424177759ea5092" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CoerceUnsized&lt;/code&gt; only allows for coercion from a structure with a single unsized type field to another struct with a single unsized type field. In fact Rust only allows for a struct to have one unsized type in a struct and that unsized type must be the last field in the struct. So having two unsized types in a single struct is not allowed by the compiler. To fix this use only one field containing an unsized type in the struct and then use multiple structs to manage each unsized type field you need.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1073d32daed568f97d9e146f4c215dce8bfaa24d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Command&lt;/code&gt; can be reused to spawn multiple processes. The builder methods change the command without needing to immediately spawn the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2387ecc0d5a1721bf52c01c66152bf11894243" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cow&lt;/code&gt; implements &lt;code&gt;Deref&lt;/code&gt;, which means that you can call non-mutating methods directly on the data it encloses. If mutation is desired, &lt;code&gt;to_mut&lt;/code&gt; will obtain a mutable reference to an owned value, cloning if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123af5ee4d9330c9928262d547fb982dae12cda0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cursor&lt;/code&gt;s are used with in-memory buffers, anything implementing &lt;code&gt;AsRef&amp;lt;[u8]&amp;gt;&lt;/code&gt;, to allow them to implement &lt;a href=&quot;trait.read&quot;&gt;&lt;code&gt;Read&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;trait.write&quot;&gt;&lt;code&gt;Write&lt;/code&gt;&lt;/a&gt;, allowing these buffers to be used anywhere you might use a reader or writer that does actual I/O.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0837e495407effb23511ed5241a26d901f66c484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Debug&lt;/code&gt; implementations using either &lt;code&gt;derive&lt;/code&gt; or the debug builder API on &lt;a href=&quot;struct.formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; support pretty-printing using the alternate flag: &lt;code&gt;{:#?}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88324f872814980303a183b3ff52d2c678ca9107" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Debug&lt;/code&gt; should format the output in a programmer-facing, debugging context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408f9113a84210ae9dd2c593e27c8c346bc00a03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Deref&lt;/code&gt; and &lt;code&gt;DerefMut&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ba0409b21585407ae9408db7ad9e55bf9c64ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Deref&lt;/code&gt; behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db2797c1c1ada53b430a041163da972e3dd7ebf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Display&lt;/code&gt; is similar to &lt;a href=&quot;trait.debug&quot;&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/a&gt;, but &lt;code&gt;Display&lt;/code&gt; is for user-facing output, and so cannot be derived.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="120c39278dac71cbc0cf99e54e14eb4e1185f781" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Div&lt;/code&gt;idable rational numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050685b0fb6b704f72bc9087b9321bdf96535f9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Drop&lt;/code&gt; guarantee</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0a242f7c87959c4363b4a8874c792d5134ffb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Drop&lt;/code&gt; implementation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a0cf09aa338a7b6c5af601a694c39b935c1d14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Duration&lt;/code&gt;s implement many common traits, including &lt;a href=&quot;../ops/trait.add&quot;&gt;&lt;code&gt;Add&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ops/trait.sub&quot;&gt;&lt;code&gt;Sub&lt;/code&gt;&lt;/a&gt;, and other &lt;a href=&quot;../ops/index&quot;&gt;&lt;code&gt;ops&lt;/code&gt;&lt;/a&gt; traits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fafc43558cff0c7288d8a28e292e138b30c243af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.upperexp&quot;&gt;&lt;code&gt;UpperExp&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2333f9d85f9754f529640e6cdf9d8f65254b0c06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c7f75b5d8afe4dfb27f412ebb712a4696dcfcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Equal&lt;/code&gt; becomes &lt;code&gt;Equal&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
