<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="en" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="a2ce2b6e7049ed5ebef3ea78f7f49e41b51d70f5" translate="yes" xml:space="preserve">
          <source>Calculates Euclidean division, the matching method for &lt;code&gt;rem_euclid&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1a1acd0979000f557bd9fe260b8e844069c43f" translate="yes" xml:space="preserve">
          <source>Calculates the distance between two pointers. The returned value is in units of T: the distance in bytes is divided by &lt;code&gt;mem::size_of::&amp;lt;T&amp;gt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5127f08bc025120d1faa493287d1d0eee0006108" translate="yes" xml:space="preserve">
          <source>Calculates the divisor when &lt;code&gt;self&lt;/code&gt; is divided by &lt;code&gt;rhs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc217ee649e4f99c72864fd7fe451c173d18439f" translate="yes" xml:space="preserve">
          <source>Calculates the least nonnegative remainder of &lt;code&gt;self (mod rhs)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa698abba4132e7de76a90696509e57b698e9680" translate="yes" xml:space="preserve">
          <source>Calculates the least remainder of &lt;code&gt;self (mod rhs)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ea3c4efe85a6701802881e07221808f6b72f10" translate="yes" xml:space="preserve">
          <source>Calculates the length of the hypotenuse of a right-angle triangle given legs of length &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2204ea9d183af2eb3c958e206adf62733fcb72b8" translate="yes" xml:space="preserve">
          <source>Calculates the multiplication of &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f0a45d6193bb4f48999acaf0e6da752bd21197" translate="yes" xml:space="preserve">
          <source>Calculates the offset from a pointer (convenience for &lt;code&gt;.offset((count as isize).wrapping_neg())&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cdd04036e314797a2d49a1129ff94310c799250" translate="yes" xml:space="preserve">
          <source>Calculates the offset from a pointer (convenience for &lt;code&gt;.offset(count as isize)&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c58135d353fa0b65d9d7d232ccec38157ca294b" translate="yes" xml:space="preserve">
          <source>Calculates the offset from a pointer using wrapping arithmetic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a96ac2990d9d6aa59d405db07b7ab3697d51ab5" translate="yes" xml:space="preserve">
          <source>Calculates the offset from a pointer using wrapping arithmetic. (convenience for &lt;code&gt;.wrapping_offset((count as isize).wrapping_sub())&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4437f7540901d3da485cf44951a321623f5d54ea" translate="yes" xml:space="preserve">
          <source>Calculates the offset from a pointer using wrapping arithmetic. (convenience for &lt;code&gt;.wrapping_offset(count as isize)&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fced3b907bf59a9a00c1e327030e6d3af8cc26ee" translate="yes" xml:space="preserve">
          <source>Calculates the offset from a pointer using wrapping arithmetic. &lt;code&gt;count&lt;/code&gt; is in units of T; e.g., a &lt;code&gt;count&lt;/code&gt; of 3 represents a pointer offset of &lt;code&gt;3 * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb349c3d2b61d501336bb2fe8cf2ff557d376135" translate="yes" xml:space="preserve">
          <source>Calculates the offset from a pointer, potentially wrapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bceae705a5fda0d95a2adc01d7e85d8d0a2f7b90" translate="yes" xml:space="preserve">
          <source>Calculates the offset from a pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e05ec484d26186b0ee114ebaa6c93c15ef1c02" translate="yes" xml:space="preserve">
          <source>Calculates the quotient of Euclidean division &lt;code&gt;self.div_euclid(rhs)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39720ba2c3f54664835e5cfd429b8dbb6ddb3ddb" translate="yes" xml:space="preserve">
          <source>Calculates the quotient of Euclidean division of &lt;code&gt;self&lt;/code&gt; by &lt;code&gt;rhs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a8c64bc432948fb8acbf8240c8594765e8fa48" translate="yes" xml:space="preserve">
          <source>Calculates the remainder &lt;code&gt;self.rem_euclid(rhs)&lt;/code&gt; as if by Euclidean division.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd73ba699034056b9c5150298e8d456b025d264b" translate="yes" xml:space="preserve">
          <source>Calculates the remainder when &lt;code&gt;self&lt;/code&gt; is divided by &lt;code&gt;rhs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb148e8941aab843a69c5323a4e82bfc27fae30" translate="yes" xml:space="preserve">
          <source>Calculations in applications like audio decoders often prioritize performance most highly. Here, we&amp;rsquo;re creating an iterator, using two adaptors, and then consuming the value. What assembly code would this Rust code compile to? Well, as of this writing, it compiles down to the same assembly you&amp;rsquo;d write by hand. There&amp;rsquo;s no loop at all corresponding to the iteration over the values in &lt;code&gt;coefficients&lt;/code&gt;: Rust knows that there are 12 iterations, so it &amp;ldquo;unrolls&amp;rdquo; the loop. &lt;em&gt;Unrolling&lt;/em&gt; is an optimization that removes the overhead of the loop controlling code and instead generates repetitive code for each iteration of the loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f282ae75f0466a6ba7a1e840066c459209e8a0" translate="yes" xml:space="preserve">
          <source>Call an unsafe function or method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0298ffd4d4d74b375411d1b2e3969f0f3205473d" translate="yes" xml:space="preserve">
          <source>Call expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6249f8a9ffd810d4ed69b84e3c802196af864e8b" translate="yes" xml:space="preserve">
          <source>Call traits and coercions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c586bbc683322c086eef8701f61479b8313e2e3" translate="yes" xml:space="preserve">
          <source>Callers of memory allocation APIs wishing to abort computation in response to an allocation error are encouraged to call this function, rather than directly invoking &lt;code&gt;panic!&lt;/code&gt; or similar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a1fed80ce769e9299beec7ef90b5a7b9c915af1" translate="yes" xml:space="preserve">
          <source>Callers of this function are responsible that these preconditions are satisfied:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c291d9a0fdcacf48fd819bb42d20e5d81ebaea" translate="yes" xml:space="preserve">
          <source>Callers of this function are responsible that three preconditions are satisfied:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8639a217f023f0e5aaf72760a98b8b29436661" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;#method.wait&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt; (or other functions that wrap around it) will make the parent process wait until the child has actually exited before continuing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062a68bd5946d6865cea7336de4cb67da3dd476e" translate="yes" xml:space="preserve">
          <source>Calling &lt;code id=&quot;calling-confignew-and-handling-errors&quot;&gt;Config::new&lt;/code&gt; and Handling Errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40c65454f5635fc0b10e5666dc4831c6b5a85ea" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;into_owned&lt;/code&gt; on a &lt;code&gt;Cow::Borrowed&lt;/code&gt; clones the underlying data and becomes a &lt;code&gt;Cow::Owned&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45f4417b85022c3db61725f3af3e2cc322eb41e" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;into_owned&lt;/code&gt; on a &lt;code&gt;Cow::Owned&lt;/code&gt; is a no-op:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="695c031ebd8b1d35a483a10782e7c17d879fd0d1" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;join&lt;/code&gt; on the handle blocks the thread currently running until the thread represented by the handle terminates. &lt;em&gt;Blocking&lt;/em&gt; a thread means that thread is prevented from performing work or exiting. Because we&amp;rsquo;ve put the call to &lt;code&gt;join&lt;/code&gt; after the main thread&amp;rsquo;s &lt;code&gt;for&lt;/code&gt; loop, running Listing 16-2 should produce output similar to this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba53e5336fa9eed56530a5c7e1f4d704c60b408" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;next()&lt;/code&gt; this way gets repetitive. Rust has a construct which can call &lt;code&gt;next()&lt;/code&gt; on your iterator, until it reaches &lt;code&gt;None&lt;/code&gt;. Let's go over that next.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52eefc013b01e5d9adae0a652dc16672febe75fe" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;nth()&lt;/code&gt; multiple times doesn't rewind the iterator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162f7cd67f7da63727e6f1ac3373291fc6afc8f1" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;nth_back()&lt;/code&gt; multiple times doesn't rewind the iterator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c598d6b0bb84ae897f110d0577b80a5562b3ffe9" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;to_string_lossy&lt;/code&gt; on a &lt;code&gt;CStr&lt;/code&gt; containing invalid UTF-8:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6835821e80fa4f9f034eef42e8cd6c55d7f554" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;to_string_lossy&lt;/code&gt; on a &lt;code&gt;CStr&lt;/code&gt; containing valid UTF-8:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7011eb1a41a55a7c56907e801179e9dea5b3cf" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;to_string_lossy&lt;/code&gt; on a &lt;code&gt;Path&lt;/code&gt; with valid unicode:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31c7c45b0c7aeef2d4d0ffc68da4406c29790a0" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;to_string_lossy&lt;/code&gt; on an &lt;code&gt;OsStr&lt;/code&gt; with invalid unicode:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de067b738f05e2c853ce62bda78f70da2c52df0" translate="yes" xml:space="preserve">
          <source>Calling Rust Functions from Other Languages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469b5b1db440c09f5ea9cbc0b01c11c197598149" translate="yes" xml:space="preserve">
          <source>Calling a &lt;code&gt;run&lt;/code&gt; function in &lt;em&gt;lib.rs&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98cab239f2466bb3a3bef081514cf79b241c2da" translate="yes" xml:space="preserve">
          <source>Calling a by-value closure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c225172ba8dd6c241a62db17923fd52257ec1ecf" translate="yes" xml:space="preserve">
          <source>Calling a closure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430899e63ff06c11168e52a7ad1cd9798d9e810e" translate="yes" xml:space="preserve">
          <source>Calling a mutably capturing closure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeeb342591bb15dc955bacb8ca5d948735ea0a0e" translate="yes" xml:space="preserve">
          <source>Calling an Unsafe Function or Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4cba3cdf6aee25a0708da105b4aa73ef9194d2" translate="yes" xml:space="preserve">
          <source>Calling an unsafe function (including an intrinsic or foreign function).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ce24087e4cce4c1779eadefe24214064c78c10" translate="yes" xml:space="preserve">
          <source>Calling functions marked unsafe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b8d2a38649974749bb36dd214a74950b90f29a" translate="yes" xml:space="preserve">
          <source>Calling functions via FFI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8dfbd67e3bce8053bc02fac21adfe30570f8667" translate="yes" xml:space="preserve">
          <source>Calling its &lt;a href=&quot;../std/ops/trait.drop&quot;&gt;&lt;code&gt;std::ops::Drop::drop&lt;/code&gt;&lt;/a&gt; method, if it has one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cbee1e3dfc8c33deb1f76b5bfd498db4ce5ef9a" translate="yes" xml:space="preserve">
          <source>Calling next on a fused iterator that has returned &lt;code&gt;None&lt;/code&gt; once is guaranteed to return &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; again. This trait should be implemented by all iterators that behave this way because it allows optimizing &lt;a href=&quot;trait.iterator#method.fuse&quot;&gt;&lt;code&gt;Iterator::fuse&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b70cef98bea7c46d62ecdc6c6d6c2fb2f1a678" translate="yes" xml:space="preserve">
          <source>Calling the command line parsing logic with the argument values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17f2dea9d34711d4634fe61d5262d4b3a7e4949" translate="yes" xml:space="preserve">
          <source>Calling this function multiple times may result in different behavior, depending on the operating system. On Linux, the second call will return &lt;code&gt;Ok(())&lt;/code&gt;, but on macOS, it will return &lt;code&gt;ErrorKind::NotConnected&lt;/code&gt;. This may change in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="575e1c052b421159bac0ed88e5f50e064494a831" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;op&lt;/code&gt; if the result is &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt;, otherwise returns the &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; value of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f961f899a2cfefa64e10f259f8eb29aaf36dad04" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;op&lt;/code&gt; if the result is &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;, otherwise returns the &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; value of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95d263a4a075ff123b003c74cd1a9d0ca465605" translate="yes" xml:space="preserve">
          <source>Calls a closure on each element of an iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396c20d59d986fb07a8fb04d5022a6446eb8eff0" translate="yes" xml:space="preserve">
          <source>Calls a closure on each element of an iterator. &lt;a href=&quot;../../../iter/trait.iterator#method.for_each&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cfce5b305846828d89983a5f01e9f39ff3f593f" translate="yes" xml:space="preserve">
          <source>Calls a closure on each element of an iterator. &lt;a href=&quot;../../iter/trait.iterator#method.for_each&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b452c2ba01d8ad9acc0876cf64e78699e18a45" translate="yes" xml:space="preserve">
          <source>Calls a closure on each element of an iterator. &lt;a href=&quot;../iter/trait.iterator#method.for_each&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2da9126523f32597a07db6c54ee2184d55ce5c2" translate="yes" xml:space="preserve">
          <source>Calls a closure on each element of an iterator. &lt;a href=&quot;iter/trait.iterator#method.for_each&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a1d0073e96739a4a7cf3debb043e2bb44d2b46" translate="yes" xml:space="preserve">
          <source>Calls a closure on each element of an iterator. &lt;a href=&quot;trait.iterator#method.for_each&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa7a44819ff5dd8ef777e95d162b39eea9940e2a" translate="yes" xml:space="preserve">
          <source>Calls of &lt;a href=&quot;items/functions#const-functions&quot;&gt;const functions&lt;/a&gt; and const methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677169912cc36864d10f29e6c2b2cb3ca7cc5a6e" translate="yes" xml:space="preserve">
          <source>Calls to &lt;code&gt;write&lt;/code&gt; are not guaranteed to block waiting for data to be written, and a write which would otherwise block can be indicated through an &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; variant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30fc82876340b5cd98aa5e28dc1e1ded678cb8bb" translate="yes" xml:space="preserve">
          <source>Calls to other &lt;em&gt;safe&lt;/em&gt; const functions (whether by function call or method call)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1fad511b779575835db0e2fe05a2f679a24bff7" translate="yes" xml:space="preserve">
          <source>Can &lt;code&gt;CaseInsensitiveString&lt;/code&gt; implement &lt;code&gt;Borrow&amp;lt;str&amp;gt;&lt;/code&gt;? It certainly can provide a reference to a string slice via its contained owned string. But because its &lt;code&gt;Hash&lt;/code&gt; implementation differs, it behaves differently from &lt;code&gt;str&lt;/code&gt; and therefore must not, in fact, implement &lt;code&gt;Borrow&amp;lt;str&amp;gt;&lt;/code&gt;. If it wants to allow others access to the underlying &lt;code&gt;str&lt;/code&gt;, it can do that via &lt;code&gt;AsRef&amp;lt;str&amp;gt;&lt;/code&gt; which doesn&amp;rsquo;t carry any extra requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbee583b112c61027e995c9cbc6b83f64f2c6016" translate="yes" xml:space="preserve">
          <source>Can I turn these warnings into errors by denying a lint?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffedd5c94247b98253125279c378517d376f585f" translate="yes" xml:space="preserve">
          <source>Cannot convert inline assembly operand to a single LLVM value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064d19e691ce5c4c741753adfe6009671077b524" translate="yes" xml:space="preserve">
          <source>Cannot mutate place in this match guard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e1a76747d8e8f7e23797139376312ac515519f" translate="yes" xml:space="preserve">
          <source>Cannot return value that references local variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18946a7345ea25ae184b2fa7fd09696f851660ca" translate="yes" xml:space="preserve">
          <source>CannotReallocInPlace</source>
          <target state="translated">CannotReallocInPlace</target>
        </trans-unit>
        <trans-unit id="db708338b8108bceb02a5ab38088ad773c7a38f5" translate="yes" xml:space="preserve">
          <source>CannotReallocInPlace::borrow</source>
          <target state="translated">CannotReallocInPlace::borrow</target>
        </trans-unit>
        <trans-unit id="fbb3b1ed781e98b772cd25d7177cc80bcc94e34d" translate="yes" xml:space="preserve">
          <source>CannotReallocInPlace::borrow_mut</source>
          <target state="translated">CannotReallocInPlace::borrow_mut</target>
        </trans-unit>
        <trans-unit id="6a68da32986df1cc594041b4ac0f8b52b907e956" translate="yes" xml:space="preserve">
          <source>CannotReallocInPlace::cause</source>
          <target state="translated">CannotReallocInPlace::cause</target>
        </trans-unit>
        <trans-unit id="0db277ddb0842c8a035d8720f8ee7ca44be8a600" translate="yes" xml:space="preserve">
          <source>CannotReallocInPlace::clone</source>
          <target state="translated">CannotReallocInPlace::clone</target>
        </trans-unit>
        <trans-unit id="c0b3d6b832bf50e8f5f2e1a868329bf3eb6b5e6a" translate="yes" xml:space="preserve">
          <source>CannotReallocInPlace::clone_from</source>
          <target state="translated">CannotReallocInPlace::clone_from</target>
        </trans-unit>
        <trans-unit id="e22e1c5bc5858fa8d7ecb67f7ca21dd0bfd35fe4" translate="yes" xml:space="preserve">
          <source>CannotReallocInPlace::clone_into</source>
          <target state="translated">CannotReallocInPlace::clone_into</target>
        </trans-unit>
        <trans-unit id="3f38ff0fdbbf2f703ff8e60b4973e01fb2a3bf31" translate="yes" xml:space="preserve">
          <source>CannotReallocInPlace::description</source>
          <target state="translated">CannotReallocInPlace::description</target>
        </trans-unit>
        <trans-unit id="8d3358893adcc87c82c15d615a64fca665ba176c" translate="yes" xml:space="preserve">
          <source>CannotReallocInPlace::eq</source>
          <target state="translated">CannotReallocInPlace::eq</target>
        </trans-unit>
        <trans-unit id="c436414dc0b3a3215eaec90aedd27a561b91d920" translate="yes" xml:space="preserve">
          <source>CannotReallocInPlace::fmt</source>
          <target state="translated">CannotReallocInPlace::fmt</target>
        </trans-unit>
        <trans-unit id="f3df1a70f83c9e629b222262e235b2194c9feea5" translate="yes" xml:space="preserve">
          <source>CannotReallocInPlace::from</source>
          <target state="translated">CannotReallocInPlace::from</target>
        </trans-unit>
        <trans-unit id="f38c26641404735febdd63d9ebbcb95632c7fc10" translate="yes" xml:space="preserve">
          <source>CannotReallocInPlace::into</source>
          <target state="translated">CannotReallocInPlace::into</target>
        </trans-unit>
        <trans-unit id="677b61d26186f5001fbbb338b1eb39badeb9035c" translate="yes" xml:space="preserve">
          <source>CannotReallocInPlace::ne</source>
          <target state="translated">CannotReallocInPlace::ne</target>
        </trans-unit>
        <trans-unit id="3aba62335d5c79a8d639fce91781f21d828e3d6c" translate="yes" xml:space="preserve">
          <source>CannotReallocInPlace::source</source>
          <target state="translated">CannotReallocInPlace::source</target>
        </trans-unit>
        <trans-unit id="4de309649814b9340379f621201577de2e665add" translate="yes" xml:space="preserve">
          <source>CannotReallocInPlace::to_owned</source>
          <target state="translated">CannotReallocInPlace::to_owned</target>
        </trans-unit>
        <trans-unit id="ab6f21ac0212ee889c5ddb86f6b0fa133ac082b4" translate="yes" xml:space="preserve">
          <source>CannotReallocInPlace::to_string</source>
          <target state="translated">CannotReallocInPlace::to_string</target>
        </trans-unit>
        <trans-unit id="f3203a2632d9e1d1c1b0b63fb1fc421d48f9d3fa" translate="yes" xml:space="preserve">
          <source>CannotReallocInPlace::try_from</source>
          <target state="translated">CannotReallocInPlace::try_from</target>
        </trans-unit>
        <trans-unit id="1fd1104d18cfb0e5a2e789df04e4a5b40e046d7c" translate="yes" xml:space="preserve">
          <source>CannotReallocInPlace::try_into</source>
          <target state="translated">CannotReallocInPlace::try_into</target>
        </trans-unit>
        <trans-unit id="0844df8570619a7f92b1ec959e1e9f9855538d7f" translate="yes" xml:space="preserve">
          <source>CannotReallocInPlace::type_id</source>
          <target state="translated">CannotReallocInPlace::type_id</target>
        </trans-unit>
        <trans-unit id="77c5882354fe35c06ec86f582037bab9711670ae" translate="yes" xml:space="preserve">
          <source>Canonical paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a333c720c89e44e8e70bacda4bf0073f227911d" translate="yes" xml:space="preserve">
          <source>Capacity Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9b6deb8b492b7b6bc5256cd674c23336f610fb" translate="yes" xml:space="preserve">
          <source>Capacity and reallocation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0cdb20337630c37884981fdf257c3959384c63" translate="yes" xml:space="preserve">
          <source>Capture a &lt;a href=&quot;https://doc.rust-lang.org/book/second-edition/ch13-01-closures.html&quot;&gt;closure&lt;/a&gt;'s environment by value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20f3daba48c455aa890155202bd389442a301f5" translate="yes" xml:space="preserve">
          <source>Capture modes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d71da6e52376ced7bee988e2638d4f0306eaeb0" translate="yes" xml:space="preserve">
          <source>Captures a common usage pattern for allocators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0cd8f7115682a21391fe6952f165764529474e" translate="yes" xml:space="preserve">
          <source>Captures can occur by a special kind of borrow called a &lt;em&gt;unique immutable borrow&lt;/em&gt;, which cannot be used anywhere else in the language and cannot be written out explicitly. It occurs when modifying the referent of a mutable reference, as in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1a539db9fcfa734a9bb87c16648df26afa2363" translate="yes" xml:space="preserve">
          <source>Capturing the Environment with Closures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936f4787c691ca05a5fc9bd5ef003981d0fd23ea" translate="yes" xml:space="preserve">
          <source>Care should be taken to avoid modifying the internal I/O state of the underlying reader as doing so may corrupt the internal limit of this &lt;code&gt;Take&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe82bd2dff83026c3424e65f908960ac659e90f7" translate="yes" xml:space="preserve">
          <source>Care should be taken to avoid modifying the internal I/O state of the underlying readers as doing so may corrupt the internal state of this &lt;code&gt;Chain&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a94b5eb8a1b561609332355ea058ca164007f39" translate="yes" xml:space="preserve">
          <source>Care should be taken to avoid modifying the internal I/O state of the underlying value as it may corrupt this cursor's position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9daf6bef99f447bfc89398170bddc979a688326f" translate="yes" xml:space="preserve">
          <source>Caret</source>
          <target state="translated">Caret</target>
        </trans-unit>
        <trans-unit id="4b543686834ff9c96b5aa004bf03e54b07ab8c7f" translate="yes" xml:space="preserve">
          <source>CaretEq</source>
          <target state="translated">CaretEq</target>
        </trans-unit>
        <trans-unit id="9b4b64d79f6456643db96cea75e7d608d9b3ccf0" translate="yes" xml:space="preserve">
          <source>Cargo Workspaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6130a368f6b496bf7db8ed44dbce227dd6638c23" translate="yes" xml:space="preserve">
          <source>Cargo also provides a command called &lt;code&gt;cargo check&lt;/code&gt;. This command quickly checks your code to make sure it compiles but doesn&amp;rsquo;t produce an executable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae03eebb0a7d0738a55960ac298edd80e989e03" translate="yes" xml:space="preserve">
          <source>Cargo as Convention</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cab0b08bd02b6050df842408e982af9a890db09" translate="yes" xml:space="preserve">
          <source>Cargo can do even more than what we cover in this chapter, so for a full explanation of all its features, see &lt;a href=&quot;https://doc.rust-lang.org/cargo/index.html&quot;&gt;its documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe0ae1f402f8c118952421638bbda4a0245c7148" translate="yes" xml:space="preserve">
          <source>Cargo compiled and ran the test. After the &lt;code&gt;Compiling&lt;/code&gt;, &lt;code&gt;Finished&lt;/code&gt;, and &lt;code&gt;Running&lt;/code&gt; lines is the line &lt;code&gt;running 1 test&lt;/code&gt;. The next line shows the name of the generated test function, called &lt;code&gt;it_works&lt;/code&gt;, and the result of running that test, &lt;code&gt;ok&lt;/code&gt;. The overall summary of running the tests appears next. The text &lt;code&gt;test result: ok.&lt;/code&gt; means that all the tests passed, and the portion that reads &lt;code&gt;1 passed; 0 failed&lt;/code&gt; totals the number of tests that passed or failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4eb5dc5401a6eb645def4ec38a6872d478358c8" translate="yes" xml:space="preserve">
          <source>Cargo doesn&amp;rsquo;t assume that crates in a workspace will depend on each other, so we need to be explicit about the dependency relationships between the crates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52522f7f0d2d3ffaca1376b83b97f819f079abb5" translate="yes" xml:space="preserve">
          <source>Cargo expects your source files to live inside the &lt;em&gt;src&lt;/em&gt; directory. The top-level project directory is just for README files, license information, configuration files, and anything else not related to your code. Using Cargo helps you organize your projects. There&amp;rsquo;s a place for everything, and everything is in its place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57f99fa82a3139814f0281a8d7db9f6bec5efb4" translate="yes" xml:space="preserve">
          <source>Cargo has a mechanism that ensures you can rebuild the same artifact every time you or anyone else builds your code: Cargo will use only the versions of the dependencies you specified until you indicate otherwise. For example, what happens if next week version 0.3.15 of the &lt;code&gt;rand&lt;/code&gt; crate comes out and contains an important bug fix but also contains a regression that will break your code?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c0760997d436c57df9967acadb1f0cd394905b7" translate="yes" xml:space="preserve">
          <source>Cargo has default settings for each of the profiles that apply when there aren&amp;rsquo;t any &lt;code&gt;[profile.*]&lt;/code&gt; sections in the project&amp;rsquo;s &lt;em&gt;Cargo.toml&lt;/em&gt; file. By adding &lt;code&gt;[profile.*]&lt;/code&gt; sections for any profile you want to customize, you can override any subset of the default settings. For example, here are the default values for the &lt;code&gt;opt-level&lt;/code&gt; setting for the &lt;code&gt;dev&lt;/code&gt; and &lt;code&gt;release&lt;/code&gt; profiles:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825feaa769cfa687d8ced1e2139c1216c1d12d6b" translate="yes" xml:space="preserve">
          <source>Cargo has generated a Hello, world! program for you, just like the one we wrote in Listing 1-1! So far, the differences between our previous project and the project Cargo generates are that Cargo placed the code in the &lt;em&gt;src&lt;/em&gt; directory, and we have a &lt;em&gt;Cargo.toml&lt;/em&gt; configuration file in the top directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a83870f62c314f3acba94fea811002e0cc3ce2e" translate="yes" xml:space="preserve">
          <source>Cargo has two main profiles: the &lt;code&gt;dev&lt;/code&gt; profile Cargo uses when you run &lt;code&gt;cargo build&lt;/code&gt; and the &lt;code&gt;release&lt;/code&gt; profile Cargo uses when you run &lt;code&gt;cargo build --release&lt;/code&gt;. The &lt;code&gt;dev&lt;/code&gt; profile is defined with good defaults for development, and the &lt;code&gt;release&lt;/code&gt; profile has good defaults for release builds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5de1c8d0a6943cf5337f673e50bc6b42acba179" translate="yes" xml:space="preserve">
          <source>Cargo is Rust&amp;rsquo;s build system and package manager. Most Rustaceans use this tool to manage their Rust projects because Cargo handles a lot of tasks for you, such as building your code, downloading the libraries your code depends on, and building those libraries. (We call libraries your code needs &lt;em&gt;dependencies&lt;/em&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859dcf5d594c277f177bb6ea8aa8d8cbd67df76f" translate="yes" xml:space="preserve">
          <source>Cargo is designed so you can extend it with new subcommands without having to modify Cargo. If a binary in your &lt;code&gt;$PATH&lt;/code&gt; is named &lt;code&gt;cargo-something&lt;/code&gt;, you can run it as if it was a Cargo subcommand by running &lt;code&gt;cargo something&lt;/code&gt;. Custom commands like this are also listed when you run &lt;code&gt;cargo --list&lt;/code&gt;. Being able to use &lt;code&gt;cargo install&lt;/code&gt; to install extensions and then run them just like the built-in Cargo tools is a super convenient benefit of Cargo&amp;rsquo;s design!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6dcbd31bafff88f294fdfd94f11ce85c6af9ea9" translate="yes" xml:space="preserve">
          <source>Cargo&amp;rsquo;s use of external crates is where it really shines. Before we can write code that uses &lt;code&gt;rand&lt;/code&gt;, we need to modify the &lt;em&gt;Cargo.toml&lt;/em&gt; file to include the &lt;code&gt;rand&lt;/code&gt; crate as a dependency. Open that file now and add the following line to the bottom beneath the &lt;code&gt;[dependencies]&lt;/code&gt; section header that Cargo created for you:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e5d0ec3b6fcc84bd7ceec5061561ddfbd803d9" translate="yes" xml:space="preserve">
          <source>Cargo, the included dependency manager and build tool, makes adding, compiling, and managing dependencies painless and consistent across the Rust ecosystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df10067f5a8780a3c7f1ce6b060b8d78df100b22" translate="yes" xml:space="preserve">
          <source>Carriage return</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62cdd8dfae78019369c43aae3726f0b8b375ee76" translate="yes" xml:space="preserve">
          <source>Carriage return is escaped as &lt;code&gt;\r&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10268b4d95e1b2cce7aee0339d945b9ae2dd41ba" translate="yes" xml:space="preserve">
          <source>Cases in Which You Have More Information Than the Compiler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86bc837d3c31c98372bd6f6083018ac62b4368fc" translate="yes" xml:space="preserve">
          <source>Cast between types, or rename an import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae2166389b335b7f4c25092cf9112650b632f71" translate="yes" xml:space="preserve">
          <source>Cast performed by &lt;code&gt;e as U&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3358afde0c287145e4ea20d608fde5fdae224bed" translate="yes" xml:space="preserve">
          <source>Cast to a pointer of another type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3715fdbfdabbfd0fce470cbc5beac1754055c03c" translate="yes" xml:space="preserve">
          <source>Cast to a pointer to a different type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd26704362b0bfabb9ec158f63b5957d241e0e29" translate="yes" xml:space="preserve">
          <source>Casting between two integers of the same size (e.g. i32 -&amp;gt; u32) is a no-op</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37fbb5d946c7608992e6aba78d6bf55abfc7d5c" translate="yes" xml:space="preserve">
          <source>Casting from a float to an integer will round the float towards zero</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8b986e848c7678ba68608a3994cebe157b8911" translate="yes" xml:space="preserve">
          <source>Casting from a larger integer to a smaller integer (e.g. u32 -&amp;gt; u8) will truncate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabb7e74250ea015819c09fc6010251eaf517a1c" translate="yes" xml:space="preserve">
          <source>Casting from a smaller integer to a larger integer (e.g. u8 -&amp;gt; u32) will</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e946cacf40515335c912e63718fe396339aa25c" translate="yes" xml:space="preserve">
          <source>Casting from an f32 to an f64 is perfect and lossless</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8773bd2412eced3bdfc907d8954e78f0fc6e8712" translate="yes" xml:space="preserve">
          <source>Casting from an f64 to an f32 will produce the closest possible value (rounding strategy unspecified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016b641972acb57a73a2395438ad1440988a4af3" translate="yes" xml:space="preserve">
          <source>Casting from an integer to float will produce the floating point representation of the integer, rounded if necessary (rounding strategy unspecified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bcada0b290d8b570562bc205de2195379961144" translate="yes" xml:space="preserve">
          <source>Casts an enum to its discriminant, then uses a numeric cast if needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3850d4f598526710f234a54fe262c8ed7f03567" translate="yes" xml:space="preserve">
          <source>Casts except for raw pointer to integer casts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab077cb44c56758a71fdc95b6ef923bd1476afd" translate="yes" xml:space="preserve">
          <source>Casts to the &lt;code&gt;char&lt;/code&gt; with the corresponding code point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f98b96088984f58d6f43126796ba7cd87115a78" translate="yes" xml:space="preserve">
          <source>Catching borrowing errors at runtime rather than compile time means that you would find a mistake in your code later in the development process and possibly not until your code was deployed to production. Also, your code would incur a small runtime performance penalty as a result of keeping track of the borrows at runtime rather than compile time. However, using &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; makes it possible to write a mock object that can modify itself to keep track of the messages it has seen while you&amp;rsquo;re using it in a context where only immutable values are allowed. You can use &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; despite its trade-offs to get more functionality than regular references provide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92542e5399f55f2d0ff6cb71cde0c802734b5a29" translate="yes" xml:space="preserve">
          <source>Causes compilation to fail with the given error message when encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c83c0817f92378b4d75b2046644ebe16e4eed6" translate="yes" xml:space="preserve">
          <source>Caution must be taken when calling methods on the mutable reference returned as extra writes could corrupt the output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09dbd187de708ee21b01806ae5b0ca883102654a" translate="yes" xml:space="preserve">
          <source>Caveat</source>
          <target state="translated">Caveat</target>
        </trans-unit>
        <trans-unit id="56c856e04a702792ee7494e4d85443fbf5d92c9a" translate="yes" xml:space="preserve">
          <source>Cebuano</source>
          <target state="translated">Cebuano</target>
        </trans-unit>
        <trans-unit id="4607bc7c42ac8db29bfc2cd922416f6e854c18d1" translate="yes" xml:space="preserve">
          <source>Cell</source>
          <target state="translated">Cell</target>
        </trans-unit>
        <trans-unit id="4df4ed628351791829257d94ad0813e5e3d83b52" translate="yes" xml:space="preserve">
          <source>Cell types come in two flavors: &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;. &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; implements interior mutability by moving values in and out of the &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt;. To use references instead of values, one must use the &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; type, acquiring a write lock before mutating. &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; provides methods to retrieve and change the current interior value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48dd4ef834e56adfbb68416a64e0663d8599a054" translate="yes" xml:space="preserve">
          <source>Cell::as_ptr</source>
          <target state="translated">Cell::as_ptr</target>
        </trans-unit>
        <trans-unit id="0d7e0163576e426d7859658d7cb27a5203e3e1ef" translate="yes" xml:space="preserve">
          <source>Cell::as_slice_of_cells</source>
          <target state="translated">Cell::as_slice_of_cells</target>
        </trans-unit>
        <trans-unit id="24ea70ddb05e0524feb5fd3207ac5f711dc6f0d6" translate="yes" xml:space="preserve">
          <source>Cell::borrow</source>
          <target state="translated">Cell::borrow</target>
        </trans-unit>
        <trans-unit id="0754f341aa2db7bbcf581590e062562f757b06c3" translate="yes" xml:space="preserve">
          <source>Cell::borrow_mut</source>
          <target state="translated">Cell::borrow_mut</target>
        </trans-unit>
        <trans-unit id="362ecb62fffb738daa64db7bf594fa17d89fa6cc" translate="yes" xml:space="preserve">
          <source>Cell::clamp</source>
          <target state="translated">Cell::clamp</target>
        </trans-unit>
        <trans-unit id="2d8b5d709a30aef00b0eb5b270932a33cefb07ed" translate="yes" xml:space="preserve">
          <source>Cell::clone</source>
          <target state="translated">Cell::clone</target>
        </trans-unit>
        <trans-unit id="e6e4ff9e5189a293d64401b67d88a8b34b3d688c" translate="yes" xml:space="preserve">
          <source>Cell::clone_from</source>
          <target state="translated">Cell::clone_from</target>
        </trans-unit>
        <trans-unit id="0067c8e07b34f5ca3bc31fe68cde3b73dd65c529" translate="yes" xml:space="preserve">
          <source>Cell::clone_into</source>
          <target state="translated">Cell::clone_into</target>
        </trans-unit>
        <trans-unit id="ac7c1813db60d3ceae267c09f1b49dd2d8b060bf" translate="yes" xml:space="preserve">
          <source>Cell::cmp</source>
          <target state="translated">Cell::cmp</target>
        </trans-unit>
        <trans-unit id="eda50fe388574d7abf640a426001e3d03601f41d" translate="yes" xml:space="preserve">
          <source>Cell::default</source>
          <target state="translated">Cell::default</target>
        </trans-unit>
        <trans-unit id="95e6d856a58cc93ea0ac0610c4cc4543b9fb6e6f" translate="yes" xml:space="preserve">
          <source>Cell::eq</source>
          <target state="translated">Cell::eq</target>
        </trans-unit>
        <trans-unit id="9e7be83b56c4210f928f8dbe23259025f457cf04" translate="yes" xml:space="preserve">
          <source>Cell::fmt</source>
          <target state="translated">Cell::fmt</target>
        </trans-unit>
        <trans-unit id="c5b19e87999d71a90010f9265c756a8dbae96476" translate="yes" xml:space="preserve">
          <source>Cell::from</source>
          <target state="translated">Cell::from</target>
        </trans-unit>
        <trans-unit id="80f18e414981b02746f88eace0ca9b124176cf67" translate="yes" xml:space="preserve">
          <source>Cell::from_mut</source>
          <target state="translated">Cell::from_mut</target>
        </trans-unit>
        <trans-unit id="d960fa542df3050b294ac84f74b949e7219ccb2b" translate="yes" xml:space="preserve">
          <source>Cell::ge</source>
          <target state="translated">Cell::ge</target>
        </trans-unit>
        <trans-unit id="b7460c43994cefee91fee8367e5b8ceb32898981" translate="yes" xml:space="preserve">
          <source>Cell::get</source>
          <target state="translated">Cell::get</target>
        </trans-unit>
        <trans-unit id="b45695950f375e64c97d0c097280c9717dbbc048" translate="yes" xml:space="preserve">
          <source>Cell::get_mut</source>
          <target state="translated">Cell::get_mut</target>
        </trans-unit>
        <trans-unit id="2d53cbf1d324ee13bc81c24edf43bb1ebb73c3ca" translate="yes" xml:space="preserve">
          <source>Cell::gt</source>
          <target state="translated">Cell::gt</target>
        </trans-unit>
        <trans-unit id="0bb6531752a904a7583ca649d5e49945b5da74a4" translate="yes" xml:space="preserve">
          <source>Cell::into</source>
          <target state="translated">Cell::into</target>
        </trans-unit>
        <trans-unit id="3ca0cfbf64ef6f411b4414cb205a6820ee159299" translate="yes" xml:space="preserve">
          <source>Cell::into_inner</source>
          <target state="translated">Cell::into_inner</target>
        </trans-unit>
        <trans-unit id="b53a5cf7d6e0b073abf65f1f5a2d742cc7522472" translate="yes" xml:space="preserve">
          <source>Cell::le</source>
          <target state="translated">Cell::le</target>
        </trans-unit>
        <trans-unit id="33e386853917e76a71dd993958193c136cc535c9" translate="yes" xml:space="preserve">
          <source>Cell::lt</source>
          <target state="translated">Cell::lt</target>
        </trans-unit>
        <trans-unit id="8f7d30714f46b5a562336654aa520be3afba7aea" translate="yes" xml:space="preserve">
          <source>Cell::max</source>
          <target state="translated">Cell::max</target>
        </trans-unit>
        <trans-unit id="ffce3ad84e2d0d3e65f16e561d54bf22f4f1273a" translate="yes" xml:space="preserve">
          <source>Cell::min</source>
          <target state="translated">Cell::min</target>
        </trans-unit>
        <trans-unit id="9e0082129811243cbfc2e92dd13a3da5a42c314f" translate="yes" xml:space="preserve">
          <source>Cell::ne</source>
          <target state="translated">Cell::ne</target>
        </trans-unit>
        <trans-unit id="7e0a9ead4a41cc5e68f27e5e44c6fd1cf21a7ebe" translate="yes" xml:space="preserve">
          <source>Cell::new</source>
          <target state="translated">Cell::new</target>
        </trans-unit>
        <trans-unit id="8169ff33cea54836ab5cb49e7aebdf6899f013c5" translate="yes" xml:space="preserve">
          <source>Cell::partial_cmp</source>
          <target state="translated">Cell::partial_cmp</target>
        </trans-unit>
        <trans-unit id="ce0f79c05450d6fd3fbaab2d277d00a9d025cc01" translate="yes" xml:space="preserve">
          <source>Cell::replace</source>
          <target state="translated">Cell::replace</target>
        </trans-unit>
        <trans-unit id="2217e7f92e883073d7cd8a327243f5598967f99a" translate="yes" xml:space="preserve">
          <source>Cell::set</source>
          <target state="translated">Cell::set</target>
        </trans-unit>
        <trans-unit id="ccb759e5d08ce2fe208250b4867c08119a5f9b1e" translate="yes" xml:space="preserve">
          <source>Cell::swap</source>
          <target state="translated">Cell::swap</target>
        </trans-unit>
        <trans-unit id="5b19592aa92ab3f1f864127a10aae71791a3475e" translate="yes" xml:space="preserve">
          <source>Cell::take</source>
          <target state="translated">Cell::take</target>
        </trans-unit>
        <trans-unit id="c24f65d0f1a9ef301e7874629928ae9b3a3db01e" translate="yes" xml:space="preserve">
          <source>Cell::to_owned</source>
          <target state="translated">Cell::to_owned</target>
        </trans-unit>
        <trans-unit id="135b1795234ded619836f1cb107c7715ee162c78" translate="yes" xml:space="preserve">
          <source>Cell::try_from</source>
          <target state="translated">Cell::try_from</target>
        </trans-unit>
        <trans-unit id="de09b934b071519838a8f1b2a0f0ea9fae735031" translate="yes" xml:space="preserve">
          <source>Cell::try_into</source>
          <target state="translated">Cell::try_into</target>
        </trans-unit>
        <trans-unit id="c35faebeed3694a09badc3c9d596e308d9fbf61d" translate="yes" xml:space="preserve">
          <source>Cell::type_id</source>
          <target state="translated">Cell::type_id</target>
        </trans-unit>
        <trans-unit id="a3a81a1cdc01f1b4e938ea98d168e1fbd18dc16a" translate="yes" xml:space="preserve">
          <source>Cell::update</source>
          <target state="translated">Cell::update</target>
        </trans-unit>
        <trans-unit id="b1a3416d2077c8bfcafca7b0ecd3f0cecbe10e55" translate="yes" xml:space="preserve">
          <source>Certain Rust types must be cast before passing them to a variadic function, because of arcane ABI rules dictated by the C standard. To fix the error, cast the value to the type specified by the error message (which you may need to import from &lt;code&gt;std::os::raw&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a045057bcf496c5138b4f260127b9c2a7520aaf9" translate="yes" xml:space="preserve">
          <source>Certain expressions will treat an expression as a place expression by implicitly borrowing it. For example, it is possible to compare two unsized &lt;a href=&quot;types/slice&quot;&gt;slices&lt;/a&gt; for equality directly, because the &lt;code&gt;==&lt;/code&gt; operator implicitly borrows it's operands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484b1c57d9aa3f200c281c83b5670a8b7511fe9c" translate="yes" xml:space="preserve">
          <source>Certain forms of expressions, called constant expressions, can be evaluated at compile time. In &lt;a href=&quot;const_eval#const-context&quot;&gt;const contexts&lt;/a&gt;, these are the only allowed expressions, and are always evaluated at compile time. In other places, such as &lt;a href=&quot;statements#let-statements&quot;&gt;let statements&lt;/a&gt;, constant expressions &lt;em&gt;may&lt;/em&gt; be, but are not guaranteed to be, evaluated at compile time. Behaviors such as out of bounds &lt;a href=&quot;expressions/array-expr#array-and-slice-indexing-expressions&quot;&gt;array indexing&lt;/a&gt; or &lt;a href=&quot;expressions/operator-expr#overflow&quot;&gt;overflow&lt;/a&gt; are compiler errors if the value must be evaluated at compile time (i.e. in const contexts). Otherwise, these behaviors are warnings, but will likely panic at run-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dfaa173bc2e54f4ea58a5a9aa47c2ef8348db1c" translate="yes" xml:space="preserve">
          <source>Certain types and traits that exist in &lt;a href=&quot;../std/index&quot;&gt;the standard library&lt;/a&gt; are known to the Rust compiler. This chapter documents the special features of these types and traits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81f3692d7cd234a9b91ed4f4582f15dd8290d89" translate="yes" xml:space="preserve">
          <source>Chain</source>
          <target state="translated">Chain</target>
        </trans-unit>
        <trans-unit id="1b82733f53155096fec9474c1ad8b318eda77f63" translate="yes" xml:space="preserve">
          <source>Chain::all</source>
          <target state="translated">Chain::all</target>
        </trans-unit>
        <trans-unit id="0213f0f3adde0927755a07f9788d3767a617008c" translate="yes" xml:space="preserve">
          <source>Chain::any</source>
          <target state="translated">Chain::any</target>
        </trans-unit>
        <trans-unit id="a37736f1183001064655ade18bb4f291f9bbc05f" translate="yes" xml:space="preserve">
          <source>Chain::borrow</source>
          <target state="translated">Chain::borrow</target>
        </trans-unit>
        <trans-unit id="30c74a10cbbb5860a6b1cc3fa07c6fae420cf772" translate="yes" xml:space="preserve">
          <source>Chain::borrow_mut</source>
          <target state="translated">Chain::borrow_mut</target>
        </trans-unit>
        <trans-unit id="98e80c0b0285eb5bed8081d7f4a2398e62e01164" translate="yes" xml:space="preserve">
          <source>Chain::by_ref</source>
          <target state="translated">Chain::by_ref</target>
        </trans-unit>
        <trans-unit id="014ba9f7ea2696f1d027c3b7edf3d3b4bfba780c" translate="yes" xml:space="preserve">
          <source>Chain::bytes</source>
          <target state="translated">Chain::bytes</target>
        </trans-unit>
        <trans-unit id="cb46642887ca107ccf47c86b009ac98c44fe1bb1" translate="yes" xml:space="preserve">
          <source>Chain::chain</source>
          <target state="translated">Chain::chain</target>
        </trans-unit>
        <trans-unit id="d649190519616be1098b4aaeedda898a20320409" translate="yes" xml:space="preserve">
          <source>Chain::clone</source>
          <target state="translated">Chain::clone</target>
        </trans-unit>
        <trans-unit id="1edc2ab6752846cd09954833abda07944f777091" translate="yes" xml:space="preserve">
          <source>Chain::clone_from</source>
          <target state="translated">Chain::clone_from</target>
        </trans-unit>
        <trans-unit id="91a283e7d90d1f8517c5fe0a616ffb63680c78dd" translate="yes" xml:space="preserve">
          <source>Chain::clone_into</source>
          <target state="translated">Chain::clone_into</target>
        </trans-unit>
        <trans-unit id="af3f639894e154771839a93b9eeb510892478d1d" translate="yes" xml:space="preserve">
          <source>Chain::cloned</source>
          <target state="translated">Chain::cloned</target>
        </trans-unit>
        <trans-unit id="e342d90f23a25722769803a71a3c7a41d7020d33" translate="yes" xml:space="preserve">
          <source>Chain::cmp</source>
          <target state="translated">Chain::cmp</target>
        </trans-unit>
        <trans-unit id="c40b71074beb3107222b57dd476d516685d9a814" translate="yes" xml:space="preserve">
          <source>Chain::collect</source>
          <target state="translated">Chain::collect</target>
        </trans-unit>
        <trans-unit id="ae59ce32fd7a895e6b358fc458a00de9bf286b94" translate="yes" xml:space="preserve">
          <source>Chain::consume</source>
          <target state="translated">Chain::consume</target>
        </trans-unit>
        <trans-unit id="b8e50ea8c9d017524df39290d83c69e9e2a51a4d" translate="yes" xml:space="preserve">
          <source>Chain::copied</source>
          <target state="translated">Chain::copied</target>
        </trans-unit>
        <trans-unit id="cd9311b802ad0325536aab1fd6cd80192eb46215" translate="yes" xml:space="preserve">
          <source>Chain::count</source>
          <target state="translated">Chain::count</target>
        </trans-unit>
        <trans-unit id="5ad362d803d4944ded3c4d762c17bbccb5b943d8" translate="yes" xml:space="preserve">
          <source>Chain::cycle</source>
          <target state="translated">Chain::cycle</target>
        </trans-unit>
        <trans-unit id="89b9fc633b4d9bad4ad9994e23fa6537d31a9bfe" translate="yes" xml:space="preserve">
          <source>Chain::enumerate</source>
          <target state="translated">Chain::enumerate</target>
        </trans-unit>
        <trans-unit id="180e0de0dc8eec2a7bdc65d124b4deaa9621dade" translate="yes" xml:space="preserve">
          <source>Chain::eq</source>
          <target state="translated">Chain::eq</target>
        </trans-unit>
        <trans-unit id="90fb1f503dc000cbeb702ddc9542d66d6f27b40a" translate="yes" xml:space="preserve">
          <source>Chain::fill_buf</source>
          <target state="translated">Chain::fill_buf</target>
        </trans-unit>
        <trans-unit id="7cd6e3916588ab5c5727bc3d3a336590d1072aa4" translate="yes" xml:space="preserve">
          <source>Chain::filter</source>
          <target state="translated">Chain::filter</target>
        </trans-unit>
        <trans-unit id="38214e980122efd0fe5c791b190cd4619909a035" translate="yes" xml:space="preserve">
          <source>Chain::filter_map</source>
          <target state="translated">Chain::filter_map</target>
        </trans-unit>
        <trans-unit id="81cbfc51ad38c6db54cfad1ff517d45952b9b3d0" translate="yes" xml:space="preserve">
          <source>Chain::find</source>
          <target state="translated">Chain::find</target>
        </trans-unit>
        <trans-unit id="05112babeaddc2aab7fea187237423466d3bda92" translate="yes" xml:space="preserve">
          <source>Chain::find_map</source>
          <target state="translated">Chain::find_map</target>
        </trans-unit>
        <trans-unit id="cb89312f759b77745bd448b460dfea67edf57dc9" translate="yes" xml:space="preserve">
          <source>Chain::flat_map</source>
          <target state="translated">Chain::flat_map</target>
        </trans-unit>
        <trans-unit id="5b5166df3a4c1a9c567f1e50cab2ccb06cfc6059" translate="yes" xml:space="preserve">
          <source>Chain::flatten</source>
          <target state="translated">Chain::flatten</target>
        </trans-unit>
        <trans-unit id="dc468132a5dbaa36bf7ee409bee6fb579af3b60a" translate="yes" xml:space="preserve">
          <source>Chain::fmt</source>
          <target state="translated">Chain::fmt</target>
        </trans-unit>
        <trans-unit id="66eb326b5ed011659ff56b1d9808851a76bf9c24" translate="yes" xml:space="preserve">
          <source>Chain::fold</source>
          <target state="translated">Chain::fold</target>
        </trans-unit>
        <trans-unit id="13981f9c65901acd06a7055e10c4721967d02a55" translate="yes" xml:space="preserve">
          <source>Chain::for_each</source>
          <target state="translated">Chain::for_each</target>
        </trans-unit>
        <trans-unit id="f89896ffb04c61d14f4d8e32078eb5ba456abd1e" translate="yes" xml:space="preserve">
          <source>Chain::from</source>
          <target state="translated">Chain::from</target>
        </trans-unit>
        <trans-unit id="33fbc1e11907581323cf04fff2c01ec64f9dbbf7" translate="yes" xml:space="preserve">
          <source>Chain::fuse</source>
          <target state="translated">Chain::fuse</target>
        </trans-unit>
        <trans-unit id="0f64597461d1060870a5357d58955c23fb1f9117" translate="yes" xml:space="preserve">
          <source>Chain::ge</source>
          <target state="translated">Chain::ge</target>
        </trans-unit>
        <trans-unit id="665bf2eeb76a66698512864c346032a25f289ba5" translate="yes" xml:space="preserve">
          <source>Chain::get_mut</source>
          <target state="translated">Chain::get_mut</target>
        </trans-unit>
        <trans-unit id="4febd13e77ca8221618081266a9f088e0d5d3995" translate="yes" xml:space="preserve">
          <source>Chain::get_ref</source>
          <target state="translated">Chain::get_ref</target>
        </trans-unit>
        <trans-unit id="615dcf373549546bb720132ec1e9a4902588cca2" translate="yes" xml:space="preserve">
          <source>Chain::gt</source>
          <target state="translated">Chain::gt</target>
        </trans-unit>
        <trans-unit id="69fc66220e86b279145edc65e175ea2d6980c57c" translate="yes" xml:space="preserve">
          <source>Chain::initializer</source>
          <target state="translated">Chain::initializer</target>
        </trans-unit>
        <trans-unit id="0a1e0d24c6b6afc911808b40fdff23263748e294" translate="yes" xml:space="preserve">
          <source>Chain::inspect</source>
          <target state="translated">Chain::inspect</target>
        </trans-unit>
        <trans-unit id="d4a576504ea88f9480b480179ad285d5e1e00385" translate="yes" xml:space="preserve">
          <source>Chain::into</source>
          <target state="translated">Chain::into</target>
        </trans-unit>
        <trans-unit id="92065c6bef39f1ef48972714ba0f3e5cd126ba1b" translate="yes" xml:space="preserve">
          <source>Chain::into_inner</source>
          <target state="translated">Chain::into_inner</target>
        </trans-unit>
        <trans-unit id="bf6ab9275f6118b08a7f5a91653d3dcbaf3ed5ba" translate="yes" xml:space="preserve">
          <source>Chain::into_iter</source>
          <target state="translated">Chain::into_iter</target>
        </trans-unit>
        <trans-unit id="c62c114b95762caa21916b3f015139588c68e999" translate="yes" xml:space="preserve">
          <source>Chain::is_sorted</source>
          <target state="translated">Chain::is_sorted</target>
        </trans-unit>
        <trans-unit id="c23e7b865b9e334142fa9cd78cf3ef1645f1d616" translate="yes" xml:space="preserve">
          <source>Chain::is_sorted_by</source>
          <target state="translated">Chain::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="3c86fbc00842bab5b2512cc85760975526d63a19" translate="yes" xml:space="preserve">
          <source>Chain::is_sorted_by_key</source>
          <target state="translated">Chain::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="3f3ae826a531d9687e1ed33e30f7c927bf648e82" translate="yes" xml:space="preserve">
          <source>Chain::last</source>
          <target state="translated">Chain::last</target>
        </trans-unit>
        <trans-unit id="fd920cdbfdd6ca73353eabfbc8f44c55b1ed7d89" translate="yes" xml:space="preserve">
          <source>Chain::le</source>
          <target state="translated">Chain::le</target>
        </trans-unit>
        <trans-unit id="ed5fe64d8040fd6d1d7884275a33a1b1afc69c38" translate="yes" xml:space="preserve">
          <source>Chain::lines</source>
          <target state="translated">Chain::lines</target>
        </trans-unit>
        <trans-unit id="5d6129cf51f59250b00a299b799af8d9c3f313ff" translate="yes" xml:space="preserve">
          <source>Chain::lt</source>
          <target state="translated">Chain::lt</target>
        </trans-unit>
        <trans-unit id="e6a0ebd53d317e00fc62638391c26e09349c8adc" translate="yes" xml:space="preserve">
          <source>Chain::map</source>
          <target state="translated">Chain::map</target>
        </trans-unit>
        <trans-unit id="68cb6ab3b8776fb82ba6fc36db0271f891cd86ff" translate="yes" xml:space="preserve">
          <source>Chain::max</source>
          <target state="translated">Chain::max</target>
        </trans-unit>
        <trans-unit id="8ad354b6c1e4d2915371673d235e079a10b255fa" translate="yes" xml:space="preserve">
          <source>Chain::max_by</source>
          <target state="translated">Chain::max_by</target>
        </trans-unit>
        <trans-unit id="4771cb53ae25e84c2b3fbdedaf3f7a7d8792cf84" translate="yes" xml:space="preserve">
          <source>Chain::max_by_key</source>
          <target state="translated">Chain::max_by_key</target>
        </trans-unit>
        <trans-unit id="381a44c7dfda059ee3af86d3f2ce67ce9fc3cc0a" translate="yes" xml:space="preserve">
          <source>Chain::min</source>
          <target state="translated">Chain::min</target>
        </trans-unit>
        <trans-unit id="224e48329264cff5ddb9bba2916e4044938563dd" translate="yes" xml:space="preserve">
          <source>Chain::min_by</source>
          <target state="translated">Chain::min_by</target>
        </trans-unit>
        <trans-unit id="8e519b741138a48996b12aa0bef340998d65a166" translate="yes" xml:space="preserve">
          <source>Chain::min_by_key</source>
          <target state="translated">Chain::min_by_key</target>
        </trans-unit>
        <trans-unit id="0f1e85e6bf4b824117a13dab3714072f0d07e383" translate="yes" xml:space="preserve">
          <source>Chain::ne</source>
          <target state="translated">Chain::ne</target>
        </trans-unit>
        <trans-unit id="61c3b1c7122626db5a0c62d2538b897315b62c9a" translate="yes" xml:space="preserve">
          <source>Chain::next</source>
          <target state="translated">Chain::next</target>
        </trans-unit>
        <trans-unit id="6b874bd0ff0b41d0ca43e6437dc52d64d6ebcb8e" translate="yes" xml:space="preserve">
          <source>Chain::next_back</source>
          <target state="translated">Chain::next_back</target>
        </trans-unit>
        <trans-unit id="038918f8a551b65fa1d179fcb6e1caf401927515" translate="yes" xml:space="preserve">
          <source>Chain::nth</source>
          <target state="translated">Chain::nth</target>
        </trans-unit>
        <trans-unit id="32b2c491901513f373fc2b64bd481227fca6c6e3" translate="yes" xml:space="preserve">
          <source>Chain::nth_back</source>
          <target state="translated">Chain::nth_back</target>
        </trans-unit>
        <trans-unit id="c50e4fa9ce495c6c72d03dd2358f5d8c97f2f631" translate="yes" xml:space="preserve">
          <source>Chain::partial_cmp</source>
          <target state="translated">Chain::partial_cmp</target>
        </trans-unit>
        <trans-unit id="57d8a7e321cdc85718596c418d6dca1a4d09ef4e" translate="yes" xml:space="preserve">
          <source>Chain::partition</source>
          <target state="translated">Chain::partition</target>
        </trans-unit>
        <trans-unit id="594658cc41013289c194b90ad67aa99e032546ce" translate="yes" xml:space="preserve">
          <source>Chain::peekable</source>
          <target state="translated">Chain::peekable</target>
        </trans-unit>
        <trans-unit id="0bf900c2572e63f7c84fd0e43ae4a4e0e18d63a0" translate="yes" xml:space="preserve">
          <source>Chain::position</source>
          <target state="translated">Chain::position</target>
        </trans-unit>
        <trans-unit id="b102c811470d874773804b4d51dc3351bca7f303" translate="yes" xml:space="preserve">
          <source>Chain::product</source>
          <target state="translated">Chain::product</target>
        </trans-unit>
        <trans-unit id="14506f04af639fa99d54aa64b5fcfe4d211942a1" translate="yes" xml:space="preserve">
          <source>Chain::read</source>
          <target state="translated">Chain::read</target>
        </trans-unit>
        <trans-unit id="7b52a243a141d4a7496a1af726d77d750537c080" translate="yes" xml:space="preserve">
          <source>Chain::read_exact</source>
          <target state="translated">Chain::read_exact</target>
        </trans-unit>
        <trans-unit id="302184a4fd8efd550f088331cc949e7e2f34e06b" translate="yes" xml:space="preserve">
          <source>Chain::read_line</source>
          <target state="translated">Chain::read_line</target>
        </trans-unit>
        <trans-unit id="65733d73e4097dcc3afdbb937efed9028ed269cd" translate="yes" xml:space="preserve">
          <source>Chain::read_to_end</source>
          <target state="translated">Chain::read_to_end</target>
        </trans-unit>
        <trans-unit id="ff966f9b9dc533871f0548dbe9f4da1d008289c5" translate="yes" xml:space="preserve">
          <source>Chain::read_to_string</source>
          <target state="translated">Chain::read_to_string</target>
        </trans-unit>
        <trans-unit id="1a7df76576c52d8842f4ee97a42bdfa2ae2c9dc8" translate="yes" xml:space="preserve">
          <source>Chain::read_until</source>
          <target state="translated">Chain::read_until</target>
        </trans-unit>
        <trans-unit id="72a0d8b48b25c3059a22896cdbe4aac9e7ff581d" translate="yes" xml:space="preserve">
          <source>Chain::read_vectored</source>
          <target state="translated">Chain::read_vectored</target>
        </trans-unit>
        <trans-unit id="8edaa647ad56e16ca6d15ac6eefbe9953b95642d" translate="yes" xml:space="preserve">
          <source>Chain::rev</source>
          <target state="translated">Chain::rev</target>
        </trans-unit>
        <trans-unit id="54e788a55ebb82a5ee4c7e393aa70648e862df58" translate="yes" xml:space="preserve">
          <source>Chain::rfind</source>
          <target state="translated">Chain::rfind</target>
        </trans-unit>
        <trans-unit id="616ca6e2078e5c8d0f88469aed7d25f49374936b" translate="yes" xml:space="preserve">
          <source>Chain::rfold</source>
          <target state="translated">Chain::rfold</target>
        </trans-unit>
        <trans-unit id="465600d6772d7053c88fdfdd0b451abd3c9fbac3" translate="yes" xml:space="preserve">
          <source>Chain::rposition</source>
          <target state="translated">Chain::rposition</target>
        </trans-unit>
        <trans-unit id="452ca349485e8bfc7449ee7c3ee4d10ccfc99cab" translate="yes" xml:space="preserve">
          <source>Chain::scan</source>
          <target state="translated">Chain::scan</target>
        </trans-unit>
        <trans-unit id="ed535e1e9fb01de6877512f454d84178a076b7c5" translate="yes" xml:space="preserve">
          <source>Chain::size_hint</source>
          <target state="translated">Chain::size_hint</target>
        </trans-unit>
        <trans-unit id="0b03ec3293cb2c174f53942d9c30df6a3f9bf4fd" translate="yes" xml:space="preserve">
          <source>Chain::skip</source>
          <target state="translated">Chain::skip</target>
        </trans-unit>
        <trans-unit id="6ef40fa9b4f8bf452c925afc2ac976673bb0370c" translate="yes" xml:space="preserve">
          <source>Chain::skip_while</source>
          <target state="translated">Chain::skip_while</target>
        </trans-unit>
        <trans-unit id="716e7f2b3466f192f283908163a5d9ba2213bb49" translate="yes" xml:space="preserve">
          <source>Chain::split</source>
          <target state="translated">Chain::split</target>
        </trans-unit>
        <trans-unit id="83733089b1a5c36f3f1b1c8a77647f06218bd992" translate="yes" xml:space="preserve">
          <source>Chain::step_by</source>
          <target state="translated">Chain::step_by</target>
        </trans-unit>
        <trans-unit id="4d17227d47c7b2b7736cae05d4955282bcbe9400" translate="yes" xml:space="preserve">
          <source>Chain::sum</source>
          <target state="translated">Chain::sum</target>
        </trans-unit>
        <trans-unit id="c3e98ad87f62ad9c551eb491befe942a7a75b2ac" translate="yes" xml:space="preserve">
          <source>Chain::take</source>
          <target state="translated">Chain::take</target>
        </trans-unit>
        <trans-unit id="d7e5fa70bbbc6fcf8ae553d9d4f54c68738a577a" translate="yes" xml:space="preserve">
          <source>Chain::take_while</source>
          <target state="translated">Chain::take_while</target>
        </trans-unit>
        <trans-unit id="b373f4426edc7e4207d02964236dc0d5163c3a31" translate="yes" xml:space="preserve">
          <source>Chain::to_owned</source>
          <target state="translated">Chain::to_owned</target>
        </trans-unit>
        <trans-unit id="faa45040ecdf4b085456e15bae1b74843340e880" translate="yes" xml:space="preserve">
          <source>Chain::try_fold</source>
          <target state="translated">Chain::try_fold</target>
        </trans-unit>
        <trans-unit id="133cd86be1a4e066f53f0d212f48a297e48fe142" translate="yes" xml:space="preserve">
          <source>Chain::try_for_each</source>
          <target state="translated">Chain::try_for_each</target>
        </trans-unit>
        <trans-unit id="fe8a5b4042b09556dbff881a55e123991b66d041" translate="yes" xml:space="preserve">
          <source>Chain::try_from</source>
          <target state="translated">Chain::try_from</target>
        </trans-unit>
        <trans-unit id="071cb829aee3b1825f5a5c43d066c9a3fecb6ba6" translate="yes" xml:space="preserve">
          <source>Chain::try_into</source>
          <target state="translated">Chain::try_into</target>
        </trans-unit>
        <trans-unit id="2304c98b6614021a735c406442d8a00a711e3f97" translate="yes" xml:space="preserve">
          <source>Chain::try_rfold</source>
          <target state="translated">Chain::try_rfold</target>
        </trans-unit>
        <trans-unit id="28a8ffe46c6bc453afdb747b772076551e4079a0" translate="yes" xml:space="preserve">
          <source>Chain::type_id</source>
          <target state="translated">Chain::type_id</target>
        </trans-unit>
        <trans-unit id="b1b7567abf27b702ebe8dd05b1ce2679d3f03dfa" translate="yes" xml:space="preserve">
          <source>Chain::unzip</source>
          <target state="translated">Chain::unzip</target>
        </trans-unit>
        <trans-unit id="ec65cf6ebb8491b38b103ac0b4fed46d5ed9ee66" translate="yes" xml:space="preserve">
          <source>Chain::zip</source>
          <target state="translated">Chain::zip</target>
        </trans-unit>
        <trans-unit id="748ceba5bff91e541e8a756ec7457ef0763a96ac" translate="yes" xml:space="preserve">
          <source>Chaining together with another iterator. Let's say that we want to iterate over each file of the &lt;code&gt;.foo&lt;/code&gt; directory, but also a configuration file, &lt;code&gt;.foorc&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1afeff88ef4e9f436f6d94c27bd915a3465dc3" translate="yes" xml:space="preserve">
          <source>Chains the ordering with the given function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa038f72fc2d0c1b67b006ff527931d7f084821" translate="yes" xml:space="preserve">
          <source>Chains two orderings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e778b67df6fc38c30c1ff7251080ec9db05df79" translate="yes" xml:space="preserve">
          <source>Change &lt;code&gt;ThreadPool&lt;/code&gt; to hold a vector of &lt;code&gt;Worker&lt;/code&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba420d07a0e41b02491d6e59d0ad42e5818a029" translate="yes" xml:space="preserve">
          <source>Change calls to &lt;code&gt;unwrap&lt;/code&gt; to more robust error handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c94b13aae0d9952f74eca6bcdd8ad156e66048c" translate="yes" xml:space="preserve">
          <source>Change this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8218f6e380263f9e5b2bac2c18e9c764a3d9111d" translate="yes" xml:space="preserve">
          <source>Change your code so the warning does no longer trigger. For backwards compatibility, this unsound code may still compile (with a warning) right now. However, at some point in the future, the compiler will no longer accept this code and will throw a hard error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c63d0e6eb2e83b8cfd1e4ed02f95b39b503dd7" translate="yes" xml:space="preserve">
          <source>Changes the IP address associated with this socket address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bce5cfed46fd217fc9a7e95b2bf76139cbcca09" translate="yes" xml:space="preserve">
          <source>Changes the current working directory to the specified path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ab9d9d444bfb60048e9c4fece991905d4d1e86" translate="yes" xml:space="preserve">
          <source>Changes the error value of this &lt;code&gt;Poll&lt;/code&gt; with the closure provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0894eebb4c57f7024798d2e982313f80048e999c" translate="yes" xml:space="preserve">
          <source>Changes the flow information associated with this socket address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9993ddf13f81ad8923d2fa35426c9a955c5b81" translate="yes" xml:space="preserve">
          <source>Changes the permissions found on a file or a directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61711d1fe8d75e55f64d975c4dce683ca8cb8280" translate="yes" xml:space="preserve">
          <source>Changes the permissions on the underlying file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408bb0a68e350e78c9beed91c6ebd7c0f8e579c7" translate="yes" xml:space="preserve">
          <source>Changes the port number associated with this socket address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75710c0ecb185bcb6900007274a6a69b1ebee627" translate="yes" xml:space="preserve">
          <source>Changes the ready value of this &lt;code&gt;Poll&lt;/code&gt; with the closure provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55faf8715d899d564c8282fa041515429baa40e6" translate="yes" xml:space="preserve">
          <source>Changes the scope ID associated with this socket address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4c7d1363d3773530b37d140a46e1672de67741" translate="yes" xml:space="preserve">
          <source>Changes the success value of this &lt;code&gt;Poll&lt;/code&gt; with the closure provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f60265c7d64466c0f8fb8e720ccaaeac9dc69c" translate="yes" xml:space="preserve">
          <source>Channels and Ownership Transference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e141060577fc1ffdfcb3314987d4c83fff4a4f32" translate="yes" xml:space="preserve">
          <source>Chapter 1 explains how to install Rust, how to write a Hello, world! program, and how to use Cargo, Rust&amp;rsquo;s package manager and build tool. Chapter 2 is a hands-on introduction to the Rust language. Here we cover concepts at a high level, and later chapters will provide additional detail. If you want to get your hands dirty right away, Chapter 2 is the place for that. At first, you might even want to skip Chapter 3, which covers Rust features similar to those of other programming languages, and head straight to Chapter 4 to learn about Rust&amp;rsquo;s ownership system. However, if you&amp;rsquo;re a particularly meticulous learner who prefers to learn every detail before moving on to the next, you might want to skip Chapter 2 and go straight to Chapter 3, returning to Chapter 2 when you&amp;rsquo;d like to work on a project applying the details you&amp;rsquo;ve learned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4a4c0c5c058918fb9c43359faa406f18687d83" translate="yes" xml:space="preserve">
          <source>Chapter 10 digs into generics, traits, and lifetimes, which give you the power to define code that applies to multiple types. Chapter 11 is all about testing, which even with Rust&amp;rsquo;s safety guarantees is necessary to ensure your program&amp;rsquo;s logic is correct. In Chapter 12, we&amp;rsquo;ll build our own implementation of a subset of functionality from the &lt;code&gt;grep&lt;/code&gt; command line tool that searches for text within files. For this, we&amp;rsquo;ll use many of the concepts we discussed in the previous chapters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95d863c86889b972ff474802eee7694178add17" translate="yes" xml:space="preserve">
          <source>Chapter 10 has new sections titled &amp;ldquo;Traits as Parameters&amp;rdquo; and &amp;ldquo;Returning Types that Implement Traits&amp;rdquo; that explain the new &lt;code&gt;impl Trait&lt;/code&gt; syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c825c90d9bd44cae9d713ef783d540535fa1068" translate="yes" xml:space="preserve">
          <source>Chapter 11 has a new section titled &amp;ldquo;Using &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; in Tests&amp;rdquo; that shows how to write tests that use the &lt;code&gt;?&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272194055c04afdb04bea3693656526567f6cd6d" translate="yes" xml:space="preserve">
          <source>Chapter 13 explores closures and iterators: features of Rust that come from functional programming languages. In Chapter 14, we&amp;rsquo;ll examine Cargo in more depth and talk about best practices for sharing your libraries with others. Chapter 15 discusses smart pointers that the standard library provides and the traits that enable their functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335638665cd539d111c6df41a4bded7a86d288c2" translate="yes" xml:space="preserve">
          <source>Chapter 18 is a reference on patterns and pattern matching, which are powerful ways of expressing ideas throughout Rust programs. Chapter 19 contains a smorgasbord of advanced topics of interest, including unsafe Rust, macros, and more about lifetimes, traits, types, functions, and closures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cacfb78cb44d1121da023e8f6353824bcd7442f7" translate="yes" xml:space="preserve">
          <source>Chapter 5 discusses structs and methods, and Chapter 6 covers enums, &lt;code&gt;match&lt;/code&gt; expressions, and the &lt;code&gt;if let&lt;/code&gt; control flow construct. You&amp;rsquo;ll use structs and enums to make custom types in Rust.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a7f257641d151b9665f79649bdc602c003ca9a" translate="yes" xml:space="preserve">
          <source>Chapter 7, &amp;ldquo;Managing Growing Projects with Packages, Crates, and Modules,&amp;rdquo; has been mostly rewritten. The module system and the way paths work in the 2018 Edition were made more consistent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e1b514f4229ff09bc2fc133975c58e9f1311b1" translate="yes" xml:space="preserve">
          <source>Chapters that informally describe each language construct and their use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5931610305cf738b147b070e0328e9e0416733f3" translate="yes" xml:space="preserve">
          <source>Chapters that informally describe the memory model, concurrency model, runtime services, linkage model and debugging facilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d8ff35909d619e1e155e2a5affc66dfe8c2ec06" translate="yes" xml:space="preserve">
          <source>CharIndices</source>
          <target state="translated">CharIndices</target>
        </trans-unit>
        <trans-unit id="d95c75da9358378de2a1b053637768df967a6f31" translate="yes" xml:space="preserve">
          <source>CharIndices::all</source>
          <target state="translated">CharIndices::all</target>
        </trans-unit>
        <trans-unit id="d830b39dff1b294a60ea911d5b74bdca9e0dfbf0" translate="yes" xml:space="preserve">
          <source>CharIndices::any</source>
          <target state="translated">CharIndices::any</target>
        </trans-unit>
        <trans-unit id="3b8d54005fde4e7ee8fcb9a25c7d8001a81864ed" translate="yes" xml:space="preserve">
          <source>CharIndices::as_str</source>
          <target state="translated">CharIndices::as_str</target>
        </trans-unit>
        <trans-unit id="66672b4006d0a3ba8b4a5ad5acb4f63bf7f10323" translate="yes" xml:space="preserve">
          <source>CharIndices::borrow</source>
          <target state="translated">CharIndices::borrow</target>
        </trans-unit>
        <trans-unit id="202893e490a72fd403a08936003376ab8f42bcfe" translate="yes" xml:space="preserve">
          <source>CharIndices::borrow_mut</source>
          <target state="translated">CharIndices::borrow_mut</target>
        </trans-unit>
        <trans-unit id="54926a64b10ae65fb9a895ffc07b62d303d981fa" translate="yes" xml:space="preserve">
          <source>CharIndices::by_ref</source>
          <target state="translated">CharIndices::by_ref</target>
        </trans-unit>
        <trans-unit id="f63369912b55caadda95543738dbdbfd2a825232" translate="yes" xml:space="preserve">
          <source>CharIndices::chain</source>
          <target state="translated">CharIndices::chain</target>
        </trans-unit>
        <trans-unit id="88fa501742bf8af2468e36b43c7cfc05320cea02" translate="yes" xml:space="preserve">
          <source>CharIndices::clone</source>
          <target state="translated">CharIndices::clone</target>
        </trans-unit>
        <trans-unit id="e963d55f4bcdab8bba0b99670a953ebe7da603c9" translate="yes" xml:space="preserve">
          <source>CharIndices::clone_from</source>
          <target state="translated">CharIndices::clone_from</target>
        </trans-unit>
        <trans-unit id="71575257755bcb84e7d982bc57d477dbf5697303" translate="yes" xml:space="preserve">
          <source>CharIndices::clone_into</source>
          <target state="translated">CharIndices::clone_into</target>
        </trans-unit>
        <trans-unit id="2cfc720d0911b2e7473887224dc90faa22acb3f7" translate="yes" xml:space="preserve">
          <source>CharIndices::cloned</source>
          <target state="translated">CharIndices::cloned</target>
        </trans-unit>
        <trans-unit id="618ba6e23e03cf10749a2d53bb81b69780e03dbe" translate="yes" xml:space="preserve">
          <source>CharIndices::cmp</source>
          <target state="translated">CharIndices::cmp</target>
        </trans-unit>
        <trans-unit id="181cdecb116804c13771fa8a297adc252db5fb6c" translate="yes" xml:space="preserve">
          <source>CharIndices::collect</source>
          <target state="translated">CharIndices::collect</target>
        </trans-unit>
        <trans-unit id="4299db8cb0d1de53b11af02200112164a52417ff" translate="yes" xml:space="preserve">
          <source>CharIndices::copied</source>
          <target state="translated">CharIndices::copied</target>
        </trans-unit>
        <trans-unit id="bf4cba553eaf4e8a09ab275684988b273c286703" translate="yes" xml:space="preserve">
          <source>CharIndices::count</source>
          <target state="translated">CharIndices::count</target>
        </trans-unit>
        <trans-unit id="9f7e63d42530e697cf96649c600ecdb3425ac7cf" translate="yes" xml:space="preserve">
          <source>CharIndices::cycle</source>
          <target state="translated">CharIndices::cycle</target>
        </trans-unit>
        <trans-unit id="231db685b9f206969adeb00c11054afacb6bf3c7" translate="yes" xml:space="preserve">
          <source>CharIndices::enumerate</source>
          <target state="translated">CharIndices::enumerate</target>
        </trans-unit>
        <trans-unit id="fe03f80e25520c1008efa97187b7d78a458b331f" translate="yes" xml:space="preserve">
          <source>CharIndices::eq</source>
          <target state="translated">CharIndices::eq</target>
        </trans-unit>
        <trans-unit id="105c244bfde08c6c1e4a761ba347c8f13eb82797" translate="yes" xml:space="preserve">
          <source>CharIndices::filter</source>
          <target state="translated">CharIndices::filter</target>
        </trans-unit>
        <trans-unit id="bcd72ec35162455a98e0ef690981a7923d307a4f" translate="yes" xml:space="preserve">
          <source>CharIndices::filter_map</source>
          <target state="translated">CharIndices::filter_map</target>
        </trans-unit>
        <trans-unit id="463e3691e7440e9532182ab4d1c7175f46d2221d" translate="yes" xml:space="preserve">
          <source>CharIndices::find</source>
          <target state="translated">CharIndices::find</target>
        </trans-unit>
        <trans-unit id="8039fc2d7c94fc4027372430f01719b9b024d9f4" translate="yes" xml:space="preserve">
          <source>CharIndices::find_map</source>
          <target state="translated">CharIndices::find_map</target>
        </trans-unit>
        <trans-unit id="97730d64c830bd6689bbf54c1ae36047e30a9345" translate="yes" xml:space="preserve">
          <source>CharIndices::flat_map</source>
          <target state="translated">CharIndices::flat_map</target>
        </trans-unit>
        <trans-unit id="d333bbcd29a0397bf5df640ee7e595a0611c651e" translate="yes" xml:space="preserve">
          <source>CharIndices::flatten</source>
          <target state="translated">CharIndices::flatten</target>
        </trans-unit>
        <trans-unit id="15dcdffd3d343e149db1aaf18b45a5d57ea4a84a" translate="yes" xml:space="preserve">
          <source>CharIndices::fmt</source>
          <target state="translated">CharIndices::fmt</target>
        </trans-unit>
        <trans-unit id="d70d3e12984e4ef05d40889c61a896823b4f4068" translate="yes" xml:space="preserve">
          <source>CharIndices::fold</source>
          <target state="translated">CharIndices::fold</target>
        </trans-unit>
        <trans-unit id="d244e01e70842f17b9cf3bf846e6101827411b2c" translate="yes" xml:space="preserve">
          <source>CharIndices::for_each</source>
          <target state="translated">CharIndices::for_each</target>
        </trans-unit>
        <trans-unit id="e7668f1f7e7abf7df942b353d648715bfe87b087" translate="yes" xml:space="preserve">
          <source>CharIndices::from</source>
          <target state="translated">CharIndices::from</target>
        </trans-unit>
        <trans-unit id="586e881e70d85b542f49b17229c1797b1d7e1e6b" translate="yes" xml:space="preserve">
          <source>CharIndices::fuse</source>
          <target state="translated">CharIndices::fuse</target>
        </trans-unit>
        <trans-unit id="af52655d27c378c29b28bb1df9c98558899bac0f" translate="yes" xml:space="preserve">
          <source>CharIndices::ge</source>
          <target state="translated">CharIndices::ge</target>
        </trans-unit>
        <trans-unit id="23a26cd8ccee0e4108e45c6594ed474151623109" translate="yes" xml:space="preserve">
          <source>CharIndices::gt</source>
          <target state="translated">CharIndices::gt</target>
        </trans-unit>
        <trans-unit id="8bf302521d997e69f09178ee9710e0f5ad04e454" translate="yes" xml:space="preserve">
          <source>CharIndices::inspect</source>
          <target state="translated">CharIndices::inspect</target>
        </trans-unit>
        <trans-unit id="6abc7c4e8c4b55c070be92e904f927e74dcbd8aa" translate="yes" xml:space="preserve">
          <source>CharIndices::into</source>
          <target state="translated">CharIndices::into</target>
        </trans-unit>
        <trans-unit id="ffe683f100af03e7b4662ead21e90db87e2021cd" translate="yes" xml:space="preserve">
          <source>CharIndices::into_iter</source>
          <target state="translated">CharIndices::into_iter</target>
        </trans-unit>
        <trans-unit id="7f6f26057fb9afa3a78f6e5633789f9328ffda63" translate="yes" xml:space="preserve">
          <source>CharIndices::is_sorted</source>
          <target state="translated">CharIndices::is_sorted</target>
        </trans-unit>
        <trans-unit id="33b187e6de6e9f7a0aade1214de316f9ed9c3895" translate="yes" xml:space="preserve">
          <source>CharIndices::is_sorted_by</source>
          <target state="translated">CharIndices::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="cce09e567dc9e397ae4404fd5d90435c8d1c2ba9" translate="yes" xml:space="preserve">
          <source>CharIndices::is_sorted_by_key</source>
          <target state="translated">CharIndices::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="80fbb41d402a28ad0bd79c7e476749c04e4edb6c" translate="yes" xml:space="preserve">
          <source>CharIndices::last</source>
          <target state="translated">CharIndices::last</target>
        </trans-unit>
        <trans-unit id="586333fe28be8257a76a9bf9903f3bf196bb4676" translate="yes" xml:space="preserve">
          <source>CharIndices::le</source>
          <target state="translated">CharIndices::le</target>
        </trans-unit>
        <trans-unit id="e19474bedbf5a57e14cb4ac670eae859d4c8118a" translate="yes" xml:space="preserve">
          <source>CharIndices::lt</source>
          <target state="translated">CharIndices::lt</target>
        </trans-unit>
        <trans-unit id="46df42228a03362f79967ca336c9ac738aba784b" translate="yes" xml:space="preserve">
          <source>CharIndices::map</source>
          <target state="translated">CharIndices::map</target>
        </trans-unit>
        <trans-unit id="894db9222daf188dd94873ccade1add30d833f85" translate="yes" xml:space="preserve">
          <source>CharIndices::max</source>
          <target state="translated">CharIndices::max</target>
        </trans-unit>
        <trans-unit id="d59a0e2ac8cc8435a0083ab0ce4bb832fbb765eb" translate="yes" xml:space="preserve">
          <source>CharIndices::max_by</source>
          <target state="translated">CharIndices::max_by</target>
        </trans-unit>
        <trans-unit id="ed44ee485fe63206c34f53dbecf3e4f6325dad33" translate="yes" xml:space="preserve">
          <source>CharIndices::max_by_key</source>
          <target state="translated">CharIndices::max_by_key</target>
        </trans-unit>
        <trans-unit id="939c88a825e2a4afdcbeb1b82219e9bba318dc99" translate="yes" xml:space="preserve">
          <source>CharIndices::min</source>
          <target state="translated">CharIndices::min</target>
        </trans-unit>
        <trans-unit id="78b324bf19c724109aec99b684423eaf80970026" translate="yes" xml:space="preserve">
          <source>CharIndices::min_by</source>
          <target state="translated">CharIndices::min_by</target>
        </trans-unit>
        <trans-unit id="9c47d1f8d6e8ae30c3d32cdff6fc3d702ba31de3" translate="yes" xml:space="preserve">
          <source>CharIndices::min_by_key</source>
          <target state="translated">CharIndices::min_by_key</target>
        </trans-unit>
        <trans-unit id="eb5a3bb43e05804e9371580a57c30846a9b2a84b" translate="yes" xml:space="preserve">
          <source>CharIndices::ne</source>
          <target state="translated">CharIndices::ne</target>
        </trans-unit>
        <trans-unit id="0a46827b0511bfffa73036c46cf94c2f050c8168" translate="yes" xml:space="preserve">
          <source>CharIndices::next</source>
          <target state="translated">CharIndices::next</target>
        </trans-unit>
        <trans-unit id="f4f9efa09d57f2e61bcb261a8be36ad80bbced76" translate="yes" xml:space="preserve">
          <source>CharIndices::next_back</source>
          <target state="translated">CharIndices::next_back</target>
        </trans-unit>
        <trans-unit id="cc2d6ee5d5210abf5e5a95dc331fc376a184b857" translate="yes" xml:space="preserve">
          <source>CharIndices::nth</source>
          <target state="translated">CharIndices::nth</target>
        </trans-unit>
        <trans-unit id="066dac9a3385b98fcbbe8b4b7109e8894b079357" translate="yes" xml:space="preserve">
          <source>CharIndices::nth_back</source>
          <target state="translated">CharIndices::nth_back</target>
        </trans-unit>
        <trans-unit id="c8d904e5b5d865fb6fce3be7e219b79347adf1f7" translate="yes" xml:space="preserve">
          <source>CharIndices::partial_cmp</source>
          <target state="translated">CharIndices::partial_cmp</target>
        </trans-unit>
        <trans-unit id="34ce5ec82a8525f7f4fa3eaf8665acf81b143d34" translate="yes" xml:space="preserve">
          <source>CharIndices::partition</source>
          <target state="translated">CharIndices::partition</target>
        </trans-unit>
        <trans-unit id="074deba1479136682af501a725fc61c3b59ceab1" translate="yes" xml:space="preserve">
          <source>CharIndices::peekable</source>
          <target state="translated">CharIndices::peekable</target>
        </trans-unit>
        <trans-unit id="45e9a0b751a5a03973f598a45a0a0fc85ae4ab68" translate="yes" xml:space="preserve">
          <source>CharIndices::position</source>
          <target state="translated">CharIndices::position</target>
        </trans-unit>
        <trans-unit id="3174001914710f754b62077540312dfd626227ae" translate="yes" xml:space="preserve">
          <source>CharIndices::product</source>
          <target state="translated">CharIndices::product</target>
        </trans-unit>
        <trans-unit id="314d3944595a54328c3c0bf4def538376f2de50e" translate="yes" xml:space="preserve">
          <source>CharIndices::rev</source>
          <target state="translated">CharIndices::rev</target>
        </trans-unit>
        <trans-unit id="bd7e23480d003480676a4bd7fcecc446ee043037" translate="yes" xml:space="preserve">
          <source>CharIndices::rfind</source>
          <target state="translated">CharIndices::rfind</target>
        </trans-unit>
        <trans-unit id="37d963ab2b667370c7e13679780046267e416d6b" translate="yes" xml:space="preserve">
          <source>CharIndices::rfold</source>
          <target state="translated">CharIndices::rfold</target>
        </trans-unit>
        <trans-unit id="8e2dd45e83fb26e34d043dc65cdfc1f43a7cf3a6" translate="yes" xml:space="preserve">
          <source>CharIndices::rposition</source>
          <target state="translated">CharIndices::rposition</target>
        </trans-unit>
        <trans-unit id="add3a830f26e1c6b2d81831dfb80de7c02aef64c" translate="yes" xml:space="preserve">
          <source>CharIndices::scan</source>
          <target state="translated">CharIndices::scan</target>
        </trans-unit>
        <trans-unit id="e41d57637b3aff257f73f4e1a3fbd5061b88f347" translate="yes" xml:space="preserve">
          <source>CharIndices::size_hint</source>
          <target state="translated">CharIndices::size_hint</target>
        </trans-unit>
        <trans-unit id="dce5c19e2f6a1164c53697ee830a9adf94771b11" translate="yes" xml:space="preserve">
          <source>CharIndices::skip</source>
          <target state="translated">CharIndices::skip</target>
        </trans-unit>
        <trans-unit id="523340b2bc399753c54d305889d7d915c59dc5fb" translate="yes" xml:space="preserve">
          <source>CharIndices::skip_while</source>
          <target state="translated">CharIndices::skip_while</target>
        </trans-unit>
        <trans-unit id="3047fd02e80644721daaccef7f15f9bbf3642f2a" translate="yes" xml:space="preserve">
          <source>CharIndices::step_by</source>
          <target state="translated">CharIndices::step_by</target>
        </trans-unit>
        <trans-unit id="25fc874e9b7a1c6df4a1ecf854c20c3b1e7df366" translate="yes" xml:space="preserve">
          <source>CharIndices::sum</source>
          <target state="translated">CharIndices::sum</target>
        </trans-unit>
        <trans-unit id="cdf50b743430dc40151c74f644721c2363c596ee" translate="yes" xml:space="preserve">
          <source>CharIndices::take</source>
          <target state="translated">CharIndices::take</target>
        </trans-unit>
        <trans-unit id="740c45e786cd312b6194c5c3f42e490eac4b3f88" translate="yes" xml:space="preserve">
          <source>CharIndices::take_while</source>
          <target state="translated">CharIndices::take_while</target>
        </trans-unit>
        <trans-unit id="41cac169dfe59408672b1112e3890e76eb5dd3f7" translate="yes" xml:space="preserve">
          <source>CharIndices::to_owned</source>
          <target state="translated">CharIndices::to_owned</target>
        </trans-unit>
        <trans-unit id="7c31631a84bc5eead7d4d17e476262f3b77e8459" translate="yes" xml:space="preserve">
          <source>CharIndices::try_fold</source>
          <target state="translated">CharIndices::try_fold</target>
        </trans-unit>
        <trans-unit id="06a6fb329d0601423ad361d98e2621b4eca7a0f5" translate="yes" xml:space="preserve">
          <source>CharIndices::try_for_each</source>
          <target state="translated">CharIndices::try_for_each</target>
        </trans-unit>
        <trans-unit id="34001df567d79c2def2f3028ffe632066a8d3335" translate="yes" xml:space="preserve">
          <source>CharIndices::try_from</source>
          <target state="translated">CharIndices::try_from</target>
        </trans-unit>
        <trans-unit id="c04573cceb2046e74e5082ad9e2dd3b3f62fcf7e" translate="yes" xml:space="preserve">
          <source>CharIndices::try_into</source>
          <target state="translated">CharIndices::try_into</target>
        </trans-unit>
        <trans-unit id="5502bc4462deeda290db7d11a9d94e17c348c7c2" translate="yes" xml:space="preserve">
          <source>CharIndices::try_rfold</source>
          <target state="translated">CharIndices::try_rfold</target>
        </trans-unit>
        <trans-unit id="1b3a737b7fe6616204932c8f432a9d0d04f348b6" translate="yes" xml:space="preserve">
          <source>CharIndices::type_id</source>
          <target state="translated">CharIndices::type_id</target>
        </trans-unit>
        <trans-unit id="2a4232be4fb371c32c1149ed7be0cf8ffb347bc7" translate="yes" xml:space="preserve">
          <source>CharIndices::unzip</source>
          <target state="translated">CharIndices::unzip</target>
        </trans-unit>
        <trans-unit id="e743686a511898384a68f91e2cba5bbd733b8ba9" translate="yes" xml:space="preserve">
          <source>CharIndices::zip</source>
          <target state="translated">CharIndices::zip</target>
        </trans-unit>
        <trans-unit id="9008fc808202ecba278f15d6efa763fc292a3afb" translate="yes" xml:space="preserve">
          <source>CharPredicateSearcher</source>
          <target state="translated">CharPredicateSearcher</target>
        </trans-unit>
        <trans-unit id="9b86ad0720937e4ca1157cdb245a9ec48c4da34f" translate="yes" xml:space="preserve">
          <source>CharSearcher</source>
          <target state="translated">CharSearcher</target>
        </trans-unit>
        <trans-unit id="a763ef25e9b862e8d874b656a2bb16c4549f7cf5" translate="yes" xml:space="preserve">
          <source>CharSliceSearcher</source>
          <target state="translated">CharSliceSearcher</target>
        </trans-unit>
        <trans-unit id="43411166cda4cf9c4fe3ab13b166fd13df4799a1" translate="yes" xml:space="preserve">
          <source>CharTryFromError</source>
          <target state="translated">CharTryFromError</target>
        </trans-unit>
        <trans-unit id="eba463ce5979bc1f1e9983a1e56f1c12465bc84e" translate="yes" xml:space="preserve">
          <source>CharTryFromError::borrow</source>
          <target state="translated">CharTryFromError::borrow</target>
        </trans-unit>
        <trans-unit id="ddb33d86179d5696fcde972247394dcedeba6e61" translate="yes" xml:space="preserve">
          <source>CharTryFromError::borrow_mut</source>
          <target state="translated">CharTryFromError::borrow_mut</target>
        </trans-unit>
        <trans-unit id="8a9b686d92fabf6bc24df37159ce88e0e4eb7cdd" translate="yes" xml:space="preserve">
          <source>CharTryFromError::cause</source>
          <target state="translated">CharTryFromError::cause</target>
        </trans-unit>
        <trans-unit id="eced79c957b42982e44d319778632084a83f781b" translate="yes" xml:space="preserve">
          <source>CharTryFromError::clone</source>
          <target state="translated">CharTryFromError::clone</target>
        </trans-unit>
        <trans-unit id="55bc0bbb8059f9c41044127e786a1826232d7a30" translate="yes" xml:space="preserve">
          <source>CharTryFromError::clone_from</source>
          <target state="translated">CharTryFromError::clone_from</target>
        </trans-unit>
        <trans-unit id="7e8d48c2c11969aed6e06dd470f4d83d235ddf66" translate="yes" xml:space="preserve">
          <source>CharTryFromError::clone_into</source>
          <target state="translated">CharTryFromError::clone_into</target>
        </trans-unit>
        <trans-unit id="7028c1e6b410fc7df09a065619f9bc358c482b19" translate="yes" xml:space="preserve">
          <source>CharTryFromError::description</source>
          <target state="translated">CharTryFromError::description</target>
        </trans-unit>
        <trans-unit id="46047f411f22e37e2b80a2cad531e54cd3a74fcc" translate="yes" xml:space="preserve">
          <source>CharTryFromError::eq</source>
          <target state="translated">CharTryFromError::eq</target>
        </trans-unit>
        <trans-unit id="4cb49316b970db6cc3f07f361bc9d2bdac4b0e66" translate="yes" xml:space="preserve">
          <source>CharTryFromError::fmt</source>
          <target state="translated">CharTryFromError::fmt</target>
        </trans-unit>
        <trans-unit id="67a2e470e1a7efe0ab36544777b143b2c6ebd295" translate="yes" xml:space="preserve">
          <source>CharTryFromError::from</source>
          <target state="translated">CharTryFromError::from</target>
        </trans-unit>
        <trans-unit id="0121e2dd1bed23d78fa50799a348be6b38ef5651" translate="yes" xml:space="preserve">
          <source>CharTryFromError::into</source>
          <target state="translated">CharTryFromError::into</target>
        </trans-unit>
        <trans-unit id="1f67e3f91c06faff89cd1a28e28fea9afff95a46" translate="yes" xml:space="preserve">
          <source>CharTryFromError::ne</source>
          <target state="translated">CharTryFromError::ne</target>
        </trans-unit>
        <trans-unit id="7d0f3cc1d84c9433cfd428472a850716411b496c" translate="yes" xml:space="preserve">
          <source>CharTryFromError::source</source>
          <target state="translated">CharTryFromError::source</target>
        </trans-unit>
        <trans-unit id="5ede2e22e519136798b2884703627e080e8c5c9c" translate="yes" xml:space="preserve">
          <source>CharTryFromError::to_owned</source>
          <target state="translated">CharTryFromError::to_owned</target>
        </trans-unit>
        <trans-unit id="5ec5dfe6e6348ae8c6a7bc406f31a5e905ec7fe1" translate="yes" xml:space="preserve">
          <source>CharTryFromError::to_string</source>
          <target state="translated">CharTryFromError::to_string</target>
        </trans-unit>
        <trans-unit id="9fb2f16295c83d9df4a912527a4552a83979db5b" translate="yes" xml:space="preserve">
          <source>CharTryFromError::try_from</source>
          <target state="translated">CharTryFromError::try_from</target>
        </trans-unit>
        <trans-unit id="63bbd869285e5d1a6a9676c32a8df2ab5318245e" translate="yes" xml:space="preserve">
          <source>CharTryFromError::try_into</source>
          <target state="translated">CharTryFromError::try_into</target>
        </trans-unit>
        <trans-unit id="8a564b491acd4f2e974dcea75006b2cd82d1e9c5" translate="yes" xml:space="preserve">
          <source>CharTryFromError::type_id</source>
          <target state="translated">CharTryFromError::type_id</target>
        </trans-unit>
        <trans-unit id="ee9946c82d4a077c5be79e3015a3d2479d9fcaf2" translate="yes" xml:space="preserve">
          <source>Character</source>
          <target state="translated">Character</target>
        </trans-unit>
        <trans-unit id="e8a9e750ffbf6823c8fee5f5b1eaf8fd9f61c9a7" translate="yes" xml:space="preserve">
          <source>Character and string literals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542829561029b8c0aef927ec68ddb94fee7f1e68" translate="yes" xml:space="preserve">
          <source>Character escapes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9dedca31fc0a76de315c47da7f7ed9522f709a" translate="yes" xml:space="preserve">
          <source>Character literal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86bbfa9fed7ada0a389375eb5146d27ca6ab1fb" translate="yes" xml:space="preserve">
          <source>Character literals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f55926b9eb12239bdf25820debc2ea21f99947" translate="yes" xml:space="preserve">
          <source>Character types (char).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4fcb0a4e232e25dfe7f1583cd65a18cacf83fc9" translate="yes" xml:space="preserve">
          <source>Character used as 'fill' whenever there is alignment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558a3dbbc9e8acf499270d66297d4e89392c0844" translate="yes" xml:space="preserve">
          <source>Characteristics of Object-Oriented Languages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f59f08fd6d58c6725e21a9ec24e068148ec586" translate="yes" xml:space="preserve">
          <source>Characters</source>
          <target state="translated">Characters</target>
        </trans-unit>
        <trans-unit id="5cc71b5dc21d4f5ec7cd33a768f69aae8735eee5" translate="yes" xml:space="preserve">
          <source>Characters and strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa756d077568ca3fa7947f31c705c22d117ea195" translate="yes" xml:space="preserve">
          <source>Chars</source>
          <target state="translated">Chars</target>
        </trans-unit>
        <trans-unit id="642b2ec56011ad95daf84547c4884566e939fd9c" translate="yes" xml:space="preserve">
          <source>Chars::all</source>
          <target state="translated">Chars::all</target>
        </trans-unit>
        <trans-unit id="e1fb58fa02ee28877b02088b32302f9dcbcf91db" translate="yes" xml:space="preserve">
          <source>Chars::any</source>
          <target state="translated">Chars::any</target>
        </trans-unit>
        <trans-unit id="74f5db25b312ceac677e5492fbd398a312f477f8" translate="yes" xml:space="preserve">
          <source>Chars::as_str</source>
          <target state="translated">Chars::as_str</target>
        </trans-unit>
        <trans-unit id="040b63c4702b88c8cb7e00af18e35a30def6e594" translate="yes" xml:space="preserve">
          <source>Chars::borrow</source>
          <target state="translated">Chars::borrow</target>
        </trans-unit>
        <trans-unit id="2fe5ff77b94e201431cd75b4f37c757b112263b9" translate="yes" xml:space="preserve">
          <source>Chars::borrow_mut</source>
          <target state="translated">Chars::borrow_mut</target>
        </trans-unit>
        <trans-unit id="c13b5e1d1c3be7dba2e3541c199a9f01baf7de0a" translate="yes" xml:space="preserve">
          <source>Chars::by_ref</source>
          <target state="translated">Chars::by_ref</target>
        </trans-unit>
        <trans-unit id="b3ec34a5da40ce122c5f6ba27ac3162501647b44" translate="yes" xml:space="preserve">
          <source>Chars::chain</source>
          <target state="translated">Chars::chain</target>
        </trans-unit>
        <trans-unit id="4d669e9e9869740e11ee07973f08ce03aea655f4" translate="yes" xml:space="preserve">
          <source>Chars::clone</source>
          <target state="translated">Chars::clone</target>
        </trans-unit>
        <trans-unit id="aed060c538facf10e6a24f7e109db6296c60b6a7" translate="yes" xml:space="preserve">
          <source>Chars::clone_from</source>
          <target state="translated">Chars::clone_from</target>
        </trans-unit>
        <trans-unit id="42337f46e179882b3d729ce4a1e7e2535edf92a3" translate="yes" xml:space="preserve">
          <source>Chars::clone_into</source>
          <target state="translated">Chars::clone_into</target>
        </trans-unit>
        <trans-unit id="94525c3d0fc5e96583af6e3a069ce2c97b39e98a" translate="yes" xml:space="preserve">
          <source>Chars::cloned</source>
          <target state="translated">Chars::cloned</target>
        </trans-unit>
        <trans-unit id="4a5711db27f21edfc8473865c8f976c426f074e3" translate="yes" xml:space="preserve">
          <source>Chars::cmp</source>
          <target state="translated">Chars::cmp</target>
        </trans-unit>
        <trans-unit id="bc3cd9a3d271e46d8babc470e9119f71d0b23eee" translate="yes" xml:space="preserve">
          <source>Chars::collect</source>
          <target state="translated">Chars::collect</target>
        </trans-unit>
        <trans-unit id="1a8571fb24c718343e6717f4f30c3e7991ca330a" translate="yes" xml:space="preserve">
          <source>Chars::copied</source>
          <target state="translated">Chars::copied</target>
        </trans-unit>
        <trans-unit id="c399799faced3f463fcbf614d73b9e242edec525" translate="yes" xml:space="preserve">
          <source>Chars::count</source>
          <target state="translated">Chars::count</target>
        </trans-unit>
        <trans-unit id="38e1014fb5fb8ba0beb956949438f1f70ced9266" translate="yes" xml:space="preserve">
          <source>Chars::cycle</source>
          <target state="translated">Chars::cycle</target>
        </trans-unit>
        <trans-unit id="61ec142cce197be33be87ecf1d04ea475b895b74" translate="yes" xml:space="preserve">
          <source>Chars::enumerate</source>
          <target state="translated">Chars::enumerate</target>
        </trans-unit>
        <trans-unit id="cbc834d10c7377734d4d69b1b3a6f522b0b23c50" translate="yes" xml:space="preserve">
          <source>Chars::eq</source>
          <target state="translated">Chars::eq</target>
        </trans-unit>
        <trans-unit id="113483965263a1b16772343aa039c058cc1e7540" translate="yes" xml:space="preserve">
          <source>Chars::filter</source>
          <target state="translated">Chars::filter</target>
        </trans-unit>
        <trans-unit id="abf095e7ea4aff40831233d394104ff9a400940c" translate="yes" xml:space="preserve">
          <source>Chars::filter_map</source>
          <target state="translated">Chars::filter_map</target>
        </trans-unit>
        <trans-unit id="89c1f05fcd7b22690f35d4ddbaf9d4bc93346172" translate="yes" xml:space="preserve">
          <source>Chars::find</source>
          <target state="translated">Chars::find</target>
        </trans-unit>
        <trans-unit id="83009b4d9d56fb9ed114b5e26f3560aa33c0b68b" translate="yes" xml:space="preserve">
          <source>Chars::find_map</source>
          <target state="translated">Chars::find_map</target>
        </trans-unit>
        <trans-unit id="1d5ec30a1520de167d94499219d416f880935427" translate="yes" xml:space="preserve">
          <source>Chars::flat_map</source>
          <target state="translated">Chars::flat_map</target>
        </trans-unit>
        <trans-unit id="d77f88aea8927d8294c719f25122f48477028067" translate="yes" xml:space="preserve">
          <source>Chars::flatten</source>
          <target state="translated">Chars::flatten</target>
        </trans-unit>
        <trans-unit id="4fe7acd7b8a59a59eac65f76b44e1c30928efc6e" translate="yes" xml:space="preserve">
          <source>Chars::fmt</source>
          <target state="translated">Chars::fmt</target>
        </trans-unit>
        <trans-unit id="350b3580fbdedc56adc8f0fdeb7793d759d9647a" translate="yes" xml:space="preserve">
          <source>Chars::fold</source>
          <target state="translated">Chars::fold</target>
        </trans-unit>
        <trans-unit id="a36c10cb4d347eed340413711fa975d65da10e20" translate="yes" xml:space="preserve">
          <source>Chars::for_each</source>
          <target state="translated">Chars::for_each</target>
        </trans-unit>
        <trans-unit id="a4efa2f2db8c9bc3ea5bcacb02ec8047e65e936b" translate="yes" xml:space="preserve">
          <source>Chars::from</source>
          <target state="translated">Chars::from</target>
        </trans-unit>
        <trans-unit id="4c3ea065a1099b96d43697b661c3e47fcb0ee17e" translate="yes" xml:space="preserve">
          <source>Chars::fuse</source>
          <target state="translated">Chars::fuse</target>
        </trans-unit>
        <trans-unit id="e6100a6945d2551e3f7da430304a49de4c72234d" translate="yes" xml:space="preserve">
          <source>Chars::ge</source>
          <target state="translated">Chars::ge</target>
        </trans-unit>
        <trans-unit id="78cdc712f8d1de9af97a0fffd2d943e169e47435" translate="yes" xml:space="preserve">
          <source>Chars::gt</source>
          <target state="translated">Chars::gt</target>
        </trans-unit>
        <trans-unit id="f7caabb813832e194870abebd09f62dbcdd1ea63" translate="yes" xml:space="preserve">
          <source>Chars::inspect</source>
          <target state="translated">Chars::inspect</target>
        </trans-unit>
        <trans-unit id="c388c45c8e6090d5751e40a55ef7ea1724c5deff" translate="yes" xml:space="preserve">
          <source>Chars::into</source>
          <target state="translated">Chars::into</target>
        </trans-unit>
        <trans-unit id="c1963ac7266b923858eaac2aceff5ccb8c4e6392" translate="yes" xml:space="preserve">
          <source>Chars::into_iter</source>
          <target state="translated">Chars::into_iter</target>
        </trans-unit>
        <trans-unit id="05c0251ccabfac93a55a1b09759b21238e61cd60" translate="yes" xml:space="preserve">
          <source>Chars::is_sorted</source>
          <target state="translated">Chars::is_sorted</target>
        </trans-unit>
        <trans-unit id="33f050c7610dd43925802947000fb84303a14594" translate="yes" xml:space="preserve">
          <source>Chars::is_sorted_by</source>
          <target state="translated">Chars::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="3e7af84feca1b73d8f4d298399c588fbf7e4a78e" translate="yes" xml:space="preserve">
          <source>Chars::is_sorted_by_key</source>
          <target state="translated">Chars::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="66925362ea6d5959b950fac29e994627ceb8adb2" translate="yes" xml:space="preserve">
          <source>Chars::last</source>
          <target state="translated">Chars::last</target>
        </trans-unit>
        <trans-unit id="099599fac1da8f95620b49bb97d3291c5d1d2b39" translate="yes" xml:space="preserve">
          <source>Chars::le</source>
          <target state="translated">Chars::le</target>
        </trans-unit>
        <trans-unit id="cc906de87eb693648442e36bd94bc0c8fd6ac6ed" translate="yes" xml:space="preserve">
          <source>Chars::lt</source>
          <target state="translated">Chars::lt</target>
        </trans-unit>
        <trans-unit id="1273ff408bc39c6271d1323afa89fd49085b3a14" translate="yes" xml:space="preserve">
          <source>Chars::map</source>
          <target state="translated">Chars::map</target>
        </trans-unit>
        <trans-unit id="de21acda035102d253ffec83220ae80abbab18a8" translate="yes" xml:space="preserve">
          <source>Chars::max</source>
          <target state="translated">Chars::max</target>
        </trans-unit>
        <trans-unit id="5bb70e2e94bf17d1886d9da69fe08ceee624d956" translate="yes" xml:space="preserve">
          <source>Chars::max_by</source>
          <target state="translated">Chars::max_by</target>
        </trans-unit>
        <trans-unit id="675f10a0f0bc773b9e6a169e4cc213735a522578" translate="yes" xml:space="preserve">
          <source>Chars::max_by_key</source>
          <target state="translated">Chars::max_by_key</target>
        </trans-unit>
        <trans-unit id="33296118eaf5681c486140e64a1e0dea0dabb4f8" translate="yes" xml:space="preserve">
          <source>Chars::min</source>
          <target state="translated">Chars::min</target>
        </trans-unit>
        <trans-unit id="309a832d21a3fef2640b7bba39584db3cb88cb96" translate="yes" xml:space="preserve">
          <source>Chars::min_by</source>
          <target state="translated">Chars::min_by</target>
        </trans-unit>
        <trans-unit id="c4ce7222f6d0832a008fa7565221fd73970e7e8a" translate="yes" xml:space="preserve">
          <source>Chars::min_by_key</source>
          <target state="translated">Chars::min_by_key</target>
        </trans-unit>
        <trans-unit id="4508fb2b45fab9b68dcdf792807146610d209639" translate="yes" xml:space="preserve">
          <source>Chars::ne</source>
          <target state="translated">Chars::ne</target>
        </trans-unit>
        <trans-unit id="a1586c01a0d26fbd420549a3f738019e925456a3" translate="yes" xml:space="preserve">
          <source>Chars::next</source>
          <target state="translated">Chars::next</target>
        </trans-unit>
        <trans-unit id="aff40317c871ed9b8d8e528aba042dbeaa26ce1c" translate="yes" xml:space="preserve">
          <source>Chars::next_back</source>
          <target state="translated">Chars::next_back</target>
        </trans-unit>
        <trans-unit id="df66cdefc2da1768dad51a697e459e2ae423a9d8" translate="yes" xml:space="preserve">
          <source>Chars::nth</source>
          <target state="translated">Chars::nth</target>
        </trans-unit>
        <trans-unit id="c8fceba7ed3645ac96fa215050e85188987d8ad1" translate="yes" xml:space="preserve">
          <source>Chars::nth_back</source>
          <target state="translated">Chars::nth_back</target>
        </trans-unit>
        <trans-unit id="778debc01072a08be6f6aa4e3f7516e6821cec86" translate="yes" xml:space="preserve">
          <source>Chars::partial_cmp</source>
          <target state="translated">Chars::partial_cmp</target>
        </trans-unit>
        <trans-unit id="3921c66a07f9229cc3c8ad248a20c2fdb2c0e285" translate="yes" xml:space="preserve">
          <source>Chars::partition</source>
          <target state="translated">Chars::partition</target>
        </trans-unit>
        <trans-unit id="dc0d603bb76e0598a744ecb25dc8ec7577f81262" translate="yes" xml:space="preserve">
          <source>Chars::peekable</source>
          <target state="translated">Chars::peekable</target>
        </trans-unit>
        <trans-unit id="3fb5ba87aa7b39c5fb4be65b53edd3a82b44e489" translate="yes" xml:space="preserve">
          <source>Chars::position</source>
          <target state="translated">Chars::position</target>
        </trans-unit>
        <trans-unit id="55acd4c46057847096f7f466de4ea3be55b1a093" translate="yes" xml:space="preserve">
          <source>Chars::product</source>
          <target state="translated">Chars::product</target>
        </trans-unit>
        <trans-unit id="13afc0ec8e7d296a274cffa5db2738541357ad7c" translate="yes" xml:space="preserve">
          <source>Chars::rev</source>
          <target state="translated">Chars::rev</target>
        </trans-unit>
        <trans-unit id="807fc8aeb3ee6d2c1397cf2337aee45081d232cb" translate="yes" xml:space="preserve">
          <source>Chars::rfind</source>
          <target state="translated">Chars::rfind</target>
        </trans-unit>
        <trans-unit id="eb38efc8000dd3fb1767ee839ddec7d7913febe5" translate="yes" xml:space="preserve">
          <source>Chars::rfold</source>
          <target state="translated">Chars::rfold</target>
        </trans-unit>
        <trans-unit id="199df48f25227e14a0885226908e946792cb806b" translate="yes" xml:space="preserve">
          <source>Chars::rposition</source>
          <target state="translated">Chars::rposition</target>
        </trans-unit>
        <trans-unit id="c1ed90151b693e8af74bf3c614f107ffbcd5dfe0" translate="yes" xml:space="preserve">
          <source>Chars::scan</source>
          <target state="translated">Chars::scan</target>
        </trans-unit>
        <trans-unit id="a88ca9e3b2ff2249ff2c45f89b0072da943fa9bf" translate="yes" xml:space="preserve">
          <source>Chars::size_hint</source>
          <target state="translated">Chars::size_hint</target>
        </trans-unit>
        <trans-unit id="0e95f6bc4d102933627a669d31e6557913b2e680" translate="yes" xml:space="preserve">
          <source>Chars::skip</source>
          <target state="translated">Chars::skip</target>
        </trans-unit>
        <trans-unit id="4d1aaf40736bbcac1ab092ddc975e174cbc74dbe" translate="yes" xml:space="preserve">
          <source>Chars::skip_while</source>
          <target state="translated">Chars::skip_while</target>
        </trans-unit>
        <trans-unit id="69d9afb7d9e2ecd07e47d106fada7a0340db579e" translate="yes" xml:space="preserve">
          <source>Chars::step_by</source>
          <target state="translated">Chars::step_by</target>
        </trans-unit>
        <trans-unit id="0ea7e2625e4c809c0013ffd24606dca2ef2de729" translate="yes" xml:space="preserve">
          <source>Chars::sum</source>
          <target state="translated">Chars::sum</target>
        </trans-unit>
        <trans-unit id="3bd24941d08dcecf10c946d7d66af4bc70a7c7db" translate="yes" xml:space="preserve">
          <source>Chars::take</source>
          <target state="translated">Chars::take</target>
        </trans-unit>
        <trans-unit id="e023470fea6f732daf58bb026a0073c126b4fcc9" translate="yes" xml:space="preserve">
          <source>Chars::take_while</source>
          <target state="translated">Chars::take_while</target>
        </trans-unit>
        <trans-unit id="da8c90e6513167f14ea6f4a2f20bb93f5057d415" translate="yes" xml:space="preserve">
          <source>Chars::to_owned</source>
          <target state="translated">Chars::to_owned</target>
        </trans-unit>
        <trans-unit id="eb1f497123966813a3c5a59edd904a6329f8b0c5" translate="yes" xml:space="preserve">
          <source>Chars::try_fold</source>
          <target state="translated">Chars::try_fold</target>
        </trans-unit>
        <trans-unit id="ee1a85ee979b19de4929ab6168638cc167712727" translate="yes" xml:space="preserve">
          <source>Chars::try_for_each</source>
          <target state="translated">Chars::try_for_each</target>
        </trans-unit>
        <trans-unit id="d60d629944aec304219b00bbaa9b537898698bc2" translate="yes" xml:space="preserve">
          <source>Chars::try_from</source>
          <target state="translated">Chars::try_from</target>
        </trans-unit>
        <trans-unit id="43662c1d6d4e93eefb777e217add765640dec638" translate="yes" xml:space="preserve">
          <source>Chars::try_into</source>
          <target state="translated">Chars::try_into</target>
        </trans-unit>
        <trans-unit id="bc341d11bef479a7a3eec9a7fa451d34dd3b9e42" translate="yes" xml:space="preserve">
          <source>Chars::try_rfold</source>
          <target state="translated">Chars::try_rfold</target>
        </trans-unit>
        <trans-unit id="f35ca5b7e4c346c1b9db4c157b8712cd7c223289" translate="yes" xml:space="preserve">
          <source>Chars::type_id</source>
          <target state="translated">Chars::type_id</target>
        </trans-unit>
        <trans-unit id="dc5a8909427422af96879e073edf692d19ef75aa" translate="yes" xml:space="preserve">
          <source>Chars::unzip</source>
          <target state="translated">Chars::unzip</target>
        </trans-unit>
        <trans-unit id="bd492f551bcaca00c313bbb55ee5b451668e2ecc" translate="yes" xml:space="preserve">
          <source>Chars::zip</source>
          <target state="translated">Chars::zip</target>
        </trans-unit>
        <trans-unit id="b1a27f82f31c44792bdc8c1a6a4be3869b56090f" translate="yes" xml:space="preserve">
          <source>Check how many fields the enum was declared with and ensure that your pattern uses the same number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="909cfdb424ddf1d83684bc34cf0eccabf4608c4c" translate="yes" xml:space="preserve">
          <source>Check out the rust contribution guidelines &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md&quot;&gt;here&lt;/a&gt;. The source for this documentation can be found on &lt;a href=&quot;https://github.com/rust-lang&quot;&gt;Github&lt;/a&gt;. To contribute changes, make sure you read the guidelines first, then submit pull-requests for your suggested changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e502a6513aaf71dd2690da05fb046559a62492d" translate="yes" xml:space="preserve">
          <source>Check that you used the correct argument and that the definition is correct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5001f3b32ea0f2c3ddb2f33314d43bc70ea6308a" translate="yes" xml:space="preserve">
          <source>Check whether the line contains our query string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc7118a766ba4e7bfe68cfe4aa32acab1e4387a" translate="yes" xml:space="preserve">
          <source>Checked &lt;code&gt;Duration&lt;/code&gt; addition. Computes &lt;code&gt;self + other&lt;/code&gt;, returning &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if overflow occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ba612d7c5d7f6cb784041edd27c76a236ba3b1" translate="yes" xml:space="preserve">
          <source>Checked &lt;code&gt;Duration&lt;/code&gt; division. Computes &lt;code&gt;self / other&lt;/code&gt;, returning &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;other == 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45a5dd50019f6944e34d3efce9b9b1b176c94e4" translate="yes" xml:space="preserve">
          <source>Checked &lt;code&gt;Duration&lt;/code&gt; multiplication. Computes &lt;code&gt;self * other&lt;/code&gt;, returning &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if overflow occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9cf8b69e98d73e3b4b032e35c03aaf5669760eb" translate="yes" xml:space="preserve">
          <source>Checked &lt;code&gt;Duration&lt;/code&gt; subtraction. Computes &lt;code&gt;self - other&lt;/code&gt;, returning &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if the result would be negative or if overflow occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c015dafc000dc2cc2a45c86c37ee933bc390ea6a" translate="yes" xml:space="preserve">
          <source>Checked Euclidean division. Computes &lt;code&gt;self.div_euclid(rhs)&lt;/code&gt;, returning &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;rhs == 0&lt;/code&gt; or the division results in overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20027335b565fd90681c70246a5fc91b3813205" translate="yes" xml:space="preserve">
          <source>Checked Euclidean division. Computes &lt;code&gt;self.div_euclid(rhs)&lt;/code&gt;, returning &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;rhs == 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504f1567a21f8b19ee077a08c13d1d050cb9ee26" translate="yes" xml:space="preserve">
          <source>Checked Euclidean modulo. Computes &lt;code&gt;self.rem_euclid(rhs)&lt;/code&gt;, returning &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;rhs == 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5187588280d0eb9d7911f8f427daf70c600ec66a" translate="yes" xml:space="preserve">
          <source>Checked Euclidean remainder. Computes &lt;code&gt;self.rem_euclid(rhs)&lt;/code&gt;, returning &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;rhs == 0&lt;/code&gt; or the division results in overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357fb0a758164a0983c46ed5bc4f33869b3daffa" translate="yes" xml:space="preserve">
          <source>Checked absolute value. Computes &lt;code&gt;self.abs()&lt;/code&gt;, returning &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;self == MIN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979eb9194d8bafa91380a4e7d8fd8f23ef182958" translate="yes" xml:space="preserve">
          <source>Checked exponentiation. Computes &lt;code&gt;self.pow(exp)&lt;/code&gt;, returning &lt;code&gt;None&lt;/code&gt; if overflow occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78384323d6cb78e88e6a4bc26beaf4cc186da1b6" translate="yes" xml:space="preserve">
          <source>Checked integer addition. Computes &lt;code&gt;self + rhs&lt;/code&gt;, returning &lt;code&gt;None&lt;/code&gt; if overflow occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c47fa6f21f72599630c07354e0309a4c6d4bf1f0" translate="yes" xml:space="preserve">
          <source>Checked integer division. Computes &lt;code&gt;self / rhs&lt;/code&gt;, returning &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;rhs == 0&lt;/code&gt; or the division results in overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1522cb15f7fcbfbc449990b5b99fd967915f6ae" translate="yes" xml:space="preserve">
          <source>Checked integer division. Computes &lt;code&gt;self / rhs&lt;/code&gt;, returning &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;rhs == 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb7580195399113770d763ab7a1a9fbfb92ca99" translate="yes" xml:space="preserve">
          <source>Checked integer multiplication. Computes &lt;code&gt;self * rhs&lt;/code&gt;, returning &lt;code&gt;None&lt;/code&gt; if overflow occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90eee2cb1161d4fa42a8c5182cbc29a68071aaeb" translate="yes" xml:space="preserve">
          <source>Checked integer remainder. Computes &lt;code&gt;self % rhs&lt;/code&gt;, returning &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;rhs == 0&lt;/code&gt; or the division results in overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0edb6e9ba9673c50037a02bea61b6a2328f27728" translate="yes" xml:space="preserve">
          <source>Checked integer remainder. Computes &lt;code&gt;self % rhs&lt;/code&gt;, returning &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;rhs == 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a46df34bc7ccc1e623567f6a0d8774f9e84f0f" translate="yes" xml:space="preserve">
          <source>Checked integer subtraction. Computes &lt;code&gt;self - rhs&lt;/code&gt;, returning &lt;code&gt;None&lt;/code&gt; if overflow occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98bd3ae7f86b755a5018a4af6f3f0af55df1dfbd" translate="yes" xml:space="preserve">
          <source>Checked negation. Computes &lt;code&gt;-self&lt;/code&gt;, returning &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;self == MIN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9853e313b2b0b1f71562bbbad57596ac5a12b4" translate="yes" xml:space="preserve">
          <source>Checked negation. Computes &lt;code&gt;-self&lt;/code&gt;, returning &lt;code&gt;None&lt;/code&gt; unless &lt;code&gt;self == 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a316725c664c78bf812d747782c764edc5c1bcb3" translate="yes" xml:space="preserve">
          <source>Checked shift left. Computes &lt;code&gt;self &amp;lt;&amp;lt; rhs&lt;/code&gt;, returning &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;rhs&lt;/code&gt; is larger than or equal to the number of bits in &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853808025d1e30f4684aaa915b3fe3d3df343b0b" translate="yes" xml:space="preserve">
          <source>Checked shift right. Computes &lt;code&gt;self &amp;gt;&amp;gt; rhs&lt;/code&gt;, returning &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;rhs&lt;/code&gt; is larger than or equal to the number of bits in &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e26a51043e760487a2f7217e5d590035c44517e" translate="yes" xml:space="preserve">
          <source>Checking Results with the &lt;code id=&quot;checking-results-with-the-assert-macro&quot;&gt;assert!&lt;/code&gt; Macro</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67477bc1b2bd63cb3030bda727f9ee9b631c0a17" translate="yes" xml:space="preserve">
          <source>Checking Where Errors Are Written</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202d03e813c37febb8e0a996e1d7b97a9339e9cc" translate="yes" xml:space="preserve">
          <source>Checking for Panics with &lt;code id=&quot;checking-for-panics-with-should_panic&quot;&gt;should_panic&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136264996be3946d7789795fcaeaa3d2c7d5c418" translate="yes" xml:space="preserve">
          <source>Checks if a &lt;code&gt;char&lt;/code&gt; is a digit in the given radix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88158147e0fac14adacd1934a353a7472a09f5e1" translate="yes" xml:space="preserve">
          <source>Checks if all bytes in this slice are within the ASCII range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6196e5aa75f001244cb113a818107cfa3d04778e" translate="yes" xml:space="preserve">
          <source>Checks if all characters in this string are within the ASCII range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1e0773f06832e1353a842461947a1a07b2b344" translate="yes" xml:space="preserve">
          <source>Checks if the binary heap is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283396f9982ba8c82285bb389da27e032fc570f0" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this iterator are sorted using the given comparator function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac870888ddbc0dcda33c67751814a6053be6c98" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this iterator are sorted using the given comparator function. &lt;a href=&quot;../../../iter/trait.iterator#method.is_sorted_by&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5500446d18d995d8c90ec86bb5a1bd34d064ad" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this iterator are sorted using the given comparator function. &lt;a href=&quot;../../iter/trait.iterator#method.is_sorted_by&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbdbf30e6be197cd1cc296adbf94692937a6d8fd" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this iterator are sorted using the given comparator function. &lt;a href=&quot;../iter/trait.iterator#method.is_sorted_by&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22289afa55428f51b4fc350d53f335755d5f23c9" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this iterator are sorted using the given comparator function. &lt;a href=&quot;iter/trait.iterator#method.is_sorted_by&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c504dd1a6ceb948dda033a8a2df81663d5d3624b" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this iterator are sorted using the given comparator function. &lt;a href=&quot;trait.iterator#method.is_sorted_by&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe2daeedba540cd4721cfe49c9f19805443dde4f" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this iterator are sorted using the given key extraction function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91323fed23cbebb310cbdfe338a0169419e548a" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this iterator are sorted using the given key extraction function. &lt;a href=&quot;../../../iter/trait.iterator#method.is_sorted_by_key&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10381cbb3834cb6cc72daa53dde35621f69e5221" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this iterator are sorted using the given key extraction function. &lt;a href=&quot;../../iter/trait.iterator#method.is_sorted_by_key&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309987d789ba32af200eec4172361764068823e9" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this iterator are sorted using the given key extraction function. &lt;a href=&quot;../iter/trait.iterator#method.is_sorted_by_key&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40235319ebf058778ef0686b55297c29a12b502b" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this iterator are sorted using the given key extraction function. &lt;a href=&quot;iter/trait.iterator#method.is_sorted_by_key&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00ca83aa200a5757764a9d137f2abc6cad2ab8c" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this iterator are sorted using the given key extraction function. &lt;a href=&quot;trait.iterator#method.is_sorted_by_key&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b34190a18cc70f8f57d4f1b0fc37c98a010477" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this iterator are sorted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6164b1e2942357da848253fb043a184346dad54" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this iterator are sorted. &lt;a href=&quot;../../../iter/trait.iterator#method.is_sorted&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b5d21a0cefedaf61d24c0649fb9ea8c134cf8a" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this iterator are sorted. &lt;a href=&quot;../../iter/trait.iterator#method.is_sorted&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66cde272da5efa2ea2b03e7730f991f8cc08f276" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this iterator are sorted. &lt;a href=&quot;../iter/trait.iterator#method.is_sorted&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f38f7ed143a3a181d9c5045d042f7381a2b752" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this iterator are sorted. &lt;a href=&quot;iter/trait.iterator#method.is_sorted&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48c2aef8f29a802e072b76cd130379e2b13bd3d" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this iterator are sorted. &lt;a href=&quot;trait.iterator#method.is_sorted&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69162618f7d33ea0f67b174665d889f15aef309" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this slice are sorted using the given comparator function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ade1f2136e690c59b03dd6b4b2d6ba6534738c" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this slice are sorted using the given key extraction function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6e95d8c9ffeeb0502282299ca06689fffc29a8" translate="yes" xml:space="preserve">
          <source>Checks if the elements of this slice are sorted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d17694453b21495882d39e70fe336094204e890" translate="yes" xml:space="preserve">
          <source>Checks if the value is an ASCII alphabetic character:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530aba01ef86ff98ade7e92a77ebeebc5fdeb4e5" translate="yes" xml:space="preserve">
          <source>Checks if the value is an ASCII alphanumeric character:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99cdcdac35572a77fc26d9a6b685605e27ba2a7a" translate="yes" xml:space="preserve">
          <source>Checks if the value is an ASCII control character: U+0000 NUL ..= U+001F UNIT SEPARATOR, or U+007F DELETE. Note that most ASCII whitespace characters are control characters, but SPACE is not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22a6b59f45a49f82d95da353e0711722db1145c" translate="yes" xml:space="preserve">
          <source>Checks if the value is an ASCII decimal digit: U+0030 '0' ..= U+0039 '9'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee4868c0878a65852679c0184ba5bf3b7e20c84" translate="yes" xml:space="preserve">
          <source>Checks if the value is an ASCII graphic character: U+0021 '!' ..= U+007E '~'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50dfea3d82dc562ac5f53d6b2ed1613e2a6d4c2" translate="yes" xml:space="preserve">
          <source>Checks if the value is an ASCII hexadecimal digit:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efdf4820c1bbf310271b28f8cee6a33cbc1cfd6c" translate="yes" xml:space="preserve">
          <source>Checks if the value is an ASCII lowercase character: U+0061 'a' ..= U+007A 'z'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17802bccda722ac6b032044fa78a7849a5d8479f" translate="yes" xml:space="preserve">
          <source>Checks if the value is an ASCII punctuation character:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc5d8d3bda045605444bd0022bd0b6289bf7066" translate="yes" xml:space="preserve">
          <source>Checks if the value is an ASCII uppercase character: U+0041 'A' ..= U+005A 'Z'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9dbb5f5dab753027fe0d4c63499a30fc5d5787" translate="yes" xml:space="preserve">
          <source>Checks if the value is an ASCII whitespace character: U+0020 SPACE, U+0009 HORIZONTAL TAB, U+000A LINE FEED, U+000C FORM FEED, or U+000D CARRIAGE RETURN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b2bb851a42800c733eab57edb16af3e2921f0d7" translate="yes" xml:space="preserve">
          <source>Checks if the value is within the ASCII range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87cf46fbf1b8c30b612a91b8ed112defc5489a1" translate="yes" xml:space="preserve">
          <source>Checks if the value is within the ASCII range. &lt;a href=&quot;ascii/trait.asciiext#tymethod.is_ascii&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f427b0873e6319694078c0d80387b9f0f497f6" translate="yes" xml:space="preserve">
          <source>Checks that &lt;code&gt;index&lt;/code&gt;-th byte lies at the start and/or end of a UTF-8 code point sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15e4c659612f3b1ae8e6f78867c3ba0b5c1e8fa" translate="yes" xml:space="preserve">
          <source>Checks that two slices are an ASCII case-insensitive match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e25f0c9ecf0ef816b828cd5edf999befc2ca83" translate="yes" xml:space="preserve">
          <source>Checks that two strings are an ASCII case-insensitive match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23857cfab25c003d7b3df493e6d2e669acac6d7e" translate="yes" xml:space="preserve">
          <source>Checks that two values are an ASCII case-insensitive match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abefbe0902c9b9bbf17896378a4712635a366e36" translate="yes" xml:space="preserve">
          <source>Checks that two values are an ASCII case-insensitive match. &lt;a href=&quot;ascii/trait.asciiext#tymethod.eq_ignore_ascii_case&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c212d3cf58fb0b256d563f9d16032823862a2a57" translate="yes" xml:space="preserve">
          <source>Checks whether the &lt;code&gt;OsStr&lt;/code&gt; is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d04a4e584e8b13fab4e594b99b63ebb2184932" translate="yes" xml:space="preserve">
          <source>Checks whether the pattern matches anywhere in the haystack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3fcce7825aebfc1b53af4de7c18227611dc056" translate="yes" xml:space="preserve">
          <source>Checks whether the pattern matches at the back of the haystack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27033cd10f6fee4b815395ef8db1ea792ee903bc" translate="yes" xml:space="preserve">
          <source>Checks whether the pattern matches at the front of the haystack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6842c74c4d5122bd28c5c4fc9d30c451e8a95d41" translate="yes" xml:space="preserve">
          <source>Child</source>
          <target state="translated">Child</target>
        </trans-unit>
        <trans-unit id="f110c06520547402de73dc7fd37d78806b283558" translate="yes" xml:space="preserve">
          <source>Child being detached and outliving its parent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eefd61c9671244d3e9c82777bd2900b49cc63e04" translate="yes" xml:space="preserve">
          <source>Child::as_raw_handle</source>
          <target state="translated">Child::as_raw_handle</target>
        </trans-unit>
        <trans-unit id="2e73f2940f411453e1cb20374b446178319d68f3" translate="yes" xml:space="preserve">
          <source>Child::borrow</source>
          <target state="translated">Child::borrow</target>
        </trans-unit>
        <trans-unit id="7eeafc310ff50c03d9ef9a640a90cfaa11eadb8e" translate="yes" xml:space="preserve">
          <source>Child::borrow_mut</source>
          <target state="translated">Child::borrow_mut</target>
        </trans-unit>
        <trans-unit id="d641ccf404460c518f3d9b64d4ced56dd8d088ed" translate="yes" xml:space="preserve">
          <source>Child::fmt</source>
          <target state="translated">Child::fmt</target>
        </trans-unit>
        <trans-unit id="b50ae52c53d20b21a7de95d9dae16aee747959db" translate="yes" xml:space="preserve">
          <source>Child::from</source>
          <target state="translated">Child::from</target>
        </trans-unit>
        <trans-unit id="8f8d3428011cafe6ec3eaea0a02effbe6b2424bd" translate="yes" xml:space="preserve">
          <source>Child::id</source>
          <target state="translated">Child::id</target>
        </trans-unit>
        <trans-unit id="fb4bc074f338941915cb2389ea86c8c4591db3cc" translate="yes" xml:space="preserve">
          <source>Child::into</source>
          <target state="translated">Child::into</target>
        </trans-unit>
        <trans-unit id="c9e0bfc3d94c36237b19c736c9eeb36316a901de" translate="yes" xml:space="preserve">
          <source>Child::into_raw_handle</source>
          <target state="translated">Child::into_raw_handle</target>
        </trans-unit>
        <trans-unit id="440d7730ac5e950d5d920aa7c7d925a1db0831d2" translate="yes" xml:space="preserve">
          <source>Child::kill</source>
          <target state="translated">Child::kill</target>
        </trans-unit>
        <trans-unit id="6dd773bae888025df069c8dd3e7b54806778c219" translate="yes" xml:space="preserve">
          <source>Child::try_from</source>
          <target state="translated">Child::try_from</target>
        </trans-unit>
        <trans-unit id="066167fba2af8f9889f140cac8bf3218d6ab3ebe" translate="yes" xml:space="preserve">
          <source>Child::try_into</source>
          <target state="translated">Child::try_into</target>
        </trans-unit>
        <trans-unit id="a66f76f7a2294c76a39af9cafca0a2fdefde85c2" translate="yes" xml:space="preserve">
          <source>Child::try_wait</source>
          <target state="translated">Child::try_wait</target>
        </trans-unit>
        <trans-unit id="60ecb29a8cc1d5cd8bac5b3ff0b44db26d852b78" translate="yes" xml:space="preserve">
          <source>Child::type_id</source>
          <target state="translated">Child::type_id</target>
        </trans-unit>
        <trans-unit id="79b4fcaf14dc874e88abe0d7927a008dbba0ecb0" translate="yes" xml:space="preserve">
          <source>Child::wait</source>
          <target state="translated">Child::wait</target>
        </trans-unit>
        <trans-unit id="ea62211e5dea89266a2b6682f3ad8df900978c26" translate="yes" xml:space="preserve">
          <source>Child::wait_with_output</source>
          <target state="translated">Child::wait_with_output</target>
        </trans-unit>
        <trans-unit id="45b0893352d44378068fc79cc61bfcdf3cbfcbb1" translate="yes" xml:space="preserve">
          <source>ChildStderr</source>
          <target state="translated">ChildStderr</target>
        </trans-unit>
        <trans-unit id="d377b4e733be2e9dcdee4714411d0e766c131cc9" translate="yes" xml:space="preserve">
          <source>ChildStderr::as_raw_fd</source>
          <target state="translated">ChildStderr::as_raw_fd</target>
        </trans-unit>
        <trans-unit id="1e845ec57cd1304507ee85fab05b005613ad0eaa" translate="yes" xml:space="preserve">
          <source>ChildStderr::as_raw_handle</source>
          <target state="translated">ChildStderr::as_raw_handle</target>
        </trans-unit>
        <trans-unit id="56f1a04e8d141ded70715ebe58f44f23db66cb7c" translate="yes" xml:space="preserve">
          <source>ChildStderr::borrow</source>
          <target state="translated">ChildStderr::borrow</target>
        </trans-unit>
        <trans-unit id="71e4027469d75b7782a80b04856acb69725832e1" translate="yes" xml:space="preserve">
          <source>ChildStderr::borrow_mut</source>
          <target state="translated">ChildStderr::borrow_mut</target>
        </trans-unit>
        <trans-unit id="6d7e7e0e35dd8bd48c8860097b905c79c5e3c67b" translate="yes" xml:space="preserve">
          <source>ChildStderr::by_ref</source>
          <target state="translated">ChildStderr::by_ref</target>
        </trans-unit>
        <trans-unit id="23465d3afb54c3d4b494cef712a08d885206aa15" translate="yes" xml:space="preserve">
          <source>ChildStderr::bytes</source>
          <target state="translated">ChildStderr::bytes</target>
        </trans-unit>
        <trans-unit id="2fc68543763d093845e3de75f39b1360418cc764" translate="yes" xml:space="preserve">
          <source>ChildStderr::chain</source>
          <target state="translated">ChildStderr::chain</target>
        </trans-unit>
        <trans-unit id="ed421b902d5384b8a33285f4cbafd228fedf50fe" translate="yes" xml:space="preserve">
          <source>ChildStderr::fmt</source>
          <target state="translated">ChildStderr::fmt</target>
        </trans-unit>
        <trans-unit id="ef61cd3d777cc670747940b158a23476ccf82b21" translate="yes" xml:space="preserve">
          <source>ChildStderr::from</source>
          <target state="translated">ChildStderr::from</target>
        </trans-unit>
        <trans-unit id="894be430544b0cf4a56e7405670a9ef1a5d499da" translate="yes" xml:space="preserve">
          <source>ChildStderr::initializer</source>
          <target state="translated">ChildStderr::initializer</target>
        </trans-unit>
        <trans-unit id="5791fc3bb6323f9a6f2d6e19dd73a02a5883f1a6" translate="yes" xml:space="preserve">
          <source>ChildStderr::into</source>
          <target state="translated">ChildStderr::into</target>
        </trans-unit>
        <trans-unit id="20338c0ed51db58f783a207b08e5013984bfe63b" translate="yes" xml:space="preserve">
          <source>ChildStderr::into_raw_fd</source>
          <target state="translated">ChildStderr::into_raw_fd</target>
        </trans-unit>
        <trans-unit id="e891dfd5759486027c35a212572cd5549798b401" translate="yes" xml:space="preserve">
          <source>ChildStderr::into_raw_handle</source>
          <target state="translated">ChildStderr::into_raw_handle</target>
        </trans-unit>
        <trans-unit id="8742693c74031f242141e374502ab8ff29999e90" translate="yes" xml:space="preserve">
          <source>ChildStderr::read</source>
          <target state="translated">ChildStderr::read</target>
        </trans-unit>
        <trans-unit id="ceb7c39c91198cf9f13de3ac853b89b0969a6311" translate="yes" xml:space="preserve">
          <source>ChildStderr::read_exact</source>
          <target state="translated">ChildStderr::read_exact</target>
        </trans-unit>
        <trans-unit id="60ff7a6ea61e46dcffe8db6664c9a9168e98ae5b" translate="yes" xml:space="preserve">
          <source>ChildStderr::read_to_end</source>
          <target state="translated">ChildStderr::read_to_end</target>
        </trans-unit>
        <trans-unit id="dca4d49e36f0b30523a8ae49cd283f4167985f62" translate="yes" xml:space="preserve">
          <source>ChildStderr::read_to_string</source>
          <target state="translated">ChildStderr::read_to_string</target>
        </trans-unit>
        <trans-unit id="792af2882ec31b93bd6db020b246d105903eb49d" translate="yes" xml:space="preserve">
          <source>ChildStderr::read_vectored</source>
          <target state="translated">ChildStderr::read_vectored</target>
        </trans-unit>
        <trans-unit id="37f7291ad99a60f18471803b7f19f6678152c880" translate="yes" xml:space="preserve">
          <source>ChildStderr::take</source>
          <target state="translated">ChildStderr::take</target>
        </trans-unit>
        <trans-unit id="6d580d9c243644eea68f881d21e4ceda87a944d0" translate="yes" xml:space="preserve">
          <source>ChildStderr::try_from</source>
          <target state="translated">ChildStderr::try_from</target>
        </trans-unit>
        <trans-unit id="8d8e448b78da9b3a4e88d996806e70aa6d83440b" translate="yes" xml:space="preserve">
          <source>ChildStderr::try_into</source>
          <target state="translated">ChildStderr::try_into</target>
        </trans-unit>
        <trans-unit id="f3b3c65cd0bdac37a01ee89758d6ef37f42a64af" translate="yes" xml:space="preserve">
          <source>ChildStderr::type_id</source>
          <target state="translated">ChildStderr::type_id</target>
        </trans-unit>
        <trans-unit id="94b6321197caf8e205724ac2b61686bd93c472e2" translate="yes" xml:space="preserve">
          <source>ChildStdin</source>
          <target state="translated">ChildStdin</target>
        </trans-unit>
        <trans-unit id="cd64ae974224fda0a656d5bf790be00b2357c8a6" translate="yes" xml:space="preserve">
          <source>ChildStdin::as_raw_fd</source>
          <target state="translated">ChildStdin::as_raw_fd</target>
        </trans-unit>
        <trans-unit id="8f577d9adc141f2b71a162c945af27a156917db9" translate="yes" xml:space="preserve">
          <source>ChildStdin::as_raw_handle</source>
          <target state="translated">ChildStdin::as_raw_handle</target>
        </trans-unit>
        <trans-unit id="25009126b8e853b5b3fac55d7aa1179707ece6ba" translate="yes" xml:space="preserve">
          <source>ChildStdin::borrow</source>
          <target state="translated">ChildStdin::borrow</target>
        </trans-unit>
        <trans-unit id="439d8752bc00b85a0918af98fd72e9edd15f75e4" translate="yes" xml:space="preserve">
          <source>ChildStdin::borrow_mut</source>
          <target state="translated">ChildStdin::borrow_mut</target>
        </trans-unit>
        <trans-unit id="2938acc0880b620db1083b824b6ecd1e450a5537" translate="yes" xml:space="preserve">
          <source>ChildStdin::by_ref</source>
          <target state="translated">ChildStdin::by_ref</target>
        </trans-unit>
        <trans-unit id="328307ffe70f0ba7e782e60b52689a61dead7ab8" translate="yes" xml:space="preserve">
          <source>ChildStdin::flush</source>
          <target state="translated">ChildStdin::flush</target>
        </trans-unit>
        <trans-unit id="54a03028b70860e8299875f8537215a99f07bd6d" translate="yes" xml:space="preserve">
          <source>ChildStdin::fmt</source>
          <target state="translated">ChildStdin::fmt</target>
        </trans-unit>
        <trans-unit id="bb8bbea53d48c8df7af8fc926eabc4b09a6761fd" translate="yes" xml:space="preserve">
          <source>ChildStdin::from</source>
          <target state="translated">ChildStdin::from</target>
        </trans-unit>
        <trans-unit id="6240216641a2a7322a7a97ed5b9654f80a8f18bc" translate="yes" xml:space="preserve">
          <source>ChildStdin::into</source>
          <target state="translated">ChildStdin::into</target>
        </trans-unit>
        <trans-unit id="4640ec15a2e664c6c569c89cb64c4ffbcf5f40b1" translate="yes" xml:space="preserve">
          <source>ChildStdin::into_raw_fd</source>
          <target state="translated">ChildStdin::into_raw_fd</target>
        </trans-unit>
        <trans-unit id="8ed62b2cb88725862ccaac1838f29e4fc8ad0709" translate="yes" xml:space="preserve">
          <source>ChildStdin::into_raw_handle</source>
          <target state="translated">ChildStdin::into_raw_handle</target>
        </trans-unit>
        <trans-unit id="656c608bcfb0060f8471ba10a9ec892359c1389e" translate="yes" xml:space="preserve">
          <source>ChildStdin::try_from</source>
          <target state="translated">ChildStdin::try_from</target>
        </trans-unit>
        <trans-unit id="b0015212cd49847294f59debd36566e5b57adff6" translate="yes" xml:space="preserve">
          <source>ChildStdin::try_into</source>
          <target state="translated">ChildStdin::try_into</target>
        </trans-unit>
        <trans-unit id="6415419ab370d6df2383e48ab903f08f48a626c9" translate="yes" xml:space="preserve">
          <source>ChildStdin::type_id</source>
          <target state="translated">ChildStdin::type_id</target>
        </trans-unit>
        <trans-unit id="075b209c33856e2b31345a4a3ec18a1730006a57" translate="yes" xml:space="preserve">
          <source>ChildStdin::write</source>
          <target state="translated">ChildStdin::write</target>
        </trans-unit>
        <trans-unit id="82bcd136494f0efd9bb6878ad8cdec97d01a3f3e" translate="yes" xml:space="preserve">
          <source>ChildStdin::write_all</source>
          <target state="translated">ChildStdin::write_all</target>
        </trans-unit>
        <trans-unit id="20799eb1f114a195c7732cc46b6a8a074ed82382" translate="yes" xml:space="preserve">
          <source>ChildStdin::write_fmt</source>
          <target state="translated">ChildStdin::write_fmt</target>
        </trans-unit>
        <trans-unit id="84cb7c8581ec4d8eebf5a8cd2602f69eda758517" translate="yes" xml:space="preserve">
          <source>ChildStdin::write_vectored</source>
          <target state="translated">ChildStdin::write_vectored</target>
        </trans-unit>
        <trans-unit id="c1bda628928ba58f589401e1ebda2dd8fcbbff8a" translate="yes" xml:space="preserve">
          <source>ChildStdout</source>
          <target state="translated">ChildStdout</target>
        </trans-unit>
        <trans-unit id="bbdbb31b349c826d5963c311b08d94afe557fed5" translate="yes" xml:space="preserve">
          <source>ChildStdout::as_raw_fd</source>
          <target state="translated">ChildStdout::as_raw_fd</target>
        </trans-unit>
        <trans-unit id="331acea5973f61bd4797d9bccdadb704b7bf6d1f" translate="yes" xml:space="preserve">
          <source>ChildStdout::as_raw_handle</source>
          <target state="translated">ChildStdout::as_raw_handle</target>
        </trans-unit>
        <trans-unit id="3bc2e3062837ef2423cfeee348daa8215714fdc4" translate="yes" xml:space="preserve">
          <source>ChildStdout::borrow</source>
          <target state="translated">ChildStdout::borrow</target>
        </trans-unit>
        <trans-unit id="43ac39348460ead632280caba15776a3eb77e786" translate="yes" xml:space="preserve">
          <source>ChildStdout::borrow_mut</source>
          <target state="translated">ChildStdout::borrow_mut</target>
        </trans-unit>
        <trans-unit id="0713dd0ce4729451a82d7d8874af8954bcd0439e" translate="yes" xml:space="preserve">
          <source>ChildStdout::by_ref</source>
          <target state="translated">ChildStdout::by_ref</target>
        </trans-unit>
        <trans-unit id="eeadc13fabc6d83b669f8863fc306590c60ae4b6" translate="yes" xml:space="preserve">
          <source>ChildStdout::bytes</source>
          <target state="translated">ChildStdout::bytes</target>
        </trans-unit>
        <trans-unit id="f373b2737e78103a646b427619b5e12349187bf3" translate="yes" xml:space="preserve">
          <source>ChildStdout::chain</source>
          <target state="translated">ChildStdout::chain</target>
        </trans-unit>
        <trans-unit id="261f7d28c17d39bfd94b85da259660fbe3727abc" translate="yes" xml:space="preserve">
          <source>ChildStdout::fmt</source>
          <target state="translated">ChildStdout::fmt</target>
        </trans-unit>
        <trans-unit id="a3e8eee2dffce9a706cc314c4f53980dbd1e2f62" translate="yes" xml:space="preserve">
          <source>ChildStdout::from</source>
          <target state="translated">ChildStdout::from</target>
        </trans-unit>
        <trans-unit id="5b6899222b94efbc4495fe49d64eaa2931a1ab0a" translate="yes" xml:space="preserve">
          <source>ChildStdout::initializer</source>
          <target state="translated">ChildStdout::initializer</target>
        </trans-unit>
        <trans-unit id="7878eb0049e8eb53ed0d2c3029d7b7b3d02b122c" translate="yes" xml:space="preserve">
          <source>ChildStdout::into</source>
          <target state="translated">ChildStdout::into</target>
        </trans-unit>
        <trans-unit id="d02d2f3c7e6d5aad90f7bce8cdfd66b6cbb01013" translate="yes" xml:space="preserve">
          <source>ChildStdout::into_raw_fd</source>
          <target state="translated">ChildStdout::into_raw_fd</target>
        </trans-unit>
        <trans-unit id="a5b2ce5ae08f24134b3b3ffaa81b19dad7029017" translate="yes" xml:space="preserve">
          <source>ChildStdout::into_raw_handle</source>
          <target state="translated">ChildStdout::into_raw_handle</target>
        </trans-unit>
        <trans-unit id="42326d65750a93243023d0f00fbae58a0ef2a8e8" translate="yes" xml:space="preserve">
          <source>ChildStdout::read</source>
          <target state="translated">ChildStdout::read</target>
        </trans-unit>
        <trans-unit id="090f2e2993e7c8347373537b7f1fbaf01c397a34" translate="yes" xml:space="preserve">
          <source>ChildStdout::read_exact</source>
          <target state="translated">ChildStdout::read_exact</target>
        </trans-unit>
        <trans-unit id="867152d7104e40785b3e754e89f1cf5eb8ad3e02" translate="yes" xml:space="preserve">
          <source>ChildStdout::read_to_end</source>
          <target state="translated">ChildStdout::read_to_end</target>
        </trans-unit>
        <trans-unit id="44c6f630528b8e758a0860fa2c64e77f061d40d4" translate="yes" xml:space="preserve">
          <source>ChildStdout::read_to_string</source>
          <target state="translated">ChildStdout::read_to_string</target>
        </trans-unit>
        <trans-unit id="8dbad25ac75193ac20606cf2c58e3455b72c0ada" translate="yes" xml:space="preserve">
          <source>ChildStdout::read_vectored</source>
          <target state="translated">ChildStdout::read_vectored</target>
        </trans-unit>
        <trans-unit id="a34b059fe6b486ff6b47af0e54b36133ff017d6c" translate="yes" xml:space="preserve">
          <source>ChildStdout::take</source>
          <target state="translated">ChildStdout::take</target>
        </trans-unit>
        <trans-unit id="932c58896443c1c593822099cd84db86414aa801" translate="yes" xml:space="preserve">
          <source>ChildStdout::try_from</source>
          <target state="translated">ChildStdout::try_from</target>
        </trans-unit>
        <trans-unit id="f9d5b0565392e5cec7f11c2931b49a89c088e095" translate="yes" xml:space="preserve">
          <source>ChildStdout::try_into</source>
          <target state="translated">ChildStdout::try_into</target>
        </trans-unit>
        <trans-unit id="b045fb2c25ebb33c15132b6e1932c6fd67bf2e34" translate="yes" xml:space="preserve">
          <source>ChildStdout::type_id</source>
          <target state="translated">ChildStdout::type_id</target>
        </trans-unit>
        <trans-unit id="8edea86a9c27555d6a8508e4572fe4425982fc30" translate="yes" xml:space="preserve">
          <source>Choo, Choo! Release Channels and Riding the Trains</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c8b3fa3af6e9d185c25d7271ef074506d4aba7" translate="yes" xml:space="preserve">
          <source>Choosing the right collection for the job requires an understanding of what each collection is good at. Here we briefly summarize the performance of different collections for certain important operations. For further details, see each type's documentation, and note that the names of actual methods may differ from the tables below on certain collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8677d9ede8e123308327b0ed8e7bd3fc9dd495a3" translate="yes" xml:space="preserve">
          <source>Choosing whether to use a relative or absolute path is a decision you&amp;rsquo;ll make based on your project. The decision should depend on whether you&amp;rsquo;re more likely to move item definition code separately from or together with the code that uses the item. For example, if we move the &lt;code&gt;front_of_house&lt;/code&gt; module and the &lt;code&gt;eat_at_restaurant&lt;/code&gt; function into a module named &lt;code&gt;customer_experience&lt;/code&gt;, we&amp;rsquo;d need to update the absolute path to &lt;code&gt;add_to_waitlist&lt;/code&gt;, but the relative path would still be valid. However, if we moved the &lt;code&gt;eat_at_restaurant&lt;/code&gt; function separately into a module named &lt;code&gt;dining&lt;/code&gt;, the absolute path to the &lt;code&gt;add_to_waitlist&lt;/code&gt; call would stay the same, but the relative path would need to be updated. Our preference is to specify absolute paths because it&amp;rsquo;s more likely to move code definitions and item calls independently of each other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a527377dfdcd1435bbaa177dc63f2a6bb39b269" translate="yes" xml:space="preserve">
          <source>Chunks</source>
          <target state="translated">Chunks</target>
        </trans-unit>
        <trans-unit id="de9cf8e95312c0cfc264c9dd2a37fb1bcde55009" translate="yes" xml:space="preserve">
          <source>Chunks::all</source>
          <target state="translated">Chunks::all</target>
        </trans-unit>
        <trans-unit id="d378b7ef4cb129738842244effc4d9953d48f1d5" translate="yes" xml:space="preserve">
          <source>Chunks::any</source>
          <target state="translated">Chunks::any</target>
        </trans-unit>
        <trans-unit id="2bbda86f4ccc62e5146b3efbbd4f4cdd62f8c713" translate="yes" xml:space="preserve">
          <source>Chunks::borrow</source>
          <target state="translated">Chunks::borrow</target>
        </trans-unit>
        <trans-unit id="ad313de3b2aa6e162af5c38aec05497a5cfb513e" translate="yes" xml:space="preserve">
          <source>Chunks::borrow_mut</source>
          <target state="translated">Chunks::borrow_mut</target>
        </trans-unit>
        <trans-unit id="ea4e52f8efaf92af06b3b0aeab03c75b2c2c7f21" translate="yes" xml:space="preserve">
          <source>Chunks::by_ref</source>
          <target state="translated">Chunks::by_ref</target>
        </trans-unit>
        <trans-unit id="81f2bb42f6a8f811e83bdf5bc17b7bdd5a503d2a" translate="yes" xml:space="preserve">
          <source>Chunks::chain</source>
          <target state="translated">Chunks::chain</target>
        </trans-unit>
        <trans-unit id="e4a34936e027a9de25fc477006a299978cd8ce2e" translate="yes" xml:space="preserve">
          <source>Chunks::clone</source>
          <target state="translated">Chunks::clone</target>
        </trans-unit>
        <trans-unit id="a6f7f883ce8f937d7c999287912b3756bf77195c" translate="yes" xml:space="preserve">
          <source>Chunks::clone_from</source>
          <target state="translated">Chunks::clone_from</target>
        </trans-unit>
        <trans-unit id="dfbe402e3d137d7775d62c241d8a37638c7e22a6" translate="yes" xml:space="preserve">
          <source>Chunks::clone_into</source>
          <target state="translated">Chunks::clone_into</target>
        </trans-unit>
        <trans-unit id="f06399aff41c92e97793a7e4f2b405a5afab9e40" translate="yes" xml:space="preserve">
          <source>Chunks::cloned</source>
          <target state="translated">Chunks::cloned</target>
        </trans-unit>
        <trans-unit id="e0f1e34f5b2973b127d0fecdb569e4a7ae5a0936" translate="yes" xml:space="preserve">
          <source>Chunks::cmp</source>
          <target state="translated">Chunks::cmp</target>
        </trans-unit>
        <trans-unit id="8e1fc81adff78b0f98634c4ce5e98b66d77c17bf" translate="yes" xml:space="preserve">
          <source>Chunks::collect</source>
          <target state="translated">Chunks::collect</target>
        </trans-unit>
        <trans-unit id="ecf2833b675d6dbcff18849040d82b917fb5a6f9" translate="yes" xml:space="preserve">
          <source>Chunks::copied</source>
          <target state="translated">Chunks::copied</target>
        </trans-unit>
        <trans-unit id="8c5e7f4469f6c532cfad251425b1728786d6a94d" translate="yes" xml:space="preserve">
          <source>Chunks::count</source>
          <target state="translated">Chunks::count</target>
        </trans-unit>
        <trans-unit id="e044deb6769ff10b1a5e3370a5dc84e15e5dd383" translate="yes" xml:space="preserve">
          <source>Chunks::cycle</source>
          <target state="translated">Chunks::cycle</target>
        </trans-unit>
        <trans-unit id="924a1f61f978aaf22f7652bac0ccf292026f830d" translate="yes" xml:space="preserve">
          <source>Chunks::enumerate</source>
          <target state="translated">Chunks::enumerate</target>
        </trans-unit>
        <trans-unit id="2fa7947ba884021974e1b35b5658021194c2ff57" translate="yes" xml:space="preserve">
          <source>Chunks::eq</source>
          <target state="translated">Chunks::eq</target>
        </trans-unit>
        <trans-unit id="6cb4fb1b9a16514ff3f568521082c18a2f7979e1" translate="yes" xml:space="preserve">
          <source>Chunks::filter</source>
          <target state="translated">Chunks::filter</target>
        </trans-unit>
        <trans-unit id="8f420aecb86d302221c35fea102edeeeaf012710" translate="yes" xml:space="preserve">
          <source>Chunks::filter_map</source>
          <target state="translated">Chunks::filter_map</target>
        </trans-unit>
        <trans-unit id="9a9270bd3e7fc5a3701bdd6211e4ed2123d38ec2" translate="yes" xml:space="preserve">
          <source>Chunks::find</source>
          <target state="translated">Chunks::find</target>
        </trans-unit>
        <trans-unit id="38de317c3dc4efb53af281bdac6bc14f71175485" translate="yes" xml:space="preserve">
          <source>Chunks::find_map</source>
          <target state="translated">Chunks::find_map</target>
        </trans-unit>
        <trans-unit id="7adc9562358f69bd4010b2600f6fc46516425f16" translate="yes" xml:space="preserve">
          <source>Chunks::flat_map</source>
          <target state="translated">Chunks::flat_map</target>
        </trans-unit>
        <trans-unit id="190a8f5825fb17aa9cfda460a4342aadfd36ccbe" translate="yes" xml:space="preserve">
          <source>Chunks::flatten</source>
          <target state="translated">Chunks::flatten</target>
        </trans-unit>
        <trans-unit id="b1bc825a223566947c463e4baa7d5ef8aed67e55" translate="yes" xml:space="preserve">
          <source>Chunks::fmt</source>
          <target state="translated">Chunks::fmt</target>
        </trans-unit>
        <trans-unit id="e384ff5c983edbdbf4048a16143d28c6fd233d31" translate="yes" xml:space="preserve">
          <source>Chunks::fold</source>
          <target state="translated">Chunks::fold</target>
        </trans-unit>
        <trans-unit id="62472c834d93a8a080c6fc8feea53b29c01b5cd0" translate="yes" xml:space="preserve">
          <source>Chunks::for_each</source>
          <target state="translated">Chunks::for_each</target>
        </trans-unit>
        <trans-unit id="4fdb9ac1f087c6b4ae6bf11240b7851e2ac0f718" translate="yes" xml:space="preserve">
          <source>Chunks::from</source>
          <target state="translated">Chunks::from</target>
        </trans-unit>
        <trans-unit id="434e1be839fd721bbfcf4308b774201c091517cc" translate="yes" xml:space="preserve">
          <source>Chunks::fuse</source>
          <target state="translated">Chunks::fuse</target>
        </trans-unit>
        <trans-unit id="08c995215fd2154a7f4c0555c4612cd2f25cb7f2" translate="yes" xml:space="preserve">
          <source>Chunks::ge</source>
          <target state="translated">Chunks::ge</target>
        </trans-unit>
        <trans-unit id="e77043f7a094858a6f10a4b362950c6abcc5f10b" translate="yes" xml:space="preserve">
          <source>Chunks::gt</source>
          <target state="translated">Chunks::gt</target>
        </trans-unit>
        <trans-unit id="a5b26a90b9d6542b2eb2d4a54a8bccba3a27d8f5" translate="yes" xml:space="preserve">
          <source>Chunks::inspect</source>
          <target state="translated">Chunks::inspect</target>
        </trans-unit>
        <trans-unit id="974458c6402be5cb05e070166d7d1d1868345689" translate="yes" xml:space="preserve">
          <source>Chunks::into</source>
          <target state="translated">Chunks::into</target>
        </trans-unit>
        <trans-unit id="0e3c198b10675645f662f5e05b0b7a3bf3bebdc5" translate="yes" xml:space="preserve">
          <source>Chunks::into_iter</source>
          <target state="translated">Chunks::into_iter</target>
        </trans-unit>
        <trans-unit id="ffd65cecc0435a67d310ff9dca649762220be8a5" translate="yes" xml:space="preserve">
          <source>Chunks::is_empty</source>
          <target state="translated">Chunks::is_empty</target>
        </trans-unit>
        <trans-unit id="3f0a8a6d5c09b83ad86cf915ccf2c38021feafa9" translate="yes" xml:space="preserve">
          <source>Chunks::is_sorted</source>
          <target state="translated">Chunks::is_sorted</target>
        </trans-unit>
        <trans-unit id="a2688328794c75631e0e963d29bf27994a145ade" translate="yes" xml:space="preserve">
          <source>Chunks::is_sorted_by</source>
          <target state="translated">Chunks::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="976ac90fb7d5afe703c5fe0631c95c857a2361d4" translate="yes" xml:space="preserve">
          <source>Chunks::is_sorted_by_key</source>
          <target state="translated">Chunks::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="4f6145a92fbf0c76bdf8958fc7106fe34fbe8954" translate="yes" xml:space="preserve">
          <source>Chunks::last</source>
          <target state="translated">Chunks::last</target>
        </trans-unit>
        <trans-unit id="9b074ecf36b23909e1a1b79244879d7329aaab87" translate="yes" xml:space="preserve">
          <source>Chunks::le</source>
          <target state="translated">Chunks::le</target>
        </trans-unit>
        <trans-unit id="fbfdcb3286cb684a1ed18e03862a06b859fa2e29" translate="yes" xml:space="preserve">
          <source>Chunks::len</source>
          <target state="translated">Chunks::len</target>
        </trans-unit>
        <trans-unit id="b4974a4d7dad9bc9a71a0dc18db7bcbf9e9e9ac5" translate="yes" xml:space="preserve">
          <source>Chunks::lt</source>
          <target state="translated">Chunks::lt</target>
        </trans-unit>
        <trans-unit id="b720441d6a583bbf093541e5ec20450fb4cf4a07" translate="yes" xml:space="preserve">
          <source>Chunks::map</source>
          <target state="translated">Chunks::map</target>
        </trans-unit>
        <trans-unit id="44b0fbc3d0857505bc4cddf6bc1c2dcc1ed5cc6f" translate="yes" xml:space="preserve">
          <source>Chunks::max</source>
          <target state="translated">Chunks::max</target>
        </trans-unit>
        <trans-unit id="2d4301ba5dc48d52ebb61813881b7c7bf539b7da" translate="yes" xml:space="preserve">
          <source>Chunks::max_by</source>
          <target state="translated">Chunks::max_by</target>
        </trans-unit>
        <trans-unit id="86ec5eb00a42603055f8e218525e115e8278e47f" translate="yes" xml:space="preserve">
          <source>Chunks::max_by_key</source>
          <target state="translated">Chunks::max_by_key</target>
        </trans-unit>
        <trans-unit id="db4277aa1c9e3a20c0975f30e922aefdd0abc9a5" translate="yes" xml:space="preserve">
          <source>Chunks::min</source>
          <target state="translated">Chunks::min</target>
        </trans-unit>
        <trans-unit id="5d80759afa1d1c01f867c94d6c7e4122cd42e991" translate="yes" xml:space="preserve">
          <source>Chunks::min_by</source>
          <target state="translated">Chunks::min_by</target>
        </trans-unit>
        <trans-unit id="6d6c0e9c48a9d794ad936f3f523cc45782c4981b" translate="yes" xml:space="preserve">
          <source>Chunks::min_by_key</source>
          <target state="translated">Chunks::min_by_key</target>
        </trans-unit>
        <trans-unit id="79f955410491019f7ca7aafb15b52a76c672564a" translate="yes" xml:space="preserve">
          <source>Chunks::ne</source>
          <target state="translated">Chunks::ne</target>
        </trans-unit>
        <trans-unit id="49213aedbc81e670f411664b485414ac1c3defbe" translate="yes" xml:space="preserve">
          <source>Chunks::next</source>
          <target state="translated">Chunks::next</target>
        </trans-unit>
        <trans-unit id="cb677ac8275610ba02d9539e0967f1092a840cda" translate="yes" xml:space="preserve">
          <source>Chunks::next_back</source>
          <target state="translated">Chunks::next_back</target>
        </trans-unit>
        <trans-unit id="e184df89659646e5535511b0a83ea4b17aae0fd0" translate="yes" xml:space="preserve">
          <source>Chunks::nth</source>
          <target state="translated">Chunks::nth</target>
        </trans-unit>
        <trans-unit id="7650bb287d1b34b596a1fc09313ce3ed4c153ec0" translate="yes" xml:space="preserve">
          <source>Chunks::nth_back</source>
          <target state="translated">Chunks::nth_back</target>
        </trans-unit>
        <trans-unit id="ff2c07bc6d78f2bf754d2ad38c4548f3fc3a2894" translate="yes" xml:space="preserve">
          <source>Chunks::partial_cmp</source>
          <target state="translated">Chunks::partial_cmp</target>
        </trans-unit>
        <trans-unit id="86b8416e18aa62a760edf2893f253486a500f8bf" translate="yes" xml:space="preserve">
          <source>Chunks::partition</source>
          <target state="translated">Chunks::partition</target>
        </trans-unit>
        <trans-unit id="cded875f12fbdc73ef9b2e467b2818b896cd292f" translate="yes" xml:space="preserve">
          <source>Chunks::peekable</source>
          <target state="translated">Chunks::peekable</target>
        </trans-unit>
        <trans-unit id="c653f19691d0f3b2bd42e896dcee2ca3467f722d" translate="yes" xml:space="preserve">
          <source>Chunks::position</source>
          <target state="translated">Chunks::position</target>
        </trans-unit>
        <trans-unit id="24f4388e58593c1df03595f79007c00de5dc2e32" translate="yes" xml:space="preserve">
          <source>Chunks::product</source>
          <target state="translated">Chunks::product</target>
        </trans-unit>
        <trans-unit id="a40d914450baf0e1a9beab3b2e5360ecf3cdd563" translate="yes" xml:space="preserve">
          <source>Chunks::rev</source>
          <target state="translated">Chunks::rev</target>
        </trans-unit>
        <trans-unit id="825f5fcc29cefd4cc13759fbe6c4f0a62110a255" translate="yes" xml:space="preserve">
          <source>Chunks::rfind</source>
          <target state="translated">Chunks::rfind</target>
        </trans-unit>
        <trans-unit id="0cf46161e6ca6bd35ac4c0cec8c69027eaee8fd7" translate="yes" xml:space="preserve">
          <source>Chunks::rfold</source>
          <target state="translated">Chunks::rfold</target>
        </trans-unit>
        <trans-unit id="f6b07f2463eaf656af03143469e574c009217c2a" translate="yes" xml:space="preserve">
          <source>Chunks::rposition</source>
          <target state="translated">Chunks::rposition</target>
        </trans-unit>
        <trans-unit id="431b70547f43a6d04768bde82a10c29477429ddf" translate="yes" xml:space="preserve">
          <source>Chunks::scan</source>
          <target state="translated">Chunks::scan</target>
        </trans-unit>
        <trans-unit id="fd9942e651b9056a95c8872c076771c7a7929893" translate="yes" xml:space="preserve">
          <source>Chunks::size_hint</source>
          <target state="translated">Chunks::size_hint</target>
        </trans-unit>
        <trans-unit id="93b0a70ba382d39ebe9b67ee534bc05365339656" translate="yes" xml:space="preserve">
          <source>Chunks::skip</source>
          <target state="translated">Chunks::skip</target>
        </trans-unit>
        <trans-unit id="f673f8cab5e8b19d522520e151229942c4936092" translate="yes" xml:space="preserve">
          <source>Chunks::skip_while</source>
          <target state="translated">Chunks::skip_while</target>
        </trans-unit>
        <trans-unit id="afabaae5ed0d45de84241cac7c3324820ef0dc2a" translate="yes" xml:space="preserve">
          <source>Chunks::step_by</source>
          <target state="translated">Chunks::step_by</target>
        </trans-unit>
        <trans-unit id="eca51e64af55bf9ffb2a3fec813769bc187ec1a7" translate="yes" xml:space="preserve">
          <source>Chunks::sum</source>
          <target state="translated">Chunks::sum</target>
        </trans-unit>
        <trans-unit id="60301411fcff4b7cac5aac70177f73d9360d5a75" translate="yes" xml:space="preserve">
          <source>Chunks::take</source>
          <target state="translated">Chunks::take</target>
        </trans-unit>
        <trans-unit id="0cf54ae3550cb9902e0bc6378f48f1e9db83a9fe" translate="yes" xml:space="preserve">
          <source>Chunks::take_while</source>
          <target state="translated">Chunks::take_while</target>
        </trans-unit>
        <trans-unit id="317b3a50a9d79975b38f247b13145f356bce68c2" translate="yes" xml:space="preserve">
          <source>Chunks::to_owned</source>
          <target state="translated">Chunks::to_owned</target>
        </trans-unit>
        <trans-unit id="004ff8a73bc70e23ff696f6ecfc8d016ac6b90f1" translate="yes" xml:space="preserve">
          <source>Chunks::try_fold</source>
          <target state="translated">Chunks::try_fold</target>
        </trans-unit>
        <trans-unit id="e9e96d1ed4e14b1811d1a21a07bd2b450fde6291" translate="yes" xml:space="preserve">
          <source>Chunks::try_for_each</source>
          <target state="translated">Chunks::try_for_each</target>
        </trans-unit>
        <trans-unit id="4b9efbf8d76ba397296bbab29b5471b0b3ce9b3d" translate="yes" xml:space="preserve">
          <source>Chunks::try_from</source>
          <target state="translated">Chunks::try_from</target>
        </trans-unit>
        <trans-unit id="f343fa84faa4d6f67a1be20444b0069fb2ab6988" translate="yes" xml:space="preserve">
          <source>Chunks::try_into</source>
          <target state="translated">Chunks::try_into</target>
        </trans-unit>
        <trans-unit id="cdfd26f9a704e117826cd542414d617a68c45b88" translate="yes" xml:space="preserve">
          <source>Chunks::try_rfold</source>
          <target state="translated">Chunks::try_rfold</target>
        </trans-unit>
        <trans-unit id="0db8ff26f1638a8674c1b258d5f4ff7d08287033" translate="yes" xml:space="preserve">
          <source>Chunks::type_id</source>
          <target state="translated">Chunks::type_id</target>
        </trans-unit>
        <trans-unit id="510fecba5383baa92332669b7b808e31a6152b35" translate="yes" xml:space="preserve">
          <source>Chunks::unzip</source>
          <target state="translated">Chunks::unzip</target>
        </trans-unit>
        <trans-unit id="1f97ee7e376c613da1a3117308c5e37698552f4b" translate="yes" xml:space="preserve">
          <source>Chunks::zip</source>
          <target state="translated">Chunks::zip</target>
        </trans-unit>
        <trans-unit id="d0f4054abb04f4098d807dc797c8627e1f00fbd2" translate="yes" xml:space="preserve">
          <source>ChunksExact</source>
          <target state="translated">ChunksExact</target>
        </trans-unit>
        <trans-unit id="c249ec499c8909ab0ac694accaa5873107de4ecb" translate="yes" xml:space="preserve">
          <source>ChunksExact::all</source>
          <target state="translated">ChunksExact::all</target>
        </trans-unit>
        <trans-unit id="62844c36643cf1984ac80ec5a6af1d5cf3062d6a" translate="yes" xml:space="preserve">
          <source>ChunksExact::any</source>
          <target state="translated">ChunksExact::any</target>
        </trans-unit>
        <trans-unit id="bc6eebb4085596cf8bc2e25066f12e5a67f1ccd8" translate="yes" xml:space="preserve">
          <source>ChunksExact::borrow</source>
          <target state="translated">ChunksExact::borrow</target>
        </trans-unit>
        <trans-unit id="47771bf49e977e198ee2861072d944dee17a982b" translate="yes" xml:space="preserve">
          <source>ChunksExact::borrow_mut</source>
          <target state="translated">ChunksExact::borrow_mut</target>
        </trans-unit>
        <trans-unit id="12bb71b93e5821eb053c641b7178a0e793fb327d" translate="yes" xml:space="preserve">
          <source>ChunksExact::by_ref</source>
          <target state="translated">ChunksExact::by_ref</target>
        </trans-unit>
        <trans-unit id="3ec16e3a5c9fb74b54566c3df747718fcc5005b1" translate="yes" xml:space="preserve">
          <source>ChunksExact::chain</source>
          <target state="translated">ChunksExact::chain</target>
        </trans-unit>
        <trans-unit id="f14720011bbed28c7f58ca09cd9c94fe45e6f733" translate="yes" xml:space="preserve">
          <source>ChunksExact::clone</source>
          <target state="translated">ChunksExact::clone</target>
        </trans-unit>
        <trans-unit id="72fec13338a7fb82947732c9d68ecb4044f3c9ff" translate="yes" xml:space="preserve">
          <source>ChunksExact::clone_from</source>
          <target state="translated">ChunksExact::clone_from</target>
        </trans-unit>
        <trans-unit id="9e80b63b11dc13a24ce63ee4159f42e6d6a9a790" translate="yes" xml:space="preserve">
          <source>ChunksExact::clone_into</source>
          <target state="translated">ChunksExact::clone_into</target>
        </trans-unit>
        <trans-unit id="825d93d06489e6b59052e7cc8afb6e941e01ed8c" translate="yes" xml:space="preserve">
          <source>ChunksExact::cloned</source>
          <target state="translated">ChunksExact::cloned</target>
        </trans-unit>
        <trans-unit id="d4fbc47b44f851f27ef80b341ba05efd423095b0" translate="yes" xml:space="preserve">
          <source>ChunksExact::cmp</source>
          <target state="translated">ChunksExact::cmp</target>
        </trans-unit>
        <trans-unit id="8ae32e4c557109cdae82dbc811aa7c5daf1b4549" translate="yes" xml:space="preserve">
          <source>ChunksExact::collect</source>
          <target state="translated">ChunksExact::collect</target>
        </trans-unit>
        <trans-unit id="1724f28263c25f729a526ce8033217277986b604" translate="yes" xml:space="preserve">
          <source>ChunksExact::copied</source>
          <target state="translated">ChunksExact::copied</target>
        </trans-unit>
        <trans-unit id="abe976269d8cb157b9d671ce735c46b87fd0a07f" translate="yes" xml:space="preserve">
          <source>ChunksExact::count</source>
          <target state="translated">ChunksExact::count</target>
        </trans-unit>
        <trans-unit id="2c4b5de5775df33dab75b84d6c274a451f626b98" translate="yes" xml:space="preserve">
          <source>ChunksExact::cycle</source>
          <target state="translated">ChunksExact::cycle</target>
        </trans-unit>
        <trans-unit id="47616588f6950c66748e96cb4a7313e5ffcebe28" translate="yes" xml:space="preserve">
          <source>ChunksExact::enumerate</source>
          <target state="translated">ChunksExact::enumerate</target>
        </trans-unit>
        <trans-unit id="22a0e7fb83d95ec01e238d7fd8a0fa05e4696e62" translate="yes" xml:space="preserve">
          <source>ChunksExact::eq</source>
          <target state="translated">ChunksExact::eq</target>
        </trans-unit>
        <trans-unit id="2f83e19d828a09c6c950720abc33ee310e2d0e41" translate="yes" xml:space="preserve">
          <source>ChunksExact::filter</source>
          <target state="translated">ChunksExact::filter</target>
        </trans-unit>
        <trans-unit id="2d59d36c72df17ee752e4f3f41cf8a738bbf68b1" translate="yes" xml:space="preserve">
          <source>ChunksExact::filter_map</source>
          <target state="translated">ChunksExact::filter_map</target>
        </trans-unit>
        <trans-unit id="c2c91541a69527f72f355572ab8f1a5cc327a629" translate="yes" xml:space="preserve">
          <source>ChunksExact::find</source>
          <target state="translated">ChunksExact::find</target>
        </trans-unit>
        <trans-unit id="7f4d81b26327c9868063e0d94da4a3e421749fd1" translate="yes" xml:space="preserve">
          <source>ChunksExact::find_map</source>
          <target state="translated">ChunksExact::find_map</target>
        </trans-unit>
        <trans-unit id="524b31a690c2ec7e9c6398d26f971cd6610c53cb" translate="yes" xml:space="preserve">
          <source>ChunksExact::flat_map</source>
          <target state="translated">ChunksExact::flat_map</target>
        </trans-unit>
        <trans-unit id="77bc3aa7b272ae8a983c671d6bd4528ab1bc521e" translate="yes" xml:space="preserve">
          <source>ChunksExact::flatten</source>
          <target state="translated">ChunksExact::flatten</target>
        </trans-unit>
        <trans-unit id="74f010415b3640563cf541a29f6ae1ecbce56f48" translate="yes" xml:space="preserve">
          <source>ChunksExact::fmt</source>
          <target state="translated">ChunksExact::fmt</target>
        </trans-unit>
        <trans-unit id="7e1bd53639f311342f076b758aa50043f49c1000" translate="yes" xml:space="preserve">
          <source>ChunksExact::fold</source>
          <target state="translated">ChunksExact::fold</target>
        </trans-unit>
        <trans-unit id="3f2136c16372b06938189482e566917b5c755936" translate="yes" xml:space="preserve">
          <source>ChunksExact::for_each</source>
          <target state="translated">ChunksExact::for_each</target>
        </trans-unit>
        <trans-unit id="6b9bd0a56b81134e960f2fd67ec887f706c68b64" translate="yes" xml:space="preserve">
          <source>ChunksExact::from</source>
          <target state="translated">ChunksExact::from</target>
        </trans-unit>
        <trans-unit id="897bd4621bf5a75abc40b4443b0830c411b3c17b" translate="yes" xml:space="preserve">
          <source>ChunksExact::fuse</source>
          <target state="translated">ChunksExact::fuse</target>
        </trans-unit>
        <trans-unit id="e98fa24bb7928162271222155d6aba343b8f8b39" translate="yes" xml:space="preserve">
          <source>ChunksExact::ge</source>
          <target state="translated">ChunksExact::ge</target>
        </trans-unit>
        <trans-unit id="76ad7a0472a6763e636eff8db910040aec300d01" translate="yes" xml:space="preserve">
          <source>ChunksExact::gt</source>
          <target state="translated">ChunksExact::gt</target>
        </trans-unit>
        <trans-unit id="d47968e712a182bdbff343495e9a9a071cd6837a" translate="yes" xml:space="preserve">
          <source>ChunksExact::inspect</source>
          <target state="translated">ChunksExact::inspect</target>
        </trans-unit>
        <trans-unit id="2c9601509f2b9a8fdcdc211ed068b22ce905a89e" translate="yes" xml:space="preserve">
          <source>ChunksExact::into</source>
          <target state="translated">ChunksExact::into</target>
        </trans-unit>
        <trans-unit id="f3d5a0a04ddca81fea188bc0318b319c867937b3" translate="yes" xml:space="preserve">
          <source>ChunksExact::into_iter</source>
          <target state="translated">ChunksExact::into_iter</target>
        </trans-unit>
        <trans-unit id="f9fba2df399c1bb71fa45a7a4d1541a5241232af" translate="yes" xml:space="preserve">
          <source>ChunksExact::is_empty</source>
          <target state="translated">ChunksExact::is_empty</target>
        </trans-unit>
        <trans-unit id="86423346aa1fd75d583ca505a1cf7f449ce29a04" translate="yes" xml:space="preserve">
          <source>ChunksExact::is_sorted</source>
          <target state="translated">ChunksExact::is_sorted</target>
        </trans-unit>
        <trans-unit id="64fc51ce7e354ed660612ca859d094bc287b90ea" translate="yes" xml:space="preserve">
          <source>ChunksExact::is_sorted_by</source>
          <target state="translated">ChunksExact::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="79d9d36a408f53e4de5c4e4ffab1775bb912da6a" translate="yes" xml:space="preserve">
          <source>ChunksExact::is_sorted_by_key</source>
          <target state="translated">ChunksExact::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="771ece94e5f6839da3e62c7293b4073c66b5ccf0" translate="yes" xml:space="preserve">
          <source>ChunksExact::last</source>
          <target state="translated">ChunksExact::last</target>
        </trans-unit>
        <trans-unit id="d04428ca7f70a5f00f15abcf55a10a209eaea36d" translate="yes" xml:space="preserve">
          <source>ChunksExact::le</source>
          <target state="translated">ChunksExact::le</target>
        </trans-unit>
        <trans-unit id="cd273d7f8bb4f9172aa621558ccb244a8e0e0979" translate="yes" xml:space="preserve">
          <source>ChunksExact::len</source>
          <target state="translated">ChunksExact::len</target>
        </trans-unit>
        <trans-unit id="ec948532d311bcc3a5f81e42f14907fc1c9fecb9" translate="yes" xml:space="preserve">
          <source>ChunksExact::lt</source>
          <target state="translated">ChunksExact::lt</target>
        </trans-unit>
        <trans-unit id="234eec32d2ad13e1eda7f2d1a990f3639213a4c8" translate="yes" xml:space="preserve">
          <source>ChunksExact::map</source>
          <target state="translated">ChunksExact::map</target>
        </trans-unit>
        <trans-unit id="5b9df2abf79570f2343cfff286f67da33a0707b3" translate="yes" xml:space="preserve">
          <source>ChunksExact::max</source>
          <target state="translated">ChunksExact::max</target>
        </trans-unit>
        <trans-unit id="3110ffc9363fe6d3ded32fd3964daafa10bdb4a3" translate="yes" xml:space="preserve">
          <source>ChunksExact::max_by</source>
          <target state="translated">ChunksExact::max_by</target>
        </trans-unit>
        <trans-unit id="00d69caba9a85566d1a222ce74e4fb85e2a5cfec" translate="yes" xml:space="preserve">
          <source>ChunksExact::max_by_key</source>
          <target state="translated">ChunksExact::max_by_key</target>
        </trans-unit>
        <trans-unit id="8329b5a610c803d710a66f583901d46820343c9e" translate="yes" xml:space="preserve">
          <source>ChunksExact::min</source>
          <target state="translated">ChunksExact::min</target>
        </trans-unit>
        <trans-unit id="e877272b8cc77060fa896f2cefd521ae57935f56" translate="yes" xml:space="preserve">
          <source>ChunksExact::min_by</source>
          <target state="translated">ChunksExact::min_by</target>
        </trans-unit>
        <trans-unit id="86432ccb03ed2a1353298f6e13ba934e349b919f" translate="yes" xml:space="preserve">
          <source>ChunksExact::min_by_key</source>
          <target state="translated">ChunksExact::min_by_key</target>
        </trans-unit>
        <trans-unit id="45a928bad3291eee390c77cae3dff74562855316" translate="yes" xml:space="preserve">
          <source>ChunksExact::ne</source>
          <target state="translated">ChunksExact::ne</target>
        </trans-unit>
        <trans-unit id="020bc8a8d38f3f40c40807a8197216287eedb564" translate="yes" xml:space="preserve">
          <source>ChunksExact::next</source>
          <target state="translated">ChunksExact::next</target>
        </trans-unit>
        <trans-unit id="5603a742b6c4782423481ac1846038204b670979" translate="yes" xml:space="preserve">
          <source>ChunksExact::next_back</source>
          <target state="translated">ChunksExact::next_back</target>
        </trans-unit>
        <trans-unit id="18623098f6e9310de557961693fc7891c8a17b93" translate="yes" xml:space="preserve">
          <source>ChunksExact::nth</source>
          <target state="translated">ChunksExact::nth</target>
        </trans-unit>
        <trans-unit id="9996cfdb37bcbd975408cffcdc9943f3b8bcc3a8" translate="yes" xml:space="preserve">
          <source>ChunksExact::nth_back</source>
          <target state="translated">ChunksExact::nth_back</target>
        </trans-unit>
        <trans-unit id="3149b2e3d3a71393c15351bfdbcde8f7b50a2578" translate="yes" xml:space="preserve">
          <source>ChunksExact::partial_cmp</source>
          <target state="translated">ChunksExact::partial_cmp</target>
        </trans-unit>
        <trans-unit id="5ccf932aa46bb1679ba18c7dbb5e1bb8026838e4" translate="yes" xml:space="preserve">
          <source>ChunksExact::partition</source>
          <target state="translated">ChunksExact::partition</target>
        </trans-unit>
        <trans-unit id="2354b252ab2c9336650e78a146b814af4c512d3d" translate="yes" xml:space="preserve">
          <source>ChunksExact::peekable</source>
          <target state="translated">ChunksExact::peekable</target>
        </trans-unit>
        <trans-unit id="36a187b203f047836a51681fd89ebbbe65cf65c4" translate="yes" xml:space="preserve">
          <source>ChunksExact::position</source>
          <target state="translated">ChunksExact::position</target>
        </trans-unit>
        <trans-unit id="6059d192424bc00901823b2159d3369a6b5e6c5e" translate="yes" xml:space="preserve">
          <source>ChunksExact::product</source>
          <target state="translated">ChunksExact::product</target>
        </trans-unit>
        <trans-unit id="b053f564ea0f3d8a4127e90299d598810109b2df" translate="yes" xml:space="preserve">
          <source>ChunksExact::remainder</source>
          <target state="translated">ChunksExact::remainder</target>
        </trans-unit>
        <trans-unit id="a653c77906b4c3519234639139585340570af1e4" translate="yes" xml:space="preserve">
          <source>ChunksExact::rev</source>
          <target state="translated">ChunksExact::rev</target>
        </trans-unit>
        <trans-unit id="16128380b277386624557254a9480a38b64b25f9" translate="yes" xml:space="preserve">
          <source>ChunksExact::rfind</source>
          <target state="translated">ChunksExact::rfind</target>
        </trans-unit>
        <trans-unit id="a0dd887fd49ab7be489a6b29934904d215631cee" translate="yes" xml:space="preserve">
          <source>ChunksExact::rfold</source>
          <target state="translated">ChunksExact::rfold</target>
        </trans-unit>
        <trans-unit id="d60070cdf243f4d7f4551e638bee50d8496872bb" translate="yes" xml:space="preserve">
          <source>ChunksExact::rposition</source>
          <target state="translated">ChunksExact::rposition</target>
        </trans-unit>
        <trans-unit id="72b75a77bd6d5077eb15ef80026d42e8fc0eb2d8" translate="yes" xml:space="preserve">
          <source>ChunksExact::scan</source>
          <target state="translated">ChunksExact::scan</target>
        </trans-unit>
        <trans-unit id="3717b88a76f2a8bfcdc0a2f8d63a0d4b578e1445" translate="yes" xml:space="preserve">
          <source>ChunksExact::size_hint</source>
          <target state="translated">ChunksExact::size_hint</target>
        </trans-unit>
        <trans-unit id="f6b4259a10eaab95f2ce4ab8165b4ae9adb2784c" translate="yes" xml:space="preserve">
          <source>ChunksExact::skip</source>
          <target state="translated">ChunksExact::skip</target>
        </trans-unit>
        <trans-unit id="95ecc29f154cf5e295592240f5689085d195c97b" translate="yes" xml:space="preserve">
          <source>ChunksExact::skip_while</source>
          <target state="translated">ChunksExact::skip_while</target>
        </trans-unit>
        <trans-unit id="62bea6a4ef4920817f948d48616e1e95ead49f50" translate="yes" xml:space="preserve">
          <source>ChunksExact::step_by</source>
          <target state="translated">ChunksExact::step_by</target>
        </trans-unit>
        <trans-unit id="c2bb387c6ea9c36cfff72fc9c8ed80d4a0cc8587" translate="yes" xml:space="preserve">
          <source>ChunksExact::sum</source>
          <target state="translated">ChunksExact::sum</target>
        </trans-unit>
        <trans-unit id="ac390224eb72a46e6981b299b14ab78afafd3503" translate="yes" xml:space="preserve">
          <source>ChunksExact::take</source>
          <target state="translated">ChunksExact::take</target>
        </trans-unit>
        <trans-unit id="86689861039ffbbdb767595aa56071fd9e437aa9" translate="yes" xml:space="preserve">
          <source>ChunksExact::take_while</source>
          <target state="translated">ChunksExact::take_while</target>
        </trans-unit>
        <trans-unit id="72ec6654ac9f58927d522ec441a8b4412cebc8ee" translate="yes" xml:space="preserve">
          <source>ChunksExact::to_owned</source>
          <target state="translated">ChunksExact::to_owned</target>
        </trans-unit>
        <trans-unit id="6a58504106d4ce66ff72d9796800adac371192b7" translate="yes" xml:space="preserve">
          <source>ChunksExact::try_fold</source>
          <target state="translated">ChunksExact::try_fold</target>
        </trans-unit>
        <trans-unit id="90cbf67dbb6c9a5d6bffd4a9dfff0d63ab99ff58" translate="yes" xml:space="preserve">
          <source>ChunksExact::try_for_each</source>
          <target state="translated">ChunksExact::try_for_each</target>
        </trans-unit>
        <trans-unit id="16554d5a555d92a9273bd4d30a5345a192ceed79" translate="yes" xml:space="preserve">
          <source>ChunksExact::try_from</source>
          <target state="translated">ChunksExact::try_from</target>
        </trans-unit>
        <trans-unit id="d4f268e7217fe05da0fb4246eaa5ccdb7e320aab" translate="yes" xml:space="preserve">
          <source>ChunksExact::try_into</source>
          <target state="translated">ChunksExact::try_into</target>
        </trans-unit>
        <trans-unit id="0d778780179763bd7c5fe728b63013f090eb0ba2" translate="yes" xml:space="preserve">
          <source>ChunksExact::try_rfold</source>
          <target state="translated">ChunksExact::try_rfold</target>
        </trans-unit>
        <trans-unit id="e27075704a6a3025c3c12103079f42494d4fc4b0" translate="yes" xml:space="preserve">
          <source>ChunksExact::type_id</source>
          <target state="translated">ChunksExact::type_id</target>
        </trans-unit>
        <trans-unit id="d578d54e9ba64d926adb3a340b098a9b56cdfaaa" translate="yes" xml:space="preserve">
          <source>ChunksExact::unzip</source>
          <target state="translated">ChunksExact::unzip</target>
        </trans-unit>
        <trans-unit id="35bb75b1df26f0c066da31b1354cd2155cf77ebc" translate="yes" xml:space="preserve">
          <source>ChunksExact::zip</source>
          <target state="translated">ChunksExact::zip</target>
        </trans-unit>
        <trans-unit id="0809a0bcb2077fcc7748251915efdffdb00bc010" translate="yes" xml:space="preserve">
          <source>ChunksExactMut</source>
          <target state="translated">ChunksExactMut</target>
        </trans-unit>
        <trans-unit id="595cdd2959aab4813af1fb27f59874af207763a6" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::all</source>
          <target state="translated">ChunksExactMut::all</target>
        </trans-unit>
        <trans-unit id="959c0251e470db1f0343887f62075c36b4bd0de3" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::any</source>
          <target state="translated">ChunksExactMut::any</target>
        </trans-unit>
        <trans-unit id="5f6a7a6c0cad92202c0c72d10c7e4532ac033b68" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::borrow</source>
          <target state="translated">ChunksExactMut::borrow</target>
        </trans-unit>
        <trans-unit id="91bf717d0fb8ed19faf202d870f5fb5ee03887ad" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::borrow_mut</source>
          <target state="translated">ChunksExactMut::borrow_mut</target>
        </trans-unit>
        <trans-unit id="9f9c13581a725cae08fb4d4ae40f17dd51f5018f" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::by_ref</source>
          <target state="translated">ChunksExactMut::by_ref</target>
        </trans-unit>
        <trans-unit id="70eb6074e0e777b972f4b02b1851cb6789b26025" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::chain</source>
          <target state="translated">ChunksExactMut::chain</target>
        </trans-unit>
        <trans-unit id="cfad546bbf7ee0b5a30365369fc2b034c823fa8d" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::cloned</source>
          <target state="translated">ChunksExactMut::cloned</target>
        </trans-unit>
        <trans-unit id="7be42e4d729e26764e3ecb87ce41d0b27955072b" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::cmp</source>
          <target state="translated">ChunksExactMut::cmp</target>
        </trans-unit>
        <trans-unit id="f2fa0027416e840c2dfc309c59ccb1d4d6ede534" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::collect</source>
          <target state="translated">ChunksExactMut::collect</target>
        </trans-unit>
        <trans-unit id="8836ce6f494bd7584f42e1102bbac0e6bdd7aee9" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::copied</source>
          <target state="translated">ChunksExactMut::copied</target>
        </trans-unit>
        <trans-unit id="94a626fb155c5c9bfde1a733537d0f996aae71a8" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::count</source>
          <target state="translated">ChunksExactMut::count</target>
        </trans-unit>
        <trans-unit id="4815b3755bf37707cc303d2382bbfd81065b7ae7" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::cycle</source>
          <target state="translated">ChunksExactMut::cycle</target>
        </trans-unit>
        <trans-unit id="8a442bb66ce3b99e42cfcf6e2292c2cf33a58d34" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::enumerate</source>
          <target state="translated">ChunksExactMut::enumerate</target>
        </trans-unit>
        <trans-unit id="578ef9e1860c7f87885fa6c2a942b359ba09ef11" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::eq</source>
          <target state="translated">ChunksExactMut::eq</target>
        </trans-unit>
        <trans-unit id="a578d83341591d198e37be8b9cbb2b83bb5f5bef" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::filter</source>
          <target state="translated">ChunksExactMut::filter</target>
        </trans-unit>
        <trans-unit id="fae51de94694382401f6a41c1d4f8555f5874389" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::filter_map</source>
          <target state="translated">ChunksExactMut::filter_map</target>
        </trans-unit>
        <trans-unit id="f80262b96ee024b61608c39837aab0cb814e5eb3" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::find</source>
          <target state="translated">ChunksExactMut::find</target>
        </trans-unit>
        <trans-unit id="1158da2408f341e240e7e593ba56f32161beb968" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::find_map</source>
          <target state="translated">ChunksExactMut::find_map</target>
        </trans-unit>
        <trans-unit id="700189cdaa2993a7e6b9191556156aa499169276" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::flat_map</source>
          <target state="translated">ChunksExactMut::flat_map</target>
        </trans-unit>
        <trans-unit id="a584b4108036788aab0f0d18f923b5b32ebd935d" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::flatten</source>
          <target state="translated">ChunksExactMut::flatten</target>
        </trans-unit>
        <trans-unit id="088bfc4b9fa682cb8ff403db4c864b169b371629" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::fmt</source>
          <target state="translated">ChunksExactMut::fmt</target>
        </trans-unit>
        <trans-unit id="a511ea4ed9173c7097d2890af9b89ddb2f40ec8d" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::fold</source>
          <target state="translated">ChunksExactMut::fold</target>
        </trans-unit>
        <trans-unit id="bec8b32701e5f362b6a2372b767c09121291a6bf" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::for_each</source>
          <target state="translated">ChunksExactMut::for_each</target>
        </trans-unit>
        <trans-unit id="6e181d1b55b3e82a0434f13341ff87fb28401a63" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::from</source>
          <target state="translated">ChunksExactMut::from</target>
        </trans-unit>
        <trans-unit id="b4dbd57940314067d4a74ef8d5d327888ada1a33" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::fuse</source>
          <target state="translated">ChunksExactMut::fuse</target>
        </trans-unit>
        <trans-unit id="67d8793810520da3bbbfe045e806df77d583ea17" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::ge</source>
          <target state="translated">ChunksExactMut::ge</target>
        </trans-unit>
        <trans-unit id="a199cde1e5919d822be204a4c04e3dc4ea033eb4" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::gt</source>
          <target state="translated">ChunksExactMut::gt</target>
        </trans-unit>
        <trans-unit id="d8bae1924306e7c29aa400834b1d8720875e37ca" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::inspect</source>
          <target state="translated">ChunksExactMut::inspect</target>
        </trans-unit>
        <trans-unit id="70f478d3fe9f7fd2b54ee216af8c85d1271040fd" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::into</source>
          <target state="translated">ChunksExactMut::into</target>
        </trans-unit>
        <trans-unit id="e8af8ded91ba7c91a73792365acab001943dd089" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::into_iter</source>
          <target state="translated">ChunksExactMut::into_iter</target>
        </trans-unit>
        <trans-unit id="f9887c9842d79ddd9c15c1f69cbdd5495ccd3f44" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::into_remainder</source>
          <target state="translated">ChunksExactMut::into_remainder</target>
        </trans-unit>
        <trans-unit id="1cfd112284e830b834880900dde83c82f35944cd" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::is_empty</source>
          <target state="translated">ChunksExactMut::is_empty</target>
        </trans-unit>
        <trans-unit id="e3106ec55d905da759ac957bd1f1a4a24eeeea12" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::is_sorted</source>
          <target state="translated">ChunksExactMut::is_sorted</target>
        </trans-unit>
        <trans-unit id="8a9d074f2bb4e6cea5c1e7f8dc9386fff88e3537" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::is_sorted_by</source>
          <target state="translated">ChunksExactMut::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="520970a2ff78911f58d5865ff3e0bfc88d391db5" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::is_sorted_by_key</source>
          <target state="translated">ChunksExactMut::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="a86133f147e3f7f31360e2d16c19b2d61736c036" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::last</source>
          <target state="translated">ChunksExactMut::last</target>
        </trans-unit>
        <trans-unit id="3c0230e2f25c0b3a791796909027387ceb91f089" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::le</source>
          <target state="translated">ChunksExactMut::le</target>
        </trans-unit>
        <trans-unit id="cd12b9cc45ddc9a76ba7bada6bdbcbd1b4bafc7f" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::len</source>
          <target state="translated">ChunksExactMut::len</target>
        </trans-unit>
        <trans-unit id="b2856afc803a7f55b26d26c8a748b6a7351b9c8f" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::lt</source>
          <target state="translated">ChunksExactMut::lt</target>
        </trans-unit>
        <trans-unit id="ae694f7b7bb00d38a2c4988ee27caa90e35b8b00" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::map</source>
          <target state="translated">ChunksExactMut::map</target>
        </trans-unit>
        <trans-unit id="bdd1411d9bb3a332d116003efeb5fda9614a2ac6" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::max</source>
          <target state="translated">ChunksExactMut::max</target>
        </trans-unit>
        <trans-unit id="556de61b1170d0ee2ffd6d5fba1329f44d65919d" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::max_by</source>
          <target state="translated">ChunksExactMut::max_by</target>
        </trans-unit>
        <trans-unit id="1fedc9814498898f575a051fcc39e79e3eb5dcf0" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::max_by_key</source>
          <target state="translated">ChunksExactMut::max_by_key</target>
        </trans-unit>
        <trans-unit id="76ce0ecc1cd3e18ec96fa40fb8d317feccb1d18e" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::min</source>
          <target state="translated">ChunksExactMut::min</target>
        </trans-unit>
        <trans-unit id="b53e542eca86e2c95988074d74ff0f78fbd23489" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::min_by</source>
          <target state="translated">ChunksExactMut::min_by</target>
        </trans-unit>
        <trans-unit id="276be694a3eaa0d70bfaefd522d7f23aad6e4110" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::min_by_key</source>
          <target state="translated">ChunksExactMut::min_by_key</target>
        </trans-unit>
        <trans-unit id="d565ab1d24e77ef2914b4522a33715d3eee9d446" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::ne</source>
          <target state="translated">ChunksExactMut::ne</target>
        </trans-unit>
        <trans-unit id="454b7ab1c9341c165ac8fc1766299824d9c412f2" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::next</source>
          <target state="translated">ChunksExactMut::next</target>
        </trans-unit>
        <trans-unit id="f8cb10bca34ae1b44a5da1271cbac892b79ff5c2" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::next_back</source>
          <target state="translated">ChunksExactMut::next_back</target>
        </trans-unit>
        <trans-unit id="3fb452b849aa926e6cd39a56cb5ea27fff402148" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::nth</source>
          <target state="translated">ChunksExactMut::nth</target>
        </trans-unit>
        <trans-unit id="c97b3c1cabbc9d91ed47bf4874f0b25a28cff06e" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::nth_back</source>
          <target state="translated">ChunksExactMut::nth_back</target>
        </trans-unit>
        <trans-unit id="29a35c9c6b0309512a47cfb683c94425a9762a68" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::partial_cmp</source>
          <target state="translated">ChunksExactMut::partial_cmp</target>
        </trans-unit>
        <trans-unit id="5b3f50e51e3f82652aa0e8fa01b227cb802471d4" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::partition</source>
          <target state="translated">ChunksExactMut::partition</target>
        </trans-unit>
        <trans-unit id="c0d06fa84836af38900f574ce01349257cd9105c" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::peekable</source>
          <target state="translated">ChunksExactMut::peekable</target>
        </trans-unit>
        <trans-unit id="a74c1287d217c05f0a205b20e491c5b48969af3d" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::position</source>
          <target state="translated">ChunksExactMut::position</target>
        </trans-unit>
        <trans-unit id="226af54660bee2a8d60216a0a3f1000aafde55e9" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::product</source>
          <target state="translated">ChunksExactMut::product</target>
        </trans-unit>
        <trans-unit id="744440344f718bf47b1f5bac2185d88b799beedb" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::rev</source>
          <target state="translated">ChunksExactMut::rev</target>
        </trans-unit>
        <trans-unit id="a1962f23b1c124c63ed5d9648050fdbdb130d959" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::rfind</source>
          <target state="translated">ChunksExactMut::rfind</target>
        </trans-unit>
        <trans-unit id="81583319690bb84f320afdd735e8e2676ecdfb1b" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::rfold</source>
          <target state="translated">ChunksExactMut::rfold</target>
        </trans-unit>
        <trans-unit id="c511109d97a63453a70259955524aeaaf99833a4" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::rposition</source>
          <target state="translated">ChunksExactMut::rposition</target>
        </trans-unit>
        <trans-unit id="5a42fc3a2df6a56ca7a4f085d4661d6d3c242e47" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::scan</source>
          <target state="translated">ChunksExactMut::scan</target>
        </trans-unit>
        <trans-unit id="6dd1948695b5ecc3e39c131a028afc7207dc2c52" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::size_hint</source>
          <target state="translated">ChunksExactMut::size_hint</target>
        </trans-unit>
        <trans-unit id="24e132278778a6870e56fc2bbc2018478e8f92df" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::skip</source>
          <target state="translated">ChunksExactMut::skip</target>
        </trans-unit>
        <trans-unit id="610fceaa659bd031c33a71dec103a950971d8257" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::skip_while</source>
          <target state="translated">ChunksExactMut::skip_while</target>
        </trans-unit>
        <trans-unit id="33ca5d5c73cc97246b89b809937f2ee3c511d562" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::step_by</source>
          <target state="translated">ChunksExactMut::step_by</target>
        </trans-unit>
        <trans-unit id="973e88239d3e8767e44b868a765b99f003f8ba4f" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::sum</source>
          <target state="translated">ChunksExactMut::sum</target>
        </trans-unit>
        <trans-unit id="5f1437a1a73dd335db563347431efe04ad222b77" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::take</source>
          <target state="translated">ChunksExactMut::take</target>
        </trans-unit>
        <trans-unit id="db11ee893a3bd0379a27f0c6b962d2fe9059be40" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::take_while</source>
          <target state="translated">ChunksExactMut::take_while</target>
        </trans-unit>
        <trans-unit id="0a813692eca3c6114b0a45bbd2ba07220697560b" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::try_fold</source>
          <target state="translated">ChunksExactMut::try_fold</target>
        </trans-unit>
        <trans-unit id="f2508f8b6937b9915215fbb18e11afaecb4895e8" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::try_for_each</source>
          <target state="translated">ChunksExactMut::try_for_each</target>
        </trans-unit>
        <trans-unit id="0b8e2477fb9681b21d7216b20fac327da4983a70" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::try_from</source>
          <target state="translated">ChunksExactMut::try_from</target>
        </trans-unit>
        <trans-unit id="10cef7ffd59bc26f2b8e75436b06a271cbc27cdb" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::try_into</source>
          <target state="translated">ChunksExactMut::try_into</target>
        </trans-unit>
        <trans-unit id="3bf2f567340b6f68f6e5b575aed56f7e587fb83e" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::try_rfold</source>
          <target state="translated">ChunksExactMut::try_rfold</target>
        </trans-unit>
        <trans-unit id="4cfdf78320b5f915b21c64cdc8e95425b90bdf7b" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::type_id</source>
          <target state="translated">ChunksExactMut::type_id</target>
        </trans-unit>
        <trans-unit id="3b1f4b5e6064b6450043a10c034ef64f5316d9db" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::unzip</source>
          <target state="translated">ChunksExactMut::unzip</target>
        </trans-unit>
        <trans-unit id="3b0e641f354d7e48c53a4628f22a0981e4f5ee80" translate="yes" xml:space="preserve">
          <source>ChunksExactMut::zip</source>
          <target state="translated">ChunksExactMut::zip</target>
        </trans-unit>
        <trans-unit id="e005a69714717e634b176054304711a993e830c9" translate="yes" xml:space="preserve">
          <source>ChunksMut</source>
          <target state="translated">ChunksMut</target>
        </trans-unit>
        <trans-unit id="b6409a204bab72a903dd9442addfcf8f2962581b" translate="yes" xml:space="preserve">
          <source>ChunksMut::all</source>
          <target state="translated">ChunksMut::all</target>
        </trans-unit>
        <trans-unit id="732ef9df54720ff5b0b47a162098ae06bc5d1440" translate="yes" xml:space="preserve">
          <source>ChunksMut::any</source>
          <target state="translated">ChunksMut::any</target>
        </trans-unit>
        <trans-unit id="6bb5a5ed8d231f9a56ad0526c83445687002b589" translate="yes" xml:space="preserve">
          <source>ChunksMut::borrow</source>
          <target state="translated">ChunksMut::borrow</target>
        </trans-unit>
        <trans-unit id="6521d639730bef72d772154d356795140030ddd6" translate="yes" xml:space="preserve">
          <source>ChunksMut::borrow_mut</source>
          <target state="translated">ChunksMut::borrow_mut</target>
        </trans-unit>
        <trans-unit id="cbffe2bf11f9818ce90dfb1cde2ee498b205aa9a" translate="yes" xml:space="preserve">
          <source>ChunksMut::by_ref</source>
          <target state="translated">ChunksMut::by_ref</target>
        </trans-unit>
        <trans-unit id="e96c64b355c9e44039c6732cafb2c6d63d8b4d05" translate="yes" xml:space="preserve">
          <source>ChunksMut::chain</source>
          <target state="translated">ChunksMut::chain</target>
        </trans-unit>
        <trans-unit id="3b644bfc362534220e480c62aafa5a1a5ac04e4c" translate="yes" xml:space="preserve">
          <source>ChunksMut::cloned</source>
          <target state="translated">ChunksMut::cloned</target>
        </trans-unit>
        <trans-unit id="bdec866d8f608cb80d534ae3309ad628add48422" translate="yes" xml:space="preserve">
          <source>ChunksMut::cmp</source>
          <target state="translated">ChunksMut::cmp</target>
        </trans-unit>
        <trans-unit id="a09b731faf70472967f6c20b22bde77f0d2848c7" translate="yes" xml:space="preserve">
          <source>ChunksMut::collect</source>
          <target state="translated">ChunksMut::collect</target>
        </trans-unit>
        <trans-unit id="4f6c10cf9b36f92c8a8724b64eded5db868cbf6f" translate="yes" xml:space="preserve">
          <source>ChunksMut::copied</source>
          <target state="translated">ChunksMut::copied</target>
        </trans-unit>
        <trans-unit id="e97877cbbf22f7b227373675624d341552b56db6" translate="yes" xml:space="preserve">
          <source>ChunksMut::count</source>
          <target state="translated">ChunksMut::count</target>
        </trans-unit>
        <trans-unit id="7837e8e61ad0d4eeff391a294cb5b668bc790b63" translate="yes" xml:space="preserve">
          <source>ChunksMut::cycle</source>
          <target state="translated">ChunksMut::cycle</target>
        </trans-unit>
        <trans-unit id="f3f245804fd8b7abfa770c499d71f2a609d4e8fd" translate="yes" xml:space="preserve">
          <source>ChunksMut::enumerate</source>
          <target state="translated">ChunksMut::enumerate</target>
        </trans-unit>
        <trans-unit id="303614edf6d83a12e09cea1adebb24574ad290ce" translate="yes" xml:space="preserve">
          <source>ChunksMut::eq</source>
          <target state="translated">ChunksMut::eq</target>
        </trans-unit>
        <trans-unit id="9d71de8bc16474017d2dc898808cda76dc6f3d82" translate="yes" xml:space="preserve">
          <source>ChunksMut::filter</source>
          <target state="translated">ChunksMut::filter</target>
        </trans-unit>
        <trans-unit id="6113c26bb48ffbf4cdbe2206ed52536897233759" translate="yes" xml:space="preserve">
          <source>ChunksMut::filter_map</source>
          <target state="translated">ChunksMut::filter_map</target>
        </trans-unit>
        <trans-unit id="360d7d6e2407a846d92e6944694d0509a9746c6e" translate="yes" xml:space="preserve">
          <source>ChunksMut::find</source>
          <target state="translated">ChunksMut::find</target>
        </trans-unit>
        <trans-unit id="66702c5986b9b1367b5376d3610465e4a2ada8a0" translate="yes" xml:space="preserve">
          <source>ChunksMut::find_map</source>
          <target state="translated">ChunksMut::find_map</target>
        </trans-unit>
        <trans-unit id="ab1c2101268a8b5fbf9c5c06da9e43189d70b8ad" translate="yes" xml:space="preserve">
          <source>ChunksMut::flat_map</source>
          <target state="translated">ChunksMut::flat_map</target>
        </trans-unit>
        <trans-unit id="9d8f04b3b7937102fc1fe835b32a78276fc583ae" translate="yes" xml:space="preserve">
          <source>ChunksMut::flatten</source>
          <target state="translated">ChunksMut::flatten</target>
        </trans-unit>
        <trans-unit id="f7fc407b737dabea2db9c89ab413f2368fc63b9a" translate="yes" xml:space="preserve">
          <source>ChunksMut::fmt</source>
          <target state="translated">ChunksMut::fmt</target>
        </trans-unit>
        <trans-unit id="d91ef2ef182207d714635864521605c2d6db918f" translate="yes" xml:space="preserve">
          <source>ChunksMut::fold</source>
          <target state="translated">ChunksMut::fold</target>
        </trans-unit>
        <trans-unit id="82009ba2e2864542bfced5eff1891b0d564a6d9b" translate="yes" xml:space="preserve">
          <source>ChunksMut::for_each</source>
          <target state="translated">ChunksMut::for_each</target>
        </trans-unit>
        <trans-unit id="d40cf8e207f45cab32145db1d8cd1936eed0cde4" translate="yes" xml:space="preserve">
          <source>ChunksMut::from</source>
          <target state="translated">ChunksMut::from</target>
        </trans-unit>
        <trans-unit id="2cb1ccdd758c4772fa8594d964d7f79fbc51888b" translate="yes" xml:space="preserve">
          <source>ChunksMut::fuse</source>
          <target state="translated">ChunksMut::fuse</target>
        </trans-unit>
        <trans-unit id="e626a15f09cca94ac29eff61761603073aa90f7e" translate="yes" xml:space="preserve">
          <source>ChunksMut::ge</source>
          <target state="translated">ChunksMut::ge</target>
        </trans-unit>
        <trans-unit id="7f8eec8718ef6d638b985d21509eac81205ffe71" translate="yes" xml:space="preserve">
          <source>ChunksMut::gt</source>
          <target state="translated">ChunksMut::gt</target>
        </trans-unit>
        <trans-unit id="7b5ea173673db62fa9a22b9bc5ffa08ae93a8989" translate="yes" xml:space="preserve">
          <source>ChunksMut::inspect</source>
          <target state="translated">ChunksMut::inspect</target>
        </trans-unit>
        <trans-unit id="e0cd7ec42a42bb7f61bee4eb6d4c710e3144637e" translate="yes" xml:space="preserve">
          <source>ChunksMut::into</source>
          <target state="translated">ChunksMut::into</target>
        </trans-unit>
        <trans-unit id="2cefe6528958a4628e8367d3a09c6d1e7833997d" translate="yes" xml:space="preserve">
          <source>ChunksMut::into_iter</source>
          <target state="translated">ChunksMut::into_iter</target>
        </trans-unit>
        <trans-unit id="920cc95183828734bf4aa5968dff39fc3992f3a5" translate="yes" xml:space="preserve">
          <source>ChunksMut::is_empty</source>
          <target state="translated">ChunksMut::is_empty</target>
        </trans-unit>
        <trans-unit id="4e8c78d751f751e89ef8b5ec8ac49971b649d73e" translate="yes" xml:space="preserve">
          <source>ChunksMut::is_sorted</source>
          <target state="translated">ChunksMut::is_sorted</target>
        </trans-unit>
        <trans-unit id="45195e5542e693e5d176463fdc1eccdc454e967e" translate="yes" xml:space="preserve">
          <source>ChunksMut::is_sorted_by</source>
          <target state="translated">ChunksMut::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="8d214cc7ceb9f79447b6ad760a472647c93c67fe" translate="yes" xml:space="preserve">
          <source>ChunksMut::is_sorted_by_key</source>
          <target state="translated">ChunksMut::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="0fe707db8ac47af639b7223e5fcd8c6a4fb23d9e" translate="yes" xml:space="preserve">
          <source>ChunksMut::last</source>
          <target state="translated">ChunksMut::last</target>
        </trans-unit>
        <trans-unit id="3d68a7cb05d2c0ff84c3c2716af57dda119fd6f2" translate="yes" xml:space="preserve">
          <source>ChunksMut::le</source>
          <target state="translated">ChunksMut::le</target>
        </trans-unit>
        <trans-unit id="6fab865e387b1198bbad58f849c758be1bc2975b" translate="yes" xml:space="preserve">
          <source>ChunksMut::len</source>
          <target state="translated">ChunksMut::len</target>
        </trans-unit>
        <trans-unit id="0c7f80b2df3f963c8190f7dca515bf51d4c8074f" translate="yes" xml:space="preserve">
          <source>ChunksMut::lt</source>
          <target state="translated">ChunksMut::lt</target>
        </trans-unit>
        <trans-unit id="00f171471103677ebd931f2b091be0fa788eb1c8" translate="yes" xml:space="preserve">
          <source>ChunksMut::map</source>
          <target state="translated">ChunksMut::map</target>
        </trans-unit>
        <trans-unit id="0a6b71986a1069956bfd6df826eed6b1a29909f3" translate="yes" xml:space="preserve">
          <source>ChunksMut::max</source>
          <target state="translated">ChunksMut::max</target>
        </trans-unit>
        <trans-unit id="0ceba6013b988f82a1ad804de480c1b4445a3309" translate="yes" xml:space="preserve">
          <source>ChunksMut::max_by</source>
          <target state="translated">ChunksMut::max_by</target>
        </trans-unit>
        <trans-unit id="ee60726c435c82905df7a5018d09cc4363502e26" translate="yes" xml:space="preserve">
          <source>ChunksMut::max_by_key</source>
          <target state="translated">ChunksMut::max_by_key</target>
        </trans-unit>
        <trans-unit id="65ef2be2f38c7fc64e8e4b56544702b6547e221e" translate="yes" xml:space="preserve">
          <source>ChunksMut::min</source>
          <target state="translated">ChunksMut::min</target>
        </trans-unit>
        <trans-unit id="d8d0259d88605cf2c8cb3ff3504d3c66828c68d5" translate="yes" xml:space="preserve">
          <source>ChunksMut::min_by</source>
          <target state="translated">ChunksMut::min_by</target>
        </trans-unit>
        <trans-unit id="7178d579d9933a7e0f228d2c5f1f0d68fe57f54b" translate="yes" xml:space="preserve">
          <source>ChunksMut::min_by_key</source>
          <target state="translated">ChunksMut::min_by_key</target>
        </trans-unit>
        <trans-unit id="f611b7da292fee8514e3b14c89b15b123e210f2a" translate="yes" xml:space="preserve">
          <source>ChunksMut::ne</source>
          <target state="translated">ChunksMut::ne</target>
        </trans-unit>
        <trans-unit id="7ea9b73c6f3c9634d205c1dc4461d56bcbdf33a4" translate="yes" xml:space="preserve">
          <source>ChunksMut::next</source>
          <target state="translated">ChunksMut::next</target>
        </trans-unit>
        <trans-unit id="50f30b3db62f1b25e58e6554565693c779c5b3d6" translate="yes" xml:space="preserve">
          <source>ChunksMut::next_back</source>
          <target state="translated">ChunksMut::next_back</target>
        </trans-unit>
        <trans-unit id="e297a7af05a41cbfcfaf190218e566407646e1c8" translate="yes" xml:space="preserve">
          <source>ChunksMut::nth</source>
          <target state="translated">ChunksMut::nth</target>
        </trans-unit>
        <trans-unit id="a708df2ad4ee7b5534b2582466b69ba8721d5a7d" translate="yes" xml:space="preserve">
          <source>ChunksMut::nth_back</source>
          <target state="translated">ChunksMut::nth_back</target>
        </trans-unit>
        <trans-unit id="aac66b432969dfc293c791674cac62d37db3ff99" translate="yes" xml:space="preserve">
          <source>ChunksMut::partial_cmp</source>
          <target state="translated">ChunksMut::partial_cmp</target>
        </trans-unit>
        <trans-unit id="b2744a57984f7f1e1af78e68cbbc79c2b396c930" translate="yes" xml:space="preserve">
          <source>ChunksMut::partition</source>
          <target state="translated">ChunksMut::partition</target>
        </trans-unit>
        <trans-unit id="bf21cb5848981e73f330bf147fb6a0081cfcd766" translate="yes" xml:space="preserve">
          <source>ChunksMut::peekable</source>
          <target state="translated">ChunksMut::peekable</target>
        </trans-unit>
        <trans-unit id="06fdb18f76b89be4ba9b4b269c7dfb25894d0302" translate="yes" xml:space="preserve">
          <source>ChunksMut::position</source>
          <target state="translated">ChunksMut::position</target>
        </trans-unit>
        <trans-unit id="10269d451ed750a871353d1cdc98c9fc01b59c70" translate="yes" xml:space="preserve">
          <source>ChunksMut::product</source>
          <target state="translated">ChunksMut::product</target>
        </trans-unit>
        <trans-unit id="90c1d8052c592c3c80da6c4e40c14ed8bc73b6fb" translate="yes" xml:space="preserve">
          <source>ChunksMut::rev</source>
          <target state="translated">ChunksMut::rev</target>
        </trans-unit>
        <trans-unit id="ef8e322d0ea71f3ad46c4eb6329028f0ede483b0" translate="yes" xml:space="preserve">
          <source>ChunksMut::rfind</source>
          <target state="translated">ChunksMut::rfind</target>
        </trans-unit>
        <trans-unit id="10a1a868c68b73c08ec1e6a68d4ab993e77fce77" translate="yes" xml:space="preserve">
          <source>ChunksMut::rfold</source>
          <target state="translated">ChunksMut::rfold</target>
        </trans-unit>
        <trans-unit id="8873489092bc0290ab3592b3643b4f427444f396" translate="yes" xml:space="preserve">
          <source>ChunksMut::rposition</source>
          <target state="translated">ChunksMut::rposition</target>
        </trans-unit>
        <trans-unit id="d4507bb3ed4f479a0c2387a1c2a776d457b333aa" translate="yes" xml:space="preserve">
          <source>ChunksMut::scan</source>
          <target state="translated">ChunksMut::scan</target>
        </trans-unit>
        <trans-unit id="82cd2993dddf04a8cc14c7bf59dbc7a616e29ef9" translate="yes" xml:space="preserve">
          <source>ChunksMut::size_hint</source>
          <target state="translated">ChunksMut::size_hint</target>
        </trans-unit>
        <trans-unit id="c88b5627d57dd9cd65548208ff9f79ca9eae835d" translate="yes" xml:space="preserve">
          <source>ChunksMut::skip</source>
          <target state="translated">ChunksMut::skip</target>
        </trans-unit>
        <trans-unit id="8d05794de34a4f9bee364c9f310bf13b82acf4ae" translate="yes" xml:space="preserve">
          <source>ChunksMut::skip_while</source>
          <target state="translated">ChunksMut::skip_while</target>
        </trans-unit>
        <trans-unit id="8b67581d171ed0d3eb62d50fcecbdbd2c399279a" translate="yes" xml:space="preserve">
          <source>ChunksMut::step_by</source>
          <target state="translated">ChunksMut::step_by</target>
        </trans-unit>
        <trans-unit id="c52fa36187e223638d49c9485afea3ef50dc15e8" translate="yes" xml:space="preserve">
          <source>ChunksMut::sum</source>
          <target state="translated">ChunksMut::sum</target>
        </trans-unit>
        <trans-unit id="73bf05f83315053385ca93078ae099d88f440620" translate="yes" xml:space="preserve">
          <source>ChunksMut::take</source>
          <target state="translated">ChunksMut::take</target>
        </trans-unit>
        <trans-unit id="4325381eaed2f464dc5e481fe8ae69e01c92fe05" translate="yes" xml:space="preserve">
          <source>ChunksMut::take_while</source>
          <target state="translated">ChunksMut::take_while</target>
        </trans-unit>
        <trans-unit id="0f476fa8b14bce29da0aa843d4bba6b1db7bc2e7" translate="yes" xml:space="preserve">
          <source>ChunksMut::try_fold</source>
          <target state="translated">ChunksMut::try_fold</target>
        </trans-unit>
        <trans-unit id="0c529b3ee962cc0b1cd21334329c15862b1178f3" translate="yes" xml:space="preserve">
          <source>ChunksMut::try_for_each</source>
          <target state="translated">ChunksMut::try_for_each</target>
        </trans-unit>
        <trans-unit id="f55441aa11e5280f935c1d6fd995af2ef40a3fb3" translate="yes" xml:space="preserve">
          <source>ChunksMut::try_from</source>
          <target state="translated">ChunksMut::try_from</target>
        </trans-unit>
        <trans-unit id="c89fbf5c1192878b8970893e159bd5e3d478f2d4" translate="yes" xml:space="preserve">
          <source>ChunksMut::try_into</source>
          <target state="translated">ChunksMut::try_into</target>
        </trans-unit>
        <trans-unit id="81f19b46fd329674fe33131eae4f26d0c091f47d" translate="yes" xml:space="preserve">
          <source>ChunksMut::try_rfold</source>
          <target state="translated">ChunksMut::try_rfold</target>
        </trans-unit>
        <trans-unit id="90ce1879bedc06bf2222aada78eade3ce93ae24f" translate="yes" xml:space="preserve">
          <source>ChunksMut::type_id</source>
          <target state="translated">ChunksMut::type_id</target>
        </trans-unit>
        <trans-unit id="e04fe866e5636a3225ba7c86e025711894648df4" translate="yes" xml:space="preserve">
          <source>ChunksMut::unzip</source>
          <target state="translated">ChunksMut::unzip</target>
        </trans-unit>
        <trans-unit id="4fbc7a82135c16e7652ab0f66232c12c3d5aa127" translate="yes" xml:space="preserve">
          <source>ChunksMut::zip</source>
          <target state="translated">ChunksMut::zip</target>
        </trans-unit>
        <trans-unit id="ae42da5747a62b1c97c94a97dafa42dac6225034" translate="yes" xml:space="preserve">
          <source>Clearer Trait Bounds with &lt;code id=&quot;clearer-trait-bounds-with-where-clauses&quot;&gt;where&lt;/code&gt; Clauses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704c1c7ebbbdab6c11bde87947cd6e0b337448bf" translate="yes" xml:space="preserve">
          <source>Clears the &lt;code&gt;VecDeque&lt;/code&gt;, removing all values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc0f62186ff68aae3daab2adc700cf14d2b48d4" translate="yes" xml:space="preserve">
          <source>Clears the binary heap, returning an iterator over the removed elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421428088d1252bcbf2808b3933ee3a7ce574f24" translate="yes" xml:space="preserve">
          <source>Clears the entire environment map for the child process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7fdbe0eb8cd10acf54fb66733995eea07c7d7a" translate="yes" xml:space="preserve">
          <source>Clears the map, removing all key-value pairs. Keeps the allocated memory for reuse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ed141dbaafe580111f2991abc06cfd680a99f2" translate="yes" xml:space="preserve">
          <source>Clears the map, removing all values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7883addcf33f3971efd326550a3a5627a87bc3" translate="yes" xml:space="preserve">
          <source>Clears the map, returning all key-value pairs as an iterator. Keeps the allocated memory for reuse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d78a6277caf959c0e092562794636dc93abb167" translate="yes" xml:space="preserve">
          <source>Clears the set, removing all values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10bf252f12115f97178d7d27ae9fb5da49efd023" translate="yes" xml:space="preserve">
          <source>Clears the set, returning all elements in an iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268c108772f20640d5f33fb210e08b6518f52cc4" translate="yes" xml:space="preserve">
          <source>Clears the vector, removing all values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc57a0da9682e2e458c64f2a10d19cd051b900cd" translate="yes" xml:space="preserve">
          <source>Clients who wish to make use of excess capacity are encouraged to use the &lt;code&gt;alloc_excess&lt;/code&gt; and &lt;code&gt;realloc_excess&lt;/code&gt; instead, as this method is constrained to report conservative values that serve as valid bounds for &lt;em&gt;all possible&lt;/em&gt; allocation method calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fbc83fc8936487aa62c35b4e32d5eabdacddeaf" translate="yes" xml:space="preserve">
          <source>Clients wishing to abort computation in response to a reallocation error are encouraged to call the &lt;a href=&quot;https://doc.rust-lang.org/alloc/alloc/fn.handle_alloc_error.html&quot;&gt;&lt;code&gt;handle_alloc_error&lt;/code&gt;&lt;/a&gt; function, rather than directly invoking &lt;code&gt;panic!&lt;/code&gt; or similar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab3dcf1d8e9743437613b6f655b4dbb23078b47" translate="yes" xml:space="preserve">
          <source>Clients wishing to abort computation in response to an allocation error are encouraged to call the &lt;a href=&quot;https://doc.rust-lang.org/alloc/alloc/fn.handle_alloc_error.html&quot;&gt;&lt;code&gt;handle_alloc_error&lt;/code&gt;&lt;/a&gt; function, rather than directly invoking &lt;code&gt;panic!&lt;/code&gt; or similar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8cdb573350de78596e4852bc9cacfc94e8d17ed" translate="yes" xml:space="preserve">
          <source>Clone</source>
          <target state="translated">Clone</target>
        </trans-unit>
        <trans-unit id="824bc2c73c949fc5850b77e9f2ce92fe084403f9" translate="yes" xml:space="preserve">
          <source>Clone::clone</source>
          <target state="translated">Clone::clone</target>
        </trans-unit>
        <trans-unit id="99c7be2fc5e0d79b9ee454b38f27c27fbd5eb259" translate="yes" xml:space="preserve">
          <source>Clone::clone_from</source>
          <target state="translated">Clone::clone_from</target>
        </trans-unit>
        <trans-unit id="36011bbd2268ade40fd14bbc8eb885693ea3c821" translate="yes" xml:space="preserve">
          <source>Cloned</source>
          <target state="translated">Cloned</target>
        </trans-unit>
        <trans-unit id="c9636ac2866fc8e3d1421ca8b5d2ce4755d64374" translate="yes" xml:space="preserve">
          <source>Cloned::all</source>
          <target state="translated">Cloned::all</target>
        </trans-unit>
        <trans-unit id="e60f58d7fc94ce7ebde73feac114eb2e7283f8be" translate="yes" xml:space="preserve">
          <source>Cloned::any</source>
          <target state="translated">Cloned::any</target>
        </trans-unit>
        <trans-unit id="a5439ce169afc6e933ee99016f80498997c865d0" translate="yes" xml:space="preserve">
          <source>Cloned::borrow</source>
          <target state="translated">Cloned::borrow</target>
        </trans-unit>
        <trans-unit id="5295de9cd6a7846185a2bb2c51b078743423a368" translate="yes" xml:space="preserve">
          <source>Cloned::borrow_mut</source>
          <target state="translated">Cloned::borrow_mut</target>
        </trans-unit>
        <trans-unit id="f11c50e6391941c59c914ce5a0f93077852bc6ed" translate="yes" xml:space="preserve">
          <source>Cloned::by_ref</source>
          <target state="translated">Cloned::by_ref</target>
        </trans-unit>
        <trans-unit id="d2b030c9d5e41a698ecc28cd42e9cc3bc986bc88" translate="yes" xml:space="preserve">
          <source>Cloned::chain</source>
          <target state="translated">Cloned::chain</target>
        </trans-unit>
        <trans-unit id="81a5274e89bd1b2b0e561014606162ec3be303a2" translate="yes" xml:space="preserve">
          <source>Cloned::clone</source>
          <target state="translated">Cloned::clone</target>
        </trans-unit>
        <trans-unit id="28a4e78b41bd38ac69fe89517c3b863719d115ac" translate="yes" xml:space="preserve">
          <source>Cloned::clone_from</source>
          <target state="translated">Cloned::clone_from</target>
        </trans-unit>
        <trans-unit id="729dd9e06fad9c145c2a447233808ce0a7fe7a75" translate="yes" xml:space="preserve">
          <source>Cloned::clone_into</source>
          <target state="translated">Cloned::clone_into</target>
        </trans-unit>
        <trans-unit id="dc3b43430773dd3d225dde5ab061e43b402e542e" translate="yes" xml:space="preserve">
          <source>Cloned::cloned</source>
          <target state="translated">Cloned::cloned</target>
        </trans-unit>
        <trans-unit id="b48221b89ebf43f2541c25b08c2b1e19d26cb8ca" translate="yes" xml:space="preserve">
          <source>Cloned::cmp</source>
          <target state="translated">Cloned::cmp</target>
        </trans-unit>
        <trans-unit id="1be3e53162b33b43f0d6e49c086b879ba54d6b69" translate="yes" xml:space="preserve">
          <source>Cloned::collect</source>
          <target state="translated">Cloned::collect</target>
        </trans-unit>
        <trans-unit id="56b65e5567b1ed7915d2ebdc812a264e3e44eff9" translate="yes" xml:space="preserve">
          <source>Cloned::copied</source>
          <target state="translated">Cloned::copied</target>
        </trans-unit>
        <trans-unit id="725c2f874b7a34644ef9e611eeec2a3e5fd1cda1" translate="yes" xml:space="preserve">
          <source>Cloned::count</source>
          <target state="translated">Cloned::count</target>
        </trans-unit>
        <trans-unit id="d49e1a1dd19116b99764cafe36d0e6e63e5e545c" translate="yes" xml:space="preserve">
          <source>Cloned::cycle</source>
          <target state="translated">Cloned::cycle</target>
        </trans-unit>
        <trans-unit id="42a767ebfdc473b4e0cbe5615646b3c64f77348f" translate="yes" xml:space="preserve">
          <source>Cloned::enumerate</source>
          <target state="translated">Cloned::enumerate</target>
        </trans-unit>
        <trans-unit id="5ac9de901914ec72ccda814fd09e7bb7541da5a3" translate="yes" xml:space="preserve">
          <source>Cloned::eq</source>
          <target state="translated">Cloned::eq</target>
        </trans-unit>
        <trans-unit id="96b641382cb7afbb31ea5ce25f7af04dea5d258d" translate="yes" xml:space="preserve">
          <source>Cloned::filter</source>
          <target state="translated">Cloned::filter</target>
        </trans-unit>
        <trans-unit id="bd7a1ce4674e936eb537d7f17304158bd3dc8923" translate="yes" xml:space="preserve">
          <source>Cloned::filter_map</source>
          <target state="translated">Cloned::filter_map</target>
        </trans-unit>
        <trans-unit id="005438c5cc8df289eee538e6605aa1578c832c33" translate="yes" xml:space="preserve">
          <source>Cloned::find</source>
          <target state="translated">Cloned::find</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
