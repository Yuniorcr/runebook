<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="en" datatype="htmlbody" original="dart">
    <body>
      <group id="dart">
        <trans-unit id="64ac98bc6708f174233dad9b14330c0b4d26edd1" translate="yes" xml:space="preserve">
          <source>TEXTURE_2D constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bae8c772301f276ae4622e8d3a83d70feeab192" translate="yes" xml:space="preserve">
          <source>TEXTURE_2D_ARRAY constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e40ae9bc316ce4b3927d3642e2391ab00f6a2c" translate="yes" xml:space="preserve">
          <source>TEXTURE_3D constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4633cff67fd5372f2fc66aa490ce5153acdb659b" translate="yes" xml:space="preserve">
          <source>TEXTURE_BASE_LEVEL constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b42c208419ba3e75e6de61fb1f682b577ae6dc8" translate="yes" xml:space="preserve">
          <source>TEXTURE_BINDING_2D constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0004dab2900db1c06ec5cc382117a799ecf15adf" translate="yes" xml:space="preserve">
          <source>TEXTURE_BINDING_2D_ARRAY constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc1c4b7e63233f6c6f65c75a90825ff42bee3d7" translate="yes" xml:space="preserve">
          <source>TEXTURE_BINDING_3D constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb38c36a586bbf67aa3d11d3590b20f57ea64ad" translate="yes" xml:space="preserve">
          <source>TEXTURE_BINDING_CUBE_MAP constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0879258c57c9597034b9a9b10926c64a9dc1b932" translate="yes" xml:space="preserve">
          <source>TEXTURE_COMPARE_FUNC constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d26a7f94afa0bb2aada7cbee24db89035cb4284" translate="yes" xml:space="preserve">
          <source>TEXTURE_COMPARE_MODE constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c45dc8437db6b065dca7c4b9e02da2570c165ac" translate="yes" xml:space="preserve">
          <source>TEXTURE_CUBE_MAP constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76f56cfdf157b095ae7b059fbfcc2006c9881e5" translate="yes" xml:space="preserve">
          <source>TEXTURE_CUBE_MAP_NEGATIVE_X constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd699f526d96f7486be1408e5b74fc833a7f58cc" translate="yes" xml:space="preserve">
          <source>TEXTURE_CUBE_MAP_NEGATIVE_Y constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f6aaea17e384c1b3a3490df8a9fe611ce7ec6f" translate="yes" xml:space="preserve">
          <source>TEXTURE_CUBE_MAP_NEGATIVE_Z constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a5e3917f64653f4889d9e629fed69db894e37a" translate="yes" xml:space="preserve">
          <source>TEXTURE_CUBE_MAP_POSITIVE_X constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf2819b57a7942715f346c5d669e043661e7aaf" translate="yes" xml:space="preserve">
          <source>TEXTURE_CUBE_MAP_POSITIVE_Y constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b36fa2c8ecfddd8e9c56492e4315a4c9d6fefd48" translate="yes" xml:space="preserve">
          <source>TEXTURE_CUBE_MAP_POSITIVE_Z constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d15877ef53dd7565895ca65db9185fa6a3df96d" translate="yes" xml:space="preserve">
          <source>TEXTURE_IMMUTABLE_FORMAT constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5220e8f0c3aaed457c5271a7d4e07c9f9d07d1b6" translate="yes" xml:space="preserve">
          <source>TEXTURE_IMMUTABLE_LEVELS constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5545c7f27e01cc41cb1135b9008510fd5637930" translate="yes" xml:space="preserve">
          <source>TEXTURE_MAG_FILTER constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce7c20fb7c856f3ca8d793640be63333868efce" translate="yes" xml:space="preserve">
          <source>TEXTURE_MAX_ANISOTROPY_EXT constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd27fdecc96b072126b81e14067c8b1495ed9f0" translate="yes" xml:space="preserve">
          <source>TEXTURE_MAX_LEVEL constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c24e8c837c96278ea61b8d633195c9786b7d4b" translate="yes" xml:space="preserve">
          <source>TEXTURE_MAX_LOD constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ce1dae20dd7b12d76666dbe06ae4aba661b53a" translate="yes" xml:space="preserve">
          <source>TEXTURE_MIN_FILTER constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ce6d7ede35f0b020ba7ac2406b40fc0ef1b792" translate="yes" xml:space="preserve">
          <source>TEXTURE_MIN_LOD constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82f9ef9eebee695658671d008eecaf50b4ab973" translate="yes" xml:space="preserve">
          <source>TEXTURE_WRAP_R constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4257061fb84a8f8517d54decae2e0e424f4ad9" translate="yes" xml:space="preserve">
          <source>TEXTURE_WRAP_S constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9a4b52cef265fe76bcb1ccd64a5e4c6e8e19d7" translate="yes" xml:space="preserve">
          <source>TEXTURE_WRAP_T constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c3cd300fd6390752ef8141eeb0793c4d38b4ab" translate="yes" xml:space="preserve">
          <source>TEXT_NODE constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4e5559f404dfd748b23c41fac68c360d208ff1" translate="yes" xml:space="preserve">
          <source>THREE constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73893c4376fd8e644d2d6babc3f5ad5db0485028" translate="yes" xml:space="preserve">
          <source>TILDE constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f64cbd69b1bbc69e2d9b284c07b55772ce09a705" translate="yes" xml:space="preserve">
          <source>TIMEOUT constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea2507b936763ffe03d6f173a75055aac8554a1" translate="yes" xml:space="preserve">
          <source>TIMEOUT_ERR constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5719eefe33ddcd05a51fc239ece10bb52bea237f" translate="yes" xml:space="preserve">
          <source>TIMEOUT_EXPIRED constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d012358ff8ddfdd3afd4a5ebfabf65776f53ab" translate="yes" xml:space="preserve">
          <source>TIMEOUT_IGNORED constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c5473d9ed7afb0511f5faed3d66feb531ddb88" translate="yes" xml:space="preserve">
          <source>TIMESTAMP_EXT constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb28acc044dc6a80b6c743a24610d66ad720fc2" translate="yes" xml:space="preserve">
          <source>TIME_ELAPSED_EXT constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eddc671eeab0403281818465a5cc9509daff07e" translate="yes" xml:space="preserve">
          <source>TOO_LARGE_ERR constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7042455ecbf8298ed0a4864ae36a3f42f710092c" translate="yes" xml:space="preserve">
          <source>TOP constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954426985bc09937ed19f4363724eed32cce474e" translate="yes" xml:space="preserve">
          <source>TRAILER constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76428517d290d9a7f1b4320a4e46e583575bf9f0" translate="yes" xml:space="preserve">
          <source>TRANSACTION_INACTIVE constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a024d4f1d51250e2ee4c72a0daff831079e662c5" translate="yes" xml:space="preserve">
          <source>TRANSFER_ENCODING constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222bd4c5d96f67067d35f4b85e85c4bcb9740c1c" translate="yes" xml:space="preserve">
          <source>TRANSFORM_FEEDBACK constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c534f77a270a6b29519bf2ca526563aafe4ff2c2" translate="yes" xml:space="preserve">
          <source>TRANSFORM_FEEDBACK_ACTIVE constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a40926a14c39b2f7afafcb42cb22f7413f9483d" translate="yes" xml:space="preserve">
          <source>TRANSFORM_FEEDBACK_BINDING constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f065a9bd8bf13508917dacb6c5bdb3aa0e399c55" translate="yes" xml:space="preserve">
          <source>TRANSFORM_FEEDBACK_BUFFER constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3615f47d4d73f8bc9668c1caed0c5d763ec4856" translate="yes" xml:space="preserve">
          <source>TRANSFORM_FEEDBACK_BUFFER_BINDING constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c7b7cc6c40b416b0fd394e2520ec8d06862fe2" translate="yes" xml:space="preserve">
          <source>TRANSFORM_FEEDBACK_BUFFER_MODE constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3c4133e144c4e44541a2b04fc36802c60023af" translate="yes" xml:space="preserve">
          <source>TRANSFORM_FEEDBACK_BUFFER_SIZE constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4eff8c62930ecc443086c0b2a91ecd5cdecd2be" translate="yes" xml:space="preserve">
          <source>TRANSFORM_FEEDBACK_BUFFER_START constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b92b376e92703cb70c4054ed7a84a42742ecef8" translate="yes" xml:space="preserve">
          <source>TRANSFORM_FEEDBACK_PAUSED constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480f2c421ce866ee003ed104f1067dcf63fc46d3" translate="yes" xml:space="preserve">
          <source>TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7bcca2ea6b170fd6654a6e51bff584309e14bd9" translate="yes" xml:space="preserve">
          <source>TRANSFORM_FEEDBACK_VARYINGS constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2d77f23dc55914ea481e74fe398361912ce1b0" translate="yes" xml:space="preserve">
          <source>TRIANGLES constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8cb4b3f0665926edbf0eae36502dc39259e9537" translate="yes" xml:space="preserve">
          <source>TRIANGLE_FAN constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6197a0e87d1513227b44315a9e928381652fdf" translate="yes" xml:space="preserve">
          <source>TRIANGLE_STRIP constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c39d57c2106bc82a3e2a33e670ea74543752812" translate="yes" xml:space="preserve">
          <source>TS, TT&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7b7846882a4d0d14dfd826d7bb864bfd2d5db7" translate="yes" xml:space="preserve">
          <source>TS, TT&amp;gt; castFrom &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19875a4eb4619f793c1d04617c2f28ea7dc9e18e" translate="yes" xml:space="preserve">
          <source>TSpanElement</source>
          <target state="translated">TSpanElement</target>
        </trans-unit>
        <trans-unit id="f9ca1988537fb8ee6c01af08b01278add5cae421" translate="yes" xml:space="preserve">
          <source>TSpanElement class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dfbfae945e8371a0b4d1db412415b6cfbc94e31" translate="yes" xml:space="preserve">
          <source>TSpanElement constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15632ead2a622f542a2b4e68b5beead01b9dd017" translate="yes" xml:space="preserve">
          <source>TSpanElement(</source>
          <target state="translated">TSpanElement(</target>
        </trans-unit>
        <trans-unit id="fd96dea896f443815548cde923a7f59b29d33bad" translate="yes" xml:space="preserve">
          <source>TSpanElement.TSpanElement</source>
          <target state="translated">TSpanElement.TSpanElement</target>
        </trans-unit>
        <trans-unit id="43745b6e7bdd18ff6ab207d2b9ee00863af6df40" translate="yes" xml:space="preserve">
          <source>TSpanElement.TSpanElement.created</source>
          <target state="translated">TSpanElement.TSpanElement.created</target>
        </trans-unit>
        <trans-unit id="9291cb1714642abeb9fcfdafc5301a6d635a513e" translate="yes" xml:space="preserve">
          <source>TSpanElement.created constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95b1f9396c6b080ca9a3d003db6acd6fcffb569" translate="yes" xml:space="preserve">
          <source>TSpanElement.created(</source>
          <target state="translated">TSpanElement.created(</target>
        </trans-unit>
        <trans-unit id="e4fcef650b23ca6ba2694846b6318d0701172017" translate="yes" xml:space="preserve">
          <source>TT&amp;gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f0d44467e6384d34bf142d0735cb466bc7934ba" translate="yes" xml:space="preserve">
          <source>TT&amp;gt;(</source>
          <target state="translated">TT&amp;gt;(</target>
        </trans-unit>
        <trans-unit id="329a09ef30cab6c359eff01198ae9284bb5845a1" translate="yes" xml:space="preserve">
          <source>TWO constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01336906948df01b8fff067fe9fda4a8e38a464b" translate="yes" xml:space="preserve">
          <source>TYPE_BACK_FORWARD constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be03640dfea23a1e1c07d8270fddb56dd6f6613" translate="yes" xml:space="preserve">
          <source>TYPE_ERROR constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f475c8e8a7d690f27e916c5fd28da833ff7141" translate="yes" xml:space="preserve">
          <source>TYPE_MISMATCH constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b113474da0c24f2d8544beb9376ac126cbc11283" translate="yes" xml:space="preserve">
          <source>TYPE_NAVIGATE constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848a549350e738436fd73ed0cee62b18d1c7c20e" translate="yes" xml:space="preserve">
          <source>TYPE_RELOAD constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb899cbbc4c74065213018a8c099f4274dc63797" translate="yes" xml:space="preserve">
          <source>TYPE_RESERVED constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277223a1cebde71695837c0cb4c85773249a1415" translate="yes" xml:space="preserve">
          <source>TableCaptionElement</source>
          <target state="translated">TableCaptionElement</target>
        </trans-unit>
        <trans-unit id="4f514807e6ddaf98dafd08b645da7c1d51e6b794" translate="yes" xml:space="preserve">
          <source>TableCaptionElement class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce3889ca75e252a5f9dbfc3a663549f8f426113" translate="yes" xml:space="preserve">
          <source>TableCaptionElement constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38f5482e912da5b38243e30d15fa9336ca7f8f4" translate="yes" xml:space="preserve">
          <source>TableCaptionElement(</source>
          <target state="translated">TableCaptionElement(</target>
        </trans-unit>
        <trans-unit id="e3c74b90b8aec799f42d8e0f5ffe5f8f2bc8178c" translate="yes" xml:space="preserve">
          <source>TableCaptionElement.TableCaptionElement</source>
          <target state="translated">TableCaptionElement.TableCaptionElement</target>
        </trans-unit>
        <trans-unit id="db8de1d80e904b85b2ac00ed66fe0bdb1cd0cb03" translate="yes" xml:space="preserve">
          <source>TableCaptionElement.TableCaptionElement.created</source>
          <target state="translated">TableCaptionElement.TableCaptionElement.created</target>
        </trans-unit>
        <trans-unit id="8473cc7bb05f94e9d6bec8753f761535d6f9531a" translate="yes" xml:space="preserve">
          <source>TableCaptionElement.created constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a72e9f74e9cef1c1601a8c8f2b0b8c86b5b033e" translate="yes" xml:space="preserve">
          <source>TableCaptionElement.created(</source>
          <target state="translated">TableCaptionElement.created(</target>
        </trans-unit>
        <trans-unit id="934b033b51fb1cb759e626443e0192b5ce720f52" translate="yes" xml:space="preserve">
          <source>TableCellElement</source>
          <target state="translated">TableCellElement</target>
        </trans-unit>
        <trans-unit id="4f7fe4c321c926d673e1984d41e0bb64e98ddb63" translate="yes" xml:space="preserve">
          <source>TableCellElement class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4344ba622b67bc69e37fc95e3e7717deab066c78" translate="yes" xml:space="preserve">
          <source>TableCellElement constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8c3ab61b4eeb13c247b2173b87831ae07570ec" translate="yes" xml:space="preserve">
          <source>TableCellElement(</source>
          <target state="translated">TableCellElement(</target>
        </trans-unit>
        <trans-unit id="41215024d73f0b8fd14671557ff318eb8591db31" translate="yes" xml:space="preserve">
          <source>TableCellElement.TableCellElement</source>
          <target state="translated">TableCellElement.TableCellElement</target>
        </trans-unit>
        <trans-unit id="50e521d57ae399923b5e2e3a3dda741dae69051d" translate="yes" xml:space="preserve">
          <source>TableCellElement.TableCellElement.created</source>
          <target state="translated">TableCellElement.TableCellElement.created</target>
        </trans-unit>
        <trans-unit id="2d35e8584eaa54b2a2a06c5217ea3951aa5ff1a4" translate="yes" xml:space="preserve">
          <source>TableCellElement.cellIndex</source>
          <target state="translated">TableCellElement.cellIndex</target>
        </trans-unit>
        <trans-unit id="e1f822dc37853bfdc9cb3a19dc48b5ac3307edd3" translate="yes" xml:space="preserve">
          <source>TableCellElement.colSpan</source>
          <target state="translated">TableCellElement.colSpan</target>
        </trans-unit>
        <trans-unit id="c59040e038983c6dac0aa1b860060ae010d79f73" translate="yes" xml:space="preserve">
          <source>TableCellElement.created constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ee095899082b8e8a714f135991059aa17ab217" translate="yes" xml:space="preserve">
          <source>TableCellElement.created(</source>
          <target state="translated">TableCellElement.created(</target>
        </trans-unit>
        <trans-unit id="3994eed1de03fc0cc17b87efd7885fda86bba8e2" translate="yes" xml:space="preserve">
          <source>TableCellElement.headers</source>
          <target state="translated">TableCellElement.headers</target>
        </trans-unit>
        <trans-unit id="b3b53e900e5f030621922fca7f9f5de151ca07af" translate="yes" xml:space="preserve">
          <source>TableCellElement.rowSpan</source>
          <target state="translated">TableCellElement.rowSpan</target>
        </trans-unit>
        <trans-unit id="c0752b2073c056732b395c5173b3e5739520bbbe" translate="yes" xml:space="preserve">
          <source>TableColElement</source>
          <target state="translated">TableColElement</target>
        </trans-unit>
        <trans-unit id="0e68075d674e51360950ab1a534027504595fa57" translate="yes" xml:space="preserve">
          <source>TableColElement class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11f24804b9f90467b86a00386632ed1d045e34e" translate="yes" xml:space="preserve">
          <source>TableColElement constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b31938874320225565dbc78ec5d6545012afe9d" translate="yes" xml:space="preserve">
          <source>TableColElement(</source>
          <target state="translated">TableColElement(</target>
        </trans-unit>
        <trans-unit id="535bd29d22e1818442fe20e7b22a119f767d898b" translate="yes" xml:space="preserve">
          <source>TableColElement.TableColElement</source>
          <target state="translated">TableColElement.TableColElement</target>
        </trans-unit>
        <trans-unit id="16d97fd735f9350e5b7375495b4e19ef1ff9e9a4" translate="yes" xml:space="preserve">
          <source>TableColElement.TableColElement.created</source>
          <target state="translated">TableColElement.TableColElement.created</target>
        </trans-unit>
        <trans-unit id="6f0f58fb8e64234d2878d45d00da67bc45a2cdba" translate="yes" xml:space="preserve">
          <source>TableColElement.created constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223b322ab490a1fc24009b6953415003c3a77f83" translate="yes" xml:space="preserve">
          <source>TableColElement.created(</source>
          <target state="translated">TableColElement.created(</target>
        </trans-unit>
        <trans-unit id="58830d71adae2723642be9ef807fe2be48e1a2d8" translate="yes" xml:space="preserve">
          <source>TableColElement.span</source>
          <target state="translated">TableColElement.span</target>
        </trans-unit>
        <trans-unit id="e7cf97010e09915c2ce85543d5a117c393094ced" translate="yes" xml:space="preserve">
          <source>TableElement</source>
          <target state="translated">TableElement</target>
        </trans-unit>
        <trans-unit id="64daed5f87e3535c09cdf493f13c111104f3fedf" translate="yes" xml:space="preserve">
          <source>TableElement class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174c11fe03e09ce8a5ddc296178afeb3ca180e56" translate="yes" xml:space="preserve">
          <source>TableElement constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8baa30e6d67174e54e0c22e2dbdd46beed8d2230" translate="yes" xml:space="preserve">
          <source>TableElement(</source>
          <target state="translated">TableElement(</target>
        </trans-unit>
        <trans-unit id="8ea5666a49736b2126c5022496c6ee4f6152e019" translate="yes" xml:space="preserve">
          <source>TableElement.TableElement</source>
          <target state="translated">TableElement.TableElement</target>
        </trans-unit>
        <trans-unit id="f1384cc18e76b8d10b7310a0bf9cd60fb5539c31" translate="yes" xml:space="preserve">
          <source>TableElement.TableElement.created</source>
          <target state="translated">TableElement.TableElement.created</target>
        </trans-unit>
        <trans-unit id="31c5a9523c8e6dcdfc0a53386e72ca9b4700ad28" translate="yes" xml:space="preserve">
          <source>TableElement.addRow</source>
          <target state="translated">TableElement.addRow</target>
        </trans-unit>
        <trans-unit id="819443dd4283265bb03b995b97a0b5c975d5e3f1" translate="yes" xml:space="preserve">
          <source>TableElement.caption</source>
          <target state="translated">TableElement.caption</target>
        </trans-unit>
        <trans-unit id="92a57c221ab72b89c34559f18093fe9c446ecd47" translate="yes" xml:space="preserve">
          <source>TableElement.createCaption</source>
          <target state="translated">TableElement.createCaption</target>
        </trans-unit>
        <trans-unit id="f97a513810bdcf050fc0b6297d5aebc786a37843" translate="yes" xml:space="preserve">
          <source>TableElement.createFragment</source>
          <target state="translated">TableElement.createFragment</target>
        </trans-unit>
        <trans-unit id="7f138a44d1b1cd79880b255d1943e9bea9714072" translate="yes" xml:space="preserve">
          <source>TableElement.createTBody</source>
          <target state="translated">TableElement.createTBody</target>
        </trans-unit>
        <trans-unit id="31fd554f659d093ecc714604cd0fe74062a15904" translate="yes" xml:space="preserve">
          <source>TableElement.createTFoot</source>
          <target state="translated">TableElement.createTFoot</target>
        </trans-unit>
        <trans-unit id="1e2e651975e26ce19425524aaac143bbf3bf0593" translate="yes" xml:space="preserve">
          <source>TableElement.createTHead</source>
          <target state="translated">TableElement.createTHead</target>
        </trans-unit>
        <trans-unit id="3e894d9b491306f01f9edd98d713af97b4a6cc51" translate="yes" xml:space="preserve">
          <source>TableElement.created constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c0b766796b7ade6d6cbd0e8cd12d7e19395422" translate="yes" xml:space="preserve">
          <source>TableElement.created(</source>
          <target state="translated">TableElement.created(</target>
        </trans-unit>
        <trans-unit id="1113e4aef00bfd0f99c8acc72e83ec35b8796b64" translate="yes" xml:space="preserve">
          <source>TableElement.deleteCaption</source>
          <target state="translated">TableElement.deleteCaption</target>
        </trans-unit>
        <trans-unit id="88aba63e0009fe6b37897ac91763662996587ff8" translate="yes" xml:space="preserve">
          <source>TableElement.deleteRow</source>
          <target state="translated">TableElement.deleteRow</target>
        </trans-unit>
        <trans-unit id="69380bb41ba825c141db9d0b79238b4df1cb91ab" translate="yes" xml:space="preserve">
          <source>TableElement.deleteTFoot</source>
          <target state="translated">TableElement.deleteTFoot</target>
        </trans-unit>
        <trans-unit id="c4a7c14a34ea6278581f37416770f35709427499" translate="yes" xml:space="preserve">
          <source>TableElement.deleteTHead</source>
          <target state="translated">TableElement.deleteTHead</target>
        </trans-unit>
        <trans-unit id="d15c8f3b9174d812ba23b27baaebe4aefe72113e" translate="yes" xml:space="preserve">
          <source>TableElement.insertRow</source>
          <target state="translated">TableElement.insertRow</target>
        </trans-unit>
        <trans-unit id="4edd24767dc5121c80a658fb83c622cb0708e665" translate="yes" xml:space="preserve">
          <source>TableElement.rows</source>
          <target state="translated">TableElement.rows</target>
        </trans-unit>
        <trans-unit id="6b39c4c42278aa66dc7c8ff6fc673ac4515a6615" translate="yes" xml:space="preserve">
          <source>TableElement.tBodies</source>
          <target state="translated">TableElement.tBodies</target>
        </trans-unit>
        <trans-unit id="d828b26aaf8ba43e1b89b96c57279c0c2c52d38c" translate="yes" xml:space="preserve">
          <source>TableElement.tFoot</source>
          <target state="translated">TableElement.tFoot</target>
        </trans-unit>
        <trans-unit id="6798e09ee2d5f72df5753d4c6208e04dec0655d8" translate="yes" xml:space="preserve">
          <source>TableElement.tHead</source>
          <target state="translated">TableElement.tHead</target>
        </trans-unit>
        <trans-unit id="b1d241cb5a3ac4d8f0a4a6a7bdd301858e8398c3" translate="yes" xml:space="preserve">
          <source>TableRowElement</source>
          <target state="translated">TableRowElement</target>
        </trans-unit>
        <trans-unit id="35878efc72345f7b14b9d2a000cedbb726170fb8" translate="yes" xml:space="preserve">
          <source>TableRowElement class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01f2c9f1ef1a2d90ec96605a706fd979d4e474d" translate="yes" xml:space="preserve">
          <source>TableRowElement constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c13e7d1a1c453d96e5a97b3cbc30a0979bb0fd" translate="yes" xml:space="preserve">
          <source>TableRowElement(</source>
          <target state="translated">TableRowElement(</target>
        </trans-unit>
        <trans-unit id="421fd0dcdb024e9e349bd60ece4a47b0db57f794" translate="yes" xml:space="preserve">
          <source>TableRowElement.TableRowElement</source>
          <target state="translated">TableRowElement.TableRowElement</target>
        </trans-unit>
        <trans-unit id="4d0f7dbc944a78ce9dd2059ee2cd1e1f2d32f2da" translate="yes" xml:space="preserve">
          <source>TableRowElement.TableRowElement.created</source>
          <target state="translated">TableRowElement.TableRowElement.created</target>
        </trans-unit>
        <trans-unit id="12ce52c158282ff62a1e0325cf4d4212159e024a" translate="yes" xml:space="preserve">
          <source>TableRowElement.addCell</source>
          <target state="translated">TableRowElement.addCell</target>
        </trans-unit>
        <trans-unit id="85d8f79789ba1ffd213b6f9f5db3266b35f497f4" translate="yes" xml:space="preserve">
          <source>TableRowElement.cells</source>
          <target state="translated">TableRowElement.cells</target>
        </trans-unit>
        <trans-unit id="79b84362c82aa4be43a49ba4d0c53ebfdefd9c5c" translate="yes" xml:space="preserve">
          <source>TableRowElement.createFragment</source>
          <target state="translated">TableRowElement.createFragment</target>
        </trans-unit>
        <trans-unit id="db1f23e7ba076799db8ddf65e7a28df8b62a8519" translate="yes" xml:space="preserve">
          <source>TableRowElement.created constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90cee35f72c48a7d2da5dc7b16a9ddca12910d0b" translate="yes" xml:space="preserve">
          <source>TableRowElement.created(</source>
          <target state="translated">TableRowElement.created(</target>
        </trans-unit>
        <trans-unit id="b565cf26c0b95b85eced1db8def5639d234ef21f" translate="yes" xml:space="preserve">
          <source>TableRowElement.deleteCell</source>
          <target state="translated">TableRowElement.deleteCell</target>
        </trans-unit>
        <trans-unit id="cca90a86f02bd337505fdbe4aacd2cd196acbb12" translate="yes" xml:space="preserve">
          <source>TableRowElement.insertCell</source>
          <target state="translated">TableRowElement.insertCell</target>
        </trans-unit>
        <trans-unit id="0f852e35957cbd436ecb91156bb7847425b0de58" translate="yes" xml:space="preserve">
          <source>TableRowElement.rowIndex</source>
          <target state="translated">TableRowElement.rowIndex</target>
        </trans-unit>
        <trans-unit id="1e8dc1629347e2bcf6b9369bfa3ccef650c118d6" translate="yes" xml:space="preserve">
          <source>TableRowElement.sectionRowIndex</source>
          <target state="translated">TableRowElement.sectionRowIndex</target>
        </trans-unit>
        <trans-unit id="2152abec00c5ec7c3045c3189266678de4abbc52" translate="yes" xml:space="preserve">
          <source>TableSectionElement</source>
          <target state="translated">TableSectionElement</target>
        </trans-unit>
        <trans-unit id="d3dde8a819d48e7e729be47249d3a5cf125881d3" translate="yes" xml:space="preserve">
          <source>TableSectionElement class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e12e3f585b34d72e19337bbdc9f7c7940ea04834" translate="yes" xml:space="preserve">
          <source>TableSectionElement.TableSectionElement.created</source>
          <target state="translated">TableSectionElement.TableSectionElement.created</target>
        </trans-unit>
        <trans-unit id="75e0421c0dfc20e3d8b1ce49fb4a3f93956f2f88" translate="yes" xml:space="preserve">
          <source>TableSectionElement.addRow</source>
          <target state="translated">TableSectionElement.addRow</target>
        </trans-unit>
        <trans-unit id="04b784fa0808acdd84dd81a1f9d48fe318ce9752" translate="yes" xml:space="preserve">
          <source>TableSectionElement.createFragment</source>
          <target state="translated">TableSectionElement.createFragment</target>
        </trans-unit>
        <trans-unit id="3bdb36bb6c3773c7cfd1006df987a302fd2274db" translate="yes" xml:space="preserve">
          <source>TableSectionElement.created constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44fde6e98376a5f0011f776bbf25ff405c4cbba" translate="yes" xml:space="preserve">
          <source>TableSectionElement.created(</source>
          <target state="translated">TableSectionElement.created(</target>
        </trans-unit>
        <trans-unit id="4c5c9381d7d84096cb10ba820d43fba4c8ed546d" translate="yes" xml:space="preserve">
          <source>TableSectionElement.deleteRow</source>
          <target state="translated">TableSectionElement.deleteRow</target>
        </trans-unit>
        <trans-unit id="c83067cf0304b7c7adbe441abbedcfbfb7459f2c" translate="yes" xml:space="preserve">
          <source>TableSectionElement.insertRow</source>
          <target state="translated">TableSectionElement.insertRow</target>
        </trans-unit>
        <trans-unit id="90d66aa248cd4c1e7866c9291e93ad9e0bba95ce" translate="yes" xml:space="preserve">
          <source>TableSectionElement.rows</source>
          <target state="translated">TableSectionElement.rows</target>
        </trans-unit>
        <trans-unit id="1a480549376636c40428bd80bb2f707a230d36b7" translate="yes" xml:space="preserve">
          <source>Takes an already connected &lt;code&gt;socket&lt;/code&gt; and starts client side TLS handshake to make the communication secure. When the returned future completes the &lt;a href=&quot;../rawsecuresocket-class&quot;&gt;RawSecureSocket&lt;/a&gt; has completed the TLS handshake. Using this function requires that the other end of the connection is prepared for TLS handshake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a0a3cac5b0ade0c6a4935443eea3edd0a7e43b" translate="yes" xml:space="preserve">
          <source>Takes an already connected &lt;code&gt;socket&lt;/code&gt; and starts client side TLS handshake to make the communication secure. When the returned future completes the &lt;a href=&quot;../securesocket-class&quot;&gt;SecureSocket&lt;/a&gt; has completed the TLS handshake. Using this function requires that the other end of the connection is prepared for TLS handshake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9e707c6e764af8a6dbb560e2ff1f112c6bd351" translate="yes" xml:space="preserve">
          <source>Takes an already connected &lt;code&gt;socket&lt;/code&gt; and starts client side TLS handshake to make the communication secure. When the returned future completes the &lt;a href=&quot;rawsecuresocket-class&quot;&gt;RawSecureSocket&lt;/a&gt; has completed the TLS handshake. Using this function requires that the other end of the connection is prepared for TLS handshake. &lt;a href=&quot;rawsecuresocket/secure&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad6b59a02b0a0c04ce9d397610a60840621f1f4c" translate="yes" xml:space="preserve">
          <source>Takes an already connected &lt;code&gt;socket&lt;/code&gt; and starts client side TLS handshake to make the communication secure. When the returned future completes the &lt;a href=&quot;securesocket-class&quot;&gt;SecureSocket&lt;/a&gt; has completed the TLS handshake. Using this function requires that the other end of the connection is prepared for TLS handshake. &lt;a href=&quot;securesocket/secure&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b7ed925d7944e26d7877a4466bc30be14e06f6" translate="yes" xml:space="preserve">
          <source>Takes an already connected &lt;code&gt;socket&lt;/code&gt; and starts server side TLS handshake to make the communication secure. When the returned future completes the &lt;a href=&quot;../rawsecuresocket-class&quot;&gt;RawSecureSocket&lt;/a&gt; has completed the TLS handshake. Using this function requires that the other end of the connection is going to start the TLS handshake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae32d3e561a9ec4b4cb60a2b46ead3bebfba6670" translate="yes" xml:space="preserve">
          <source>Takes an already connected &lt;code&gt;socket&lt;/code&gt; and starts server side TLS handshake to make the communication secure. When the returned future completes the &lt;a href=&quot;../securesocket-class&quot;&gt;SecureSocket&lt;/a&gt; has completed the TLS handshake. Using this function requires that the other end of the connection is going to start the TLS handshake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04dac1ad5e79a1df3d28143ac53c6475b5e5b4bf" translate="yes" xml:space="preserve">
          <source>Takes an already connected &lt;code&gt;socket&lt;/code&gt; and starts server side TLS handshake to make the communication secure. When the returned future completes the &lt;a href=&quot;rawsecuresocket-class&quot;&gt;RawSecureSocket&lt;/a&gt; has completed the TLS handshake. Using this function requires that the other end of the connection is going to start the TLS handshake. &lt;a href=&quot;rawsecuresocket/secureserver&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696c4095883eafa8da42da72d13bae3ca561ce1b" translate="yes" xml:space="preserve">
          <source>Takes an already connected &lt;code&gt;socket&lt;/code&gt; and starts server side TLS handshake to make the communication secure. When the returned future completes the &lt;a href=&quot;securesocket-class&quot;&gt;SecureSocket&lt;/a&gt; has completed the TLS handshake. Using this function requires that the other end of the connection is going to start the TLS handshake. &lt;a href=&quot;securesocket/secureserver&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397d3f4e3146a202fb446bf4c8c6e7238b8c32b8" translate="yes" xml:space="preserve">
          <source>TaskAttributionTiming</source>
          <target state="translated">TaskAttributionTiming</target>
        </trans-unit>
        <trans-unit id="806fa3484903f5ffe0f6ad2a71b02f25497c3a19" translate="yes" xml:space="preserve">
          <source>TaskAttributionTiming class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d28ba8b60c56075fa64a1d1d8003dbd36bfdcd" translate="yes" xml:space="preserve">
          <source>TaskAttributionTiming.containerId</source>
          <target state="translated">TaskAttributionTiming.containerId</target>
        </trans-unit>
        <trans-unit id="ad927522e97f37c7205692cc140d4020a87cdce6" translate="yes" xml:space="preserve">
          <source>TaskAttributionTiming.containerName</source>
          <target state="translated">TaskAttributionTiming.containerName</target>
        </trans-unit>
        <trans-unit id="cbe010945678d39c74455babcf5a5b41d39d6099" translate="yes" xml:space="preserve">
          <source>TaskAttributionTiming.containerSrc</source>
          <target state="translated">TaskAttributionTiming.containerSrc</target>
        </trans-unit>
        <trans-unit id="6a19153ab805267feef493299a7722b12471d488" translate="yes" xml:space="preserve">
          <source>TaskAttributionTiming.containerType</source>
          <target state="translated">TaskAttributionTiming.containerType</target>
        </trans-unit>
        <trans-unit id="a0770040a8b843de68c025c2d3ff6480df02f94c" translate="yes" xml:space="preserve">
          <source>TaskAttributionTiming.scriptUrl</source>
          <target state="translated">TaskAttributionTiming.scriptUrl</target>
        </trans-unit>
        <trans-unit id="18be25bfcc34a1aca86486e072b2c343de49f0a0" translate="yes" xml:space="preserve">
          <source>TelephoneInputElement</source>
          <target state="translated">TelephoneInputElement</target>
        </trans-unit>
        <trans-unit id="6a8798108f02d516f897c43692672ccef989ada8" translate="yes" xml:space="preserve">
          <source>TelephoneInputElement class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d99401beb30001327bcdea20556b3a52a73d9e" translate="yes" xml:space="preserve">
          <source>TelephoneInputElement constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c70c1f5e348e1d38838e397ef0f9335a5f6492" translate="yes" xml:space="preserve">
          <source>TelephoneInputElement(</source>
          <target state="translated">TelephoneInputElement(</target>
        </trans-unit>
        <trans-unit id="5658dc5dedcef4510d54e1614edbda3500be0e5e" translate="yes" xml:space="preserve">
          <source>TelephoneInputElement.TelephoneInputElement</source>
          <target state="translated">TelephoneInputElement.TelephoneInputElement</target>
        </trans-unit>
        <trans-unit id="6c5e07dd41859f8d834dcf385ba2e1230e34eba3" translate="yes" xml:space="preserve">
          <source>TelephoneInputElement.list</source>
          <target state="translated">TelephoneInputElement.list</target>
        </trans-unit>
        <trans-unit id="66e545b260744391e8d1336dc878f2b33164cef9" translate="yes" xml:space="preserve">
          <source>TelephoneInputElement.supported</source>
          <target state="translated">TelephoneInputElement.supported</target>
        </trans-unit>
        <trans-unit id="6fdc8c1393d7f7c7a61713efe21cd764376c205d" translate="yes" xml:space="preserve">
          <source>Tells the consumer that no further streams will be added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2692c917de306da5c5e2b28f33c7dc9c71c173bb" translate="yes" xml:space="preserve">
          <source>Tells the consumer that no further streams will be added. &lt;a href=&quot;streamconsumer/close&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f07ea95cb6c75e1b8dc3b72258037d2a55fdb1" translate="yes" xml:space="preserve">
          <source>Tells the stream sink that no further streams will be added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ed2133552ee16752f56b71f62c0d59b7fa32ae" translate="yes" xml:space="preserve">
          <source>Tells the stream sink that no further streams will be added. &lt;a href=&quot;streamsink/close&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6535f00e111a234eb0ee5cf45d7501a1324922c" translate="yes" xml:space="preserve">
          <source>TemplateElement</source>
          <target state="translated">TemplateElement</target>
        </trans-unit>
        <trans-unit id="5fe7ef83e0b665d77708c769f5ab6ce1fe34ef2a" translate="yes" xml:space="preserve">
          <source>TemplateElement class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b50bc688ce13a8f8a0d68d67d73855937c552c" translate="yes" xml:space="preserve">
          <source>TemplateElement constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7515f2e48c6902f3ccbbed7641895a0755ad0caa" translate="yes" xml:space="preserve">
          <source>TemplateElement(</source>
          <target state="translated">TemplateElement(</target>
        </trans-unit>
        <trans-unit id="6f6eedc889d358d0ace028400a402f0376e16a76" translate="yes" xml:space="preserve">
          <source>TemplateElement.TemplateElement</source>
          <target state="translated">TemplateElement.TemplateElement</target>
        </trans-unit>
        <trans-unit id="e215dca3c4f8098cd2ad7a58bf8592603e152b1e" translate="yes" xml:space="preserve">
          <source>TemplateElement.TemplateElement.created</source>
          <target state="translated">TemplateElement.TemplateElement.created</target>
        </trans-unit>
        <trans-unit id="01c2381eb71d8a4d0be1b09f2884ff67ab85488e" translate="yes" xml:space="preserve">
          <source>TemplateElement.content</source>
          <target state="translated">TemplateElement.content</target>
        </trans-unit>
        <trans-unit id="3897e0bb8f9da4aebc6dbf55f271bf3cd2c3c9a4" translate="yes" xml:space="preserve">
          <source>TemplateElement.created constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d1867fd725f8d252e6156bd192c3bf29430358" translate="yes" xml:space="preserve">
          <source>TemplateElement.created(</source>
          <target state="translated">TemplateElement.created(</target>
        </trans-unit>
        <trans-unit id="261c7a3a59062a8af952d6646aa9d507f8ee79a8" translate="yes" xml:space="preserve">
          <source>TemplateElement.setInnerHtml</source>
          <target state="translated">TemplateElement.setInnerHtml</target>
        </trans-unit>
        <trans-unit id="52a36ae6ef2c77f7b6ea64023178869709c19bd2" translate="yes" xml:space="preserve">
          <source>TemplateElement.supported</source>
          <target state="translated">TemplateElement.supported</target>
        </trans-unit>
        <trans-unit id="cbb6242e66c981fe3c6d221c89bf5d6ffd8ce716" translate="yes" xml:space="preserve">
          <source>Temporarily exposes _getStats and old getStats as getLegacyStats until Chrome fully supports new getStats API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d604d12f17466c5632f31b3dc48a9a26ddeab60" translate="yes" xml:space="preserve">
          <source>Test if &lt;a href=&quot;filesystementity/watch&quot;&gt;watch&lt;/a&gt; is supported on the current system. &lt;a href=&quot;filesystementity/iswatchsupported&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3fc3877109709ba7f03b03667115add6f84e00e" translate="yes" xml:space="preserve">
          <source>Test if &lt;a href=&quot;watch&quot;&gt;watch&lt;/a&gt; is supported on the current system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eafccb6f31df46b026f6af4f6c963ec3f9358e12" translate="yes" xml:space="preserve">
          <source>Test whether another object is equal to this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e912f0267f9216806c333252310712adefd2cd" translate="yes" xml:space="preserve">
          <source>Test whether another object is equal to this function. &lt;a href=&quot;function/operator_equals&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af22e2f37e227a6085375501eaab03222cc7ecba" translate="yes" xml:space="preserve">
          <source>Test whether this value is numerically equal to &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5810cfd7a77b7706dc39765e74ef3fde48e7eaa" translate="yes" xml:space="preserve">
          <source>Test whether this value is numerically equal to &lt;code&gt;other&lt;/code&gt;. &lt;a href=&quot;num/operator_equals&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39fdec1194d94212b871a28b2aa04a73cd40fce1" translate="yes" xml:space="preserve">
          <source>Tests</source>
          <target state="translated">Tests</target>
        </trans-unit>
        <trans-unit id="2cdd2a3564e6453613cc1732110a41486bceeb4d" translate="yes" xml:space="preserve">
          <source>Tests class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbde0a6bf5864d047644a2d75ea7de600e223791" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;code&gt;another&lt;/code&gt; is inside or along the edges of &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa1c1b53acb3391166d2fb96eef53b38233129d1" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;code&gt;other&lt;/code&gt; is a &lt;a href=&quot;../sendport-class&quot;&gt;SendPort&lt;/a&gt; pointing to the same &lt;a href=&quot;../receiveport-class&quot;&gt;ReceivePort&lt;/a&gt; as this one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8372596bf6a27313a9497aed8b577371da9ea31" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;code&gt;other&lt;/code&gt; is a &lt;a href=&quot;sendport-class&quot;&gt;SendPort&lt;/a&gt; pointing to the same &lt;a href=&quot;receiveport-class&quot;&gt;ReceivePort&lt;/a&gt; as this one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6d0ee859eb42fee7adfcf1fd6318a6f881315f" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;code&gt;this&lt;/code&gt; entirely contains &lt;code&gt;another&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35607448feee4b602c0dccfd398fc1ca0c6302b" translate="yes" xml:space="preserve">
          <source>Tests.requiredExtensions</source>
          <target state="translated">Tests.requiredExtensions</target>
        </trans-unit>
        <trans-unit id="3d1a4cfb27a34b6f79b2f5516ea1d4bd733f75c1" translate="yes" xml:space="preserve">
          <source>Tests.systemLanguage</source>
          <target state="translated">Tests.systemLanguage</target>
        </trans-unit>
        <trans-unit id="c3328c39b0e29f78e9ff45db674248b1d245887d" translate="yes" xml:space="preserve">
          <source>Text</source>
          <target state="translated">Text</target>
        </trans-unit>
        <trans-unit id="c455ea4c96072a835297b9c7c16ea4fc7c33db82" translate="yes" xml:space="preserve">
          <source>Text class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98b7f252beccf997ef032493ed4b568f2023953" translate="yes" xml:space="preserve">
          <source>Text constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d95fd840946b52a174d020eb8cfa1b81a09f35" translate="yes" xml:space="preserve">
          <source>Text with no line breaks (sensitive information).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f7048a1bf22238b7d09c8b1a4f6557db9f66ff" translate="yes" xml:space="preserve">
          <source>Text written to &lt;a href=&quot;../../dart-async/streamsink-class&quot;&gt;StreamSink&lt;/a&gt; methods is encoded to bytes using &lt;code&gt;encoding&lt;/code&gt; before being output on &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ffce7bc769de3cd5034022a26d1ebcd0c2c9cd" translate="yes" xml:space="preserve">
          <source>Text(</source>
          <target state="translated">Text(</target>
        </trans-unit>
        <trans-unit id="087de747d18782e2b047fcdce842bcd744f1cbba" translate="yes" xml:space="preserve">
          <source>Text.Text</source>
          <target state="translated">Text.Text</target>
        </trans-unit>
        <trans-unit id="16da6ba06b094ebf016baa0cb7532e3e78579f49" translate="yes" xml:space="preserve">
          <source>Text.assignedSlot</source>
          <target state="translated">Text.assignedSlot</target>
        </trans-unit>
        <trans-unit id="a2d225d0e01d1434af1df487103b570e50c95bfa" translate="yes" xml:space="preserve">
          <source>Text.getDestinationInsertionPoints</source>
          <target state="translated">Text.getDestinationInsertionPoints</target>
        </trans-unit>
        <trans-unit id="7f8a73bb18e8004804fdf63c24ff3a10424140f1" translate="yes" xml:space="preserve">
          <source>Text.splitText</source>
          <target state="translated">Text.splitText</target>
        </trans-unit>
        <trans-unit id="e6518e3c4651aad04c639780c00ecf6b94fcc203" translate="yes" xml:space="preserve">
          <source>Text.wholeText</source>
          <target state="translated">Text.wholeText</target>
        </trans-unit>
        <trans-unit id="621bb9ca74afe31bc513a1b61cdc9e33ccbb24a8" translate="yes" xml:space="preserve">
          <source>TextAreaElement</source>
          <target state="translated">TextAreaElement</target>
        </trans-unit>
        <trans-unit id="622f0ea2ff0d1be3ffc600d072d53392fc1bace7" translate="yes" xml:space="preserve">
          <source>TextAreaElement class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4332a9b59f276baa49759b8fb14d14c15977b542" translate="yes" xml:space="preserve">
          <source>TextAreaElement constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a68d555b0f48028191466a99d04b8ca2e2b8ff0" translate="yes" xml:space="preserve">
          <source>TextAreaElement(</source>
          <target state="translated">TextAreaElement(</target>
        </trans-unit>
        <trans-unit id="efad9570aee61ad3fac792da366c05cfb6af80f8" translate="yes" xml:space="preserve">
          <source>TextAreaElement.TextAreaElement</source>
          <target state="translated">TextAreaElement.TextAreaElement</target>
        </trans-unit>
        <trans-unit id="f64cafa134f761b39c9a11c1060d36b2e0b86ba1" translate="yes" xml:space="preserve">
          <source>TextAreaElement.TextAreaElement.created</source>
          <target state="translated">TextAreaElement.TextAreaElement.created</target>
        </trans-unit>
        <trans-unit id="6493b1fa7c1db4d774e1610b0257ea61eaaffb23" translate="yes" xml:space="preserve">
          <source>TextAreaElement.autocapitalize</source>
          <target state="translated">TextAreaElement.autocapitalize</target>
        </trans-unit>
        <trans-unit id="c2118ec76fa93a432165ad95d7aa190b9edf0552" translate="yes" xml:space="preserve">
          <source>TextAreaElement.autofocus</source>
          <target state="translated">TextAreaElement.autofocus</target>
        </trans-unit>
        <trans-unit id="3ec5e265ee51977f45ece855bc2a0280a07197b5" translate="yes" xml:space="preserve">
          <source>TextAreaElement.checkValidity</source>
          <target state="translated">TextAreaElement.checkValidity</target>
        </trans-unit>
        <trans-unit id="7ca80ced7c4f45c9673c7e913c5e0de85babb3d6" translate="yes" xml:space="preserve">
          <source>TextAreaElement.cols</source>
          <target state="translated">TextAreaElement.cols</target>
        </trans-unit>
        <trans-unit id="143efcecf2144f96c0ab9dc8a67625607fdc6acb" translate="yes" xml:space="preserve">
          <source>TextAreaElement.created constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d496688c9159a56aeadcf9abdb804d17e15666f5" translate="yes" xml:space="preserve">
          <source>TextAreaElement.created(</source>
          <target state="translated">TextAreaElement.created(</target>
        </trans-unit>
        <trans-unit id="ae411925189f1df179aae544d353b43777fcf804" translate="yes" xml:space="preserve">
          <source>TextAreaElement.defaultValue</source>
          <target state="translated">TextAreaElement.defaultValue</target>
        </trans-unit>
        <trans-unit id="b8b6c31493d0590a6ed94438980822ca6bd83603" translate="yes" xml:space="preserve">
          <source>TextAreaElement.dirName</source>
          <target state="translated">TextAreaElement.dirName</target>
        </trans-unit>
        <trans-unit id="6dbee01da7f3e2a77e75af3cf993d52254018b46" translate="yes" xml:space="preserve">
          <source>TextAreaElement.disabled</source>
          <target state="translated">TextAreaElement.disabled</target>
        </trans-unit>
        <trans-unit id="efacf5e1c288f4d1e3b59013c5c9d1bca4b20df1" translate="yes" xml:space="preserve">
          <source>TextAreaElement.form</source>
          <target state="translated">TextAreaElement.form</target>
        </trans-unit>
        <trans-unit id="f63c3330e07f23ee0c0ef13d2e1cd5e73a207e05" translate="yes" xml:space="preserve">
          <source>TextAreaElement.labels</source>
          <target state="translated">TextAreaElement.labels</target>
        </trans-unit>
        <trans-unit id="e19247520a8ddce65f6f41e5c4bf3fef92cb1854" translate="yes" xml:space="preserve">
          <source>TextAreaElement.maxLength</source>
          <target state="translated">TextAreaElement.maxLength</target>
        </trans-unit>
        <trans-unit id="d7e98a24e704015a2b539efca592cc215d431ac5" translate="yes" xml:space="preserve">
          <source>TextAreaElement.minLength</source>
          <target state="translated">TextAreaElement.minLength</target>
        </trans-unit>
        <trans-unit id="4f48e811a81a1b7a287d49cbd850ec15525f8a96" translate="yes" xml:space="preserve">
          <source>TextAreaElement.name</source>
          <target state="translated">TextAreaElement.name</target>
        </trans-unit>
        <trans-unit id="42d153bb9e78e5ff1d8c92faf83d07c8005a8f3f" translate="yes" xml:space="preserve">
          <source>TextAreaElement.placeholder</source>
          <target state="translated">TextAreaElement.placeholder</target>
        </trans-unit>
        <trans-unit id="ec29a9f13843c80c745433dcd1bd4f1f2af02487" translate="yes" xml:space="preserve">
          <source>TextAreaElement.readOnly</source>
          <target state="translated">TextAreaElement.readOnly</target>
        </trans-unit>
        <trans-unit id="95ca9774b292ab8a8e876d4e98f7c000f4149705" translate="yes" xml:space="preserve">
          <source>TextAreaElement.reportValidity</source>
          <target state="translated">TextAreaElement.reportValidity</target>
        </trans-unit>
        <trans-unit id="d594026d658b15ee0b4eea4898d27b7fb7900921" translate="yes" xml:space="preserve">
          <source>TextAreaElement.required</source>
          <target state="translated">TextAreaElement.required</target>
        </trans-unit>
        <trans-unit id="d67f2669741295082df2fb43211070f0cb0d50b9" translate="yes" xml:space="preserve">
          <source>TextAreaElement.rows</source>
          <target state="translated">TextAreaElement.rows</target>
        </trans-unit>
        <trans-unit id="10735d1ed4af9ec820428ce01732d97edccb6e27" translate="yes" xml:space="preserve">
          <source>TextAreaElement.select</source>
          <target state="translated">TextAreaElement.select</target>
        </trans-unit>
        <trans-unit id="bf2f161a5353695cc1fab42acc708c9be6d80ade" translate="yes" xml:space="preserve">
          <source>TextAreaElement.selectionDirection</source>
          <target state="translated">TextAreaElement.selectionDirection</target>
        </trans-unit>
        <trans-unit id="195b5e83deb9a4048869fbc51bb52ce4252d1742" translate="yes" xml:space="preserve">
          <source>TextAreaElement.selectionEnd</source>
          <target state="translated">TextAreaElement.selectionEnd</target>
        </trans-unit>
        <trans-unit id="0206b051c5a8831b545a8915f97614f455e5af26" translate="yes" xml:space="preserve">
          <source>TextAreaElement.selectionStart</source>
          <target state="translated">TextAreaElement.selectionStart</target>
        </trans-unit>
        <trans-unit id="ec0f1fe0a8e63b3f653743fe4fb66e725cf76854" translate="yes" xml:space="preserve">
          <source>TextAreaElement.setCustomValidity</source>
          <target state="translated">TextAreaElement.setCustomValidity</target>
        </trans-unit>
        <trans-unit id="a5de110052df640e6cbd18ee0a9d15eebcefc885" translate="yes" xml:space="preserve">
          <source>TextAreaElement.setRangeText</source>
          <target state="translated">TextAreaElement.setRangeText</target>
        </trans-unit>
        <trans-unit id="66e584e6b99e4e00e3bfd0dfa40e856eff9fcdd2" translate="yes" xml:space="preserve">
          <source>TextAreaElement.setSelectionRange</source>
          <target state="translated">TextAreaElement.setSelectionRange</target>
        </trans-unit>
        <trans-unit id="dd48988172eae06380c649526eef3fae8ae122ae" translate="yes" xml:space="preserve">
          <source>TextAreaElement.textLength</source>
          <target state="translated">TextAreaElement.textLength</target>
        </trans-unit>
        <trans-unit id="afa6e1406a8bc8bc4b511305ad5b608ca4b5a332" translate="yes" xml:space="preserve">
          <source>TextAreaElement.type</source>
          <target state="translated">TextAreaElement.type</target>
        </trans-unit>
        <trans-unit id="eb401b6f53bdc5b5b5b917e013b573317cc9e3b8" translate="yes" xml:space="preserve">
          <source>TextAreaElement.validationMessage</source>
          <target state="translated">TextAreaElement.validationMessage</target>
        </trans-unit>
        <trans-unit id="8fa85f9c7f407b25770256d1990867617f0240c1" translate="yes" xml:space="preserve">
          <source>TextAreaElement.validity</source>
          <target state="translated">TextAreaElement.validity</target>
        </trans-unit>
        <trans-unit id="661611117efda66568aa45091cc7b329ff312464" translate="yes" xml:space="preserve">
          <source>TextAreaElement.value</source>
          <target state="translated">TextAreaElement.value</target>
        </trans-unit>
        <trans-unit id="cb47a26fd760ec08a6cf2e51a69908f4b5cf065b" translate="yes" xml:space="preserve">
          <source>TextAreaElement.willValidate</source>
          <target state="translated">TextAreaElement.willValidate</target>
        </trans-unit>
        <trans-unit id="e4e854a8a572572a794eabaf236be823ca980d87" translate="yes" xml:space="preserve">
          <source>TextAreaElement.wrap</source>
          <target state="translated">TextAreaElement.wrap</target>
        </trans-unit>
        <trans-unit id="3bb9e95b8112017920b5005ccf86da7f8051f880" translate="yes" xml:space="preserve">
          <source>TextContentElement</source>
          <target state="translated">TextContentElement</target>
        </trans-unit>
        <trans-unit id="7af59fdb98b83b60b53c9071534da84707644049" translate="yes" xml:space="preserve">
          <source>TextContentElement class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a06719f7b4d319b456f6685253dde5eec44f4f" translate="yes" xml:space="preserve">
          <source>TextContentElement.LENGTHADJUST_SPACING</source>
          <target state="translated">TextContentElement.LENGTHADJUST_SPACING</target>
        </trans-unit>
        <trans-unit id="e21806989fadee3ba09aad02a0c46e8fed289404" translate="yes" xml:space="preserve">
          <source>TextContentElement.LENGTHADJUST_SPACINGANDGLYPHS</source>
          <target state="translated">TextContentElement.LENGTHADJUST_SPACINGANDGLYPHS</target>
        </trans-unit>
        <trans-unit id="7746291c6c8ee417ad1ceb2792b40e3a8f39442c" translate="yes" xml:space="preserve">
          <source>TextContentElement.LENGTHADJUST_UNKNOWN</source>
          <target state="translated">TextContentElement.LENGTHADJUST_UNKNOWN</target>
        </trans-unit>
        <trans-unit id="07799e3dcfaa8eabfbcbd0c132202ee8f680c3a4" translate="yes" xml:space="preserve">
          <source>TextContentElement.TextContentElement.created</source>
          <target state="translated">TextContentElement.TextContentElement.created</target>
        </trans-unit>
        <trans-unit id="d05205e0940070b10aeeae1d972cd0d2318a5f57" translate="yes" xml:space="preserve">
          <source>TextContentElement.created constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da08bede3e72618e646e76a39aa09d8cd6ddd619" translate="yes" xml:space="preserve">
          <source>TextContentElement.created(</source>
          <target state="translated">TextContentElement.created(</target>
        </trans-unit>
        <trans-unit id="f2146532a4e239d6f42302ced0607137c7fd4843" translate="yes" xml:space="preserve">
          <source>TextContentElement.getCharNumAtPosition</source>
          <target state="translated">TextContentElement.getCharNumAtPosition</target>
        </trans-unit>
        <trans-unit id="38d8d3594f0540a3bddc5acbbf2fb37eeceff86d" translate="yes" xml:space="preserve">
          <source>TextContentElement.getComputedTextLength</source>
          <target state="translated">TextContentElement.getComputedTextLength</target>
        </trans-unit>
        <trans-unit id="35d41946e42e111ed0f36ba5047173643f1b22d9" translate="yes" xml:space="preserve">
          <source>TextContentElement.getEndPositionOfChar</source>
          <target state="translated">TextContentElement.getEndPositionOfChar</target>
        </trans-unit>
        <trans-unit id="c8b2736ee2059b270bff82c3fb70d18fd9312566" translate="yes" xml:space="preserve">
          <source>TextContentElement.getExtentOfChar</source>
          <target state="translated">TextContentElement.getExtentOfChar</target>
        </trans-unit>
        <trans-unit id="44fd40edeea2397d2e5be6aba4613761249ea226" translate="yes" xml:space="preserve">
          <source>TextContentElement.getNumberOfChars</source>
          <target state="translated">TextContentElement.getNumberOfChars</target>
        </trans-unit>
        <trans-unit id="51cafd907029590202a05dbda0dc38f16f3d0325" translate="yes" xml:space="preserve">
          <source>TextContentElement.getRotationOfChar</source>
          <target state="translated">TextContentElement.getRotationOfChar</target>
        </trans-unit>
        <trans-unit id="98c2a1518ae6b52189b1fb7bc4adc46d383c494b" translate="yes" xml:space="preserve">
          <source>TextContentElement.getStartPositionOfChar</source>
          <target state="translated">TextContentElement.getStartPositionOfChar</target>
        </trans-unit>
        <trans-unit id="b091b51f03d169763af45abddd6555a48bc5e04e" translate="yes" xml:space="preserve">
          <source>TextContentElement.getSubStringLength</source>
          <target state="translated">TextContentElement.getSubStringLength</target>
        </trans-unit>
        <trans-unit id="166f05bd76b98e74a395ec6cb474dfbd2f349599" translate="yes" xml:space="preserve">
          <source>TextContentElement.lengthAdjust</source>
          <target state="translated">TextContentElement.lengthAdjust</target>
        </trans-unit>
        <trans-unit id="06ee4a2f071a6927e5e23d5b5856284ecadb05fa" translate="yes" xml:space="preserve">
          <source>TextContentElement.selectSubString</source>
          <target state="translated">TextContentElement.selectSubString</target>
        </trans-unit>
        <trans-unit id="a976b131a586288522869c2d82ab406806d14e07" translate="yes" xml:space="preserve">
          <source>TextContentElement.textLength</source>
          <target state="translated">TextContentElement.textLength</target>
        </trans-unit>
        <trans-unit id="1f9c843675b421bd0e65e3049cf9a494e34a5b8c" translate="yes" xml:space="preserve">
          <source>TextDetector</source>
          <target state="translated">TextDetector</target>
        </trans-unit>
        <trans-unit id="ab0adcfbc1aeb245fb6946c3312fe17dfa23b06e" translate="yes" xml:space="preserve">
          <source>TextDetector class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe7610992d6679e684a3f173381efe7d30c22ef" translate="yes" xml:space="preserve">
          <source>TextDetector constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e49e88350e497b0a56e8d107727f75896b791c" translate="yes" xml:space="preserve">
          <source>TextDetector(</source>
          <target state="translated">TextDetector(</target>
        </trans-unit>
        <trans-unit id="cd37892738bbddb208793adf7d9257ad7cc10248" translate="yes" xml:space="preserve">
          <source>TextDetector.TextDetector</source>
          <target state="translated">TextDetector.TextDetector</target>
        </trans-unit>
        <trans-unit id="d7c56c176facbab17f4f3236ad82cbd7b5e97aa5" translate="yes" xml:space="preserve">
          <source>TextDetector.detect</source>
          <target state="translated">TextDetector.detect</target>
        </trans-unit>
        <trans-unit id="123d74f97a268500684c9fe231bd1e9c51afc4da" translate="yes" xml:space="preserve">
          <source>TextElement</source>
          <target state="translated">TextElement</target>
        </trans-unit>
        <trans-unit id="0925dfeba4940d53c425182e413c9a2d466ba313" translate="yes" xml:space="preserve">
          <source>TextElement class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06313511e190249847103181a6ef321344c7914" translate="yes" xml:space="preserve">
          <source>TextElement constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf3f6dad90b605d94103d09336fb0de4d627d66" translate="yes" xml:space="preserve">
          <source>TextElement(</source>
          <target state="translated">TextElement(</target>
        </trans-unit>
        <trans-unit id="ba46b82f05cf851d815b629c4084c787d668cf5d" translate="yes" xml:space="preserve">
          <source>TextElement.TextElement</source>
          <target state="translated">TextElement.TextElement</target>
        </trans-unit>
        <trans-unit id="22873cd9b5a1d95f9a62946122c4b9083b60466e" translate="yes" xml:space="preserve">
          <source>TextElement.TextElement.created</source>
          <target state="translated">TextElement.TextElement.created</target>
        </trans-unit>
        <trans-unit id="ad0c0eb69767bd2fd6cadcc01ec27b72f19c8078" translate="yes" xml:space="preserve">
          <source>TextElement.created constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fec9052bdbeea968d68f90da1325cdaf6426deb" translate="yes" xml:space="preserve">
          <source>TextElement.created(</source>
          <target state="translated">TextElement.created(</target>
        </trans-unit>
        <trans-unit id="80694b2807ac275fa1b332f2b5daf26e73cbdaf5" translate="yes" xml:space="preserve">
          <source>TextEvent</source>
          <target state="translated">TextEvent</target>
        </trans-unit>
        <trans-unit id="ffea3106f0a91b50e55fabecc55e3a453ef4ba70" translate="yes" xml:space="preserve">
          <source>TextEvent class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f941db6bcff161f5dbe8a9b961b65162db106d" translate="yes" xml:space="preserve">
          <source>TextEvent constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf189317ade0e261f172101c7345742a6204e2be" translate="yes" xml:space="preserve">
          <source>TextEvent(</source>
          <target state="translated">TextEvent(</target>
        </trans-unit>
        <trans-unit id="16c61ae4e5511332a4f183aee8038fcfea9088f1" translate="yes" xml:space="preserve">
          <source>TextEvent.TextEvent</source>
          <target state="translated">TextEvent.TextEvent</target>
        </trans-unit>
        <trans-unit id="bed7fe314f2c025a95395be5119fa2a106186c48" translate="yes" xml:space="preserve">
          <source>TextEvent.data</source>
          <target state="translated">TextEvent.data</target>
        </trans-unit>
        <trans-unit id="1226d087bbb6619e5521b963ae96248dbd51016d" translate="yes" xml:space="preserve">
          <source>TextInputElement</source>
          <target state="translated">TextInputElement</target>
        </trans-unit>
        <trans-unit id="103a8427d3df703055207b918924882fb6dcddde" translate="yes" xml:space="preserve">
          <source>TextInputElement class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0645b7332cc0933886cb7122e0b15c6437d22836" translate="yes" xml:space="preserve">
          <source>TextInputElement constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a23d50d668ea0ce9209536ecccbd93c1cc38af2b" translate="yes" xml:space="preserve">
          <source>TextInputElement(</source>
          <target state="translated">TextInputElement(</target>
        </trans-unit>
        <trans-unit id="969aff55c08bb63643fa9b3322d580e054597976" translate="yes" xml:space="preserve">
          <source>TextInputElement.TextInputElement</source>
          <target state="translated">TextInputElement.TextInputElement</target>
        </trans-unit>
        <trans-unit id="b77809362b90f3733017aa73f4c5b9f80e2b09cc" translate="yes" xml:space="preserve">
          <source>TextInputElement.dirName</source>
          <target state="translated">TextInputElement.dirName</target>
        </trans-unit>
        <trans-unit id="ca3859e630038bb8818ca5ac88077d93a5251e02" translate="yes" xml:space="preserve">
          <source>TextInputElement.list</source>
          <target state="translated">TextInputElement.list</target>
        </trans-unit>
        <trans-unit id="476e3b2e637dcb1136165c9c299ea48b7ea32f0a" translate="yes" xml:space="preserve">
          <source>TextInputElementBase</source>
          <target state="translated">TextInputElementBase</target>
        </trans-unit>
        <trans-unit id="37de018cd1ac819e888385aba10342c28417269e" translate="yes" xml:space="preserve">
          <source>TextInputElementBase class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3daf021c19fb6afa2181d7071cd95c5589b5010b" translate="yes" xml:space="preserve">
          <source>TextInputElementBase constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5975954b4a81bc60df92bbaac24a250c2f44e992" translate="yes" xml:space="preserve">
          <source>TextInputElementBase(</source>
          <target state="translated">TextInputElementBase(</target>
        </trans-unit>
        <trans-unit id="04141b983f667f814ece825d5a72da2ee68d2d68" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.TextInputElementBase</source>
          <target state="translated">TextInputElementBase.TextInputElementBase</target>
        </trans-unit>
        <trans-unit id="d7f178d95fd4676c624e9e929c5645e11ff77d85" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.autocomplete</source>
          <target state="translated">TextInputElementBase.autocomplete</target>
        </trans-unit>
        <trans-unit id="1747c0cd5ec0290d75c20c79a966e3758f87a22c" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.maxLength</source>
          <target state="translated">TextInputElementBase.maxLength</target>
        </trans-unit>
        <trans-unit id="4493290e72d4d279b5876b74c20513fb630a1234" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.pattern</source>
          <target state="translated">TextInputElementBase.pattern</target>
        </trans-unit>
        <trans-unit id="7201b14c723cce4efcfe488e54feba3e48374033" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.placeholder</source>
          <target state="translated">TextInputElementBase.placeholder</target>
        </trans-unit>
        <trans-unit id="b34f12c5347db58b5ef0e0c45f523d3e318e33f6" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.readOnly</source>
          <target state="translated">TextInputElementBase.readOnly</target>
        </trans-unit>
        <trans-unit id="af94cec87b48495a1353a483300539bca8e24345" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.required</source>
          <target state="translated">TextInputElementBase.required</target>
        </trans-unit>
        <trans-unit id="c83ef55be0ac753f5ac0d60d59576a97c82ea195" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.select</source>
          <target state="translated">TextInputElementBase.select</target>
        </trans-unit>
        <trans-unit id="19b1ebf81610ad404e6801137bc2e961d2f78375" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.selectionDirection</source>
          <target state="translated">TextInputElementBase.selectionDirection</target>
        </trans-unit>
        <trans-unit id="e69fcd745432eb26efcd4ff1b02411102cff27f6" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.selectionEnd</source>
          <target state="translated">TextInputElementBase.selectionEnd</target>
        </trans-unit>
        <trans-unit id="202788a310c6921b1a554ffb337c83aeb33a5845" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.selectionStart</source>
          <target state="translated">TextInputElementBase.selectionStart</target>
        </trans-unit>
        <trans-unit id="b3bcb52a26306522e4588adf472515da8bbb601b" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.setSelectionRange</source>
          <target state="translated">TextInputElementBase.setSelectionRange</target>
        </trans-unit>
        <trans-unit id="06ec2323348011ec895fc8ea9759b87387e58c01" translate="yes" xml:space="preserve">
          <source>TextInputElementBase.size</source>
          <target state="translated">TextInputElementBase.size</target>
        </trans-unit>
        <trans-unit id="06d4a26dfeb6fe515c1bd30f6921c66e729ad5b4" translate="yes" xml:space="preserve">
          <source>TextMetrics</source>
          <target state="translated">TextMetrics</target>
        </trans-unit>
        <trans-unit id="75e3dfdfcf06a145ba8dfc75f11e4939186d9aa2" translate="yes" xml:space="preserve">
          <source>TextMetrics class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d180a6bd802326a343a9dec172ad00d1bd63cd4" translate="yes" xml:space="preserve">
          <source>TextMetrics.actualBoundingBoxAscent</source>
          <target state="translated">TextMetrics.actualBoundingBoxAscent</target>
        </trans-unit>
        <trans-unit id="fd203de64e48eed835f71537f9d7cfdbae52c8ee" translate="yes" xml:space="preserve">
          <source>TextMetrics.actualBoundingBoxDescent</source>
          <target state="translated">TextMetrics.actualBoundingBoxDescent</target>
        </trans-unit>
        <trans-unit id="cafbe2170fdceed47de2d5ea654ae857f9626e93" translate="yes" xml:space="preserve">
          <source>TextMetrics.actualBoundingBoxLeft</source>
          <target state="translated">TextMetrics.actualBoundingBoxLeft</target>
        </trans-unit>
        <trans-unit id="c73a20980b7f95ea1698aefd53a862efae2917a1" translate="yes" xml:space="preserve">
          <source>TextMetrics.actualBoundingBoxRight</source>
          <target state="translated">TextMetrics.actualBoundingBoxRight</target>
        </trans-unit>
        <trans-unit id="7ba9e8d7c6e3d714cd190d1ecfc1ef35a79728d2" translate="yes" xml:space="preserve">
          <source>TextMetrics.alphabeticBaseline</source>
          <target state="translated">TextMetrics.alphabeticBaseline</target>
        </trans-unit>
        <trans-unit id="d19ccbc45e424907c9ee28933618e60b20b5bb08" translate="yes" xml:space="preserve">
          <source>TextMetrics.emHeightAscent</source>
          <target state="translated">TextMetrics.emHeightAscent</target>
        </trans-unit>
        <trans-unit id="84201db8615367e34ddc417b9618f486300b2635" translate="yes" xml:space="preserve">
          <source>TextMetrics.emHeightDescent</source>
          <target state="translated">TextMetrics.emHeightDescent</target>
        </trans-unit>
        <trans-unit id="7c08498f8967ae918c77d78cdf48a141a781d055" translate="yes" xml:space="preserve">
          <source>TextMetrics.fontBoundingBoxAscent</source>
          <target state="translated">TextMetrics.fontBoundingBoxAscent</target>
        </trans-unit>
        <trans-unit id="53e567eb9aa47859b163b503a4a3b90b9c78fbe6" translate="yes" xml:space="preserve">
          <source>TextMetrics.fontBoundingBoxDescent</source>
          <target state="translated">TextMetrics.fontBoundingBoxDescent</target>
        </trans-unit>
        <trans-unit id="fb21ac3df438bd7833a2ee766de108ae2b04d572" translate="yes" xml:space="preserve">
          <source>TextMetrics.hangingBaseline</source>
          <target state="translated">TextMetrics.hangingBaseline</target>
        </trans-unit>
        <trans-unit id="afb50595ee45198639a30e1676900c2a1dfc90a2" translate="yes" xml:space="preserve">
          <source>TextMetrics.ideographicBaseline</source>
          <target state="translated">TextMetrics.ideographicBaseline</target>
        </trans-unit>
        <trans-unit id="455c83ef2b76f0a9f28b7ab7e1380b025cd4178c" translate="yes" xml:space="preserve">
          <source>TextMetrics.width</source>
          <target state="translated">TextMetrics.width</target>
        </trans-unit>
        <trans-unit id="ac450731b131a99f0997923cef7dae4f7cdefbed" translate="yes" xml:space="preserve">
          <source>TextPathElement</source>
          <target state="translated">TextPathElement</target>
        </trans-unit>
        <trans-unit id="cb04a14d29c2ec9f7ab926ab3dd9638b1bbb4f71" translate="yes" xml:space="preserve">
          <source>TextPathElement class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfeb86eb421192d7e937631d11bc284f5c6fcda" translate="yes" xml:space="preserve">
          <source>TextPathElement.TEXTPATH_METHODTYPE_ALIGN</source>
          <target state="translated">TextPathElement.TEXTPATH_METHODTYPE_ALIGN</target>
        </trans-unit>
        <trans-unit id="398ad9d9c4b57ea28ba3d4c8af71ea12caee890e" translate="yes" xml:space="preserve">
          <source>TextPathElement.TEXTPATH_METHODTYPE_STRETCH</source>
          <target state="translated">TextPathElement.TEXTPATH_METHODTYPE_STRETCH</target>
        </trans-unit>
        <trans-unit id="2f012f5534c9e741ddc1dd20e6ba18c0dccb1cb2" translate="yes" xml:space="preserve">
          <source>TextPathElement.TEXTPATH_METHODTYPE_UNKNOWN</source>
          <target state="translated">TextPathElement.TEXTPATH_METHODTYPE_UNKNOWN</target>
        </trans-unit>
        <trans-unit id="0a8349b07b073a2c51d1a5435af16eca19e6855b" translate="yes" xml:space="preserve">
          <source>TextPathElement.TEXTPATH_SPACINGTYPE_AUTO</source>
          <target state="translated">TextPathElement.TEXTPATH_SPACINGTYPE_AUTO</target>
        </trans-unit>
        <trans-unit id="698247aeebf9d06948f9ff1b4bd4d0180c9cfe32" translate="yes" xml:space="preserve">
          <source>TextPathElement.TEXTPATH_SPACINGTYPE_EXACT</source>
          <target state="translated">TextPathElement.TEXTPATH_SPACINGTYPE_EXACT</target>
        </trans-unit>
        <trans-unit id="4e8aa5d6e8897f8ef0c96155a86e7415476db523" translate="yes" xml:space="preserve">
          <source>TextPathElement.TEXTPATH_SPACINGTYPE_UNKNOWN</source>
          <target state="translated">TextPathElement.TEXTPATH_SPACINGTYPE_UNKNOWN</target>
        </trans-unit>
        <trans-unit id="be7114c51e365063c3659280d6d03b848b039ba6" translate="yes" xml:space="preserve">
          <source>TextPathElement.TextPathElement.created</source>
          <target state="translated">TextPathElement.TextPathElement.created</target>
        </trans-unit>
        <trans-unit id="49b76cfafbe2145e5f7a6e53d5c72f35fbbb57d9" translate="yes" xml:space="preserve">
          <source>TextPathElement.created constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d59e8ca26c5cfa12a3f201169173c8f4f9cffdd3" translate="yes" xml:space="preserve">
          <source>TextPathElement.created(</source>
          <target state="translated">TextPathElement.created(</target>
        </trans-unit>
        <trans-unit id="73df7622095e478deb87b8cda0da56ec5368f048" translate="yes" xml:space="preserve">
          <source>TextPathElement.href</source>
          <target state="translated">TextPathElement.href</target>
        </trans-unit>
        <trans-unit id="1e231a023f51fb19f17aca05a0ac594126670d66" translate="yes" xml:space="preserve">
          <source>TextPathElement.method</source>
          <target state="translated">TextPathElement.method</target>
        </trans-unit>
        <trans-unit id="fcbfdd919379a11223faa3fc0b58a2a85b39245f" translate="yes" xml:space="preserve">
          <source>TextPathElement.spacing</source>
          <target state="translated">TextPathElement.spacing</target>
        </trans-unit>
        <trans-unit id="0eacdeab36e1ab5f673e085ed30c825b91d97e20" translate="yes" xml:space="preserve">
          <source>TextPathElement.startOffset</source>
          <target state="translated">TextPathElement.startOffset</target>
        </trans-unit>
        <trans-unit id="98513889f3760db4255c4fb144ba683a33d65937" translate="yes" xml:space="preserve">
          <source>TextPositioningElement</source>
          <target state="translated">TextPositioningElement</target>
        </trans-unit>
        <trans-unit id="89542701c652a6788d51992b10b05acf8b041440" translate="yes" xml:space="preserve">
          <source>TextPositioningElement class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5507a8e703a0696dd1984ae387e970c912e4a3b" translate="yes" xml:space="preserve">
          <source>TextPositioningElement.TextPositioningElement.created</source>
          <target state="translated">TextPositioningElement.TextPositioningElement.created</target>
        </trans-unit>
        <trans-unit id="14417835a7c8d7575ee55be173b8fe7973c7f7ea" translate="yes" xml:space="preserve">
          <source>TextPositioningElement.created constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c804e762a231579ff00b2d56cb01d465044576" translate="yes" xml:space="preserve">
          <source>TextPositioningElement.created(</source>
          <target state="translated">TextPositioningElement.created(</target>
        </trans-unit>
        <trans-unit id="deebe0a2378c1ee12a51b328d40a7581a095a381" translate="yes" xml:space="preserve">
          <source>TextPositioningElement.dx</source>
          <target state="translated">TextPositioningElement.dx</target>
        </trans-unit>
        <trans-unit id="12c5f4d2a36c73e7aa6d93b612f2667b3baa1a85" translate="yes" xml:space="preserve">
          <source>TextPositioningElement.dy</source>
          <target state="translated">TextPositioningElement.dy</target>
        </trans-unit>
        <trans-unit id="af6a8eb9514c3a7e1b0298c2ae9f33c82e1e6f02" translate="yes" xml:space="preserve">
          <source>TextPositioningElement.rotate</source>
          <target state="translated">TextPositioningElement.rotate</target>
        </trans-unit>
        <trans-unit id="fc578c954b453a64ba9330d19f6c8513cfaacf8d" translate="yes" xml:space="preserve">
          <source>TextPositioningElement.x</source>
          <target state="translated">TextPositioningElement.x</target>
        </trans-unit>
        <trans-unit id="988798c6435aa7772eab160c874a811953d18a48" translate="yes" xml:space="preserve">
          <source>TextPositioningElement.y</source>
          <target state="translated">TextPositioningElement.y</target>
        </trans-unit>
        <trans-unit id="8bbddfa7a66f14d6d967a24e549d97335b814ef7" translate="yes" xml:space="preserve">
          <source>TextTrack</source>
          <target state="translated">TextTrack</target>
        </trans-unit>
        <trans-unit id="7d7acbb06bf6a0bce5d7438b99e987ef700d0fb0" translate="yes" xml:space="preserve">
          <source>TextTrack class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d16790a8d6a8dde7c0d0b1901a730a89f47cc7" translate="yes" xml:space="preserve">
          <source>TextTrack.activeCues</source>
          <target state="translated">TextTrack.activeCues</target>
        </trans-unit>
        <trans-unit id="ac181735bba249870d02bd7b4b5c326f8252df90" translate="yes" xml:space="preserve">
          <source>TextTrack.addCue</source>
          <target state="translated">TextTrack.addCue</target>
        </trans-unit>
        <trans-unit id="e8627a09923a347bca098b2ea94b2b6aa13df6e5" translate="yes" xml:space="preserve">
          <source>TextTrack.cueChangeEvent</source>
          <target state="translated">TextTrack.cueChangeEvent</target>
        </trans-unit>
        <trans-unit id="5532f222c6a5a22893b5eb96b6941968e56414c1" translate="yes" xml:space="preserve">
          <source>TextTrack.cues</source>
          <target state="translated">TextTrack.cues</target>
        </trans-unit>
        <trans-unit id="b440d711448dd0ceb1d385a89e6f54d39af55701" translate="yes" xml:space="preserve">
          <source>TextTrack.id</source>
          <target state="translated">TextTrack.id</target>
        </trans-unit>
        <trans-unit id="1ea2baef734c5562da160c9f2c7d9874af119723" translate="yes" xml:space="preserve">
          <source>TextTrack.kind</source>
          <target state="translated">TextTrack.kind</target>
        </trans-unit>
        <trans-unit id="7651d565784ccb3c80bc52207efd284f688338d7" translate="yes" xml:space="preserve">
          <source>TextTrack.label</source>
          <target state="translated">TextTrack.label</target>
        </trans-unit>
        <trans-unit id="f71bd18cf3211c7cfefbb86b5c084e9a5ceb1490" translate="yes" xml:space="preserve">
          <source>TextTrack.language</source>
          <target state="translated">TextTrack.language</target>
        </trans-unit>
        <trans-unit id="2a5d3d9df1b6a4502e654ad9559dc8b170215125" translate="yes" xml:space="preserve">
          <source>TextTrack.mode</source>
          <target state="translated">TextTrack.mode</target>
        </trans-unit>
        <trans-unit id="d310f3ba16b53b8bdbb1a8d4d02dea14fca0e5d0" translate="yes" xml:space="preserve">
          <source>TextTrack.onCueChange</source>
          <target state="translated">TextTrack.onCueChange</target>
        </trans-unit>
        <trans-unit id="7aeceff8f14e131ca220182da956f0620bb2ab19" translate="yes" xml:space="preserve">
          <source>TextTrack.removeCue</source>
          <target state="translated">TextTrack.removeCue</target>
        </trans-unit>
        <trans-unit id="44dd580697bf26d1d8d5bf3ad0bfd661986a9866" translate="yes" xml:space="preserve">
          <source>TextTrackCue</source>
          <target state="translated">TextTrackCue</target>
        </trans-unit>
        <trans-unit id="7e1f121d1d6d4c22ae2cc2190e5c4199771f77b0" translate="yes" xml:space="preserve">
          <source>TextTrackCue class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3cd0b7e3beec39a43ae9067a81877b82c704c47" translate="yes" xml:space="preserve">
          <source>TextTrackCue.endTime</source>
          <target state="translated">TextTrackCue.endTime</target>
        </trans-unit>
        <trans-unit id="92a321c873d9d78220f6a17da4ad1bb93f576438" translate="yes" xml:space="preserve">
          <source>TextTrackCue.enterEvent</source>
          <target state="translated">TextTrackCue.enterEvent</target>
        </trans-unit>
        <trans-unit id="6330f46689ba2cfbfc8011a0cf5d668b88cba978" translate="yes" xml:space="preserve">
          <source>TextTrackCue.exitEvent</source>
          <target state="translated">TextTrackCue.exitEvent</target>
        </trans-unit>
        <trans-unit id="1609bc70dc3e0255463afe9821089e24e71e2231" translate="yes" xml:space="preserve">
          <source>TextTrackCue.id</source>
          <target state="translated">TextTrackCue.id</target>
        </trans-unit>
        <trans-unit id="97c81cf108207b3d520995292d800a3ea2410288" translate="yes" xml:space="preserve">
          <source>TextTrackCue.onEnter</source>
          <target state="translated">TextTrackCue.onEnter</target>
        </trans-unit>
        <trans-unit id="8d19bda2a82a62b4fe122758207e7c77319118f8" translate="yes" xml:space="preserve">
          <source>TextTrackCue.onExit</source>
          <target state="translated">TextTrackCue.onExit</target>
        </trans-unit>
        <trans-unit id="323eef5a4a58b397ef8fc887f0819709bfe71475" translate="yes" xml:space="preserve">
          <source>TextTrackCue.pauseOnExit</source>
          <target state="translated">TextTrackCue.pauseOnExit</target>
        </trans-unit>
        <trans-unit id="c0ac7a19b1ef07f808af457edc55b88836721fce" translate="yes" xml:space="preserve">
          <source>TextTrackCue.startTime</source>
          <target state="translated">TextTrackCue.startTime</target>
        </trans-unit>
        <trans-unit id="12c3fe04c322870a449ae9f053b336d77810a5e5" translate="yes" xml:space="preserve">
          <source>TextTrackCue.track</source>
          <target state="translated">TextTrackCue.track</target>
        </trans-unit>
        <trans-unit id="0c0a3e3c79ed645faf27df5d40c7372e38f10e27" translate="yes" xml:space="preserve">
          <source>TextTrackCueList</source>
          <target state="translated">TextTrackCueList</target>
        </trans-unit>
        <trans-unit id="02201dc1d32a938c63b3aaaf308de028fba195fd" translate="yes" xml:space="preserve">
          <source>TextTrackCueList class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e46a3211a3e0debe1ba33857cbfebe1ce35ac93" translate="yes" xml:space="preserve">
          <source>TextTrackCueList.elementAt</source>
          <target state="translated">TextTrackCueList.elementAt</target>
        </trans-unit>
        <trans-unit id="d63f64fe3b5d17133935cc7bc9436448b907eb2a" translate="yes" xml:space="preserve">
          <source>TextTrackCueList.first</source>
          <target state="translated">TextTrackCueList.first</target>
        </trans-unit>
        <trans-unit id="7ca0bc03b5736e0c6f32487371d75d4035de69f6" translate="yes" xml:space="preserve">
          <source>TextTrackCueList.getCueById</source>
          <target state="translated">TextTrackCueList.getCueById</target>
        </trans-unit>
        <trans-unit id="703b1f39e190832560af8d049f423ab52fa936c5" translate="yes" xml:space="preserve">
          <source>TextTrackCueList.last</source>
          <target state="translated">TextTrackCueList.last</target>
        </trans-unit>
        <trans-unit id="1018339b499fb401028fefe122554a7d42d789cb" translate="yes" xml:space="preserve">
          <source>TextTrackCueList.length</source>
          <target state="translated">TextTrackCueList.length</target>
        </trans-unit>
        <trans-unit id="4504a644ed0c097be3431913b29aecc4d33cbc22" translate="yes" xml:space="preserve">
          <source>TextTrackCueList.operator []</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b801e934ab0e0c392838ca6c95e862cbcc5452" translate="yes" xml:space="preserve">
          <source>TextTrackCueList.operator []=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7db3d8699ec939afc22925bec7f9d228df7b9a7" translate="yes" xml:space="preserve">
          <source>TextTrackCueList.single</source>
          <target state="translated">TextTrackCueList.single</target>
        </trans-unit>
        <trans-unit id="b78226e90fe077a9f1354f7f27409bd755d851f7" translate="yes" xml:space="preserve">
          <source>TextTrackList</source>
          <target state="translated">TextTrackList</target>
        </trans-unit>
        <trans-unit id="43c7b10fd6301556ab1ec7a93e1da1f0768d0c54" translate="yes" xml:space="preserve">
          <source>TextTrackList class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c94815d0fd0030593e25b64f572d2e2d95a0375" translate="yes" xml:space="preserve">
          <source>TextTrackList.addTrackEvent</source>
          <target state="translated">TextTrackList.addTrackEvent</target>
        </trans-unit>
        <trans-unit id="3e0b8d00f17313faf92201ab9e789a62e12531f1" translate="yes" xml:space="preserve">
          <source>TextTrackList.changeEvent</source>
          <target state="translated">TextTrackList.changeEvent</target>
        </trans-unit>
        <trans-unit id="46171309f0491f68d4785c7ceaa0513a333a60f2" translate="yes" xml:space="preserve">
          <source>TextTrackList.elementAt</source>
          <target state="translated">TextTrackList.elementAt</target>
        </trans-unit>
        <trans-unit id="9133ac871e963913c8582041dd72f45f1e9c2b4e" translate="yes" xml:space="preserve">
          <source>TextTrackList.first</source>
          <target state="translated">TextTrackList.first</target>
        </trans-unit>
        <trans-unit id="ad23104741f2445f5414546b6e01739a0bab6614" translate="yes" xml:space="preserve">
          <source>TextTrackList.getTrackById</source>
          <target state="translated">TextTrackList.getTrackById</target>
        </trans-unit>
        <trans-unit id="e1c1c81a9fc1dca66ad5014c5a2b1045a216be5c" translate="yes" xml:space="preserve">
          <source>TextTrackList.last</source>
          <target state="translated">TextTrackList.last</target>
        </trans-unit>
        <trans-unit id="e040f7c5d120a425d7e9969dd517964e84af6f46" translate="yes" xml:space="preserve">
          <source>TextTrackList.length</source>
          <target state="translated">TextTrackList.length</target>
        </trans-unit>
        <trans-unit id="2389a1c855c1098dc0bccf9181db6968024201f6" translate="yes" xml:space="preserve">
          <source>TextTrackList.onAddTrack</source>
          <target state="translated">TextTrackList.onAddTrack</target>
        </trans-unit>
        <trans-unit id="6eb2c6158b1f04c7460dd9ab91be65b1c3b77951" translate="yes" xml:space="preserve">
          <source>TextTrackList.onChange</source>
          <target state="translated">TextTrackList.onChange</target>
        </trans-unit>
        <trans-unit id="9c7a9022ec0776700e8e407a6cbf1182ffa518b5" translate="yes" xml:space="preserve">
          <source>TextTrackList.operator []</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01c1717f668a08175755431af0f73ee124bce35" translate="yes" xml:space="preserve">
          <source>TextTrackList.operator []=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636fc03dec31d8383dce77a4edf82083ebad5ca8" translate="yes" xml:space="preserve">
          <source>TextTrackList.single</source>
          <target state="translated">TextTrackList.single</target>
        </trans-unit>
        <trans-unit id="7e9afd079fbdf71164bdb6f9c818f655c7cfb394" translate="yes" xml:space="preserve">
          <source>Texture</source>
          <target state="translated">Texture</target>
        </trans-unit>
        <trans-unit id="026bd707c61e8bd64bd6d3d20f07e3a9260a9a3c" translate="yes" xml:space="preserve">
          <source>Texture class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951c836cd92e7c3a1008428e799bf35a09893bf6" translate="yes" xml:space="preserve">
          <source>Texture.lastUploadedVideoFrameWasSkipped</source>
          <target state="translated">Texture.lastUploadedVideoFrameWasSkipped</target>
        </trans-unit>
        <trans-unit id="a76c835603c00e1560d0e66c9c931bfe1b37630f" translate="yes" xml:space="preserve">
          <source>Texture.lastUploadedVideoHeight</source>
          <target state="translated">Texture.lastUploadedVideoHeight</target>
        </trans-unit>
        <trans-unit id="ea945be3bba2951b662759e813e6f07d872b05da" translate="yes" xml:space="preserve">
          <source>Texture.lastUploadedVideoTimestamp</source>
          <target state="translated">Texture.lastUploadedVideoTimestamp</target>
        </trans-unit>
        <trans-unit id="3f40369535d09bdf56b7214c895356ad84cf84f2" translate="yes" xml:space="preserve">
          <source>Texture.lastUploadedVideoWidth</source>
          <target state="translated">Texture.lastUploadedVideoWidth</target>
        </trans-unit>
        <trans-unit id="9f34195ff63d706944fbdc9a2635987531f0b7fe" translate="yes" xml:space="preserve">
          <source>That is, for each object of the element type, the object is either considered to be in the set, or to &lt;em&gt;not&lt;/em&gt; be in the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f353358afc0e164b3c3012b811226efedadbf174" translate="yes" xml:space="preserve">
          <source>That is, that the comment is either enclosed in &lt;code&gt;/** ... */&lt;/code&gt; or starts with &lt;code&gt;///&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7047e9004f8fa2d45d7837b095afd253eee6fb51" translate="yes" xml:space="preserve">
          <source>That is, the returned set contains all the elements of this &lt;a href=&quot;../../dart-core/set-class&quot;&gt;Set&lt;/a&gt; and all the elements of &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12eb5ee84533c55bcc2e9a5d2781dd7025a49aa" translate="yes" xml:space="preserve">
          <source>That is, the returned set contains all the elements of this &lt;a href=&quot;../../dart-core/set-class&quot;&gt;Set&lt;/a&gt; that are also elements of &lt;code&gt;other&lt;/code&gt; according to &lt;code&gt;other.contains&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2495d7ea42242dc80ee5efd0d815cec0088c0a" translate="yes" xml:space="preserve">
          <source>That is, the returned set contains all the elements of this &lt;a href=&quot;../../dart-core/set-class&quot;&gt;Set&lt;/a&gt; that are not elements of &lt;code&gt;other&lt;/code&gt; according to &lt;code&gt;other.contains&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46be56978477864e1e0f00ff30279f2d78c1069b" translate="yes" xml:space="preserve">
          <source>That is, the returned set contains all the elements of this &lt;a href=&quot;../set-class&quot;&gt;Set&lt;/a&gt; and all the elements of &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b89f2b4d807921e6435bf07ce07897bf6540bf" translate="yes" xml:space="preserve">
          <source>That is, the returned set contains all the elements of this &lt;a href=&quot;../set-class&quot;&gt;Set&lt;/a&gt; that are also elements of &lt;code&gt;other&lt;/code&gt; according to &lt;code&gt;other.contains&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5386209df12ebb54e3df063635d049a69e01b2d2" translate="yes" xml:space="preserve">
          <source>That is, the returned set contains all the elements of this &lt;a href=&quot;../set-class&quot;&gt;Set&lt;/a&gt; that are not elements of &lt;code&gt;other&lt;/code&gt; according to &lt;code&gt;other.contains&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e27773352e4c492492b1a34c05d5b90f5f99f4" translate="yes" xml:space="preserve">
          <source>The 1-based column number for this source location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbd43f36c5168eee5657326299835087bea1775" translate="yes" xml:space="preserve">
          <source>The 1-based column number for this source location. &lt;a href=&quot;sourcelocation/column&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bf12229875193938239dcd2cb3063592fde592" translate="yes" xml:space="preserve">
          <source>The 1-based line number for this source location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b35354fdaec8867883f4dbcf5d4620a91bfaa1" translate="yes" xml:space="preserve">
          <source>The 1-based line number for this source location. &lt;a href=&quot;sourcelocation/line&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33179a5bf8397e2b4ca1d9a9488d04345dcf4881" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; completes to a timestamp that represents a floating point value of the number of milliseconds that have elapsed since the page started to load (which is also the timestamp at this call to animationFrame).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5820b111db23bfd52fb9204e4ba07fae235e0469" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../dart-async/stream-class&quot;&gt;Stream&lt;/a&gt; is canceled, e.g. by calling &lt;code&gt;cancel&lt;/code&gt; on the &lt;a href=&quot;../../dart-async/streamsubscription-class&quot;&gt;StreamSubscription&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f13c529d13ae699516a354de457c6bf09b3cf65d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../dart-async/streamtransformer-class&quot;&gt;StreamTransformer&lt;/a&gt; interface is completely generic, so it cannot say what subclasses do. Each &lt;a href=&quot;../../dart-async/streamtransformer-class&quot;&gt;StreamTransformer&lt;/a&gt; should document clearly how it transforms the stream (on the class or variable used to access the transformer), as well as any differences from the following typical behavior:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6975a76b2a016aab6a35d565c0c80deb8ab33b7e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../dart-convert/encoding-class&quot;&gt;Encoding&lt;/a&gt; used when writing strings. Depending on the underlying consumer this property might be mutable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f747c6f496bdb7ecbd70a8d91056aba6ed85db9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../dart-convert/encoding-class&quot;&gt;Encoding&lt;/a&gt; used when writing strings. Depending on the underlying consumer this property might be mutable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8554ad853c52894325ab3400fdfeca425c061d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../dart-indexed_db/dart-indexed_db-library&quot;&gt;dart:indexed_db&lt;/a&gt; APIs is a recommended alternatives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb316a691e1b9b206db7dc194a38395ab5780d92" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntity&lt;/a&gt; being watches, is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499c18a58ab60d6bff732a9789faf5aad27b0f42" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../htmlescapemode-class&quot;&gt;HtmlEscapeMode&lt;/a&gt; used by the converter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6227f7332049916c9a10a175176768c6cedb13f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../httpoverrides-class&quot;&gt;HttpOverrides&lt;/a&gt; to use in the root &lt;a href=&quot;../../dart-async/zone-class&quot;&gt;Zone&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36db36d8d3a562fe0fdacf6fbca1f9e280264956" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../httpresponse-class&quot;&gt;HttpResponse&lt;/a&gt; object, used for sending back the response to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6408eccd366c162649120f3db67df19d2d9a3c3c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt; used to connect this socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d4499e907184dcb324b654734d943fff12f087" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../iooverrides-class&quot;&gt;IOOverrides&lt;/a&gt; to use in the root &lt;a href=&quot;../../dart-async/zone-class&quot;&gt;Zone&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f7a8195e745e84befc413c6d8566d2eac05039f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../iterator-class&quot;&gt;Iterator&lt;/a&gt; of &lt;code&gt;elements&lt;/code&gt; provides the order of the elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7e0f5d2c28a3f238e580e9bb3a6c19948546a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mirrorsused-class&quot;&gt;MirrorsUsed&lt;/a&gt; annotation specifies &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;aField&lt;/code&gt; from library &lt;code&gt;my.library.one&lt;/code&gt; as targets. This will mark the class &lt;code&gt;A&lt;/code&gt; as a reflective target. The target specification for &lt;code&gt;aField&lt;/code&gt; has no effect, as there is no target in &lt;code&gt;my.library.one&lt;/code&gt; with that name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32808b1344aa79f536a6e99098f16ed1c1d059d9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../stream-class&quot;&gt;Stream&lt;/a&gt; returned by &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt; is a broadcast stream. It can be listened to more than once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dbf879d93009c3654130710ec24cf70712e4eb2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../streamtransformer-class&quot;&gt;StreamTransformer&lt;/a&gt; interface is completely generic, so it cannot say what subclasses do. Each &lt;a href=&quot;../streamtransformer-class&quot;&gt;StreamTransformer&lt;/a&gt; should document clearly how it transforms the stream (on the class or variable used to access the transformer), as well as any differences from the following typical behavior:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f422c2aae505f6c876b6fbe1e67cd828eec4eb43" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../transferabletypeddata-class&quot;&gt;TransferableTypedData&lt;/a&gt; is a cross-isolate single-use resource. This method must not be called more than once on the same underlying transferable bytes, even if the calls occur in different isolates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f5071a607707df6bd0181e1ec0aca5766ed26b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../uri-class&quot;&gt;Uri&lt;/a&gt; that this &lt;code&gt;UriData&lt;/code&gt; is giving access to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b975cd274a41afa89910171bcfa1d0d23e0920c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;add&quot;&gt;add&lt;/a&gt; method must not be called after this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e90fdceae8f377074837390ae0b1d9ab75c5b21" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;byteconversionsink-class&quot;&gt;ByteConversionSink&lt;/a&gt; provides an interface for converters to efficiently transmit byte data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b15bf0a21c1772ca323dbfe2626c2eccac026c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;byteconversionsink-class&quot;&gt;ByteConversionSink&lt;/a&gt; provides an interface for converters to efficiently transmit byte data. &lt;a href=&quot;byteconversionsink-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c421de8d353a624af51d82c7e50cefd23f8e6e4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;comparable-class&quot;&gt;Comparable&lt;/a&gt; interface does not imply the existence of the comparison operators &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;gt;=&lt;/code&gt;. These should only be defined if the ordering is a less-than/greater-than ordering, that is, an ordering where you would naturally use the words &quot;less than&quot; about the order of two elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612c8d71d19f65d9fa7106d78dfdd9e9742d82f7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;comparable-class&quot;&gt;Comparable&lt;/a&gt; interface should be used for the natural ordering of a type. If a type can be ordered in more than one way, and none of them is the obvious natural ordering, then it might be better not to use the &lt;a href=&quot;comparable-class&quot;&gt;Comparable&lt;/a&gt; interface, and to provide separate &lt;a href=&quot;comparator&quot;&gt;Comparator&lt;/a&gt;s instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38d1411b81276fb491651c74b27297ccd95de21" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;comparable/compareto&quot;&gt;compareTo&lt;/a&gt; operation defines a total ordering of objects, which can be used for ordering and sorting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f3772b15169b74a4de69bff9d5151ec14b6116" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetime-class&quot;&gt;DateTime&lt;/a&gt; class has no comparison operators, instead it has the more precisely named &lt;a href=&quot;datetime/isbefore&quot;&gt;DateTime.isBefore&lt;/a&gt; and &lt;a href=&quot;datetime/isafter&quot;&gt;DateTime.isAfter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edac67965029fe0b55d1bf6b14ce656d2876f726" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;deadline&quot;&gt;deadline&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8210bf8b77fbf12a31014e40c545c143a59e5a76" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;divelement-class&quot;&gt;DivElement&lt;/a&gt; is a block-level element, as opposed to &lt;a href=&quot;spanelement-class&quot;&gt;SpanElement&lt;/a&gt;, which is an inline-level element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e872f332ce7511103dc0b34795433d2a35c38601" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;divelement-class&quot;&gt;DivElement&lt;/a&gt; is a generic container and does not have any semantic significance. It is functionally similar to &lt;a href=&quot;spanelement-class&quot;&gt;SpanElement&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8bc17446766628ce43b39f11ecaf902cdcf26c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;double-class&quot;&gt;double&lt;/a&gt; class defines comparison operators that are compatible with equality. The operators differ from &lt;code&gt;double.compareTo&lt;/code&gt; on -0.0 and NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63b43a2c5d0648bb1f51e2ed4d27cf9138276a5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;double-class&quot;&gt;double&lt;/a&gt; type is contagious. Operations on &lt;a href=&quot;double-class&quot;&gt;double&lt;/a&gt;s return &lt;a href=&quot;double-class&quot;&gt;double&lt;/a&gt; results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62981f93bdf7aef08557d32563165ce474bb9304" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;duration-class&quot;&gt;Duration&lt;/a&gt; is the sum of all individual parts. This means that individual parts can be larger than the next-bigger unit. For example, &lt;a href=&quot;duration/inminutes&quot;&gt;inMinutes&lt;/a&gt; can be greater than 59.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff544fad1598c9c7a6b14604eed3951bf4ae6180" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;elapsed&quot;&gt;elapsed&lt;/a&gt; count is increasing monotonically. If the &lt;a href=&quot;../stopwatch-class&quot;&gt;Stopwatch&lt;/a&gt; has been stopped, then calling start again restarts it without resetting the &lt;a href=&quot;elapsed&quot;&gt;elapsed&lt;/a&gt; count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d1e9ac871d2eabaa1a828a7c15d09ed71295e8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;elapsedticks&quot;&gt;elapsedTicks&lt;/a&gt; count stops increasing after this call. If the &lt;a href=&quot;../stopwatch-class&quot;&gt;Stopwatch&lt;/a&gt; is currently not running, then calling this method has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06662ec0b62f33f11fb9538a87489c7fa11f880a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;elapsedticks&quot;&gt;elapsedTicks&lt;/a&gt; counter converted to a &lt;a href=&quot;../duration-class&quot;&gt;Duration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7d60400da7e338fba27542488491d6bc217691" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;elapsedticks&quot;&gt;elapsedTicks&lt;/a&gt; counter converted to microseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2f42345107e86e7c95afbca11a1cab487194f1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;elapsedticks&quot;&gt;elapsedTicks&lt;/a&gt; counter converted to milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d70e3f2c18f4a59c7cad12d86d891c42f072b43" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;encoder&quot;&gt;encoder&lt;/a&gt; and &lt;a href=&quot;decoder&quot;&gt;decoder&lt;/a&gt; of the resulting codec are swapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="119e1d5e27c0529a2271b1a0845c3dc338d744ed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;encoding&quot;&gt;encoding&lt;/a&gt; does not apply to this method, and the &lt;code&gt;data&lt;/code&gt; list is passed directly to the target consumer as a stream event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c38e81211301baa05eefe76a0b0b9554d0ce799" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;error-class&quot;&gt;Error&lt;/a&gt; class represents the occurrence of an error during runtime. Subclasses of this class represent specific kinds of errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04379483e72ca21330b11251182cc8a64b96693d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;event/type&quot;&gt;type&lt;/a&gt; of the event identifies what kind of interaction occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0141bbc8230b8fa9683f5d9caf93a108929990a0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;eventsink-class&quot;&gt;EventSink&lt;/a&gt; has been designed to handle asynchronous events from &lt;a href=&quot;stream-class&quot;&gt;Stream&lt;/a&gt;s. See, for example, &lt;a href=&quot;stream/stream.eventtransformed&quot;&gt;Stream.eventTransformed&lt;/a&gt; which uses &lt;code&gt;EventSink&lt;/code&gt;s to transform events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec3cb6fb49dcd8857c6c8b671f80b19a8c1d9fc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;eventsink-class&quot;&gt;EventSink&lt;/a&gt; methods can't be used while the &lt;a href=&quot;streamconsumer/addstream&quot;&gt;addStream&lt;/a&gt; is called. As soon as the &lt;a href=&quot;streamconsumer/addstream&quot;&gt;addStream&lt;/a&gt;'s &lt;a href=&quot;future-class&quot;&gt;Future&lt;/a&gt; completes with a value, the &lt;a href=&quot;eventsink-class&quot;&gt;EventSink&lt;/a&gt; methods can be used again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6086920164835442b22a64875292506d68a16235" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;gzipcodec-class&quot;&gt;GZipCodec&lt;/a&gt; encodes raw bytes to GZip compressed bytes and decodes GZip compressed bytes to raw bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94be2b5adb452a4ceef3955d3b4ee11c9c73e37b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;gzipcodec-class&quot;&gt;GZipCodec&lt;/a&gt; encodes raw bytes to GZip compressed bytes and decodes GZip compressed bytes to raw bytes. &lt;a href=&quot;gzipcodec-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be65a17ab3c1c439eb90a034161731202b784a9b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;hasnextiterator-class&quot;&gt;HasNextIterator&lt;/a&gt; class wraps an &lt;a href=&quot;../dart-core/iterator-class&quot;&gt;Iterator&lt;/a&gt; and provides methods to iterate over an object using &lt;code&gt;hasNext&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3456ca825afa2b7eb0e5d9b1af6291b2d24663d9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;hasnextiterator-class&quot;&gt;HasNextIterator&lt;/a&gt; class wraps an &lt;a href=&quot;../dart-core/iterator-class&quot;&gt;Iterator&lt;/a&gt; and provides methods to iterate over an object using &lt;code&gt;hasNext&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt;. &lt;a href=&quot;hasnextiterator-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f9bdddc2c2d5bc35efdd243108d319a7efd96b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;htmlescapemode-class&quot;&gt;HtmlEscapeMode&lt;/a&gt; used by the converter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613a0e07e2985cd30eee01758e4f5ad6fa69b945" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.dartlang.org/docs/spec/&quot;&gt;Dart Language Specification&lt;/a&gt; provides technical details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63503be3f756e9013dea3c95c634a60e67066e4e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpoverrides-class&quot;&gt;HttpOverrides&lt;/a&gt; to use in the root &lt;a href=&quot;../dart-async/zone-class&quot;&gt;Zone&lt;/a&gt;. &lt;a href=&quot;httpoverrides/global&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0abf8545a5f82df8ff42cf7a0744d1d3d38b148c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpresponse-class&quot;&gt;HttpResponse&lt;/a&gt; object, used for sending back the response to the client. &lt;a href=&quot;httprequest/response&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e736657d9efa1949bded380ec8b93661b70cb8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://pub.dartlang.org/packages/shelf&quot;&gt;shelf&lt;/a&gt; package on pub.dartlang.org contains a set of high-level classes that, together with this class, makes it easy to provide content through HTTP servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98480981c954b7047642a8cfb3161fe05e174eb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.dartlang.org/docs/dart-up-and-running/ch03.html#dartasync---asynchronous-programming&quot;&gt;dart:async section of the library tour&lt;/a&gt;: A brief overview of asynchronous programming.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcb95447891ad55b7d22aa4babe8cd617dbfa5c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpserver-class&quot;&gt;HttpServer&lt;/a&gt; class provides the basic functionality for implementing an HTTP server. For some higher-level building-blocks, we recommend that you try the &lt;a href=&quot;https://pub.dartlang.org/packages/shelf&quot;&gt;shelf&lt;/a&gt; pub package, which contains a set of high-level classes that, together with the &lt;a href=&quot;httpserver-class&quot;&gt;HttpServer&lt;/a&gt; class in this library, make it easier to implement HTTP servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a28dbce85b90f847f824dc04611d41f8cae33d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt; used to connect this socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2848e133e611885130aa898057920128e9ce098" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;internetaddress/type&quot;&gt;type&lt;/a&gt; of the &lt;a href=&quot;internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt; specified what IP protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f3a2d9fbf941db5031d1a9727cca98781ecd51" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;iooverrides-class&quot;&gt;IOOverrides&lt;/a&gt; to use in the root &lt;a href=&quot;../dart-async/zone-class&quot;&gt;Zone&lt;/a&gt;. &lt;a href=&quot;iooverrides/global&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f514911dc29654409196c3ed126e53efc76f1b5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;isolate/controlport&quot;&gt;controlPort&lt;/a&gt; identifies and gives access to controlling the isolate, and the &lt;a href=&quot;isolate/pausecapability&quot;&gt;pauseCapability&lt;/a&gt; and &lt;a href=&quot;isolate/terminatecapability&quot;&gt;terminateCapability&lt;/a&gt; guard access to some control operations. For example, calling &lt;a href=&quot;isolate/pause&quot;&gt;pause&lt;/a&gt; on an &lt;code&gt;Isolate&lt;/code&gt; object created without a &lt;a href=&quot;isolate/pausecapability&quot;&gt;pauseCapability&lt;/a&gt;, has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170fd473a15569730fa83511c6d21689dd7bfc96" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;jsonunsupportedobjecterror/unsupportedobject&quot;&gt;unsupportedObject&lt;/a&gt; field holds that object that failed to be serialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c9af7508402911ca60fba79deaca82645007a56" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;list-class&quot;&gt;List&lt;/a&gt; and &lt;a href=&quot;set-class&quot;&gt;Set&lt;/a&gt; classes are both &lt;code&gt;Iterable&lt;/code&gt;, as are most classes in the &lt;code&gt;dart:collection&lt;/code&gt; library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f338272ef591eeaf4cc1ac335b918dd05068eee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;platform/environment&quot;&gt;environment&lt;/a&gt; getter returns a the names and values of environment variables in a &lt;a href=&quot;../dart-core/map-class&quot;&gt;Map&lt;/a&gt; that contains key-value pairs of strings. The Map is unmodifiable. This sample shows how to get the value of the &lt;code&gt;PATH&lt;/code&gt; environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="137f68b2e53da247b3e8a69f10e67f824ffd9816" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;process-class&quot;&gt;Process&lt;/a&gt; class provides a way to run a process on the native machine. For example, the following code spawns a process that recursively lists the files under &lt;code&gt;web&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42069053a378f9e5cab78f2618385899b9e993a6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;rawsocketoption-class&quot;&gt;RawSocketOption&lt;/a&gt; is used as a parameter to &lt;a href=&quot;socket/setrawoption&quot;&gt;Socket.setRawOption&lt;/a&gt; and &lt;a href=&quot;rawsocket/setrawoption&quot;&gt;RawSocket.setRawOption&lt;/a&gt; to set customize the behaviour of the underlying socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b78c27199e75edcfb768dceb6c303e0340a35a4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;rawsocketoption-class&quot;&gt;RawSocketOption&lt;/a&gt; is used as a parameter to &lt;a href=&quot;socket/setrawoption&quot;&gt;Socket.setRawOption&lt;/a&gt; and &lt;a href=&quot;rawsocket/setrawoption&quot;&gt;RawSocket.setRawOption&lt;/a&gt; to set customize the behaviour of the underlying socket. &lt;a href=&quot;rawsocketoption-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5402462da8723362af4140195b332fa0371a0b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;rawzlibfilter-class&quot;&gt;RawZLibFilter&lt;/a&gt; class provides a low-level interface to zlib.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d058a9d266d2bfbfd01b6e4ac75376ac562c03" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;secureserversocket-class&quot;&gt;SecureServerSocket&lt;/a&gt; is a server socket, providing a stream of high-level &lt;a href=&quot;socket-class&quot;&gt;Socket&lt;/a&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1c7bbc6dd5bf36a799ea94b3cf69005fad91ec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;secureserversocket-class&quot;&gt;SecureServerSocket&lt;/a&gt; is a server socket, providing a stream of high-level &lt;a href=&quot;socket-class&quot;&gt;Socket&lt;/a&gt;s. &lt;a href=&quot;secureserversocket-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2320583b9c81abba6314e757c4362b6b534d09d4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;securesocket-class&quot;&gt;SecureSocket&lt;/a&gt; and &lt;a href=&quot;secureserversocket-class&quot;&gt;SecureServerSocket&lt;/a&gt; classes take a SecurityContext as an argument to their connect and bind methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eac28da7bbb61b84de316f5a21488149b2f749c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;socket-class&quot;&gt;Socket&lt;/a&gt; exposes both a &lt;a href=&quot;../dart-async/stream-class&quot;&gt;Stream&lt;/a&gt; and a &lt;a href=&quot;iosink-class&quot;&gt;IOSink&lt;/a&gt; interface, making it ideal for using together with other &lt;a href=&quot;../dart-async/stream-class&quot;&gt;Stream&lt;/a&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9766b13179eb90bd042ecb27eb790c97b2b3ff" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;socketdirection-class&quot;&gt;SocketDirection&lt;/a&gt; is used as a parameter to &lt;a href=&quot;socket/close&quot;&gt;Socket.close&lt;/a&gt; and &lt;a href=&quot;rawsocket/close&quot;&gt;RawSocket.close&lt;/a&gt; to close a socket in the specified direction(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2754195dbcc91a93bf15d5be3e78391fa2a10bf1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;socketoption-class&quot;&gt;SocketOption&lt;/a&gt; is used as a parameter to &lt;a href=&quot;socket/setoption&quot;&gt;Socket.setOption&lt;/a&gt; and &lt;a href=&quot;rawsocket/setoption&quot;&gt;RawSocket.setOption&lt;/a&gt; to set customize the behaviour of the underlying socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d1bdc59b235768677fcd4733abdb10f74f21d3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stdout/adderror&quot;&gt;addError&lt;/a&gt; API is inherited from &lt;a href=&quot;../dart-async/streamsink-class&quot;&gt;StreamSink&lt;/a&gt; and calling it will result in an unhandled asynchronous error unless there is an error handler on &lt;a href=&quot;stdout/done&quot;&gt;done&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f450b47dff9434184e4ca6407701fde0447726" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stopwatch/elapsedticks&quot;&gt;elapsedTicks&lt;/a&gt; counter converted to a &lt;a href=&quot;duration-class&quot;&gt;Duration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7360d061cfdac1da4f13df415883a43382212e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stopwatch/elapsedticks&quot;&gt;elapsedTicks&lt;/a&gt; counter converted to microseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380cd9d84a6b747f5fe04cade39694675dc47c00" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stopwatch/elapsedticks&quot;&gt;elapsedTicks&lt;/a&gt; counter converted to milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c822e0b1ab2d8957523024d3da9ccefb36d0d33" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stream/pipe&quot;&gt;Stream.pipe&lt;/a&gt; accepts a &lt;code&gt;StreamConsumer&lt;/code&gt; and will pass the stream to the consumer's &lt;a href=&quot;streamconsumer/addstream&quot;&gt;addStream&lt;/a&gt; method. When that completes, it will call &lt;a href=&quot;streamconsumer/close&quot;&gt;close&lt;/a&gt; and then complete its own returned future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dceb48df6e94b1ee7431b5aedba7f9145455ee4f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;transferabletypeddata-class&quot;&gt;TransferableTypedData&lt;/a&gt; can be moved between isolates, so sending it through a send port will only take constant time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f13ede51708e6395992ff05b4c970b21f7086bb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;type&quot;&gt;type&lt;/a&gt; of the &lt;a href=&quot;../internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt; specified what IP protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88825b4ac62e215c750f9e8b54206dbb11d2720a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri-class&quot;&gt;Uri&lt;/a&gt; that this &lt;code&gt;UriData&lt;/code&gt; is giving access to. &lt;a href=&quot;uridata/uri&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5e330b1620b587cb427820a2502fa7855fe1b5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;websocket-class&quot;&gt;WebSocket&lt;/a&gt; class provides support for the web socket protocol. This allows full-duplex communications between client and server applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea508defca1eac8d486fef886962e9639ff495af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;websockettransformer-class&quot;&gt;WebSocketTransformer&lt;/a&gt; provides the ability to upgrade a &lt;a href=&quot;httprequest-class&quot;&gt;HttpRequest&lt;/a&gt; to a &lt;a href=&quot;websocket-class&quot;&gt;WebSocket&lt;/a&gt; connection. It supports both upgrading a single &lt;a href=&quot;httprequest-class&quot;&gt;HttpRequest&lt;/a&gt; and upgrading a stream of &lt;a href=&quot;httprequest-class&quot;&gt;HttpRequest&lt;/a&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5a279bdf77c4798c0c5f28009777c4daac7786" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;websockettransformer-class&quot;&gt;WebSocketTransformer&lt;/a&gt; provides the ability to upgrade a &lt;a href=&quot;httprequest-class&quot;&gt;HttpRequest&lt;/a&gt; to a &lt;a href=&quot;websocket-class&quot;&gt;WebSocket&lt;/a&gt; connection. It supports both upgrading a single &lt;a href=&quot;httprequest-class&quot;&gt;HttpRequest&lt;/a&gt; and upgrading a stream of &lt;a href=&quot;httprequest-class&quot;&gt;HttpRequest&lt;/a&gt;s. &lt;a href=&quot;websockettransformer-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69d725b16d29abd000ee4748e45644b10cc41d0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;zlibcodec-class&quot;&gt;ZLibCodec&lt;/a&gt; encodes raw bytes to ZLib compressed bytes and decodes ZLib compressed bytes to raw bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89e3561a0026bcdbf734831ee66a168731e5cea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;zlibdecoder-class&quot;&gt;ZLibDecoder&lt;/a&gt; is used by &lt;a href=&quot;zlibcodec-class&quot;&gt;ZLibCodec&lt;/a&gt; and &lt;a href=&quot;gzipcodec-class&quot;&gt;GZipCodec&lt;/a&gt; to decompress data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d15e6c3b74f1cc82c1985708512a3e3b5fa5e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;zlibencoder-class&quot;&gt;ZLibEncoder&lt;/a&gt; encoder is used by &lt;a href=&quot;zlibcodec-class&quot;&gt;ZLibCodec&lt;/a&gt; and &lt;a href=&quot;gzipcodec-class&quot;&gt;GZipCodec&lt;/a&gt; to compress data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43389597353efc738d3af46e823e8a533dcd0fbc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;zone-class&quot;&gt;Zone&lt;/a&gt; class is not subclassable, but users can provide custom zones by forking an existing zone (usually &lt;a href=&quot;zone/current&quot;&gt;Zone.current&lt;/a&gt;) with a &lt;a href=&quot;zonespecification-class&quot;&gt;ZoneSpecification&lt;/a&gt;. This is similar to creating a new class that extends the base &lt;code&gt;Zone&lt;/code&gt; class and that overrides some methods, except without actually creating a new class. Instead the overriding methods are provided as functions that explicitly take the equivalent of their own class, the &quot;super&quot; class and the &lt;code&gt;this&lt;/code&gt; object as parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061593d9715cdc9fe9ed342b8e3904caa74e9e97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--packages&lt;/code&gt; flag passed to the executable used to run the script in this isolate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7043af1a4b44c41f03fa85b9dbd79394fbe739d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--packages&lt;/code&gt; flag passed to the executable used to run the script in this isolate. &lt;a href=&quot;platform/packageconfig&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815f6125cca48a342281360b2b8b2bae2279fde6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@Deprecated&lt;/code&gt; annotation applies to libraries, top-level declarations (variables, getters, setters, functions, classes and typedefs), class-level declarations (variables, getters, setters, methods, operators or constructors, whether static or not), named optional arguments and trailing optional positional parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ecae0dcb7f8d5b17346a84ce9d198d5a13ece9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; header of &lt;code&gt;url&lt;/code&gt; must be set to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4ac39b56c92671f8ce6a023760d836fce540c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header of &lt;code&gt;url&lt;/code&gt; cannot contain a wildcard (*).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7aaf1fb4b79ad4b7f017c7c5ce841a4a98ba437" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FutureOr&amp;lt;int&amp;gt;&lt;/code&gt; type is actually the &quot;type union&quot; of the types &lt;code&gt;int&lt;/code&gt; and &lt;code&gt;Future&amp;lt;int&amp;gt;&lt;/code&gt;. This type union is defined in such a way that &lt;code&gt;FutureOr&amp;lt;Object&amp;gt;&lt;/code&gt; is both a super- and sub-type of &lt;code&gt;Object&lt;/code&gt; (sub-type because &lt;code&gt;Object&lt;/code&gt; is one of the types of the union, super-type because &lt;code&gt;Object&lt;/code&gt; is a super-type of both of the types of the union). Together it means that &lt;code&gt;FutureOr&amp;lt;Object&amp;gt;&lt;/code&gt; is equivalent to &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ab68df5fc200fb157d430b6b52c81a336b440c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Host&lt;/code&gt; header for the request will be set to the value &lt;a href=&quot;../../dart-core/uri/host&quot;&gt;Uri.host&lt;/a&gt;:&lt;a href=&quot;../../dart-core/uri/port&quot;&gt;Uri.port&lt;/a&gt; from &lt;code&gt;url&lt;/code&gt; (if &lt;code&gt;url.host&lt;/code&gt; is an IP address, it will still be used in the &lt;code&gt;Host&lt;/code&gt; header). This can be overridden through the &lt;a href=&quot;../httpclientrequest-class&quot;&gt;HttpClientRequest&lt;/a&gt; interface before the request is sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d581f27e8b35639ead760118e29271ac9bc2a236" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Host&lt;/code&gt; header for the request will be set to the value &lt;code&gt;host&lt;/code&gt;:&lt;code&gt;port&lt;/code&gt; (if &lt;code&gt;host&lt;/code&gt; is an IP address, it will still be used in the &lt;code&gt;Host&lt;/code&gt; header). This can be overridden through the &lt;a href=&quot;../httpclientrequest-class&quot;&gt;HttpClientRequest&lt;/a&gt; interface before the request is sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa1aebe49c779834ba1439f139be6524f487ffb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Isolate&lt;/code&gt; object provided by a spawn operation will have the control port and capabilities needed to control the isolate. New isolate objects can be created without some of these capabilities if necessary, using the &lt;a href=&quot;isolate/isolate&quot;&gt;Isolate.Isolate&lt;/a&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d757fe73fb4321d14d86304afc0bd1fc19d252ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Iterator&lt;/code&gt; is initially positioned before the first element. Before accessing the first element the iterator must thus be advanced using &lt;a href=&quot;iterator/movenext&quot;&gt;moveNext&lt;/a&gt; to point to the first element. If no element is left, then &lt;a href=&quot;iterator/movenext&quot;&gt;moveNext&lt;/a&gt; returns false, &lt;a href=&quot;iterator/current&quot;&gt;current&lt;/a&gt; returns &lt;code&gt;null&lt;/code&gt;, and all further calls to &lt;a href=&quot;iterator/movenext&quot;&gt;moveNext&lt;/a&gt; will also return false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5a585dad252ea214cdface397cdc7516fe21dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LinkedHashSet&lt;/code&gt; also keep track of the order that elements were inserted in, and iteration happens in first-to-last insertion order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b766396c112ca65249e2985b2ce6f1e7cf185f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;action&lt;/code&gt; function can use methods on &lt;a href=&quot;../doublelinkedqueueentry-class&quot;&gt;DoubleLinkedQueueEntry&lt;/a&gt; to remove the entry or it can insert elements before or after then entry. If the current entry is removed, iteration continues with the entry that was following the current entry when &lt;code&gt;action&lt;/code&gt; was called. Any elements inserted after the current element before it is removed will not be visited by the iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b7fb08a53b8719840a829248eb9a503069a995" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;action&lt;/code&gt; function is called when this future completes, whether it does so with a value or with an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7b10dd9e99d3dfc044e91aa7987b6ef1d6f320" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;action&lt;/code&gt; may be either synchronous or asynchronous.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49136e8eaebec14f18ab24d60f5da69da5adf300" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;addError&lt;/code&gt; API is inherited from &lt;code&gt;StreamSink&lt;/code&gt; and calling it will result in an unhandled asynchronous error unless there is an error handler on &lt;code&gt;done&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d762bcec0552c806ecdc42eb1f1d13663b42993" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;address&lt;/code&gt; can either be a &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt; or an &lt;a href=&quot;../internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt;. If &lt;code&gt;address&lt;/code&gt; is a &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;bind&quot;&gt;bind&lt;/a&gt; will perform a &lt;a href=&quot;../internetaddress/lookup&quot;&gt;InternetAddress.lookup&lt;/a&gt; and use the first value in the list. To listen on the loopback adapter, which will allow only incoming connections from the local host, use the value &lt;a href=&quot;../internetaddress/loopbackipv4&quot;&gt;InternetAddress.loopbackIPv4&lt;/a&gt; or &lt;a href=&quot;../internetaddress/loopbackipv6&quot;&gt;InternetAddress.loopbackIPv6&lt;/a&gt;. To allow for incoming connection from the network use either one of the values &lt;a href=&quot;../internetaddress/anyipv4&quot;&gt;InternetAddress.anyIPv4&lt;/a&gt; or &lt;a href=&quot;../internetaddress/anyipv6&quot;&gt;InternetAddress.anyIPv6&lt;/a&gt; to bind to all interfaces or the IP address of a specific interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464b342cd7bbaf02aed2ccaf9c54ba15ed14ac79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;address&lt;/code&gt; can either be a &lt;a href=&quot;../dart-core/string-class&quot;&gt;String&lt;/a&gt; or an &lt;a href=&quot;internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt;. If &lt;code&gt;address&lt;/code&gt; is a &lt;a href=&quot;../dart-core/string-class&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;httpserver/bind&quot;&gt;bind&lt;/a&gt; will perform a &lt;a href=&quot;internetaddress/lookup&quot;&gt;InternetAddress.lookup&lt;/a&gt; and use the first value in the list. To listen on the loopback adapter, which will allow only incoming connections from the local host, use the value &lt;a href=&quot;internetaddress/loopbackipv4&quot;&gt;InternetAddress.loopbackIPv4&lt;/a&gt; or &lt;a href=&quot;internetaddress/loopbackipv6&quot;&gt;InternetAddress.loopbackIPv6&lt;/a&gt;. To allow for incoming connection from the network use either one of the values &lt;a href=&quot;internetaddress/anyipv4&quot;&gt;InternetAddress.anyIPv4&lt;/a&gt; or &lt;a href=&quot;internetaddress/anyipv6&quot;&gt;InternetAddress.anyIPv6&lt;/a&gt; to bind to all interfaces or the IP address of a specific interface. &lt;a href=&quot;httpserver/bindsecure&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01686236f0b5a3d340df3061121e5023ad159e6b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bufferSize&lt;/code&gt; is the size of the internal buffers used to collect UTF-8 code units. If using &lt;a href=&quot;startchunkedconversion&quot;&gt;startChunkedConversion&lt;/a&gt;, it will be the size of the chunks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea7bf10c605460e6304f89b0bb7e244b2c8e177" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;byte&lt;/code&gt; will be bit-representation truncated to the range 0 .. 255.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25841d544d6e668ef8f01e1cac0731d3ade369f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bytes&lt;/code&gt; should be valid UTF-8 encoded Unicode characters. If they are not, the receiving end will close the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f8c5ea709d64b196747b9e0f89fcb3f94120a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; function is invoked after the given &lt;code&gt;duration&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef7d65bc7109922e7c5fac9517a4fa842d70694" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; is invoked repeatedly with &lt;code&gt;duration&lt;/code&gt; intervals until canceled with the &lt;a href=&quot;cancel&quot;&gt;cancel&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d5c47d88e02a70cf3bd2d7a4cff53e37196071" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;charCodes&lt;/code&gt; can be UTF-16 code units or runes. If a char-code value is 16-bit, it is copied verbatim:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c3e7d9f5c179912ee3417c0018a981955ebc59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;compare&lt;/code&gt; function must act as a &lt;a href=&quot;../../dart-core/comparator&quot;&gt;Comparator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7dbae21ba6d23cc5a18a7da55e8977e1f806fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;compare&lt;/code&gt; function must act as a &lt;a href=&quot;../comparator&quot;&gt;Comparator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e708f1110048e7518e235ce7a93a05df02ef6618" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;computation&lt;/code&gt; will be executed after the given &lt;code&gt;duration&lt;/code&gt; has passed, and the future is completed with the result of the computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee32a8da2474cf59e1a2bb127b256c67bd6fed4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;count&lt;/code&gt; must not be negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e4f92fb789215c1fa32d11a8d208abcfddb82f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;current&lt;/code&gt; getter should keep its value until the next call to &lt;a href=&quot;movenext&quot;&gt;moveNext&lt;/a&gt;, even if an underlying collection changes. After a successful call to &lt;code&gt;moveNext&lt;/code&gt;, the user doesn't need to cache the current value, but can keep reading it from the iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7ba781b9ca48bfddd440ca0566a753d9fce035" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;environment&lt;/code&gt; is a mapping from strings to strings which the spawned isolate uses when looking up &lt;a href=&quot;../../dart-core/string/string.fromenvironment&quot;&gt;String.fromEnvironment&lt;/a&gt; values. The system may add its own entries to environment as well. If &lt;code&gt;environment&lt;/code&gt; is omitted, the spawned isolate has the same environment declarations as the spawning isolate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b556704d0ec15b07e4485ddfd2f84c6b58e4baef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exponent&lt;/code&gt; must be non-negative and &lt;code&gt;modulus&lt;/code&gt; must be positive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127a3747538f6e583e4e04d2ecf228b78dc2c8e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exponent&lt;/code&gt; must otherwise be positive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f890b74e4ab5a3a4edd0e5e6047e9a6f36618bc9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;formattedString&lt;/code&gt; must not be &lt;code&gt;null&lt;/code&gt;. Throws a &lt;a href=&quot;../formatexception-class&quot;&gt;FormatException&lt;/a&gt; if the input string cannot be parsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f15200d4c2af7d36f6fabf05636714b1900ca90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;frames&lt;/code&gt; parameter is an Iterable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2318d8eff78e4788e8eb50377675d3525e372ad8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handleData&lt;/code&gt; function is called for each element of the stream after this function is called. If &lt;code&gt;handleData&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, further elements are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1cba5beba179b65067639127494212fdfe6e6c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handleDone&lt;/code&gt; function is called when the stream closes. The value may be &lt;code&gt;null&lt;/code&gt;, in which case no function is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706b4b32ae63d6623b3c825ca19fb13808f094dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handleError&lt;/code&gt; argument may be &lt;code&gt;null&lt;/code&gt;, in which case further error events are considered unhandled, and will be reported to &lt;a href=&quot;../zone/handleuncaughterror&quot;&gt;Zone.handleUncaughtError&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbee9c8fb97575e7a93d9811245087e6b5712317" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handleError&lt;/code&gt; function must be able to be called with either one positional argument, or with two positional arguments where the seconds is always a &lt;a href=&quot;../../dart-core/stacktrace-class&quot;&gt;StackTrace&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13474aa99e3924480e5de5fb611b63bdcfb511ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;headers&lt;/code&gt; argument is specifying additional HTTP headers for setting up the connection. This would typically be the &lt;code&gt;Origin&lt;/code&gt; header and potentially cookies. The keys of the map are the header fields and the values are either String or List</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="879f5d316345f663e0c4c87eec963e4dfc6242fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; must be in the range &lt;code&gt;0 &amp;le; index &amp;lt; length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee95e575c29dd5fc91e01ae9ade2bd1074aa528" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; must be non-negative and less than &lt;a href=&quot;../../dart-core/list/length&quot;&gt;length&lt;/a&gt;. Index zero represents the first element (so &lt;code&gt;iterable.elementAt(0)&lt;/code&gt; is equivalent to &lt;code&gt;iterable.first&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b6285ecaa2e9d191a3d70f952588609f41445d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; must be non-negative and less than &lt;a href=&quot;length&quot;&gt;length&lt;/a&gt;. Index zero represents the first element (so &lt;code&gt;iterable.elementAt(0)&lt;/code&gt; is equivalent to &lt;code&gt;iterable.first&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d14f7b94ed511091cdd7a0afcfa0501777574e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; must be non-negative and no greater than &lt;a href=&quot;../../dart-core/list/length&quot;&gt;length&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3befdbf8608670162d9f2cf8e5360da0fe502243" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; must be non-negative and no greater than &lt;a href=&quot;length&quot;&gt;length&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1efc6f4d51930569f76a6b0c4104ec132c6ba442" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; position must not be in the middle of a surrogate pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc507e14c28264d6a3ad536dcda2a2031390e16d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;invocation&lt;/code&gt; represents the method call that failed. It should not be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c17a431dbe768967403281c9c3964da67b5a58a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;iterable&lt;/code&gt; must have enough objects to fill the range from &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;end&lt;/code&gt; after skipping &lt;code&gt;skipCount&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115dafbc599641c1c111dc017d76e6ccb2395529" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;iterable&lt;/code&gt; must not have more elements than what can fit from &lt;code&gt;index&lt;/code&gt; to &lt;a href=&quot;../../dart-core/list/length&quot;&gt;length&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ee7809c9f8964ac9d69e4b371715d7ef6611d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;iterable&lt;/code&gt; must not have more elements than what can fit from &lt;code&gt;index&lt;/code&gt; to &lt;a href=&quot;length&quot;&gt;length&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2552639a1e4f9819e0c1d95bde719319a1ee994f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keys&lt;/code&gt; iterable should have efficient &lt;a href=&quot;mapmixin/length&quot;&gt;Iterable.length&lt;/a&gt; and &lt;a href=&quot;../dart-core/iterable/contains&quot;&gt;Iterable.contains&lt;/a&gt; operations, and it should catch concurrent modifications of the keys while iterating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2eb7b584a9385ab4fc6438f27f8f9248b2d4127" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; is the length of &lt;code&gt;indexable&lt;/code&gt; at the time of the error. If &lt;code&gt;length&lt;/code&gt; is omitted, it defaults to &lt;code&gt;indexable.length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ea55e7713842c405bf739ebc42b61aa6edaecd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; must be a non-negative integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0901fdf810e15cb03fceda7124d457a4867a86ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; must not be negative or null, if it is provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83aafbcaf8db806d3c00a7f500357753b00611b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;memberName&lt;/code&gt; is a &lt;a href=&quot;../symbol-class&quot;&gt;Symbol&lt;/a&gt; representing the name of the called method or accessor. It should not be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbcb938c947437b5ebd106042e0e8e9cbbd661cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;message&lt;/code&gt; argument should be readable by programmers, and should state an alternative feature (if available) as well as when an annotated feature is expected to be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d79a4edfb42a8c53bbfc716c5fe5cf813ac46e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;message&lt;/code&gt; describes the erroneous argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf73bcaedeaab330bc6bb04b9352917981a3559" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;message&lt;/code&gt; describes the erroneous argument. &lt;a href=&quot;argumenterror/argumenterror&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d45b71ac86b6bb4f447b939e725e5c29711330" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;modulus&lt;/code&gt; must be positive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71b1b578815f725dcf0060d3167bc68d94e694f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; must be the name of a named capture group in the regular expression creating this match (that is, the name must be in &lt;a href=&quot;groupnames&quot;&gt;groupNames&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb43490dee89c0d4c8d89d9fa5c603a8a089f35b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; passed is case insensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4bb0d1fee3979fabd4fc6aea7d497f67e2bbde" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; should match the argument name of the function, but if the function is a method implementing an interface, and its argument names differ from the interface, it might be more useful to use the interface method's argument name (or just rename arguments to match).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e88b150252b091838bec29821e2957776f6450" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;namedArguments&lt;/code&gt; is a map from &lt;a href=&quot;../symbol-class&quot;&gt;Symbol&lt;/a&gt;s to the values of named arguments that the method was called with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc28d7e75a7f658dfa594538cff69bd23ec9021" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; can range between 0.0 and 1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb35bfc49370c51ff378e8734e8a9876a23465ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onDone&lt;/code&gt; handler will be called when the stream closes. The stream closes when &lt;a href=&quot;close&quot;&gt;close&lt;/a&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11827ef89a2d0b9f7efa56d0cfe54e62aa834418" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onError&lt;/code&gt; callback must be of type &lt;code&gt;void onError(error)&lt;/code&gt; or &lt;code&gt;void onError(error, StackTrace stackTrace)&lt;/code&gt;. If &lt;code&gt;onError&lt;/code&gt; accepts two arguments it is called with the error object and the stack trace (which could be &lt;code&gt;null&lt;/code&gt; if this stream itself received an error without stack trace). Otherwise it is called with just the error object. If &lt;code&gt;onError&lt;/code&gt; is omitted, any errors on this stream are considered unhandled, and will be passed to the current &lt;a href=&quot;../../dart-async/zone-class&quot;&gt;Zone&lt;/a&gt;'s error handler. By default unhandled async errors are treated as if they were uncaught top-level errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854afb0a7e5427704e69d28247e001bee0fccbb7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onError&lt;/code&gt; callback must be of type &lt;code&gt;void onError(error)&lt;/code&gt; or &lt;code&gt;void onError(error, StackTrace stackTrace)&lt;/code&gt;. If &lt;code&gt;onError&lt;/code&gt; accepts two arguments it is called with the error object and the stack trace (which could be &lt;code&gt;null&lt;/code&gt; if this stream itself received an error without stack trace). Otherwise it is called with just the error object. If &lt;code&gt;onError&lt;/code&gt; is omitted, any errors on this stream are considered unhandled, and will be passed to the current &lt;a href=&quot;../zone-class&quot;&gt;Zone&lt;/a&gt;'s error handler. By default unhandled async errors are treated as if they were uncaught top-level errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e06c7c37168e42757d99b0e7d6ea4896cf42ac02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onError&lt;/code&gt; callback must be of type &lt;code&gt;void onError(error)&lt;/code&gt; or &lt;code&gt;void onError(error, StackTrace stackTrace)&lt;/code&gt;. The function type determines whether &lt;code&gt;onError&lt;/code&gt; is invoked with a stack trace argument. The stack trace argument may be &lt;code&gt;null&lt;/code&gt; if this stream received an error without a stack trace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7cdf6f5e12623b36139340e79ae58474f940c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onError&lt;/code&gt; function is only invoked if &lt;code&gt;source&lt;/code&gt; is a &lt;a href=&quot;../string-class&quot;&gt;String&lt;/a&gt; with an invalid format. It is not invoked if &lt;code&gt;source&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aaec9314d23a609e3d4d0838d6b30ebf12ff94a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onError&lt;/code&gt; parameter is deprecated and will be removed. Instead of &lt;code&gt;double.parse(string, (string) { ... })&lt;/code&gt;, you should use &lt;code&gt;double.tryParse(string) ?? (...)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b195d0bbffdbcd7e7c13270b327e8744dedd34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onError&lt;/code&gt; parameter is deprecated and will be removed. Instead of &lt;code&gt;int.parse(string, onError: (string) =&amp;gt; ...)&lt;/code&gt;, you should use &lt;code&gt;int.tryParse(string) ?? (...)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255be98355b589109fa6c70bdc5dfe05c5ee50bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onError&lt;/code&gt; parameter is deprecated and will be removed. Instead of &lt;code&gt;num.parse(string, (string) { ... })&lt;/code&gt;, you should use &lt;code&gt;num.tryParse(string) ?? (...)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00bfeb0002526da116dea71578adb0717e847632" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onListen&lt;/code&gt; callback does &lt;em&gt;not&lt;/em&gt; receive the handlers that were passed to &lt;a href=&quot;../stream/listen&quot;&gt;Stream.listen&lt;/a&gt;. These are automatically set after the call to the &lt;code&gt;onListen&lt;/code&gt; callback (using &lt;a href=&quot;../streamsubscription/ondata&quot;&gt;StreamSubscription.onData&lt;/a&gt;, &lt;a href=&quot;../streamsubscription/onerror&quot;&gt;StreamSubscription.onError&lt;/a&gt; and &lt;a href=&quot;../streamsubscription/ondone&quot;&gt;StreamSubscription.onDone&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d30668cec11e2a143453a48f44272fb0f6ec6b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onListen&lt;/code&gt; callback is called when the first listener is subscribed, and the &lt;code&gt;onCancel&lt;/code&gt; is called when there are no longer any active listeners. If a listener is added again later, after the &lt;code&gt;onCancel&lt;/code&gt; was called, the &lt;code&gt;onListen&lt;/code&gt; will be called again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8767a14d8a12935fb8adf676353b8651d0ad81db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onListen&lt;/code&gt; callback is called when the stream receives its listener and &lt;code&gt;onCancel&lt;/code&gt; when the listener ends its subscription. If &lt;code&gt;onCancel&lt;/code&gt; needs to perform an asynchronous operation, &lt;code&gt;onCancel&lt;/code&gt; should return a future that completes when the cancel operation is done.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb09aaadf453d5dbfd576eef0c509017e8bc2e48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onPause&lt;/code&gt; function is called when the stream becomes paused. &lt;code&gt;onResume&lt;/code&gt; is called when the stream resumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df86d716b8ce3edafeb173299122107db6cef736" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onTimeout&lt;/code&gt; function is called with one argument: an &lt;a href=&quot;../eventsink-class&quot;&gt;EventSink&lt;/a&gt; that allows putting events into the returned stream. This &lt;code&gt;EventSink&lt;/code&gt; is only valid during the call to &lt;code&gt;onTimeout&lt;/code&gt;. Calling &lt;a href=&quot;../eventsink/close&quot;&gt;EventSink.close&lt;/a&gt; on the sink passed to &lt;code&gt;onTimeout&lt;/code&gt; closes the returned stream, and no further events are processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f4c44ff214a48c100681b557a44466944e1536" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;other&lt;/code&gt; argument must be a value that is comparable to this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4927419487c3a50f7d97404d8058b8a8c93185" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path&lt;/code&gt; component is set from the &lt;code&gt;unencodedPath&lt;/code&gt; argument. The path passed must not be encoded as this constructor encodes the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7647f9e51fe8777d1251c76ab71380ae29aa9aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;positionalArguments&lt;/code&gt; is a list of the positional arguments that the method was called with. If &lt;code&gt;null&lt;/code&gt;, it is considered equivalent to the empty list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606d844ddab4587fe3a33a33c85e9a1f8028cc32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;priority&lt;/code&gt; must be one of &lt;a href=&quot;immediate-constant&quot;&gt;immediate&lt;/a&gt; or &lt;a href=&quot;beforenextevent-constant&quot;&gt;beforeNextEvent&lt;/a&gt;. The response is sent at different times depending on the ping type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f04998f2ccd9d1a7c7a5161a4c0d6aa87d8c050" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;priority&lt;/code&gt;, when provided, must be one of &lt;a href=&quot;immediate-constant&quot;&gt;immediate&lt;/a&gt; or &lt;a href=&quot;beforenextevent-constant&quot;&gt;beforeNextEvent&lt;/a&gt; (the default). The shutdown is performed at different times depending on the priority:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c268c2fbb51b159c8c53922f14f664d5b359ccf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;protocols&lt;/code&gt; argument is specifying the subprotocols the client is willing to speak.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ec42950fdf9b401ede2ce69bd24433ad81c020" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;query&lt;/code&gt; component is set from the optional &lt;code&gt;queryParameters&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4048287eaf7c47554896f7046596b1260e10d050" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;radix&lt;/code&gt; argument must be an integer in the range 2 to 36.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552e7aec1edff85b4b21504d1f5ea3dab18463a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;radix&lt;/code&gt; must be in the range 2..36. The digits used are first the decimal digits 0..9, and then the letters 'a'..'z' with values 10 through 35. Also accepts upper-case letters with the same values as the lower-case ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31f8b12c2575c7af5d54f264b45ee28024c31e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;receiver&lt;/code&gt; is the receiver of the method call. That is, the object on which the method was attempted called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920f0ec5942aaa6da4a25f826b7b7aa425a7a381" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;receiver&lt;/code&gt; is the receiver of the method call. That is, the object on which the method was attempted called. If the receiver is &lt;code&gt;null&lt;/code&gt;, it is interpreted as a call to a top-level function of a library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c48164b14d1ea4df21a777a70126491c3b1495" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;replace&lt;/code&gt; function is called with the &lt;a href=&quot;../match-class&quot;&gt;Match&lt;/a&gt; generated by the pattern, and its result is used as replacement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08365c44bf47a98f4cb1fbc3ca59b2f9614e5f4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;response&lt;/code&gt; object must follow the same restrictions as enforced by &lt;a href=&quot;../sendport/send&quot;&gt;SendPort.send&lt;/a&gt;. It is recommended to only use simple values that can be sent to all isolates, like &lt;code&gt;null&lt;/code&gt;, booleans, numbers or strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53a99f4fe52019caed69889c6f6f38cf8999672" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resumeCapability&lt;/code&gt; is used to identity the pause, and must be used again to end the pause using &lt;a href=&quot;resume&quot;&gt;resume&lt;/a&gt;. If &lt;code&gt;resumeCapability&lt;/code&gt; is omitted, a new capability object is created and used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6252ae02508d8eb8f4a65d7e03974eb403075c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reviver&lt;/code&gt; function is called during decoding. It is invoked once for each object or list property that has been parsed. The &lt;code&gt;key&lt;/code&gt; argument is either the integer list index for a list property, the string map key for object properties, or &lt;code&gt;null&lt;/code&gt; for the final result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b730c05575ff59a3235ecd7f049953d4e5d216c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reviver&lt;/code&gt; function is called once for each object or list property that has been parsed during decoding. The &lt;code&gt;key&lt;/code&gt; argument is either the integer list index for a list property, the string map key for object properties, or &lt;code&gt;null&lt;/code&gt; for the final result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6be43374362ae18d06242571c5c0d556b4f1f10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reviver&lt;/code&gt; may be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6f9c2fe3d99c02035f11485dd9462fcfe2ece0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scheme&lt;/code&gt; is always set to &lt;code&gt;http&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6fb58862b0f2a53851020f549dab13352789010" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scheme&lt;/code&gt; should be the same as the one returned by &lt;a href=&quot;scheme&quot;&gt;Uri.scheme&lt;/a&gt;, but doesn't have to be case-normalized to lower-case characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe4e63f63198970edc5c7c6650aa439146709a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source&lt;/code&gt; must be a non-empty sequence of base-&lt;code&gt;radix&lt;/code&gt; digits, optionally prefixed with a minus or plus sign ('-' or '+').</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d3ab60abaf0b14e2f5539ceab082f312bf9c9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source&lt;/code&gt; must be a non-empty sequence of base-&lt;code&gt;radix&lt;/code&gt; digits, optionally prefixed with a minus or plus sign ('-' or '+'). It must not be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8635e964fcbee56a5ca7140dffb6bb8c3a017bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source&lt;/code&gt; of the elements may be a &lt;a href=&quot;../../dart-core/list-class&quot;&gt;List&lt;/a&gt; or any &lt;a href=&quot;../../dart-core/iterable-class&quot;&gt;Iterable&lt;/a&gt; with efficient &lt;a href=&quot;length&quot;&gt;Iterable.length&lt;/a&gt; and &lt;a href=&quot;../listmixin/elementat&quot;&gt;Iterable.elementAt&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8f089a063dc168965bb47d9fb83944c9e9481b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stackTraceString&lt;/code&gt; can be a string returned by some other stack trace, or it can be any string at all. If the string doesn't look like a stack trace, code that interprets stack traces is likely to fail, so fake stack traces should be used with care.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37856aad57882932df33d1370daa50033b396e86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; indices must specify a valid range of this string. That is &lt;code&gt;0 &amp;lt;= start &amp;lt;= end &amp;lt;= this.length&lt;/code&gt;. If &lt;code&gt;end&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, it defaults to &lt;a href=&quot;length&quot;&gt;length&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1501cee6a4a3bbce45615bbccf3e9b3217e2ca8b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; positions must satisfy the relations 0 &amp;le; &lt;code&gt;start&lt;/code&gt; &amp;le; &lt;code&gt;end&lt;/code&gt; &amp;le; &lt;code&gt;this.length&lt;/code&gt; If &lt;code&gt;end&lt;/code&gt; is equal to &lt;code&gt;start&lt;/code&gt;, then the returned list is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d3e74a62f832a9a3c054416ab670cc99881f04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;start&lt;/code&gt; must be non-negative and not greater than &lt;a href=&quot;length&quot;&gt;length&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96bf3f673de4db4504e348b878a14cd87ebdb837" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;startName&lt;/code&gt; and &lt;code&gt;endName&lt;/code&gt; defaults to &lt;code&gt;&quot;start&quot;&lt;/code&gt; and &lt;code&gt;&quot;end&quot;&lt;/code&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fec7f07362aa24981c78e37988eda6829c1e1a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;streamTransformer&lt;/code&gt; can return any stream. Whether the returned stream is a broadcast stream or not, and which elements it will contain, is entirely up to the transformation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d537a7a6b49520bd86b0e1026057496ed9f82d4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;test&lt;/code&gt; call is considered failing if it returns a non-&lt;code&gt;true&lt;/code&gt; value or if it throws. If the &lt;code&gt;test&lt;/code&gt; call throws, the error is emitted as the last event on the returned streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ef7431e396957ecf2c12039d5532662f62ec37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;test&lt;/code&gt; function must not throw or modify the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969ef0f138240ed20e7dbe3c953165d5fa3311e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toEncodable&lt;/code&gt; function is used during encoding. It is invoked for values that are not directly encodable to a string (a value that is not a number, boolean, string, null, list or a map with string keys). The function must return an object that is directly encodable. The elements of a returned list and values of a returned map do not need to be directly encodable, and if they aren't, &lt;code&gt;toEncodable&lt;/code&gt; will be used on them as well. Please notice that it is possible to cause an infinite recursive regress in this way, by effectively creating an infinite data structure through repeated call to &lt;code&gt;toEncodable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc7aed82eda5f9f1e83d7b1b79be36924b66670" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;uri&lt;/code&gt; must have scheme &lt;code&gt;data&lt;/code&gt; and no authority or fragment, and the path (concatenated with the query, if there is one) must be valid as data URI content with the same rules as &lt;a href=&quot;parse&quot;&gt;parse&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d004923d9eee9046ba410fa931aa54628a31d49" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;uri&lt;/code&gt; must not be &lt;code&gt;null&lt;/code&gt;. If the &lt;code&gt;uri&lt;/code&gt; string is not valid as a URI or URI reference, a &lt;a href=&quot;../formatexception-class&quot;&gt;FormatException&lt;/a&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736522b69715a4285841d4b392c7b32867b1e6d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;userInfo&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; components are set from the &lt;code&gt;authority&lt;/code&gt; argument. If &lt;code&gt;authority&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or empty, the created &lt;code&gt;Uri&lt;/code&gt; has no authority, and isn't directly usable as an HTTP URL, which must have a non-empty host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f63fecad45f3a69b64d230360ac3095f2fe13d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;where&lt;/code&gt; parameter indicates where to insert the HTML fragment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0435445564e42a2add420eeaea1327b74c2539d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; should be non-negative. If &lt;code&gt;width&lt;/code&gt; or &lt;code&gt;height&lt;/code&gt; are negative, they are clamped to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54bfe9d8bfb5aef8e0436d9fad1af30de2e04c26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;withCredentials&lt;/code&gt; parameter specified that credentials such as a cookie (already) set in the header or &lt;a href=&quot;http://tools.ietf.org/html/rfc1945#section-10.2&quot;&gt;authorization headers&lt;/a&gt; should be specified for the request. Details to keep in mind when using credentials:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f51307e9af0fae933280fc00db03a2df8942d7d" translate="yes" xml:space="preserve">
          <source>The ANSI color selection is generally supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb37e828d125d2bb5f555a78d3c17c76e8be5632" translate="yes" xml:space="preserve">
          <source>The DER encoded bytes of the certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f3af2e568b9efe78549afbf1b1c6213304ddf90" translate="yes" xml:space="preserve">
          <source>The Dart specification requires this error to be thrown when control reaches the end of a switch case (except the last case of a switch) without meeting a break or similar end of the control flow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c246479b4150ffeabad66eeab10d16cfb942983" translate="yes" xml:space="preserve">
          <source>The DateTime class contains several handy methods, such as &lt;a href=&quot;datetime/isafter&quot;&gt;isAfter&lt;/a&gt;, &lt;a href=&quot;datetime/isbefore&quot;&gt;isBefore&lt;/a&gt;, and &lt;a href=&quot;datetime/isatsamemomentas&quot;&gt;isAtSameMomentAs&lt;/a&gt;, for comparing DateTime objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ec70580611644df89ffd4e5eade5e73aa3bca8" translate="yes" xml:space="preserve">
          <source>The DateTime class does not provide internationalization. To internationalize your code, use the &lt;a href=&quot;https://pub.dartlang.org/packages/intl&quot;&gt;intl&lt;/a&gt; package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4173a6304f7f59d06a0dfad41172dc8f0ed3a20" translate="yes" xml:space="preserve">
          <source>The Euclidean division is only defined for integers, but can be easily extended to work with doubles. In that case &lt;code&gt;r&lt;/code&gt; may have a non-integer value, but it still verifies &lt;code&gt;0 &amp;lt;= r &amp;lt; |b|&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6122522703e2f6ceb035496e66feef7428ced29e" translate="yes" xml:space="preserve">
          <source>The File class contains methods for manipulating files and their contents. Using methods in this class, you can open and close files, read to and write from them, create and delete them, and check for their existence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df236eea20b26aaf920df86ee12bb78bf80ed06" translate="yes" xml:space="preserve">
          <source>The Future is completed when the response is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd5a26b58821ef76cd4a18b209b35f2990ee3b5" translate="yes" xml:space="preserve">
          <source>The HTTP method is specified in &lt;code&gt;method&lt;/code&gt; and the URL to use in &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0edca5340a4d3f9b01bf5963fc5b22e473af6b" translate="yes" xml:space="preserve">
          <source>The HTTP method to use is specified in &lt;code&gt;method&lt;/code&gt;, the server is specified using &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt;, and the path (including a possible query) is specified using &lt;code&gt;path&lt;/code&gt;. The path may also contain a URI fragment, which will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988ccb9ee93543040400a8debc464ecfcad5d0e7" translate="yes" xml:space="preserve">
          <source>The HTTP protocol version used in the request, either &quot;1.0&quot; or &quot;1.1&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37809cb81faa4b30caf7a3d18e0b86e5af064342" translate="yes" xml:space="preserve">
          <source>The HTTP result code from the request (200, 404, etc). See also: &lt;a href=&quot;http://en.wikipedia.org/wiki/List_of_HTTP_status_codes&quot;&gt;HTTP Status Codes&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b447c028a020688961b3c4dbd2219457ec1cb89" translate="yes" xml:space="preserve">
          <source>The HttpClient supports persistent connections and caches network connections to reuse them for multiple requests whenever possible. This means that network connections can be kept open for some time after a request has completed. Use HttpClient.close to force the HttpClient object to shut down and to close the idle network connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d22c4e75c99f113fa8f07e0f202148cbcfcae815" translate="yes" xml:space="preserve">
          <source>The HttpRequest exposes the request headers and provides the request body, if it exists, as a Stream of data. If the body is unread, it is drained when the server writes to the HttpResponse or closes it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8666fce9a9853fa82e4ffba82597998d6d5b1a48" translate="yes" xml:space="preserve">
          <source>The HttpResponse object has a number of properties for setting up the HTTP headers of the response. When writing string data through the IOSink, the encoding used is determined from the &quot;charset&quot; parameter of the &quot;Content-Type&quot; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a488e9819aaf11022cb1a74662bc7f82144b5a3" translate="yes" xml:space="preserve">
          <source>The HttpServer is a &lt;a href=&quot;../dart-async/stream-class&quot;&gt;Stream&lt;/a&gt; that provides &lt;a href=&quot;httprequest-class&quot;&gt;HttpRequest&lt;/a&gt; objects. Each HttpRequest has an associated &lt;a href=&quot;httpresponse-class&quot;&gt;HttpResponse&lt;/a&gt; object. The server responds to a request by writing to that HttpResponse object. The following example shows how to bind an HttpServer to an IPv6 &lt;a href=&quot;internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt; on port 80 (the standard port for HTTP servers) and how to listen for requests. Port 80 is the default HTTP port. However, on most systems accessing this requires super-user privileges. For local testing consider using a non-reserved port (1024 and above).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd30d8f95337990618e633dc93b08390b4e1f97" translate="yes" xml:space="preserve">
          <source>The JSON encoder handles numbers, strings, booleans, null, lists and maps directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52aa35d3bc8c6703fdd6c76f77bd351ef2b499d" translate="yes" xml:space="preserve">
          <source>The JSON encoder handles numbers, strings, booleans, null, lists and maps with string keys directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b6bf7c430651a2752cddaafb9ea7af1bc0401f" translate="yes" xml:space="preserve">
          <source>The MIME type of the data URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63fd38851189c969ec65f2636c6d20c52064b4a" translate="yes" xml:space="preserve">
          <source>The MIME type of the data URI. &lt;a href=&quot;uridata/mimetype&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebdeef9f19f1297c0d14f5868044842269ab387" translate="yes" xml:space="preserve">
          <source>The PEM encoded String of the certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769c26442cdbc9ac1573124028bb78886ab42704" translate="yes" xml:space="preserve">
          <source>The PI constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd35aee76b00eafd2a49a8f697a9991b8db1730e" translate="yes" xml:space="preserve">
          <source>The RawSecureServerSocket is a server socket, providing a stream of low-level &lt;a href=&quot;rawsecuresocket-class&quot;&gt;RawSecureSocket&lt;/a&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198858a60a463fbf430917ca6522adc5d245c647" translate="yes" xml:space="preserve">
          <source>The RawSecureServerSocket is a server socket, providing a stream of low-level &lt;a href=&quot;rawsecuresocket-class&quot;&gt;RawSecureSocket&lt;/a&gt;s. &lt;a href=&quot;rawsecureserversocket-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1bd5d1c5aff5741191297509d0ce895859569b" translate="yes" xml:space="preserve">
          <source>The SHA1 hash of the certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d28499b1eb32dbbc725fa120b15eaffed2edf9" translate="yes" xml:space="preserve">
          <source>The String and StringBuffer classes implement string concatenation, interpolation, and other string manipulation features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db7eb45de34a3994c48a0f1b7d1d5f2c57353336" translate="yes" xml:space="preserve">
          <source>The String class can not be extended or implemented. Attempting to do so yields a compile-time error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ce0deafcc9112c96f0f59c78e694e05d366103" translate="yes" xml:space="preserve">
          <source>The URI for the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b06841c5f157c144683367693bd174d61cbab2e" translate="yes" xml:space="preserve">
          <source>The URI for the request. &lt;a href=&quot;httprequest/uri&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189f35682b23d3d095f86af09699e4b15af9826e" translate="yes" xml:space="preserve">
          <source>The URI in &lt;code&gt;location&lt;/code&gt; should be absolute, but there are no checks to enforce that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7d5f44b0a9736b07c8d4ddad4e7a02991e5698" translate="yes" xml:space="preserve">
          <source>The URL to use is specified in &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9c254e9956912a4987fea0527effc1e1cac536" translate="yes" xml:space="preserve">
          <source>The Unicode Byte Order Marker (BOM) character &lt;code&gt;U+FEFF&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa7c8e808bee853115519593460f011f10321b0" translate="yes" xml:space="preserve">
          <source>The Unicode Replacement character &lt;code&gt;U+FFFD&lt;/code&gt; (�).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a71aefdfa2143d18ebc9cc265e6e11ca4c5ac3" translate="yes" xml:space="preserve">
          <source>The Uri to access the service. If the web server is not running, this will be null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1075a4fcd5ae6fda997aaec4b3f8b3dd1f10b513" translate="yes" xml:space="preserve">
          <source>The UriPolicy can be used to restrict the locations the images may be loaded from. By default this will use the default &lt;a href=&quot;../uripolicy-class&quot;&gt;UriPolicy&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660110c40bf28bad76c32ab7c9a748c20582e572" translate="yes" xml:space="preserve">
          <source>The UriPolicy can be used to restrict the locations the navigation elements are allowed to direct to. By default this will use the default &lt;a href=&quot;../uripolicy-class&quot;&gt;UriPolicy&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26742b412261dd2b12a860d45ebf1ffb6bcc19d" translate="yes" xml:space="preserve">
          <source>The absolute URI of the script being run in this isolate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f39e61a5ce4f1389539c96766c8f9b13d53143a" translate="yes" xml:space="preserve">
          <source>The absolute URI of the script being run in this isolate. &lt;a href=&quot;platform/script&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d837f47b46472475cafc349d5f09c6089a85e0c1" translate="yes" xml:space="preserve">
          <source>The absolute path is computed by prefixing a relative path with the current working directory, and returning an absolute path unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01e917d3fd5c4bff72b2d3e74498e33370ddfc3" translate="yes" xml:space="preserve">
          <source>The absolute uri of the library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fac2b5770f05383fd755b5116799ef4afd082fe" translate="yes" xml:space="preserve">
          <source>The accepted inputs are currently:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc216e66749ff7b61b99ad66ac32ee32c7d59f62" translate="yes" xml:space="preserve">
          <source>The actual error object and stackTraces will not necessarily be the same object types as in the actual isolate, but they will always have the same &lt;a href=&quot;../../dart-core/object/tostring&quot;&gt;Object.toString&lt;/a&gt; result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d3940281f638d0259e28544164989fe0734fe68" translate="yes" xml:space="preserve">
          <source>The actual escape sequence support may differ between terminals, with some terminals supporting more escape sequences than others, and some terminals even differing in behavior for the same escape sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3fafc3a3965234caee54dd20ec7c8033d19915" translate="yes" xml:space="preserve">
          <source>The actual source input which caused the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8372eb8dd84a3965cae64f3b887eb5d81a337650" translate="yes" xml:space="preserve">
          <source>The actual source input which caused the error. &lt;a href=&quot;formatexception/source&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5545f8a5c0c2407e39a327c6354d0ebdfc7e930c" translate="yes" xml:space="preserve">
          <source>The algorithm &quot;Transform Reference&quot; for resolving a reference is described in &lt;a href=&quot;http://tools.ietf.org/html/rfc3986#section-5&quot;&gt;RFC-3986 Section 5&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28dd061c169dea193d0c98ab81f1215260a127e" translate="yes" xml:space="preserve">
          <source>The allowed characters in a &lt;code&gt;token&lt;/code&gt; are the visible ASCII characters, U+0021 (&lt;code&gt;!&lt;/code&gt;) through U+007E (&lt;code&gt;~&lt;/code&gt;), except the separator characters: &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;:&lt;/code&gt;, &lt;code&gt;\&lt;/code&gt;, &lt;code&gt;&quot;&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;]&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;{&lt;/code&gt;, and &lt;code&gt;}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55a2137201c11958a24e65a5ebb25a273f551ec" translate="yes" xml:space="preserve">
          <source>The allowed characters in a cookie value are the visible ASCII characters, U+0021 (&lt;code&gt;!&lt;/code&gt;) through U+007E (&lt;code&gt;~&lt;/code&gt;) except the characters: &lt;code&gt;&quot;&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt; and &lt;code&gt;\&lt;/code&gt;. Cookie values may be wrapped in a single pair of double quotes (U+0022, &lt;code&gt;&quot;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d80e899b266fe3f2b02797315b841c8a89646f5" translate="yes" xml:space="preserve">
          <source>The allowed range is from &lt;code&gt;minValue&lt;/code&gt; to &lt;code&gt;maxValue&lt;/code&gt;, inclusive. If &lt;code&gt;minValue&lt;/code&gt; or &lt;code&gt;maxValue&lt;/code&gt; are &lt;code&gt;null&lt;/code&gt;, the range is infinite in that direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11002434031f55e11813b50d6f5839864a8e2d57" translate="yes" xml:space="preserve">
          <source>The amount that is expected to scroll horizontally, in units determined by &lt;a href=&quot;deltamode&quot;&gt;deltaMode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71438f32cc039da5e1de7032b6a86f06e748357" translate="yes" xml:space="preserve">
          <source>The amount that is expected to scroll horizontally, in units determined by &lt;a href=&quot;wheelevent/deltamode&quot;&gt;deltaMode&lt;/a&gt;. &lt;a href=&quot;wheelevent/deltax&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b81fd3535d4e801e8c0c2065621e3148db92354" translate="yes" xml:space="preserve">
          <source>The amount that is expected to scroll vertically, in units determined by &lt;a href=&quot;deltamode&quot;&gt;deltaMode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9842807148f7a885e5622709c057b838f230c0b" translate="yes" xml:space="preserve">
          <source>The amount that is expected to scroll vertically, in units determined by &lt;a href=&quot;wheelevent/deltamode&quot;&gt;deltaMode&lt;/a&gt;. &lt;a href=&quot;wheelevent/deltay&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185c64c72b71f23f05644b90a211b105755715b1" translate="yes" xml:space="preserve">
          <source>The annotation &lt;a href=&quot;deprecated-constant&quot;&gt;deprecated&lt;/a&gt; is a shorthand for deprecating until an unspecified &quot;next release&quot; without migration instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2da33634fe7b246e5bfd4b9bbb512bd684848a" translate="yes" xml:space="preserve">
          <source>The annotation &lt;code&gt;@Deprecated('migration')&lt;/code&gt; marks a feature as deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7db2e6b8a22e4d4989adfed2ac83ecde2003dcb" translate="yes" xml:space="preserve">
          <source>The annotation &lt;code&gt;@Deprecated('migration')&lt;/code&gt; marks a feature as deprecated. &lt;a href=&quot;deprecated-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecff042753fc2466211be07e91b706e64e8fa469" translate="yes" xml:space="preserve">
          <source>The annotation &lt;code&gt;@override&lt;/code&gt; marks an instance member as overriding a superclass member with the same name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae95a559fcd1174fca857eb241e7a4f3a785b94" translate="yes" xml:space="preserve">
          <source>The annotation &lt;code&gt;@override&lt;/code&gt; marks an instance member as overriding a superclass member with the same name. &lt;a href=&quot;override-constant&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c23999f665848c206494fc4efaecac2133fde4" translate="yes" xml:space="preserve">
          <source>The annotation &lt;code&gt;@proxy&lt;/code&gt; marks a class as implementing members dynamically through &lt;code&gt;noSuchMethod&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d909db89e96df00a7a3b90332a56caa376200977" translate="yes" xml:space="preserve">
          <source>The annotation applies to any class. It is inherited by subclasses from both superclass and interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2853d8149bf250b5f95b3da3b68f275a14d2425c" translate="yes" xml:space="preserve">
          <source>The annotation applies to instance methods, getters and setters, and to instance fields, where it means that the implicit getter and setter of the field is marked as overriding, but the field itself is not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461538ba24029019ec770c38b925ad4ae8804a48" translate="yes" xml:space="preserve">
          <source>The annotation does not change which classes the annotated class implements, and does not prevent static warnings for assigning an object to a variable with a static type not implemented by the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226e50000bc454ee03b3e8e15e17bdfc9d6d6106" translate="yes" xml:space="preserve">
          <source>The application cache for this window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5623708609fa5d08c236605b10e4efe2e71c176b" translate="yes" xml:space="preserve">
          <source>The application cache for this window. &lt;a href=&quot;window/applicationcache&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e6f9e557d3eaaf7934dfdf11431747d40c2770" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;entryPoint&lt;/code&gt; specifies the initial function to call in the spawned isolate. The entry-point function is invoked in the new isolate with &lt;code&gt;message&lt;/code&gt; as the only argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c234f2531b784f5a3385c392737020a5f35e3aa" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;sink&lt;/code&gt; will receive byte lists in sizes depending on the &lt;code&gt;bufferSize&lt;/code&gt; passed to the constructor when creating this encoder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c074eaeb169d369e3a2825412a25cdb26c1406e9" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;sourceAddress&lt;/code&gt; can be used to specify the local address to bind when making the connection. &lt;code&gt;sourceAddress&lt;/code&gt; can either be a &lt;code&gt;String&lt;/code&gt; or an &lt;code&gt;InternetAddress&lt;/code&gt;. If a &lt;code&gt;String&lt;/code&gt; is passed it must hold a numeric IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3c213d8ae926da2f1990d9c6ef079878c32730" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;timeout&lt;/code&gt; is used to specify the maximum allowed time to wait for a connection to be established. If &lt;code&gt;timeout&lt;/code&gt; is longer than the system level timeout duration, a timeout may occur sooner than specified in &lt;code&gt;timeout&lt;/code&gt;. On timeout, a &lt;a href=&quot;../socketexception-class&quot;&gt;SocketException&lt;/a&gt; is thrown and all ongoing connection attempts to &lt;code&gt;host&lt;/code&gt; are cancelled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92001e413ba8ed92a32d9cd578e44f28cd4f921d" translate="yes" xml:space="preserve">
          <source>The arguments &lt;code&gt;lowerLimit&lt;/code&gt; and &lt;code&gt;upperLimit&lt;/code&gt; must form a valid range where &lt;code&gt;lowerLimit.compareTo(upperLimit) &amp;lt;= 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee981589578636a13111cee9f2ca934724b3f4db" translate="yes" xml:space="preserve">
          <source>The arguments are the same as for &lt;code&gt;Process.run&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fafb979853e5deb596b59d7e0643be24638d8ac7" translate="yes" xml:space="preserve">
          <source>The attributeName parameter will always be in lowercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c3507f33a661a66f4317911ce204db3f610323" translate="yes" xml:space="preserve">
          <source>The authority is formatted from the &lt;a href=&quot;userinfo&quot;&gt;userInfo&lt;/a&gt;, &lt;a href=&quot;host&quot;&gt;host&lt;/a&gt; and &lt;a href=&quot;port&quot;&gt;port&lt;/a&gt; parts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeea19dc1c368a0f54fdb8df2ea1172882e5589b" translate="yes" xml:space="preserve">
          <source>The base class for all Dart objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1064c05c5eefa87b47491d73fe87dc1865123b1f" translate="yes" xml:space="preserve">
          <source>The base class for all Dart objects. &lt;a href=&quot;object-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87b9b12767b0e28078f837dde6919033344f54f1" translate="yes" xml:space="preserve">
          <source>The base class for all documents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc6fbc2e7458581448e5b8f82d3706f3e6c91ad" translate="yes" xml:space="preserve">
          <source>The base class for all documents. &lt;a href=&quot;document-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a7f982c8247a1e0e9f8373705957de3b9548a7" translate="yes" xml:space="preserve">
          <source>The base class for all function types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da407361cffad59aab2fa9f8ec849295bc244c73" translate="yes" xml:space="preserve">
          <source>The base class for all function types. &lt;a href=&quot;function-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab0d5e37c117b94ae8a62562fc246f421a7420b" translate="yes" xml:space="preserve">
          <source>The basic &lt;code&gt;ChunkedConversionSink&lt;/code&gt; is just a &lt;a href=&quot;../dart-core/sink-class&quot;&gt;Sink&lt;/a&gt;, and converters should work with a plain &lt;code&gt;Sink&lt;/code&gt;, but may work more efficiently with certain specialized types of &lt;code&gt;ChunkedConversionSink&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8135564dae04f4af7b6ac9c902f7898506859ba" translate="yes" xml:space="preserve">
          <source>The bit-wise and operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ff7fcddebb203b5c715ecb3e60e77c3a6b4d00" translate="yes" xml:space="preserve">
          <source>The bit-wise negate operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b703d5f7c5c41e3adf4817a96354986523bd22" translate="yes" xml:space="preserve">
          <source>The bit-wise negate operator. &lt;a href=&quot;bigint/operator_bitwise_negate&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548ff0dc82357b8916ca321041f30768f163db13" translate="yes" xml:space="preserve">
          <source>The bit-wise negate operator. &lt;a href=&quot;int/operator_bitwise_negate&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fbbc08cb7db2f3a3c7a7013df1ad47f6e33dcbd" translate="yes" xml:space="preserve">
          <source>The bit-wise or operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77a7dcfc3e186d04f168c323eb60cd081ed0a4b" translate="yes" xml:space="preserve">
          <source>The bit-wise xor operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed0daf9d394a72c9d81d5a21ab363820f015875" translate="yes" xml:space="preserve">
          <source>The body of a &lt;a href=&quot;httpclientresponse-class&quot;&gt;HttpClientResponse&lt;/a&gt; object is a &lt;a href=&quot;../dart-async/stream-class&quot;&gt;Stream&lt;/a&gt; of data from the server. Listen to the body to handle the data and be notified when the entire body is received.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd5a08159084acf6d240f1badfdb9688e2bf172" translate="yes" xml:space="preserve">
          <source>The body of an HTTP response can be compressed. In most situations providing the un-compressed body is most convenient. Therefore the default behavior is to un-compress the body. However in some situations (e.g. implementing a transparent proxy) keeping the uncompressed stream is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652b29f56b02f5d8e658cb66b37d742a62f9b299" translate="yes" xml:space="preserve">
          <source>The body of the HTTP response contains compressed bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="363019aa502d81960225dee7fe067d0df9bd369f" translate="yes" xml:space="preserve">
          <source>The body of the HTTP response was originally compressed, but by virtue of the &lt;a href=&quot;httpclient/autouncompress&quot;&gt;HttpClient.autoUncompress&lt;/a&gt; configuration option, it has been automatically uncompressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c452402fae7f2a80c451c580fe9d65bd6921177c" translate="yes" xml:space="preserve">
          <source>The body of the HTTP response was received and remains in an uncompressed state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2957fdca2eb1a8fd4228ff35debc217b373d295e" translate="yes" xml:space="preserve">
          <source>The boolean value of the declaration is &lt;code&gt;true&lt;/code&gt; if the declared value is the string &lt;code&gt;&quot;true&quot;&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt; if the value is &lt;code&gt;&quot;false&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="205a7f97e824111ee72603123037f11044fd0f07" translate="yes" xml:space="preserve">
          <source>The call to &lt;code&gt;cleanUp&lt;/code&gt; should not throw. If it does, the error will be an uncaught asynchronous error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0f42aa1c58b86bc7100f93e793439b14718047" translate="yes" xml:space="preserve">
          <source>The callback may return either &lt;code&gt;void&lt;/code&gt; or a future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6477dc292af7528109e0575b0c34c65ffd4e8c75" translate="yes" xml:space="preserve">
          <source>The callback which is called when the stream is canceled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="820c1b2e5a1c2c74f80eca66d7ee9b2a1965c907" translate="yes" xml:space="preserve">
          <source>The callback which is called when the stream is canceled. &lt;a href=&quot;streamcontroller/oncancel&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3907ddb41608810f7143091bd845752fc84cbe9d" translate="yes" xml:space="preserve">
          <source>The callback which is called when the stream is listened to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2167542b8d6b7b32ea56513447e85ebce18ed33" translate="yes" xml:space="preserve">
          <source>The callback which is called when the stream is listened to. &lt;a href=&quot;streamcontroller/onlisten&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3845d80b0e25af2effe47004ce4c47171ec4ef98" translate="yes" xml:space="preserve">
          <source>The callback which is called when the stream is paused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361138b38610c763ee1118f6cc64e833dc19c9b4" translate="yes" xml:space="preserve">
          <source>The callback which is called when the stream is paused. &lt;a href=&quot;streamcontroller/onpause&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6132e61a03273fbe60a81b16df18f68f3e6b254c" translate="yes" xml:space="preserve">
          <source>The callback which is called when the stream is resumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f717c0d35459f5a51636692f9052274c7f91b9" translate="yes" xml:space="preserve">
          <source>The callback which is called when the stream is resumed. &lt;a href=&quot;streamcontroller/onresume&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac80fbfa9f1dd3b0570f4ef52da534459af9693f" translate="yes" xml:space="preserve">
          <source>The capabilities should be the subset of the capabilities that are available to the original isolate. Capabilities of an isolate are locked to that isolate, and have no effect anywhere else, so the capabilities should come from the same isolate as the control port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bba76c8051641925aaedd8dec0302e127d793c7" translate="yes" xml:space="preserve">
          <source>The certificate provided by the server is checked using the trusted certificates set in the SecurityContext object If a certificate and key are set on the client, using &lt;a href=&quot;../securitycontext/usecertificatechain&quot;&gt;SecurityContext.useCertificateChain&lt;/a&gt; and &lt;a href=&quot;../securitycontext/useprivatekey&quot;&gt;SecurityContext.usePrivateKey&lt;/a&gt;, and the server asks for a client certificate, then that client certificate is sent to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99c6f4a2b38200d43ebfa43396f0a0eaf3a64af" translate="yes" xml:space="preserve">
          <source>The certificate provided by the server is checked using the trusted certificates set in the SecurityContext object. The default SecurityContext object contains a built-in set of trusted root certificates for well-known certificate authorities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="551c8518a741d80012de66292f1d29903a115794" translate="yes" xml:space="preserve">
          <source>The certificates and keys are PEM files, which can be created and managed with the tools in OpenSSL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1d981bb7ad41f8ca083cd688e02699ef4f37ac" translate="yes" xml:space="preserve">
          <source>The characters of a string are encoded in UTF-16. Decoding UTF-16, which combines surrogate pairs, yields Unicode code points. Following a similar terminology to Go, we use the name 'rune' for an integer representing a Unicode code point. Use the &lt;a href=&quot;string/runes&quot;&gt;runes&lt;/a&gt; property to get the runes of a string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f9924dbb90dfaf93993e50cdcd99f9b7edc47b" translate="yes" xml:space="preserve">
          <source>The characters that have special meaning in regular expressions are: &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;]&lt;/code&gt;, &lt;code&gt;{&lt;/code&gt;, &lt;code&gt;}&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;, &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt; and &lt;code&gt;\&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3341150cabb344b8ef01597e10b0acf982a848eb" translate="yes" xml:space="preserve">
          <source>The characters that need escaping in HTML are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d59e3fe3a7f3c46504a737b42d516bc69b9369" translate="yes" xml:space="preserve">
          <source>The charset parameter of the media type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a54a2bfe4b614054dee7684e751bb6c04cf5a70" translate="yes" xml:space="preserve">
          <source>The charset parameter of the media type. &lt;a href=&quot;uridata/charset&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a309c623e4fc88cae1349b278270621caba6d1a" translate="yes" xml:space="preserve">
          <source>The class being registered must either subclass HtmlElement or SvgElement. If they subclass these directly then they can be used as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9fd119eae7817305b859b3c40a51ec1b2544dd5" translate="yes" xml:space="preserve">
          <source>The classes &lt;a href=&quot;httpserver-class&quot;&gt;HttpServer&lt;/a&gt; and &lt;a href=&quot;httpclient-class&quot;&gt;HttpClient&lt;/a&gt; provide HTTP server and HTTP client functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2769b87515be4ef1c98f3680289ec1387b1402" translate="yes" xml:space="preserve">
          <source>The classes in this library provide an interface to the browser's IndexedDB, if it has one. To use this library in your code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ebcb91f6f503cc7cf10f50bf96d8988b5dfd57" translate="yes" xml:space="preserve">
          <source>The client certificate of the client making the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1410c06bf7d8feec770969f83c6b4b6ff6d98fef" translate="yes" xml:space="preserve">
          <source>The client certificate of the client making the request. &lt;a href=&quot;httprequest/certificate&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047a2b7de113599077bb875024bca25d1c95da20" translate="yes" xml:space="preserve">
          <source>The client connects to the WebSocket using the &lt;code&gt;connect()&lt;/code&gt; method and a URI that uses the Web Socket protocol. The client can write to the WebSocket with the &lt;code&gt;add()&lt;/code&gt; method. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29bbbc5c70b62c9d6b06074c83484e399b40a08" translate="yes" xml:space="preserve">
          <source>The client request headers can be modified until the client request body is written to or closed. After that they become immutable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5146b0505198e8e6d04b2017a4ae0dc1bb7456e3" translate="yes" xml:space="preserve">
          <source>The client response headers are immutable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995ce22e777d317a297fa33a92208e1454208b31" translate="yes" xml:space="preserve">
          <source>The close code set when the WebSocket connection is closed. If there is no close code available this property will be &lt;code&gt;null&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad60a9fda569b537147e14771534e277a7fb025f" translate="yes" xml:space="preserve">
          <source>The close reason set when the WebSocket connection is closed. If there is no close reason available this property will be &lt;code&gt;null&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a266585b7c55ef456c8f4bdaac0bb27b9654659" translate="yes" xml:space="preserve">
          <source>The comment text as written in the source text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f39fa08e02de384a10a89e3e661d6e3eb881fa" translate="yes" xml:space="preserve">
          <source>The comment text without the start, end, and padding text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c1bde7274cd76fa8e095e3aa8d7519d16b39cf" translate="yes" xml:space="preserve">
          <source>The comment text without the start, end, and padding text. &lt;a href=&quot;comment/trimmedtext&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5737024aee8056e5b8d67deb24ccc385382344ad" translate="yes" xml:space="preserve">
          <source>The common super class for &lt;a href=&quot;file-class&quot;&gt;File&lt;/a&gt;, &lt;a href=&quot;directory-class&quot;&gt;Directory&lt;/a&gt;, and &lt;a href=&quot;link-class&quot;&gt;Link&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91fe99dd974cd3b7bd69f72957e45d4efcb03c66" translate="yes" xml:space="preserve">
          <source>The common super class for &lt;a href=&quot;file-class&quot;&gt;File&lt;/a&gt;, &lt;a href=&quot;directory-class&quot;&gt;Directory&lt;/a&gt;, and &lt;a href=&quot;link-class&quot;&gt;Link&lt;/a&gt; objects. &lt;a href=&quot;filesystementity-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c587a9e19814d4d1376a33d09a25cb58b023be9" translate="yes" xml:space="preserve">
          <source>The comparison is done using &lt;a href=&quot;compareto&quot;&gt;compareTo&lt;/a&gt; and therefore takes &lt;code&gt;-0.0&lt;/code&gt; into account. This also implies that &lt;a href=&quot;../double/nan-constant&quot;&gt;double.nan&lt;/a&gt; is treated as the maximal double value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0d46749879f9d97cca737e32e27b7dc612276d" translate="yes" xml:space="preserve">
          <source>The comparison is independent of whether the time is in UTC or in the local time zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6ff4e8917efe6d68bda2bdb9e5561e81ba3359" translate="yes" xml:space="preserve">
          <source>The completer completes the future asynchronously. That means that callbacks registered on the future are not called immediately when &lt;a href=&quot;complete&quot;&gt;complete&lt;/a&gt; or &lt;a href=&quot;completeerror&quot;&gt;completeError&lt;/a&gt; is called. Instead the callbacks are delayed until a later microtask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5509bbf392f366e0b30d556ee9bb48eeefd3887e" translate="yes" xml:space="preserve">
          <source>The component is first encoded to bytes using &lt;code&gt;encoding&lt;/code&gt;. The default is to use &lt;a href=&quot;../../dart-convert/utf8-constant&quot;&gt;utf8&lt;/a&gt; encoding, which preserves all the characters that don't need encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24472a6bbddad0ac6e38042f90f048448a1c0e3d" translate="yes" xml:space="preserve">
          <source>The compression state of the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0398caa2732ebe5cd9b20a471cdcd3961ab4265c" translate="yes" xml:space="preserve">
          <source>The compression state of the response. &lt;a href=&quot;httpclientresponse/compressionstate&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2d77f5b5d7c57c2dc57ef145395f0184b959ae" translate="yes" xml:space="preserve">
          <source>The compression-&lt;a href=&quot;gzipcodec/level&quot;&gt;level&lt;/a&gt; can be set in the range of &lt;code&gt;-1..9&lt;/code&gt;, with &lt;code&gt;6&lt;/code&gt; being the default compression level. Levels above &lt;code&gt;6&lt;/code&gt; will have higher compression rates at the cost of more CPU and memory usage. Levels below &lt;code&gt;6&lt;/code&gt; will use less CPU and memory at the cost of lower compression rates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791c5ac04ed179effb6d07ea3b74fc593e0cff00" translate="yes" xml:space="preserve">
          <source>The compression-&lt;a href=&quot;level&quot;&gt;level&lt;/a&gt; can be set in the range of &lt;code&gt;-1..9&lt;/code&gt;, with &lt;code&gt;6&lt;/code&gt; being the default compression level. Levels above &lt;code&gt;6&lt;/code&gt; will have higher compression rates at the cost of more CPU and memory usage. Levels below &lt;code&gt;6&lt;/code&gt; will use less CPU and memory at the cost of lower compression rates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659ac17c3ddd73e8417c139fb780ed458a3edee3" translate="yes" xml:space="preserve">
          <source>The compression-&lt;a href=&quot;zlibcodec/level&quot;&gt;level&lt;/a&gt; can be set in the range of &lt;code&gt;-1..9&lt;/code&gt;, with &lt;code&gt;6&lt;/code&gt; being the default compression level. Levels above &lt;code&gt;6&lt;/code&gt; will have higher compression rates at the cost of more CPU and memory usage. Levels below &lt;code&gt;6&lt;/code&gt; will use less CPU and memory at the cost of lower compression rates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbbda938f5742ff116861d2213ca71f5e9d365b4" translate="yes" xml:space="preserve">
          <source>The compression-&lt;a href=&quot;zlibencoder/level&quot;&gt;level&lt;/a&gt; can be set in the range of &lt;code&gt;-1..9&lt;/code&gt;, with &lt;code&gt;6&lt;/code&gt; being the default compression level. Levels above &lt;code&gt;6&lt;/code&gt; will have higher compression rates at the cost of more CPU and memory usage. Levels below &lt;code&gt;6&lt;/code&gt; will use less CPU and memory at the cost of lower compression rates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109760a349c051318fd4d569702ba5132929506b" translate="yes" xml:space="preserve">
          <source>The computedStyle contains values that are inherited from other sources, such as parent elements or stylesheets. This differs from the &lt;a href=&quot;style&quot;&gt;style&lt;/a&gt; property, which contains only the values specified directly on this element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb89fa4444e3c7308635a865368c6014921d5a20" translate="yes" xml:space="preserve">
          <source>The constructed &lt;a href=&quot;../datetime-class&quot;&gt;DateTime&lt;/a&gt; represents 1970-01-01T00:00:00Z + &lt;code&gt;microsecondsSinceEpoch&lt;/code&gt; us in the given time zone (local or UTC).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4366fccd9ba9a8b177204d31ce637c13395add" translate="yes" xml:space="preserve">
          <source>The constructed &lt;a href=&quot;../datetime-class&quot;&gt;DateTime&lt;/a&gt; represents 1970-01-01T00:00:00Z + &lt;code&gt;millisecondsSinceEpoch&lt;/code&gt; ms in the given time zone (local or UTC).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340df2f562f78fb93f8e1aee2474bdd65416376a" translate="yes" xml:space="preserve">
          <source>The constructor name for named constructors and factory methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7bf3fd75979caa2e7069ab9758590b30437a9e3" translate="yes" xml:space="preserve">
          <source>The constructor name for named constructors and factory methods. &lt;a href=&quot;methodmirror/constructorname&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce01126bdf233a1fc14a1b2a3199c5b40bb84a03" translate="yes" xml:space="preserve">
          <source>The consumer may stop listening to the stream after an error, it may consume all the errors and only stop at a done event, or it may be canceled early if the receiver don't want any further events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06848e70d49a4679cd709bd496f78f2ad567d67e" translate="yes" xml:space="preserve">
          <source>The content can only be compressed when the response is using chunked Transfer-Encoding and the incoming request has &lt;code&gt;gzip&lt;/code&gt; as an accepted encoding in the Accept-Encoding header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126fec41ca6dd042fd9ea033c4b553ea23b210df" translate="yes" xml:space="preserve">
          <source>The content length of the request body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="455dba8298e7bc49884942720af01f4b43581efd" translate="yes" xml:space="preserve">
          <source>The content length of the request body. &lt;a href=&quot;httprequest/contentlength&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59931dff9fe54d57aa8db273a99853ae3ca20762" translate="yes" xml:space="preserve">
          <source>The content of &lt;code&gt;message&lt;/code&gt; can be: primitive values (null, num, bool, double, String), instances of &lt;a href=&quot;../sendport-class&quot;&gt;SendPort&lt;/a&gt;, and lists and maps whose elements are any of these. List and maps are also allowed to be cyclic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1733dd129ead2b810c0764c603644c83ec7e82f" translate="yes" xml:space="preserve">
          <source>The content part of the data URI as bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13dcdb0c96025c7c75da668ef8d6746b278826bc" translate="yes" xml:space="preserve">
          <source>The content part of the data URI as bytes. &lt;a href=&quot;uridata/contentasbytes&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f13bb1108dc2d8b9355d5678a8d663fbebc82a" translate="yes" xml:space="preserve">
          <source>The content part of the data URI, as its actual representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1b689a20234293abebcffacf24e3d11f3a8219" translate="yes" xml:space="preserve">
          <source>The content part of the data URI, as its actual representation. &lt;a href=&quot;uridata/contenttext&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72adde121cb9492a5270c62fd83f865973c53a00" translate="yes" xml:space="preserve">
          <source>The control port identifies the isolate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbcbaab1e0121c348316954cbefae0c4b9ee93d2" translate="yes" xml:space="preserve">
          <source>The controller becomes closed by calling the &lt;a href=&quot;close&quot;&gt;close&lt;/a&gt; method. New events cannot be added, by calling &lt;a href=&quot;add&quot;&gt;add&lt;/a&gt; or &lt;a href=&quot;adderror&quot;&gt;addError&lt;/a&gt;, to a closed controller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0cdf6cd5cd60bb10d977d99313638b0d9eae72" translate="yes" xml:space="preserve">
          <source>The controller buffers all incoming events until a subscriber is registered, but this feature should only be used in rare circumstances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15788b3a853717f916872d8453e8b98b767ccc3b" translate="yes" xml:space="preserve">
          <source>The controller distributes any events to all currently subscribed listeners at the time when &lt;a href=&quot;add&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;adderror&quot;&gt;addError&lt;/a&gt; or &lt;a href=&quot;close&quot;&gt;close&lt;/a&gt; is called. It is not allowed to call &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;addError&lt;/code&gt;, or &lt;code&gt;close&lt;/code&gt; before a previous call has returned. The controller does not have any internal queue of events, and if there are no listeners at the time the event is added, it will just be dropped, or, if it is an error, be reported as uncaught.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92bcc896b572c5a2d8e6842ca0160dd4cac64121" translate="yes" xml:space="preserve">
          <source>The conversion is guaranteed to not throw, so it won't use the object's toString method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51dd49de86509e973528b888cc10a860381e820e" translate="yes" xml:space="preserve">
          <source>The conversion may omit calling &lt;code&gt;toString&lt;/code&gt; on some elements if they are known to not occur in the output, and it may stop iterating after a hundred elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11a475af701a66f331575985a7360c70e295033" translate="yes" xml:space="preserve">
          <source>The converter finds characters that are significant in HTML source and replaces them with corresponding HTML entities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c861720ea93b4e1c391126121a57aa47f3ef99c" translate="yes" xml:space="preserve">
          <source>The converter works more efficiently if the given &lt;code&gt;sink&lt;/code&gt; is a &lt;a href=&quot;../byteconversionsink-class&quot;&gt;ByteConversionSink&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa011e8d9da690eb1dbf7823a19b884e027fbf5" translate="yes" xml:space="preserve">
          <source>The converter works more efficiently if the given &lt;code&gt;sink&lt;/code&gt; is a &lt;a href=&quot;../stringconversionsink-class&quot;&gt;StringConversionSink&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0340ebaf47cb99d4696826adc5c199a3b1b754" translate="yes" xml:space="preserve">
          <source>The cookies in the request, from the Cookie headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87cb0851db04ecbe82a850bfe247801358e7b4ed" translate="yes" xml:space="preserve">
          <source>The coordinates of the mouse pointer in target node coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9fcc882d60d63a79fa857ff2fe6099a9c49a17" translate="yes" xml:space="preserve">
          <source>The coordinates of the mouse pointer in target node coordinates. &lt;a href=&quot;mouseevent/offset&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ba459e2b29b13a93263904a8aef8ca8d763c24" translate="yes" xml:space="preserve">
          <source>The countdown doesn't start until the returned stream is listened to. The countdown is reset every time an event is forwarded from this stream, or when this stream is paused and resumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a3988a3c41dccc52f2aa8c72f6e78ff34b0cd2" translate="yes" xml:space="preserve">
          <source>The created &lt;a href=&quot;../set-class&quot;&gt;Set&lt;/a&gt; is a &lt;a href=&quot;../../dart-collection/linkedhashset-class&quot;&gt;LinkedHashSet&lt;/a&gt; that uses identity as equality relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b487b34b74236272c15c67939e01768600ec193c" translate="yes" xml:space="preserve">
          <source>The created &lt;a href=&quot;../set-class&quot;&gt;Set&lt;/a&gt; is a &lt;a href=&quot;../../dart-collection/linkedhashset-class&quot;&gt;LinkedHashSet&lt;/a&gt;. As such, it considers elements that are equal (using &lt;a href=&quot;../object/operator_equals&quot;&gt;operator ==&lt;/a&gt;) to be indistinguishable, and requires them to have a compatible &lt;a href=&quot;../object/hashcode&quot;&gt;Object.hashCode&lt;/a&gt; implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c034347f495c8b3490e4d965f699e8c9e817e7" translate="yes" xml:space="preserve">
          <source>The created &lt;a href=&quot;../set-class&quot;&gt;Set&lt;/a&gt; is a plain &lt;a href=&quot;../../dart-collection/linkedhashset-class&quot;&gt;LinkedHashSet&lt;/a&gt;. As such, it considers elements that are equal (using &lt;a href=&quot;../object/operator_equals&quot;&gt;operator ==&lt;/a&gt;) to be indistinguishable, and requires them to have a compatible &lt;a href=&quot;../object/hashcode&quot;&gt;Object.hashCode&lt;/a&gt; implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abde7c0d54fb54ebd5cf510996689bb501fbcb83" translate="yes" xml:space="preserve">
          <source>The created future will be completed with an error in a future microtask. This allows enough time for someone to add an error handler on the future. If an error handler isn't added before the future completes, the error will be considered unhandled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea085c557d506664de60f29bad0d0a2bd77caa9" translate="yes" xml:space="preserve">
          <source>The created instance overrides &lt;a href=&quot;operator_equals&quot;&gt;Object.==&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28347424838316da2295bae5a7a795dccaac12e8" translate="yes" xml:space="preserve">
          <source>The created list is fixed-length if &lt;code&gt;growable&lt;/code&gt; is false (the default) and growable if &lt;code&gt;growable&lt;/code&gt; is true. If the list is growable, changing its length will not initialize new entries with &lt;code&gt;fill&lt;/code&gt;. After being created and filled, the list is no different from any other growable or fixed-length list created using &lt;a href=&quot;../list-class&quot;&gt;List&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2972a3fca45f19280f71990e31555dcc2bb43fa5" translate="yes" xml:space="preserve">
          <source>The created list is fixed-length if &lt;code&gt;length&lt;/code&gt; is provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f799dfa64cd8e2dfc6f548f1122cd6e0c0d44bff" translate="yes" xml:space="preserve">
          <source>The created list is fixed-length unless &lt;code&gt;growable&lt;/code&gt; is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e3eb86a6be902d3190117ca40f28b48b59f4cd" translate="yes" xml:space="preserve">
          <source>The created map is a &lt;a href=&quot;../../dart-collection/linkedhashmap-class&quot;&gt;LinkedHashMap&lt;/a&gt;. A &lt;code&gt;LinkedHashMap&lt;/code&gt; requires the keys to implement compatible &lt;code&gt;operator==&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt;, and it allows null as a key. It iterates in key insertion order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6114963d25da45af314dd79f1c61cdeeb549852a" translate="yes" xml:space="preserve">
          <source>The created map is not ordered in any way. When iterating the keys or values, the iteration order is unspecified except that it will stay the same as long as the map isn't changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b3b4f11caca4fe7388ec4e018484f456b2d252" translate="yes" xml:space="preserve">
          <source>The created stack trace will have a &lt;code&gt;toString&lt;/code&gt; method returning &lt;code&gt;stackTraceString&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9e70cb6cb975afc3062726bdf50909ac5e8f48" translate="yes" xml:space="preserve">
          <source>The current isolate for code using &lt;a href=&quot;current&quot;&gt;current&lt;/a&gt; is the isolate running the code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f0ec402116431cea1a0f0a86b8a8106051945d" translate="yes" xml:space="preserve">
          <source>The current location of this window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1749a7f94990f6017a86f924602736b330d6c390" translate="yes" xml:space="preserve">
          <source>The current location of this window. &lt;a href=&quot;window/location&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d59185e08b56dd90683805426d21038e9bacd52" translate="yes" xml:space="preserve">
          <source>The current location of this window. &lt;a href=&quot;windowbase/location&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e2c6ea5b4fcf1f2cded65913a663adc437d7a1" translate="yes" xml:space="preserve">
          <source>The current resident set size of memory for the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8099954e737cd415d2b9e48e1aa10f9ab9c36748" translate="yes" xml:space="preserve">
          <source>The current resident set size of memory for the process. &lt;a href=&quot;processinfo/currentrss&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86fec438b88fe519728b3a4cc3aa5ccd1abdcc72" translate="yes" xml:space="preserve">
          <source>The current session history for this window's newest document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a41061f83f7f9778e402391bf113aabfa4ee3a2" translate="yes" xml:space="preserve">
          <source>The current session history for this window's newest document. &lt;a href=&quot;window/history&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa29b8cd60dafe84a26e3140bdcf313fd8d0c8b9" translate="yes" xml:space="preserve">
          <source>The current session history for this window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656b00746a1b5ffa7abd22d5e281c9bb2fe0795d" translate="yes" xml:space="preserve">
          <source>The current session history for this window. &lt;a href=&quot;windowbase/history&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5f3f0b6ad1dfae9302f2852d63b510a44934d7" translate="yes" xml:space="preserve">
          <source>The current system encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc95abb9d8603e85e7ed0b48a8d0526efd94441" translate="yes" xml:space="preserve">
          <source>The current system encoding. &lt;a href=&quot;systemencoding-constant&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8332170e3e4c8f5ecdfbaea95924787534d28381" translate="yes" xml:space="preserve">
          <source>The current time stamp from the clock used by the timeline. Units are microseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b3d59158f3f5128543c8728f3ff6bfc0d224227" translate="yes" xml:space="preserve">
          <source>The current time stamp from the clock used by the timeline. Units are microseconds. &lt;a href=&quot;timeline/now&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ab46532b4dc34fab545f128639107d1efff9f3" translate="yes" xml:space="preserve">
          <source>The current value of the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900dbab04fff832be3f75c9cb9fcd937a3d03fe1" translate="yes" xml:space="preserve">
          <source>The current value of the stream. &lt;a href=&quot;streamiterator/current&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b576358a176611a80b85215b546d5e563866ae" translate="yes" xml:space="preserve">
          <source>The current window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6275184208189a019f7cc32035477691093db07f" translate="yes" xml:space="preserve">
          <source>The current window. &lt;a href=&quot;window/self&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9efe5fb4cee2722ab626714755b40462604fe4" translate="yes" xml:space="preserve">
          <source>The current window. &lt;a href=&quot;window/window&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340f2154ceef14481e0185e2f7610d6c0cb57554" translate="yes" xml:space="preserve">
          <source>The currently registered target for this event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb147857b8446e003f70b12091d331df62056dc2" translate="yes" xml:space="preserve">
          <source>The custom element can also be instantiated via HTML using the syntax &lt;code&gt;&amp;lt;x-foo&amp;gt;&amp;lt;/x-foo&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ada3f0d0c369a9ba2c76ef6f353bf3188154db8" translate="yes" xml:space="preserve">
          <source>The dart:core library provides basic collections, such as &lt;a href=&quot;list-class&quot;&gt;List&lt;/a&gt;, &lt;a href=&quot;map-class&quot;&gt;Map&lt;/a&gt;, and &lt;a href=&quot;set-class&quot;&gt;Set&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d64cb83d6cc4f92e74df5af8cf857de65613a98" translate="yes" xml:space="preserve">
          <source>The dart:mirrors library is unstable and its API might change slightly as a result of user feedback. This library is platform dependent and therefore it has implementations for both dart2js and the Dart VM. Both are under development and may not support all operations yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6a9871c2b8cd1a399fc214b52d8d36cf68ed0d" translate="yes" xml:space="preserve">
          <source>The data could be in the form of a &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../../dart-typed_data/bytebuffer-class&quot;&gt;ByteBuffer&lt;/a&gt;, &lt;a href=&quot;../document-class&quot;&gt;Document&lt;/a&gt;, &lt;a href=&quot;../blob-class&quot;&gt;Blob&lt;/a&gt;, or json (also a &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;). &lt;code&gt;null&lt;/code&gt; indicates request failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63dba93086075109f8ad5cd3e7ad367e360100a9" translate="yes" xml:space="preserve">
          <source>The data list should not be modified after it has been passed to &lt;code&gt;add&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e68d55ba33f04563783925266ec4843acae5249a" translate="yes" xml:space="preserve">
          <source>The data received as a reponse from the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3a7589535725f3014fd714b12a82536c9f3a84" translate="yes" xml:space="preserve">
          <source>The data received as a reponse from the request. &lt;a href=&quot;httprequest/response&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c729bcd7322ecf9191a5443fcc0760c4af9c3b" translate="yes" xml:space="preserve">
          <source>The day of the month &lt;code&gt;1..31&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7dfc2a143f3fab12a20eec14817a3ef2fe6cad5" translate="yes" xml:space="preserve">
          <source>The day of the month &lt;code&gt;1..31&lt;/code&gt;. &lt;a href=&quot;datetime/day&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc8a6ce33f8bfcb35a5bfe1dd46027aa317a6f3" translate="yes" xml:space="preserve">
          <source>The day of the week &lt;a href=&quot;datetime/monday-constant&quot;&gt;monday&lt;/a&gt;..&lt;a href=&quot;datetime/sunday-constant&quot;&gt;sunday&lt;/a&gt;. &lt;a href=&quot;datetime/weekday&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0998e7c7012a9c44ebfebb87cd2fec3a86777d77" translate="yes" xml:space="preserve">
          <source>The day of the week &lt;a href=&quot;monday-constant&quot;&gt;monday&lt;/a&gt;..&lt;a href=&quot;sunday-constant&quot;&gt;sunday&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1dffdc34ee71245af4f4044b911ce01674fa39" translate="yes" xml:space="preserve">
          <source>The debugging console for this window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595c88bf845a80e6dc46be7c2d90d80df06dfcd4" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;../usertag-class&quot;&gt;UserTag&lt;/a&gt; with label 'Default'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4008332f8e1b8d4ec2b98c348b07763020a733b4" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;set-class&quot;&gt;Set&lt;/a&gt; implementation, &lt;a href=&quot;../dart-collection/linkedhashset-class&quot;&gt;LinkedHashSet&lt;/a&gt;, considers objects indistinguishable if they are equal with regard to operator &lt;a href=&quot;object/operator_equals&quot;&gt;Object.==&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a2ca8738eb11ca699ad38316a8c18dde81fd97" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;usertag-class&quot;&gt;UserTag&lt;/a&gt; with label 'Default'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15bb468ce8a4f248bcea09154173fe76cc46dd57" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;reviver&lt;/code&gt; (when not provided) is the identity function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9f9ff220180bece8da8872f5f043ce12b2615a" translate="yes" xml:space="preserve">
          <source>The default List implementations use &lt;a href=&quot;../../dart-core/comparable/compare&quot;&gt;Comparable.compare&lt;/a&gt; if &lt;code&gt;compare&lt;/code&gt; is omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfdf7ed8e04bd7de8bd3aa9f2216572f83cd9386" translate="yes" xml:space="preserve">
          <source>The default List implementations use &lt;a href=&quot;../comparable/compare&quot;&gt;Comparable.compare&lt;/a&gt; if &lt;code&gt;compare&lt;/code&gt; is omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e76f48baa4589cbd71e8549b5e9081cea76394" translate="yes" xml:space="preserve">
          <source>The default behavior for all &lt;a href=&quot;../../dart-core/object-class&quot;&gt;Object&lt;/a&gt;s is to return true if and only if &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; are the same object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40d5f8fa5a2ade49043dc693904bb4caeb2b359" translate="yes" xml:space="preserve">
          <source>The default behavior for all &lt;a href=&quot;../object-class&quot;&gt;Object&lt;/a&gt;s is to return true if and only if &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; are the same object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3321d8a23893933cd2c67477d890addab472fd55" translate="yes" xml:space="preserve">
          <source>The default behavior is to return a normal growable list. Some list types may choose to return a list of the same type as themselves (see &lt;a href=&quot;operator_plus&quot;&gt;Uint8List.+&lt;/a&gt;);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9677c766a8fd39c68d8844114c2f53a9e62ddeb" translate="yes" xml:space="preserve">
          <source>The default behavior is to throw a &lt;a href=&quot;../nosuchmethoderror-class&quot;&gt;NoSuchMethodError&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5181440ec221edbe183dc76c0054e432873c649" translate="yes" xml:space="preserve">
          <source>The default for whether to use Windows or non-Windows semantics determined from the platform Dart is running on. When running in the standalone VM this is detected by the VM based on the operating system. When running in a browser non-Windows semantics is always used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75928a3a750714a618fef647e9520d83fdfac940" translate="yes" xml:space="preserve">
          <source>The default for whether to use Windows or non-Windows semantics determined from the platform Dart is running on. When running in the standalone VM, this is detected by the VM based on the operating system. When running in a browser non-Windows semantics is always used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3632f46e1e9f41a2421ddb7c6b3609f0e3c31dfc" translate="yes" xml:space="preserve">
          <source>The default growable list, as returned by &lt;code&gt;new List()&lt;/code&gt; or &lt;code&gt;[]&lt;/code&gt;, keeps an internal buffer, and grows that buffer when necessary. This guarantees that a sequence of &lt;a href=&quot;list/add&quot;&gt;add&lt;/a&gt; operations will each execute in amortized constant time. Setting the length directly may take time proportional to the new length, and may change the internal capacity so that a following add operation will need to immediately increase the buffer capacity. Other list implementations may have different performance behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f109c9e50021259cb42f7f68d0f869e8717cd6ea" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;a href=&quot;stream/isbroadcast&quot;&gt;isBroadcast&lt;/a&gt; returns false. A broadcast stream inheriting from &lt;a href=&quot;stream-class&quot;&gt;Stream&lt;/a&gt; must override &lt;a href=&quot;stream/isbroadcast&quot;&gt;isBroadcast&lt;/a&gt; to return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec639ebf17f4f1411e3d38be417177157ba9c7c" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;code&gt;Uri&lt;/code&gt; always normalizes paths, so calling this function has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4034ad32a38a8979080386b72bec6bbd30c88f46" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;code&gt;int&lt;/code&gt; is 64-bit two's complement integers with operations that wrap to that range on overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a67753904c1b38d8249074d44709ab5f355ae1" translate="yes" xml:space="preserve">
          <source>The default implementation supplies a stream of pseudo-random bits that are not suitable for cryptographic purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dbcd64623e3560e41440e826f74977bd4e932b9" translate="yes" xml:space="preserve">
          <source>The default representation always contains the first three elements. If there are less than a hundred elements in the iterable, it also contains the last two elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3ef558c428de989423ee2a29a5078cfbb34c46" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;mode&lt;/code&gt; is &lt;code&gt;ProcessStartMode.normal&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c08b31c4febaf38a57a837cfce151655187d29" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;offset&lt;/code&gt; is 0, and the default value for &lt;code&gt;count&lt;/code&gt; is &lt;code&gt;buffer.length - offset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2ccf2a85466d1707cb25b7f14922a2b7573ce9" translate="yes" xml:space="preserve">
          <source>The default value is 15 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bab3a1eadce6e0d5dfcb6bb0d5c3e5abe6ebe21" translate="yes" xml:space="preserve">
          <source>The default value is 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c305811ef9e6821d99c41559431a66b2b4ea3f1" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;Dart/&amp;lt;version&amp;gt; (dart:io)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7717f79db2d1fdef90f0f12e8fe86f5889c42d63" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;false&lt;/code&gt; (compression disabled). To enable, set &lt;code&gt;autoCompress&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164cde1373477bbc1a7ef81a68599082b7803a5a" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af976fa886c4f7b664fc57e291778fd6b49e246c" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ccc5a550eeb0339821d24f06cba14650b35a7e7" translate="yes" xml:space="preserve">
          <source>The defining type for this typedef.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8437835a01b6b40fcb880e72d18dc2d90f967eb8" translate="yes" xml:space="preserve">
          <source>The defining type for this typedef. &lt;a href=&quot;typedefmirror/referent&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380be21e887932818882cf6fb9815d211bd0be0d" translate="yes" xml:space="preserve">
          <source>The description always contains the &lt;a href=&quot;message&quot;&gt;message&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ee1b935855f290c2a443caf65abcf5a30ef254" translate="yes" xml:space="preserve">
          <source>The details of a failed service protocol extension RPC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e301488dfa97efc0b52fd237e7562a4db8be6a2" translate="yes" xml:space="preserve">
          <source>The difference between &lt;a href=&quot;zlibcodec-class&quot;&gt;ZLibCodec&lt;/a&gt; and &lt;a href=&quot;gzipcodec-class&quot;&gt;GZipCodec&lt;/a&gt; is that the &lt;a href=&quot;gzipcodec-class&quot;&gt;GZipCodec&lt;/a&gt; wraps the &lt;code&gt;ZLib&lt;/code&gt; compressed bytes in &lt;code&gt;GZip&lt;/code&gt; frames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca6af55a91cec719aabdb6140e0f739530b7dbd" translate="yes" xml:space="preserve">
          <source>The difference between two dates in different time zones is just the number of nanoseconds between the two points in time. It doesn't take calendar days into account. That means that the difference between two midnights in local time may be less than 24 hours times the number of days between them, if there is a daylight saving change in between. If the difference above is calculated using Australian local time, the difference is 7415 days and 23 hours, which is only 7415 whole days as reported by &lt;code&gt;inDays&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e911e5018b687d1dfc722026b080b9c60f43e0" translate="yes" xml:space="preserve">
          <source>The difference is measured in seconds and fractions of seconds. The difference above counts the number of fractional seconds between midnight at the beginning of those dates. If the dates above had been in local time, not UTC, then the difference between two midnights may not be a multiple of 24 hours due to daylight saving differences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2afa3212556f518096507c8cddd00d9da27e418b" translate="yes" xml:space="preserve">
          <source>The directory containing &lt;a href=&quot;../filesystementity-class&quot;&gt;this&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad836b65b5839092fec6a2e9342863577f7672c" translate="yes" xml:space="preserve">
          <source>The directory containing &lt;a href=&quot;directory-class&quot;&gt;this&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01c18228aea359550b812c60825fefd2f81cc96" translate="yes" xml:space="preserve">
          <source>The directory containing &lt;a href=&quot;file-class&quot;&gt;this&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36c3d89df5a06e8c0e4d04bd35e67f1a0b1549a" translate="yes" xml:space="preserve">
          <source>The directory containing &lt;a href=&quot;filesystementity-class&quot;&gt;this&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89455e0cc1a55088c35099b0ef45c9f9cde1223e" translate="yes" xml:space="preserve">
          <source>The directory containing &lt;a href=&quot;link-class&quot;&gt;this&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a30e46a7ebaf51f29dfb46a498d5ec8e10f79ce" translate="yes" xml:space="preserve">
          <source>The distance from the left side of the screen to the left side of this window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9887cfb67a818298911034ae0528e2c8d47c2962" translate="yes" xml:space="preserve">
          <source>The distance from the left side of the screen to the left side of this window. &lt;a href=&quot;window/screenleft&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2926af98e69d88bc0031bea95e7e89ee9eb1f0b" translate="yes" xml:space="preserve">
          <source>The distance from the left side of the screen to the mouse pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e86c57f8f4f80d7a19b7ebfcc2a3d5a61af09c0" translate="yes" xml:space="preserve">
          <source>The distance from the left side of the screen to the mouse pointer. &lt;a href=&quot;window/screenx&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca9fe14aa8d5a1f6d2d3fd242401df8b106958c" translate="yes" xml:space="preserve">
          <source>The distance from the top of the screen to the mouse pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab517da50a86095a0b8fae9b9d5715e03aca478" translate="yes" xml:space="preserve">
          <source>The distance from the top of the screen to the mouse pointer. &lt;a href=&quot;window/screeny&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52181abd9105547fbdc3ed809e9b7caeaa1d4f17" translate="yes" xml:space="preserve">
          <source>The distance from the top of the screen to the top of this window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f435e7d6bffdb1461e1ce69c654411cb717e9949" translate="yes" xml:space="preserve">
          <source>The distance from the top of the screen to the top of this window. &lt;a href=&quot;window/screentop&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec71de980f7406fcbfb5bb3edd5f8faf998b0fa" translate="yes" xml:space="preserve">
          <source>The distance this window has been scrolled horizontally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862f51a18a3f86acd11be71724baf4583713c5bd" translate="yes" xml:space="preserve">
          <source>The distance this window has been scrolled horizontally. &lt;a href=&quot;window/scrollx&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad8a461f31159ef3c6efe6929c6aa034c4d7dbd" translate="yes" xml:space="preserve">
          <source>The distance this window has been scrolled vertically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2de5752bbb8b33a017b57c0ce144fec34b41790" translate="yes" xml:space="preserve">
          <source>The distance this window has been scrolled vertically. &lt;a href=&quot;window/scrolly&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f703cd1eae8b983f2c3d80eb0c36203e5193c63" translate="yes" xml:space="preserve">
          <source>The document this node belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f9daad7bcc7006d5ac3e4979c80cdee4d9f1b7" translate="yes" xml:space="preserve">
          <source>The document this node belongs to. &lt;a href=&quot;../dart-html/node/ownerdocument&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2325e9a932889e5922f8d39d5503721e9d841fc8" translate="yes" xml:space="preserve">
          <source>The document this node belongs to. &lt;a href=&quot;node/ownerdocument&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d64e9a21d3fec509f25aedd0e8401058f1ab045" translate="yes" xml:space="preserve">
          <source>The documentation frequently abuses notation with Dart pseudo-code such as &lt;code&gt;o.x(a)&lt;/code&gt;, where o and a are defined to be objects; what is actually meant in these cases is &lt;code&gt;o'.x(a')&lt;/code&gt; where &lt;em&gt;o'&lt;/em&gt; and &lt;em&gt;a'&lt;/em&gt; are Dart variables bound to &lt;em&gt;o&lt;/em&gt; and &lt;em&gt;a&lt;/em&gt; respectively. Furthermore, &lt;em&gt;o'&lt;/em&gt; and &lt;em&gt;a'&lt;/em&gt; are assumed to be fresh variables (meaning that they are distinct from any other variables in the program).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="870a0da3c7795d4f9726f43e64f2ca3272f53d8f" translate="yes" xml:space="preserve">
          <source>The domain the cookie applies to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85c30a88eed9b4ffecca36df95cdfd21d03d1ce" translate="yes" xml:space="preserve">
          <source>The duration that was exceeded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a76b69f045e4456e2d54d53510eb24c1a4541f" translate="yes" xml:space="preserve">
          <source>The editor, or a similar tool aimed at the programmer, may report if no declaration of an annotated member is inherited by the class from either a superclass or an interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb53d3cbb0e0443a32c8121e7486efef3007f7f" translate="yes" xml:space="preserve">
          <source>The elapsed number of clock ticks increases by &lt;a href=&quot;frequency&quot;&gt;frequency&lt;/a&gt; every second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b5c19e5537408ce186b43303e3dd1e6279aa0d" translate="yes" xml:space="preserve">
          <source>The elapsed number of clock ticks since calling &lt;a href=&quot;start&quot;&gt;start&lt;/a&gt; while the &lt;a href=&quot;../stopwatch-class&quot;&gt;Stopwatch&lt;/a&gt; is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26224ec56e6f73de09e572ece5faafd7ebfbf85" translate="yes" xml:space="preserve">
          <source>The elapsed number of clock ticks since calling &lt;a href=&quot;stopwatch/start&quot;&gt;start&lt;/a&gt; while the &lt;a href=&quot;stopwatch-class&quot;&gt;Stopwatch&lt;/a&gt; is running. &lt;a href=&quot;stopwatch/elapsedticks&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ace8c6ed5509caf3379cb881ad00df3ac6e2307" translate="yes" xml:space="preserve">
          <source>The element can also define an uninteractive region of the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37414bee83d0ed4712ed099c71c9d7aed0feb2e4" translate="yes" xml:space="preserve">
          <source>The element in the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="611fb0e408c2eabd59a8c19d98e296b4f49503c8" translate="yes" xml:space="preserve">
          <source>The element order in the queue is as if the elements were added using &lt;a href=&quot;addlast&quot;&gt;addLast&lt;/a&gt; in the order provided by &lt;code&gt;elements.iterator&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dab1a05e3dcd275ddddd552f6ac4c61cfe17d06" translate="yes" xml:space="preserve">
          <source>The elements are added to the queue, as by &lt;a href=&quot;addlast&quot;&gt;addLast&lt;/a&gt;, in the order given by &lt;code&gt;elements.iterator&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7171553564398c81a69b04f6845c2547de01d1f8" translate="yes" xml:space="preserve">
          <source>The elements are in iteration order. The list is fixed-length if &lt;code&gt;growable&lt;/code&gt; is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b09a7f9dde9aba8f715c90b9bd45156b7d85b8" translate="yes" xml:space="preserve">
          <source>The elements are iterated in insertion order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43921e2efd6d91fea3c490cfec9ee0c54c9707cd" translate="yes" xml:space="preserve">
          <source>The elements can be computed by stepping through &lt;a href=&quot;../../dart-core/iterable/iterator&quot;&gt;iterator&lt;/a&gt; until &lt;code&gt;count&lt;/code&gt; elements have been seen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab372605d1704f2e3d3eceb8e2dc768b05e3762" translate="yes" xml:space="preserve">
          <source>The elements can be computed by stepping through &lt;a href=&quot;../../dart-core/iterable/iterator&quot;&gt;iterator&lt;/a&gt; until an element is found where &lt;code&gt;test(element)&lt;/code&gt; is false. At that point, the returned iterable stops (its &lt;code&gt;moveNext()&lt;/code&gt; returns false).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f29bd1d58d00d94eb7957de1ce9b6fbd628f4d" translate="yes" xml:space="preserve">
          <source>The elements can be computed by stepping through &lt;a href=&quot;iterator&quot;&gt;iterator&lt;/a&gt; until &lt;code&gt;count&lt;/code&gt; elements have been seen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed86a4a36f5bdb3e91b5033f8b71279b20a3652" translate="yes" xml:space="preserve">
          <source>The elements can be computed by stepping through &lt;a href=&quot;iterator&quot;&gt;iterator&lt;/a&gt; until an element is found where &lt;code&gt;test(element)&lt;/code&gt; is false. At that point, the returned iterable stops (its &lt;code&gt;moveNext()&lt;/code&gt; returns false).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d36cef38d385bbf015c1887277d85342bf74476" translate="yes" xml:space="preserve">
          <source>The elements of &lt;code&gt;source&lt;/code&gt; are written into &lt;code&gt;target&lt;/code&gt; from position &lt;code&gt;at&lt;/code&gt;. The &lt;code&gt;source&lt;/code&gt; must not contain more elements after writing the last position of &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482ffb2c9205d09df07071fa9166e744359a15e9" translate="yes" xml:space="preserve">
          <source>The elements of a &lt;code&gt;HashSet&lt;/code&gt; must have consistent equality and hashCode implementations. This means that the equals operation must define a stable equivalence relation on the elements (reflexive, symmetric, transitive, and consistent over time), and that the hashCode must consistent with equality, so that the same for objects that are considered equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718a850d45eeb3561e384b579beaee0160edf181" translate="yes" xml:space="preserve">
          <source>The elements of a &lt;code&gt;LinkedHashSet&lt;/code&gt; must have consistent &lt;a href=&quot;../dart-core/object/operator_equals&quot;&gt;Object.==&lt;/a&gt; and &lt;a href=&quot;../dart-core/object/hashcode&quot;&gt;Object.hashCode&lt;/a&gt; implementations. This means that the &lt;code&gt;==&lt;/code&gt; operator must define a stable equivalence relation on the elements (reflexive, symmetric, transitive, and consistent over time), and that &lt;code&gt;hashCode&lt;/code&gt; must be the same for objects that are considered equal by &lt;code&gt;==&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b551211bb0a47b3112b7cc2f1c0daa3b6a591d88" translate="yes" xml:space="preserve">
          <source>The elements of the iterable are accessed by getting an &lt;a href=&quot;iterator-class&quot;&gt;Iterator&lt;/a&gt; using the &lt;a href=&quot;iterable/iterator&quot;&gt;iterator&lt;/a&gt; getter, and using it to step through the values. Stepping with the iterator is done by calling &lt;a href=&quot;iterator/movenext&quot;&gt;Iterator.moveNext&lt;/a&gt;, and if the call returns &lt;code&gt;true&lt;/code&gt;, the iterator has now moved to the next element, which is then available as &lt;a href=&quot;iterator/current&quot;&gt;Iterator.current&lt;/a&gt;. If the call returns &lt;code&gt;false&lt;/code&gt;, there are no more elements, and &lt;code&gt;iterator.current&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55deff8058a5274c1088a9cf9f5ffe943859ef79" translate="yes" xml:space="preserve">
          <source>The empty iterable has no elements, and iterating it always stops immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="279ff1b86db5c00dc9abe279e5a380f39dc1e927" translate="yes" xml:space="preserve">
          <source>The empty symbol is the name of libraries with no library declaration, and the base-name of the unnamed constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a62fb1476dd120230232e3befd3124bb789422d" translate="yes" xml:space="preserve">
          <source>The empty symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="901fd056bb3a53b49c4f86f2e9feead92f0b7bda" translate="yes" xml:space="preserve">
          <source>The empty symbol. &lt;a href=&quot;symbol/empty-constant&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5674e290fd33c349845979b9dae1f33a6300cea5" translate="yes" xml:space="preserve">
          <source>The encoding is required to be properly padded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b853dccc5408f57cc0893ef3175cb053c0ca443a" translate="yes" xml:space="preserve">
          <source>The encoding of elements of lists and maps are indented and put on separate lines. The &lt;code&gt;indent&lt;/code&gt; string is prepended to these elements, once for each level of indentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1abcb882c9460f2f23665e6fbeea510f689fb12" translate="yes" xml:space="preserve">
          <source>The encoding used for decoding &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; into text is controlled through &lt;code&gt;stdoutEncoding&lt;/code&gt; and &lt;code&gt;stderrEncoding&lt;/code&gt;. The default encoding is &lt;a href=&quot;../systemencoding-constant&quot;&gt;systemEncoding&lt;/a&gt;. If &lt;code&gt;null&lt;/code&gt; is used no decoding will happen and the &lt;a href=&quot;../processresult-class&quot;&gt;ProcessResult&lt;/a&gt; will hold binary data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138febf9c8194f681410510adff41302b32e4989" translate="yes" xml:space="preserve">
          <source>The entire image from &lt;code&gt;source&lt;/code&gt; will be drawn to this context with its top left corner at the point (&lt;code&gt;destX&lt;/code&gt;, &lt;code&gt;destY&lt;/code&gt;). If the image is larger than canvas will allow, the image will be clipped to fit the available space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3587b1ce19f651e708a039062873bf0ae28f5d94" translate="yes" xml:space="preserve">
          <source>The entry must currently be in a linked list when this method is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc4f4e6aac2a00a5f05790ab76e0af2e98972a5" translate="yes" xml:space="preserve">
          <source>The entry object of the first element in the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea49f8f43d421ae0df8f6c8215ebb7c64021a7be" translate="yes" xml:space="preserve">
          <source>The entry object of the first element in the queue. &lt;a href=&quot;doublelinkedqueue/firstentry&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa382b86e2e60a1a64bd84a27271cab44d9898d2" translate="yes" xml:space="preserve">
          <source>The entry object of the last element in the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e1aa0198154863369bb2c27e3ab3ed1d94db47" translate="yes" xml:space="preserve">
          <source>The entry object of the last element in the queue. &lt;a href=&quot;doublelinkedqueue/lastentry&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b4611a3222fc8a577ce580bb2079b77f13db1b" translate="yes" xml:space="preserve">
          <source>The entry objects can also be accessed using &lt;a href=&quot;firstentry&quot;&gt;firstEntry&lt;/a&gt; and &lt;a href=&quot;lastentry&quot;&gt;lastEntry&lt;/a&gt;, and iterated using &lt;a href=&quot;../doublelinkedqueueentry/nextentry&quot;&gt;DoubleLinkedQueueEntry.nextEntry()&lt;/a&gt; and &lt;a href=&quot;../doublelinkedqueueentry/previousentry&quot;&gt;DoubleLinkedQueueEntry.previousEntry()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f4cb12ceecae8788e330a56ff5b1c40e496463" translate="yes" xml:space="preserve">
          <source>The entry objects can also be accessed using &lt;a href=&quot;firstentry&quot;&gt;firstEntry&lt;/a&gt;, and they can be iterated using &lt;a href=&quot;../doublelinkedqueueentry/nextentry&quot;&gt;DoubleLinkedQueueEntry.nextEntry()&lt;/a&gt; and &lt;a href=&quot;../doublelinkedqueueentry/previousentry&quot;&gt;DoubleLinkedQueueEntry.previousEntry()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fec9b6707bc2485845f89550a5b30d16e6fc32d" translate="yes" xml:space="preserve">
          <source>The entry objects can also be accessed using &lt;a href=&quot;lastentry&quot;&gt;lastEntry&lt;/a&gt;, and they can be iterated using &lt;a href=&quot;../doublelinkedqueueentry/nextentry&quot;&gt;DoubleLinkedQueueEntry.nextEntry()&lt;/a&gt; and &lt;a href=&quot;../doublelinkedqueueentry/previousentry&quot;&gt;DoubleLinkedQueueEntry.previousEntry()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd242ff242eb16e96207e565b639e77a506043fe" translate="yes" xml:space="preserve">
          <source>The environment for this process as a map from string key to string value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6252a20bbb79c0fde67e93c8ca6cec1431f156" translate="yes" xml:space="preserve">
          <source>The environment for this process as a map from string key to string value. &lt;a href=&quot;platform/environment&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9afad3d326e6d3a75c818990dfd6cc602a08a8e4" translate="yes" xml:space="preserve">
          <source>The equality holds if and only if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d4b8f01426e5a06b9ed09d96f7a33c8e0b2896" translate="yes" xml:space="preserve">
          <source>The equality operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d508a64ed7c51394fcda428b60c4838c62743d38" translate="yes" xml:space="preserve">
          <source>The equality operator. &lt;a href=&quot;../dart-core/list/operator_equals&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93bee1034b60a3b987a68ebdbac84817187c91a0" translate="yes" xml:space="preserve">
          <source>The equality operator. &lt;a href=&quot;../dart-core/object/operator_equals&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cce5822b8f257c1ed0be93df20c96a598bbdb33" translate="yes" xml:space="preserve">
          <source>The equality operator. &lt;a href=&quot;cssrect/operator_equals&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe7e2eb42caa2ded79cac385c2da0373b76e575" translate="yes" xml:space="preserve">
          <source>The equality operator. &lt;a href=&quot;domrectreadonly/operator_equals&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b60d0b2a727ba26a0b1bf28039ea9d7cbbc27db" translate="yes" xml:space="preserve">
          <source>The equality operator. &lt;a href=&quot;jsobject/operator_equals&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e46c3dbeee00323161712f0de4c0c873c62d94a0" translate="yes" xml:space="preserve">
          <source>The equality operator. &lt;a href=&quot;object/operator_equals&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5828a9d7970a2ea3cb8e71aa606a7ba09e68a1" translate="yes" xml:space="preserve">
          <source>The equality operator. &lt;a href=&quot;rectangle/operator_equals&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be1a59481d82cb5d6fdf625ff5f92e1661a2bac" translate="yes" xml:space="preserve">
          <source>The equality used to determine whether &lt;code&gt;element&lt;/code&gt; is equal to an element of the iterable defaults to the &lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;Object.==&lt;/a&gt; of the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867ca0d012edeadffcc617d71eb7403a30524c71" translate="yes" xml:space="preserve">
          <source>The equality used to determine whether &lt;code&gt;element&lt;/code&gt; is equal to an element of the iterable defaults to the &lt;a href=&quot;../object/operator_equals&quot;&gt;Object.==&lt;/a&gt; of the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d97394fd4d8dcba6ffca8413ca710fd9141906" translate="yes" xml:space="preserve">
          <source>The error code associated with a failed service protocol extension RPC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873270236e77be9ac0ae3c8bfb2582804c21fea1" translate="yes" xml:space="preserve">
          <source>The error zone is the one that is responsible for dealing with uncaught errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321482818fe8c486da5d5d2fe11ddcb179ed1f98" translate="yes" xml:space="preserve">
          <source>The error zone is the one that is responsible for dealing with uncaught errors. &lt;a href=&quot;zone/errorzone&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649a6e900bbfbc4f5d01ce99f4751b9d623d081a" translate="yes" xml:space="preserve">
          <source>The errors are sent back as two elements lists. The first element is a &lt;code&gt;String&lt;/code&gt; representation of the error, usually created by calling &lt;code&gt;toString&lt;/code&gt; on the error. The second element is a &lt;code&gt;String&lt;/code&gt; representation of an accompanying stack trace, or &lt;code&gt;null&lt;/code&gt; if no stack trace was provided. To convert this back to a &lt;a href=&quot;../../dart-core/stacktrace-class&quot;&gt;StackTrace&lt;/a&gt; object, use &lt;a href=&quot;../../dart-core/stacktrace/stacktrace.fromstring&quot;&gt;StackTrace.fromString&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c479691ecd45d8652d9375416e72556025fd3f38" translate="yes" xml:space="preserve">
          <source>The escaped text should only be used inside quoted HTML attributes values or as text content of a normal element. Using the escaped text inside a tag, but not inside a quoted attribute value, is still dangerous.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c81d47af2a9208c7645d84e20fc0c16d5fc8dc" translate="yes" xml:space="preserve">
          <source>The escaping only works for elements with normal HTML content, and not for, for example, script or style element content, which require escapes matching their particular content syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a2820bdac71813b61268b5f73c21362e5a0c58" translate="yes" xml:space="preserve">
          <source>The event key is in the left key location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e247d7c4e852153b1f64c17d1771a5ff84a84745" translate="yes" xml:space="preserve">
          <source>The event key is in the right key location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5016edf906758555d6bb11167d6ec5233c0848" translate="yes" xml:space="preserve">
          <source>The event key is not distinguished as the left or right version of the key, and did not originate from the numeric keypad (or did not originate with a virtual key corresponding to the numeric keypad).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58eebda6e3feaa565a2688eae1c6e5a3840c8acb" translate="yes" xml:space="preserve">
          <source>The event key originated on a game controller or a joystick on a mobile device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088b1b161a598f7f8f94a0891c789b194f51153d" translate="yes" xml:space="preserve">
          <source>The event key originated on a mobile device, either on a physical keypad or a virtual keyboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad0d4e6a335faf14a8da7b92ecaa00da277c990" translate="yes" xml:space="preserve">
          <source>The event key originated on the numeric keypad or with a virtual key corresponding to the numeric keypad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0eb09be7e76d48ff8d7baf7d49b21bcc25031e" translate="yes" xml:space="preserve">
          <source>The event values are computed by invoking &lt;code&gt;computation&lt;/code&gt;. The argument to this callback is an integer that starts with 0 and is incremented for every event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73416777c1821c29629cb6796f38741e95164fb5" translate="yes" xml:space="preserve">
          <source>The exact format of the string representation is not final.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51755c1e6d7011c0126bbbf62ef89b456ddb3878" translate="yes" xml:space="preserve">
          <source>The exact timing depends on the underlying timer implementation. No more than &lt;code&gt;n&lt;/code&gt; callbacks will be made in &lt;code&gt;duration * n&lt;/code&gt; time, but the time between two consecutive callbacks can be shorter and longer than &lt;code&gt;duration&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5f9c14e66edb2478391cf4b3ed3974c363f27d" translate="yes" xml:space="preserve">
          <source>The example below creates a new Map from a List. The keys of &lt;code&gt;map&lt;/code&gt; are &lt;code&gt;list&lt;/code&gt; values converted to strings, and the values of the &lt;code&gt;map&lt;/code&gt; are the squares of the &lt;code&gt;list&lt;/code&gt; values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692f21646684f86334ae7a3b1aac058b261d9928" translate="yes" xml:space="preserve">
          <source>The exception thrown when trying to convert the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6475e267db49fb611e9168d5a756e6ecf50888a7" translate="yes" xml:space="preserve">
          <source>The exit code is global for the Dart VM and the last assignment to exitCode from any isolate determines the exit code of the Dart VM on normal termination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522f76a5490270a950468e69cd7a5630d1bb6c44" translate="yes" xml:space="preserve">
          <source>The extensions property is initially the empty string. After the WebSocket connection is established this string reflects the extensions used by the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07877e8b4f58251e21b16f3cfcbe314ae8b77eb1" translate="yes" xml:space="preserve">
          <source>The file path is passed in &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74eb3b0933a86dec368cd44d18131ce987313011" translate="yes" xml:space="preserve">
          <source>The file system path on which the error occurred. Can be &lt;code&gt;null&lt;/code&gt; if the exception does not relate directly to a file system path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c73d5c7d9cbbb24db326506adfd822b6c35c51" translate="yes" xml:space="preserve">
          <source>The filtering happens lazily. Every new &lt;a href=&quot;../../dart-core/iterator-class&quot;&gt;Iterator&lt;/a&gt; of the returned iterable iterates over all elements of &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4394149144427066d49933a0e8b00ae009faa74" translate="yes" xml:space="preserve">
          <source>The filtering happens lazily. Every new &lt;a href=&quot;../iterator-class&quot;&gt;Iterator&lt;/a&gt; of the returned iterable iterates over all elements of &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7afba8340566ec2a11dfe008e1857c0c31be5eab" translate="yes" xml:space="preserve">
          <source>The filtering happens lazily. Every new iterator of the returned iterable starts iterating over the elements of &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaabb9f00e50f3bf7294302ed9e39cca04a5618c" translate="yes" xml:space="preserve">
          <source>The first child of this node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5205ffbe5cc4d81d123957ee65dc1a594fefd7d6" translate="yes" xml:space="preserve">
          <source>The first child of this node. &lt;a href=&quot;../dart-html/node/firstchild&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e95cc786edb2ddc0941ca979b6218f29c6edb2" translate="yes" xml:space="preserve">
          <source>The first child of this node. &lt;a href=&quot;node/firstchild&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f6a41ef8cf121d363a0ef6a6526b124278f721" translate="yes" xml:space="preserve">
          <source>The first element of this stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793570ca12060e1247e2b45e2232edc3b5b8e830" translate="yes" xml:space="preserve">
          <source>The first element of this stream. &lt;a href=&quot;../dart-async/stream/first&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0356f239d8f47cf652c4b157b3adb30a8c4b27" translate="yes" xml:space="preserve">
          <source>The first element of this stream. &lt;a href=&quot;stream/first&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf2ebe4b651125d644b60ea1b326900ae38c60d" translate="yes" xml:space="preserve">
          <source>The first object that was detected as part of a cycle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8abb4b967763c47c24b7f57bc504aa8aff083ee7" translate="yes" xml:space="preserve">
          <source>The first string encodes '&amp;eacute;' as a single unicode code unit (also a single rune), whereas the second string encodes it as 'e' with the combining accent character '◌́'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ce3d7f0a6f48988e302cea06333073dfbf728b" translate="yes" xml:space="preserve">
          <source>The first time an object &lt;code&gt;o&lt;/code&gt; is encountered so that &lt;code&gt;o == element&lt;/code&gt;, the index of &lt;code&gt;o&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8618183127319740c55f3f090ad66430dd5218" translate="yes" xml:space="preserve">
          <source>The flags passed to the executable used to run the script in this isolate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d346caba8780dcd42c6929d846d7548ba3944853" translate="yes" xml:space="preserve">
          <source>The flags passed to the executable used to run the script in this isolate. &lt;a href=&quot;platform/executablearguments&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5970b7eddb7a076813270d1de28fdd03d6ef9544" translate="yes" xml:space="preserve">
          <source>The flow id of the flow event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c288f854efb775f9b050bb5d81304fb8036018a3" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;../processsignal-class&quot;&gt;ProcessSignal&lt;/a&gt;s can be listened to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de792d92d51fe83e53a9885e0d39dfa5b0865a5" translate="yes" xml:space="preserve">
          <source>The following code illustrates that some List implementations support only a subset of the API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a90bce8ba9367caf97563b1ab26b97b9fc5c932" translate="yes" xml:space="preserve">
          <source>The following code sample creates a directory using the &lt;a href=&quot;directory/create&quot;&gt;create&lt;/a&gt; method. By setting the &lt;code&gt;recursive&lt;/code&gt; parameter to true, you can create the named directory and all its necessary parent directories, if they do not already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e816a0915ba3c50f735158d1efd69780598986f" translate="yes" xml:space="preserve">
          <source>The following code sample reads the entire contents from a file as a string using the asynchronous &lt;a href=&quot;file/readasstring&quot;&gt;readAsString&lt;/a&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2903ff7e1a79d91ed566479ae5336bc7a82ca94c" translate="yes" xml:space="preserve">
          <source>The following code sample uses the run method to create a process that runs the UNIX command &lt;code&gt;ls&lt;/code&gt;, which lists the contents of a directory. The run method completes with a &lt;a href=&quot;processresult-class&quot;&gt;ProcessResult&lt;/a&gt; object when the process terminates. This provides access to the output and exit code from the process. The run method does not return a Process object; this prevents your code from interacting with the running process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a935834f83fa1df20998b83eab20d64a2ffb74" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;Process.run&lt;/code&gt; to grep for &lt;code&gt;main&lt;/code&gt; in the file &lt;code&gt;test.dart&lt;/code&gt; on Linux.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced1748be6cbed628e32b2d924634d1aa61ccfb3" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;Process.start&lt;/code&gt; to grep for &lt;code&gt;main&lt;/code&gt; in the file &lt;code&gt;test.dart&lt;/code&gt; on Linux.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="957ace33b3f28d88d35bd616852fb8165085388b" translate="yes" xml:space="preserve">
          <source>The following environment variables are taken into account:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc567ea6ee978d8d0ef368377f2aa2d217e80ce" translate="yes" xml:space="preserve">
          <source>The following example finds all matches of a &lt;a href=&quot;regexp-class&quot;&gt;RegExp&lt;/a&gt; in a &lt;a href=&quot;string-class&quot;&gt;String&lt;/a&gt; and iterates through the returned iterable of Match objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aebcb9e173de1517ffe1442d7e43fb8c9b5baca0" translate="yes" xml:space="preserve">
          <source>The following example finds all matches of a regular expression in a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a896c9dbdf08bb5291f80e86d392950320608475" translate="yes" xml:space="preserve">
          <source>The following example shows an alert dialog via a JavaScript call to the global function &lt;code&gt;alert()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d2dcdbf3acf09c3204fa5a55b865e4d9cfc958" translate="yes" xml:space="preserve">
          <source>The following example shows how to start a &lt;a href=&quot;../stopwatch-class&quot;&gt;Stopwatch&lt;/a&gt; immediately after allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe48000fb42e8c5789b64ba912e9d495e8bc9c7" translate="yes" xml:space="preserve">
          <source>The following example uses start to create the process. The start method returns a &lt;a href=&quot;../dart-async/future-class&quot;&gt;Future&lt;/a&gt; for a Process object. When the future completes the process is started and your code can interact with the Process: writing to stdin, listening to stdout, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05b42e556fba8f6c535332f07b6109a5385689d" translate="yes" xml:space="preserve">
          <source>The following expression creates a new JavaScript object with the properties &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02af21ad98709db96381a34994637429bc888a52" translate="yes" xml:space="preserve">
          <source>The following is equivalent to the &lt;a href=&quot;getstring&quot;&gt;getString&lt;/a&gt; sample above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f6a3266ca95109ef572da1686a8186cd7da4f32" translate="yes" xml:space="preserve">
          <source>The following sample starts the UNIX &lt;code&gt;cat&lt;/code&gt; utility, which when given no command-line arguments, echos its input. The program writes to the process's standard input stream and prints data from its standard output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6edda8992946c78ab7d3287acdf60a4cfac36cc2" translate="yes" xml:space="preserve">
          <source>The following text is non-normative:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8000de6e24ef808ec6185fa811b7d1ebb390c4fe" translate="yes" xml:space="preserve">
          <source>The following types are transferred directly and not proxied:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647c879d6edf0f5e813f77db6dc1a1ecbbe05867" translate="yes" xml:space="preserve">
          <source>The for-in construct transparently uses &lt;code&gt;Iterator&lt;/code&gt; to test for the end of the iteration, and to get each item (or &lt;em&gt;element&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf1b31d67490347cbb6ae1f9185fdbbf85f595f" translate="yes" xml:space="preserve">
          <source>The format for specifying the list of classes is the same as used for specifying &lt;a href=&quot;targets&quot;&gt;targets&lt;/a&gt;. However, as a library cannot be used as a metadata annotation in Dart, adding a library to the list of &lt;a href=&quot;metatargets&quot;&gt;metaTargets&lt;/a&gt; has no effect. In particular, adding a library to &lt;a href=&quot;metatargets&quot;&gt;metaTargets&lt;/a&gt; does not make the library's classes valid metadata annotations to enable reflection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7462ed2a28dd491d4103362efab302d6ceb2d5a9" translate="yes" xml:space="preserve">
          <source>The format is &lt;code&gt;yyyy-MM-ddTHH:mm:ss.mmmuuuZ&lt;/code&gt; for UTC time, and &lt;code&gt;yyyy-MM-ddTHH:mm:ss.mmmuuu&lt;/code&gt; (no trailing &quot;Z&quot;) for local/non-UTC time, where:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ea7c584d7964db8fa93b8aff98cfca858f8b74" translate="yes" xml:space="preserve">
          <source>The fragment component is set through &lt;code&gt;fragment&lt;/code&gt;. It should be a valid URI fragment, but invalid characters other than general delimiters, are escaped if necessary. If &lt;code&gt;fragment&lt;/code&gt; is omitted or &lt;code&gt;null&lt;/code&gt;, the URI has no fragment part.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b591aa3d22b6ef32b710908d3ff20b6f8e190dbc" translate="yes" xml:space="preserve">
          <source>The fully-qualified name for this Dart language entity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1218793048e8b31020e423545475b1513b3768b2" translate="yes" xml:space="preserve">
          <source>The fully-qualified name for this Dart language entity. &lt;a href=&quot;declarationmirror/qualifiedname&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5719059aaf0a7811a9c1b6bbbf746d3aa10ea4" translate="yes" xml:space="preserve">
          <source>The function associated with an implicit closure of a function is that function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0220d24198a0ef1a8295041004c21de710972214" translate="yes" xml:space="preserve">
          <source>The function associated with an instance of a class that has a &lt;code&gt;call&lt;/code&gt; method is that &lt;code&gt;call&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abc957d40dd50144d407475e4dd26a8c60ed47e" translate="yes" xml:space="preserve">
          <source>The function defined below converts each word in a string to simplified 'pig latin' using &lt;a href=&quot;replaceallmapped&quot;&gt;replaceAllMapped&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5791016e025fd6696a4985062f00d7baa70e89a3" translate="yes" xml:space="preserve">
          <source>The function must be a top-level function or a static method that can be called with a single argument, that is, a compile-time constant function value which accepts at least one positional parameter and has at most one required positional parameter. The function may accept any number of optional parameters, as long as it &lt;em&gt;can&lt;/em&gt; be called with just a single argument. The function must not be the value of a function expression or an instance method tear-off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d29eea4bd00b64e69236ab4af313a57f7b94546" translate="yes" xml:space="preserve">
          <source>The function must not be called again until the future returned by a previous call is completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7970b93f0ca8407e807a14a3b8052c9b45d74817" translate="yes" xml:space="preserve">
          <source>The function parses a subset of ISO 8601 which includes the subset accepted by RFC 3339.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccf64ab9b1553ce192ec214742a82064a22d00a" translate="yes" xml:space="preserve">
          <source>The function returns a &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; which should complete when the authentication has been resolved. If credentials cannot be provided the &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; should complete with &lt;code&gt;false&lt;/code&gt;. If credentials are available the function should add these using &lt;a href=&quot;addcredentials&quot;&gt;addCredentials&lt;/a&gt; before completing the &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; with the value &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3623b182e130d04bb8d0a68351d50feaf95ac7" translate="yes" xml:space="preserve">
          <source>The function returns a &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; which should complete when the authentication has been resolved. If credentials cannot be provided the &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; should complete with &lt;code&gt;false&lt;/code&gt;. If credentials are available the function should add these using &lt;a href=&quot;addproxycredentials&quot;&gt;addProxyCredentials&lt;/a&gt; before completing the &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; with the value &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15477cd57fc70afb56fe1d3297f285f8e43c8551" translate="yes" xml:space="preserve">
          <source>The future for &lt;a href=&quot;httpclientrequest-class&quot;&gt;HttpClientRequest&lt;/a&gt; is created by methods such as &lt;a href=&quot;httpclient/geturl&quot;&gt;getUrl&lt;/a&gt; and &lt;a href=&quot;httpclient/open&quot;&gt;open&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89fa8b1adfaed174d059d3d94902efa5a8620bfc" translate="yes" xml:space="preserve">
          <source>The future returned by this call, &lt;code&gt;f&lt;/code&gt;, will complete the same way as this future unless an error occurs in the &lt;code&gt;action&lt;/code&gt; call, or in a &lt;a href=&quot;../future-class&quot;&gt;Future&lt;/a&gt; returned by the &lt;code&gt;action&lt;/code&gt; call. If the call to &lt;code&gt;action&lt;/code&gt; does not return a future, its return value is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8774224de13d045950ab3e1b9aa118245ccac3f" translate="yes" xml:space="preserve">
          <source>The future that is completed by this completer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0976303cb5e6337bccd3670d2afb80f100de01" translate="yes" xml:space="preserve">
          <source>The future that is completed by this completer. &lt;a href=&quot;completer/future&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
