<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="en" datatype="htmlbody" original="chef">
    <body>
      <group id="chef">
        <trans-unit id="6067a41244fa02806d0f404a6a500cd9a6cdd535" translate="yes" xml:space="preserve">
          <source>At this point, the new host should be synchronizing with the secondary back-end server. The secondary back-end server will forget all about the data it was missing from the now-gone primary back-end server, and the process of bringing the Chef server back online can begin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59dfe7f072e09c06cb61f4008964a9e6a9385d9" translate="yes" xml:space="preserve">
          <source>At this time, only the users &lt;code&gt;sean_horn&lt;/code&gt; and &lt;code&gt;angle&lt;/code&gt; are authorized to read and manage the vault.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ab9163a8ceb29e3695cb884b95663dbb239b88" translate="yes" xml:space="preserve">
          <source>Atomic File Updates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e899a441fa17a106696c125382340da1f953bd" translate="yes" xml:space="preserve">
          <source>Atomic updates are enabled by default. They can be managed globally using the &lt;code&gt;file_atomic_update&lt;/code&gt; setting in the client.rb file. They can be managed on a per-resource basis using the &lt;code&gt;atomic_update&lt;/code&gt; property that is available with the &lt;strong&gt;cookbook_file&lt;/strong&gt;, &lt;strong&gt;file&lt;/strong&gt;, &lt;strong&gt;remote_file&lt;/strong&gt;, and &lt;strong&gt;template&lt;/strong&gt; resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7fc053c82238599e8067922471eb420fbbf6026" translate="yes" xml:space="preserve">
          <source>Atomic updates are used with &lt;strong&gt;file&lt;/strong&gt;-based resources to help ensure that file updates can be made when updating a binary or if disk space runs out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c9b01cbc44619c374487e28eb3c03839f456eb" translate="yes" xml:space="preserve">
          <source>Attempting to take over as the primary Chef server for the DRBD device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a086d942884a301b827479029ba19c2746237425" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="translated">Attribute</target>
        </trans-unit>
        <trans-unit id="5809fc789931a8b3a07d65dd0f9460793372546a" translate="yes" xml:space="preserve">
          <source>Attribute Evaluation Order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77af70551e42ecdfacd2bd179132c7e56fc1b08c" translate="yes" xml:space="preserve">
          <source>Attribute Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99fc97a1f7c210260680a5b60a282a0c7d9d2de" translate="yes" xml:space="preserve">
          <source>Attribute Persistence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f439ff4e18ae922bccee721044529af94b8f4f3b" translate="yes" xml:space="preserve">
          <source>Attribute Precedence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7b1b0061d717ceef36eaead8161e0baf0ff1be" translate="yes" xml:space="preserve">
          <source>Attribute Sources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7200477de9f90bdbdcfe2706e7c5cb9ade5e08da" translate="yes" xml:space="preserve">
          <source>Attribute Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4f7e4e3b34c76cbba2b04d073edb6d2fe857a8" translate="yes" xml:space="preserve">
          <source>Attribute Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7dc845d8d36204a8be50543b3dac6d531fc0aa0" translate="yes" xml:space="preserve">
          <source>Attribute files (in cookbooks)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609a08d35568d128cff8d518c3d1fa0a0310b59d" translate="yes" xml:space="preserve">
          <source>Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9a40eab9da175a6d3d23dc3899f181cd09a4f8" translate="yes" xml:space="preserve">
          <source>Attribute precedence, when viewed as a table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe5f18712254009ad829e3487d7a7aa92224178" translate="yes" xml:space="preserve">
          <source>Attribute values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="21fa130a26fa5adcc94b8ddeb1e5b42dc30557c8" translate="yes" xml:space="preserve">
          <source>Attributes are always applied by the chef-client in the following order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5134bd448c6e81f4bd98af95eeda28ac49f7b4c2" translate="yes" xml:space="preserve">
          <source>Attributes are defined by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ee0be748cbf871a8fa4ca3eb2ec5f5324388c4" translate="yes" xml:space="preserve">
          <source>Attributes are provided to the chef-client from the following locations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd5bb0914abbfdc64b5eac84eb9921f6928083a" translate="yes" xml:space="preserve">
          <source>Attributes are typically defined in cookbooks, recipes, roles, and environments. These attributes are rolled-up to the node level during a chef-client run. A recipe can store attribute values using a multi-level Hash or array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdaeb6eda2cbbd47ab00e089f60a4539a6377cf7" translate="yes" xml:space="preserve">
          <source>Attributes are whitelisted by attribute type, with each attribute type being whitelisted independently. Each attribute type&amp;mdash;&lt;code&gt;automatic&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;, and &lt;code&gt;override&lt;/code&gt;&amp;mdash;may define whitelists by using the following settings in the client.rb file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577c3be005618e163a94cffa1a6608265d49e096" translate="yes" xml:space="preserve">
          <source>Attributes can be configured in cookbooks (attribute files and recipes), roles, and environments. In addition, Ohai collects attribute data about each node at the start of the chef-client run. See &lt;a href=&quot;https://docs.chef.io/attributes.html&quot;&gt;https://docs.chef.io/attributes.html&lt;/a&gt; for more information about how all of these attributes fit together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156a413c6e8bb3ccdd706df06d8eacc012cff96c" translate="yes" xml:space="preserve">
          <source>Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31458a40e8d1b0dabc0e735cebc8396eb0d6a191" translate="yes" xml:space="preserve">
          <source>Attributes that are collected by Ohai are automatic attributes, in that these attributes are used by the chef-client to ensure that these attributes remain unchanged after the chef-client is done configuring the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be82aec0f2a97d56f68b7e603805db1a8754af10" translate="yes" xml:space="preserve">
          <source>Attributes that should be saved by a node may be whitelisted in the client.rb file. The whitelist is a Hash of keys that specify each attribute to be saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5991165ff7e4c219905623028b74233b72e1cfff" translate="yes" xml:space="preserve">
          <source>Authenticated API Requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1acfa55eb1476c86c5c4a68f256a67b25289ab" translate="yes" xml:space="preserve">
          <source>Authentication</source>
          <target state="translated">Authentication</target>
        </trans-unit>
        <trans-unit id="e9a482c3e6fdbaf6f0ce7ac1850719d22739b824" translate="yes" xml:space="preserve">
          <source>Authentication Headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4208b7d5916b6e981c4115bba82715936a4a135a" translate="yes" xml:space="preserve">
          <source>Authentication or authorization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12624bb509e41c5e9e239fc581c27ccd77c4112f" translate="yes" xml:space="preserve">
          <source>Authentication to the Chef server occurs when a specific set of HTTP headers are signed using a private key that is associated with the machine from which the request is made. The request is authorized if the Chef server can verify the signature using the public key. Only authorized actions are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e919dd3548ee21af2b234bad6ddb01192e169d38" translate="yes" xml:space="preserve">
          <source>Authentication, Authorization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e25ce007aa95ea2ea8b158aee9c630a32ea5616" translate="yes" xml:space="preserve">
          <source>Authorization</source>
          <target state="translated">Authorization</target>
        </trans-unit>
        <trans-unit id="6665e344ddd5f4f3c3b0845e8f46eb325337d350" translate="yes" xml:space="preserve">
          <source>Automatic (Ohai)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad323278039669f3f916bc62c7c7fc17b075537d" translate="yes" xml:space="preserve">
          <source>Automatic Proxy Config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ccc740c95deecb7012696544174ab11024ce93a" translate="yes" xml:space="preserve">
          <source>Automatically handles authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a129f1f55f313122fe7dafb7ef1113a6642b3d70" translate="yes" xml:space="preserve">
          <source>Automatically supports why-run mode, unlike custom resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba300730fa9fb6b6229a4d5ed08ab0455ad4a3d" translate="yes" xml:space="preserve">
          <source>Available Memory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2371fe4ccb3f3ccf8c4302e9f03e65d17c5466" translate="yes" xml:space="preserve">
          <source>Avoid the following patterns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6488e9f997b0ee6944f5c9326c56f3a166328c" translate="yes" xml:space="preserve">
          <source>Back End</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdfea2af9997ba09a816ece6501fca7c023e89e8" translate="yes" xml:space="preserve">
          <source>Back-end machines are scaled vertically by adding memory, processing power, and faster disks to increase throughput, by adding faster disks and dedicated network interface cards to increase the reliability of DRBD and the responsiveness of the Chef server. Failover is achieved using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940abf9ad3d7c633569d3f3529df53dfdb5b4837" translate="yes" xml:space="preserve">
          <source>Back-end machines handle data storage and retrieval, messaging and routing, analytics processing, and search. Back-end machines should be configured for failover using block level replication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2759124b25ea67d5a5f358b1fadabe1f30b249b5" translate="yes" xml:space="preserve">
          <source>Back-end server #1 fails gracefully (all data is synced)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc330d5d3fdb66614bfc685e03599af7e41c6930" translate="yes" xml:space="preserve">
          <source>Back-end server #1 hard fails badly (unsynced data)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f315bfee58c6e531615c7454b4c241a8007f343" translate="yes" xml:space="preserve">
          <source>Back-end server #2 fails gracefully (all data is synced)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a1f6fa4123e416399e2abbe6bed6ee5b34a574" translate="yes" xml:space="preserve">
          <source>Back-end server #2 hard fails badly (unsynced data)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e758ca64563fdd62965a2b97b76d555b1a70d938" translate="yes" xml:space="preserve">
          <source>Backend</source>
          <target state="translated">Backend</target>
        </trans-unit>
        <trans-unit id="2ebda77533302b4c6618b180e6d9de88e4d4cae3" translate="yes" xml:space="preserve">
          <source>Backend servers &lt;a href=&quot;http://www.drbd.org/users-guide/s-prepare-network.html&quot;&gt;should have a dedicated connection&lt;/a&gt;. This is required for replication between the two servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7d9d2c30522cdf997cdc45141c1917c87b4597" translate="yes" xml:space="preserve">
          <source>Backend servers make use of a single Amazon Elastic Block Store (EBS) volume.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e382920577fc766a77124fe6edd508d0fe43ef89" translate="yes" xml:space="preserve">
          <source>Backend servers will share a virtual IP address that must also be accessible from each frontend server. This virtual IP address is created and managed by the Chef server, but will also need to be added to the DNS so that all servers in the high availability configuration may access it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd96994d01e723dd6f9b0bdb6119722dbeb9faf0" translate="yes" xml:space="preserve">
          <source>Backup</source>
          <target state="translated">Backup</target>
        </trans-unit>
        <trans-unit id="e29ccd471022564865582470f68008a844ad7749" translate="yes" xml:space="preserve">
          <source>Backup / Restore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5932464fe7ee7685cdde1f28a54e89455da1784" translate="yes" xml:space="preserve">
          <source>Backup and Restore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90802fdf2f907c32a8bb0c3766a12243d8ce33b7" translate="yes" xml:space="preserve">
          <source>Backup the /etc/opscode and /var/opt/opscode directories and include the postgres export file as root</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faeadc1ed0e5db8d070a56c237b12a320ad81f27" translate="yes" xml:space="preserve">
          <source>Bad request. The contents of the request are not formatted correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60b68a177e02f02c7f8645c1f5f6ef138e2f089" translate="yes" xml:space="preserve">
          <source>Bad request. The object has already been committed or one (or more) of the objects were not properly uploaded. The payload does not contain a well-formed &lt;code&gt;checksums&lt;/code&gt; parameter that is a hash containing a key for each checksum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2c96dacf00c451ef465f6115a45a20bccf1256" translate="yes" xml:space="preserve">
          <source>Basic</source>
          <target state="translated">Basic</target>
        </trans-unit>
        <trans-unit id="c2224f8a107d36c0de776aadc7b40c433729805c" translate="yes" xml:space="preserve">
          <source>Basically, what this means is that when the primary becomes unavailable to the secondary without an explicit takeover being initiated, the secondary will assume that it itself is the wrong, &lt;code&gt;split-brained&lt;/code&gt; host, and is the one unconnected and incorrect. It will take no automatic action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee0bed171e9a04da4d52b6adfbe2ba4971aacd4" translate="yes" xml:space="preserve">
          <source>Be careful when using the &lt;code&gt;:delete_key&lt;/code&gt; action with the &lt;code&gt;recursive&lt;/code&gt; attribute. This will delete the registry key, all of its values and all of the names, types, and data associated with them. This cannot be undone by the chef-client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2114cc22852e2d98c4fd075e4574afadac5fd71" translate="yes" xml:space="preserve">
          <source>Be configured in either RAID1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e497a8ccc57ee52a23183391423a8920102f2464" translate="yes" xml:space="preserve">
          <source>Be configured in either RAID1 or RAID5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eefee9f6ccf1c5a7d16c6e5f644985ff6b0510c" translate="yes" xml:space="preserve">
          <source>Be identical across both of your backend servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf1e45c3bad60afcca8d9b5c6d98bb05e3bdae8" translate="yes" xml:space="preserve">
          <source>Be inspected for instances of a) the &lt;code&gt;Chef::Provider&lt;/code&gt; base class, and then b) for the presence of any core resources from the chef-client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d246fbf9613b687cb0533026edb0d5e000495b" translate="yes" xml:space="preserve">
          <source>Be sure to back up the Chef server data before starting the upgrade process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2521f2374fb6c929af4a4da62adddb515b9f49fa" translate="yes" xml:space="preserve">
          <source>Be updated to use the &lt;code&gt;LWRPBase&lt;/code&gt; base class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5456045131d85e39ab0e516777afc514fc121c2" translate="yes" xml:space="preserve">
          <source>Because an action is not explicitly specified, the chef-client will use the default action: &lt;code&gt;:deploy&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677e84929e7f7e325068ef76544bb0aed72d2938" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;inherits&lt;/code&gt; property is not specified, the chef-client will default it to &lt;code&gt;true&lt;/code&gt;, which will ensure that security settings for existing files remain unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68377b428dda6afda1febc21acab204801dff74c" translate="yes" xml:space="preserve">
          <source>Because the Chef server is composed of many different services that work together to create a functioning system, this step may take a few minutes to complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e976475cded20fd575a0ed7d11a5f74185e1e6" translate="yes" xml:space="preserve">
          <source>Because the FQDN has already been configured, do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e85f8849005356d69d8f39e0572f4ebb0901e04" translate="yes" xml:space="preserve">
          <source>Because the Recipe DSL is a Ruby DSL, then anything that can be done using Ruby can also be done in a recipe, including &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;case&lt;/code&gt; statements, using the &lt;code&gt;include?&lt;/code&gt; Ruby method, including recipes in recipes, and checking for dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b11f9d78f71498a16039269ca563e32fad544d7" translate="yes" xml:space="preserve">
          <source>Because the default value for &lt;code&gt;link_type&lt;/code&gt; is symbolic, and because properties that are not specified in the resource block will be assigned their default values, the following example creates a symbolic link:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192f0563907f2e6ff425c0188abbe8de39316a7d" translate="yes" xml:space="preserve">
          <source>Because the first resource (&lt;code&gt;file[/tmp/ohai2u_shef]&lt;/code&gt;) is still in the run-list, it gets executed again. And because that file already exists, the chef-client doesn&amp;rsquo;t attempt to re-create it. Finally, the files were created using the &lt;code&gt;ls&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb3d429b1e5952fb4cf78d13559ab5529e871cd9" translate="yes" xml:space="preserve">
          <source>Because the two &lt;code&gt;control_group&lt;/code&gt; block names are identical, the chef-client will return an exception similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1cdedaff0a7f637c251c3330ed591f24d4e860" translate="yes" xml:space="preserve">
          <source>Before adding any settings to the knife.rb file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f223474c0a576f16b0e0dea39f8fbdd70856cbde" translate="yes" xml:space="preserve">
          <source>Before data can be uploaded, an organization must be created. When prompted, enter the organization name, and then a full organization name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4c3950b338d955bc3a80ebed3b9eeb44d13376" translate="yes" xml:space="preserve">
          <source>Before installing the Chef server software, perform the following steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcde53847d94d5aa88fdcaca03435562f9b18a73" translate="yes" xml:space="preserve">
          <source>Before installing the Chef server, ensure that each machine has the following installed and configured properly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceee650cd2d37cf247f9b9f709bb8a21065e9922" translate="yes" xml:space="preserve">
          <source>Before this data is indexed on the Chef server, the nested fields are extracted into the top level, similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf261e6bedfe18c4f784c91861e48206adfdd1e" translate="yes" xml:space="preserve">
          <source>Before upgrading, please view the notes for more background on the upgrade process from Enterprise Chef 11 to Chef server 12.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e04cc658b4e6b588ca22184fe128c12ba8d1fe" translate="yes" xml:space="preserve">
          <source>Bind Redis to the specified IP address. Default value: &lt;code&gt;'127.0.0.1'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40cbafebf909ffac8e3da68ec0917a85cb11960d" translate="yes" xml:space="preserve">
          <source>Block Arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d88689cdf329b1eacc73297a0d6a810dd4c7635" translate="yes" xml:space="preserve">
          <source>Bookshelf</source>
          <target state="translated">Bookshelf</target>
        </trans-unit>
        <trans-unit id="70d1c8e72de85027bd5f9ea73cc646df45e10526" translate="yes" xml:space="preserve">
          <source>Bookshelf is used to store cookbook content&amp;mdash;files, templates, and so on&amp;mdash;that have been uploaded to the Chef server as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, Bookshelf will store that file only once. The cookbook content managed by Bookshelf is stored in flat files and is separated from the Chef server and search index repositories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9839b1ebfb397e3fee90226677a441224551a23a" translate="yes" xml:space="preserve">
          <source>Bootstrap Operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d748ae838f614a39e813a5861c654dbb040d67" translate="yes" xml:space="preserve">
          <source>Bootstrap a Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857758c7b3f00221dfbcbb0c2997ccc285c57c68" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;opscode&lt;/code&gt; and &lt;code&gt;opscode-pgsql&lt;/code&gt; user and group found on the new server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03abe434834e4030c337bf94d82adb24e50eb6b" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;opscode&lt;/code&gt; and &lt;code&gt;opscode-pgsql&lt;/code&gt; user and group not found on the new server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b09c065a3af7dcaec254afc2a6393188a41205f" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;raise&lt;/code&gt; and &lt;code&gt;fail&lt;/code&gt; behave the same way when triggering unhandled exceptions and may be used interchangeably.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e88ce305063bc9cacc133c34ff14dc8d9b93824" translate="yes" xml:space="preserve">
          <source>Both hosts are up as secondary, and the Chef server is unhappy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9d90dc82793410350d5e4af3482a6177f71713" translate="yes" xml:space="preserve">
          <source>Both of these files are similar. They share the same structure. When an attribute is of the same type of data, such as a hash or an array, that data is merged when the attribute precedence levels are the same and is replaced when the attribute precedence levels are different.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6068af78fcbf298f0c59a2d87ea52b879db5c847" translate="yes" xml:space="preserve">
          <source>Both of these options must be available at the top-level within the callback, along with any assigned values that will be used later in the callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2035cd9475ef398d5225b2fb1870182599af18" translate="yes" xml:space="preserve">
          <source>Both the chef-client and knife use the Chef server API when communicating with the Chef server. The chef-validator uses the Chef server API, but only during the first chef-client run on a node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b87666b54b22b2b5afcdac2d68a8a6c7870a81f" translate="yes" xml:space="preserve">
          <source>Both types of handlers can be used to gather data about a chef-client run and can provide rich levels of data about all types of usage, which can be used later for trending and analysis across the entire organization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7c39f3cd6a2d3a1a613e2fb0c7d67a7ea79430" translate="yes" xml:space="preserve">
          <source>Branch Tracking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18cc47359291f3abb476de2bd03934c481c47ec" translate="yes" xml:space="preserve">
          <source>Bring up the network interface on boot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778a6c613c015f4adafa9c80b73833cafd60643c" translate="yes" xml:space="preserve">
          <source>Bring up the network interface when its parent interface is brought up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7343059558ded0b0239600725d2ea2afb9113671" translate="yes" xml:space="preserve">
          <source>Browse to the top level of the chef-repo and enter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6becbc85d949fef6ed475e593c70120afe2cb5a9" translate="yes" xml:space="preserve">
          <source>Build or execute a command line against a local file. Set to &lt;code&gt;false&lt;/code&gt; to build or execute against a remote file. Default: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5d6cb79dff33d19cf255052a7c6a526d9ae401" translate="yes" xml:space="preserve">
          <source>Building the node object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0f6aee772fa59b7339f89ff144fd7e441ba40e" translate="yes" xml:space="preserve">
          <source>Builds a &lt;code&gt;.gemrc&lt;/code&gt; file based on a &lt;code&gt;gemrc.erb&lt;/code&gt; template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bcfe872db7486935e1ec6cc537ec1e6a48045b2" translate="yes" xml:space="preserve">
          <source>Bumping the version number as appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4d2ccd13ffe2b3ffda5f6be46d01a658768ff8" translate="yes" xml:space="preserve">
          <source>But that is not very efficient, especially because most of them are identical. The deep merge capabilities of the chef-client allows attributes to be layered across cookbooks, recipes, roles, and environments. This allows an attribute to be reused across nodes, making use of default attributes set at the cookbook level, but also providing a way for certain attributes (with a higher attribute precedence) to be applied only when they are supposed to be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2705406de2f662b10cbd3f03b2189fcafcdb645" translate="yes" xml:space="preserve">
          <source>But what if all of the web servers are not the same? What if some of the web servers required a single attribute to have a different value? You could store these settings in two locations, once just like the preceding example and once just like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bdcc5556978f1b366f450955e7b98990429e145" translate="yes" xml:space="preserve">
          <source>But with this example, the &lt;code&gt;group&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, and &lt;code&gt;owner&lt;/code&gt; attribute values will only be applied to &lt;code&gt;/baz&lt;/code&gt;. Which is fine, if that&amp;rsquo;s what you want. But most of the time, when the entire &lt;code&gt;/foo/bar/baz&lt;/code&gt; directory structure is not there, you must be explicit about each directory. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5512a52c12c22842da0eeb1a761b4a1e9ff20987" translate="yes" xml:space="preserve">
          <source>But, the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96136ddf45172c48f4a591ef408f71a825d2ab6d" translate="yes" xml:space="preserve">
          <source>By Subcommand</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c134f1d4bc6ab786d72f4b398a6d87c30ab5569" translate="yes" xml:space="preserve">
          <source>By adding a start handler to the &lt;strong&gt;chef-client&lt;/strong&gt; cookbook, which installs the handler on the node so that it is available to the chef-client at the start of the chef-client run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974cc898b3b8be7ed9691860804ee8514243fee1" translate="yes" xml:space="preserve">
          <source>By adding the &lt;strong&gt;chef_handler&lt;/strong&gt; resource to a recipe, and then adding that recipe to the run-list for a node. (The &lt;strong&gt;chef_handler&lt;/strong&gt; resource is available from the &lt;strong&gt;chef_handler&lt;/strong&gt; cookbook.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a558e0981c24356985f21cb25bc197711d72c158" translate="yes" xml:space="preserve">
          <source>By adding the following lines of Ruby code to either the client.rb file or the solo.rb file, depending on how the chef-client is being run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90ced6e70b965534c561bea92689ff8f37e3503" translate="yes" xml:space="preserve">
          <source>By adding the handler to one of the following settings in the node&amp;rsquo;s client.rb file: &lt;code&gt;exception_handlers&lt;/code&gt; and/or &lt;code&gt;report_handlers&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9655186f940d77bf0f58c90cb3ab2e7fb1cb06b9" translate="yes" xml:space="preserve">
          <source>By adding the handler to one of the following settings in the node&amp;rsquo;s client.rb file: &lt;code&gt;start_handlers&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee4357f4459067fae66aaebf094ac76b1753912" translate="yes" xml:space="preserve">
          <source>By combining wildcards with range-matching patterns and wildcard queries, it is possible to perform very powerful searches, such as using the vendor part of the MAC address to find every node that has a network card made by the specified vendor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5e71ebfa3aeb72ae98f51660e74a37975b03f2" translate="yes" xml:space="preserve">
          <source>By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The &lt;code&gt;inherits&lt;/code&gt; property can be used to specifically tell the chef-client to apply (or not apply) inherited rights from its parent directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9afd4fcbe5ab7cddf395784c81b360459c3ec67c" translate="yes" xml:space="preserve">
          <source>By default, a partial template file is assumed to be located in the cookbook that contains the top-level template. Use this option to specify the path to a different cookbook</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95fa357bbb924ddee6d97d5db6b4d0a81db973f0" translate="yes" xml:space="preserve">
          <source>By default, a partial template file is identified by its file name. Use this option to specify a different name or a local path to use (instead of the name of the partial template file)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65122aaf9200a934cc31a6c9e618db8d549e30a6" translate="yes" xml:space="preserve">
          <source>By default, accounts required by the Chef server are created during setup. If your environment has restrictions on the creation of local user and group accounts that will prevent these accounts from being created automatically during setup, you will need to create these accounts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531033f1d5c8c124b92373d2ce5162f1505a5ed1" translate="yes" xml:space="preserve">
          <source>By default, chef-shell loads in standalone mode and does not connect to the Chef server. The chef-shell can be run as a chef-client to verify functionality that is only available when the chef-client connects to the Chef server, such as search functionality or accessing data stored in data bags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd656f79a82d9dcddd3bd1d43bbb822639cb8ac3" translate="yes" xml:space="preserve">
          <source>By default, every log resource that executes will count as an updated resource in the updated resource count at the end of a Chef run. You can disable this behavior by adding &lt;code&gt;count_log_resource_updates false&lt;/code&gt; to your Chef &lt;code&gt;client.rb&lt;/code&gt; configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef35f941166c67f18f63df8baa46957dd47f251c" translate="yes" xml:space="preserve">
          <source>By default, notifications are &lt;code&gt;:delayed&lt;/code&gt;, that is they are queued up as they are triggered, and then executed at the very end of a chef-client run. To run an action immediately, use &lt;code&gt;:immediately&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71133340820cb57c31c7d7ea0d547077b21284bd" translate="yes" xml:space="preserve">
          <source>By default, runit will restart services automatically when the services fail. Therefore, runit may report the status of a service as &lt;code&gt;run:&lt;/code&gt; even when there is an issue with that service. When investigating why a particular service is not running as it should be, look for the services with the shortest uptimes. For example, the list below indicates that the &lt;strong&gt;opscode-erchef&lt;/strong&gt; should be investigated further:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d245f87d35d89131b4577983776e035c3ab8d2cf" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;public_key_read_access&lt;/code&gt; assigns all members of the &lt;code&gt;users&lt;/code&gt; and &lt;code&gt;clients&lt;/code&gt; group permission to these endpoints:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589c9cb21f16f8bc8a8ab99cd5d984da113ce0a2" translate="yes" xml:space="preserve">
          <source>By default, the Chef server uses the FQDN to determine the common name (&lt;code&gt;CN&lt;/code&gt;). If the FQDN of the Chef server is longer than 64 characters, the &lt;code&gt;reconfigure&lt;/code&gt; command will not fail, but an empty certificate file will be created. Nginx will not start if a certificate file is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48abd51959093623111d5a222cc28b5ea1050ca4" translate="yes" xml:space="preserve">
          <source>By defining multiple paths for multiple locations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ebd7e78051f9281ced1a6cbe0afd0e4a0060a6" translate="yes" xml:space="preserve">
          <source>By defining those same multiple paths as an array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54cfca649e0c8ba9b58e8082aab63c23e4f20683" translate="yes" xml:space="preserve">
          <source>By downloading the chef-client to the target node, and then running the Microsoft Installer Package (MSI) locally</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b9ab365481633d69526f5c027b2a66d544d2d1" translate="yes" xml:space="preserve">
          <source>By itself (i.e. a chef-client run that does not build the resource collection or converge the node)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0698f5f15d41ca0e9e48bc71228d09cd085acc4f" translate="yes" xml:space="preserve">
          <source>By specifying the path to a valid Windows PowerShell data file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b93d519bf2f31ed0c552cbc2d796513f5ed6fc" translate="yes" xml:space="preserve">
          <source>By the time you get the new node is up, the secondary back-end server may have taken itself into &lt;code&gt;standalone&lt;/code&gt; mode, which means that it is no longer listening on the network port. In this situation, run the following commands to get the secondary back-end server to talk to the new node:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f546d831a7122f39b5e308d26dfcf03fe0c39b" translate="yes" xml:space="preserve">
          <source>By using FTP:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39bd9acbfc114872b50d83381ea2b800f8294aa6" translate="yes" xml:space="preserve">
          <source>By using a Microsoft Windows UNC:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e9b3165d3a4be4136e2d1a23f57926f630bb14" translate="yes" xml:space="preserve">
          <source>By using a local path:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef630d370e814978b923822cd9fb13a3c896328" translate="yes" xml:space="preserve">
          <source>By using a node attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="932fec424a7307d12dad0333a80c03453bcd6ec9" translate="yes" xml:space="preserve">
          <source>By using an existing process already in place for managing Microsoft Windows machines, such as System Center</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e0de7c041ecee0deabf84042982a2abf9202d9" translate="yes" xml:space="preserve">
          <source>By using attributes to define paths:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81216f09c01384a7f53937edba6154a5cd115829" translate="yes" xml:space="preserve">
          <source>By using the &lt;a href=&quot;resource_chef_handler&quot;&gt;chef_handler&lt;/a&gt; resource in a recipe, similar to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573999d93c72797e6db40a1e2dfa25478dd37344" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;configuration_data&lt;/code&gt; attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f2798d154d06e1e10a1c3fed3759c63f53d663" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;configuration_data_script&lt;/code&gt; attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b99b0cb8fc12026c9984c49701d01eb96667178" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;render&lt;/code&gt; method in the template file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de8e85d6a034daf568f9525632a018f4cdd6a96" translate="yes" xml:space="preserve">
          <source>By using the &lt;strong&gt;chef_handler&lt;/strong&gt; resource in a recipe, similar to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c043fa42df9d01a7ed495ec7adc3e44e71355a6" translate="yes" xml:space="preserve">
          <source>By using the &lt;strong&gt;template&lt;/strong&gt; resource and the &lt;code&gt;variables&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ecd3843b844d7c6c4b8eabf432c192a1af7d7c" translate="yes" xml:space="preserve">
          <source>By using the knife windows plugin to bootstrap the chef-client; this process requires the target node be available via SSH (port 22) or by using the HTTP or HTTPS ports that are required by WinRM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979b5fd223f38d19edf509197e67fb7103245c3e" translate="yes" xml:space="preserve">
          <source>Bypass a prompt in the terminal and agree that you want to disable the Chef server, and require credential rotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80211fd3da3c28a41840f34df3169e707409790" translate="yes" xml:space="preserve">
          <source>CCRs/min</source>
          <target state="translated">CCRs/min</target>
        </trans-unit>
        <trans-unit id="71f0f4da2e0f035e4478025bcf5334667baeb4b0" translate="yes" xml:space="preserve">
          <source>CPU data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34cdfac62150e2fe20a5b3313a6b5e4a2f4e289e" translate="yes" xml:space="preserve">
          <source>Call a Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ffaea2b17925a076b1e481ccfb5042e49a8fa70" translate="yes" xml:space="preserve">
          <source>Call a method on something with &lt;code&gt;.method_name()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42fb639b7313463881ed7d9bae34cc709237f03b" translate="yes" xml:space="preserve">
          <source>Callback</source>
          <target state="translated">Callback</target>
        </trans-unit>
        <trans-unit id="9fdc2cfe374fa5bde1e4e458854875e1709add1c" translate="yes" xml:space="preserve">
          <source>Callbacks</source>
          <target state="translated">Callbacks</target>
        </trans-unit>
        <trans-unit id="f80ba508d3cbb63a4b6411f9e0152418fc3ef30a" translate="yes" xml:space="preserve">
          <source>Campfire</source>
          <target state="translated">Campfire</target>
        </trans-unit>
        <trans-unit id="7f93695562d9938e07d645d8f9f71d0c89ec7ccf" translate="yes" xml:space="preserve">
          <source>Can be used with the &lt;code&gt;options&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c509c65f991420a5aa7ab0e7df72cf2edd66fc" translate="yes" xml:space="preserve">
          <source>Cancel a reboot request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f369afab5001840710e7fe04d7f7347fb439420" translate="yes" xml:space="preserve">
          <source>Cancel invite for User</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea6b14ab1b1d8b2d791ea4baebe2208c461a03f" translate="yes" xml:space="preserve">
          <source>Canceling a pending invite for a user can currently be completed using knife:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53304cda0905a08e57c700ce0ecf625f7f784051" translate="yes" xml:space="preserve">
          <source>Capacity Planning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c0c91d82388e7c626f9682d635f4067250f436" translate="yes" xml:space="preserve">
          <source>Cause a chef-client run to fail when the chef-client does not have administrator privileges in Microsoft Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c56cdd3fd53bdbb76fdb7bfb85fb2e87cd5fd96e" translate="yes" xml:space="preserve">
          <source>Cause knife to use the default value instead of asking a user to provide one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5f4e761d441db8b903bbd1a3f97573f9db1270" translate="yes" xml:space="preserve">
          <source>Cause the Chef server to connect to the LDAP server using SSL. Default value: &lt;code&gt;false&lt;/code&gt;. Must be &lt;code&gt;false&lt;/code&gt; when &lt;code&gt;ldap['tls_enabled']&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52eff7b22fe11f86eadebb4a4a10df91257e6cfa" translate="yes" xml:space="preserve">
          <source>Cause the chef-client run to fail when Reporting data cannot be sent to the Chef server (for any reason).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e895acc53b1d0a0af6c525021f60e76cdad52f48" translate="yes" xml:space="preserve">
          <source>Cause the chef-client to create a diff when changes are made to a file. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3bb85a309bf35ab8e50ebf3d3ce7b4d8964a3c" translate="yes" xml:space="preserve">
          <source>Cause the chef-client to detect and manage the source file for a symlink. Possible values: &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, or &lt;code&gt;false&lt;/code&gt;. When this value is set to &lt;code&gt;nil&lt;/code&gt;, the chef-client will manage a symlink&amp;rsquo;s source file and emit a warning. When this value is set to &lt;code&gt;true&lt;/code&gt;, the chef-client will manage a symlink&amp;rsquo;s source file and not emit a warning. Default value: &lt;code&gt;nil&lt;/code&gt;. The default value will be changed to &lt;code&gt;false&lt;/code&gt; in a future version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df769fc492b2d987e58f57acdcc3e78c88786e00" translate="yes" xml:space="preserve">
          <source>Cause the chef-client to not use chef local mode, but rather the original chef-solo mode. This is not recommended unless really required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12e66194782f565420f48723fc1320cc2f36816" translate="yes" xml:space="preserve">
          <source>Cause the chef-client to send data to the Chef server for use with Reporting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ad199d6352d3bb64db022bd0fbb0fcdea024f8" translate="yes" xml:space="preserve">
          <source>CentOS</source>
          <target state="translated">CentOS</target>
        </trans-unit>
        <trans-unit id="b46006710c2bc818e78bdb61b38fbd63d658b6ba" translate="yes" xml:space="preserve">
          <source>Centralized distribution of cookbooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b22d7e953f32628611912cfd9ba3ed0d4dbce3" translate="yes" xml:space="preserve">
          <source>Certain types of data&amp;mdash;passwords, user account data, and other sensitive items&amp;mdash;can be placed in data bags, which are located in a secure sub-area on the Chef server that can only be accessed by nodes that authenticate to the Chef server with the correct SSL certificates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e921239584eda1bcba00e1006f0e656b17e9f49a" translate="yes" xml:space="preserve">
          <source>Change Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49289db43e663a3df5e2c70714722ecc54895565" translate="yes" xml:space="preserve">
          <source>Change Password</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce060c5db8c5b313d67ae4bcec5cb9c6a94bf69" translate="yes" xml:space="preserve">
          <source>Changes Prior to Chef 12</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a931e47f4ceb32c80db6b924c655ccc4bca1b93" translate="yes" xml:space="preserve">
          <source>Changes to that file can then be made:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11ae2c2ce5831af15747dba9745be4fd5c396b5" translate="yes" xml:space="preserve">
          <source>Changing a password</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2ca570deaf7bff96db45c62df66042566b4b0f" translate="yes" xml:space="preserve">
          <source>Changing inherited rights can be expensive. Microsoft Windows will propagate rights to all children recursively due to inheritance. This is a normal aspect of Microsoft Windows, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9344a28c366f637fbf8cff2f9d27ef4255cf04" translate="yes" xml:space="preserve">
          <source>Changing this setting to &lt;code&gt;false&lt;/code&gt; may cause file corruption, data loss, or instability. Use the &lt;code&gt;atomic_update&lt;/code&gt; property on the &lt;strong&gt;cookbook_file&lt;/strong&gt;, &lt;strong&gt;file&lt;/strong&gt;, &lt;strong&gt;remote_file&lt;/strong&gt;, and &lt;strong&gt;template&lt;/strong&gt; resources to tune this behavior at the recipe level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0c937705783449ac0caf7b653d13de1fd94827" translate="yes" xml:space="preserve">
          <source>Check Conditions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f03ea955273bd2bfc584b16c9560de8c2ad9db" translate="yes" xml:space="preserve">
          <source>Check HA Status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ede8618bf9f6dbe47fadfde87c40535d522020" translate="yes" xml:space="preserve">
          <source>Check if the user has permission to the object type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89b5ee261169638893468de89ec64523e5dbd85" translate="yes" xml:space="preserve">
          <source>Check out a repo from master. Set to &lt;code&gt;false&lt;/code&gt; when using the &lt;code&gt;checkout_branch&lt;/code&gt; attribute to prevent the &lt;strong&gt;git&lt;/strong&gt; resource from attempting to check out master from master. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8163ac00cca429be43040ff67671671043f828" translate="yes" xml:space="preserve">
          <source>Check the local documentation or package repository for the distribution that is being used. For example, on Ubuntu 9.10-10.04, the &lt;code&gt;mkpasswd&lt;/code&gt; package is required and on Ubuntu 10.10+ the &lt;code&gt;whois&lt;/code&gt; package is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d523ccd072376b0193b67d4fcd0a8b94a89cc93f" translate="yes" xml:space="preserve">
          <source>Checks to see if the Amazon EC2 node has MySQL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46de8428aceba9e6f65b8b138ff5bea565618675" translate="yes" xml:space="preserve">
          <source>Chef</source>
          <target state="translated">Chef</target>
        </trans-unit>
        <trans-unit id="44933d6cd4c1712cb2d3b20d143ece643e46e2dd" translate="yes" xml:space="preserve">
          <source>Chef Analytics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436b7b3b66db3a3773058029c5c1a412802d2bc4" translate="yes" xml:space="preserve">
          <source>Chef Analytics has been replaced by Chef Automate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f419b13d197094e90be0d15449f34629a5a55b" translate="yes" xml:space="preserve">
          <source>Chef Analytics includes a powerful rules processing system that allows notifications to be generated based on observed events in the data stream, such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2918d92c7e5bcfc8c157acb0d9cabf974257add0" translate="yes" xml:space="preserve">
          <source>Chef Analytics includes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c483e6a533947909d227b8fa179758e0e1653a" translate="yes" xml:space="preserve">
          <source>Chef Analytics uses the same RabbitMQ service that is configured on the Chef server. When the Chef Analytics server is configured as a standalone server, the default settings for &lt;code&gt;rabbitmq['node_ip_address']&lt;/code&gt; and &lt;code&gt;rabbitmq['vip']&lt;/code&gt; must be updated. When the Chef Analytics server is configured as a standalone server, change this value to &lt;code&gt;0.0.0.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c6198591a2e2aab28d8f4935e2304f788f58a9" translate="yes" xml:space="preserve">
          <source>Chef Analytics uses the same RabbitMQ service that is configured on the Chef server. When the Chef Analytics server is configured as a standalone server, the default settings for &lt;code&gt;rabbitmq['node_ip_address']&lt;/code&gt; and &lt;code&gt;rabbitmq['vip']&lt;/code&gt; must be updated. When the Chef Analytics server is configured as a standalone server, change this value to the backend VIP address for the Chef server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333ec7dd692cccd6558515d375cf6b4506e3bb36" translate="yes" xml:space="preserve">
          <source>Chef Analytics uses the same RabbitMQ service that is configured on the Chef server. When the Chef Analytics server is configured as a standalone server, the default settings for &lt;code&gt;rabbitmq['node_ip_address']&lt;/code&gt; and &lt;code&gt;rabbitmq['vip']&lt;/code&gt; must be updated. When the Chef Analytics server is configured as a standalone server, this value should be updated to be the backend VIP address for the Chef server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01a3becd8c5134363fdb164939f7c21c1f0c14d" translate="yes" xml:space="preserve">
          <source>Chef Components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9267fb56b115ba895d54d66eeb0322dd48dcf4c3" translate="yes" xml:space="preserve">
          <source>Chef DK and Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6491416ad9a3780a7f26fa3e0dec2e8e0acba6e3" translate="yes" xml:space="preserve">
          <source>Chef Manage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d3415e01c3fe8ff978f0d276d3c846bdbb1efe" translate="yes" xml:space="preserve">
          <source>Chef Push Jobs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c838377b061b78a9a52e2ad3c67b45de5197d2a0" translate="yes" xml:space="preserve">
          <source>Chef Push Jobs Groups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fba7401bf7efe062bbfd2e8cbf221d95b385215" translate="yes" xml:space="preserve">
          <source>Chef Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e639133ee95bfc0a3962b8ca49ebba17e98c781" translate="yes" xml:space="preserve">
          <source>Chef Server / Manage the Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ed5aeef4670c42ea6b9799f38e8c580092740b" translate="yes" xml:space="preserve">
          <source>Chef Server / Setup &amp;amp; Config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9256666c4fdf5ae8fc2441221a62771e3980f2" translate="yes" xml:space="preserve">
          <source>Chef Server / Theory &amp;amp; Concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ac940c6fa7735c8b506aea212108d23494fe1b" translate="yes" xml:space="preserve">
          <source>Chef Server API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b13bf97053d1f07b081de35c734ab76ded2574" translate="yes" xml:space="preserve">
          <source>Chef Server Components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5e4988997d1b3b4c4ed70a48729769717afd7c" translate="yes" xml:space="preserve">
          <source>Chef Server Setting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9548f8b447540a6ab3bf3e547bace7e6f1081a49" translate="yes" xml:space="preserve">
          <source>Chef Style Guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3617e035312a4f2a8580de7faf9ebca9fe727fb" translate="yes" xml:space="preserve">
          <source>Chef Supermarket is the location in which community cookbooks are authored and maintained. Cookbooks that are part of the Chef Supermarket may be used by any Chef user. How community cookbooks are used varies from organization to organization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df67b3896afd21c42f54b4fc85c1a24cc2640586" translate="yes" xml:space="preserve">
          <source>Chef development kit: &lt;code&gt;/opt/chefdk/embedded/ssl/certs/cacert.pem&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e665fe22eeffaf18887443f1a4123ed904dd685c" translate="yes" xml:space="preserve">
          <source>Chef has many built-in resources that cover all of the most common actions across all of the most common platforms. You can build your own resources for handle any situation that isn&amp;rsquo;t covered by a built-in resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0a0dace5343a98f69a4ed906e6ea4c6c68d0aa" translate="yes" xml:space="preserve">
          <source>Chef has the following major components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e0af23c7b385e46b4222e528eedad6498db9f62" translate="yes" xml:space="preserve">
          <source>Chef includes two important command-line tools:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48698906b8290713f835868a29ff4a958db0c5a2" translate="yes" xml:space="preserve">
          <source>Chef is a powerful automation platform that transforms infrastructure into code. Whether you&amp;rsquo;re operating in the cloud, on-premises, or in a hybrid environment, Chef automates how infrastructure is configured, deployed, and managed across your network, no matter its size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7bba32d57f6bc9604c20e0ab09bd7be5dbf44c" translate="yes" xml:space="preserve">
          <source>Chef is a thin DSL (domain-specific language) built on top of Ruby. This approach allows Chef to provide just enough abstraction to make reasoning about your infrastructure easy. Chef includes a built-in taxonomy of all the basic resources one might configure on a system, plus a defined mechanism to extend that taxonomy using the full power of the Ruby language. Ruby was chosen because it provides the flexibility to use both the simple built-in taxonomy, as well as being able to handle any customization path your organization requires.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d802a309b939458bd1a7b5dec3b548a1ffdc7b7" translate="yes" xml:space="preserve">
          <source>Chef is maintained on GitHub. To contribute to Chef, such as submitting a pull request, requires using GitHub and git. The sections below describe how to use git to set up the Chef repository, keep it current and synchronized, and how to use branches to submit pull requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b75e74ff60b383b704bdab376c69a5581d337bc" translate="yes" xml:space="preserve">
          <source>Chef maintains a collection of cookbooks that are widely used by the community.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb767e0fbeea99e3cf4a96857e8ee309a5378a5" translate="yes" xml:space="preserve">
          <source>Chef maintains a large collection of cookbooks. In addition, there are thousands of cookbooks created and maintained by the community:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8ef3d9d049a0bec0e86cbf50d2bd0ae725aba4" translate="yes" xml:space="preserve">
          <source>Chef management console can be upgraded as part of a standalone or high availability configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd532927953a2eda90bd55a14b3aee8a4b0f255c" translate="yes" xml:space="preserve">
          <source>Chef management console is a web-based interface for the Chef server that provides users a way to manage the following objects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4366781e30bc1ad0135dbfd49fbc52c0adcb39a4" translate="yes" xml:space="preserve">
          <source>Chef management console is the user interface for the Chef server. It is used to manage data bags, attributes, run-lists, roles, environments, and cookbooks, and also to configure role-based access for users and groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad1d98144950dde93900b13d1d8427e1475be6a" translate="yes" xml:space="preserve">
          <source>Chef on Nodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33db90fe9a13bfc3ca9fbbb2ada04894749bc0c7" translate="yes" xml:space="preserve">
          <source>Chef provides the following plugins, which work the same as built-in subcommands (including common options), but must be installed separately (using RubyGems): &lt;code&gt;knife azure&lt;/code&gt;, &lt;code&gt;knife bluebox&lt;/code&gt;, &lt;code&gt;knife ec2&lt;/code&gt;, &lt;code&gt;knife eucalyptus&lt;/code&gt;, &lt;code&gt;knife google&lt;/code&gt;, &lt;code&gt;knife linode&lt;/code&gt;, &lt;code&gt;knife openstack&lt;/code&gt;, &lt;code&gt;knife rackspace&lt;/code&gt;, &lt;code&gt;knife terremark&lt;/code&gt;, &lt;code&gt;knife vcloud&lt;/code&gt;, and &lt;code&gt;knife windows&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75035eacea3dca90e15e9eb06375d917fd8c24e0" translate="yes" xml:space="preserve">
          <source>Chef provisioning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4c61742460ee71ba08b8e3dbcaaba444c7ed53" translate="yes" xml:space="preserve">
          <source>Chef push jobs can be upgraded as part of a standalone or high availability configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4911b000012ec98ab4c73be2dd57e1ffa9dbe57" translate="yes" xml:space="preserve">
          <source>Chef push jobs is an extension of the Chef server that allows jobs to be run against nodes independently of a chef-client run. A job is an action or a command to be executed against a subset of nodes; the nodes against which a job is run are determined by the results of a search query made to the Chef server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b267c15489bff6148e254b21f57e1fef795a9f74" translate="yes" xml:space="preserve">
          <source>Chef push jobs uses the Chef server API and a Ruby client to initiate all connections to the Chef server. Connections use the same authentication and authorization model as any other request made to the Chef server. A knife plugin is used to initiate job creation and job tracking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134668cfc1259d5537ec0cbbed70e8bdb1d63e88" translate="yes" xml:space="preserve">
          <source>Chef recommends a single virtual machine instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df33a0dc684e8b31405bda877e879f158dde2c9c" translate="yes" xml:space="preserve">
          <source>Chef recommends that Chef professional services be engaged to help with capacity and architectural planning at this size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07375a4b4513e6fc79228821b9bdd90ab99d863" translate="yes" xml:space="preserve">
          <source>Chef recommends two hosts, one front-end and one back-end</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149880b7f3566387537ffda1a91722146e6a3a61" translate="yes" xml:space="preserve">
          <source>Chef server 12 enables SSL verification by default for all requests made to the server, such as those made by knife and the chef-client. The certificate that is generated during the installation of the Chef server is self-signed, which means the certificate is not signed by a trusted certificate authority (CA) that ships with the chef-client. The certificate generated by the Chef server must be downloaded to any machine from which knife and/or the chef-client will make requests to the Chef server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d93b734d698e91c1ef96692f09ad3eb37704398" translate="yes" xml:space="preserve">
          <source>Chef server 12 enables SSL verification by default for all requests made to the server, such as those made by knife and the chef-client. The certificate that is generated during the installation of the Chef server is self-signed, which means there isn&amp;rsquo;t a signing certificate authority (CA) to verify. In addition, this certificate must be downloaded to any machine from which knife and/or the chef-client will make requests to the Chef server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca7ef521cfaa0ca5c29af8918114bf4e333b05d" translate="yes" xml:space="preserve">
          <source>Chef server 12 is installed to &lt;code&gt;/opt/opscode&lt;/code&gt;. (The existing Open Source Chef remains at &lt;code&gt;/opt/chef-server&lt;/code&gt;.) From this point, the &lt;code&gt;chef-server-ctl&lt;/code&gt; commands are running against the &lt;code&gt;/opt/opscode&lt;/code&gt; location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f96c3923e47f0064e42723ab1c7f4b0f519274" translate="yes" xml:space="preserve">
          <source>Chef server API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c356c0933cf260e0bfda675a254f01d7d5d5deb4" translate="yes" xml:space="preserve">
          <source>Chef strongly recommends using some type of version control tool to manage the source code in the chef-repo. Chef uses git for everything, including for cookbooks. git and/or GitHub is not required to use Chef. If another version source control system is preferred over git (such as Subversion, Mercurial, or Bazaar) that is just fine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a33fa13c51c1fc2ec8990e9f03bda0453fae109" translate="yes" xml:space="preserve">
          <source>Chef uses MD5 hashes to uniquely identify files that are stored on the Chef server. MD5 is used only to generate a unique hash identifier and is not used for any cryptographic purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834a3803148c7022953dc2b86362744e4b7bf025" translate="yes" xml:space="preserve">
          <source>Chef uses Ruby as its reference language to define the patterns that are found in resources, recipes, and cookbooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff516c2816bf2b509aa2fa2dbc384d77d2a11604" translate="yes" xml:space="preserve">
          <source>Chef will warn you if the Recipe DSL is provided by another custom resource or built-in resource. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed7e67488fc6ad8a9c441b02e6ba434a9d5e194" translate="yes" xml:space="preserve">
          <source>Chef::Log Entries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e30110984398662d2ac9faae88d839b11f30c0" translate="yes" xml:space="preserve">
          <source>Chef::Provider</source>
          <target state="translated">Chef::Provider</target>
        </trans-unit>
        <trans-unit id="7abdd2c007288c8a3dd650c324868154149327a6" translate="yes" xml:space="preserve">
          <source>Choose an IP address for the backend virtual IP (VIP). It must reside in the same network segment as the backend instances and must be &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/MultipleIP.html&quot;&gt;assignable as a secondary private IP address&lt;/a&gt; to the primary backend Chef server. The IP address is specified in the chef-server.rb file. During installation, the high-availability plugin will automatically assign the VIP to the elastic network interface (ENI) for the primary instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbeb827f453d6679ea909310f136142e3e14a6c8" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Add&lt;/strong&gt;. Continue this process until all constraints are added. When finished, click &lt;strong&gt;Next&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b89f24f8911bb05271c09bf944c0fcb8facacb" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Administration&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa13b4a9080bde21c70e936e8ea34f2755ff831f" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Clients&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c471f1d8645f60880502fe94ff40ac88228744" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Cookbooks&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab31a9b910ace159508fc8e7e1d1790f3b608af" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create Client&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57054973934787e8d6d0715a4faf2b8170fb9a84" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create Data Bag Item&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eadf36e13715c65536cf924e732df34c975cf9a6" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create Data Bag&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a86aae3289136257721233a121e024de680ff4" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create Environment&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a13a1a67bdd47da72f695adee2411276a64492d" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create Item&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480c5afa0a86aadaba6081a6f945b9ac71583354" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create Role&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042df4534b3105adc33a60f810e2203f766c0ce2" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c72290f0606831b7d2a7000ad97530020b8aea" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Data Bags&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab8d729d3b186bf488cc4ce457fc8e4bad81f535" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Delete&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06faff9c1f96d42f714d69c85a99d1985d8e27bf" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Download File&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84618757009fe52a1048be60d98381128677148" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Edit Run List&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599e664c7c571e12e3b5ca45488d68364b15a010" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Edit&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab4321ac24676e834df88013f5cef39d98bb016" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Environments&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f4c3620e965ff8ede6a5f5ea8e95b9de812e55" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Groups&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6bb244676c43e45db0b9bcac334294cd020c6a" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Invite User&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b6bdce1ad5e410c530ae399a801dbd075f7f361" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Leave Organization&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b614fd889a579bcfb22d202c6a4b60d7f6fa3842" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Manage Tags&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a907eabe68ccd173cd42bcd6494cdd0ccd78aef" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Next&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce962bdc005e978663ca73c9159afbc0d1a5cde8" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Nodes&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac761a7f442bbc9388d083d0be4f7a54a97c437f" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Organizations&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313383a3339cc48a5bd06ec79559beeb07085228" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Policy&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6672a3bf9905dd1c8e3f99a7d451692ca9654365" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Remove from Organization&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1fd0549a3c4d0c21edf46cb4825afc84dc7723" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Remove&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd8888c4176e511db54c18e2a8d2b3db52f9e1a" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Reset Key&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c52e7fa4a684a6ffee8e712553d13a9bf98b2f" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Roles&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f1534120cc361e4e0202b34964611f9a0d0c6a2" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Save Attributes&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78bbcdb3ae6f238c8951f1a0bfc29c4ea6ffbedd" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Save Item&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dabb02c71c061edd4d6be3ae27a1f7ba6aafc58" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Save Run List&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c705cedaf5d6913b2ea41151cc742632474c457" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Save&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc2bacfa84bc8f2aea8b2d2011eada12fb55e65" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Update Tags&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d344bc803c3a59912fc782824f6f01740a18a201" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Users&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4f1632cfa4f26fed0ff980c8161862f7a48237" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;+ Add&lt;/strong&gt; button and enter the name of the user or group to be added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffd66b3f7be8c292e8ad660763bfdf321dd07f8" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Attributes&lt;/strong&gt; tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf03b582a279709f0452f4db274064495fa7d35" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Chef Client&lt;/strong&gt; tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846da34a04becb5b338433356e3e11b207311d5c" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Content&lt;/strong&gt; tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3e9cea4b0f1606d66c198bf6b3acdef04cf1ff" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Details&lt;/strong&gt; tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="963e88b638ccbe3857be2d03756ef4dd77b73045" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Details&lt;/strong&gt; tab:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5524eb468d41b17351fb17f35d5a9cdfaaa2ec4" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Permissions&lt;/strong&gt; tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1d9d23f3e8ae1cd0b38a70d976fbe4af4f80e0" translate="yes" xml:space="preserve">
          <source>Click the download button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bdd79b12628d8c4ec4226ff4207341dcb869ab8" translate="yes" xml:space="preserve">
          <source>Client</source>
          <target state="translated">Client</target>
        </trans-unit>
        <trans-unit id="e264339caea69f74e2e273aa165aad0c00b1d9d4" translate="yes" xml:space="preserve">
          <source>Client Key Permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8ba98a5a0fe046ee22c054b371ab66430dfee1" translate="yes" xml:space="preserve">
          <source>Client keys can be managed from the Chef management console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e22fe3dde53ce03b40861a4b22d205384bde66" translate="yes" xml:space="preserve">
          <source>Clients</source>
          <target state="translated">Clients</target>
        </trans-unit>
        <trans-unit id="778d56a60eaffd9e9db65e30439ec6d22c8a2300" translate="yes" xml:space="preserve">
          <source>Clone or check out the source. When a checkout is available, this provider does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7355cd2d6fd8daab917d1627f47eb53dd4cf8f6f" translate="yes" xml:space="preserve">
          <source>Clone the &lt;a href=&quot;https://github.com/chef/chef&quot;&gt;https://github.com/chef/chef&lt;/a&gt; repository:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e46ac952350cdfa9dec833725857d399d8da331c" translate="yes" xml:space="preserve">
          <source>Clone the chef-repo from GitHub</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356e41d8fff63c5180b6f787607d888d62e2cfb1" translate="yes" xml:space="preserve">
          <source>Cloud resources, including provisioning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6915b1264e75dfe5192e615c1f545ddbf0d5e5ee" translate="yes" xml:space="preserve">
          <source>Cloudkick</source>
          <target state="translated">Cloudkick</target>
        </trans-unit>
        <trans-unit id="9a20c0354230a60c7400a9ebd3babb3afd414ba7" translate="yes" xml:space="preserve">
          <source>Cluster IP Address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8901895fb1b1d4c4ea2fec368c25176bf73e2f7e" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">Command</target>
        </trans-unit>
        <trans-unit id="43653ba5e615996c58bce4dbcf12dbc7b34ad662" translate="yes" xml:space="preserve">
          <source>Commands are often run in combination with other Chef resources. The following example shows the &lt;strong&gt;template&lt;/strong&gt; resource run with the &lt;strong&gt;execute&lt;/strong&gt; resource to add an entry to a LDAP Directory Interchange Format (LDIF) file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="29503955db10e4eafee69d8ec50fea3ee7174751" translate="yes" xml:space="preserve">
          <source>Commits to the Chef repositories should never be made against the master branch. Use a topic branch instead. A topic branch solves a single and unique problem and often maps closely to an issue being tracked in the repository. For example, a topic branch to add support for a new init system or a topic branch to resolve a bug that occurs in a specific version of CentOS. Ideally, a topic branch is named in a way that associates it closely with the issue it is attempting to resolve. This helps ensure that others may easily find it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87835ced7cce734e9a2aa7797cd0ea443e855beb" translate="yes" xml:space="preserve">
          <source>Common Functionality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966bc8891779463a6d9e31d4954a2c2b6ad11814" translate="yes" xml:space="preserve">
          <source>Common Item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6eaa962650a97f840a2800c301825ed8d72a917" translate="yes" xml:space="preserve">
          <source>Common Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08bc421b12b355e52cd77ee75a7c2ba7feb647ce" translate="yes" xml:space="preserve">
          <source>Common Ruby techniques can be used with the Recipe DSL methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527e52561bfae46335d1c38aaee77d444057bd72" translate="yes" xml:space="preserve">
          <source>Community Cookbooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a9a17d426491172bcb745218f62ac85a1d46ba" translate="yes" xml:space="preserve">
          <source>Community Handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec27bf36dab0cab613f33105c05c57f0d4a428a" translate="yes" xml:space="preserve">
          <source>Community member &lt;code&gt;juliandunn&lt;/code&gt; created a custom &lt;a href=&quot;https://github.com/juliandunn/cookbook_versions_handler&quot;&gt;report handler that logs all of the cookbooks and cookbook versions&lt;/a&gt; that were used during the chef-client run, and then reports after the run is complete. This handler requires the &lt;strong&gt;chef_handler&lt;/strong&gt; resource (which is available from the &lt;strong&gt;chef_handler&lt;/strong&gt; cookbook).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c822dccf61cda9cb4c87eee9eeedd877f76b440c" translate="yes" xml:space="preserve">
          <source>Compiled whenever a cookbook is uploaded to the Chef server or when the &lt;code&gt;knife cookbook metadata&lt;/code&gt; subcommand is run, and then stored as JSON data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e37b13a4e81e824e4de63b891fac7bb4f43bc9" translate="yes" xml:space="preserve">
          <source>Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92c529e0731c57efd7550480196484040b33c3e" translate="yes" xml:space="preserve">
          <source>Component</source>
          <target state="translated">Component</target>
        </trans-unit>
        <trans-unit id="9289473eeedaee09d76c8cf1b6994d8550debf46" translate="yes" xml:space="preserve">
          <source>Components</source>
          <target state="translated">Components</target>
        </trans-unit>
        <trans-unit id="e39262defe80a83fac1b793497417432c8b1a879" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
          <target state="translated">Conclusion</target>
        </trans-unit>
        <trans-unit id="43e178396555f2d8e9fcb01889a45ffe0d0c1c63" translate="yes" xml:space="preserve">
          <source>Configuration data in DSC scripts may be customized from a recipe. For example, scripts are typically customized to set the behavior for Windows PowerShell credential data types. Configuration data may be specified in one of three ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eafc190245e44e82f4956fd53763f1d54956cd7d" translate="yes" xml:space="preserve">
          <source>Configuration of SSL for the Chef server using certificate authority-verified certificates is done by placing the certificate and private key file obtained from the certifying authority in the correct files after the initial configuration of Chef server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6541036ec5289902b176dc8b95519251d0ea4790" translate="yes" xml:space="preserve">
          <source>Configuration settings in the knife.rb file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792c81a4cfdcb5b45d688cb03c2fd2e816f86d44" translate="yes" xml:space="preserve">
          <source>Configure</source>
          <target state="translated">Configure</target>
        </trans-unit>
        <trans-unit id="486c90dcc0d0aed7e071c2979a51ec431dd78383" translate="yes" xml:space="preserve">
          <source>Configure Hostnames</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="864dae7f890c64ddbd9c912d27e542ac08a6ec07" translate="yes" xml:space="preserve">
          <source>Configure LDAP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ffdf900b383ccd8a9d6c536e7cdd5e2e7423b31" translate="yes" xml:space="preserve">
          <source>Configure a local mail transfer agent on the Chef server using the steps appropriate for the platform on which the Chef server is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b33ba7d88e2137fc8750377ba98d70e70be4b83" translate="yes" xml:space="preserve">
          <source>Configure a service based on the value of the &lt;code&gt;startup_type&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4efbc51bf1c4316622742f9488072424f015f6d" translate="yes" xml:space="preserve">
          <source>Configure group permissions for files. A string or ID that identifies the group owner by group name, including fully qualified group names such as &lt;code&gt;domain\group&lt;/code&gt; or &lt;code&gt;group@domain&lt;/code&gt;. If this value is not specified, existing groups remain unchanged and new group assignments use the default &lt;code&gt;POSIX&lt;/code&gt; group (if available).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191331805a94310e262a96fbb5be426a8ad1ff4f" translate="yes" xml:space="preserve">
          <source>Configure owner permissions for files. A string or ID that identifies the group owner by user name, including fully qualified user names such as &lt;code&gt;domain\user&lt;/code&gt; or &lt;code&gt;user@domain&lt;/code&gt;. If this value is not specified, existing owners remain unchanged and new owner assignments use the current user (when necessary).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8a8754c7dada0868d3d5eb044f57057f1483a5" translate="yes" xml:space="preserve">
          <source>Configure the &lt;code&gt;-XX:NewSize&lt;/code&gt;&lt;code&gt;JAVA_OPTS&lt;/code&gt; environment variable. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2129d1c7ec7366e0eafd3797bc53b4314a21416" translate="yes" xml:space="preserve">
          <source>Configures httpd and systemd from a template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c054618cc09bea5a9cb755511f3a257a62abf1f6" translate="yes" xml:space="preserve">
          <source>Configuring a Proxy Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2bf17a7f54ab1d7c6e25731c80c1815c91ca970" translate="yes" xml:space="preserve">
          <source>Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d7b8ec6d87ed5b42511b84314a797004b055cb" translate="yes" xml:space="preserve">
          <source>Confirm:</source>
          <target state="translated">Confirm:</target>
        </trans-unit>
        <trans-unit id="82f0a1df9860c2fb04f18c625e75abbff271545c" translate="yes" xml:space="preserve">
          <source>Conflict. The object already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05abc432c5a691216ebe5a839a48a4c6b4858328" translate="yes" xml:space="preserve">
          <source>Connect to a database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8514ed8fe0fb7ea4d7832a4a0018fb27bd41b996" translate="yes" xml:space="preserve">
          <source>Connecting to the Erlang processes should only be done when directed by Chef support services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf79a2bbc630357707710b1630bdbf3c966c867" translate="yes" xml:space="preserve">
          <source>Connecting to the PostgreSQL database should only be done when directed by Chef support services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6721aa52d413004b9505a6bed9383c13afd71a" translate="yes" xml:space="preserve">
          <source>Consider the following for situations where environment variables are used to set the proxy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036327dc727e7760e598ed0e1440f98bc90c57b1" translate="yes" xml:space="preserve">
          <source>Consider the following snippet of JSON data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e68a873a2be3470675b9ee933b98d781ae7fef" translate="yes" xml:space="preserve">
          <source>Constraints</source>
          <target state="translated">Constraints</target>
        </trans-unit>
        <trans-unit id="7a007a4bef1899f848d246b5884d1d37729916a4" translate="yes" xml:space="preserve">
          <source>Constructs to Avoid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53dc84a4a6f11be77c89be5b1e5de9791f931317" translate="yes" xml:space="preserve">
          <source>Contain the chef-client run in a secondary process with dedicated RAM. When the chef-client run is complete, the RAM is returned to the master process. This option helps ensure that a chef-client uses a steady amount of RAM over time because the master process does not run recipes. This option also helps prevent memory leaks such as those that can be introduced by the code contained within a poorly designed cookbook. Use &lt;code&gt;--no-fork&lt;/code&gt; to disable running the chef-client in fork node. Default value: &lt;code&gt;--fork&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144a64224e1a9bf164ea696ad592167c783ad116" translate="yes" xml:space="preserve">
          <source>Contain the chef-client run in a secondary process with dedicated RAM. When the chef-client run is complete, the RAM is returned to the master process. This option helps ensure that a chef-client uses a steady amount of RAM over time because the master process does not run recipes. This option also helps prevent memory leaks such as those that can be introduced by the code contained within a poorly designed cookbook. Use &lt;code&gt;--no-fork&lt;/code&gt; to disable running the chef-client in fork node. Default value: &lt;code&gt;--fork&lt;/code&gt;. This option may not be used in the same command with the &lt;code&gt;--daemonize&lt;/code&gt; and &lt;code&gt;--interval&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7efb77c7b65d832273f8c07de32028eed28af73" translate="yes" xml:space="preserve">
          <source>Containers are an approach to virtualization that allows a single operating system to host many working configurations, where each working configuration&amp;mdash;a container&amp;mdash;is assigned a single responsibility that is isolated from all other responsibilities. Containers are popular as a way to manage distributed and scalable applications and services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc27743383d1024c34e57b7c842347c556df3810" translate="yes" xml:space="preserve">
          <source>Contains cookbooks that have been downloaded from the &lt;a href=&quot;https://supermarket.chef.io&quot;&gt;https://supermarket.chef.io&lt;/a&gt; or created locally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47b962ecd8553ed363ca8f5d32e4c5bbd8f4d8f" translate="yes" xml:space="preserve">
          <source>Continue running a recipe if a resource fails for any reason. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63423cc509044bd35bf484fb73a543d35bf35406" translate="yes" xml:space="preserve">
          <source>Controls the phase during which a gem is installed on a node. Set to &lt;code&gt;true&lt;/code&gt; to install a gem while the resource collection is being built (the &amp;ldquo;compile phase&amp;rdquo;). Set to &lt;code&gt;false&lt;/code&gt; to install a gem while the chef-client is configuring the node (the &amp;ldquo;converge phase&amp;rdquo;). Possible values: &lt;code&gt;nil&lt;/code&gt; (for verbose warnings), &lt;code&gt;true&lt;/code&gt; (to warn once per chef-client run), or &lt;code&gt;false&lt;/code&gt; (to remove all warnings). Recommended value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00704f0925109f058e891dfa27718ece21af5261" translate="yes" xml:space="preserve">
          <source>Controls the phase during which a gem is installed on a node. Set to &lt;code&gt;true&lt;/code&gt; to install a gem while the resource collection is being built (the &amp;ldquo;compile phase&amp;rdquo;). Set to &lt;code&gt;false&lt;/code&gt; to install a gem while the chef-client is configuring the node (the &amp;ldquo;converge phase&amp;rdquo;). Recommended value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9441c005ce0e286851208642bc33cf105938a1" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;C:/&lt;/code&gt; to &lt;code&gt;/c/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae20725e7ad8e7458a75f2ef8f61d22b6af926c" translate="yes" xml:space="preserve">
          <source>Convert Truths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4678b02e9809ff959fe34076618e22d757165a" translate="yes" xml:space="preserve">
          <source>Convert a string to uppercase or lowercase. For example, a hostname named &amp;ldquo;Foo&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b6427ed8364bf597f570748e86823efa712c80" translate="yes" xml:space="preserve">
          <source>Convert something to either true or false (&lt;code&gt;!!&lt;/code&gt; means not not!!):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae28e153fd42b3087fa9d3d89c76a5aaf5e4b04c" translate="yes" xml:space="preserve">
          <source>Cookbook</source>
          <target state="translated">Cookbook</target>
        </trans-unit>
        <trans-unit id="bd1cddbdd8d9c05afa56bb9a1519cef0a079cb6a" translate="yes" xml:space="preserve">
          <source>Cookbook Directories and Metadata</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e5b39e9f4d5b786f4d1bb52fd1928ae74c881b" translate="yes" xml:space="preserve">
          <source>Cookbook Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33678af193ddad7e27eab497e1f608705dcc6b15" translate="yes" xml:space="preserve">
          <source>Cookbook Naming</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601a062e68eea2e0f22d23e7ed15b2f85df73439" translate="yes" xml:space="preserve">
          <source>Cookbook Patterns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba4c87bb2aa16b70802ae9a427aa51c00f323a25" translate="yes" xml:space="preserve">
          <source>Cookbook Versioning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55bf3339cf79a545d11c006665766a2644954e5d" translate="yes" xml:space="preserve">
          <source>Cookbook Versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23dce919fd6e04b48de9babef7ae0f0c51d9d77e" translate="yes" xml:space="preserve">
          <source>Cookbook and custom resource names should contain only alphanumeric characters. A hyphen (&lt;code&gt;-&lt;/code&gt;) is a valid character and may be used in cookbook and custom resource names, but it is discouraged. The chef-client will return an error if a hyphen is not converted to an underscore (&lt;code&gt;_&lt;/code&gt;) when referencing from a recipe the name of a custom resource in which a hyphen is located.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb7d36252bd3be3612ddc847dd1e115091b08e81" translate="yes" xml:space="preserve">
          <source>Cookbook uploads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a27713963cec9f9e08aaeca3b2c803987f229a9" translate="yes" xml:space="preserve">
          <source>Cookbooks</source>
          <target state="translated">Cookbooks</target>
        </trans-unit>
        <trans-unit id="dddbe0d296bfeda9a45c9624b75a70236abe54f1" translate="yes" xml:space="preserve">
          <source>Cookbooks (in attribute files and/or recipes)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44f94d190bc4283f3ea997a8697f86bc93ac1a7" translate="yes" xml:space="preserve">
          <source>Cookbooks (including recipes, attributes, custom resources, libraries, and templates)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4dd75d9511cbb4ad7d73b1a9c4db19ab6136238" translate="yes" xml:space="preserve">
          <source>Cookbooks Maintained by Chef</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1800ddb452124688874380265e1070e524a75ef0" translate="yes" xml:space="preserve">
          <source>Cookbooks Maintained by the Community</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50a2312acfe5ecf00b0a31fc1973ba17c76d0311" translate="yes" xml:space="preserve">
          <source>Cookbooks and recipes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0abc677183ddc5f5c88717adbddd522ceae34187" translate="yes" xml:space="preserve">
          <source>Cookbooks are comprised of the following components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f54a12e863704b6944b6fd426da9e6b0efdaf7" translate="yes" xml:space="preserve">
          <source>Cookbooks can be viewed from the Chef management console web user interface. Cookbooks are managed using knife.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f0601e8ddd4a88df02542065f25ab58c5ebbd54" translate="yes" xml:space="preserve">
          <source>Cookbooks contain recipes, attributes, custom resources, libraries, definitions, files, templates, tests, and metadata</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="941fef2b4e9625f7c50a1062a4e31aca120091e3" translate="yes" xml:space="preserve">
          <source>Cookbooks that contain custom resources in the &lt;code&gt;/libraries&lt;/code&gt; directory of a cookbook should:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b43257798c4ca3ad83f7312a0e7c723b2439ac" translate="yes" xml:space="preserve">
          <source>Copy data between file descriptors when &lt;code&gt;sendfile()&lt;/code&gt; is used. Default value: &lt;code&gt;on&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e0d79c0f921346eb7053850138ac2460614791" translate="yes" xml:space="preserve">
          <source>Copy it as shown, add it under &lt;code&gt;/templates/default&lt;/code&gt;, and then name it &lt;code&gt;httpd.service.erb&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39379168cb5199a191e20467202789ba7f10473d" translate="yes" xml:space="preserve">
          <source>Copy it as shown, add it under &lt;code&gt;/templates/default&lt;/code&gt;, and then name the file &lt;code&gt;httpd.conf.erb&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82283f90d20c5d1dea3bf66604bd2c35278b9b97" translate="yes" xml:space="preserve">
          <source>Copy the entire &lt;code&gt;/etc/opscode-push-jobs-server&lt;/code&gt; directory from the backend primary to all frontend and backend servers. For example, from each server run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0281e56cc1dbcae64ace43f86310a48dd2242dcd" translate="yes" xml:space="preserve">
          <source>Copy the entire &lt;code&gt;/etc/opscode-reporting&lt;/code&gt; directory from the backend primary server to all frontend and backend servers. For example, from each server run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284a6d3942211f94f7abb9787441159cd24179fb" translate="yes" xml:space="preserve">
          <source>Copy the entire &lt;code&gt;/etc/opscode&lt;/code&gt; directory from the back end primary server to all front and back end nodes. For example, from each server run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49f8cb15f4127a791caff2c7752a91b1ccf9466" translate="yes" xml:space="preserve">
          <source>Copy the private key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa58c32cd55fdae942c8714433c5170e989208a" translate="yes" xml:space="preserve">
          <source>Copy the template to the chef-repo in the &lt;code&gt;.chef/bootstrap&lt;/code&gt; directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e157c5da4410b7e9de85f5c93026b9176e69064" translate="yes" xml:space="preserve">
          <source>Create</source>
          <target state="translated">Create</target>
        </trans-unit>
        <trans-unit id="cf42f437bfeaa2819687f80339a2a709a0508d85" translate="yes" xml:space="preserve">
          <source>Create Templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a138f3821a9b5de9166581acbb01f6ce5df3f8ef" translate="yes" xml:space="preserve">
          <source>Create a API client, typically an administrator client on a freshly-installed Chef server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c654ddbf3a68bce18ec58e966cfeba0517361694" translate="yes" xml:space="preserve">
          <source>Create a Cookbook</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4883120a3b0105d8b209933580bb35da068925" translate="yes" xml:space="preserve">
          <source>Create a Namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b5d5651ea23fa61e5986b36ca3ba186b70bd87" translate="yes" xml:space="preserve">
          <source>Create a client as an admin client. This is required for any user to access Open Source Chef as an administrator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="206cd94b8e65c4451f73ffc8d19dd0f6518b2904" translate="yes" xml:space="preserve">
          <source>Create a client as an admin client. This is required for any user to access Open Source Chef as an administrator. This option only works when used with the open source Chef server and will have no effect when used with Enterprise Chef or Chef server 12.x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a94d3f1b8b31894fbadae0eda96d784b55ed1c" translate="yes" xml:space="preserve">
          <source>Create a custom class or module; for example, create a subclass of &lt;code&gt;Chef::Recipe&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199ec62dcfcbe144f20d172411b3a343b421d9ce" translate="yes" xml:space="preserve">
          <source>Create a custom handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b86a18d4d197b47893e1d582866c9b2abba071" translate="yes" xml:space="preserve">
          <source>Create a data bag by creating folders. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522dfdb71404903b8d7962a262f715f9f11ab14d" translate="yes" xml:space="preserve">
          <source>Create a directory and/or the contents of that directory, but only if it does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7927c220a3471f3efbf04d3cc576cfd13476b6b6" translate="yes" xml:space="preserve">
          <source>Create a duplicate (non-unique) user account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac4f920207f9a594c13be8a67cdb23c0941c80f" translate="yes" xml:space="preserve">
          <source>Create a file in the &lt;code&gt;cookbooks/COOKBOOK_NAME/files/default&lt;/code&gt; directory that is named &lt;code&gt;wrap-ssh4git.sh&lt;/code&gt; and which contains the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4632b098177c5bf529275a5ae27bfe50476f9d63" translate="yes" xml:space="preserve">
          <source>Create a file named chef-server.rb that is located in the &lt;code&gt;/etc/opscode/&lt;/code&gt; directory. See the chef-server.rb section below for an example of the settings and values that are required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa94b2c1051cb57ab50a8c113170171bd42f6e6" translate="yes" xml:space="preserve">
          <source>Create a file named chef-server.rb that is located in the &lt;code&gt;/etc/opscode/&lt;/code&gt; directory. See the chef-server.rb section below for an example of the settings and values that are required. The &lt;code&gt;ha['ebs_device']&lt;/code&gt; setting must specify the actual &lt;code&gt;/dev&lt;/code&gt; device name that is reported by the machine&amp;rsquo;s kernel, which may not be the same value that is reported by Amazon Web Services (AWS). For example, Amazon Web Services (AWS) may refer to a volume as &lt;code&gt;/dev/sdf&lt;/code&gt; through the management console, but to the Linux kernel on the instance, it may appear as &lt;code&gt;/dev/xvdf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c79cbfeecbfd74f222f742c6229c8d9d8aa2da" translate="yes" xml:space="preserve">
          <source>Create a file only if the file does not exist. When the file exists, nothing happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14aa9e15b5f6afe492bac9f7410075f8d5907f0e" translate="yes" xml:space="preserve">
          <source>Create a launchd property list, and then ensure that it is enabled. If a launchd property list already exists, but does not match, updates the property list to match, and then restarts the daemon or agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4806c720f0d47f44d51825813b595dfb99581bd5" translate="yes" xml:space="preserve">
          <source>Create a launchd property list, if it does not already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09df36ff51478aead4c0379fb7ed15d4fae82acd" translate="yes" xml:space="preserve">
          <source>Create a physical volume, volume group, and logical volume with the following series of commands. The volume group and logical volume names must be &lt;code&gt;chef&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5222b1a2dfdd442d0d1c1bb6680d87c3516e9bb4" translate="yes" xml:space="preserve">
          <source>Create a registry key if it does not exist. Also, create a registry key value if it does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6741f748b5c15706d82225d063b52ad7dca47334" translate="yes" xml:space="preserve">
          <source>Create a resource that configures Apache httpd for Red Hat Enterprise Linux 7 and CentOS 7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef11400d277860adf52e6f839496f73c0cbb91f" translate="yes" xml:space="preserve">
          <source>Create a system user. This property may be used with &lt;code&gt;useradd&lt;/code&gt; as the provider to create a system user which passes the &lt;code&gt;-r&lt;/code&gt; flag to &lt;code&gt;useradd&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af5e30f59c633111454d9a2c1eca00a8a56dc88" translate="yes" xml:space="preserve">
          <source>Create a user without a public key. This key may be managed later by using the &lt;code&gt;knife user key&lt;/code&gt; subcommands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41005b20b4c7e7f4ce5b04430ca281001eb3973" translate="yes" xml:space="preserve">
          <source>Create an Amazon Elastic Block Store (EBS) volume and attach it to the primary backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c8075ba025a1b1d343b6022719d1f70abd74cd" translate="yes" xml:space="preserve">
          <source>Create an Amazon Elastic Block Store (EBS) volume to store the Chef server&amp;rsquo;s data. It is recommended that you use an EBS Provisioned IOPS volume type, with the maximum IOPS ratio for the size of volume.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e446868424f832c75da48ccdf42a1cd27a2b65" translate="yes" xml:space="preserve">
          <source>Create an Identity and Access Management (IAM) user with at least the permissions documented in the reference section. Record this user&amp;rsquo;s access and secret keys; these will be used in the chef-server.rb configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a856bb4aa5a4cb6ff5146495292d8ffbb0e5b7" translate="yes" xml:space="preserve">
          <source>Create an appropriately named tracking branch:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c58cb22a6f04fafb0f481bef9180e26c2fae9ae" translate="yes" xml:space="preserve">
          <source>Create appropriate security groups to contain the backend instances. The only requirement for the Chef server is that ICMP is permitted between the two backend instances; Keepalived requires it for communication and heartbeat.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88a5d0a81e06436adb586d99e1e184ad410e424" translate="yes" xml:space="preserve">
          <source>Create directories in the release directory before symbolic links are created. This property runs after &lt;code&gt;purge_before_symlink&lt;/code&gt; and before &lt;code&gt;symlink&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b32c951c7d2c6cc7cfc6a5a5014829956930bb" translate="yes" xml:space="preserve">
          <source>Create directories in the release directory before symbolic links are created. This property runs after &lt;code&gt;purge_before_symlink&lt;/code&gt; and before &lt;code&gt;symlink&lt;/code&gt;. Default value: &lt;code&gt;%w{tmp public config}&lt;/code&gt; (or the same as &lt;code&gt;[&quot;tmp&quot;, &quot;public&quot;, &quot;config&quot;]&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1100ceb82d80c1c297573f777663957e0b357b" translate="yes" xml:space="preserve">
          <source>Create lists using arrays:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d97da6f1055feaf1cb504694d8499d1d2a4f99" translate="yes" xml:space="preserve">
          <source>Create or delete directories recursively. Default value: &lt;code&gt;true&lt;/code&gt;; the chef-client must be able to create the directory structure, including parent directories (if missing), as defined in &lt;code&gt;COOKBOOK_NAME/files/default/REMOTE_DIRECTORY&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce9bdf1c96011c9750d82aafff9b263d881ba5d" translate="yes" xml:space="preserve">
          <source>Create or delete parent directories recursively. For the &lt;code&gt;owner&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt;, and &lt;code&gt;mode&lt;/code&gt; properties, the value of this attribute applies only to the leaf directory. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4676740dea6458bfe31246a6516babe6db257917" translate="yes" xml:space="preserve">
          <source>Create the .chef directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2f3f542a0d9a743abf295d534f1df1946f5293" translate="yes" xml:space="preserve">
          <source>Create the &lt;code&gt;/etc/opscode/&lt;/code&gt; directory, and then copy the contents of the entire &lt;code&gt;/etc/opscode&lt;/code&gt; directory from the primary server, including all certificates and the chef-server.rb.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="048f9c970abc325595c7622e370afad98ca2717a" translate="yes" xml:space="preserve">
          <source>Create the &lt;code&gt;/etc/opscode/&lt;/code&gt; directory, and then copy the entire contents of the &lt;code&gt;/etc/opscode&lt;/code&gt; directory from the primary backend server, including all certificates and the chef-server.rb file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a98851809c43f002d633a9891c9bd219ec35832" translate="yes" xml:space="preserve">
          <source>Create the chef-repo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98bc54e18bffe2efb97e998ff635c2acee2c463a" translate="yes" xml:space="preserve">
          <source>Create the client as the chef-validator. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c31f2591babce01946e03a4aad366320a60efd" translate="yes" xml:space="preserve">
          <source>Create the file system. For example, an &lt;code&gt;ext4&lt;/code&gt; type named &lt;code&gt;tiered&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b456b9be8f8b0b236953df0edc38a3dbec58db33" translate="yes" xml:space="preserve">
          <source>Created automatically by knife whenever the &lt;code&gt;knife cookbook create&lt;/code&gt; subcommand is run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4aa487cb0ef5f2b8b3f66939c8777745700017" translate="yes" xml:space="preserve">
          <source>Created. The object was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fc55cf7fc526346ef54a0f00d2a7867825c470" translate="yes" xml:space="preserve">
          <source>Created. The object was created. (This response code is only returned when the client is renamed.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123344f5beb7f1b3b1c0050667cd476a9d50c59c" translate="yes" xml:space="preserve">
          <source>Created. The object was created. (This response code is only returned when the user is renamed.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dbbcd0b50e4caec428f956a208a87f759c2022d" translate="yes" xml:space="preserve">
          <source>Creates the virtual host for the website</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e3532cc25489d49233d8c2448919660ef3dea77" translate="yes" xml:space="preserve">
          <source>Creating two templates that support the custom resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c7734d51f5945b8a2dd287727468112306b2af" translate="yes" xml:space="preserve">
          <source>Creating users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9594be001a640537557bd25239be81f7352fda03" translate="yes" xml:space="preserve">
          <source>Credential Rotation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c628a92c742e3033d43e16fc033c49fc5d79d5fa" translate="yes" xml:space="preserve">
          <source>Credential rotation does not rotate the pivotal, user, or client keys, or remove any Chef server policy or cookbooks that have been uploaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38d9d4dd7b3a1255fbba2d3c5391ba87a041a9e" translate="yes" xml:space="preserve">
          <source>Cursor over the first two entries&amp;mdash;&lt;code&gt;CULTURAL convention to install&lt;/code&gt; and &lt;code&gt;LANGUAGE translation to install&lt;/code&gt;&amp;mdash;and use &lt;code&gt;F4&lt;/code&gt; to navigate through the list until &lt;code&gt;UTF-8 English (United States) [EN_US]&lt;/code&gt; is selected. (EN_US is in capital letters!)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a1421036881f2fc035078e283a0eed387a35e68" translate="yes" xml:space="preserve">
          <source>Custom Handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5e88db8494e3dae35242c7385c1f03461ca9c5" translate="yes" xml:space="preserve">
          <source>Custom Resource DSL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e67c14a8f251af3ab5543808c554be00cee2a65" translate="yes" xml:space="preserve">
          <source>Custom Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d812fdf7b21a4abf65599510d843a3a23da17bbf" translate="yes" xml:space="preserve">
          <source>Custom Templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27843be407b9bfd353499cc870a25461e27830f9" translate="yes" xml:space="preserve">
          <source>Custom plugins can be configured to use the same settings as the core knife subcommands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8816b52f55182b93bcedb64da5a0ebf7b14287" translate="yes" xml:space="preserve">
          <source>Custom properties are defined in the resource. This custom resource needs two:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b099ba2371a79da805d606fe765643a9e3d549" translate="yes" xml:space="preserve">
          <source>Custom resources are designed to use core resources that are built into Chef. In some cases, it may be necessary to specify a property in the custom resource that is the same as a property in a core resource, for the purpose of overriding that property when used with the custom resource. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39d549b1013a3649f321515375d82e8b65cac40e" translate="yes" xml:space="preserve">
          <source>Customize the Config File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f5636098cd458ce9d22939f8e3e8deab0e9bd0" translate="yes" xml:space="preserve">
          <source>DELETE</source>
          <target state="translated">DELETE</target>
        </trans-unit>
        <trans-unit id="41917cd18ce8791853b0c1dbbe1dedb85e290430" translate="yes" xml:space="preserve">
          <source>DRBD</source>
          <target state="translated">DRBD</target>
        </trans-unit>
        <trans-unit id="d16a3117cbc0fb4751da739176e146348b85a7ab" translate="yes" xml:space="preserve">
          <source>DRBD This port range must be open between all back end servers in a high availability configuration that uses DRBD.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6c60c02618c2b10cfa7576ba3fdde68374c502" translate="yes" xml:space="preserve">
          <source>DRBD can be configured to utilize more bandwidth during the initial synchronization. For Red Hat and CentOS 6:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7898d0624cf2a9fe8d8736dafe2a6b5e3d40ffb4" translate="yes" xml:space="preserve">
          <source>DRBD configuration allows for custom handlers when a &lt;code&gt;split-brain&lt;/code&gt; event happens. The basic handler sends a notification email to a configurable email address so the issue can be investigated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b35aa0961ca6d6cd032a018794b06ad4d9ea53e" translate="yes" xml:space="preserve">
          <source>DRBD is a shared-nothing system. Data is replicated between hosts over a dedicated network link rather than stored on a central network-attached storage (NAS) or storage attached network (SAN) to which all hosts are connected. The most critical issue for storage in a high availability topology is loss of or corruption of data. Maximizing the amount of data that can be passed over the wire while all systems are up and running correctly minimizes the chance that something will be lost or unrecoverable if a host goes down.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839e67cec60c0ff97cdf9eba472099b30a8ec8e7" translate="yes" xml:space="preserve">
          <source>DRBD is a supported high availability configuration option for the Chef server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d149ecc4029ce4a9b8b274a25712cd43cda122" translate="yes" xml:space="preserve">
          <source>DRBD may be resized. First, make a backup of the Chef server data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b19fb021cb24f3d320ebf213dc90096ca5d2d020" translate="yes" xml:space="preserve">
          <source>DRBD on the first back-end server will sync to the second back-end server and will become the clean secondary FQDN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82aeae9b5a553cf41f1382cd9efe3e290377a7e6" translate="yes" xml:space="preserve">
          <source>DSC data can be specified directly in a recipe:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437a50fecd337f4568693e155281aa4f828dd98e" translate="yes" xml:space="preserve">
          <source>Data Bags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89fed8cd95d099c61b28386bb7e1487ecac192e9" translate="yes" xml:space="preserve">
          <source>Data about the node collected by Ohai</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d77aa68c2a0748180a780fae1553a2bc8b4762" translate="yes" xml:space="preserve">
          <source>Data bag items that are returned by a search query can be used as if they were a hash. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73144fa8055053dcb65ce23c98d7128748af40cd" translate="yes" xml:space="preserve">
          <source>Data bags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d712291b7a7485fb2d3a6e8d1f4875dd156f1f7" translate="yes" xml:space="preserve">
          <source>Data bags can be managed from the Chef management console web user interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7b40f485472538676a7985854af8eb46627a83" translate="yes" xml:space="preserve">
          <source>Data can be passed to a definition from more than one recipe. Use a definition to create a compile-time macro that can be referenced by resources during the converge phase. For example, when both &lt;code&gt;/etc/aliases&lt;/code&gt; and &lt;code&gt;/etc/sudoers&lt;/code&gt; require updates from multiple recipes during a single chef-client run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e2898fafb5e05036cc0259eb0880e9d79572cf" translate="yes" xml:space="preserve">
          <source>Data stored in the following directories should be backed up periodically:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd7c7997c03f050abbce4899b359441c7d3e4366" translate="yes" xml:space="preserve">
          <source>Datadog</source>
          <target state="translated">Datadog</target>
        </trans-unit>
        <trans-unit id="f775329a5b94da0d8b124d7e0ac6a8c3f9336607" translate="yes" xml:space="preserve">
          <source>Debian</source>
          <target state="translated">Debian</target>
        </trans-unit>
        <trans-unit id="6ce5dc13e3046cd65ea29204a9883ddfa06b5f4c" translate="yes" xml:space="preserve">
          <source>Debian and Apt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1ae4345753678dfc1ec0e0db577f631ef6d279" translate="yes" xml:space="preserve">
          <source>Debian platform only. The relative priority of the program for start and shutdown ordering. May be an integer or a Hash. An integer is used to define the start run levels; stop run levels are then 100-integer. A Hash is used to define values for specific run levels. For example, &lt;code&gt;{ 2 =&amp;gt; [:start, 20], 3 =&amp;gt; [:stop, 55] }&lt;/code&gt; will set a priority of twenty for run level two and a priority of fifty-five for run level three.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a642215aaea050e05887163485a77e2c753faf0e" translate="yes" xml:space="preserve">
          <source>Debian, Linux Mint, Ubuntu</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd604d99e75e45d38bc7ac8fc714cde0097d901f" translate="yes" xml:space="preserve">
          <source>Debug</source>
          <target state="translated">Debug</target>
        </trans-unit>
        <trans-unit id="becc86d84872d4cbce7473b944f502a665288c54" translate="yes" xml:space="preserve">
          <source>Debug Authentication Issues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14146501190e96f1688bd1093c114496222d6b57" translate="yes" xml:space="preserve">
          <source>Debug Existing Recipe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73272a4031a88a2a3d327d336f06107f5da87de3" translate="yes" xml:space="preserve">
          <source>Debug Recipes, chef-client Runs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f250c8bc41b98c4db2d6d43de536e3f3ac7c56" translate="yes" xml:space="preserve">
          <source>Declare two variables at the beginning of the recipe, one for the remote IP address and the other for the authorized IP address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c174318512b79cb983fe21532eb9d13b67a5bbe0" translate="yes" xml:space="preserve">
          <source>Declared as properties of the custom resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d64c2732f53ad2606fc3931e8db1321d46a216" translate="yes" xml:space="preserve">
          <source>Declares the properties of the custom resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2288e8b830c8392d8b9cdaff053acbad8b0924e5" translate="yes" xml:space="preserve">
          <source>Declares the steps needed to bring that item to the desired state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a2da2278ab64950a1e19d55ec8c50efd4a6d71" translate="yes" xml:space="preserve">
          <source>Declares three variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2444b1324be9ca55969ec193c2f034a0a7fd636d" translate="yes" xml:space="preserve">
          <source>Declaring cookbook dependencies is not required with chef-solo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418dcda0ca70f34565d131769c4fde143c264cdd" translate="yes" xml:space="preserve">
          <source>Default Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7b3ea06a291c79a2cfb5856be8606fd0413ed4" translate="yes" xml:space="preserve">
          <source>Default Groups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da05a830142a5114c533efad0bf42dcd73d84b0" translate="yes" xml:space="preserve">
          <source>Default Permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79771123eb3d8402c675c3e98d26f365e82cc691" translate="yes" xml:space="preserve">
          <source>Default on the AIX platform. The provider that is used to start, stop, and restart services with System Resource Controller (SRC).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f1f3f305d71285e9742ac7c7d2a73672d49c20" translate="yes" xml:space="preserve">
          <source>Default value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af12974dff93fcb1870fc4b4aba61eabb646462f" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'/chef'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abdf72c24087f7facb3d182266df1359e3a00e3b" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'/jobs'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9718d1aca5336b42f4f7f9dd9ee880eb79aa4bd2" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'/reindexer'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="279b13e84eff47a0b1e5798a6ea040852276b602" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'100'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b2e86e9eb891586023b5b116e8883824341a32" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'10000'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d5bd2c97b4b27d8e7cbbab7d4525f506bd663d7" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'3600'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b725f87d936534f0c86ec25e9feb29a99ed565d" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'5'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d2386bf901c418936554388746dce799a344c6" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'5ca1ab1ef005ba111abe11eddecafbad'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113a5e6f19b4813af9a1171df128d94a3fc0eed5" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'[{connect_timeout, 10000}]'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9857217dc7092a1be5f93ed5df0122ba84b1ee" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'bifrost_ro'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9724b7bf43a7c395ac109f8ef846fe4a3dc7017" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'chef'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2d6643785945f5af784989435c0f6b26e9ace3" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'cs'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596455ff5a1f2d2215dc1ba099b0dda0da0d2029" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'http://localhost:8983/solr'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a08f218d4d239c5bfb5f986d0b3e9edcddf9980" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'jobs'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8e7a624e60570a691179831471118978c6f984" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'workcomplete'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae23cb3cc4f69c71ba1f099706ae0a8ff907475" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'{1, min}'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fff538899512bbf855cba72855e08c1bdbb6481" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;'{70, sec}'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8bda9836569a9485970040393bc220dd5f383e4" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;/bin/sh&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787b4e33ad23bd2f0fe1d44a57fcd6af13e1eb62" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;0022&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8caf5f7fb1f8a4fdccdb6162d1289299bdf1de80" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fadf09b31a12a77380cd300835b0abf89ae25e2" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;1000000&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb97b270434d6e3b9c96f83121c1eefff8db8ef" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;10000&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6748e04adf7b3a60dcc5d009e3082f2547da2413" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;100&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c97366595d1d0b058ce961ed786ff1df23793218" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;127.0.0.1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb703909cd4438c5aca67320e99fefd303b4bf9" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929a430dd386fdedb444b0ed516f438bb51071ba" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829343fa9160d792cdbb9df80cd6afc3a5bca119" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;250&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f221b9dc91de6275755d50ac24af07ad7659315b" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;256&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f987b3d3db2e04d385a8a1d2e30829fad37cc7a6" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;25&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46bb4bc12cf5db911f7c2096fef16aa7cb05181e" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;30000&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05555c65a7f1a67c0ce250c4d67963764890908d" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;3600&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3700f1ed15b9a3b97f62d7f182b3dd19e76d1c76" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;443&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486fa334f08a5ec6aecfd3bd2d88687dbd539db9" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;5000&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ba95e76898073f97c791d602477a11526f6fff" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;600&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee49547d34386a51b2266cbf1bc5ef8306d9e44" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;900&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1f4c99cbbc4a06b3e0d8729b471320b3103d2c" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;9680&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e14a4df445f452b15e5e83fb3aa96a0f760a1f3" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;9683&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a68079953817dddbbd778c948a207c5a6677cf" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;9685&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49934e76e52c5315ca2e03c28812b8c56a3d0adc" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;:batch&lt;/code&gt;. When this property is set to &lt;code&gt;:batch&lt;/code&gt;, the 64-bit version of the cmd.exe shell will be used to evaluate strings values for the &lt;code&gt;not_if&lt;/code&gt; and &lt;code&gt;only_if&lt;/code&gt; properties. Set this value to &lt;code&gt;:default&lt;/code&gt; to use the 32-bit version of the cmd.exe shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ef0cdfa0e4e93d8f244238b809b6143dfd46b1" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;:powershell_script&lt;/code&gt;. When this property is set to &lt;code&gt;:powershell_script&lt;/code&gt;, the 64-bit version of the Windows PowerShell shell will be used to evaluate strings values for the &lt;code&gt;not_if&lt;/code&gt; and &lt;code&gt;only_if&lt;/code&gt; properties. Set this value to &lt;code&gt;:default&lt;/code&gt; to use the 32-bit version of the cmd.exe shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a980f12bd785f5330707d1fc6097f86b88831ccc" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;TLSv1 TLSv1.1 TLSv1.2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24888fc79ddde618a01118511a7f2c9202764b9f" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;chef-validator&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2990a868845dbf38ef756d96ae1e3df77998278b" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;chefAPI&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea3d99dfdab9d718df3bdb4e56bd9c6e35e3b68" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066f938edd7ad34e8b941204c34e3317c2eb4302" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;https://#{node['fqdn']}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e4f0ad2807b7e05408b581ad5bb358af11b978" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;info@example.com&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a383650f99ce5bb0846802d66067068fdcb8e40a" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e790ee32c2f63fcad30759d9232dcb6039df716" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;node['fqdn']&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698cab8d30db733c25a952673dc49f8361635944" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;opscode_chef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979aa650b9db9132b339420a3d7a2f4f2f7ff81f" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;opscode_chef_ro&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7276f2d98990440abf46eaac101973afde0be652" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;shmunzeltazzen&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c99a29085b1ee7856ddc027d80e23a4647fee8fc" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a1abf51f79f5bcb060a39fb6ad5f7c5233e21a" translate="yes" xml:space="preserve">
          <source>Default.</source>
          <target state="translated">Default.</target>
        </trans-unit>
        <trans-unit id="f7708d7d9ab097ef9deb9d2a6a7d44944604bb40" translate="yes" xml:space="preserve">
          <source>Default. .. tag resources_common_actions_nothing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737b551365fdfadbb769763d2c1accc28495f7b7" translate="yes" xml:space="preserve">
          <source>Default. Add a route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a80f4e09313b1dc6b77049b8c188857f532b41c" translate="yes" xml:space="preserve">
          <source>Default. Create a directory and/or the contents of that directory. If a directory or its contents already exist (but does not match), update that directory or its contents to match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3f2bc434a5ce29f1bd88b86a62b4c540aae52a" translate="yes" xml:space="preserve">
          <source>Default. Create a directory. If a directory already exists (but does not match), update that directory to match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f223722e44fa21029e29f23118ab2377690c58b8" translate="yes" xml:space="preserve">
          <source>Default. Create a file. If a file already exists (but does not match), update that file to match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5632cfcebb3c21f437821f7ef837a36fc6b55e4" translate="yes" xml:space="preserve">
          <source>Default. Create a group. If a group already exists (but does not match), update that group to match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944f5404428b330ca2669628a3bcc5a386276377" translate="yes" xml:space="preserve">
          <source>Default. Create a launchd property list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de082160f1e962a8def3ad34cb26da21d2ea4fbd" translate="yes" xml:space="preserve">
          <source>Default. Create a link. If a link already exists (but does not match), update that link to match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9a7ff73160848e843f243eff58de4a7edb855b" translate="yes" xml:space="preserve">
          <source>Default. Create a registry key. If a registry key already exists (but does not match), update that registry key to match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b925c62c44b2c6a40a34f87027a52e7429b2c5e" translate="yes" xml:space="preserve">
          <source>Default. Create a user with given properties. If a user already exists (but does not match), update that user to match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b32f54832be32f89615e9bee190d43fa5dc1eb0" translate="yes" xml:space="preserve">
          <source>Default. Create an array with per-device superblocks. If an array already exists (but does not match), update that array to match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a347bf933324cc8f311e88b89ae65d5cfb3da8" translate="yes" xml:space="preserve">
          <source>Default. Create an entry in a cron table file (crontab). If an entry already exists (but does not match), update that entry to match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6561f4e8d7454dd947d10a1eb6a00027137993b9" translate="yes" xml:space="preserve">
          <source>Default. Create an environment variable. If an environment variable already exists (but does not match), update that environment variable to match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bceb336dc5d6f5e69090011d5a7ddef1558ad39" translate="yes" xml:space="preserve">
          <source>Default. Deploy an application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1235b990bd6ceab62b6f06801c3729e8a73981f1" translate="yes" xml:space="preserve">
          <source>Default. Do nothing with a service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a99ca5aeccd59222eeca87b0faf0b8f446d8e08" translate="yes" xml:space="preserve">
          <source>Default. Executes the default interpreter as identified by the chef-client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="401b0ac69b4fa648231941387f541bb61d99fc1a" translate="yes" xml:space="preserve">
          <source>Default. Install a package. If a version is specified, install the specified version of the package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd339fc5b87277852a923a73e6567ac219c33da0" translate="yes" xml:space="preserve">
          <source>Default. Install the specified configuration profile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd2af2f49e7dc4d2d82f1e1d29357fe2017497e" translate="yes" xml:space="preserve">
          <source>Default. Mount a device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d44b14db86fb25dc6f532196b97debd22ade50e" translate="yes" xml:space="preserve">
          <source>Default. No cookbooks are loaded, and the run-list is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1269515486115402d1944bdcad0b67e540496e06" translate="yes" xml:space="preserve">
          <source>Default. Reload the Ohai configuration on a node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295dc9fd6c6b2d44165b9eef22158acc94ef24a3" translate="yes" xml:space="preserve">
          <source>Default. Run a Ruby block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9867fbbdf14b12cb05f72a4ceb8b0c67a467a7" translate="yes" xml:space="preserve">
          <source>Default. Run a command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0f8b6661a90a1867d97704355b752cf70c4fa4" translate="yes" xml:space="preserve">
          <source>Default. Run a script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e9e8e96e0a7a34de413bdf1bddcc4c3b0299f38" translate="yes" xml:space="preserve">
          <source>Default. Run ifconfig to configure a network interface and (on some platforms) write a configuration file for that network interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03815f542a90ad4737726a0ed13892f2f30becb7" translate="yes" xml:space="preserve">
          <source>Default. Run the Erlang call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d1bafe1eef03c7e5e69ab08ab79d427e57e4fa" translate="yes" xml:space="preserve">
          <source>Default. Run the script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b1ec76280ba89f4a2a6ad1cc73982e3baa1226" translate="yes" xml:space="preserve">
          <source>Default. Send a &lt;code&gt;GET&lt;/code&gt; request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0aeef16cb032c3dfbfceb5e0777416cb8dcbe04" translate="yes" xml:space="preserve">
          <source>Default. Specifies that a notification should be queued up, and then executed at the very end of the chef-client run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591beece784e6288941d965d097ae04a8c7e8a18" translate="yes" xml:space="preserve">
          <source>Default. Update the source to the specified version, or get a new clone or checkout. This action causes a hard reset of the index and working tree, discarding any uncommitted changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae4fda840cb91ff9c41cbe9bacb385035cd23b5" translate="yes" xml:space="preserve">
          <source>Default. Use to run the DSC configuration defined as defined in this resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008d54ff9af81cd5a4ccba62560b44d57ec84f5c" translate="yes" xml:space="preserve">
          <source>Default. Write to log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f8f411b477f0522431a3ee2313e525100cef08" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;SAMAccountName&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87038113832b2cb9c68a337af1d75dda595db1b0" translate="yes" xml:space="preserve">
          <source>Define Actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7178f42a2f708746ff9247b3e32f72b7549a6b0" translate="yes" xml:space="preserve">
          <source>Define How Email is Sent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4bbeaa023db7b319633a6e7679765972f1c4b1" translate="yes" xml:space="preserve">
          <source>Define Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b506871aca4bb1a0babff1c2dcf6cc78172468" translate="yes" xml:space="preserve">
          <source>Define Resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a5b7546bacd5971f1efdeb60cce607e583ffb5" translate="yes" xml:space="preserve">
          <source>Define a Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2092d04895ebb259120f7739274282b6ab1c8b9a" translate="yes" xml:space="preserve">
          <source>Define a custom resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4380a40daf7c39310e8d5cd631672ad89a34b032" translate="yes" xml:space="preserve">
          <source>Define a custom resource!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea6bf924ff62e7a701176831845bd4c1addd4fb1" translate="yes" xml:space="preserve">
          <source>Define a helper method inline. For example: &lt;code&gt;helper(:hello_world) { &quot;hello world&quot; }&lt;/code&gt; or &lt;code&gt;helper(:app) { node[&quot;app&quot;] }&lt;/code&gt; or &lt;code&gt;helper(:app_conf) { |setting| node[&quot;app&quot;][setting] }&lt;/code&gt;. Default value: &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34980487c6a757b3c09df3e8f81a3af7cb1fae3" translate="yes" xml:space="preserve">
          <source>Define a helper module inline or in a library. For example, an inline module: &lt;code&gt;helpers do&lt;/code&gt;, which is then followed by a block of Ruby code. And for a library module: &lt;code&gt;helpers(MyHelperModule)&lt;/code&gt;. Default value: &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e3bf804c72202cdc8b1a88749e718eb2469d48" translate="yes" xml:space="preserve">
          <source>Define a method (or a function, if you like):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5aba037c0afb90699cf770f0a5cb011544f00c4" translate="yes" xml:space="preserve">
          <source>Define a resource block. If a resource block with the same name exists in the resource collection, it will be returned. If a resource block does not exist in the resource collection, it will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01fe1785e7c795d2916780a413d76bc3722ded06" translate="yes" xml:space="preserve">
          <source>Define a resource block. If a resource block with the same name exists in the resource collection, it will be updated with the contents of the resource block defined by the &lt;code&gt;edit_resource&lt;/code&gt; method. If a resource block does not exist in the resource collection, it will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c6a8dff6f2b0bfeb593467affd551eab0fbcb4" translate="yes" xml:space="preserve">
          <source>Define a resource block. If a resource with the same name exists in the resource collection, its properties will be updated with the contents of the resource block defined by the &lt;code&gt;edit_resource&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8811e7f43c24713240ea5fb066b8ef558d1ab1a7" translate="yes" xml:space="preserve">
          <source>Define a search query as a space-separated list of servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b7254ef434be731dd5cbb430f915a8ad8e0de2" translate="yes" xml:space="preserve">
          <source>Define a search query as a space-separated list of servers. If there is more than one item in the list, put quotes around the entire list. For example: &lt;code&gt;--manual-list &quot;server01 server 02 server 03&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba855b7eb8218aa4086655df8328c77b6ff0106" translate="yes" xml:space="preserve">
          <source>Define a string that is to be used to replace all occurrences of a file name. Default: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f3995495a026e2959048e7a3eed0022f85caf3e" translate="yes" xml:space="preserve">
          <source>Define a string that is to be used to replace the first occurrence of a file name. Default: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90cf8a8a74d092c1764c176c0d636a5872ce083" translate="yes" xml:space="preserve">
          <source>Define each frontend server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b191ae1ae69bdea2e5e814079a8059b4798fe1c" translate="yes" xml:space="preserve">
          <source>Define the API FQDN:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b812741ce141cb7c444b93730fd1f1542f4aa8" translate="yes" xml:space="preserve">
          <source>Define the backend server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712b99f7b65624b02c1252ff64d075879a5f3604" translate="yes" xml:space="preserve">
          <source>Define the backend virtual IP address:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99eb3b8062373ef3e1612e5c324cb267d189c6fb" translate="yes" xml:space="preserve">
          <source>Define the primary backend server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c3c58be8ec07c81e300d2b08ee6b5809934e9d" translate="yes" xml:space="preserve">
          <source>Define the secondary backend server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775b65698234699eafbfe8342a4d0a9b0f46cd78" translate="yes" xml:space="preserve">
          <source>Define the topology type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f93760d363cc200dd9d7e6215bd45d4aafa401e" translate="yes" xml:space="preserve">
          <source>Define this resource block to do nothing until notified by another resource to take action. When this resource is notified, this resource block is either run immediately or it is queued up to be run at the end of the chef-client run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bccf97eac5836d9074969929dceebd76fb915dc" translate="yes" xml:space="preserve">
          <source>Define variables for the package &lt;code&gt;version&lt;/code&gt; and the &lt;code&gt;install_path&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77cb93117b1ec159722bc3e6593901fe118df366" translate="yes" xml:space="preserve">
          <source>Defined as variables in a &lt;strong&gt;template&lt;/strong&gt; resource block within the custom resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca617d726b119099592ed5f1eb19566d0648fb3f" translate="yes" xml:space="preserve">
          <source>Defined in a .kitchen.yml file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7ff5f03d3daa497de06ce43ab30915c1d98396" translate="yes" xml:space="preserve">
          <source>Defines each action the custom resource may take</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4784a402f37ef90a23959ac5bbde86951cd84053" translate="yes" xml:space="preserve">
          <source>Defining a cookbook named &lt;code&gt;website&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9d06e25faabc21e3fd6cf854f9f03b7760cb10" translate="yes" xml:space="preserve">
          <source>Defining an action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbdfc599b2e58efbc60d4f3c5a5cf4f465ef3871" translate="yes" xml:space="preserve">
          <source>Defining two properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d09787859c2bb97d8b99448a3bd8842e71471e2" translate="yes" xml:space="preserve">
          <source>Definition vs. Resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15225baac48fc3d689cb2b0f74b936eff4339ff7" translate="yes" xml:space="preserve">
          <source>Definitions</source>
          <target state="translated">Definitions</target>
        </trans-unit>
        <trans-unit id="f6fdbe48dc54dd86f63097a03bd24094dedd713a" translate="yes" xml:space="preserve">
          <source>Delete</source>
          <target state="translated">Delete</target>
        </trans-unit>
        <trans-unit id="d6726bb9e3188abc620fa3463e898c825f2ade7d" translate="yes" xml:space="preserve">
          <source>Delete Branch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3880673ecdba5648aa85ff88a9372e7ebe666450" translate="yes" xml:space="preserve">
          <source>Delete Data Bag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021bae6ce51ad44d844c571d96e8bace382cb8cb" translate="yes" xml:space="preserve">
          <source>Delete Environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39cda97e3dd13d5a1cd369e0d8457e81b06fc98" translate="yes" xml:space="preserve">
          <source>Delete Item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af587987356198293e2b65cf3d9713fb0492b1eb" translate="yes" xml:space="preserve">
          <source>Delete Role</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165b38209eadb5425dc096a4ec21c00be555a074" translate="yes" xml:space="preserve">
          <source>Delete a directory, including the contents of that directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd71615741356ce5487a326ff02aca21d0f1129" translate="yes" xml:space="preserve">
          <source>Delete a directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f55705e486ea8516926708c08c13c9256e8a95e" translate="yes" xml:space="preserve">
          <source>Delete a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e952d66603c2e0fb608317471008306b711e8940" translate="yes" xml:space="preserve">
          <source>Delete a launchd property list. This will unload a daemon or agent, if loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d55d54527a20655a5921c4bf0528c19d81671a30" translate="yes" xml:space="preserve">
          <source>Delete a link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3669011f070f12d55509a1a893ad4eb60624c33" translate="yes" xml:space="preserve">
          <source>Delete a route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3156cb43337aa6abfa34afeaeefda4fd86d5dc3a" translate="yes" xml:space="preserve">
          <source>Delete all cookbooks (and cookbook versions).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42b63c6b13e79ce550c627d803c998346119d16" translate="yes" xml:space="preserve">
          <source>Delete an entry from a cron table file (crontab).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49fdc353d7656e1fcc121722941d2950295069ce" translate="yes" xml:space="preserve">
          <source>Delete an environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7455775096d11acadc623481639dbad2c7ee4f80" translate="yes" xml:space="preserve">
          <source>Delete both local and remote copies of an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7841a58324bb96d5b15f036d06f6bc5930e39220" translate="yes" xml:space="preserve">
          <source>Delete both local and remote copies of an object. Default: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4c758dde27dea4346e9c6a202a99caf56ca420" translate="yes" xml:space="preserve">
          <source>Delete only the local copy of an object. A remote copy will not be deleted. Default: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484457b2f2d92616cb7f479514e72d02b4993ee0" translate="yes" xml:space="preserve">
          <source>Delete the override:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd7078887d00c5240e4a7fbe54013457f7b712f0" translate="yes" xml:space="preserve">
          <source>Delete the specified registry key and all of its subkeys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28207130888929e2c3eca0e5294d6d44444be4b9" translate="yes" xml:space="preserve">
          <source>Delete the specified values for a registry key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24df6069e649767940c65a8a5e5e27a5da0f407a" translate="yes" xml:space="preserve">
          <source>Deleting a node will not delete any corresponding API clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac209381f29d15c106fd735e989e729fdac6a8fd" translate="yes" xml:space="preserve">
          <source>Depending on how OpenSSL is configured, the &lt;code&gt;ssl_ca_path&lt;/code&gt; may need to be specified. Default value: &lt;code&gt;:verify_peer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af088a7f29e103384134d38fe54b2c5345c8c01" translate="yes" xml:space="preserve">
          <source>Deploy Cache File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449139885823c2c29f38fc91a43d6ffcaeb899e6" translate="yes" xml:space="preserve">
          <source>Deploy Phases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340a9f97b5765d0873155e90ac2cd8093b8cd5dc" translate="yes" xml:space="preserve">
          <source>Deploy Strategies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa712ed5dc8711a9c1e16523d647f9a130ace2b" translate="yes" xml:space="preserve">
          <source>Describes the desired state for a configuration item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="1dd963befdcbed7319530515095a2401fa78732c" translate="yes" xml:space="preserve">
          <source>Description, Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf0e8fc5891fb96b0536bc7a25b48a064c4580d" translate="yes" xml:space="preserve">
          <source>Desired State Configuration (DSC) is a feature of Windows PowerShell that provides &lt;a href=&quot;http://technet.microsoft.com/en-us/library/dn249912.aspx&quot;&gt;a set of language extensions, cmdlets, and resources&lt;/a&gt; that can be used to declaratively configure software. DSC is similar to Chef, in that both tools are idempotent, take similar approaches to the concept of resources, describe the configuration of a system, and then take the steps required to do that configuration. The most important difference between Chef and DSC is that Chef uses Ruby and DSC is exposed as configuration data from within Windows PowerShell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c247a98668c2f01967fce7accf68b862da04c3f" translate="yes" xml:space="preserve">
          <source>Determine dependencies from objects located on the Chef server instead of in the local chef-repo. Default: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0124bbc98e41c73735ce077e81fa2a703b32ba" translate="yes" xml:space="preserve">
          <source>Developing cookbooks and recipes (and authoring them using Ruby syntax and patterns)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df485c871329671f46570634d63216761441bcd6" translate="yes" xml:space="preserve">
          <source>Devices</source>
          <target state="translated">Devices</target>
        </trans-unit>
        <trans-unit id="9c2b80c516d90c9658a3e835a738bfeef37d0022" translate="yes" xml:space="preserve">
          <source>Directories that are used by Chef on the Microsoft Windows platform cannot have spaces. For example, &lt;code&gt;/c/Users/Steven Danno&lt;/code&gt; will not work, but &lt;code&gt;/c/Users/StevenDanno&lt;/code&gt; will.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6b14f9fe13ffe2b07b7a707782f3492bb15c1b" translate="yes" xml:space="preserve">
          <source>Directories within &lt;code&gt;/website&lt;/code&gt; named &lt;code&gt;/cities&lt;/code&gt;, &lt;code&gt;/places&lt;/code&gt;, and &lt;code&gt;/football&lt;/code&gt;, which contains pages about cities, places, and football teams</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b892fe0c040fa8a944037d1d2817c41ab7da958" translate="yes" xml:space="preserve">
          <source>Directory</source>
          <target state="translated">Directory</target>
        </trans-unit>
        <trans-unit id="99946884377a9fee47f0a9dadc16a697de435a38" translate="yes" xml:space="preserve">
          <source>Directory Structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02bf41e4986898774208f0a97a206094318f91ac" translate="yes" xml:space="preserve">
          <source>Disable a launchd property list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89fdb66fc36fee8f58ee7aecc4fa2d55fe53e45" translate="yes" xml:space="preserve">
          <source>Disable a service. This action is equivalent to a &lt;code&gt;Disabled&lt;/code&gt; startup type on the Microsoft Windows platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d637d02b7aba07c75e922d5b0e70a2db9546753a" translate="yes" xml:space="preserve">
          <source>Disable a service. This action is equivalent to a &lt;code&gt;Disabled&lt;/code&gt; startup type on the Microsoft Windows platform. This action is not supported when using System Resource Controller (SRC) on the AIX platform because System Resource Controller (SRC) does not have a standard mechanism for enabling and disabling services on system boot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cd5bf04eb96fd0e5437dd3b095970bde31b767" translate="yes" xml:space="preserve">
          <source>Disable the handler for the current chef-client run on the current node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1553a06dc58f777c457578e1a67649c20d0d823c" translate="yes" xml:space="preserve">
          <source>Disabling the Apache Qpid daemon on CentOS and Red Hat systems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b32fc836e84d9a04ecb737a739aa3173253d5d3" translate="yes" xml:space="preserve">
          <source>Disk Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acbbe75f11a8a5b874967c892ada42011a079e4f" translate="yes" xml:space="preserve">
          <source>Disk space estimates assume that the Reporting add-on is not installed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b90b686d906dfe96911dd3f2f38223708001d62" translate="yes" xml:space="preserve">
          <source>Disks</source>
          <target state="translated">Disks</target>
        </trans-unit>
        <trans-unit id="c232d31c1136a6b49a81fc732769a1298e404686" translate="yes" xml:space="preserve">
          <source>Display a node in the $EDITOR. By default, attributes that are default, override, or automatic, are not shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850ad30e97e1d3384490ba11079339ee86a2f6fc" translate="yes" xml:space="preserve">
          <source>Display all attributes in the output and show the output as JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca3146491f7747ee7355de1423a00d970432aed" translate="yes" xml:space="preserve">
          <source>Display normal attributes in the output and to show the output as JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c99f1855558dd387cc29ab375056658def8749" translate="yes" xml:space="preserve">
          <source>Do a one-time checkout from git &lt;strong&gt;or&lt;/strong&gt; use when a branch in the upstream repository is named &lt;code&gt;deploy&lt;/code&gt;. To prevent the &lt;strong&gt;git&lt;/strong&gt; resource from attempting to check out master from master, set &lt;code&gt;enable_checkout&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; when using the &lt;code&gt;checkout_branch&lt;/code&gt; property. See &lt;code&gt;revision&lt;/code&gt;. Default value: &lt;code&gt;deploy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4ca1b92a4119350f5a4fe9bfc833a581e54c8e" translate="yes" xml:space="preserve">
          <source>Do anything that can be done with Ruby</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d1f95ccf416b8c92cd6b9962b8884cf0305b9c" translate="yes" xml:space="preserve">
          <source>Do not run this command on the secondary back-end server!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3602bf1fa8c557308f1490ac60043bc26a85c4" translate="yes" xml:space="preserve">
          <source>Do not use the &lt;code&gt;ifconfig&lt;/code&gt; command as it will not show all aliases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c521b6d12a65015ca82e5e285d2f39b3246803b" translate="yes" xml:space="preserve">
          <source>Do some basic arithmetic:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c7dd7ef6767859363ae1932a37452672de1454" translate="yes" xml:space="preserve">
          <source>Do something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a09d8fe71d819660f00ffa7e97f5581804bd696d" translate="yes" xml:space="preserve">
          <source>Do this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1844766582c3ef45ba9744b55d4684dd804503c" translate="yes" xml:space="preserve">
          <source>Does not have an indeterminate status, such as a service for which only the watcher is &amp;ldquo;running&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81075791140c4efe2a9436719035f4f4105ed450" translate="yes" xml:space="preserve">
          <source>Does not support common resource properties, such as &lt;code&gt;notifies&lt;/code&gt;, &lt;code&gt;subscribes&lt;/code&gt;, &lt;code&gt;only_if&lt;/code&gt;, and &lt;code&gt;not_if&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa635a3f94475db820f550d816ba30939d16d31b" translate="yes" xml:space="preserve">
          <source>Does not support why-run mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9477fa9d276f0919867ac5ec9856e1145c875228" translate="yes" xml:space="preserve">
          <source>Does this work with chef-solo?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3d2fd61b166aa43f9c6f1674d2b47be36230f6" translate="yes" xml:space="preserve">
          <source>Downgrade a package to satisfy requested version requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a479c9c34e878d07b4d67a73a48f432ad7dc53c8" translate="yes" xml:space="preserve">
          <source>Download</source>
          <target state="translated">Download</target>
        </trans-unit>
        <trans-unit id="6dff41f945dd6692c47c72c96be91103f934652c" translate="yes" xml:space="preserve">
          <source>Download File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bbdd3357a0b99d8034ca34ac55f722718913610" translate="yes" xml:space="preserve">
          <source>Download all cookbook files and templates at the beginning of the chef-client run. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981cafece40d17ba4330b944aec06a87b27eea55" translate="yes" xml:space="preserve">
          <source>Download only new and modified files. Set to &lt;code&gt;false&lt;/code&gt; to download all files. Default: &lt;code&gt;--diff&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77121bc48f580024bd0dd616390700c1f9c6be2e" translate="yes" xml:space="preserve">
          <source>Download the &lt;strong&gt;chef_handler&lt;/strong&gt; cookbook</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8fc9a624c04e3fdb735e5b84ca64695e136933" translate="yes" xml:space="preserve">
          <source>Download the chef-repo as a tar.gz file and place it into local version source control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5163d13991d1638194bbd5597a4cb6994e09ca" translate="yes" xml:space="preserve">
          <source>Download the most recent version of a cookbook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7273a5188979bdce2c10b4d603c8ddd331b5f43" translate="yes" xml:space="preserve">
          <source>Download the package from &lt;a href=&quot;http://downloads.chef.io/chef-server/&quot;&gt;http://downloads.chef.io/chef-server/&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabfb68d60b1f5e5ce67f0418e9df469fa36fee4" translate="yes" xml:space="preserve">
          <source>Download the packages from &lt;a href=&quot;http://downloads.chef.io/chef-server/&quot;&gt;http://downloads.chef.io/chef-server/&lt;/a&gt; and &lt;a href=&quot;http://downloads.chef.io/chef-ha/&quot;&gt;http://downloads.chef.io/chef-ha/&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e3a7b615e8f52996364c7d418e3ec2ee62c966" translate="yes" xml:space="preserve">
          <source>Download the packages from &lt;a href=&quot;http://downloads.chef.io/chef-server/&quot;&gt;http://downloads.chef.io/chef-server/&lt;/a&gt;. For Red Hat and CentOS 6:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e7ab247afcda92953039be85b9c959c3b77471" translate="yes" xml:space="preserve">
          <source>Download the specified packages and versions via a single HTTP transaction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40a7d6b42fde0c6cbe4a108a373a2ca5a0f96fb" translate="yes" xml:space="preserve">
          <source>Drbdadm is the management tool for DRBD. It can be used to obtain status information and to alter the state of the DRBD cluster. For more information about Drbdadm, see &lt;a href=&quot;http://www.drbd.org/users-guide/re-drbdadm.html&quot;&gt;http://www.drbd.org/users-guide/re-drbdadm.html&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed9cb1966a2e34fce8547963f8df4d6d2b70d43" translate="yes" xml:space="preserve">
          <source>Dump data asynchronously on-disk or to an append-only log file. Set to &lt;code&gt;yes&lt;/code&gt; to dump data to an append-only log file. Default value: &lt;code&gt;'no'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477cee065d8b082be2dcf8a873854610f73dd1ab" translate="yes" xml:space="preserve">
          <source>During a &lt;code&gt;knife bootstrap&lt;/code&gt; bootstrap operation, the following happens:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab8be2d2d4503e3c37796b100bc943364e47e80" translate="yes" xml:space="preserve">
          <source>During a chef-client Run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72312bbe2b980d9737245f5cb6aefefe8dfece10" translate="yes" xml:space="preserve">
          <source>During a chef-client run, the checksum for each local file is calculated and then compared against the checksum for the same file as it currently exists in the cookbook on the Chef server. A file is not transferred when the checksums match. Only files that require an update are transferred from the Chef server to a node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9afca7ab657896dc4655fe4acf2580663dec548e" translate="yes" xml:space="preserve">
          <source>During every chef-client run, the chef-client builds the attribute list using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2fee20b742e44087f47f608b4b06286bdd0a828" translate="yes" xml:space="preserve">
          <source>During every chef-client run, the following happens:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c687dd1b79c5c48143ce48c3c624bb01609f5f9" translate="yes" xml:space="preserve">
          <source>During the above run, the &lt;code&gt;sea:power&lt;/code&gt; vault item was updated with the &lt;code&gt;ubuntu-12.04&lt;/code&gt; client during the validatorless bootstrap. Previously, it only had the two admins authorized to view the content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512876331dca43ea4a98086fc06fc855ccb3cf33" translate="yes" xml:space="preserve">
          <source>During the initial chef-client run, the chef-client will register with the Chef server using the private key assigned to the chef-validator, after which the chef-client will obtain a &lt;code&gt;client.pem&lt;/code&gt; private key for all future authentication requests to the Chef server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e7d73410461d58265ae18985f42c23ed03f306" translate="yes" xml:space="preserve">
          <source>Dynamic Resolution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086bfb42cb0e1f0682c42f25c92a8f7e76b5bda4" translate="yes" xml:space="preserve">
          <source>ENV</source>
          <target state="translated">ENV</target>
        </trans-unit>
        <trans-unit id="2d37e6c482da3845a54ce77b4e73d1d149175e90" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;control&lt;/code&gt; block must define at least one validation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b85966edf93d37e6f13bd316447d0761cb0441d" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;it&lt;/code&gt; statement defines a single validation. &lt;code&gt;it&lt;/code&gt; statements are processed individually when the chef-client is run in audit-mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9feb225b9aaed867a6285cb2f69d2c3a0ee8de26" translate="yes" xml:space="preserve">
          <source>Each Chef server in a high availabilty configuration must have an identical chef-server.rb file that is located in the &lt;code&gt;/etc/opscode/&lt;/code&gt; directory on each server. This file describes the topology of the high availability configuration. On the primary backend server, create a file named chef-server.rb and save it in the &lt;code&gt;/etc/opscode/&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a6dd9184c8e0fafb6090a806abf99567b77c13" translate="yes" xml:space="preserve">
          <source>Each attribute type is listed in order of precedence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93c500270a314af2f240a1834990199289e3be9" translate="yes" xml:space="preserve">
          <source>Each attribute value shown is the value that is set for that precedence level</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a77d04a6994a0aec814d0006176b50d63e73ee" translate="yes" xml:space="preserve">
          <source>Each audit is authored within a recipe using the &lt;code&gt;control_group&lt;/code&gt; and &lt;code&gt;control&lt;/code&gt; methods that are part of the Recipe DSL. Recipes that contain audits are added to the run-list, after which they can be processed by the chef-client. Output will appear in the same location as the regular chef-client run (as specified by the &lt;code&gt;log_location&lt;/code&gt; setting in the client.rb file).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa59ad4bc76956f6e92fb38d6c6ed5b26de9e4a" translate="yes" xml:space="preserve">
          <source>Each custom resource must have at least one action that is defined within an &lt;code&gt;action&lt;/code&gt; block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614c21f210147aaf5cc62b093f313efe6b6909b8" translate="yes" xml:space="preserve">
          <source>Each front end machine always runs the &lt;strong&gt;oc_bifrost&lt;/strong&gt; and &lt;strong&gt;opscode-erchef&lt;/strong&gt; services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00d84ba1ae4663ba9068fb33808acb58da3f3a1" translate="yes" xml:space="preserve">
          <source>Each node has a 1:many relationship with policy settings stored on the Chef server. This relationship is based on the policy group to which the node is associated, and then the policy settings assigned to that group:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52565cf362a4b258dc1cec779ceb8122594c1ad" translate="yes" xml:space="preserve">
          <source>Each of these callback types can be used in one of three ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8089d8280cfd6ec0eb81c47a6718241888ff6ff4" translate="yes" xml:space="preserve">
          <source>Each of these services requires 25 connections, above the default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b294c9f9afbe061f4706b03f9ec346b16d4fa032" translate="yes" xml:space="preserve">
          <source>Each organization-specific authentication request must include &lt;code&gt;/organizations/NAME&lt;/code&gt; as part of the name for the endpoint. For example, the full endpoint for getting a list of roles:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59949348abc6618c3c9fea7e21fd03e20a6d4ff" translate="yes" xml:space="preserve">
          <source>Each request to the Chef server from those executables sign a special group of HTTP headers with the private key. The Chef server then uses the public key to verify the headers and verify the contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029d682bdb9c0b1b65194850ccdaa42274ab0582" translate="yes" xml:space="preserve">
          <source>Each sandbox has a unique identifier. The &lt;code&gt;/sandboxes/ID&lt;/code&gt; endpoint has the following methods: &lt;code&gt;PUT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abf522ac2ce25c38ef4174cc249179a0aac984c" translate="yes" xml:space="preserve">
          <source>Each subcommand has its own set of arguments and options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b0596dda7ae468c4cdd3f669dba62bc8e7621c" translate="yes" xml:space="preserve">
          <source>Early RC candidates for the Chef server 12 release named this command &lt;code&gt;org-associate&lt;/code&gt;. This is the same command, with the exception of the &lt;code&gt;--admin&lt;/code&gt; flag, which is added to the command (along with the rename) for the upcoming final release of Chef server 12.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55b374e4c63e8e1a679170d90c906a67b7bea62" translate="yes" xml:space="preserve">
          <source>Early RC candidates for the Chef server 12 release named this command &lt;code&gt;org-disociate&lt;/code&gt;. This is the same command, but renamed for the upcoming final release of Chef server 12.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5301648dcf6b53cefc9ed52999aaa92d4603cae0" translate="yes" xml:space="preserve">
          <source>Edit</source>
          <target state="translated">Edit</target>
        </trans-unit>
        <trans-unit id="658e65cba8796214fa05835b995c05c156573914" translate="yes" xml:space="preserve">
          <source>Edit Attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff79b84150cfd2ab9197c4c5fbb3f15f5ae0e6f" translate="yes" xml:space="preserve">
          <source>Edit Default Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924fc4e484dafb7d4a9134e5939da2d25767b546" translate="yes" xml:space="preserve">
          <source>Edit Details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab4e36f2d6c780254c45e0c962c5abc3d1799cf" translate="yes" xml:space="preserve">
          <source>Edit Item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e3352f3ba529331cf4f993580f9d022d0324f2" translate="yes" xml:space="preserve">
          <source>Edit Override Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a944bcd08a14bcc7887ee3c1b4dabbcd9b166e81" translate="yes" xml:space="preserve">
          <source>Edit Role Run-list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1965d488d5100a86430b70b34b487d11df3b7c03" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;validation_key&lt;/code&gt; setting to be something that isn&amp;rsquo;t a path to an existent ORGANIZATION-validator.pem file. For example: &lt;code&gt;/nonexist&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f30497914fc22a3e78a8736b81ff00096269722" translate="yes" xml:space="preserve">
          <source>Edited using a text editor, and then re-uploaded to the Chef server as part of a cookbook upload</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a408aa816b466ae93d43346cd1bd5372a8fca6ed" translate="yes" xml:space="preserve">
          <source>Editing a user&amp;rsquo;s profile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53cd5459225af1162e4f158c0212cfe3a57a865" translate="yes" xml:space="preserve">
          <source>Effectively leverages resources that are built into Chef</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ef1e114602565a824d502ff29b57d9087dae77" translate="yes" xml:space="preserve">
          <source>Elements of good approaches to building cookbooks and recipes that are reliable include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb33245dcf5e37e80b334863e860642d46474752" translate="yes" xml:space="preserve">
          <source>Elevate Commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7e6c7a6cfd5694f2d37fb122d488234ec70ce0" translate="yes" xml:space="preserve">
          <source>Embed Ruby in a string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b800e64c92d2166f533a8247adb2c93317dd2c" translate="yes" xml:space="preserve">
          <source>Empty Run-lists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6448c862be6ac0b46ab0d24cf00c9cb355e42a7d" translate="yes" xml:space="preserve">
          <source>Empty directories are not uploaded to the Chef server. To upload an empty directory, create a &amp;ldquo;dot&amp;rdquo; file&amp;mdash;e.g. &lt;code&gt;.keep&lt;/code&gt;&amp;mdash;in that directory to ensure that the directory itself is not empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b7bdac686e8b449e769223df4800a160df538b" translate="yes" xml:space="preserve">
          <source>Enable Chef actions. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c300b3b929efcb2b7ac04ff58535f98c95d3b425" translate="yes" xml:space="preserve">
          <source>Enable ETag headers. Set to &lt;code&gt;false&lt;/code&gt; to disable ETag headers. To use this setting, &lt;code&gt;use_conditional_get&lt;/code&gt; must also be set to &lt;code&gt;true&lt;/code&gt;. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa6bf826261c4ac8d9eca9efa81574b6598e1bc" translate="yes" xml:space="preserve">
          <source>Enable Features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9841e69608db6b3cff7e090b9c8299697700ce" translate="yes" xml:space="preserve">
          <source>Enable If-Modified-Since headers. Set to &lt;code&gt;false&lt;/code&gt; to disable If-Modified-Since headers. To use this setting, &lt;code&gt;use_conditional_get&lt;/code&gt; must also be set to &lt;code&gt;true&lt;/code&gt;. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f03828758579ede69b00cb64c78878f0e52e633b" translate="yes" xml:space="preserve">
          <source>Enable Internet Protocol version 6 (IPv6) addresses. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411fee6f34a8f76832190f0735057979c52bac85" translate="yes" xml:space="preserve">
          <source>Enable Reporting, which performs data collection during a chef-client run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="becee2125c5247fd7194b8aa72a1eff0ebb2d7b7" translate="yes" xml:space="preserve">
          <source>Enable Reporting, which performs data collection during a chef-client run. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543ab8ba7fe570a862a3caaa5aeccefe816bee63" translate="yes" xml:space="preserve">
          <source>Enable SSH agent forwarding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b94520cb840a11ccce4bfb63c7a5aabd1d9044" translate="yes" xml:space="preserve">
          <source>Enable TCP/IP transactions. Default value: &lt;code&gt;on&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b6db92589d10f195ce446745552bc93610cca8" translate="yes" xml:space="preserve">
          <source>Enable TLS. When enabled, communication with the LDAP server is done via a secure SSL connection on a dedicated port. When &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;ldap['port']&lt;/code&gt; is also set to &lt;code&gt;636&lt;/code&gt;. Default value: &lt;code&gt;false&lt;/code&gt;. Must be &lt;code&gt;false&lt;/code&gt; when &lt;code&gt;ldap['ssl_enabled']&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e2a6c73d852b72b2d0df1b08ec9b648c8f6724" translate="yes" xml:space="preserve">
          <source>Enable a service at boot. This action is equivalent to an &lt;code&gt;Automatic&lt;/code&gt; startup type on the Microsoft Windows platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245c58c2ca2d6603009a7c883d217b759343d8cc" translate="yes" xml:space="preserve">
          <source>Enable a service at boot. This action is equivalent to an &lt;code&gt;Automatic&lt;/code&gt; startup type on the Microsoft Windows platform. This action is not supported when using System Resource Controller (SRC) on the AIX platform because System Resource Controller (SRC) does not have a standard mechanism for enabling and disabling services on system boot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4bae2f8e5b014d62100411e28521fba49331021" translate="yes" xml:space="preserve">
          <source>Enable a service. Default value: &lt;code&gt;'false'&lt;/code&gt;. This value should not be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e128b3ff5dcb8474accd2b50cbc1b31986527f5" translate="yes" xml:space="preserve">
          <source>Enable a service. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b129573d016380b3b6d54919f7c9b62eea9c2bbd" translate="yes" xml:space="preserve">
          <source>Enable a service. Enable this setting for backend servers in high availability topologies. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70fb0d0f25f72b0b0a2b42cff55741d41ae27d86" translate="yes" xml:space="preserve">
          <source>Enable active rehashing. Default value: &lt;code&gt;'no'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eeb869ee3e54fbbfb7312deba597fb4ad7ce178" translate="yes" xml:space="preserve">
          <source>Enable additional features of the Chef server! The packages may be downloaded directly as part of the installation process or they may be first downloaded to a local directory, and then installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="213b89a8136a322c548064f6a9050b89678014d7" translate="yes" xml:space="preserve">
          <source>Enable audit-mode. Set to &lt;code&gt;audit-only&lt;/code&gt; to skip the converge phase of the chef-client run and only perform audits. Possible values: &lt;code&gt;audit-only&lt;/code&gt;, &lt;code&gt;disabled&lt;/code&gt;, and &lt;code&gt;enabled&lt;/code&gt;. Default value: &lt;code&gt;disabled&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a8f2bd725910acac1f7164b9654cc7388cdddee" translate="yes" xml:space="preserve">
          <source>Enable chef-zero. This setting requires &lt;code&gt;local_mode&lt;/code&gt; to be set to &lt;code&gt;true&lt;/code&gt;. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f9f6748cc97475f6a576f9b37c4f6e386b0a9e" translate="yes" xml:space="preserve">
          <source>Enable chef-zero. This setting requires &lt;code&gt;local_mode&lt;/code&gt; to be set to &lt;code&gt;true&lt;/code&gt;. Default value: &lt;code&gt;false&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88df8735448f52a66e688c194295833a7ac62b8" translate="yes" xml:space="preserve">
          <source>Enable compression for the specified MIME-types. Default value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907cc4bd4d6dc29c4759ec02ef187c013f563aff" translate="yes" xml:space="preserve">
          <source>Enable conditional HTTP requests by using a conditional &lt;code&gt;GET&lt;/code&gt; (with the If-Modified-Since header) or an opaque identifier (ETag). To use If-Modified-Since headers, &lt;code&gt;use_last_modified&lt;/code&gt; must also be set to &lt;code&gt;true&lt;/code&gt;. To use ETag headers, &lt;code&gt;use_etag&lt;/code&gt; must also be set to &lt;code&gt;true&lt;/code&gt;. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab557ca8054167ba2e6a86241e9fb271988899e4" translate="yes" xml:space="preserve">
          <source>Enable gzip compression. Default value: &lt;code&gt;on&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65ea798003e42c0dd5e98c2ed8ac1c8c1ac8e95" translate="yes" xml:space="preserve">
          <source>Enable gzip depending on the version of the HTTP request. Default value: &lt;code&gt;1.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488027fc32e58b9f5e7badfab4592a3a41c9c543" translate="yes" xml:space="preserve">
          <source>Enable or disable sending events to the Microsoft Windows &amp;ldquo;Application&amp;rdquo; event log. When &lt;code&gt;false&lt;/code&gt;, events are sent to the Microsoft Windows &amp;ldquo;Application&amp;rdquo; event log at the start and end of a chef-client run, and also if a chef-client run fails. Set to &lt;code&gt;true&lt;/code&gt; to disable event logging. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa41b1961361acd75444918293e4b65a2a2d966" translate="yes" xml:space="preserve">
          <source>Enable proxy authentication to the Chef server web user interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e7c31b84ab8f84aea4d97ade27ce2291cf4a67" translate="yes" xml:space="preserve">
          <source>Enable proxy authentication to the Chef server web user interface. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31851e79843841db882f292c131ab24af97c2a0e" translate="yes" xml:space="preserve">
          <source>Enable sticky sessions on the load balancer. Configure all instances of the Chef management console to point to one Redis load balancer instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a22d28a80d2ac98db3253132d0fad1e65ad5fb7" translate="yes" xml:space="preserve">
          <source>Enable stream downloading of cookbooks. This setting (when &lt;code&gt;true&lt;/code&gt;) typically results in improved cookbook download performance, especially with the memory usage of the &lt;strong&gt;bookshelf&lt;/strong&gt; service and the behavior of load balancers and proxies in-between the chef-client and the Chef server. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3015bd560ee6d0cb5cc55422a27dddbb855daf" translate="yes" xml:space="preserve">
          <source>Enable the Nagle buffering algorithm. Default value: &lt;code&gt;on&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922599fddb7fcaf9fa6bd396d089a866f8113301" translate="yes" xml:space="preserve">
          <source>Enable the Nagle buffering algorithm. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d58a2db470705f4c80674f02b31fb8c12ec8804" translate="yes" xml:space="preserve">
          <source>Enable the handler for the current chef-client run on the current node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79facf19821a3d317503fd556c35b4d5b17ac7f8" translate="yes" xml:space="preserve">
          <source>Enables the Nginx &lt;code&gt;stub_status&lt;/code&gt; module. See &lt;code&gt;nginx['stub_status']['allow_list']&lt;/code&gt;, &lt;code&gt;nginx['stub_status']['listen_host']&lt;/code&gt;, &lt;code&gt;nginx['stub_status']['listen_port']&lt;/code&gt;, and &lt;code&gt;nginx['stub_status']['location']&lt;/code&gt;. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb49763b3c457646699e30a92eff550f94184c1" translate="yes" xml:space="preserve">
          <source>Encrypting a data bag item requires a secret key. A secret key can be created in any number of ways. For example, OpenSSL can be used to generate a random number, which can then be used as the secret key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94f7c443fe62245e3810de746698500ccc947f7" translate="yes" xml:space="preserve">
          <source>End chef-client Run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71c52711a24936e87649f5f6c786f704fc55482" translate="yes" xml:space="preserve">
          <source>Endpoints</source>
          <target state="translated">Endpoints</target>
        </trans-unit>
        <trans-unit id="2bee253af6b48a082a4c3f942f10322b401bfa56" translate="yes" xml:space="preserve">
          <source>Ensure that all cookbooks to which the installed cookbook has a dependency are not installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420d53858361f37359abe6b9cd86041fbe88ec12" translate="yes" xml:space="preserve">
          <source>Ensure that sensitive resource data is not logged by the chef-client. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7126c3d548e52edf65a599a19b526327c0ad9c55" translate="yes" xml:space="preserve">
          <source>Ensure that sensitive resource data is not logged by the chef-client. Default value: &lt;code&gt;false&lt;/code&gt;. This property only applies to the &lt;strong&gt;execute&lt;/strong&gt;, &lt;strong&gt;file&lt;/strong&gt; and &lt;strong&gt;template&lt;/strong&gt; resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412307c6aba2daa584d55cd4e40bf85b557c4ef9" translate="yes" xml:space="preserve">
          <source>Ensure that the MSI is on the target node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd4bfdc330225399f933f96e16ac242394dc230" translate="yes" xml:space="preserve">
          <source>Ensure that the current branch is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798a2a008a50a9e2c6b2e23f15dbc822acd4dd59" translate="yes" xml:space="preserve">
          <source>Ensure that the workstation meets all of the software prerequisites and that it has access to a Chef server and to a machine that can host a node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af7b56b932444f98d13166594bb5992c7dc9c9d" translate="yes" xml:space="preserve">
          <source>Ensure that when a cookbook has a dependency on one (or more) cookbooks, those cookbooks are also uploaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffcce0064f7269ce75a21a71dd9d7e568a2fddec" translate="yes" xml:space="preserve">
          <source>Enterprise Linux Updates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a793411de43fe984651ad8c8d1fabe178854454d" translate="yes" xml:space="preserve">
          <source>Entirely remove a cookbook (or cookbook version) from the Chef server. Use this action carefully because only one copy of any single file is stored on the Chef server. Consequently, purging a cookbook disables any other cookbook that references one or more files from the cookbook that has been purged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec072bba7befaa68af710fe3549eb0491d7badd1" translate="yes" xml:space="preserve">
          <source>Environment Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8538e5f76e16b9ceb069b15b3eb1cff0c6fc231" translate="yes" xml:space="preserve">
          <source>Environment data looks like the following in JSON:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017b53c42e43b39e1f5aabf6f7280c2f777243a2" translate="yes" xml:space="preserve">
          <source>Environments</source>
          <target state="translated">Environments</target>
        </trans-unit>
        <trans-unit id="b799aa74326f40d1433eaaf15414b376d0fd4e91" translate="yes" xml:space="preserve">
          <source>Environments can be managed from the Chef management console web user interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164c4bebb13bf9992ee39350d9e4270985b4a89a" translate="yes" xml:space="preserve">
          <source>Environments define process, such as &amp;ldquo;dev&amp;rdquo;, &amp;ldquo;staging&amp;rdquo;, or &amp;ldquo;production&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08461c2647a1eaab56b037dbbab138ec6511848d" translate="yes" xml:space="preserve">
          <source>Environments stored as JSON data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3ac26c9e7847c694933e379cd537549cc5211a" translate="yes" xml:space="preserve">
          <source>Erchef is a complete rewrite of the core API for the Chef server, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original Ruby-based Chef server, which means that cookbooks and recipes that were authored for the Ruby-based Chef server will continue to work on the Erlang-based Chef server. The chef-client is still written in Ruby.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73005778a4f4d967ddcff2ebbccae0f463990331" translate="yes" xml:space="preserve">
          <source>Erlang</source>
          <target state="translated">Erlang</target>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="fa647c1ab7e45907989ea68b5acf3879755d28ca" translate="yes" xml:space="preserve">
          <source>Error Messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e89b54ec73689553af30dd03b5f687e16616fb" translate="yes" xml:space="preserve">
          <source>Escape Character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a351c0274d8773e1d2e2709590a86092f985bc66" translate="yes" xml:space="preserve">
          <source>Establish Failover</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7ba22fc6a5ab1008342e1e84d5ba69100cfb3f" translate="yes" xml:space="preserve">
          <source>Evaluates a string command using the &lt;strong&gt;bash&lt;/strong&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e78af0f120e35d48b4fd6032b1e14b406130a45" translate="yes" xml:space="preserve">
          <source>Evaluates a string command using the &lt;strong&gt;batch&lt;/strong&gt; resource. Default value (within a &lt;strong&gt;batch&lt;/strong&gt; resource block): &lt;code&gt;:batch&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642471a9e469b3ddf645494db4565590dc6355a6" translate="yes" xml:space="preserve">
          <source>Evaluates a string command using the &lt;strong&gt;csh&lt;/strong&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2cb7e1192d27d03b67e1692f5a8db5f0437235" translate="yes" xml:space="preserve">
          <source>Evaluates a string command using the &lt;strong&gt;perl&lt;/strong&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8915e16a355b1609bd07569a6b76b162d2ecc1bf" translate="yes" xml:space="preserve">
          <source>Evaluates a string command using the &lt;strong&gt;powershell_script&lt;/strong&gt; resource. Default value (within a &lt;strong&gt;batch&lt;/strong&gt; resource block): &lt;code&gt;:powershell_script&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed32de8eb3c6de22672ac5c8b9f815c023e24c8" translate="yes" xml:space="preserve">
          <source>Evaluates a string command using the &lt;strong&gt;python&lt;/strong&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1594d584ee7766933f99ebe56d90b53adaa0172" translate="yes" xml:space="preserve">
          <source>Evaluates a string command using the &lt;strong&gt;ruby&lt;/strong&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbabbe71b9c68820970775431d61b85fe30140ac" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;web.rb&lt;/code&gt; file does not contain attributes and values for &lt;code&gt;minspareservers&lt;/code&gt;, &lt;code&gt;maxspareservers&lt;/code&gt;, &lt;code&gt;serverlimit&lt;/code&gt;, &lt;code&gt;maxclients&lt;/code&gt;, and &lt;code&gt;maxrequestsperchild&lt;/code&gt;, the deep merge capabilities pulled them in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b0123a762e1eb2036197a32eb747e1c4cfadba" translate="yes" xml:space="preserve">
          <source>Even though the Chef server is authored in Erlang, writing code in Erlang is NOT a requirement for using Chef.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f5fbe7bd450b0d45cab73ea446cc9a2810616f" translate="yes" xml:space="preserve">
          <source>Even though this is a very simple example, the full capabilities of Ruby can be used to tackle even the most complex and demanding template requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="4c874625e9b4c4789838bc2475c5fa96b872d071" translate="yes" xml:space="preserve">
          <source>Event Handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21caf606a0e2496ef0f5a053cbe76bec439daaf" translate="yes" xml:space="preserve">
          <source>Event Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72744720f37cd9105bd06d4ce7d839702f03e66" translate="yes" xml:space="preserve">
          <source>Event handlers are not specifically part of the Recipe DSL. An event handler is declared using the &lt;code&gt;Chef.event_hander&lt;/code&gt; method, which declares the event handler within recipes in a similar manner to other Recipe DSL methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2f5c1a2947c48fa2cbfb13055cb08096c7d31a" translate="yes" xml:space="preserve">
          <source>Event messages can be sent to a team communication tool like HipChat. For example, if a chef-client run fails:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ea9e48719d2056b9cad0ec272069d9fdb89637" translate="yes" xml:space="preserve">
          <source>Eventually the hosts will quiesce and report &lt;code&gt;ds:UpToDate/UpToDate&lt;/code&gt;. Depending on how long the secondary was down, how much data was written to the primary in the interim, and the speed of the shared network, this process could be nearly instantaneous, or could take several minutes. The processes used to manage the Chef server should not require manipulation in any way during this recovery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52581b9cd31b84f34a112459d36867571711658" translate="yes" xml:space="preserve">
          <source>Every cookbook requires a small amount of metadata. A file named metadata.rb is located at the top of every cookbook directory structure. The contents of the metadata.rb file provides hints to the Chef server to help ensure that cookbooks are deployed to each node correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e570985a8ba994c20adb059468daa2a3d3a9b68" translate="yes" xml:space="preserve">
          <source>Every request made by the chef-client to the Chef server must be an authenticated request using the Chef server API and a private key. When the chef-client makes a request to the Chef server, the chef-client authenticates each request using a private key located in &lt;code&gt;/etc/chef/client.pem&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277bae0eb176ad22376fcdcc824e85d36bdd9cdb" translate="yes" xml:space="preserve">
          <source>Every resource has its own set of actions and properties. Most properties have default values. Some properties are available to all resources, for example those used to send notifications to other resources and guards that help ensure that some resources are idempotent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="decae9175eb60f3a9da3aa645f2807dabcfd4cc5" translate="yes" xml:space="preserve">
          <source>Everything else needed to author cookbooks and upload them to the Chef server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4bf5bb8ebc5de3caa132a2c5aa517ace8a442d" translate="yes" xml:space="preserve">
          <source>Exact Matching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="0606ae35885be947a0d1cd1591922788327cd118" translate="yes" xml:space="preserve">
          <source>Exception / Report</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6901fa833792385fe502e3efb1b3867f3e2688c" translate="yes" xml:space="preserve">
          <source>Exception and report handlers are made available to the chef-client run in one of the following ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f023ca74733a1128dbdb79dc74b21f759a6a511" translate="yes" xml:space="preserve">
          <source>Exception and report handlers are used to trigger certain behaviors in response to specific situations, typically identified during a chef-client run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf23fb0d8296184ff155834ec3e7b3ef2623a8fb" translate="yes" xml:space="preserve">
          <source>Exception and report handlers can be distributed using the &lt;strong&gt;chef_handler&lt;/strong&gt; cookbook. This cookbook is authored and maintained by Chef and exposes a custom resource that can be used to enable custom handlers from within recipes and to include product-specific handlers from cookbooks. The &lt;strong&gt;chef_handler&lt;/strong&gt; cookbook can be accessed here: &lt;a href=&quot;https://github.com/chef-cookbooks/chef_handler&quot;&gt;https://github.com/chef-cookbooks/chef_handler&lt;/a&gt;. See the &lt;code&gt;README.md&lt;/code&gt; for additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335736dc1268dc76dcde8a2cab22b7ab94d1c48d" translate="yes" xml:space="preserve">
          <source>Exception/Report Handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e5a21c273e3546dd39faba7a38be11ff4c06bc" translate="yes" xml:space="preserve">
          <source>Execute Conditions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d6b612836f9846305ad144b14efd276527f823" translate="yes" xml:space="preserve">
          <source>Execute a bootstrap operation with sudo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e36463096929cde3006e7f37db95cae13ffe48c" translate="yes" xml:space="preserve">
          <source>Execute a custom installation command sequence for the chef-client. This option may not be used in the same command with &lt;code&gt;--bootstrap-curl-options&lt;/code&gt;, &lt;code&gt;--bootstrap-install-sh&lt;/code&gt;, or &lt;code&gt;--bootstrap-wget-options&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd15a4f95cb4db58f457ce57a98e34497ee0222" translate="yes" xml:space="preserve">
          <source>Execute a resource using a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc59c8ea01cfeeaa356c01acd215f0268ac580d" translate="yes" xml:space="preserve">
          <source>Execute a resource using standard input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce96e6f6b1c41e41d06a637e42f4188e2c4e1a53" translate="yes" xml:space="preserve">
          <source>Expand the file system on the AIX platform using &lt;code&gt;chfs&lt;/code&gt; or by passing the &lt;code&gt;-X&lt;/code&gt; flag to &lt;code&gt;installp&lt;/code&gt; to automatically expand the logical partition (LPAR)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1704748e0c4f2e48ce24e2a2e0ada0a61ae03e" translate="yes" xml:space="preserve">
          <source>Expanded</source>
          <target state="translated">Expanded</target>
        </trans-unit>
        <trans-unit id="95b4e736438ec0a9f75fba55c3a41c6632b2cf9d" translate="yes" xml:space="preserve">
          <source>Expanded lists of roles (all of the roles that apply to a node, including nested roles) and recipes to the role and recipe attributes on a node are saved on the Chef server. The expanded lists of roles allows for searching within nodes that run a given recipe, even if that recipe is included by a role.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344cb272c86fce4f57972deccf93fe99ba19cb9f" translate="yes" xml:space="preserve">
          <source>Export the source, excluding or removing any version control artifacts and force an export of the source that is overwriting the existing copy (if it exists).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633c3295d85204b5fb63e31cc9afb15b118cba62" translate="yes" xml:space="preserve">
          <source>Export the source, excluding or removing any version control artifacts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4946dcc4487fac4c86e96119b22c739a0c144e53" translate="yes" xml:space="preserve">
          <source>Extend Chef</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e1f2fdd25b8c2413becdcb1c5364395676def4" translate="yes" xml:space="preserve">
          <source>Extend Chef in any manner that your organization requires</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a315c2486ec49f2595825bea6f7d3af50d476288" translate="yes" xml:space="preserve">
          <source>Extend a Recipe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384f9896351875ce8e825d5e7e8176fd44225151" translate="yes" xml:space="preserve">
          <source>Extensions to Chef, such as libraries, definitions, and custom resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d10c693b773b327ecf17fbda7591feccda0c54d" translate="yes" xml:space="preserve">
          <source>External</source>
          <target state="translated">External</target>
        </trans-unit>
        <trans-unit id="0cac2393dd2aa26deab251fa56b3ce2a2d8afd6c" translate="yes" xml:space="preserve">
          <source>External Cookbooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704abb23ed011b5d851ddf4d0b9986c468c7172d" translate="yes" xml:space="preserve">
          <source>External PostgreSQL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87309e63a55ff3b74850f312d07360aa377a143a" translate="yes" xml:space="preserve">
          <source>FIPS Mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d39bb227bfcef954e1eb9f72b04900451df1393" translate="yes" xml:space="preserve">
          <source>FQDN</source>
          <target state="translated">FQDN</target>
        </trans-unit>
        <trans-unit id="acb28212fba0272ee990cebd571ebe09b463312e" translate="yes" xml:space="preserve">
          <source>FTP</source>
          <target state="translated">FTP</target>
        </trans-unit>
        <trans-unit id="7e436d09bd7c0a632e407fc5943162bb439eecdc" translate="yes" xml:space="preserve">
          <source>Failed job notifications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3919ef0e12c5eaef6f4c418d7f31c6d9109f1806" translate="yes" xml:space="preserve">
          <source>Failover notifications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92c268a0adb3ea1cfaacaef0801b9a5d8284b6b" translate="yes" xml:space="preserve">
          <source>Failure Scenarios</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f24ee7e50a2bde67f84ac077bece27a44621582" translate="yes" xml:space="preserve">
          <source>Failures happen, so completely preventing a &lt;code&gt;split-brain&lt;/code&gt; event is not an absolute possibility. However, it is possible to alleviate some of the issues that crop up in any &lt;code&gt;split-brain&lt;/code&gt; event scenarios by maxing out the heartbeat network bandwidth and optimizing transfer protocols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915120b00045631c4e8983c0043b1f79dd8a3042" translate="yes" xml:space="preserve">
          <source>Fatal</source>
          <target state="translated">Fatal</target>
        </trans-unit>
        <trans-unit id="7d5e69ed1ce37445bd195c2e4183b86c281c778b" translate="yes" xml:space="preserve">
          <source>Fatal Messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad565d9d01d0e0bf91fd6a8532f6d81613338901" translate="yes" xml:space="preserve">
          <source>Feature</source>
          <target state="translated">Feature</target>
        </trans-unit>
        <trans-unit id="22598aa739dd018e162d5d5078804b5b5dd28a52" translate="yes" xml:space="preserve">
          <source>Federal Information Processing Standards (FIPS) is a United States government computer security standard that specifies security requirements for cryptography. The current version of the standard is FIPS 140-2. The chef-client can be configured to allow OpenSSL to enforce FIPS-validated security during a chef-client run. This will disable cryptography that is explicitly disallowed in FIPS-validated software, including certain ciphers and hashing algorithms. Any attempt to use any disallowed cryptography will cause the chef-client to throw an exception during a chef-client run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5fc74a0c921be17dde1b381a9a43609da45dab" translate="yes" xml:space="preserve">
          <source>Fedora</source>
          <target state="translated">Fedora</target>
        </trans-unit>
        <trans-unit id="55c6a20f8aa8856020e0b878637be4796e8d083b" translate="yes" xml:space="preserve">
          <source>Fetch and execute an installation script at the specified URL. This option may not be used in the same command with &lt;code&gt;--bootstrap-install-command&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f899e05c45032b1842faa2e2fed67db08d9b3b62" translate="yes" xml:space="preserve">
          <source>Fetching files from the &lt;code&gt;files/&lt;/code&gt; directory in a cookbook should be done with the &lt;strong&gt;cookbook_file&lt;/strong&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c326a4660b674d2f6ea82687a1e1abae2337541f" translate="yes" xml:space="preserve">
          <source>Field</source>
          <target state="translated">Field</target>
        </trans-unit>
        <trans-unit id="1720e348eebcfeaa839e6c8c392559ef23d59d01" translate="yes" xml:space="preserve">
          <source>Field descriptions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f6a90d8916e67b9f6ca2a9235a587524b53b7c" translate="yes" xml:space="preserve">
          <source>File Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6aca0bdb0783a2aacb385ae6d53d8e5f9c02530" translate="yes" xml:space="preserve">
          <source>File Modes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872a524107e9f84396a3510fa9eb3c19f41f033c" translate="yes" xml:space="preserve">
          <source>File Specificity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5023c8994cbd6d607dd19f9f86a12610ec0c2baa" translate="yes" xml:space="preserve">
          <source>File Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da18a368c7c3e3afa61b61bcc6967650e8a9e119" translate="yes" xml:space="preserve">
          <source>File distributions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce6c512ea433a7fc5c8841628e7696cd0ff7f2b" translate="yes" xml:space="preserve">
          <source>Files</source>
          <target state="translated">Files</target>
        </trans-unit>
        <trans-unit id="c4d35d906c280f71e4b11ed41600a702123f32ab" translate="yes" xml:space="preserve">
          <source>Files are managed using the following resources:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f180f9edb7c8aa059c0a5f3fbe1abdf8b7eeed6" translate="yes" xml:space="preserve">
          <source>Filter Search Results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7201f532fc473b8a39d24888df0d6b0d4c3f2e1d" translate="yes" xml:space="preserve">
          <source>Filtering on &lt;code&gt;/users&lt;/code&gt; can be done with the &lt;code&gt;external_authentication_uid&lt;/code&gt;. This is to support SAML authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a547c783b6e6831fc5a204470be88789171b6b" translate="yes" xml:space="preserve">
          <source>Final Cookbook Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddd1d8b9417508e278b2758a4eca81323672cd6" translate="yes" xml:space="preserve">
          <source>Final Resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd04253c55843aac043f7610d3fc5fae380b9a4" translate="yes" xml:space="preserve">
          <source>Finally, run the chef-client on the node using a &lt;code&gt;knife bootstrap&lt;/code&gt; command that specifies a run-list (the &lt;code&gt;-r&lt;/code&gt; option). The bootstrap template can be called using a command similar to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4549423b898f9b023c977b3d96bcad529aa900c0" translate="yes" xml:space="preserve">
          <source>Find a resource in the resource collection, and then edit it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7584a13a850bc01d4864fd792f5b60885beaa4a" translate="yes" xml:space="preserve">
          <source>Find a resource in the resource collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b754870e30512eb92d3fc92e68057021751f3a24" translate="yes" xml:space="preserve">
          <source>Finished audits are reported back to the Chef server. From there, audits are sent to the Chef Analytics platform for further analysis, such as rules processing and visibility from the actions web user interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5237101a783aac42d0235357dcf17396f35879" translate="yes" xml:space="preserve">
          <source>Firewalls</source>
          <target state="translated">Firewalls</target>
        </trans-unit>
        <trans-unit id="42b5105a64b4de4bcca1dfefa7aa7e6eeb02f075" translate="yes" xml:space="preserve">
          <source>Firewalls and Ports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="950eba097f1e367d3403b7053442ba2ecc793ca8" translate="yes" xml:space="preserve">
          <source>First install the chef-client, and then enable it to run as a service. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6bd29cc4706fac8924e725c1731406754ae45d3" translate="yes" xml:space="preserve">
          <source>First, each resource in the node object is identified and a resource collection is built. All recipes are loaded in a specific order, and then the actions specified within each of them are identified. This is also referred to as the &amp;ldquo;compile phase&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46c7bbb4a50c5fae38f43e1694b208baa56311c" translate="yes" xml:space="preserve">
          <source>Flowdock</source>
          <target state="translated">Flowdock</target>
        </trans-unit>
        <trans-unit id="f2ad1a93f9261c9a9b7caf42a9a361e1bb570654" translate="yes" xml:space="preserve">
          <source>Flush the in-memory cache before or after a Yum operation that installs, upgrades, or removes a package. Default value: &lt;code&gt;[ :before, :after ]&lt;/code&gt;. The value may also be a Hash: &lt;code&gt;( { :before =&amp;gt; true/false, :after =&amp;gt; true/false } )&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0b6ff6be5f8cdefddc1d48f1afaca4195d83a8" translate="yes" xml:space="preserve">
          <source>Follow the directions, install git (&lt;a href=&quot;http://git-scm.com/downloads&quot;&gt;http://git-scm.com/downloads&lt;/a&gt;), and then complete the remaining configuration steps on that page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ac2d550f691e2a214647d5c41cc018dd792050" translate="yes" xml:space="preserve">
          <source>Follow the steps in the installer and install the Chef development kit to your machine. The Chef development kit is installed to &lt;code&gt;/opt/chefdk/&lt;/code&gt; on UNIX and Linux systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f31038e874ad21b16119e02a44c906b27c4ff3" translate="yes" xml:space="preserve">
          <source>Follow this order for information in each resource declaration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3e0ee6aba5e7256932129184b08bde8fa72dba" translate="yes" xml:space="preserve">
          <source>Follows easy, repeatable syntax patterns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ab5de9cfb6efba6abef3d749db99231a3c5a70" translate="yes" xml:space="preserve">
          <source>Foodcritic Linting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a43990a908212a03784a18780ef09f7fcf581b2" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;PUT&lt;/code&gt; and &lt;code&gt;POST&lt;/code&gt; requests, the &lt;code&gt;Content-Type&lt;/code&gt; header must be set to &lt;code&gt;application/json&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd64fdb5da5e445137cd250b742e3bdc3c982ecc" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;not_if&lt;/code&gt; and &lt;code&gt;only_if&lt;/code&gt; attribute, why-run mode will assume these are commands or blocks that are safe to run. These conditions are not designed to be used to change the state of the system, but rather to help facilitate idempotency for the resource itself. That said, it may be possible that these attributes are being used in a way that modifies the system state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac84ac260ad2585d9136ff2230338b12dbefb81" translate="yes" xml:space="preserve">
          <source>For Chef server 12, the following high availability configurations are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73ae0696fdbcda348a0d4ccdf9bb00003b512c7" translate="yes" xml:space="preserve">
          <source>For FTP:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320fc4a4696b98ad7a9a4c9c61434eaff86bbbb8" translate="yes" xml:space="preserve">
          <source>For HTTP:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e346b80fad050142c8fa9531b8e29a80584b55e0" translate="yes" xml:space="preserve">
          <source>For HTTPS:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5de23e615564925e1ad070134313402f8241ac" translate="yes" xml:space="preserve">
          <source>For RPM Package Manager:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f9febe094594e575e597b02ac1c197e58150c8" translate="yes" xml:space="preserve">
          <source>For Ruby scripts that will be run using the &lt;code&gt;exec&lt;/code&gt; subcommand, note the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3bc347b86d5543b2fa65463a92635aeb18423b" translate="yes" xml:space="preserve">
          <source>For TCP/IP, version 6:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705d7781a3eb622944251c6659be56a790808abc" translate="yes" xml:space="preserve">
          <source>For TCP/IP:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e94932b80899718cd10783da4f61974dd153787" translate="yes" xml:space="preserve">
          <source>For UDP, version 6:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5e9820c428b2397e7c55e4c30af470a0b6861f" translate="yes" xml:space="preserve">
          <source>For Ubuntu, for the Chef management console 1.x to 2.x:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89590928133d1f0eb9569a9f9bcd16317a09434d" translate="yes" xml:space="preserve">
          <source>For Ubuntu:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ae793e8dee2c67279c5fc6dfa2fd4d53177128" translate="yes" xml:space="preserve">
          <source>For a brand new clone of the Chef repository (that was created using the steps listed earlier), fetch the &lt;code&gt;opscode&lt;/code&gt; remote:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429c065e746475d1ee00d821a85556b24e06eb2a" translate="yes" xml:space="preserve">
          <source>For a detailed explanation of the dry-run concept and how it relates to the why-run mode, see &lt;a href=&quot;http://blog.afistfulofservers.net/post/2012/12/21/promises-lies-and-dryrun-mode/&quot;&gt;this blog post&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842e25b806c4818082fe68b145d4b128c0c7a96e" translate="yes" xml:space="preserve">
          <source>For a file that is executable by a group:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e52e105aaa28a8320d2b0334f9842ac5a8bf7f1" translate="yes" xml:space="preserve">
          <source>For a file that is executable by a specific user:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58dc394312430b45eb6a4cce8639a60d52c46109" translate="yes" xml:space="preserve">
          <source>For a file that is executable by its owner:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb12d947f7911f46ebf9ef3588415fde5c74e9c" translate="yes" xml:space="preserve">
          <source>For a file that is readable by a group:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc58a945dd4cd8e98c16f56e55beaed1c1e00245" translate="yes" xml:space="preserve">
          <source>For a file that is readable by a specific user:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8743c60c1c7f5593416bd4211e053667ea46aff9" translate="yes" xml:space="preserve">
          <source>For a file that is readable by its owner:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f57c147a4d8be7da3d7ead16612297af131447" translate="yes" xml:space="preserve">
          <source>For a file that is writable by a group:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5c1baaa92e08809aadd8c18269405df8432f1b" translate="yes" xml:space="preserve">
          <source>For a file that is writable by a specific user:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b6db4e2c5dd216a8b2e887a040bb709cacce51" translate="yes" xml:space="preserve">
          <source>For a file that is writable by its owner:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd3181a579726a080d4169ddcfe1e1c30b28424" translate="yes" xml:space="preserve">
          <source>For a machine on which SELinux is enabled, the chef-client will create files that correctly match the default policy settings only when the cookbook that defines the action also conforms to the same policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f43693833b394c97cf91a08d20f5c56d71fe0ed" translate="yes" xml:space="preserve">
          <source>For a more complete version of the previous example, see the default recipe in the &lt;a href=&quot;https://github.com/hw-cookbooks/apt-mirror&quot;&gt;https://github.com/hw-cookbooks/apt-mirror&lt;/a&gt; community cookbook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71e08e64ab23be36b69f12600592cded08e2d76" translate="yes" xml:space="preserve">
          <source>For a named port that is not listening:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9680ef402ad5e887e72e0f5073c135f1853d51b" translate="yes" xml:space="preserve">
          <source>For a package that has different package names, depending on the platform, use a &lt;code&gt;case&lt;/code&gt; statement within the &lt;strong&gt;package&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c16d7a1bde7c59141e64e32f7a6c512025a741" translate="yes" xml:space="preserve">
          <source>For a service that is enabled at a given run level:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736bd8ddc46c3654bec5f5e050ba520863f035dd" translate="yes" xml:space="preserve">
          <source>For a service that is running under supervisor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="badb053e8366ca26723425ce62bd3ce1d3b9425c" translate="yes" xml:space="preserve">
          <source>For a single user to interact with the Chef server using knife from the same chef-repo, that user may need to edit their knife.rb file prior to that interaction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889320de053a126026b2ac52342457e02ab13be0" translate="yes" xml:space="preserve">
          <source>For a specific package version:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47efba89d69b07284e21f538b1d47825e508a2af" translate="yes" xml:space="preserve">
          <source>For a specific port type use &lt;code&gt;.with('port_type')&lt;/code&gt;. For example, UDP:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae6b1a1b4344755ea50e84bfbb53ed643e0899a" translate="yes" xml:space="preserve">
          <source>For a standalone installation, ensure that ports marked as external (marked as &lt;code&gt;yes&lt;/code&gt; in the &lt;strong&gt;External&lt;/strong&gt; column) are open and accessible via any firewalls that are in use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c20a4f3ffb3e1797a732e6d503ad43ba4c2761b" translate="yes" xml:space="preserve">
          <source>For a user, the response is similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4d8195c43a68a315852b84d627225ab571e603" translate="yes" xml:space="preserve">
          <source>For a workstation that will interact with the Chef server (including the hosted Chef server), log on and download the following files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de74e4c38dc66e6442c300ab3f16e98c77d45666" translate="yes" xml:space="preserve">
          <source>For adding a string using a multi-level array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b890cdd625d32ef46d0dbe7c12b345297118e6" translate="yes" xml:space="preserve">
          <source>For adding a string using a multi-level hash:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f0b7ea54bb6e4b02ba3e04c52737817069a1c4" translate="yes" xml:space="preserve">
          <source>For adding a string using an array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ddf973a53c8b5932bd2a84db2c0abf5d6dec36a" translate="yes" xml:space="preserve">
          <source>For attributes that contain slashes (&lt;code&gt;/&lt;/code&gt;) within the attribute value, such as the &lt;code&gt;filesystem&lt;/code&gt; attribute &lt;code&gt;'/dev/diskos2'&lt;/code&gt;, use an array. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f98b0c0c08c1ee0d5f7f50b58b4277e7cfd0971" translate="yes" xml:space="preserve">
          <source>For back-end servers in a tiered Chef server installation, ensure that ports marked as external (marked as &lt;code&gt;yes&lt;/code&gt; in the &lt;strong&gt;External&lt;/strong&gt; column) are open and accessible via any firewalls that are in use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d0d0d55a7c3498ea40bee8878abc66b508aa59" translate="yes" xml:space="preserve">
          <source>For back-end servers, ensure that ports marked as external (marked as &lt;code&gt;yes&lt;/code&gt; in the &lt;strong&gt;External&lt;/strong&gt; column) are open and accessible via any firewalls that are in use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ba4dcdcd07615c1c8f21c78c8774be3c2ef08e" translate="yes" xml:space="preserve">
          <source>For built-in DSC resources, use the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aee91abe1f47e9bec753e70c05e3555cbdb7b42" translate="yes" xml:space="preserve">
          <source>For chef-client version 11.x, under &lt;code&gt;/usr/bin&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d55cecb89d920b7d56aeba6c4c5a59c08f60fcde" translate="yes" xml:space="preserve">
          <source>For chef-client version 12.x, under &lt;code&gt;/usr/local/bin&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d3a675d3397c95fb6af2ffe45997a02f349ff0" translate="yes" xml:space="preserve">
          <source>For communication between Chef Analytics and the Chef server, ensure that ports marked as external (&lt;code&gt;yes&lt;/code&gt;) are open and accessible via any firewalls that are in use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae1dd7fbe85ce5e1fb89da0f999ceb01b4078f0" translate="yes" xml:space="preserve">
          <source>For default attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74ac5d3bbac8a5228061cb5e70c6ee016408c6f" translate="yes" xml:space="preserve">
          <source>For definitions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11eacf73770ad29243e6ace053d6e92a222518f6" translate="yes" xml:space="preserve">
          <source>For directories with a single attribute that requires testing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5da478a1e8a55f4755fcf0b2786dde75e4279a4" translate="yes" xml:space="preserve">
          <source>For directories with multiple attributes that require testing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb4feb0708f0b9ea72382995e00972489d29b81" translate="yes" xml:space="preserve">
          <source>For each action, use a collection of resources that are built into Chef to define the steps required to complete the action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35be3f3e8726d22d5c0ad1feb6f37b4501d1ad3d" translate="yes" xml:space="preserve">
          <source>For each frontend server, use the following steps to set up the Chef server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9832916640b3e56e52431274c3d4fe6b186cd0c8" translate="yes" xml:space="preserve">
          <source>For each group listed under &lt;strong&gt;Name&lt;/strong&gt;, select or de-select the &lt;strong&gt;Read&lt;/strong&gt;, &lt;strong&gt;Update&lt;/strong&gt;, &lt;strong&gt;Delete&lt;/strong&gt;, and &lt;strong&gt;Grant&lt;/strong&gt; permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da6dd2e5277e025d3d8bba44655e56226ccee7f" translate="yes" xml:space="preserve">
          <source>For each of the upstream services, &lt;code&gt;pong&lt;/code&gt; or &lt;code&gt;fail&lt;/code&gt; is returned. The possible upstream names are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10272f40211a0925f662fe605bf45eac759d8644" translate="yes" xml:space="preserve">
          <source>For each of the wildcard examples above, the possible values are shown contained within the brackets. When running a search query, the query syntax for wildcards is to simply omit the name of the node (while preserving the underscores), similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a703cfe1b7d271f0d3f95fcce930c5e2a057f69" translate="yes" xml:space="preserve">
          <source>For encrypted data bag items, use either &lt;code&gt;--secret&lt;/code&gt; or &lt;code&gt;--secret-file&lt;/code&gt;, not both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d2e901642240ca6dca34ee4fac5318b0cf8f92" translate="yes" xml:space="preserve">
          <source>For example, Alice runs the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2557427ca340dadb4f6a6cdb767b2e6b2cbe29f" translate="yes" xml:space="preserve">
          <source>For example, Chef includes built-in resources to manage files, packages, templates, and services, but it does not include a resource that manages websites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbecd21bfb967326e786dae9e430d4ad0609dd2" translate="yes" xml:space="preserve">
          <source>For example, a 2GB search index will require about 2GB of free space available in the &lt;strong&gt;opscode-solr4&lt;/strong&gt; service&amp;rsquo;s storage area. The standard storage area for the &lt;strong&gt;opscode-solr4&lt;/strong&gt; service in a standalone topology Chef server install is &lt;code&gt;/var/opt/opscode/opscode-solr4/data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f113ef3822b2bff39e94b83e57c69a6f5e64b9ee" translate="yes" xml:space="preserve">
          <source>For example, a bootstrap template file named &amp;ldquo;sea_power&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3cabe6721232113fd7e5b83c7c9f1165aee05fa" translate="yes" xml:space="preserve">
          <source>For example, a custom resource defines two properties (&lt;code&gt;content&lt;/code&gt; and &lt;code&gt;path&lt;/code&gt;) and a single action (&lt;code&gt;:create&lt;/code&gt;). Use the &lt;code&gt;load_current_value&lt;/code&gt; method to load the property value to be compared, and then use the &lt;code&gt;converge_if_changed&lt;/code&gt; method to tell the chef-client what to do if that value is not the desired value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925e915792e7315e2be2eccaec291d100b500cc7" translate="yes" xml:space="preserve">
          <source>For example, a group of attributes for web servers might be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2256f4f461489850cf57f6b528113efa38080ef1" translate="yes" xml:space="preserve">
          <source>For example, a handler for Growl needs to be enabled at the beginning of the chef-client run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cdb180be8ca4b1cc2af8d42831ba73fedd8c115" translate="yes" xml:space="preserve">
          <source>For example, a package is installed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c437689165a304673f2b145a8fec8d9b83d84966" translate="yes" xml:space="preserve">
          <source>For example, a resource that is &lt;strong&gt;not&lt;/strong&gt; doing lazy evaluation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9398cc3e8e45c707a1c74450c90a031f8e572268" translate="yes" xml:space="preserve">
          <source>For example, a resource that is used to install a tar.gz package for version 1.16.1 may look something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa2584a946c33bf3918e4f1f7153d1da26670c5" translate="yes" xml:space="preserve">
          <source>For example, a role named &lt;code&gt;baseline.rb&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae3b7a8c28a7d2d8e84c0935ad9ad2efc2901e5" translate="yes" xml:space="preserve">
          <source>For example, a simple deployment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59bccb5c38edc5fd456ccf3a22e8a3541ff55d7a" translate="yes" xml:space="preserve">
          <source>For example, a simple template resource like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8db9bee468b1cb891a578fc6c57408c2ac0875e" translate="yes" xml:space="preserve">
          <source>For example, a user named &lt;code&gt;grantmc&lt;/code&gt;, with a first and last name of &lt;code&gt;Grant McLennan&lt;/code&gt;, an email address of &lt;code&gt;grantmc@chef.io&lt;/code&gt;, a poorly-chosen password, and with the USER.pem file saved to &lt;code&gt;/tmp/grantmc.key&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99891b12691bc78e1bc82c40285e8fa15d01c478" translate="yes" xml:space="preserve">
          <source>For example, a version constraint for &amp;ldquo;equals version 1.0.7&amp;rdquo; is expressed like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0bda92be372b94de44885ac300c462789443af" translate="yes" xml:space="preserve">
          <source>For example, after copying the SSL certificate files to the Chef server, update the &lt;code&gt;nginx['ssl_certificate']&lt;/code&gt; and &lt;code&gt;nginx['ssl_certificate_key']&lt;/code&gt; settings to specify the paths to those files, and then (optionally) update the &lt;code&gt;nginx['ssl_ciphers']&lt;/code&gt; and &lt;code&gt;nginx['ssl_protocols']&lt;/code&gt; settings to reflect the desired level of hardness for the Chef server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dcdb0409ef148369e3e21b98b4c9f0dc6893991" translate="yes" xml:space="preserve">
          <source>For example, an application that is deployed to a folder named &lt;code&gt;&quot;/path/to/application&quot;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb42af62ab878ca96ac931366ccb7ba28d761c5" translate="yes" xml:space="preserve">
          <source>For example, an organization named &lt;code&gt;chef&lt;/code&gt;, with a full name of &lt;code&gt;Chef Software, Inc.&lt;/code&gt;, and with the ORGANIZATION-validator.pem file saved to &lt;code&gt;/tmp/chef.key&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01bde408ad1e4aca25973627758dc7adb5e22cd" translate="yes" xml:space="preserve">
          <source>For example, assuming the &lt;code&gt;CertificateID&lt;/code&gt; is configured in the local configuration manager, the &lt;code&gt;SeaPower1@3&lt;/code&gt; object is created and embedded within the &lt;code&gt;seapower-user&lt;/code&gt; script:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb2ac459389a9cc4b2bfe019447df9257418358" translate="yes" xml:space="preserve">
          <source>For example, consider the following script:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f53009d6ded956c301c1a285ad411d22c5eaf32" translate="yes" xml:space="preserve">
          <source>For example, for recipes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22314d268bb30fc4a1bbda46379ad391eb9566a6" translate="yes" xml:space="preserve">
          <source>For example, if cookbooks &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; both exist on the Chef server and both with versions &lt;code&gt;0.1.0&lt;/code&gt; and &lt;code&gt;0.2.0&lt;/code&gt;, the response is similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95cfe5046e1cda57375d8eae4342722c168fd65" translate="yes" xml:space="preserve">
          <source>For example, if the current value is 350, there are four front end machines, and all add-ons are installed, then the formula looks like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237a93e0f6a15649bb67f0d2471fcd46dd7589a3" translate="yes" xml:space="preserve">
          <source>For example, if the following recipe is included in a cookbook named &lt;code&gt;my_app&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f0a56a9b048c93f06a93739ad16df3241002faa" translate="yes" xml:space="preserve">
          <source>For example, if the volume group has 10GB total, only 8GB should be allocated to the logical volume, which leaves 20% of the volume group available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7f9823efed80e8cd10d8e1608ea74f48e4db01" translate="yes" xml:space="preserve">
          <source>For example, installing multiple packages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833fa28c343cbd5216a048fc9f8af71bf4a25169" translate="yes" xml:space="preserve">
          <source>For example, normal attribute data similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e27d3369b6f52ad75a4003115a48b46e28372cd" translate="yes" xml:space="preserve">
          <source>For example, run the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b16bd7c51eda7f25cca21d9c011c2fd60775ab" translate="yes" xml:space="preserve">
          <source>For example, run the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230c0086486f46f70d467278dd1278e8fda7693d" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;action&lt;/code&gt; appears as a property when this custom resource is used in a recipe:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96827965a76340a35851dda0765ae3a562af2f46" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;httpd.rb&lt;/code&gt; file in the &lt;code&gt;website&lt;/code&gt; cookbook could be assigned a custom resource name like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be9a0fa90a580e8e26bf0a59cc4e2de6202652a" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;not_if&lt;/code&gt; guard statement in the following resource example &lt;strong&gt;does not inherit&lt;/strong&gt; the &lt;code&gt;environment&lt;/code&gt; property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc32745fd9a0f0c9256eb6b2b00905cf3a2c50a" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;site.rb&lt;/code&gt; file in the &lt;code&gt;exampleco&lt;/code&gt; cookbook could be similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207a12efe984804e04ea611b619e467d1fdaa85d" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;web.rb&lt;/code&gt; references the &lt;code&gt;baseline.rb&lt;/code&gt; role. The &lt;code&gt;web.rb&lt;/code&gt; file only provides a value for one attribute: &lt;code&gt;:startservers&lt;/code&gt;. When the chef-client compares these attributes, the deep merge feature will ensure that &lt;code&gt;:startservers&lt;/code&gt; (and its value of &lt;code&gt;30&lt;/code&gt;) will be applied to any node for which the &lt;code&gt;web.rb&lt;/code&gt; attribute structure should be applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7bb1861a67697dadc7c7408e1197347fbfaf76f" translate="yes" xml:space="preserve">
          <source>For example, the &lt;strong&gt;service&lt;/strong&gt; resource can be used to start a service. If the action is &lt;code&gt;:start&lt;/code&gt; and the service is not running, then start the service (if it is not running) and do nothing (if it is running). What about a service that is installed from a package? The chef-client cannot check to see if the service is running until after the package is installed. A simple question that why-run mode can answer is what the chef-client would say about the state of the service after installing the package because service actions often trigger notifications to other resources. So it can be important to know in advance that any notifications are being triggered correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2c0e658db9be8faf084333ccae81088f205c46" translate="yes" xml:space="preserve">
          <source>For example, the Reporting start handler adds the following code to the top of the client.rb file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3f7018bd450c0ca4da2b73e63ce75fc8c5f6da" translate="yes" xml:space="preserve">
          <source>For example, the default bootstrap operation relies on an Internet connection to get the distribution to the target node. If a target node cannot access the Internet, then a custom template can be used to define a specific location for the distribution so that the target node may access it during the bootstrap operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca55314a407f63cc793f95d6f7d079a92acdca6e" translate="yes" xml:space="preserve">
          <source>For example, the following attributes exist in a cookbook. Some are defined in a role file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50ad86ef9cb92a7c0ec0eaddb68d83c14568af8" translate="yes" xml:space="preserve">
          <source>For example, the following code block will ensure the command is evaluated using the default intepreter as identified by the chef-client:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2f7aa9d553b3ca6139044efda1b018c5d2fe8f" translate="yes" xml:space="preserve">
          <source>For example, the following custom resource creates and/or updates user properties, but not their password. The &lt;code&gt;property_is_set?&lt;/code&gt; method checks if the user has specified a password and then tells the chef-client what to do if the password is not identical:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1bbff41ccba7201debfa7d6f1b25d3ef2b130f" translate="yes" xml:space="preserve">
          <source>For example, the following definition leverages the &lt;strong&gt;directory&lt;/strong&gt; resource to create a new directory, and then evaluate that within the context of the custom resource:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a294f29b0cc1f06acbe7f323d0699c82ee2fab" translate="yes" xml:space="preserve">
          <source>For example, the following example specifies the rights for a directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0c4fc8a2914d9a55e929145e94978f57de24dd" translate="yes" xml:space="preserve">
          <source>For example, the following properties define &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; properties with no default values specified, but with &lt;code&gt;identity&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; for the user name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e274d0d3e7cf2273ca3c7c657430aca70ea9eed" translate="yes" xml:space="preserve">
          <source>For example, the following properties define &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; properties with no default values specified:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67c05a461572d43c16af85e4cb687efb092fffd" translate="yes" xml:space="preserve">
          <source>For example, the following properties define the &lt;code&gt;owner&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt;, and &lt;code&gt;mode&lt;/code&gt; properties for a file that already exists on the node, and with &lt;code&gt;desired_state&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f02c9b3afcf8d5d380cd214633747d095dbb7d" translate="yes" xml:space="preserve">
          <source>For example, the following recipe will install the Apache web server, randomly choose PHP or Perl as the scripting language, and then install that scripting language:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b4d42e4c58a58b474a832c06e67a48caf97c52" translate="yes" xml:space="preserve">
          <source>For example, the following shows a custom handler that sends an email that contains the exception data when a chef-client run fails:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc920f0981089a917c61bbc7a4b37a94fcb40a0" translate="yes" xml:space="preserve">
          <source>For example, the following template file and template resource settings can be used to manage a configuration file named &lt;code&gt;/etc/sudoers&lt;/code&gt;. Within a cookbook that uses sudo, the following resource could be added to &lt;code&gt;/recipes/default.rb&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f87ea31d5c8489e2a7ed9301eb712c4d341055" translate="yes" xml:space="preserve">
          <source>For example, this should return &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29eec27e834afe626ae915421209224e59fb814f" translate="yes" xml:space="preserve">
          <source>For example, to bump a version number, first make changes to the cookbook, and then upload and test it. Repeat this process as required, and then upload it using a knife command similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9dd727d9d26412e49790f9a3706c12d3998959e" translate="yes" xml:space="preserve">
          <source>For example, to change a user&amp;rsquo;s password, enter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1522af42745f447a359b467050a1bebdee9d7be" translate="yes" xml:space="preserve">
          <source>For example, to embed the long description within the field itself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8488953a9c4afc34ec0ca5e5fb92df1382611cf" translate="yes" xml:space="preserve">
          <source>For example, to explicitly track an upstream repository&amp;rsquo;s master branch:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ce6a21606ee03cedd6ec92fef022a6817d1d89" translate="yes" xml:space="preserve">
          <source>For example, to freeze a cookbook version using knife, enter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac616cc13a21c2e2d8c58dd98e61d5aac55ded7" translate="yes" xml:space="preserve">
          <source>For example, to get the data for a node named &amp;ldquo;Example_Node&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a40fdc94a3a5ebff424d50c2db1a6baa5f2680c" translate="yes" xml:space="preserve">
          <source>For example, to import all resources from a module named &lt;code&gt;cRDPEnabled&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff720e72520cd20b8d3239c338376e446a3ce643" translate="yes" xml:space="preserve">
          <source>For example, to list all of the nodes in a configuration named &amp;ldquo;preprod&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00fe31c6b55a210fa1de799c0bf79ae7162b753e" translate="yes" xml:space="preserve">
          <source>For example, to match any 12.x version of the chef-client, but not 11.x or 13.x:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284a1796dc851b53fb76e1965abf67ef7a707167" translate="yes" xml:space="preserve">
          <source>For example, to match any 8.x version of Ohai, but not 7.x or 9.x:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8175f87aa4313db8d6e36ea70a006819ac00ad49" translate="yes" xml:space="preserve">
          <source>For example, to set a dependency a cookbook named &lt;code&gt;cats&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538d293642619be7db567849b6fd4f79e7623416" translate="yes" xml:space="preserve">
          <source>For example, to support every version of Ubuntu:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b87c9008967f459bf82cc0de986171410fe1aa12" translate="yes" xml:space="preserve">
          <source>For example, to view a list of roles on the Chef server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba7eec77dafc45c8f7bd85697311d895b27e42d5" translate="yes" xml:space="preserve">
          <source>For example, to view the aggregate queue backlog, enter the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b38c9c2d554e7e69205d2d89493d3637d27fa49" translate="yes" xml:space="preserve">
          <source>For example, using a &lt;code&gt;case&lt;/code&gt; statement with the &lt;code&gt;platform&lt;/code&gt; node attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf351b3f52f4cb4931cbec364fa8eb202c72df5" translate="yes" xml:space="preserve">
          <source>For example, using a &lt;code&gt;case&lt;/code&gt; statement with the &lt;code&gt;platform_family&lt;/code&gt; node attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937c820cb25fa936c4684fcb94d53d411d89a96b" translate="yes" xml:space="preserve">
          <source>For example, using an &lt;code&gt;if&lt;/code&gt; statement with the &lt;code&gt;platform&lt;/code&gt; node attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ab92f1e029d4034e6c5303a250c0961bd291d9" translate="yes" xml:space="preserve">
          <source>For example, using the results of a search query within a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa763c2611dffa0c486b83c9ac8d7aed55fb101d" translate="yes" xml:space="preserve">
          <source>For example, using the same example as from above, but this time adding the &lt;code&gt;guard_interpreter&lt;/code&gt; property and setting it to &lt;code&gt;:bash&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e280180e461b0bcc523e1b86b6c9d65c84f4288" translate="yes" xml:space="preserve">
          <source>For example, when using knife, the following configuration files would be loaded:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32c5faa97f8876da14a8050f84383b569a428fd" translate="yes" xml:space="preserve">
          <source>For example, without downloading the SSL certificate, the following knife command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4897b2e3384c8e6c57211211b49eb4427f2339" translate="yes" xml:space="preserve">
          <source>For front-end servers, ensure that ports marked as external (marked as &lt;code&gt;yes&lt;/code&gt; in the &lt;strong&gt;External&lt;/strong&gt; column) are open and accessible via any firewalls that are in use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa890f6a591441de79c589776868e264357afe07" translate="yes" xml:space="preserve">
          <source>For information about the settings in this file, see the DRBD website: &lt;a href=&quot;http://www.drbd.org/users-guide/ch-admin.html&quot;&gt;http://www.drbd.org/users-guide/ch-admin.html&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0b614b2d2cb09220f4d8a3a0cb30e4624016a4" translate="yes" xml:space="preserve">
          <source>For instance, if there are West coast and East coast data centers, it is best to have one Chef server instance in each datacenter. Deploys to each Chef server can be synchronized upstream by CI software. The primary limiting bottleneck for Chef server installations is almost always input/output operations per second (IOPS) performance for the database filesystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c293511c0ce9f3585a3035ea568fd878421528d4" translate="yes" xml:space="preserve">
          <source>For knife, the private key is typically copied to &lt;code&gt;~/.chef/client_name.pem&lt;/code&gt; and referenced in the knife.rb configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023189c8d9b367c8d89b4cd6e0e64db05edf73eb" translate="yes" xml:space="preserve">
          <source>For many users of Chef, the Chef development kit version of Ruby that is included in the Chef development kit should be configured as the default version of Ruby.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759e29e4242dc7686d3e6c4cc1379df7cbadcb0e" translate="yes" xml:space="preserve">
          <source>For more information about Amazon Elastic Block Store (EBS), see &lt;a href=&quot;http://aws.amazon.com/ebs/&quot;&gt;http://aws.amazon.com/ebs/&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23abc8fe6acbb42396e081211a611112e7dde9a2" translate="yes" xml:space="preserve">
          <source>For more information about DRBD, see &lt;a href=&quot;http://www.drbd.org&quot;&gt;http://www.drbd.org&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815496010f8acc5c832910a94099b37c961aa0fd" translate="yes" xml:space="preserve">
          <source>For more information about logical volume manager (LVM), see &lt;a href=&quot;http://www.tldp.org/HOWTO/LVM-HOWTO/&quot;&gt;http://www.tldp.org/HOWTO/LVM-HOWTO/&lt;/a&gt;. For more information about DRBD, see &lt;a href=&quot;http://drbd.linbit.com/users-guide/s-resizing.html&quot;&gt;http://drbd.linbit.com/users-guide/s-resizing.html&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098501a1259fcf57ffbcfea89192bb13c6370b46" translate="yes" xml:space="preserve">
          <source>For more information about specific resources for specific platforms, see the following topics:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997bb37d812f64b80dab134e6ecfca956bf26ad0" translate="yes" xml:space="preserve">
          <source>For more information about the Chef server API endpoints see &lt;a href=&quot;api_chef_server&quot;&gt;Chef Server API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e14f15cf5468aeb7732b66d259a7c8ce3c6077" translate="yes" xml:space="preserve">
          <source>For more information about the server configuration file, see &lt;a href=&quot;config_rb_server&quot;&gt;chef-server.rb&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d7dfd698c3fed9e395880733cea9a274eca658e" translate="yes" xml:space="preserve">
          <source>For more information about these options, see the RubyGems documentation: &lt;a href=&quot;http://rubygems.rubyforge.org/rubygems-update/Gem/DependencyInstaller.html&quot;&gt;http://rubygems.rubyforge.org/rubygems-update/Gem/DependencyInstaller.html&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a3284fd7d1f1f89c774978c55067fe63d6c7e8e" translate="yes" xml:space="preserve">
          <source>For more information on configuring your Chef server, see &lt;a href=&quot;config_rb_server&quot;&gt;chef-server.rb Settings&lt;/a&gt; and &lt;a href=&quot;config_rb_server_optional_settings&quot;&gt;chef-server.rb Optional Settings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c526ba47d96ccff74e702f340e7b0283477ccd" translate="yes" xml:space="preserve">
          <source>For more information, see: &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/aa384235(v=vs.85).aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/windows/desktop/aa384235(v=vs.85).aspx&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc555f28a42d875d0f3d1ab19fc37ede676d4c7f" translate="yes" xml:space="preserve">
          <source>For more information, see: &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa384187(v=vs.85).aspx&quot;&gt;https://msdn.microsoft.com/en-us/library/windows/desktop/aa384187(v=vs.85).aspx&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4387e95339b9650ebb2b56d1da4cd711dfe14dbe" translate="yes" xml:space="preserve">
          <source>For more information:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b04370e596f20a21a79cc3544183d56c6e849b7" translate="yes" xml:space="preserve">
          <source>For new Microsoft Windows machines, Windows PowerShell scripts will not work until an administrator runs the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8cab74593026bb7b49e7a27997e24312de24d3" translate="yes" xml:space="preserve">
          <source>For new Microsoft Windows machines, commands cannot be appended to &lt;code&gt;$PROFILE&lt;/code&gt; if the folder does not exist or if there is a new user profile, an error similar to the following may be returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4a094c9c014ca41b853316fa612c4a35a0877d" translate="yes" xml:space="preserve">
          <source>For normal attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8e54d1c66c157665fd58257b223737e3f52b54" translate="yes" xml:space="preserve">
          <source>For override attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1386c4c91542b502776fecfdb36e6e7d36f41b" translate="yes" xml:space="preserve">
          <source>For releases of the chef-client prior to 12.5 (chef-client 12.4 and earlier) the correct syntax is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e516c02f933b9d1d4cb86742c0f316782436786e" translate="yes" xml:space="preserve">
          <source>For substituting an array with a hash:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc78b723cf10aad005cf5fe613e92bb583c3b07" translate="yes" xml:space="preserve">
          <source>For substituting an existing boolean using a hash:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f7bcc37fabf284d53ddf56f70f8f187f088f1c6" translate="yes" xml:space="preserve">
          <source>For the action, defining the steps to configure the system using resources that are built into Chef</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28868dddd2be617112c6cdd4ac8d1cbb26c80f59" translate="yes" xml:space="preserve">
          <source>For the chef-client, the private key should be copied to the system as &lt;code&gt;/etc/chef/client.pem&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab7b782ea481f6822d8485a3e12b62d1daedb52" translate="yes" xml:space="preserve">
          <source>For the chef-client, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a JSON file that is stored on the Chef server. The chef-client gets a copy of the node object from the Chef server during each chef-client run and places an updated copy on the Chef server at the end of each chef-client run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b97dc0067f71f52430faecc6ad1c90bd388688" translate="yes" xml:space="preserve">
          <source>For the entire recipe, see &lt;a href=&quot;https://github.com/onehealth-cookbooks/apache2/blob/68bdfba4680e70b3e90f77e40223dd535bf22c17/recipes/mod_apreq2.rb&quot;&gt;https://github.com/onehealth-cookbooks/apache2/blob/68bdfba4680e70b3e90f77e40223dd535bf22c17/recipes/mod_apreq2.rb&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71616cc7c7e190fb0cd43ee31c51981de87d4cb4" translate="yes" xml:space="preserve">
          <source>For the example shown above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ae6ec21eda173c7f2ac95ab2c5301937495120" translate="yes" xml:space="preserve">
          <source>For the user, the private key should be copied to the system as &lt;code&gt;/etc/chef/client.pem&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb32a497c0fbd6d3972514439aac97feae5797be" translate="yes" xml:space="preserve">
          <source>Forbidden. The user who made the request is not authorized to perform the action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd08712d614f1591568e372dcde770be50cf3a9e" translate="yes" xml:space="preserve">
          <source>Force the deletion of the client when it is also a chef-validator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c292918b7399b1064fd09013fdc93f2f12f32442" translate="yes" xml:space="preserve">
          <source>Force the removal of a user from the organization&amp;rsquo;s &lt;code&gt;admins&lt;/code&gt; and &lt;code&gt;billing-admins&lt;/code&gt; groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145e6b039db6e3a94defb2964a64423840cf279d" translate="yes" xml:space="preserve">
          <source>Force the removal of a user. May be used only with the &lt;code&gt;:remove&lt;/code&gt; action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda970a46887016dc3817eaf0651496cbaa80bc9" translate="yes" xml:space="preserve">
          <source>Force the upload of files even if they haven&amp;rsquo;t been changed. Default: &lt;code&gt;--no-force&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5d0ace7ab770e450853fa33f99439db9cf75b8" translate="yes" xml:space="preserve">
          <source>Fork the &lt;a href=&quot;https://github.com/chef/chef&quot;&gt;https://github.com/chef/chef&lt;/a&gt; repository to your GitHub account.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
