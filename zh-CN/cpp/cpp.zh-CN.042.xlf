<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="cpp">
    <body>
      <group id="cpp">
        <trans-unit id="afda16de4ec0578ac66b8142e32e443bf5c43dc6" translate="yes" xml:space="preserve">
          <source>values of floating-point or &lt;a href=&quot;../../types/is_integral&quot;&gt;integral types&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5e7815dd9d218d855900e6226eed6d64f65407" translate="yes" xml:space="preserve">
          <source>values of floating-point or &lt;a href=&quot;../types/is_integral&quot;&gt;integral types&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9eba68fab22717b71848951c06c9b2b5073422" translate="yes" xml:space="preserve">
          <source>values to AND</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46be7ca415934d97bb6663c0532660a40b465794" translate="yes" xml:space="preserve">
          <source>values to OR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6579b7bc68edccb54d4339eb128704a08d86c775" translate="yes" xml:space="preserve">
          <source>values to compare</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1598fc5ff18fb02e0050b1177ccd5dff62839e9" translate="yes" xml:space="preserve">
          <source>values to compare to each element within a numeric array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76255589466d9bfabaaa82ff16fd9da4f4d592b" translate="yes" xml:space="preserve">
          <source>values to compute bitwise AND for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b25e44179ef83c5054d76f11505d83433083f9" translate="yes" xml:space="preserve">
          <source>values to compute bitwise AND of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748df5a68aea160715407644aeb2490983077781" translate="yes" xml:space="preserve">
          <source>values to compute bitwise OR for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f511eb8a26f98bd5176542d49d391b96c643aba" translate="yes" xml:space="preserve">
          <source>values to compute bitwise OR of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0206ff7cc216f57907e72d1816702f62c62f2201" translate="yes" xml:space="preserve">
          <source>values to compute bitwise XOR for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec19ba308a6636b69f34207de58cc295448e61e" translate="yes" xml:space="preserve">
          <source>values to compute bitwise XOR of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7baee129d670d8a0a0d0e477d84aed2ff63ef7" translate="yes" xml:space="preserve">
          <source>values to compute inverse tangent of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e530daa3f8dc8122c301ca1a30e3788a5a6f2e" translate="yes" xml:space="preserve">
          <source>values to compute logical AND of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1344bbe19fddb8c39b9937880eafb66f1b4495b4" translate="yes" xml:space="preserve">
          <source>values to compute logical OR of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ba1f29e20ba11a8c6673a1bbfe2375f450c554" translate="yes" xml:space="preserve">
          <source>values to divide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4aa6d74a7b734e161f50a04f77fc276b68a474" translate="yes" xml:space="preserve">
          <source>values to divide one by another</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1330f175d9fe855003bf94101b3c4b8f4ec0e6bf" translate="yes" xml:space="preserve">
          <source>values to divide one by other</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b277265851468ffdfb9ef71279f82d0e87eb0733" translate="yes" xml:space="preserve">
          <source>values to multiply</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09dccaa76182590cf8d8c8f76cdcc41592a101c5" translate="yes" xml:space="preserve">
          <source>values to subtract</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b24d2346b61c350b4d3abc56170f615e386076b" translate="yes" xml:space="preserve">
          <source>values to subtract from one another</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1114dfa20f7f4e5bdfd18a21d00ec21ba7618ccb" translate="yes" xml:space="preserve">
          <source>values to sum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ebf2cb6bdd4134d004c43729b71c5e9a2d488a" translate="yes" xml:space="preserve">
          <source>values used to initialize each element of the tuple</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46d0172433dd6895dac7544b9dacbb87b361e9f" translate="yes" xml:space="preserve">
          <source>variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d649304ae8d8c4ade4edb446987d2562a032aa" translate="yes" xml:space="preserve">
          <source>variable argument list containing the data to print</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940c8f2c2202c5fa044742fd1df09f40d9aa0571" translate="yes" xml:space="preserve">
          <source>variable argument list containing the receiving arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f33bd8bae0a227160d2860919430fcb964c28c" translate="yes" xml:space="preserve">
          <source>variable arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73d10b531e6d51ee426919e906280e163be97b8" translate="yes" xml:space="preserve">
          <source>variable referring to the execution state of the program saved by &lt;code&gt;&lt;a href=&quot;setjmp&quot;&gt;setjmp&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b39953e23ffb7a1fee725d7ea28efb57e567c2" translate="yes" xml:space="preserve">
          <source>variable templates or their instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c118b2693e89c3f8629312630e844df4e6657460" translate="yes" xml:space="preserve">
          <source>variable to save the execution state of the program to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d1d28460fc5522ce9220946f5822811938ba16" translate="yes" xml:space="preserve">
          <source>variable where monetary value will be written. Can be either &lt;code&gt;long double&lt;/code&gt; or &lt;code&gt;basic_string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3148efb74eb2160118ef578ce9ad496c0b1a8e7c" translate="yes" xml:space="preserve">
          <source>variable, including &lt;a href=&quot;../static&quot;&gt;static data member&lt;/a&gt;: &lt;code&gt;[[deprecated]] int x;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c6f21cdbd8fdbf09b26c2fc2bd5eab47afbce81" translate="yes" xml:space="preserve">
          <source>variable, including &lt;a href=&quot;../static&quot;&gt;static data member&lt;/a&gt;: &lt;code&gt;[[maybe_unused]] int x;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e522b5699211259613ebfbf7a4e2f8c4b98bd197" translate="yes" xml:space="preserve">
          <source>variable-declaration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5af2310c7f15770a4ed0028648ce367e3e2ec0" translate="yes" xml:space="preserve">
          <source>variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1374494dfd40de832f56f7065573b1d5edd22e4a" translate="yes" xml:space="preserve">
          <source>variables and functions not listed above (that is, functions not declared &lt;code&gt;static&lt;/code&gt;, namespace-scope non-const variables not declared &lt;code&gt;static&lt;/code&gt;, and any variables declared &lt;code&gt;extern&lt;/code&gt;);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e9e5c42314055a4cbd553b24b459281cba2b26" translate="yes" xml:space="preserve">
          <source>variables that aren't explicitly declared &lt;code&gt;extern&lt;/code&gt; (regardless of the &lt;code&gt;static&lt;/code&gt; modifier);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574739183945ced5926dbae970c4d9de81f3fc32" translate="yes" xml:space="preserve">
          <source>variables, variable templates(since C++14), functions, or function templates declared &lt;code&gt;static&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15db30a0f0c15e5fff68e05c9214e92324539598" translate="yes" xml:space="preserve">
          <source>variadic logical AND metafunction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7211256cd73a5dedd04b666c8f144a8653a7e9" translate="yes" xml:space="preserve">
          <source>variadic logical OR metafunction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff88cc43f9ead08e093054df95c2ce9d2e5b6738" translate="yes" xml:space="preserve">
          <source>variadic template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1d14a2180a6234ff47e1903faa5dbd7b45697b" translate="yes" xml:space="preserve">
          <source>variant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b4c08d7aa6b54c7ef11995682a8fb1c6886576" translate="yes" xml:space="preserve">
          <source>variant members</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b3033ac160a27faea6ffae3fc4ab4c866c0650" translate="yes" xml:space="preserve">
          <source>variant members destroyed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecbb5583a0efe304b7410c37f4dac1cd688b9a73" translate="yes" xml:space="preserve">
          <source>variant members were leaked on stack unwinding from constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56f99e3d51baceefa60c8c90a43551237e40b4d" translate="yes" xml:space="preserve">
          <source>variant to examine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d69a1f4061e0944c8c4182932c77d19d0522a82" translate="yes" xml:space="preserve">
          <source>variant_alternativevariant_alternative_t</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b54d0708646b0b384dcb9b9ce9eba65e3dc138" translate="yes" xml:space="preserve">
          <source>variant_npos</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="339315c6be3c96afeb25d18ad8d232b916ac0fc3" translate="yes" xml:space="preserve">
          <source>variant_sizevariant_size_v</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38abff7408e09474e156b05d5b570346cf923ac9" translate="yes" xml:space="preserve">
          <source>variants to compare</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b525eccb8935da3fad4b02645d361f22381e0c6f" translate="yes" xml:space="preserve">
          <source>various &lt;a href=&quot;string/byte&quot;&gt; narrow character string handling functions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce356252edb60028cd7d9d55d9a8e1a03a6cb4b" translate="yes" xml:space="preserve">
          <source>various &lt;a href=&quot;string/wide&quot;&gt; wide &lt;/a&gt; and &lt;a href=&quot;string/multibyte&quot;&gt; multibyte&lt;/a&gt; string handling functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328b2913d40a4414bbacabb3a360dbd897edd419" translate="yes" xml:space="preserve">
          <source>vars</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f98e11823dd225d63e7ce13e7a1ba37a9c1483" translate="yes" xml:space="preserve">
          <source>vbase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b803e7ca5c714dbd85bf00d511fbc99a77690ad2" translate="yes" xml:space="preserve">
          <source>vec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027c1146b1b8f9274e5a4cfd7a959e328a326cd6" translate="yes" xml:space="preserve">
          <source>vector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17fe3d147ef7d0d2f3cc09cec75518cf56b467eb" translate="yes" xml:space="preserve">
          <source>vector&amp;lt;bool&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0137da12604cb7b52aea1cce66caee326e209628" translate="yes" xml:space="preserve">
          <source>vectorization-unsafe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c692273deb2772da307ffe37041fef77bf4baa97" translate="yes" xml:space="preserve">
          <source>version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e20de8c86b03fce756f44020e334524e1e43cf0" translate="yes" xml:space="preserve">
          <source>vertical tab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6122806bb401dc69319ec1647f466c15f65fe9" translate="yes" xml:space="preserve">
          <source>vertical tab (&lt;code&gt;0x0b&lt;/code&gt;, &lt;code&gt;'\v'&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f93a92a8b3658591f311900fe6004a5f2ca2f24" translate="yes" xml:space="preserve">
          <source>vexp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45c4af3e68ba3792916d2870b90c072bc05a26a" translate="yes" xml:space="preserve">
          <source>viable functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3a07543988e4673dcae5e59c35323c5791f370" translate="yes" xml:space="preserve">
          <source>view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d3ade5713b151478e3be65bd0468e38e7c2119" translate="yes" xml:space="preserve">
          <source>view to compare</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9e28400984f23eebe8166fcc4b70002d96b5b4" translate="yes" xml:space="preserve">
          <source>view to copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c8626de8337e6f2d32db7af039b13f408d5ccce" translate="yes" xml:space="preserve">
          <source>view to search for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30175cad051d218a6300f6dab403daa4ceaee68" translate="yes" xml:space="preserve">
          <source>view to swap with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8514ead1b1607f17ee0f4d4a570536d564504f28" translate="yes" xml:space="preserve">
          <source>view::counted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71cb04b93d94db2de5a41be63cb38e09e3a9a297" translate="yes" xml:space="preserve">
          <source>view_interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8b0c078c8f2a2facd581a19780c4c2352142f4" translate="yes" xml:space="preserve">
          <source>views to compare</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00e511a1041cd57aef4d219145f1535219834c6" translate="yes" xml:space="preserve">
          <source>violation continuation modes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b382cc2521303859b08468d45104a92c3ffece3f" translate="yes" xml:space="preserve">
          <source>violation handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4f9fa7eb78854a7d9a6df93cd36e6385a8d27c" translate="yes" xml:space="preserve">
          <source>virt-specifier-seq(C++11)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af84d91fde168566c7dc18f3121ea2fbe651af1f" translate="yes" xml:space="preserve">
          <source>virtual</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8255235a35fd086dc39d62696afa899d69ab24d8" translate="yes" xml:space="preserve">
          <source>virtual base class specifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb079f541d76e63d0d2adaf91872ed3b1cc3be9f" translate="yes" xml:space="preserve">
          <source>virtual function specifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62c6fdfb7c57746bd2de2962279c9f4d12d6cbe" translate="yes" xml:space="preserve">
          <source>virtual functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a2ce289b506f64e33131b23c9cd00426b59d45" translate="yes" xml:space="preserve">
          <source>virtual-specifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db32db385b7c569d4c78c3fae6ba9e627ac0a849" translate="yes" xml:space="preserve">
          <source>virtual-specifier and access-specifier may appear in any order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675c84dc906716398704dcd8c7d214010630834a" translate="yes" xml:space="preserve">
          <source>vis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223883960405d6589d6cd37f175c73b073c4180f" translate="yes" xml:space="preserve">
          <source>visible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aef73fcd477207b7dd53e29c7d3ff5837be1649" translate="yes" xml:space="preserve">
          <source>visible sequence of side-effects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a335cf16b6c4b55efabf04f76886b8aae39d9c" translate="yes" xml:space="preserve">
          <source>visible side effect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3bb53f90a7dfecd4927abcc314a5d92fa9965d" translate="yes" xml:space="preserve">
          <source>visible side-effects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41f18cb110cde31eb13409541bef035df4b32bf" translate="yes" xml:space="preserve">
          <source>visit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e60ae278f8e27340df41ac54a64cb5280345a5" translate="yes" xml:space="preserve">
          <source>vlist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9cede9b80ea3abd89c755f1117337d429162c86" translate="yes" xml:space="preserve">
          <source>void</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea919e1962d2fee5dd6a9ee69a0b3ade2818b77" translate="yes" xml:space="preserve">
          <source>void operand in ?: caused gratuitous l-to-r conversion on the other operand,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011c74078cd83e1859e9056da76c2cd3a9789d81" translate="yes" xml:space="preserve">
          <source>void or function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df2971fff67e4a8c24049348eaba93f7be6a24a" translate="yes" xml:space="preserve">
          <source>void variadic alias template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea12ab5402b3b91458a67a05409131eb08acfc8" translate="yes" xml:space="preserve">
          <source>void_t</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b12b97a4b6689b1a7efedd75929e9f7af9de63e" translate="yes" xml:space="preserve">
          <source>volatile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94267549b17eea7435586cb6de3a5e9bf8ed360f" translate="yes" xml:space="preserve">
          <source>volatile members make copy non-trivial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e7a097f94509da90aa20d3b838a9621422d100" translate="yes" xml:space="preserve">
          <source>volatile-qualified member functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59bc77dde53179c7f880cff0220084ea58d66eb4" translate="yes" xml:space="preserve">
          <source>volatility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0909d23d1f9b55ddb77a059a613017158f9a071d" translate="yes" xml:space="preserve">
          <source>vprintfvfprintfvsprintfvsnprintf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f44b8ddcf7b7eafab0b239913e5eedea6f0bf8" translate="yes" xml:space="preserve">
          <source>vscanfvfscanfvsscanf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413943c89304c86301faae0f1350ad380a473739" translate="yes" xml:space="preserve">
          <source>vwprintfvfwprintfvswprintf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8cf4490598a11eaa07d55910c5c6745d3a160d" translate="yes" xml:space="preserve">
          <source>vwscanfvfwscanfvswscanf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794d23522f9043b25a8049e6260494938d25f145" translate="yes" xml:space="preserve">
          <source>vy, vx</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff024fe4ab0fece4091de044c58c9ae4233383a" translate="yes" xml:space="preserve">
          <source>w</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daaad336276d15594d0e765f96c17cd746bf4971" translate="yes" xml:space="preserve">
          <source>wait</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8a2de27db96b04bc2badd042aa1579cd936525" translate="yes" xml:space="preserve">
          <source>wait_for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661ac5973d94e5acdace5364389dae14bcace692" translate="yes" xml:space="preserve">
          <source>wait_until</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce82bfa8ecd25e3a94529fddfc802d22f8f6875" translate="yes" xml:space="preserve">
          <source>waits for a thread to finish its execution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3bd498e6943629c058ebcddad4d65ae7b318b20" translate="yes" xml:space="preserve">
          <source>waits for a value (possibly referenced by other futures) that is set asynchronously</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b88897ab9d31c42968b23ebd4ccb721d8ac07da" translate="yes" xml:space="preserve">
          <source>waits for a value that is set asynchronously</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b7ce6b9eb465775f5552debbd709e448b3977d" translate="yes" xml:space="preserve">
          <source>waits for completion of initialization of any variable with static storage duration due to another thread concurrently initializing it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bab0eb61085cd005485ccb4b7abb142814a82b5" translate="yes" xml:space="preserve">
          <source>waits for the result to become available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e62b192f22cee72cec89426b5cb8696d563163" translate="yes" xml:space="preserve">
          <source>waits for the result, returns if it is not available for the specified timeout duration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d349dea521bdb7f1461605cc24db1efb1c4ca86c" translate="yes" xml:space="preserve">
          <source>waits for the result, returns if it is not available until specified time point has been reached</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9390cfbb5404e5d85ccdbce417cbacd0a266e42c" translate="yes" xml:space="preserve">
          <source>wall clock time from the system-wide realtime clock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed36cbf2c9bb73ca445c18f5195c59b62495d89c" translate="yes" xml:space="preserve">
          <source>way</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54572ba8be3ffe1d3e774dc101fcbe72bb5d9472" translate="yes" xml:space="preserve">
          <source>wbuffer_convert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146b5dae12284acb165c37a9e39cd9753cbc537e" translate="yes" xml:space="preserve">
          <source>wc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220b7fd23efbee43a390554d1761a702f666ca7f" translate="yes" xml:space="preserve">
          <source>wchar_t</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43d9ce32b0e276d38e917e5bda6cb7a23bb6375" translate="yes" xml:space="preserve">
          <source>wcrtomb</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce3bbdafb3f5afcc4401462dae3be714dc4f63e" translate="yes" xml:space="preserve">
          <source>wcscat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec769cfc96a9c602b449f8db0446cfa28e9790a" translate="yes" xml:space="preserve">
          <source>wcschr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f7e70912688bcb3270d5fc03596b44f4fefe04" translate="yes" xml:space="preserve">
          <source>wcscmp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb277ea90be0375ade81a6c8f601892829b6b207" translate="yes" xml:space="preserve">
          <source>wcscoll</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4859861f48ec147b112641bd3e9fff42580255" translate="yes" xml:space="preserve">
          <source>wcscpy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f46122ce8aa789b2ac31a18ca43cec8d6526e7a7" translate="yes" xml:space="preserve">
          <source>wcscspn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e04effec8002229c19f7b22fd3c54851632d7797" translate="yes" xml:space="preserve">
          <source>wcsftime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420696d669e5de94321a326cde357ba06820ab61" translate="yes" xml:space="preserve">
          <source>wcslen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebec65b36694a9be74eb79bbea16f8d4bc9235f9" translate="yes" xml:space="preserve">
          <source>wcsncat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db311038ddf67c0689b2c505a155bf8e2ea94f24" translate="yes" xml:space="preserve">
          <source>wcsncmp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbe6123f2c9b188b0f23fef20b2df43f8d9cb80" translate="yes" xml:space="preserve">
          <source>wcsncpy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9bc97c2de9359f4c8a14088bf274d930ce6aa76" translate="yes" xml:space="preserve">
          <source>wcspbrk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437f2881a11f09f7c6a8d769a487c97bc7a0197f" translate="yes" xml:space="preserve">
          <source>wcsrchr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6802518274c634ec18226d36c9048788d4461816" translate="yes" xml:space="preserve">
          <source>wcsrtombs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d76ac89f94f54e7f6123c374b135d9740ec01c" translate="yes" xml:space="preserve">
          <source>wcsspn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659e3bd06fab11a1cedbcd74cb6c00dfc94e9080" translate="yes" xml:space="preserve">
          <source>wcsstr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="159474e7f65fa58845e194c8fc0ac5c0fc84871a" translate="yes" xml:space="preserve">
          <source>wcstofwcstodwcstold</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4faf994614c008681f5d7cccf677e7e6d5b37c10" translate="yes" xml:space="preserve">
          <source>wcstoimaxwcstoumax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ffd2172830738a1f2f3226cb026615958634e5" translate="yes" xml:space="preserve">
          <source>wcstok</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb52449b41432a7d3633ad4efa7ac77463825ec" translate="yes" xml:space="preserve">
          <source>wcstolwcstoll</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045df874d9e3fcb45cf40e0e35ff6ba2e15296b8" translate="yes" xml:space="preserve">
          <source>wcstombs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f92c88ce14067e97ad99bd552c114a2d8b101d" translate="yes" xml:space="preserve">
          <source>wcstoulwcstoull</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2a35bf694039abea5625dc5d2dae076942bbf2" translate="yes" xml:space="preserve">
          <source>wcsxfrm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b325e974236e0181fe5634394afd889a9f8fb73" translate="yes" xml:space="preserve">
          <source>wctob</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571bb35360016c8ed079d63c7ea19e1d0a17c518" translate="yes" xml:space="preserve">
          <source>wctomb</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34dbc87af56a5792168b267bb11c52541e9f44b8" translate="yes" xml:space="preserve">
          <source>wctrans</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052096b43a456dab62fc7d5e5496a332cdb5f53d" translate="yes" xml:space="preserve">
          <source>wctype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c405f17337f497349dc5d81a1d9fa7b95cf645" translate="yes" xml:space="preserve">
          <source>weak reference to an object managed by &lt;code&gt;&lt;a href=&quot;../memory/shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5b3de7753ede04eda37f611b5d471ead948cb4" translate="yes" xml:space="preserve">
          <source>weak reference to an object managed by &lt;code&gt;&lt;a href=&quot;memory/shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc275cf4df7a125ac16d1842d3d3ffa599eb00b8" translate="yes" xml:space="preserve">
          <source>weak reference to an object managed by &lt;code&gt;&lt;a href=&quot;shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be66d314c8d84ab8948a54c93cbb3d8733eaefc5" translate="yes" xml:space="preserve">
          <source>weak_equal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5afb3987e66755032c19534ba5210a17978d4aa" translate="yes" xml:space="preserve">
          <source>weak_equality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea9ce84619e45d5c70fea410eb77fdbb686da06" translate="yes" xml:space="preserve">
          <source>weak_from_this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042c086ef218cb64ee614b36c37c0adbedc9b7d1" translate="yes" xml:space="preserve">
          <source>weak_order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17bb7f06e22d165d42d5f10030fd99cf90833f2" translate="yes" xml:space="preserve">
          <source>weak_ordering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e4e9413c21958ae959fb05510f2ecce52abda3" translate="yes" xml:space="preserve">
          <source>weak_ptr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887b11912bcc4e0c393efa9adeee924a43849c97" translate="yes" xml:space="preserve">
          <source>weakly parallel forward progress guarantee</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4b1ab4fa1a544d46163717f99634dcfc5928fa" translate="yes" xml:space="preserve">
          <source>weekday</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec13c97a1a7227ce554bf4f1e7f4ac5b77b2df6" translate="yes" xml:space="preserve">
          <source>weekday_indexed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13bd84cc144a045ae21bb672e8c0e6a9542459e4" translate="yes" xml:space="preserve">
          <source>weekday_last</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a2f88c87066f6f93f1e656449ac298cb1acd55" translate="yes" xml:space="preserve">
          <source>weibull_distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe0444198ad67c415c63ad23456fcbf739b9bf7" translate="yes" xml:space="preserve">
          <source>weight</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cab97f5a209481481ceb0b3c9dab9cba6bd17ce" translate="yes" xml:space="preserve">
          <source>weights</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a110e6b9a361653a042e3f5dfbac4c6105693789" translate="yes" xml:space="preserve">
          <source>what</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2519f967a20a6604e90bcb0485264b4af190f43" translate="yes" xml:space="preserve">
          <source>what_arg</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce088226d4f5098041703da00ce854a2f9250c65" translate="yes" xml:space="preserve">
          <source>when &lt;a href=&quot;list_initialization&quot;&gt;initializing&lt;/a&gt; an object of type &lt;code&gt;&lt;a href=&quot;../utility/initializer_list&quot;&gt;std::initializer_list&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; from a braced-init-list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c329f81cc3804efdab946d2f4dab8b643337626c" translate="yes" xml:space="preserve">
          <source>when &lt;a href=&quot;reference_initialization&quot;&gt;binding a reference&lt;/a&gt; to a prvalue;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6455703ced02d2ff148e17ef32563b3b5e4d4fdd" translate="yes" xml:space="preserve">
          <source>when &lt;a href=&quot;sizeof&quot;&gt;&lt;code&gt;sizeof&lt;/code&gt;&lt;/a&gt; is applied to a prvalue (this is part of an unevaluated expression);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248d9d0ed4770bb0a2e67364a4263d8b84db61ea" translate="yes" xml:space="preserve">
          <source>when &lt;a href=&quot;typeid&quot;&gt;&lt;code&gt;typeid&lt;/code&gt;&lt;/a&gt; is applied to a prvalue (this is part of an unevaluated expression);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c453f0dd848965d3cadf52da2df9cdfd62cdc17c" translate="yes" xml:space="preserve">
          <source>when &lt;code&gt;co_await promise.initial_suspend()&lt;/code&gt; resumes, starts executing the body of the coroutine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96f8d8b9db813596555714bc94e3c389d0f7f1d" translate="yes" xml:space="preserve">
          <source>when R is void, the result must be implicitly convertible to void (which is impossible)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="802ebf48f9a183a43e51fd8ffc0fde28ad4568ef" translate="yes" xml:space="preserve">
          <source>when a pointer to member function is formed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e895893561c2f3603a3d964e26a4a983e9dce0f" translate="yes" xml:space="preserve">
          <source>when a prvalue appears as a &lt;a href=&quot;expressions#Discarded-value_expressions&quot;&gt;discarded-value expression&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43b6cb4971a24019a9496183509b9a15a51e8af" translate="yes" xml:space="preserve">
          <source>when a prvalue appears as a &lt;a href=&quot;expressions#Discarded-value_expressions&quot;&gt;discarded-value expression&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a2985a6b87c879dda6bebf1bd9612c6e9bb717" translate="yes" xml:space="preserve">
          <source>when a reference to function is initialized</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9add8f6e734d708801a0f52c48aedd4b20a236" translate="yes" xml:space="preserve">
          <source>when an address of a function is taken</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ef7f364dcfc5542f2d13fd202fff967aa6472f" translate="yes" xml:space="preserve">
          <source>when initializing a new object of type &lt;code&gt;T2&lt;/code&gt;, including &lt;code&gt;return&lt;/code&gt; statement in a function returning &lt;code&gt;T2&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9008a9dc6fee4ce1b6afa7fa4bd642f0c283cfec" translate="yes" xml:space="preserve">
          <source>when initializing an object of type &lt;code&gt;std::initializer_list&amp;lt;T&amp;gt;&lt;/code&gt; from a &lt;a href=&quot;list_initialization&quot;&gt;braced-init-list&lt;/a&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68693e042d53ec1effe08ce926d3f04979ccf839" translate="yes" xml:space="preserve">
          <source>when performing &lt;a href=&quot;operator_member_access#Built-in_member_access_operators&quot;&gt;member access&lt;/a&gt; on a class prvalue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ad0f8dcb37fb8c947730d4c3e53fb368883861" translate="yes" xml:space="preserve">
          <source>when performing a &lt;a href=&quot;operator_member_access&quot;&gt;member access&lt;/a&gt; on a class prvalue;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0661a87c66a16e117beabdcc2d5fadfb0fc6671" translate="yes" xml:space="preserve">
          <source>when performing an &lt;a href=&quot;array#Array-to-pointer_decay&quot;&gt;array-to-pointer&lt;/a&gt; conversion or &lt;a href=&quot;operator_member_access#Built-in_subscript_operator&quot;&gt;subscripting&lt;/a&gt; on an array prvalue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b075ed9c06925f1c059d56ab5c6b688da4388bcc" translate="yes" xml:space="preserve">
          <source>when performing an array-to-pointer conversion (see above) or &lt;a href=&quot;operator_member_access#Built-in_subscript_operator&quot;&gt;subscripting&lt;/a&gt; on an array prvalue;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110562941c3a0812fbf61ebcb9896a7f158cfdfd" translate="yes" xml:space="preserve">
          <source>when the expression is used as an operand with an operator that expects &lt;code&gt;T2&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61bcb90ad046c09df7c111a6dc3a0c9ec7390e52" translate="yes" xml:space="preserve">
          <source>when the expression is used as the argument when calling a function that is declared with &lt;code&gt;T2&lt;/code&gt; as parameter;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bbfba01ed2e84ce915655958feeda2ff23455a0" translate="yes" xml:space="preserve">
          <source>when the expression is used in a &lt;code&gt;switch&lt;/code&gt; statement (&lt;code&gt;T2&lt;/code&gt; is integral type);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459f07982e101fb30cecc9008e57823c6d31efee" translate="yes" xml:space="preserve">
          <source>when the expression is used in an &lt;code&gt;if&lt;/code&gt; statement or a loop (&lt;code&gt;T2&lt;/code&gt; is &lt;code&gt;bool&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46148cc3b4d2b3ac8073f14b0cba7f25ffff54bd" translate="yes" xml:space="preserve">
          <source>where</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1875a3ed0f59d0c3d46995e275ab498129cc15aa" translate="yes" xml:space="preserve">
          <source>where &amp;alpha; is known as the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217dd98d35ce8363ff9cf082837bd76a0ca48234" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;FUN&lt;/code&gt; is the set of imaginary functions described in the description above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342f41b9c4b31dc49b7dee7b5ddffa7286cab4c4" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;LR&lt;/code&gt; is the result of usual arithmetic conversions on &lt;code&gt;L&lt;/code&gt; and &lt;code&gt;R&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3901e08330c1a56ba008686e825fa79607f430" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;LRx&lt;/code&gt; is the result of usual arithmetic conversions on &lt;code&gt;Lx&lt;/code&gt; and &lt;code&gt;Rx&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="870f58c6abad5b6174167fbb91632124314ac58e" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;X::allocator_type&lt;/code&gt; is identical to &lt;code&gt;&lt;a href=&quot;../memory/allocator_traits&quot;&gt;std::allocator_traits&lt;/a&gt;&amp;lt;A&amp;gt;::rebind_alloc&amp;lt;T&amp;gt;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef73ad8ad598ae8028c359017d470d60ec09b168" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;decay_copy&lt;/code&gt; is defined as.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75376dbe62271642c3e762fc4d023db43d10f36" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;fd&lt;/code&gt; is the member object of type std::decay_t&amp;lt;F&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0a5ef9f3f073409001441789b20f82e0f94be7" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;m=max(s+1, n)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34c66604091bbad5b81283d8e26d306450aa95c" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;p=(n-t)/2&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa00945c5a8718297dbaa1d98db8818f5d0c53c" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;r3 = 1566083941 * T(begin[k]+begin[k+p]+begin[k-1])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447cb2f67191f0dcd26e743c12afd8c32e2c4ea5" translate="yes" xml:space="preserve">
          <source>where LR is the result of &lt;a href=&quot;operator_arithmetic&quot;&gt;usual arithmetic conversions&lt;/a&gt; performed on &lt;code&gt;L&lt;/code&gt; and &lt;code&gt;R&lt;/code&gt;. The operator &amp;ldquo;?:&amp;rdquo; cannot be overloaded, these function signatures only exist for the purpose of overload resolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232d922054a527ae1cad2af726dbfa889655f963" translate="yes" xml:space="preserve">
          <source>where N is the number of bits in the return type (that is, bitwise left shift is performed and the bits that get shifted out of the destination type are discarded).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be33be31ec2351f85e1377887c3c2b0af25b17a5" translate="yes" xml:space="preserve">
          <source>where OUTERMOST is the type that would be returned by calling &lt;code&gt;this-&amp;gt;outer_allocator()&lt;/code&gt;, and then calling the &lt;code&gt;outer_allocator()&lt;/code&gt; member function recursively on the result of this call until reaching the type that has no such member function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c569e924042e952d18e82120bf3b5dcda16e15c9" translate="yes" xml:space="preserve">
          <source>where Pm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c549ce2adbdc9fb308130c6a140f725aa3b3b1" translate="yes" xml:space="preserve">
          <source>where all calculations are performed modulo 232</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c3b7b5a8b6457da89df61b446b3c3f28bfd22a" translate="yes" xml:space="preserve">
          <source>where arg is either &lt;code&gt;ON&lt;/code&gt; or &lt;code&gt;OFF&lt;/code&gt; or &lt;code&gt;DEFAULT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92cd5d70c923466da8b99ead9326680957bca1bd" translate="yes" xml:space="preserve">
          <source>where attribute-list is a comma-separated sequence of zero or more attributes (possibly ending with an ellipsis &lt;code&gt;...&lt;/code&gt; indicating a &lt;a href=&quot;parameter_pack&quot;&gt;pack expansion&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61b770919aee6cd439e4867f7944ba4120860d7" translate="yes" xml:space="preserve">
          <source>where both operands may be cv-qualified, in which case the return type's cv-qualification is the union of the cv-qualification of the operands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6279b8cbdde8de18442884c784e9be35878421a" translate="yes" xml:space="preserve">
          <source>where cis(y) is cos(y) + i sin(y).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e04a3d02da5e314a354ae9f4d3777e78ce7ebdd1" translate="yes" xml:space="preserve">
          <source>where class-head-name identifies the name of a previously declared &lt;a href=&quot;class_template&quot;&gt;class template&lt;/a&gt;and declarator identifies the name of a previously declared &lt;a href=&quot;variable_template&quot;&gt;variable template&lt;/a&gt; .(since C++14) This declaration must be in the same &lt;a href=&quot;namespace&quot;&gt;namespace&lt;/a&gt; or, for &lt;a href=&quot;member_template&quot;&gt;member templates&lt;/a&gt;, class scope as the primary template definition which it specializes .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c217e31cf0e007d7af512e54faf4e89ccd4621d9" translate="yes" xml:space="preserve">
          <source>where cv2 T2 is reference-compatible with cv1 T</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223c5a1f07f51bcce42732396f4ef0f5f17be856" translate="yes" xml:space="preserve">
          <source>where function-body is one of the following.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50081ebc91ddb3711f9bf4f1498b5111691ad6cb" translate="yes" xml:space="preserve">
          <source>where generalized noncommutative sum GNSUM(op, a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8731b8157bae46194ece8c0643ab4b6d2b557560" translate="yes" xml:space="preserve">
          <source>where generalized sum GSUM(op, a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2820b46b492e751c602809be1e37a221235237" translate="yes" xml:space="preserve">
          <source>where handler-sequence is a sequence of one or more handlers, which have the following syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394b2a0e9b458c6441b127353459e61df83a2bad" translate="yes" xml:space="preserve">
          <source>where n is known as the number of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b579bafaadf2dddc16a0925f9266a06c7ae2248" translate="yes" xml:space="preserve">
          <source>where n is the number of bits in that particular integer. E.g. for &lt;code&gt;unsigned int&lt;/code&gt;, adding one to &lt;code&gt;&lt;a href=&quot;../types/climits&quot;&gt;UINT_MAX&lt;/a&gt;&lt;/code&gt; gives &lt;code&gt;​0​&lt;/code&gt;, and subtracting one from &lt;code&gt;​0​&lt;/code&gt; gives &lt;code&gt;&lt;a href=&quot;../types/climits&quot;&gt;UINT_MAX&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a3c3bbf6c2cdf2683b903740eb957fda0c4609" translate="yes" xml:space="preserve">
          <source>where n is the number of bits used to represent the destination type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf1dae12942d13d89ffa810156410d721ae9da7" translate="yes" xml:space="preserve">
          <source>where n is the number of bits used to represent the destination type.(since C++20). (Note that this is different from &lt;a href=&quot;operator_arithmetic#Overflows&quot;&gt;signed integer arithmetic overflow&lt;/a&gt;, which is undefined).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110ae87b1ba76331aa64c5b15c35810b0b53c07e" translate="yes" xml:space="preserve">
          <source>where the exposition-only concept &lt;code&gt;__LegacyBidirectionalIterator&lt;/code&gt; is described in &lt;a href=&quot;bidirectionaliterator#Concept&quot;&gt;LegacyBidirectionalIterator#Concept&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3828b6a99382013ab850870f25f85ffd1449c72a" translate="yes" xml:space="preserve">
          <source>where the exposition-only concept &lt;code&gt;__LegacyForwardIterator&lt;/code&gt; is described in &lt;a href=&quot;forwarditerator#Concept&quot;&gt;LegacyForwardIterator#Concept&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3479e1418ab99789785337c352937ec960ef371d" translate="yes" xml:space="preserve">
          <source>where the exposition-only concept &lt;code&gt;__LegacyInputIterator&amp;lt;T&amp;gt;&lt;/code&gt; is described in &lt;a href=&quot;inputiterator#Concept&quot;&gt;LegacyInputIterator#Concept&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b80128d59b04f0f2c99f2ac8eca750311b2f54f" translate="yes" xml:space="preserve">
          <source>where the exposition-only concept &lt;code&gt;__LegacyIterator&lt;/code&gt; is described in &lt;a href=&quot;iterator#Concept&quot;&gt;LegacyIterator#Concept&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c4acc6fea0d072bb68a02fd393afe37829bffa" translate="yes" xml:space="preserve">
          <source>where the exposition-only concept &lt;code&gt;__Referenceable&amp;lt;T&amp;gt;&lt;/code&gt; is satisfied if and only if &lt;code&gt;T&amp;amp;&lt;/code&gt; is a valid type (in particular, &lt;code&gt;T&lt;/code&gt; must not be &lt;code&gt;void&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63274b78b60f152ca37e9c9fa9e2a0d74b8b91ce" translate="yes" xml:space="preserve">
          <source>where the type aliases iter_key_t, iter_val_t, iter_to_alloc_t are defined as if as follows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e604b34802e03f1330a683c3b3c560172abe78" translate="yes" xml:space="preserve">
          <source>where the type of arg may be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba19713d1180efd540e9feb3d0e30c49371e3b2" translate="yes" xml:space="preserve">
          <source>where.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d5e36bb78619a65bb6b91a2d9686f540f253ba" translate="yes" xml:space="preserve">
          <source>whether a defaulted default constructor of a union is deleted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf605a3fb84f32d2d7303c0d19486f2b044f126f" translate="yes" xml:space="preserve">
          <source>whether unused arguments in an alias specialization participate in substitition is not specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed04ff4dabf1e2d4cd6b89136c2b24dec27ecca4" translate="yes" xml:space="preserve">
          <source>which</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecafc501f7fd012878271e1a78b4a2f20db96941" translate="yes" xml:space="preserve">
          <source>which is a static data member of type &quot;array of unknown bound&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf71afa5f1ec287fc92bc7a3c532c26f8fa7496f" translate="yes" xml:space="preserve">
          <source>which may be not yet evaluated, evaluated to a value (possibly void) or evaluated to an exception. A promise may do three things with the shared state:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1350a8e8f8393d325bb0b479453b3ad7e3f446" translate="yes" xml:space="preserve">
          <source>which, in turn, may be derived from their own base classes, forming an inheritance hierarchy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6517f89c46c3f0d6db9cb009b8c7d1f98c371fa0" translate="yes" xml:space="preserve">
          <source>while</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d66b55305dcfb8436652423cd2f39d5b66d21ea" translate="yes" xml:space="preserve">
          <source>while loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc79181b102dee7af022753a5322763df4930a06" translate="yes" xml:space="preserve">
          <source>whitespace characters: any single whitespace character in the format string consumes all available consecutive whitespace characters from the input (determined as if by calling &lt;a href=&quot;../../string/byte/isspace&quot;&gt;&lt;code&gt;isspace&lt;/code&gt;&lt;/a&gt; in a loop). Note that there is no difference between &lt;code&gt;&quot;\n&quot;&lt;/code&gt;, &lt;code&gt;&quot; &quot;&lt;/code&gt;, &lt;code&gt;&quot;\t\t&quot;&lt;/code&gt;, or other whitespace in the format string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7f54179a8059ceef8bd25a3fa67d3eec3dc2c9" translate="yes" xml:space="preserve">
          <source>whitespace characters: any single whitespace character in the format string consumes all available consecutive whitespace characters from the input (determined as if by calling &lt;a href=&quot;../../string/wide/iswspace&quot;&gt;&lt;code&gt;iswspace&lt;/code&gt;&lt;/a&gt; in a loop). Note that there is no difference between &lt;code&gt;&quot;\n&quot;&lt;/code&gt;, &lt;code&gt;&quot; &quot;&lt;/code&gt;, &lt;code&gt;&quot;\t\t&quot;&lt;/code&gt;, or other whitespace in the format string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2b318cbc52214f17460bda731fe564a7b516d1f" translate="yes" xml:space="preserve">
          <source>whitespace is permitted but not required except in the last position, where whitespace is not permitted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5462badaab5bcfdb5c2bd8547146437995a013" translate="yes" xml:space="preserve">
          <source>whitespaces (&lt;code&gt;\n&lt;/code&gt;, &lt;code&gt;\v&lt;/code&gt;, &lt;code&gt;\f&lt;/code&gt;, &lt;code&gt;\r&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4998b9a5ec5a1869333ccb64820a00a159e52bb" translate="yes" xml:space="preserve">
          <source>whole seconds &amp;ndash; &amp;gt;= 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0930939f9c21e17946b1e33383f72d1041381ed" translate="yes" xml:space="preserve">
          <source>whose type is dependent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a380b0c02aa8f99b05440a1a03655b116d3df9" translate="yes" xml:space="preserve">
          <source>whose value satisfies the following constraints:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914c940924507689a62dd7e669d9788f81095d5a" translate="yes" xml:space="preserve">
          <source>wide character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9290d1d67bccee39631f5001d6eab3c75ce79c59" translate="yes" xml:space="preserve">
          <source>wide character to be converted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e409f4b15b7157ebb5db746c967bafaa085035" translate="yes" xml:space="preserve">
          <source>wide character to be put back</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d48003be35899ad8337c3baa9eeca1f49e863b2" translate="yes" xml:space="preserve">
          <source>wide character to be written</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9fdd33388df33e9ab3fb99ce63d813824d8490" translate="yes" xml:space="preserve">
          <source>wide character to convert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806ea94db3b58687709c0e8c0fecb6ab2243fe12" translate="yes" xml:space="preserve">
          <source>wide character to narrow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e22f202e8f0b6ba2f7fe0b3abfe9042a7c680d2" translate="yes" xml:space="preserve">
          <source>wide character to search for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08dd96b15e59bef3b29f83e8854ebd1d3fb6a7a" translate="yes" xml:space="preserve">
          <source>wide character types (&lt;code&gt;char16_t&lt;/code&gt;, &lt;code&gt;char32_t&lt;/code&gt;, &lt;code&gt;wchar_t&lt;/code&gt;);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514ca5390d5fd48873ad2aca0b69adb21269d6d7" translate="yes" xml:space="preserve">
          <source>wide characters (the argument must be a pointer to an array with sufficient room). Unlike %s and %[, does not append the null character to the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0dd9c4b322b2e363c7c1db1b693d6e0b8e90837" translate="yes" xml:space="preserve">
          <source>wide contract</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3205bf8af6da89693d76428ef7508dc8cc38473" translate="yes" xml:space="preserve">
          <source>wide string message catalog access</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28aa3a1513bb4a0ed65d107bfacc7a5e391a0c9" translate="yes" xml:space="preserve">
          <source>wide string time formatting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784b82ebbbcb358a03b6d5a0b3bd01b9c1429dc4" translate="yes" xml:space="preserve">
          <source>wide string time parsing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b494a98186b486ed552a5020d43da3df6d044641" translate="yes" xml:space="preserve">
          <source>wide string to display on errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9466d8d7cde94052745dea61e5bea95663b46bb2" translate="yes" xml:space="preserve">
          <source>wide string to read the characters to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f9b7165f18bab851669585793819a88a6754569" translate="yes" xml:space="preserve">
          <source>wide_err</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d052634571aa9d594d2d2ea8099f5448cbe45e20" translate="yes" xml:space="preserve">
          <source>widen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677971a9eb92c5254b40a772d9008b5b17444b04" translate="yes" xml:space="preserve">
          <source>widens a single-byte narrow character to wide character, if possible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb945ec69a3eda6aec2f9b183771267f435afcaf" translate="yes" xml:space="preserve">
          <source>widens characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70bec8a9bf5ecd2e6b37316e112b3f4c615ad4d3" translate="yes" xml:space="preserve">
          <source>width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa061dfeb2b3a1ce4f4e16ecb9b25f6ca9fc0730" translate="yes" xml:space="preserve">
          <source>width+1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9df56659a40b5b329a32c8319073029ab49bd4" translate="yes" xml:space="preserve">
          <source>will be locale sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa06ef9d40f0826707b2341bc69909db9ace5510" translate="yes" xml:space="preserve">
          <source>will be treated as if it is &lt;b&gt;not&lt;/b&gt; at the beginning of a line (i.e.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5512aa035a55c4478b9769e28d5109ab5f68d8b" translate="yes" xml:space="preserve">
          <source>will be treated as if it is &lt;b&gt;not&lt;/b&gt; at the end of a line (i.e.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a51ebdcc4b570fcb981982b728d8d4b2dc1ef5" translate="yes" xml:space="preserve">
          <source>will not match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47833592bb63744a95220daf01c231fcfc8daa2c" translate="yes" xml:space="preserve">
          <source>will read two integers that are entered on different lines (second %d will consume the newline left over by the first) or on the same line, separated by spaces or tabs (second %d will consume the spaces or tabs).  The conversion specifiers that do not consume leading whitespace, such as %c, can be made to do so by using a whitespace character in the format string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fcd25a39d2037183044a8897e9a5333d727fded" translate="yes" xml:space="preserve">
          <source>with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af12dfaa720fcad75da787288a9451d8ff590cf" translate="yes" xml:space="preserve">
          <source>with &lt;code&gt;f&lt;/code&gt;. &lt;code&gt;alloc&lt;/code&gt; is used to allocate memory for any internal data structures that the &lt;code&gt;function&lt;/code&gt; might use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3821d95c8503ced1cd59311f029fe9f6137acfde" translate="yes" xml:space="preserve">
          <source>with &lt;code&gt;std::move(f)&lt;/code&gt;. If &lt;code&gt;f&lt;/code&gt; is a null pointer to function or null pointer to member, &lt;code&gt;*this&lt;/code&gt; will be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df54a337a32cc10909aa2c814280d7d264743411" translate="yes" xml:space="preserve">
          <source>with a pointer &lt;code&gt;ptr&lt;/code&gt; of type &lt;code&gt;U*&lt;/code&gt; means that it determines if &lt;code&gt;U&lt;/code&gt; has an unambiguous and accessible(since C++17) base class that is a specialization of &lt;code&gt;&lt;a href=&quot;../enable_shared_from_this&quot;&gt;std::enable_shared_from_this&lt;/a&gt;&lt;/code&gt;, and if so, the constructor evaluates the statement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e15d6704c33901b22df522d388c3575120465a3" translate="yes" xml:space="preserve">
          <source>with a unique name whose first parameter is the result of the conversion, the remaining parameters are the parameter-list accepted by the result of the conversion, and the return type is the return type of the result of the conversion, is added to the set of candidate functions. If this surrogate function is selected by the subsequent overload resolution, then the user-defined conversion function will be called and then the result of the conversion will be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cce323b9b2b88e3109f665d35d8a8440887111e" translate="yes" xml:space="preserve">
          <source>with length &lt;code&gt;Traits::length(s)&lt;/code&gt; If &lt;code&gt;count1 &amp;gt; size() - pos1&lt;/code&gt; the substring is &lt;code&gt;[pos1, size())&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487e179bffa49c0a5783b48099f437f6a25aa799" translate="yes" xml:space="preserve">
          <source>with length &lt;code&gt;Traits::length(s)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc7d802ae22058f9445fdfcbf8f596df3862880" translate="yes" xml:space="preserve">
          <source>with no padding bits and using 2's complement for negative values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc023920285f6564d5f5b8f2e871835a4c9dd836" translate="yes" xml:space="preserve">
          <source>with optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f554b3ca1d950d78d1983346e1bd36700ee49c6f" translate="yes" xml:space="preserve">
          <source>with respect to each other, meaning they can be interleaved. In all other situations in C++, they are &lt;a href=&quot;../language/eval_order&quot;&gt;indeterminately-sequenced&lt;/a&gt; (cannot interleave). Because of that, users are not allowed to allocate or deallocate memory, acquire mutexes, use non-lockfree &lt;code&gt;&lt;a href=&quot;../atomic/atomic&quot;&gt;std::atomic&lt;/a&gt;&lt;/code&gt; specializations, or, in general, perform any</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368ff4e168b81d94b99d7d381090a8fd8f02aecb" translate="yes" xml:space="preserve">
          <source>with respect to the rest of the program and runs on an unspecified thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeca37a196e9665d115a21c8db35428961056fef" translate="yes" xml:space="preserve">
          <source>with respect to value computation B on M (a read) if both of the following are true:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="811be882dc89192f19671602f418d04ef127972a" translate="yes" xml:space="preserve">
          <source>with the goal to produce the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad796a65a99318caa9bf47d81af37a33ad46294" translate="yes" xml:space="preserve">
          <source>within a class definition, the symbol &lt;code&gt;~&lt;/code&gt; followed by the class_name. Within a class template, the symbol &lt;code&gt;~&lt;/code&gt; followed by the name of the current instantiation of the template. At namespace scope or in a &lt;a href=&quot;friend&quot;&gt;friend&lt;/a&gt; declaration within a different class,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75aebde7a4434f5d18022acce5f80fcd08a2db63" translate="yes" xml:space="preserve">
          <source>within the same thread, but this order is not guaranteed to be observed by another thread, since volatile access does not establish inter-thread synchronization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43dd31a5e72169151e52bac39cd918b71800fcd" translate="yes" xml:space="preserve">
          <source>within those operations in thread B into which the load operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac63a1bac6b5f926949cfdce592385b3d90db06" translate="yes" xml:space="preserve">
          <source>wmemchr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f01364989df9f219331d048d7aedd984ebe90d9c" translate="yes" xml:space="preserve">
          <source>wmemcmp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edce759ae13ecd87dd9839d93b570d1be0696de" translate="yes" xml:space="preserve">
          <source>wmemcpy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ecd11ccecf7fcaff182bf5ba7d7f45de1e3ccd4" translate="yes" xml:space="preserve">
          <source>wmemmove</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9eb93143e4e327d704256c7294c0a60fdb5c966" translate="yes" xml:space="preserve">
          <source>wmemset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="addf4a6726a5ed62805cc79893d0b7a95f37d674" translate="yes" xml:space="preserve">
          <source>would not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3118d3f06446e5728b11a61cab4ede9af528d6c3" translate="yes" xml:space="preserve">
          <source>wprintffwprintfswprintf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7209ff871b02768f88c76783818b965682ee3480" translate="yes" xml:space="preserve">
          <source>wrapped buffer can be safely wrapped again in a different synchronized output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f36f8322a8fd14a74d0653714cadcf7b8d5c4dc" translate="yes" xml:space="preserve">
          <source>wrapper around a &lt;code&gt;type_info&lt;/code&gt; object, that can be used as index in associative and unordered associative containers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d793a9d9bbc24cf011e844e8194bc3aba2408f5" translate="yes" xml:space="preserve">
          <source>wrapper for a pointer to nullary or unary member function, callable with a pointer to object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f55a6334583c3fd19f1b3ca53b3f22a72212e32" translate="yes" xml:space="preserve">
          <source>wrapper for a pointer to nullary or unary member function, callable with a reference to object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee5cc31187774dcb44652d8284816ff0d6146b3" translate="yes" xml:space="preserve">
          <source>wrapper function object returning the complement of the binary predicate it holds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8c4950c0e89fbf03e1b90718940dd8de664940" translate="yes" xml:space="preserve">
          <source>wrapper function object returning the complement of the unary predicate it holds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5311645b3dbb13f97ef01d60e38d66e3a8c2e64f" translate="yes" xml:space="preserve">
          <source>wraps a given abstract device (&lt;code&gt;&lt;a href=&quot;../io/basic_streambuf&quot;&gt;std::basic_streambuf&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d00c6cd3ecef175b0ff4d82da088076bee4491e" translate="yes" xml:space="preserve">
          <source>wraps a given abstract device (&lt;code&gt;&lt;a href=&quot;io/basic_streambuf&quot;&gt;std::basic_streambuf&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a3cf19eaff5e7a09974f2956549d6b8e6890ae" translate="yes" xml:space="preserve">
          <source>wraps callable object of any type with specified function call signature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d0c6c1c29e6ad5164072a5b21340dca7fcb052" translate="yes" xml:space="preserve">
          <source>write</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62868444893b9bc27941880251b28df8a08ca9d5" translate="yes" xml:space="preserve">
          <source>write extended</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ba571365fbea1308e835fc50747c3c6bf9e347" translate="yes" xml:space="preserve">
          <source>write position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e778b13f445de196b85473e39746ebc570bd9c" translate="yes" xml:space="preserve">
          <source>write to end</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f411ce449faf36efe96d490f8469dddbbfad3553" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;ISO 8601 week of the year&lt;/b&gt; (range &lt;code&gt;[01,53]&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b75db315ea6caae05a7636040f5e9f1d5e0062c" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;ISO 8601 week-based year&lt;/b&gt;, i.e. the year that contains the specified week.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7148df7bdd127d60bfe5cfdb30ea44a326d39555" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;abbreviated month&lt;/b&gt; name, e.g. &lt;code&gt;Oct&lt;/code&gt; (locale dependent)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea989300bb9b1fb252302fa5bde39483f4eb7e15" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;abbreviated weekday&lt;/b&gt; name, e.g. &lt;code&gt;Fri&lt;/code&gt; (locale dependent)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d21dec254fabf9df2fea537bdf8fa55a8e20613e" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;alternative date and time string&lt;/b&gt;, e.g. using 平成23年 (year Heisei 23) instead of 2011年 (year 2011) in ja_JP locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee8807639ed8628136e0a24ce6fddce01419acc" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;alternative date representation&lt;/b&gt;, e.g. using 平成23年 (year Heisei 23) instead of 2011年 (year 2011) in ja_JP locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc755c20d5f5adff51fc2dfa923f707db476d414" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;alternative time representation&lt;/b&gt; (locale dependent)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deca7c54c51169cdb67e685cb298053501403a5b" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;day of the month&lt;/b&gt; as a decimal number (range &lt;code&gt;[01,31]&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3473eedaaf538f41ebf58836a2b2b64724b3d532" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;day of the month&lt;/b&gt; as a decimal number (range &lt;code&gt;[1,31]&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48e5caf90d3ffcb650edccb5ec9b4ad569effac" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;day of the year&lt;/b&gt; as a decimal number (range &lt;code&gt;[001,366]&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c25c47f3bcf23b70ce4abf8a4cad4008d0b235" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;full month&lt;/b&gt; name, e.g. &lt;code&gt;October&lt;/code&gt; (locale dependent)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5857aa069f1ad9fce219f9edef34b424640fd54d" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;full weekday&lt;/b&gt; name, e.g. &lt;code&gt;Friday&lt;/code&gt; (locale dependent)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1a7592e76f2ca0bfed5563cf224d5de2f13402" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;hour&lt;/b&gt; as a decimal number, 12 hour clock (range &lt;code&gt;[01,12]&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34dac37ac036f18c6326e1a3a87ab76147793894" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;hour&lt;/b&gt; as a decimal number, 24 hour clock (range &lt;code&gt;[00-23]&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5eec7a91b7d6e25407cc3d11770f15780b8359" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;hour&lt;/b&gt; from 12-hour clock using the alternative numeric system, e.g. 六 instead of 06 in ja_JP locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d19eb8294a1496fdfbe3697a320ddff7e8a51c" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;hour&lt;/b&gt; from 24-hour clock using the alternative numeric system, e.g. 十八 instead of 18 in ja_JP locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa0761b760f51ce65cabc8d8846ad525626a881f" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;minute&lt;/b&gt; as a decimal number (range &lt;code&gt;[00,59]&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597ce1f04cfe9e796a57431c563111a419c69682" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;minute&lt;/b&gt; using the alternative numeric system, e.g. 二十五 instead of 25 in ja_JP locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30a59f819cbf2dcf112a7b48cdaee81059bd4ae" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;month&lt;/b&gt; as a decimal number (range &lt;code&gt;[01,12]&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278bc2c60796f0d51ecae90693f7be914cd716a2" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;month&lt;/b&gt; using the alternative numeric system, e.g. 十二 instead of 12 in ja_JP locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f972f41ffc8a71bcf610ed942b098b8f5fdefb32" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;offset from UTC&lt;/b&gt; in the ISO 8601 format (e.g. &lt;code&gt;-0430&lt;/code&gt;), or no characters if the time zone information is not available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd625b98d6615d2555b6095c92e54d42e8b5f89" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;second&lt;/b&gt; as a decimal number (range &lt;code&gt;[00,60]&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15bd2f9481318ea59d071ad9cb89a2ab7a8cc80f" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;second&lt;/b&gt; using the alternative numeric system, e.g. 二十四 instead of 24 in ja_JP locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2b2b6e3c49b1770cf14c6facf76fb78c6248c5" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;standard date and time string&lt;/b&gt;, e.g. &lt;code&gt;Sun Oct 17 04:41:13 2010&lt;/code&gt; (locale dependent)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a112beb824935c8dcdf0495c18917d93604c2ca" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;week of the year&lt;/b&gt; as a decimal number (Monday is the first day of the week) (range &lt;code&gt;[00,53]&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdddccda9d9999fe72f7054ac3549fdfee1f8fae" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;week of the year&lt;/b&gt; as a decimal number (Sunday is the first day of the week) (range &lt;code&gt;[00,53]&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372a0dada6ec6cd3ccc1244a64543d9837730e15" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;week of the year&lt;/b&gt;, as by &lt;code&gt;%U&lt;/code&gt;, using the alternative numeric system, e.g. 五十二 instead of 52 in ja_JP locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4721785e18be43bd1b0eaf245f0e9d32a2246c5d" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;week of the year&lt;/b&gt;, as by &lt;code&gt;%V&lt;/code&gt;, using the alternative numeric system, e.g. 五十二 instead of 52 in ja_JP locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8460614a898b9d8f1d49c35c332e5852b60d0527" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;week of the year&lt;/b&gt;, as by &lt;code&gt;%W&lt;/code&gt;, using the alternative numeric system, e.g. 五十二 instead of 52 in ja_JP locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4041768d21d53d95800117266fc8790c6fc94c25" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;weekday&lt;/b&gt; as a decimal number, where Monday is &lt;code&gt;1&lt;/code&gt; (ISO 8601 format) (range &lt;code&gt;[1-7]&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ea92579eda48e2c2c26920fd41d7075876a37b" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;weekday&lt;/b&gt; as a decimal number, where Sunday is &lt;code&gt;0&lt;/code&gt; (range &lt;code&gt;[0-6]&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd0f4b2caf92796e458bbcf5a3c559d3ec76010" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;weekday&lt;/b&gt;, where Monday is &lt;code&gt;1&lt;/code&gt;, using the alternative numeric system, e.g. 二 instead of 2 in ja_JP locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72dce1a3716be5cf87a0c225ce55088bafc5e429" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;weekday&lt;/b&gt;, where Sunday is &lt;code&gt;0&lt;/code&gt;, using the alternative numeric system, e.g. 二 instead of 2 in ja_JP locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10716d222fcaf86c50124ab0ce91b1c255935d46" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;year&lt;/b&gt; as a decimal number, e.g. 2017</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f624c3427444c53b135f08c3eb5be57751dbf1" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;year&lt;/b&gt; as offset from locale's alternative calendar period &lt;code&gt;%EC&lt;/code&gt; (locale-dependent)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e2a7ba821ae2f528eb4059bed656b8263672da" translate="yes" xml:space="preserve">
          <source>writes &lt;b&gt;year&lt;/b&gt; in the alternative representation, e.g.平成23年 (year Heisei 23) instead of 2011年 (year 2011) in ja_JP locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d06ba6637ee7fc34753cc06f8be14dbaf653d25" translate="yes" xml:space="preserve">
          <source>writes a &lt;b&gt;character string&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f23f74cc540dfdf4ce2e495dc73c353202d643" translate="yes" xml:space="preserve">
          <source>writes a &lt;b&gt;single character&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f62c5bb90e6b5e1c8bd71fea86a41d6995d2031" translate="yes" xml:space="preserve">
          <source>writes a character string to &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51f9c4858db8af0e5bf72ec40f863fa88278113" translate="yes" xml:space="preserve">
          <source>writes a character string to &lt;code&gt;&lt;a href=&quot;../io/c&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3ed9c1da5bcb8da0dfed9213a1b77fe4c24ce1" translate="yes" xml:space="preserve">
          <source>writes a character string to &lt;code&gt;stdout&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd76d69de44318b062f66878939047f85550e503" translate="yes" xml:space="preserve">
          <source>writes a character string to a file stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c50b34ae0b9528da05a34cbff41983aa1d3b781" translate="yes" xml:space="preserve">
          <source>writes a character to &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7aff4602f53f6ce76345c38cfda9df277a694dc" translate="yes" xml:space="preserve">
          <source>writes a character to &lt;code&gt;&lt;a href=&quot;../io/c&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94cd3e6f840bf56763fa2f3717ccc9292402564" translate="yes" xml:space="preserve">
          <source>writes a character to &lt;code&gt;stdout&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e6ca460bb7a5d7eb309e5bdaba4b9b203834e3" translate="yes" xml:space="preserve">
          <source>writes a character to a file stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed0be8c66fde098e77d93f36c9718f1b371ab7f" translate="yes" xml:space="preserve">
          <source>writes a character to the associated output sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da60279a58f1399b8ed78da7bf0bee6c5f2d532" translate="yes" xml:space="preserve">
          <source>writes a object to the associated output sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3f73d2561f78d7b48c64c1be6ff0c2dd4b5d06" translate="yes" xml:space="preserve">
          <source>writes a wide character to &lt;code&gt;&lt;a href=&quot;../io/c&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc7523a66b8a68bf622c3f87ed5285347756f4c" translate="yes" xml:space="preserve">
          <source>writes a wide character to &lt;code&gt;stdout&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312a40b0f1cb46a26f14af232f58d23e1316d949" translate="yes" xml:space="preserve">
          <source>writes a wide character to a file stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e92d3c06cb38af9c12157818839352f5fd6f559" translate="yes" xml:space="preserve">
          <source>writes a wide string to a file stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373f92237c4c44566929dabaae418ac5e572b2b5" translate="yes" xml:space="preserve">
          <source>writes an implementation defined character sequence defining a &lt;b&gt;pointer&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532dfdff5b285789069a902a4dd0ba1b939b9a22" translate="yes" xml:space="preserve">
          <source>writes characters to the associated file from the put area</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71cd84e9f901277c18953ef52866c33ceb217a58" translate="yes" xml:space="preserve">
          <source>writes characters to the associated output sequence from the put area</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b671b475edd2a27a1c3114b56e3b1a5df78f9cf3" translate="yes" xml:space="preserve">
          <source>writes first 2 digits of &lt;b&gt;year&lt;/b&gt; as a decimal number (range &lt;code&gt;[00,99]&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c6fd9b0ec6f5e9ea74083adbb404c5fb962e15" translate="yes" xml:space="preserve">
          <source>writes horizontal tab character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b21282e14d9a697dcbb1470a8dd2f3f3df7dc5f" translate="yes" xml:space="preserve">
          <source>writes last 2 digits of &lt;b&gt;ISO 8601 week-based year&lt;/b&gt;, i.e. the year that contains the specified week (range &lt;code&gt;[00,99]&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9cdbb46d64dfa95ce510df8bc53d501efe05bce" translate="yes" xml:space="preserve">
          <source>writes last 2 digits of &lt;b&gt;year&lt;/b&gt; as a decimal number (range &lt;code&gt;[00,99]&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8258fcca97cbc59f32c79797ca352d25688a3363" translate="yes" xml:space="preserve">
          <source>writes last 2 digits of &lt;b&gt;year&lt;/b&gt; using the alternative numeric system, e.g. 十一 instead of 11 in ja_JP locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7000a60215228d73664635cd113ca923a7d5913a" translate="yes" xml:space="preserve">
          <source>writes literal &lt;code&gt;%&lt;/code&gt;. The full conversion specification must be &lt;code&gt;%%&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08436a66edd08d8482a97c7dd05924abea59ce52" translate="yes" xml:space="preserve">
          <source>writes locale-dependent &lt;b&gt;time zone name or abbreviation&lt;/b&gt;, or no characters if the time zone information is not available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809e80c9d7d03170ecfb88a84b21e6b74d816758" translate="yes" xml:space="preserve">
          <source>writes localized &lt;b&gt;12-hour clock&lt;/b&gt; time (locale dependent)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa6185e012c695a723a956a41760329811c3c867" translate="yes" xml:space="preserve">
          <source>writes localized &lt;b&gt;a.m. or p.m.&lt;/b&gt; (locale dependent)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1eaaa24144ade9eff42803877504cb3f4bd5a98" translate="yes" xml:space="preserve">
          <source>writes localized &lt;b&gt;date representation&lt;/b&gt; (locale dependent)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6794ef372cd26505861a6063cdfaf117a9e78abf" translate="yes" xml:space="preserve">
          <source>writes localized &lt;b&gt;time representation&lt;/b&gt; (locale dependent)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba17c9023e9c9b2f4041017c688562ca71cf9129" translate="yes" xml:space="preserve">
          <source>writes multiple characters to the output sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da74b2075d670c6f518fb3d94e776f7a3855f6df" translate="yes" xml:space="preserve">
          <source>writes name of the &lt;b&gt;base year (period)&lt;/b&gt; in the locale's alternative representation, e.g. 平成 (Heisei era) in ja_JP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07be6dd3b790f78c66422e0e9c711e5703b0f5e3" translate="yes" xml:space="preserve">
          <source>writes newline character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20648b0445c656537b0cd5dcb00a9951b9b16b34" translate="yes" xml:space="preserve">
          <source>writes one character to the put area and advances the next pointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f0f108c58adf8ff82ecd5c5c5939f37b366772" translate="yes" xml:space="preserve">
          <source>writes one-based &lt;b&gt;day of the month&lt;/b&gt; using the alternative numeric system, e.g. 二十七 instead of 27 in ja_JP locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ba0a2a1ff586f8458301fa38f5cdbea53ef2ef" translate="yes" xml:space="preserve">
          <source>writes to a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694974437bc7d3e16e967132d490856f6fcd86bd" translate="yes" xml:space="preserve">
          <source>writes to the standard C error stream &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;stderr&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063d86945dd52b9bccbdbb88a589c321aaee34e1" translate="yes" xml:space="preserve">
          <source>writes to the standard C error stream &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;stderr&lt;/a&gt;&lt;/code&gt;, unbuffered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470fad86cad787f4c63b8706693a787aac833ef4" translate="yes" xml:space="preserve">
          <source>writes to the standard C error stream &lt;code&gt;&lt;a href=&quot;c&quot;&gt;stderr&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e5fdf204cadcca3d4168799f93ae88affa574c" translate="yes" xml:space="preserve">
          <source>writes to the standard C error stream &lt;code&gt;&lt;a href=&quot;c&quot;&gt;stderr&lt;/a&gt;&lt;/code&gt;, unbuffered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="446f40ad4a50ba7eb4531d019b520b144666f2ef" translate="yes" xml:space="preserve">
          <source>writes to the standard C error stream &lt;code&gt;&lt;a href=&quot;io/c&quot;&gt;stderr&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2534526ea9ac2ed3c7c4a0099888e42923473e6" translate="yes" xml:space="preserve">
          <source>writes to the standard C error stream &lt;code&gt;&lt;a href=&quot;io/c&quot;&gt;stderr&lt;/a&gt;&lt;/code&gt;, unbuffered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82150a476a0a030a0c8a7282e5bfc452fe2921c" translate="yes" xml:space="preserve">
          <source>writes to the standard C output stream &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23cc7400f8b6bd805bb59e2ae1e4edae4f4dec85" translate="yes" xml:space="preserve">
          <source>writes to the standard C output stream &lt;code&gt;&lt;a href=&quot;c&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aebf2364986bea5533352b0920607c9a9d31bed3" translate="yes" xml:space="preserve">
          <source>writes to the standard C output stream &lt;code&gt;&lt;a href=&quot;io/c&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd726bfaaed5f42a7c522dc3e343d19ec521eef" translate="yes" xml:space="preserve">
          <source>writes zero-based &lt;b&gt;day of the month&lt;/b&gt; using the alternative numeric system, e.g 二十七 instead of 27 in ja_JP locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6180960e2c7a184603a13782648731d9bd067bfb" translate="yes" xml:space="preserve">
          <source>written</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1457b75dc8c5500c0f1d4503cf801b60deb045a4" translate="yes" xml:space="preserve">
          <source>ws</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ef9f8f7030e617f56c81d27114a3b9c3c0ea97" translate="yes" xml:space="preserve">
          <source>wscanffwscanfswscanf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae5ae768110f4029ded227032134511b871648e" translate="yes" xml:space="preserve">
          <source>wstring_convert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f6ad8ec52a2984abaafd7c3b516503785c2072" translate="yes" xml:space="preserve">
          <source>x</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7caac318f0ea3b0bb34da66cd2bf3a86bd70d925" translate="yes" xml:space="preserve">
          <source>x - a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f386cf7b20b349f9277f68a069f67f05221b06ed" translate="yes" xml:space="preserve">
          <source>x(m/2)-1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e88e5de05a95b1c6d95b2d63e5b2f7e20b36da5" translate="yes" xml:space="preserve">
          <source>x(n/2)-1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9f6769827ae1eb0ac2b7b114fdae5bd0f41026" translate="yes" xml:space="preserve">
          <source>x, y</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51de899f5650c1b9c4db1ba8ce63f3514df3662e" translate="yes" xml:space="preserve">
          <source>x, y, z</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd33fb3d07e6217dc209ec7b81b3808fff2ecac" translate="yes" xml:space="preserve">
          <source>x-&amp;mu;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f20657d1c89e5969616a462f97db362c7bcd4f" translate="yes" xml:space="preserve">
          <source>x-b</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79679440b568adb69689c57a06141f9afa22555e" translate="yes" xml:space="preserve">
          <source>x1, x2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43134cb1ce397f6bceb0059edffa36bb6fdcee5" translate="yes" xml:space="preserve">
          <source>x2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2489160eebfdd1305199cbe9c52adadc27888d" translate="yes" xml:space="preserve">
          <source>xalloc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33c58a32ab941dd3c37a52b6722fe2666ea77f7" translate="yes" xml:space="preserve">
          <source>xdigit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e011a3ee093c0d169221bb426322940a2338cbaf" translate="yes" xml:space="preserve">
          <source>xmax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e15eda465c6cb4041291ead5c81617c0d30f636" translate="yes" xml:space="preserve">
          <source>xmin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1922a234bb92764a276a8524d28cdb446d3c7da" translate="yes" xml:space="preserve">
          <source>xor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424f4a1a0eb210e58fa9020311a3a8e0e83a4daa" translate="yes" xml:space="preserve">
          <source>xor_eq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71bb26ec0aacf86f4e7c8f2d2ef515d37a5c423c" translate="yes" xml:space="preserve">
          <source>xsgetn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c61a13dac97f9b5a3bfc48d5e5202a79f7ded4" translate="yes" xml:space="preserve">
          <source>xsputn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6b4c587532d656c4f140868901d476a9a28279" translate="yes" xml:space="preserve">
          <source>xvalue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c476f57105093e2d6fd2a046ed09546c69a268" translate="yes" xml:space="preserve">
          <source>xvalue expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8459982f9f619f4b0d9af2542a2086e56a4bef" translate="yes" xml:space="preserve">
          <source>xy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95cb0bfd2977c761298d9624e4b4d4c72a39974a" translate="yes" xml:space="preserve">
          <source>y</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff0b1538469338a0073e2cdaab6a517801b6ab4" translate="yes" xml:space="preserve">
          <source>year</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecbfe434c5265d6b009d40f9347fbcab6e70649c" translate="yes" xml:space="preserve">
          <source>year, day, month (rare)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0944f97c6aaf2dc4fb964afef0f522a3d24d9be0" translate="yes" xml:space="preserve">
          <source>year, month, day (Asian locales)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa11070a0e51deb8c71289fab17ec9ee84436a13" translate="yes" xml:space="preserve">
          <source>year_month</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f162a29fd20a058c9ab0892a19e02ae0e6bece6" translate="yes" xml:space="preserve">
          <source>year_month_day</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8e5fc2eb0251daf8309cc3330a5aa827c65590" translate="yes" xml:space="preserve">
          <source>year_month_day_last</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f295c3095b61970d4f0dfeac3b7632de1fb5f859" translate="yes" xml:space="preserve">
          <source>year_month_weekday</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e67adec488f2c5918f1c594a8ae50131d9c9dd" translate="yes" xml:space="preserve">
          <source>year_month_weekday_last</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fef2ce1b2380f521d5b55988066ebc28a9858d2" translate="yes" xml:space="preserve">
          <source>yearmonth</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40dac48b54f0b4f23f237a6f73f36153b26d3212" translate="yes" xml:space="preserve">
          <source>yearmonthday</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f4aa8479498c2dfac2bf6e4ada7b38e06d95ec" translate="yes" xml:space="preserve">
          <source>yearmonthdaymonth_day_last</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df8ce7d0c9aebd29b12a05ec2bb617319d4c28f" translate="yes" xml:space="preserve">
          <source>yearmonthweekdayindexweekday_indexed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84ec438af09cf5b1eb163f21744b91e828dbb92" translate="yes" xml:space="preserve">
          <source>yearmonthweekdayweekday_last</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77345d4d3d2847bf9869c527df6848dc6c82909e" translate="yes" xml:space="preserve">
          <source>years since 1900</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12e1e8f455f823f59cc0134f1795184b98fe5ac" translate="yes" xml:space="preserve">
          <source>yield</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e58b7f829791576c3aa65abdc848c40edcfdfc4" translate="yes" xml:space="preserve">
          <source>yield-expression (C++20)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395df8f7c51f007019cb30201c49e884b46b92fa" translate="yes" xml:space="preserve">
          <source>z</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39787b89a86e3cc94bdca0815b781b300e1e57bb" translate="yes" xml:space="preserve">
          <source>z + &amp;radic;1-z2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8c41330509455ee5679d04ed41535d280d9a89" translate="yes" xml:space="preserve">
          <source>zero</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834cdc1cf325c34eb5582d1bc774d589351010cb" translate="yes" xml:space="preserve">
          <source>zero if both character sequences compare equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b823f9fd6bacbdf688bd43cd3eb903142d2f99aa" translate="yes" xml:space="preserve">
          <source>zero initialization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f8ebfb1ee92b9c30f41ee6fe9d786974bceb70" translate="yes" xml:space="preserve">
          <source>zero or more arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18dc01554c280d83729103a56fb1010bc34db557" translate="yes" xml:space="preserve">
          <source>zero or more arguments to construct the tuple from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d960a44897f228d53590cf0c33e7eadb420f886" translate="yes" xml:space="preserve">
          <source>zero or more lvalue arguments to construct the tuple from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c9d174ec54755fed25c661b0c099e329cd5cdd3" translate="yes" xml:space="preserve">
          <source>zero or more tuples to concatenate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e544c76211d55ee2cd4a099a3285be7ce3ea58f5" translate="yes" xml:space="preserve">
          <source>zero-filling shift the elements of the valarray</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b820da33fd684989388909563a41674d261ca25c" translate="yes" xml:space="preserve">
          <source>zero-init performed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782be1c40cd8cab392cf9ca89fe20ee450d285f5" translate="yes" xml:space="preserve">
          <source>zero-init was specified to always occur first, even before constant-init</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1e516ed807823b7edf75ed45ba8879d4dcff92" translate="yes" xml:space="preserve">
          <source>zoned_time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b4e24acdd77e978657e46e2cfe958fd5515e0a" translate="yes" xml:space="preserve">
          <source>zoned_traits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57dd8eadb6d2a5fbdc41f6068b1466780522e099" translate="yes" xml:space="preserve">
          <source>| is between 1 and &lt;code&gt;r&lt;/code&gt; (typically between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt;), but for the exponent &lt;code&gt;e&lt;/code&gt; returned by &lt;code&gt;&lt;a href=&quot;frexp&quot;&gt;std::frexp&lt;/a&gt;&lt;/code&gt;, |arg*2-e</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f3d55a55547a9ecce7aa2993fe51155b0d2719" translate="yes" xml:space="preserve">
          <source>| is between &lt;code&gt;0.5&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b445e6bc90603d514dd9b20358377afd050b0b" translate="yes" xml:space="preserve">
          <source>|, is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c65f37b2cb1ae26c89e9b4f26e2ca9e9cde4ae5b" translate="yes" xml:space="preserve">
          <source>||</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b7df6201fdd3362399091f0a29550df3505b6a" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f8e8fb0eef6f757447b807a00333fbb325184b2" translate="yes" xml:space="preserve">
          <source>​</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6117a7814e1df6015ca492ec69a7d5782c4c06" translate="yes" xml:space="preserve">
          <source>⎛</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44af71e96b313c8d69894ec51b8b9c32f47c987" translate="yes" xml:space="preserve">
          <source>⎜</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03304654369ee055ffd1161efc04d8a7f49c954c" translate="yes" xml:space="preserve">
          <source>⎝</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daffbf4d8f152e2720c097ac58125327835dfd6c" translate="yes" xml:space="preserve">
          <source>⎝-</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03974ceb1a6a5cdc082025cb876f79e82659242" translate="yes" xml:space="preserve">
          <source>⎝-⎛</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e5bea37fbe0ef892a77b9dca38332c9554978c" translate="yes" xml:space="preserve">
          <source>⎝1+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c23fe148b3769b854d6fb23c0aa5a981eb1dbfa" translate="yes" xml:space="preserve">
          <source>⎝b&amp;pi; ⎡</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b30549e6bddc0411bca40a2ceee6f2764d8928" translate="yes" xml:space="preserve">
          <source>⎝k + i &amp;minus; 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be19086d40833f83349f9f1619eab79cbbfa7c0" translate="yes" xml:space="preserve">
          <source>⎝n</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7cd193195ca2165be2b30dffadce1615a7beeb" translate="yes" xml:space="preserve">
          <source>⎝t</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed636e8e193917b2c628f4246a5a4fbd49f85ff" translate="yes" xml:space="preserve">
          <source>⎞</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88602ea8b849e0ca98235c17ed3ed5704e51f532" translate="yes" xml:space="preserve">
          <source>⎟</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964ac33fe918cb1ddb5c1fa39b12ccafe438d91b" translate="yes" xml:space="preserve">
          <source>⎠</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519cad207b049daff347e0deb08e66a1c0ae19f9" translate="yes" xml:space="preserve">
          <source>⎠ &amp;middot; pi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a610b5597c872df3f5a564910997648b15ca1d78" translate="yes" xml:space="preserve">
          <source>⎠ &amp;middot; pk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a0374e4b0076b8b4c7c5e29a4c4963d5081d05c" translate="yes" xml:space="preserve">
          <source>⎠-</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d91ab14b834be66403519e648d6085b61f088a" translate="yes" xml:space="preserve">
          <source>⎠-1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563d327179533ab1e569b8807ae1de5552ecd5f7" translate="yes" xml:space="preserve">
          <source>⎠2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2abec1e7478ccc15f79e180b28addcf8672eef" translate="yes" xml:space="preserve">
          <source>⎠=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44bef947ef7a43fc1e627754f7d4c84ac9a2681" translate="yes" xml:space="preserve">
          <source>⎠a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b57a2fd781399c1986bb0a73d8c2b6be892501" translate="yes" xml:space="preserve">
          <source>⎠a-1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c58251e72729ac1e7e7e5b64595ade7c33fa7d" translate="yes" xml:space="preserve">
          <source>⎠⎞</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f689cb9010da220c7cee5c84d8c42e65ae3a8845" translate="yes" xml:space="preserve">
          <source>⎢</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8825d822ec51f36e55d242e1594754a727be9fc2" translate="yes" xml:space="preserve">
          <source>⎣1 + ⎛</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7857b5b2d74d8439f214b5d0f2c9e6339271f4" translate="yes" xml:space="preserve">
          <source>⎤</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f208692f951897e40af949559f2d79e59ccaee98" translate="yes" xml:space="preserve">
          <source>⎥</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8f903dafb62f649267fa8139e78610a14e8724" translate="yes" xml:space="preserve">
          <source>⎦⎞</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d79ab1919dfdff403713e87ae0cf76f4d1a5aa6" translate="yes" xml:space="preserve">
          <source>⎧</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe94784b15f11a8014ab44cccf5a7aec62c353d" translate="yes" xml:space="preserve">
          <source>⎨</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4daeef06f05cd9a2fdc2e603ce865a14db9d60" translate="yes" xml:space="preserve">
          <source>⎩p if &lt;code&gt;b == true &lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
