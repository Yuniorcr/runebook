<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="apache_http_server">
    <body>
      <group id="apache_http_server">
        <trans-unit id="239357de691452356a1c03f3ac5e45fafa0b4c33" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;MIME-encoding&lt;/var&gt; is a valid content-encoding, such as &lt;code&gt;x-compress&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8a57495aec3025157238ba86fb6388f7f1de59" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;MIME-type&lt;/var&gt; is a wildcard expression matching required the mime types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83025a99db02cfe1c0ef3725c7ce2c22d4cdfdf" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;MODULE-LIST&lt;/var&gt; is a space separated list of modulenames enclosed by quotation marks. The module names are given without the preceding &lt;code&gt;mod_&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d23e82ef18cf519070d3d691360447d54b68bf" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;MPM-LIST&lt;/var&gt; is a space-separated list of MPM names enclosed by quotation marks. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c73c3735ce4a6b0f8fb4c0fe814e2c54d8ce5a0" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;Name&lt;/var&gt; is either &lt;code&gt;^^DIRECTORY^^&lt;/code&gt; for directories, &lt;code&gt;^^BLANKICON^^&lt;/code&gt; for blank lines (to format the list correctly), a file extension, a wildcard expression, a partial filename or a complete filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e9d02de5ad3d91b37082a80488c1ea3d32e65b0" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;Number&lt;/var&gt; is an integer from 0 (meaning unlimited) to 32767. The default value is defined by the compile-time constant &lt;code&gt;DEFAULT_LIMIT_REQUEST_FIELDS&lt;/code&gt; (100 as distributed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345567e5055e8f2bc1959f9d649aed0e30db6c94" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;Pattern&lt;/var&gt;: which incoming URLs should be affected by the rule;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbbbe74b19c737e7df9ee95b4ffc2499fcd3d1af" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;Substitution&lt;/var&gt;: where should the matching requests be sent;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90aab4783da7556ee50c45effe816f4632f3af65" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;Unix-group&lt;/var&gt; is one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adfb4be74d656f24ed1ac873e86bb2b815a4702e" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;Unix-userid&lt;/var&gt; is one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa77c7d12e54a82ea1157261f53ddc1c96f63cf" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;[flags]&lt;/var&gt;: options affecting the rewritten request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898cb72d817d33962382af2af9de3895f5f6fb04" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;expression&lt;/var&gt; is an &lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4823320e4d33806b0959a6b57fd626a59b4fb2c" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;filtername&lt;/var&gt; specifies the name of the filter being defined. This name can then be used in &lt;code&gt;&lt;a href=&quot;core#setoutputfilter&quot;&gt;SetOutputFilter&lt;/a&gt;&lt;/code&gt; directives. It must be unique among all registered filters. &lt;em&gt;At the present time, no error is reported by the register-filter API, so a problem with duplicate names isn't reported to the user.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b242fbc5a48c59f4ece57bb3d6f3d28d1d44319" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;option&lt;/var&gt; can be set to &lt;code&gt;None&lt;/code&gt;, in which case none of the extra features are enabled, or one or more of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b884044a1efbbf71ae98eccd379b000dd6b79c" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;option&lt;/var&gt; can be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6afd311cd4db011417370a703429b82090b2130a" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;path&lt;/var&gt; is the name of a local virtual path; &lt;var&gt;url&lt;/var&gt; is a partial URL for the remote server. These parameters are used the same way as for the &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d6f9b075caac7d94b3de7f26e9f0b02bea3875" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;proto-flags&lt;/var&gt; is one or more of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f57162c2695fe7319fbc277593f5a0c08d6b29a" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;provider-name&lt;/var&gt; must have been registered by loading a module that registers the name with &lt;code&gt;ap_register_output_filter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9478a4b9b604e6c5f77be930fe2a98edc4626e77" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;scheme&lt;/var&gt; is effectively the protocol that should be used to communicate with the remote server; only &lt;code&gt;http&lt;/code&gt; and &lt;code&gt;https&lt;/code&gt; are supported by this module. When using &lt;code&gt;https&lt;/code&gt;, the requests are forwarded through the remote proxy using the HTTP CONNECT method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83971dbdde1c9eb52d2baf2e6fff8fa835f85843" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;test_condition&lt;/var&gt; is a boolean expression which follows the &lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt; syntax. The syntax can be changed to be compatible with Apache HTTPD 2.2.x using &lt;code&gt;&lt;a href=&quot;#ssilegacyexprparser&quot;&gt;SSILegacyExprParser&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f746fa79f8904f0f8434f8f63ad93c2225aa5e" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;version&lt;/var&gt; has the form &lt;code&gt;/regex/&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2284727d52b14d2eb3941c572e7dc77605504a1" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;version&lt;/var&gt; has the form &lt;code&gt;regex&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd5440aaa9a05d65ee6f556885831197c735102" translate="yes" xml:space="preserve">
          <source>?auth_type</source>
          <target state="translated">?auth_type</target>
        </trans-unit>
        <trans-unit id="97e39427cace4ea01135cb845e53b9691cd6b93d" translate="yes" xml:space="preserve">
          <source>?context</source>
          <target state="translated">?context</target>
        </trans-unit>
        <trans-unit id="25ca4ac22c4139d0c33f51ede42452e8c17f536a" translate="yes" xml:space="preserve">
          <source>?jvm_route</source>
          <target state="translated">?jvm_route</target>
        </trans-unit>
        <trans-unit id="cafbec8fdd770712cf2967c1113e6c226bcf64b4" translate="yes" xml:space="preserve">
          <source>?query_string</source>
          <target state="translated">?query_string</target>
        </trans-unit>
        <trans-unit id="f875c8cc12525771bad98b8d702a73b5b2725cb8" translate="yes" xml:space="preserve">
          <source>?remote_user</source>
          <target state="translated">?remote_user</target>
        </trans-unit>
        <trans-unit id="4da7d97f6fca52f3fdc134c9924f7934e21a5fc1" translate="yes" xml:space="preserve">
          <source>?req_attribute</source>
          <target state="translated">?req_attribute</target>
        </trans-unit>
        <trans-unit id="48b112fbabe839567ec695e028f713549243b58d" translate="yes" xml:space="preserve">
          <source>?servlet_path</source>
          <target state="translated">?servlet_path</target>
        </trans-unit>
        <trans-unit id="6501f567db01f0c60f6e8ae877acb319f8a7027e" translate="yes" xml:space="preserve">
          <source>?ssl_cert</source>
          <target state="translated">?ssl_cert</target>
        </trans-unit>
        <trans-unit id="9f4979e1ff2a05b33629c6f4c142675cab6079cd" translate="yes" xml:space="preserve">
          <source>?ssl_cipher</source>
          <target state="translated">?ssl_cipher</target>
        </trans-unit>
        <trans-unit id="a5c7b5e4a257799207547cd0e70620e1e0e9b274" translate="yes" xml:space="preserve">
          <source>?ssl_key_size</source>
          <target state="translated">?ssl_key_size</target>
        </trans-unit>
        <trans-unit id="5fa3a5287e256129d5ff98518a407e8cb0db8bc8" translate="yes" xml:space="preserve">
          <source>?ssl_session</source>
          <target state="translated">?ssl_session</target>
        </trans-unit>
        <trans-unit id="6dcd4ce23d88e2ee9568ba546c007c63d9131c1b" translate="yes" xml:space="preserve">
          <source>A</source>
          <target state="translated">A</target>
        </trans-unit>
        <trans-unit id="c50229354fdc3e6ec50395f3b2ee7f17651dcd6d" translate="yes" xml:space="preserve">
          <source>A &quot;handler&quot; is an internal Apache representation of the action to be performed when a file is called. Generally, files have implicit handlers, based on the file type. Normally, all files are simply served by the server, but certain file types are &quot;handled&quot; separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc25c6ed3ddd56d41cd2931cbcf3a85b2a6f51f" translate="yes" xml:space="preserve">
          <source>A &quot;trailing slash&quot; redirect is issued when the server receives a request for a URL &lt;code&gt;http://servername/foo/dirname&lt;/code&gt; where &lt;code&gt;dirname&lt;/code&gt; is a directory. Directories require a trailing slash, so &lt;code&gt;&lt;a href=&quot;mod_dir&quot;&gt;mod_dir&lt;/a&gt;&lt;/code&gt; issues a redirect to &lt;code&gt;http://servername/foo/dirname/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787eb27d77385988f7af6e976302f32ef5e2c612" translate="yes" xml:space="preserve">
          <source>A (partial) domain-name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91fa876704a0d02a868d48a5d10ba71c84af4e6" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;http://wiki.apache.org/httpd/DistrosDefaultLayout&quot;&gt;description of these third-party distrubutions&lt;/a&gt; is maintained in the HTTP Server wiki, and should reflect the current state of these third-party distributions. However, you will need to familiarize yourself with your particular platform's package management and installation procedures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ca5bfdd2c58b97ed0a678bc9ab9434bd52b27b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;#limitexcept&quot;&gt;&amp;lt;LimitExcept&amp;gt;&lt;/a&gt;&lt;/code&gt; section should always be used in preference to a &lt;code&gt;&amp;lt;Limit&amp;gt;&lt;/code&gt; section when restricting access, since a &lt;code&gt;&lt;a href=&quot;#limitexcept&quot;&gt;&amp;lt;LimitExcept&amp;gt;&lt;/a&gt;&lt;/code&gt; section provides protection against arbitrary methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a4f689ab6b657c65157be9cdc32da04b69c537" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; should be specified inside each &lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt; block. If it is absent, the &lt;code&gt;&lt;a href=&quot;#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; from the &quot;main&quot; server configuration will be inherited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27cff7256b2ef4f4b23ffe474db001c4df051897" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../mod/core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; directive via the &lt;code&gt;-C&lt;/code&gt; command line switch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0742ae63366703eff705acc9736cc8009644db0d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; can have its behavior modified by one or more flags. Flags are included in square brackets at the end of the rule, and multiple flags are separated by commas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef8318dcab3d8e8b2266dbf8ef47d8345cedb28" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; consists of three arguments separated by spaces. The arguments are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0698017a4add71d85802fe419cbec66694f22d9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt;-relative path to the resource to be served. Note that &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; tries to guess whether you have specified a file-system path or a URL-path by checking to see if the first segment of the path exists at the root of the file-system. For example, if you specify a &lt;em&gt;Substitution&lt;/em&gt; string of &lt;code&gt;/www/file.html&lt;/code&gt;, then this will be treated as a URL-path &lt;em&gt;unless&lt;/em&gt; a directory named &lt;code&gt;www&lt;/code&gt; exists at the root or your file-system (or, in the case of using rewrites in a &lt;code&gt;.htaccess&lt;/code&gt; file, relative to your document root), in which case it will be treated as a file-system path. If you wish other URL-mapping directives (such as &lt;code&gt;&lt;a href=&quot;mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt;) to be applied to the resulting URL-path, use the &lt;code&gt;[PT]&lt;/code&gt; flag as described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6bfd7ad5fd0d3831bbbdec233e208fc088e0534" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ServerRoot&lt;/code&gt; directive via a &lt;code&gt;-C&lt;/code&gt; switch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189f5739098d477a812c421ef087a255434a5cbe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TERM&lt;/code&gt; signal will immediately terminate the parent process and all children when in the &quot;graceful&quot; state. However as the &lt;code&gt;&lt;a href=&quot;mod/mpm_common#pidfile&quot;&gt;PidFile&lt;/a&gt;&lt;/code&gt; will have been removed, you will not be able to use &lt;code&gt;apachectl&lt;/code&gt; or &lt;code&gt;httpd&lt;/code&gt; to send this signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96fecdeaaf613c4f74b4f2090ddea95a6320b3a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;formatted&lt;/code&gt; menu is the simplest menu. Comments in the imagemap file are ignored. A level one header is printed, then an hrule, then the links each on a separate line. The menu has a consistent, plain look close to that of a directory listing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a09617af2291f5e4323f74f4ebc242aa58994c48" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;test_condition&lt;/em&gt; can be any sort of logical comparison - either comparing values to one another, or testing the ``truth'' of a particular value. (A given string is true if it is nonempty.) For a full list of the comparison operators available to you, see the &lt;code&gt;&lt;a href=&quot;../mod/mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6547be2a9599e8e99a653f1e0286348470236f87" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;cond&lt;/strong&gt; is evaluated by the &lt;a href=&quot;../expr&quot;&gt;Expression Parser&lt;/a&gt;. In addition, the simpler syntax of conditions in mod_proxy_html 3.x for HTTPD 2.0 and 2.2 is also supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975d090160ab4445e9f967769a9b59e9164461ca" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;frame&lt;/strong&gt; is the smallest unit of communication within an HTTP/2 connection, consisting of a header and a variable-length sequence of octets structured according to the frame type. More info in the official documentation &lt;a href=&quot;http://httpwg.org/specs/rfc7540.html#FramingLayer&quot;&gt; section&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c62d669ff7b870cb7863e381a830c6a23f25c4" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;resource&lt;/strong&gt; is a conceptual entity identified by a URI (RFC 2396). An HTTP server like Apache HTTP Server provides access to &lt;strong&gt;representations&lt;/strong&gt; of the resource(s) within its namespace, with each representation in the form of a sequence of bytes with a defined media type, character set, encoding, etc. Each resource may be associated with zero, one, or more than one representation at any given time. If multiple representations are available, the resource is referred to as &lt;strong&gt;negotiable&lt;/strong&gt; and each of its representations is termed a &lt;strong&gt;variant&lt;/strong&gt;. The ways in which the variants for a negotiable resource vary are called the &lt;strong&gt;dimensions&lt;/strong&gt; of negotiation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a877690b16e5995d5a743eb42612f6616ed787" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;stream&lt;/strong&gt; is a bidirectional flow of frames within the HTTP/2 connection. The correspondent concept in HTTP 1.1 is a request/response message exchange. More info in the official documentation &lt;a href=&quot;http://httpwg.org/specs/rfc7540.html#StreamsLayer&quot;&gt; section&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a024ffe550958308b640c82f63bd31eda53dbe70" translate="yes" xml:space="preserve">
          <source>A &lt;var&gt;privilege-name&lt;/var&gt; may optionally be prefixed by + or -, which will respectively allow or deny a privilege. If used with neither + nor -, all privileges otherwise assigned to the virtualhost will be denied. You can use this to override any of the default sets and construct your own privilege set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03312c20affa4adb4da0ce9d7b0e0ab91cd8dfd9" translate="yes" xml:space="preserve">
          <source>A &lt;var&gt;ratio&lt;/var&gt; between the number of (online) CPU cores and the number of listeners' buckets can be used to make Apache HTTP Server create &lt;code&gt;num_cpu_cores / ratio&lt;/code&gt; listening buckets, each containing its own &lt;code&gt;Listen&lt;/code&gt;-ing socket(s) on the same port(s), and then make each child handle a single bucket (with round-robin distribution of the buckets at children creation time).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68c134b54bb0411aa769007b276f03ab32a75c1" translate="yes" xml:space="preserve">
          <source>A Brief Guide to Conditional Requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7116031341225de0dc7afd9e9bd6175a79eb51b7" translate="yes" xml:space="preserve">
          <source>A Certificate Authority may also issue a certificate for another Certificate Authority. When examining a certificate, Alice may need to examine the certificate of the issuer, for each parent Certificate Authority, until reaching one which she has confidence in. She may decide to trust only certificates with a limited chain of issuers, to reduce her risk of a &quot;bad&quot; certificate in the chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b69553c9614f33ce6fa6a8752fd169064b49c7" translate="yes" xml:space="preserve">
          <source>A Certificate Authority may define a policy specifying which distinguished field names are optional and which are required. It may also place requirements upon the field contents, as may users of certificates. For example, a Netscape browser requires that the Common Name for a certificate representing a server matches a wildcard pattern for the domain name of that server, such as &lt;code&gt;*.snakeoil.com&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96c57af82ea59593e638d5a091bbeba410a03f7" translate="yes" xml:space="preserve">
          <source>A Certificate Signing Request (CSR) is a digital file which contains your public key and your name. You send the CSR to a Certifying Authority (CA), who will convert it into a real Certificate, by signing it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7a8f2909e6f95c885ef556a00543ddcb54c528" translate="yes" xml:space="preserve">
          <source>A Certificate contains your RSA public key, your name, the name of the CA, and is digitally signed by the CA. Browsers that know the CA can verify the signature on that Certificate, thereby obtaining your RSA public key. That enables them to send messages which only you can decrypt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f5e5a40fb696ba4ddb9c42b13d83c8614d4cd7" translate="yes" xml:space="preserve">
          <source>A Multiviews search (enabled by the &lt;code&gt;Multiviews&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;core#options&quot;&gt;Options&lt;/a&gt;&lt;/code&gt;), where the server does an implicit filename pattern match, and choose from amongst the results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45b6240420e28ca964f65cfb4f359e3261ee3d7" translate="yes" xml:space="preserve">
          <source>A Multiviews search is enabled by the &lt;code&gt;Multiviews&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;core#options&quot;&gt;Options&lt;/a&gt;&lt;/code&gt;. If the server receives a request for &lt;code&gt;/some/dir/foo&lt;/code&gt; and &lt;code&gt;/some/dir/foo&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; exist, then the server reads the directory looking for all files named &lt;code&gt;foo.*&lt;/code&gt;, and effectively fakes up a type map which names all those files, assigning them the same media types and content-encodings it would have if the client had asked for one of them by name. It then chooses the best match to the client's requirements, and returns that document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ff295206172e6718cbc570cd29e81e12215985" translate="yes" xml:space="preserve">
          <source>A SQL SELECT statement to be performed to look up the rewrite target. (&lt;a href=&quot;../rewrite/rewritemap#dbd&quot;&gt;Details ...&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b671ac0d028246c423146116e7e15964cde16b69" translate="yes" xml:space="preserve">
          <source>A Simple Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5d754537a86d0d183cf8d80988f5a41216962a4" translate="yes" xml:space="preserve">
          <source>A URL is constructed from the attribute, and the output the server would return if the URL were accessed by the client is included in the parsed output. Thus included files can be nested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8454499f1cfbfe383f3c361c892378804cc923fa" translate="yes" xml:space="preserve">
          <source>A Uniform Resource Identifier (URI) is a compact string of characters for identifying an abstract or physical resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7bf25d04cccdf73b152b6ef1f78a19b56b7aa59" translate="yes" xml:space="preserve">
          <source>A backend URL matches the configuration section if it begins with the the &lt;var&gt;wildcard-url&lt;/var&gt; string, even if the last path segment in the directive only matches a prefix of the backend URL. For example, &amp;lt;Proxy &quot;http://example.com/foo&quot;&amp;gt; matches all of http://example.com/foo, http://example.com/foo/bar, and http://example.com/foobar. The matching of the final URL differs from the behavior of the &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; section, which for purposes of this note treats the final path component as if it ended in a slash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ddf681bd0c9231b65d176a4068baf86e6057fde" translate="yes" xml:space="preserve">
          <source>A balancer worker is created if its worker URL uses &lt;code&gt;balancer&lt;/code&gt; as the protocol scheme. The balancer URL uniquely identifies the balancer worker. Members are added to a balancer using &lt;code&gt;&lt;a href=&quot;#balancermember&quot;&gt;BalancerMember&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9481cf6cf0636080eefcc75e518bc9ffd355a8bc" translate="yes" xml:space="preserve">
          <source>A bind password to use in conjunction with the bind DN. Note that the bind password is probably sensitive data, and should be properly protected. You should only use the &lt;code&gt;&lt;a href=&quot;#authldapbinddn&quot;&gt;AuthLDAPBindDN&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;AuthLDAPBindPassword&lt;/code&gt; if you absolutely need them to search the directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0d984413296ede0f638faf2eec06a76446c3f3" translate="yes" xml:space="preserve">
          <source>A brief comment about what not to do. You'll occasionally see people recommending that you just tell Apache to parse all &lt;code&gt;.html&lt;/code&gt; files for SSI, so that you don't have to mess with &lt;code&gt;.shtml&lt;/code&gt; file names. These folks have perhaps not heard about &lt;code&gt;&lt;a href=&quot;../mod/mod_include#xbithack&quot;&gt;XBitHack&lt;/a&gt;&lt;/code&gt;. The thing to keep in mind is that, by doing this, you're requiring that Apache read through every single file that it sends out to clients, even if they don't contain any SSI directives. This can slow things down quite a bit, and is not a good idea.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3718c6c3aa2b5a270e5ccdefa7c6ee3fc77d863" translate="yes" xml:space="preserve">
          <source>A certificate associates a public key with the real identity of an individual, server, or other entity, known as the subject. As shown in &lt;a href=&quot;#table1&quot;&gt;Table 1&lt;/a&gt;, information about the subject includes identifying information (the distinguished name) and the public key. It also includes the identification and signature of the Certificate Authority that issued the certificate and the period of time during which the certificate is valid. It may have additional information (or extensions) as well as administrative information for the Certificate Authority's use, such as a serial number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d854f8b2fccbf71a753ddb01788dd31497c79f" translate="yes" xml:space="preserve">
          <source>A character class - matches one of the characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be71f644a68661b55ed034fbb89e67687a672b5e" translate="yes" xml:space="preserve">
          <source>A charset conversion filter will be inserted if a text document is not already in the desired charset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ace1b45786c1861a43c001e9ad6eb3ee1bafcf" translate="yes" xml:space="preserve">
          <source>A client (e.g., a web browser) connects to a server (e.g., your Apache HTTP Server), with the specified protocol, and makes a &lt;strong&gt;request&lt;/strong&gt; for a resource using the URL-path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2008a82cf20ca473bcc690dbb165f696ee7aa71" translate="yes" xml:space="preserve">
          <source>A client the IP of which is resolved from the name &lt;code&gt;bla.example.org&lt;/code&gt; will be granted access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea3bee7bfd08c2567afb3961baa613d5cefb857a" translate="yes" xml:space="preserve">
          <source>A collection of directives that are implemented by more than one multi-processing module (MPM)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70390d3d0a261784d7383d0b8a48f98fdfab9668" translate="yes" xml:space="preserve">
          <source>A common manifestation of this is the path to the script interpreter (often &lt;code&gt;perl&lt;/code&gt;) indicated in the first line of your CGI program, which will look something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32fa0fb240edd95483d41b1fe4ba2243942ac157" translate="yes" xml:space="preserve">
          <source>A common technique for distributing the burden of server load or storage space is called &quot;sharding&quot;. When using this method, a front-end server will use the url to consistently &quot;shard&quot; users or objects to separate backend servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a2bf07af5be1b8967e2f02410d048ffecb16d68" translate="yes" xml:space="preserve">
          <source>A common usage of &lt;code&gt;&lt;a href=&quot;mod_macro&quot;&gt;mod_macro&lt;/a&gt;&lt;/code&gt; is for the creation of dynamically-generated virtual hosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be936b6664c2926a7b4bd7013a7633080296295b" translate="yes" xml:space="preserve">
          <source>A common use for &lt;code&gt;RewriteRule&lt;/code&gt; is to redirect an entire class of URLs. For example, all URLs in the &lt;code&gt;/one&lt;/code&gt; directory must be redirected to &lt;code&gt;http://one.example.com/&lt;/code&gt;, or perhaps all &lt;code&gt;http&lt;/code&gt; requests must be redirected to &lt;code&gt;https&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674985304d3e7a952ef2a1f579f65a27f9dc7e44" translate="yes" xml:space="preserve">
          <source>A common use scenario for &lt;code&gt;mod_substitute&lt;/code&gt; is the situation in which a front-end server proxies requests to a back-end server which returns HTML with hard-coded embedded URLs that refer to the back-end server. These URLs don't work for the end-user, since the back-end server is unreachable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfeaf0e4bb72cd31921ee6f5bcaeeea3434eb21" translate="yes" xml:space="preserve">
          <source>A compression filter will only run if the input is a compressible type and not already compressed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2135dfb2e80c3ba1e74946b0339c1a07ea19cf9" translate="yes" xml:space="preserve">
          <source>A consequence of this is that there's a practical limit to how many users you can put in one password file. This limit will vary depending on the performance of your particular server machine, but you can expect to see slowdowns once you get above a few hundred entries, and may wish to consider a different authentication method at that time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584f7b3273b782f18023b5d9727f7de06afc01bc" translate="yes" xml:space="preserve">
          <source>A coordinate consists of an &lt;var&gt;x&lt;/var&gt; and a &lt;var&gt;y&lt;/var&gt; value separated by a comma. The coordinates are separated from each other by whitespace. To accommodate the way Lynx handles imagemaps, should a user select the coordinate &lt;code&gt;0,0&lt;/code&gt;, it is as if no coordinate had been selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514e9fafd49d5cb9c60c24f49dc9d30ab7b48896" translate="yes" xml:space="preserve">
          <source>A couple of examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2174320f09eeaf2456a5bc9a4d74b922bac9be17" translate="yes" xml:space="preserve">
          <source>A couple of things need to be determined from the request in order to make the dynamic virtual host look like a normal one. The most important is the server name, which is used by the server to generate self-referential URLs etc. It is configured with the &lt;code&gt;ServerName&lt;/code&gt; directive, and it is available to CGIs via the &lt;code&gt;SERVER_NAME&lt;/code&gt; environment variable. The actual value used at run time is controlled by the &lt;code&gt;&lt;a href=&quot;../mod/core#usecanonicalname&quot;&gt;UseCanonicalName&lt;/a&gt;&lt;/code&gt; setting. With &lt;code&gt;UseCanonicalName Off&lt;/code&gt;, the server name is taken from the contents of the &lt;code&gt;Host:&lt;/code&gt; header in the request. With &lt;code&gt;UseCanonicalName DNS&lt;/code&gt;, it is taken from a reverse DNS lookup of the virtual host's IP address. The former setting is used for name-based dynamic virtual hosting, and the latter is used for IP-based hosting. If httpd cannot work out the server name because there is no &lt;code&gt;Host:&lt;/code&gt; header, or the DNS lookup fails, then the value configured with &lt;code&gt;ServerName&lt;/code&gt; is used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e312d60a3116b84c067394c59d0e7e28ef8126e3" translate="yes" xml:space="preserve">
          <source>A dash indicates that no substitution should be performed (the existing path is passed through untouched). This is used when a flag (see below) needs to be applied without changing the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49cfcb1f8181594199e2e8e644fc4766bc9452cc" translate="yes" xml:space="preserve">
          <source>A default configuration is supplied in &lt;var&gt;proxy-html.conf&lt;/var&gt; and defines the HTML links for standard HTML 4 and XHTML 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5967e7c1483af9dc11c49f44b8494ad165552847" translate="yes" xml:space="preserve">
          <source>A default configuration is supplied in &lt;var&gt;proxy-html.conf&lt;/var&gt; and defines the events in standard HTML 4 and XHTML 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f3ab379331ec91c853bdbcc243acb5ef3af070" translate="yes" xml:space="preserve">
          <source>A default value can be specified in the event that nothing is found in the map:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f5ca7ef3f06aa9d70060408f521bc183bbdcf2" translate="yes" xml:space="preserve">
          <source>A default vhost never serves a request that was sent to an address/port that is used for name-based vhosts. If the request contained an unknown or no &lt;code&gt;Host:&lt;/code&gt; header it is always served from the primary name-based vhost (the vhost for that address/port appearing first in the configuration file).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e4521e0ad21d02f9e22979063a178e1b81a467" translate="yes" xml:space="preserve">
          <source>A detailed description of your problem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf7944639266a5797e0440d9d53e146562baaee" translate="yes" xml:space="preserve">
          <source>A distinguished name is used to provide an identity in a specific context -- for instance, an individual might have a personal certificate as well as one for their identity as an employee. Distinguished names are defined by the X.509 standard [&lt;a href=&quot;#X509&quot;&gt;X509&lt;/a&gt;], which defines the fields, field names and abbreviations used to refer to the fields (see &lt;a href=&quot;#table2&quot;&gt;Table 2&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f92bef317aff51b0c36550af7e6f943d973017" translate="yes" xml:space="preserve">
          <source>A few steps later, once the final data directories have been found, the per-directory configuration directives (&lt;code&gt;.htaccess&lt;/code&gt; files and &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; blocks) are applied. This happens in the Fixup phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b79427c8a67b9f2462b73b8536b0bd9d2ddeaf" translate="yes" xml:space="preserve">
          <source>A file located in that directory, typically called &lt;code&gt;index.html&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;mod_dir#directoryindex&quot;&gt;DirectoryIndex&lt;/a&gt;&lt;/code&gt; directive sets the name of the file or files to be used. This is controlled by &lt;code&gt;&lt;a href=&quot;mod_dir&quot;&gt;mod_dir&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e509b196655e6f1a76bafa2a7ac314c7e3274477" translate="yes" xml:space="preserve">
          <source>A file of a particular &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#media-type&quot;&gt;media-type&lt;/a&gt; can additionally be encoded a particular way to simplify transmission over the Internet. While this usually will refer to compression, such as &lt;code&gt;gzip&lt;/code&gt;, it can also refer to encryption, such a &lt;code&gt;pgp&lt;/code&gt; or to an encoding such as UUencoding, which is designed for transmitting a binary file in an ASCII (text) format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6746e4522ddb0a01a7efa35c063b1af2be558220" translate="yes" xml:space="preserve">
          <source>A file written by the user, typically called &lt;code&gt;index.html&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;#directoryindex&quot;&gt;DirectoryIndex&lt;/a&gt;&lt;/code&gt; directive sets the name of this file. This is controlled by &lt;code&gt;&lt;a href=&quot;mod_dir&quot;&gt;mod_dir&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39eebb5c85247ed21e0e5cb300f2d5c9a4a2b4e" translate="yes" xml:space="preserve">
          <source>A filename, relative to the &lt;code&gt;&lt;a href=&quot;core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599463f76dc466580329dd975603e02295da0695" translate="yes" xml:space="preserve">
          <source>A filter chain comprises any number of instances of the filter harness, each of which may have any number of providers. A special case is that of a single provider with unconditional dispatch: this is equivalent to inserting the provider filter directly into the chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e723c8aeb27f190bbec5f52dafce12abb3664b8" translate="yes" xml:space="preserve">
          <source>A full IP address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d31d26900ba47d9d4a395ea6e26e209c60392d" translate="yes" xml:space="preserve">
          <source>A full IP address:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeee97d3e26bd4da45b428d7519eb29b46c8b17e" translate="yes" xml:space="preserve">
          <source>A full filesystem path to a resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5457a199f1ecdeacbe3bd55e0e6bdbdcf26825e" translate="yes" xml:space="preserve">
          <source>A fully qualified domain name for the IP address of the virtual host (not recommended);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f3ccc748d8f83e7a9321f8d65c47a07bdcdc49" translate="yes" xml:space="preserve">
          <source>A group name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2e70f9564d14c3634a7680187ee495432573bc" translate="yes" xml:space="preserve">
          <source>A group, which the user is member of. A groupname may not contain a colon (&lt;code&gt;:&lt;/code&gt;). You may use a hyphen (&lt;code&gt;-&lt;/code&gt;) if you don't want to assign the user to a group, but fill in the comment field. Additionally when using the &lt;code&gt;update&lt;/code&gt; command, a period (&lt;code&gt;.&lt;/code&gt;) keeps the original groups untouched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59542916f776952080ce76875a3ea9e660db2506" translate="yes" xml:space="preserve">
          <source>A growing number of platforms implement IPv6, and &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR&lt;/a&gt; supports IPv6 on most of these platforms, allowing httpd to allocate IPv6 sockets, and to handle requests sent over IPv6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82b33cf8a19e2bc0d92c1b6515e08e3be375732" translate="yes" xml:space="preserve">
          <source>A high value for &lt;code&gt;CacheDirLength&lt;/code&gt; combined with a low value for &lt;code&gt;CacheDirLevels&lt;/code&gt; will result in a relatively flat hierarchy, with a large number of subdirectories at each level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8b8c43f9490cd6c6a5f6d9f219c17d51cc98726" translate="yes" xml:space="preserve">
          <source>A high value for &lt;code&gt;CacheDirLevels&lt;/code&gt; combined with a low value for &lt;code&gt;CacheDirLength&lt;/code&gt; will result in a relatively deep hierarchy, with a small number of subdirectories at each level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1bffeae8f778b01c21a263788bc313f281aade" translate="yes" xml:space="preserve">
          <source>A hostname starting with a &lt;strong&gt;&quot;*&quot;&lt;/strong&gt; matches all hostnames with that suffix. A hostname starting with &lt;strong&gt;&quot;.&quot;&lt;/strong&gt; matches all hostnames containing the domain components that follow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8a54509ee9af69088f6f90fac6f4f121c1fe65" translate="yes" xml:space="preserve">
          <source>A hosts file will probably be located at &lt;code&gt;/etc/hosts&lt;/code&gt; or &lt;code&gt;C:\Windows\system32\drivers\etc\hosts&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f28c04ae6a1ad8ae00c85676cd2a050032ad7a" translate="yes" xml:space="preserve">
          <source>A large number of third parties provide their own packaged distributions of the Apache HTTP Server for installation on particular platforms. This includes the various Linux distributions, various third-party Windows packages, Mac OS X, Solaris, and many more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79d02567aa8911232055daac826f0c4fb75f5a0" translate="yes" xml:space="preserve">
          <source>A last thing: the protocols you configure are not checked for correctness or spelling. You can mention protocols that do not exist, so there is no need to guard &lt;code&gt;&lt;a href=&quot;../mod/core#protocols&quot;&gt;Protocols&lt;/a&gt;&lt;/code&gt; with any &lt;code&gt;&lt;a href=&quot;../mod/core#ifmodule&quot;&gt;&amp;lt;IfModule&amp;gt;&lt;/a&gt;&lt;/code&gt; checks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff701869639a9a3b16b63d0e0bc5a2d38f1c05e" translate="yes" xml:space="preserve">
          <source>A limitation of the inline login technique described above is that should an HTML form POST have resulted in the request to authenticate or reauthenticate, the contents of the original form posted by the browser will be lost. Depending on the function of the website, this could present significant inconvenience for the end user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8886a82dad8768ccc6db55cc3a0a6c3113b0266" translate="yes" xml:space="preserve">
          <source>A list of notes that can be passed on from one module to another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3011baed42083bb44195fbc011fc57d1a3031f" translate="yes" xml:space="preserve">
          <source>A list of one or more 'magic' userIDs which are allowed access without password verification. The userIDs are space separated. It is possible to use the ' and &quot; quotes to allow a space in a userID as well as the \ escape character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d1d5ee03cd5ea146ce564da0ac8909b54ad762" translate="yes" xml:space="preserve">
          <source>A local URL to redirect to (if the action begins with a &quot;/&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ecb5d46118de0ccafdee20830bba38db8744e8f" translate="yes" xml:space="preserve">
          <source>A lock older than this value in seconds will be ignored, and the next incoming request will be given the opportunity to re-establish the lock. This mechanism prevents a slow client taking an excessively long time to refresh an entity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c5074cc367e2726bea7f65f3a387ef7ce99a64" translate="yes" xml:space="preserve">
          <source>A machine-readable version of the status file is available by accessing the page &lt;code&gt;http://your.server.name/server-status?auto&lt;/code&gt;. This is useful when automatically run, see the Perl program &lt;code&gt;log_server_status&lt;/code&gt;, which you will find in the &lt;code&gt;/support&lt;/code&gt; directory of your Apache HTTP Server installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4adbbb6de847ff6cd47fdcc111671b827ce09fce" translate="yes" xml:space="preserve">
          <source>A mapping is maintained, from users to target servers, in external map files. They look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4128dc602324765c5ce846705aef1ba1a6df69" translate="yes" xml:space="preserve">
          <source>A message saying &quot;Internal Server Error&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4a37f5b156abc6b42629f0c0c5be60b3192689" translate="yes" xml:space="preserve">
          <source>A message starting with &quot;Forbidden&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59dce823e7607f8abe9e8d64f31ec33dd2183503" translate="yes" xml:space="preserve">
          <source>A more elaborate version of this example may be seen below in the Examples section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273319019e806549d95d0055a87717d9cf864918" translate="yes" xml:space="preserve">
          <source>A more even spread of files can be achieved by hashing from the end of the name, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce805c0e9426dec84948bcf8fcf4a931254b99c" translate="yes" xml:space="preserve">
          <source>A more useful example would be to set the variable rfc1918 if the remote IP address is a private address according to RFC 1918:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6580dd122035cc54cdc6d73a315ac9fcc51be40" translate="yes" xml:space="preserve">
          <source>A network a.b.c.d, and a netmask w.x.y.z. For more fine-grained subnet restriction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031e33e1338e4d9845f99b059ff6202e111e657f" translate="yes" xml:space="preserve">
          <source>A network/netmask pair</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b54d0b5f041833f857b05d93314dcd1bf4dfcf9" translate="yes" xml:space="preserve">
          <source>A network/netmask pair:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d7567a8f4876a70a12b5095a7fb7dff17dddbc" translate="yes" xml:space="preserve">
          <source>A network/nnn CIDR specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f6742e1dca4b6c68444168ada58fb45c1d27ec" translate="yes" xml:space="preserve">
          <source>A network/nnn CIDR specification:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867f2c01b9900a1495db470d8ceef88cbea4153b" translate="yes" xml:space="preserve">
          <source>A new BalancerMember &lt;a href=&quot;mod_proxy#status_table&quot;&gt;status&lt;/a&gt; state (flag) is defined via this module: &quot;&lt;code&gt;C&lt;/code&gt;&quot;. When the worker is taken offline due to failures as determined by the health check module, this flag is set, and can be seen (and modified) via the &lt;code&gt;balancer-manager&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1671f7789ac0a70775988d60df8a4f29c49554ba" translate="yes" xml:space="preserve">
          <source>A new version of the TLS protocol, as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc8446.txt&quot;&gt;RFC 8446&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822864c2db1e101265def0284a7a5abe75fea237" translate="yes" xml:space="preserve">
          <source>A non-regex wildcard section that changes the configuration of all user directories could look as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a65c1a8f746226f828f8af76688e186663e122" translate="yes" xml:space="preserve">
          <source>A number as modifier can be used to assign a log severity level to a format item. The item will only be logged if the severity of the log message is not higher than the specified log severity level. The number can range from 1 (alert) over 4 (warn) and 7 (debug) to 15 (trace8).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96ed3245f605e91184d886a56a018766f5f4c8b" translate="yes" xml:space="preserve">
          <source>A number in the range of &lt;code&gt;0 to 2^16 (32768)&lt;/code&gt;. Stored in 2 bytes with the high-order byte first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc32fcf9a9a01fa343465c713d59177fefea15e6" translate="yes" xml:space="preserve">
          <source>A number of additional environment variables can also be used in &lt;code&gt;SSLRequire&lt;/code&gt; expressions, or in custom log formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="434ec8eae236e118f06948c233df045dbd67b1d9" translate="yes" xml:space="preserve">
          <source>A number of companies, such as &lt;a href=&quot;http://www.thawte.com/&quot;&gt;Thawte&lt;/a&gt; and &lt;a href=&quot;http://www.verisign.com/&quot;&gt;VeriSign&lt;/a&gt; have established themselves as Certificate Authorities. These companies provide the following services:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6468f7aa29e7ff082a4c5c90031c85cec81e41a9" translate="yes" xml:space="preserve">
          <source>A package named &lt;code&gt;apache2&lt;/code&gt; is available with (at least) the following contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77356145e8ca128b4025a1699e13a27279faef98" translate="yes" xml:space="preserve">
          <source>A partial IP address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990c333d7ef7105fef671be0d8fb114534cfcd2f" translate="yes" xml:space="preserve">
          <source>A partial IP address:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8297fadeab1e3fb03576a1ec4f8b222ec9be297" translate="yes" xml:space="preserve">
          <source>A particular resource might exist in one of several places, and we want to look in those places for the resource when it is requested. Perhaps we've recently rearranged our directory structure, dividing content into several locations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f423ad83530d97e74078940090e4a260ca4337" translate="yes" xml:space="preserve">
          <source>A perl script called &lt;code&gt;&lt;a href=&quot;../programs/dbmmanage&quot;&gt;dbmmanage&lt;/a&gt;&lt;/code&gt; is included with Apache. This program can be used to create and update DBM format password files for use with this module. Another tool for maintaining the DBM files is the included program &lt;code&gt;&lt;a href=&quot;../programs/htdbm&quot;&gt;htdbm&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dcc4fa0c39b9ee8a563c408e2e46d7bdf801c7c" translate="yes" xml:space="preserve">
          <source>A plain text file containing space-separated key-value pairs, one per line. (&lt;a href=&quot;../rewrite/rewritemap#txt&quot;&gt;Details ...&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73980009859bfc4bc9809f9de00f1328411f3d6b" translate="yes" xml:space="preserve">
          <source>A positive number representing the maximum number of overlapping ranges the server is willing to satisfy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="450af649db23dc16ade815493a690a6566fcca12" translate="yes" xml:space="preserve">
          <source>A positive number representing the maximum number of range reversals the server is willing to satisfy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d3d163970f1df6f04c9374d927e04b00333e10" translate="yes" xml:space="preserve">
          <source>A positive number representing the maximum number of ranges the server is willing to satisfy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277fe43e0f888886e5929df880763a019e8f4a82" translate="yes" xml:space="preserve">
          <source>A private key contains a series of numbers. Two of these numbers form the &quot;public key&quot;, the others are part of the &quot;private key&quot;. The &quot;public key&quot; bits are included when you generate a CSR, and subsequently form part of the associated Certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69c40d6bac9c8637bbddec96a0b19034ef3b9e8" translate="yes" xml:space="preserve">
          <source>A privileges-aware malicious user extension (module or script) could escalate its privileges to anything available to the httpd process in any virtual host. This introduces new risks if (and only if) mod_privileges is compiled with the &lt;var&gt;BIG_SECURITY_HOLE&lt;/var&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668a1266dcfd4515c0bfda771f761d2d894b0a23" translate="yes" xml:space="preserve">
          <source>A privileges-aware malicious user extension (module or script) could escalate privileges to set its user ID to another system user (and/or group).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee4c946b07ea693e10ce68f918020499a47b440" translate="yes" xml:space="preserve">
          <source>A registry entry which was created if you did a binary installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ebf22d84f2d04071784488a6a6f3f5ca637b4d" translate="yes" xml:space="preserve">
          <source>A request for &lt;code&gt;document.html.var&lt;/code&gt; in this directory will result in choosing the variant which most closely matches the language preference specified in the user's &lt;code&gt;Accept-Language&lt;/code&gt; request header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3460e2197ef48a1154f53855940fd794814a4ea5" translate="yes" xml:space="preserve">
          <source>A request for &lt;code&gt;http://example.com/cgi-bin/foo&lt;/code&gt; would cause the server to run the script &lt;code&gt;/web/cgi-bin/foo&lt;/code&gt;. This configuration is essentially equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104bd0a4e7321d491490bd0167d4e7a57ebe86e1" translate="yes" xml:space="preserve">
          <source>A request for &lt;code&gt;http://example.com/docs/&lt;/code&gt; would return a temporary redirect to &lt;code&gt;http://example.com/docs/index.html&lt;/code&gt; if it exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0810cc8bfb40c5120383445fa6a2c5b88c56c2" translate="yes" xml:space="preserve">
          <source>A request for &lt;code&gt;http://example.com/image/foo.gif&lt;/code&gt; would cause the server to return the file &lt;code&gt;/ftp/pub/image/foo.gif&lt;/code&gt;. Only complete path segments are matched, so the above alias would not match a request for &lt;code&gt;http://example.com/imagefoo.gif&lt;/code&gt;. For more complex matching using regular expressions, see the &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbda485615e3d8c2962251c6eb1af59208c7db8c" translate="yes" xml:space="preserve">
          <source>A request for &lt;code&gt;http://www.domain.example.com/directory/file.html&lt;/code&gt; will be satisfied by the file &lt;code&gt;/usr/local/apache/vhosts/domain.example/directory/file.html&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb81c1c08938c88aeae97858739a2d450d7c196" translate="yes" xml:space="preserve">
          <source>A request for &lt;code&gt;http://www.domain.example.com/directory/file.html&lt;/code&gt; will be satisfied by the file &lt;code&gt;/usr/local/apache/vhosts/example.com/d/o/m/domain/directory/file.html&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b2e77ef9bb19231597391cb5a9c6267977f36d9" translate="yes" xml:space="preserve">
          <source>A request for &lt;code&gt;http://www.domain.example.com/directory/file.html&lt;/code&gt; would be satisfied by the file &lt;code&gt;/usr/local/apache/vhosts/10/20/30/40/docs/directory/file.html&lt;/code&gt; if the IP address of &lt;code&gt;www.domain.example.com&lt;/code&gt; were 10.20.30.40. A request for &lt;code&gt;http://www.domain.example.com/cgi-bin/script.pl&lt;/code&gt; would be satisfied by executing the program &lt;code&gt;/usr/local/apache/vhosts/10/20/30/40/cgi-bin/script.pl&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aeb5398a3938f8ea25824486c70df8302e5284d" translate="yes" xml:space="preserve">
          <source>A request for &lt;code&gt;http://www.example.com/directory/file.html&lt;/code&gt; will be satisfied by the file &lt;code&gt;/usr/local/apache/vhosts/www.example.com/directory/file.html&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84a868481069e37de4000719e8c53eb26dbab32" translate="yes" xml:space="preserve">
          <source>A request in &lt;var&gt;SECURE&lt;/var&gt; mode forks a subprocess, which then drops privileges. This is a very similar case to running CGI with suexec, but for the entire request cycle, and with the benefit of fine-grained control of privileges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e9e1e5ae2ded99e133730ed7159dc5095d6110" translate="yes" xml:space="preserve">
          <source>A request to an unspecified address on port 80 is served from the default vhost. Any other request to an unspecified address and port is served from the main server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81843e5aba7895cfd942a2b671230ed9ea776d88" translate="yes" xml:space="preserve">
          <source>A request to the URL &lt;code&gt;http://www.sub1.domain.tld/&lt;/code&gt; is only served from the sub1-vhost if the client sent a correct &lt;code&gt;Host:&lt;/code&gt; header. If no &lt;code&gt;Host:&lt;/code&gt; header is sent the client gets the information page from the primary host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="458507930f8a83b72b34221d523cb9a82bd8d4ce" translate="yes" xml:space="preserve">
          <source>A request will be accepted if a leading path component maps to a file that exists. The above example &lt;code&gt;/test/here.html/more&lt;/code&gt; will be accepted if &lt;code&gt;/test/here.html&lt;/code&gt; maps to a valid file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a01a5205fe4eb18638130790ed9402ade2c44d" translate="yes" xml:space="preserve">
          <source>A request will only be accepted if it maps to a literal path that exists. Therefore a request with trailing pathname information after the true filename such as &lt;code&gt;/test/here.html/more&lt;/code&gt; in the above example will return a 404 NOT FOUND error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="676f45cf499334064cbfc4572f6104c96cae8f87" translate="yes" xml:space="preserve">
          <source>A resource may be available in several different representations. For example, it might be available in different languages or different media types, or a combination. One way of selecting the most appropriate choice is to give the user an index page, and let them select. However it is often possible for the server to choose automatically. This works because browsers can send, as part of each request, information about what representations they prefer. For example, a browser could indicate that it would like to see information in French, if possible, else English will do. Browsers indicate their preferences by headers in the request. To request only French representations, the browser would send</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c0755f872f2c6d3ea0c7bcb45b4d49ed86ad049" translate="yes" xml:space="preserve">
          <source>A response will not be stored if it includes a &quot;Vary:&quot; header containing the match-all &quot;*&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac27fceba4fb33a60e631b488f76a78c0fb5a90d" translate="yes" xml:space="preserve">
          <source>A reverse proxy is activated using the &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; directive or the &lt;code&gt;[P]&lt;/code&gt; flag to the &lt;code&gt;&lt;a href=&quot;mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directive. It is &lt;strong&gt;not&lt;/strong&gt; necessary to turn &lt;code&gt;&lt;a href=&quot;#proxyrequests&quot;&gt;ProxyRequests&lt;/a&gt;&lt;/code&gt; on in order to configure a reverse proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47943899de0e24bb155467b29dca53a90c8eb605" translate="yes" xml:space="preserve">
          <source>A revision of the TLS 1.0 protocol, as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc4346.txt&quot;&gt;RFC 4346&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6494455a7b51be597ff2c7b085fc58141f639afc" translate="yes" xml:space="preserve">
          <source>A revision of the TLS 1.1 protocol, as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc5246.txt&quot;&gt;RFC 5246&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fceb7486e85b28a75289995a178bf4026353296" translate="yes" xml:space="preserve">
          <source>A risk exists that under certain circumstances, the login form configured using inline login may be submitted more than once, revealing login credentials to the application running underneath. The administrator must ensure that the underlying application is properly secured to prevent abuse. If in doubt, use the standalone login configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18a7d91db1e066b7889e41542872fa97ad34037" translate="yes" xml:space="preserve">
          <source>A sample balancer setup:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd78edfbaae6a44014d6d62df28238a008c0651" translate="yes" xml:space="preserve">
          <source>A second example might involve an application that registers a new user for the first time. When registration is complete, the username and password is written to the session, providing a seamless transition to being logged in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03beaff21d09d9de6649c4840aa34bc04a8b4f2c" translate="yes" xml:space="preserve">
          <source>A set of modules must be loaded into the server to provide the necessary features. These modules can be included statically at build time or dynamically via the &lt;code&gt;&lt;a href=&quot;mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; directive). The set must include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc90722152c8e44577f6d0f433fdd82be8baea8" translate="yes" xml:space="preserve">
          <source>A setting of 0 causes connections to never be saved in the backend connection pool. The default value of -1, and any other negative value, allows connections of any age to be reused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40af23a7ace7411f53a05145229ab5736b0a5759" translate="yes" xml:space="preserve">
          <source>A similar effect to &lt;code&gt;&lt;a href=&quot;mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;mod_negotiation#languagepriority&quot;&gt;LanguagePriority&lt;/a&gt;&lt;/code&gt; can be achieved by qualifying a &lt;var&gt;media-type&lt;/var&gt; with &lt;code&gt;qs&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f4eed7a67692e89fd358149772de483e158898" translate="yes" xml:space="preserve">
          <source>A similar restriction is currently present for requests involving an output filter that needs to read and/or modify the whole response body. If the connection to the client blocks while the filter is processing the data, and the amount of data produced by the filter is too big to be buffered in memory, the thread used for the request is not freed while httpd waits until the pending data is sent to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19b355bdcefde638c2f87f2c9a36dddd67caef8" translate="yes" xml:space="preserve">
          <source>A simple case of replacing &lt;code&gt;AddOutputFilterByType&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9219ad1119f40f65a63297051deb3b06c61fab9" translate="yes" xml:space="preserve">
          <source>A simple echo server to illustrate protocol modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db007b3ba7e5ad6579d012b7aa9026876951694d" translate="yes" xml:space="preserve">
          <source>A simple example is shown here which will replace all dashes with underscores in a request URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a8e40a4ebd93cebb3e2973fe9830cf5d346690" translate="yes" xml:space="preserve">
          <source>A simple switch to enable or disable the proxy_html filter. If &lt;code&gt;&lt;a href=&quot;mod_xml2enc&quot;&gt;mod_xml2enc&lt;/a&gt;&lt;/code&gt; is loaded it will also automatically set up internationalisation support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a88db518f169e806e41ca022688097d6ec587cd" translate="yes" xml:space="preserve">
          <source>A simple usage example to accelerate &lt;code&gt;&lt;a href=&quot;mod_authn_dbd&quot;&gt;mod_authn_dbd&lt;/a&gt;&lt;/code&gt; using dbm as a cache engine:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74cfecac65aa251b5c3c284ad467323f15d8d708" translate="yes" xml:space="preserve">
          <source>A simpler way to look at all of this is to use the ``&lt;code&gt;openssl ciphers -v&lt;/code&gt;'' command which provides a nice way to successively create the correct &lt;em&gt;cipher-spec&lt;/em&gt; string. The default &lt;em&gt;cipher-spec&lt;/em&gt; string depends on the version of the OpenSSL libraries used. Let's suppose it is ``&lt;code&gt;RC4-SHA:AES128-SHA:HIGH:MEDIUM:!aNULL:!MD5&lt;/code&gt;'' which means the following: Put &lt;code&gt;RC4-SHA&lt;/code&gt; and &lt;code&gt;AES128-SHA&lt;/code&gt; at the beginning. We do this, because these ciphers offer a good compromise between speed and security. Next, include high and medium security ciphers. Finally, remove all ciphers which do not authenticate, i.e. for SSL the Anonymous Diffie-Hellman ciphers, as well as all ciphers which use &lt;code&gt;MD5&lt;/code&gt; as hash algorithm, because it has been proven insufficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88efe5820a68f2961577b6dc8fa15bfc7fce1887" translate="yes" xml:space="preserve">
          <source>A single argument of &quot;disabled&quot; prevents &lt;code&gt;&lt;a href=&quot;mod_dir&quot;&gt;mod_dir&lt;/a&gt;&lt;/code&gt; from searching for an index. An argument of &quot;disabled&quot; will be interpreted literally if it has any arguments before or after it, even if they are &quot;disabled&quot; as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d268be7b84e4acc5b0f57400db712050248fda86" translate="yes" xml:space="preserve">
          <source>A single byte, &lt;code&gt;1 = true&lt;/code&gt;, &lt;code&gt;0 = false&lt;/code&gt;. Using other non-zero values as true (i.e. C-style) may work in some places, but it won't in others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b1e413974b6f89fafa20e57e5e5707d117c742" translate="yes" xml:space="preserve">
          <source>A single byte.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a37dac6faca2672a657ab4c030db6b8113bd8283" translate="yes" xml:space="preserve">
          <source>A single control process (the parent) is responsible for launching child processes. Each child process creates a fixed number of server threads as specified in the &lt;code&gt;&lt;a href=&quot;mpm_common#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt; directive, as well as a listener thread which listens for connections and passes them to a server thread for processing when they arrive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b791c1b61b0610ba5b652a2f9e000193f9e79cb" translate="yes" xml:space="preserve">
          <source>A single control process is responsible for launching child processes which listen for connections and serve them when they arrive. Apache httpd always tries to maintain several</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1c7113beea3f75380a1f459f615abbac86973f" translate="yes" xml:space="preserve">
          <source>A single or comma-separated list of HTTP status codes. If set, this will force the worker into error state when the backend returns any status code in the list. Worker recovery behaves the same as other worker errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2412867ec71fc5a16a93317bd6fdc24b70ff76" translate="yes" xml:space="preserve">
          <source>A size of 0 will effectively disable the push diary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3aaec98b34036db838512f4644cbf4a9fd61c0e" translate="yes" xml:space="preserve">
          <source>A small but finite amount of time exists between the time the cached entity becomes stale, and the time the stale entity is fully refreshed. On a busy server, a significant number of requests might arrive during this time, and cause a &lt;strong&gt;thundering herd&lt;/strong&gt; of requests to strike the backend suddenly and unpredictably.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80deecde5608054d93cc07a040305d2803c9495f" translate="yes" xml:space="preserve">
          <source>A special case are HTTP headers which are passed to CGI scripts and the like via environment variables (see below). They are converted to uppercase and only dashes are replaced with underscores; if the header contains any other (invalid) character, the whole header is silently dropped. See &lt;a href=&quot;#fixheader&quot;&gt; below&lt;/a&gt; for a workaround.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde31eaee7e0958d59b600fbdde8e0b6e558ae39" translate="yes" xml:space="preserve">
          <source>A summary such as this is called a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d73e58ec8910918bc76ce07843437e98e13797" translate="yes" xml:space="preserve">
          <source>A total number of accesses and byte count served (*)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9026ce58d94258dfb59964a4ff006f835c59ddc3" translate="yes" xml:space="preserve">
          <source>A type map (a file with the handler &lt;code&gt;type-map&lt;/code&gt;) which explicitly lists the files containing the variants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5973d5ab774e0ecb60d62027dda0f380037bc8b" translate="yes" xml:space="preserve">
          <source>A type map has a format similar to RFC822 mail headers. It contains document descriptions separated by blank lines, with lines beginning with a hash character ('#') treated as comments. A document description consists of several header records; records may be continued on multiple lines if the continuation lines start with spaces. The leading space will be deleted and the lines concatenated. A header record consists of a keyword name, which always ends in a colon, followed by a value. Whitespace is allowed between the header name and value, and between the tokens of value. The headers allowed are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7509d39558597859c5bde667d571d0d220bdacc9" translate="yes" xml:space="preserve">
          <source>A type map is a document which is associated with the handler named &lt;code&gt;type-map&lt;/code&gt; (or, for backwards-compatibility with older httpd configurations, the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#mime-type&quot;&gt;MIME-type&lt;/a&gt;&lt;code&gt;application/x-type-map&lt;/code&gt;). Note that to use this feature, you must have a handler set in the configuration that defines a file suffix as &lt;code&gt;type-map&lt;/code&gt;; this is best done with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df920532c5931f8e3c77c44f5a7f3e1f98f4180e" translate="yes" xml:space="preserve">
          <source>A typical configuration for the access log might look as follows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aacba2a29b029024c728136a8152a46b16472b68" translate="yes" xml:space="preserve">
          <source>A typical configuration of the process-thread controls in the &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt; MPM could look as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d22bb80bdbe1cb467ae6be8951fa144bee8c8e6a" translate="yes" xml:space="preserve">
          <source>A typical example might be an application that changes a user's password set by &lt;code&gt;&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt;&lt;/code&gt;. This application would need to read the current username and password from the session, make the required changes to the user's password, and then write the new password to the session in order to provide a seamless transition to the new password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1534231c0df0d95d5fd38718c690714ad7c757b2" translate="yes" xml:space="preserve">
          <source>A typical file has a MIME-type extension (&lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;html&lt;/code&gt;), maybe an encoding extension (&lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;gz&lt;/code&gt;), and of course a language extension (&lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;en&lt;/code&gt;) when we have different language variants of this file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5f6c017d11e9babd0e2668496e81daa6f7b481" translate="yes" xml:space="preserve">
          <source>A typical implementation is below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c48394147237e1716c88d0a6e39f82fb7ee562" translate="yes" xml:space="preserve">
          <source>A typical usage of a forward proxy is to provide Internet access to internal clients that are otherwise restricted by a firewall. The forward proxy can also use caching (as provided by &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt;) to reduce network usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16db2318ec13393dd564422f1aba45e956d7c087" translate="yes" xml:space="preserve">
          <source>A typical usage of a reverse proxy is to provide Internet users access to a server that is behind a firewall. Reverse proxies can also be used to balance load among several back-end servers or to provide caching for a slower back-end server. In addition, reverse proxies can be used simply to bring several servers into the same URL space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e479c398813f547b79b14ad9085fc807216caf" translate="yes" xml:space="preserve">
          <source>A url-string of '/' applied to forward proxy content in 2.2 and earlier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df25e3a4c26a7caf8c0254c5c23b750e374eda7" translate="yes" xml:space="preserve">
          <source>A username</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1505657916a3634320e6401b508493c1a2474f" translate="yes" xml:space="preserve">
          <source>A valid LDAP search filter. If not provided, defaults to &lt;code&gt;(objectClass=*)&lt;/code&gt;, which will search for all objects in the tree. Filters are limited to approximately 8000 characters (the definition of &lt;code&gt;MAX_STRING_LEN&lt;/code&gt; in the Apache source code). This should be more than sufficient for any application. In 2.4.10 and later, the keyword &lt;code&gt;none&lt;/code&gt; disables the use of a filter; this is required by some primitive LDAP servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d889bb844bd86eaf64d3b73ee7a3868750363c36" translate="yes" xml:space="preserve">
          <source>A valid text rewrite map file will have the following syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e8acee9cd1e9d164f4b85d937d096ce6a1866a" translate="yes" xml:space="preserve">
          <source>A value of 0 indicates that the cookie will persist only for the current browser session. This is the default value if none is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efc187f8d3933517852729ab4d68a6df2971e5a" translate="yes" xml:space="preserve">
          <source>A variable-sized string (length bounded by 2^16). Encoded with the length packed into two bytes first, followed by the string (including the terminating '\0'). Note that the encoded length does &lt;strong&gt;not&lt;/strong&gt; include the trailing '\0' -- it is like &lt;code&gt;strlen&lt;/code&gt;. This is a touch confusing on the Java side, which is littered with odd autoincrement statements to skip over these terminators. I believe the reason this was done was to allow the C code to be extra efficient when reading strings which the servlet container is sending back -- with the terminating \0 character, the C code can pass around references into a single buffer, without copying. if the \0 was missing, the C code would have to copy things out in order to get its notion of a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdae9567e1150f7e12e113a03cc44d7201350f6c" translate="yes" xml:space="preserve">
          <source>A variant of the &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt; MPM with the goal of consuming threads only for connections with active processing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48539ea17c1fd7982fc4bc1cef9a66b917c00cc1" translate="yes" xml:space="preserve">
          <source>A very common request by users is the ability to point multiple domains to multiple document roots without having to worry about the length or number of parts of the hostname being requested. If the requested hostname is &lt;code&gt;sub.www.domain.example.com&lt;/code&gt; instead of simply &lt;code&gt;www.domain.example.com&lt;/code&gt;, then using %3+ will result in the document root being &lt;code&gt;/usr/local/apache/vhosts/domain.example.com/...&lt;/code&gt; instead of the intended &lt;code&gt;example.com&lt;/code&gt; directory. In such cases, it can be beneficial to use the combination &lt;code&gt;%-2.0.%-1.0&lt;/code&gt;, which will always yield the domain name and the tld, for example &lt;code&gt;example.com&lt;/code&gt; regardless of the number of subdomains appended to the hostname. As such, one can make a configuration that will direct all first, second or third level subdomains to the same directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2889fa3fca7112daa6737ef34bd8b2efa6d8a375" translate="yes" xml:space="preserve">
          <source>A very wide variety of different messages can appear in the error log. Most look similar to the example above. The error log will also contain debugging output from CGI scripts. Any information written to &lt;code&gt;stderr&lt;/code&gt; by a CGI script will be copied directly to the error log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f603e2f3b5dfe211bf786a45210454f8ed330757" translate="yes" xml:space="preserve">
          <source>A virtual host is defined by two pieces of information: its IP address, and the contents of the &lt;code&gt;Host:&lt;/code&gt; header in the HTTP request. The dynamic mass virtual hosting technique used here is based on automatically inserting this information into the pathname of the file that is used to satisfy the request. This can be most easily done by using &lt;code&gt;&lt;a href=&quot;../mod/mod_vhost_alias&quot;&gt;mod_vhost_alias&lt;/a&gt;&lt;/code&gt; with Apache httpd. Alternatively, &lt;a href=&quot;../rewrite/vhosts&quot;&gt;mod_rewrite can be used&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ba76a00292b7f19be0fde981a41d172ba1d462" translate="yes" xml:space="preserve">
          <source>A web-path to a resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f88b729d5a8fd4d13bca54e0a8cd5ba7192c62f" translate="yes" xml:space="preserve">
          <source>A wider range of applications are implemented by third-party filter modules available from &lt;a href=&quot;http://modules.apache.org/&quot;&gt;modules.apache.org&lt;/a&gt; and elsewhere. A few of these are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f08cc0b30779a95143aa2ad65f0531b4ad12960" translate="yes" xml:space="preserve">
          <source>ACL</source>
          <target state="translated">ACL</target>
        </trans-unit>
        <trans-unit id="f120f399eda8c1fe747bf2eb7efea4716f1ba650" translate="yes" xml:space="preserve">
          <source>AES encryption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de6787d4361608cfbe35f6f9e761b8bab668777" translate="yes" xml:space="preserve">
          <source>AES with SHA1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860395479de30620951d51102a64754e752db7f1" translate="yes" xml:space="preserve">
          <source>AES, DES, Triple-DES, RC4, RC2, IDEA, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f349e49772ea519084d2c6d6c1c3e27e11fe4547" translate="yes" xml:space="preserve">
          <source>AJP support module for &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090418c486f06d6e4e9643432607998f9eb44f57" translate="yes" xml:space="preserve">
          <source>AJP13 (Apache JServe Protocol version 1.3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8716b74463172a815a561695840c426c88c54648" translate="yes" xml:space="preserve">
          <source>AJP13 uses network byte order for all data types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44a5b540961bd6de749f9a13dd09c4aaf054f65" translate="yes" xml:space="preserve">
          <source>AJP13, using &lt;code&gt;&lt;a href=&quot;mod_proxy_ajp&quot;&gt;mod_proxy_ajp&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0427d854efcb691e222d49eb6da8894c1ea383f8" translate="yes" xml:space="preserve">
          <source>ANSI-C Compiler and Build System</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b5832417ebef4815fe30e2628d2217caeb19d7" translate="yes" xml:space="preserve">
          <source>API Phases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6bcaafc335a83588681b832f035f6f53db4ee7c" translate="yes" xml:space="preserve">
          <source>API_VERSION</source>
          <target state="translated">API_VERSION</target>
        </trans-unit>
        <trans-unit id="ec288569a046fe681d885398e3541acbf0c68f14" translate="yes" xml:space="preserve">
          <source>APR and APR-Util</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b9a9df0765d11e3f7b404bed8ebcb5b8755485" translate="yes" xml:space="preserve">
          <source>APR/OS error status code and string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1c9671d6b9251f9d87af0e7620859e46a4e7ac" translate="yes" xml:space="preserve">
          <source>AP_AUTH_INTERNAL_PER_URI</source>
          <target state="translated">AP_AUTH_INTERNAL_PER_URI</target>
        </trans-unit>
        <trans-unit id="042567d7c1acc9a12b2e8fe5c00e1cadc99416a1" translate="yes" xml:space="preserve">
          <source>APache eXtenSion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969623363dab34745fcdbff196bbd339d64edc12" translate="yes" xml:space="preserve">
          <source>APache eXtenSion tool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e8dbfc8bf8d2465d4547c75b32b371c22a07f3e" translate="yes" xml:space="preserve">
          <source>AUTH_TYPE</source>
          <target state="translated">AUTH_TYPE</target>
        </trans-unit>
        <trans-unit id="9436642a2d180ca0524473af47bfd96eeab6b44e" translate="yes" xml:space="preserve">
          <source>AWK utility (awk, gawk or similar). AWK can be downloaded from &lt;a href=&quot;http://developer.novell.com/ndk/apache.htm&quot;&gt;http://developer.novell.com/ndk/apache.htm&lt;/a&gt;. The utility must be found in your windows path and must be named &lt;code&gt;awk.exe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3829a24f82b74f75eccd24802e8cd658c1ccef19" translate="yes" xml:space="preserve">
          <source>Abbrev.</source>
          <target state="translated">Abbrev.</target>
        </trans-unit>
        <trans-unit id="79423736133b8ab0a01faa36d06767c3b80d5963" translate="yes" xml:space="preserve">
          <source>Abort configuration parsing with a custom error message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8340679d7c92abf1002eefe7e4175a660b1d632" translate="yes" xml:space="preserve">
          <source>Abort the request and end up with a 502 (Bad Gateway) response. This is the default behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c54ba56a708767c80ab76c8f9ecbfc3fa15c15" translate="yes" xml:space="preserve">
          <source>About Content Negotiation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6aee044a80142ac516dc207ab2595cba56635b6" translate="yes" xml:space="preserve">
          <source>Absolute URI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0387b78a1cc0826f358f8886b06577acd46db151" translate="yes" xml:space="preserve">
          <source>Absolute URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a5b8f519276ebeb4a79cb24872d9fa48c46798" translate="yes" xml:space="preserve">
          <source>Absolute paths are not currently supported and do not match anything at runtime. Arguments with relative path information, which would normally only be used in htaccess context, are implicitly prefixed with '*/' to avoid matching partial directory names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371bdf15c434b58a7bb9d09eb0c221beb47d6cee" translate="yes" xml:space="preserve">
          <source>AcceptFilter Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d978ff333cb9aa50a1e6cda79001cc994abfc611" translate="yes" xml:space="preserve">
          <source>AcceptPathInfo</source>
          <target state="translated">AcceptPathInfo</target>
        </trans-unit>
        <trans-unit id="017b8e3d607adf9d37ccbd5c055d35dbcea986ae" translate="yes" xml:space="preserve">
          <source>AcceptPathInfo Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cee105dc9286540eb8273e1a66712fc79c398e3" translate="yes" xml:space="preserve">
          <source>Access Control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b79c6c942dee1f8d793aedc478064a9ba6d554c" translate="yes" xml:space="preserve">
          <source>Access Control backwards compatibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1323a897e15cc8ea006e77f1d06a0fe0ab817c88" translate="yes" xml:space="preserve">
          <source>Access Control howto</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43582fb66323fd2e985b65b764e54ad51e471b1e" translate="yes" xml:space="preserve">
          <source>Access Log</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e3bbc9103b04d543a6204da8e18664e43f77be" translate="yes" xml:space="preserve">
          <source>Access control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8efab3e8abe461ffa9e93841f5f0061048e7caad" translate="yes" xml:space="preserve">
          <source>Access control by &lt;code&gt;User-Agent&lt;/code&gt; is an unreliable technique, since the &lt;code&gt;User-Agent&lt;/code&gt; header can be set to anything at all, at the whim of the end user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="325c07e77080ca1508d9921fdb105341bdac355b" translate="yes" xml:space="preserve">
          <source>Access control by arbitrary variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e037fbd2c3696de02bc0a62e427137742806d274" translate="yes" xml:space="preserve">
          <source>Access control by host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4cba22ff6606d130ee157ef368267533f6265ec" translate="yes" xml:space="preserve">
          <source>Access control can be done by several different modules. The most important of these are &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_core&quot;&gt;mod_authz_core&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt;. Also discussed in this document is access control using &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1600af7addb2e0d130e905913694e7b59e0d44" translate="yes" xml:space="preserve">
          <source>Access control refers to any means of controlling access to any resource. This is separate from &lt;a href=&quot;auth&quot;&gt;authentication and authorization&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861f1e547a8167f9c789f2191633b63db65fa351" translate="yes" xml:space="preserve">
          <source>Access control with mod_rewrite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0105238295ef77dfdf37b6c69f2bf78590b5b78" translate="yes" xml:space="preserve">
          <source>Access controls are normally effective for &lt;strong&gt;all&lt;/strong&gt; access methods, and this is the usual desired behavior. &lt;strong&gt;In the general case, access control directives should not be placed within a &lt;code&gt;&amp;lt;Limit&amp;gt;&lt;/code&gt; section.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5df23dc1cc0c99e6208db5d14261298ad6ee7ed" translate="yes" xml:space="preserve">
          <source>Access controls which are applied in this way are effective for &lt;strong&gt;all&lt;/strong&gt; methods. &lt;strong&gt;This is what is normally desired.&lt;/strong&gt; If you wish to apply access controls only to specific methods, while leaving other methods unprotected, then place the &lt;code&gt;Require&lt;/code&gt; statement into a &lt;code&gt;&lt;a href=&quot;core#limit&quot;&gt;&amp;lt;Limit&amp;gt;&lt;/a&gt;&lt;/code&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44062058514b7d683efcae5294ec85986ee876c2" translate="yes" xml:space="preserve">
          <source>Access is allowed if &lt;var&gt;expression&lt;/var&gt; evaluates to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4182d967e7289e7529bea285a857fa1985e73a6d" translate="yes" xml:space="preserve">
          <source>Access is allowed only for the given HTTP methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f33bf929ec1486828ed63b9995f2670710772e9" translate="yes" xml:space="preserve">
          <source>Access is allowed only if one of the given environment variables is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6169c77df608d6af86a9fd81f3a5c9da2b1e26a" translate="yes" xml:space="preserve">
          <source>Access is allowed unconditionally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e4244a0f866a58e4a74bbf33b63ccdb720927b" translate="yes" xml:space="preserve">
          <source>Access is denied unconditionally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c310e6bb8188fddf5b45877a56eddbe010c208" translate="yes" xml:space="preserve">
          <source>Access policy if both &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; used. The parameter can be either &lt;code&gt;All&lt;/code&gt; or &lt;code&gt;Any&lt;/code&gt;. This directive is only useful if access to a particular area is being restricted by both username/password &lt;em&gt;and&lt;/em&gt; client host address. In this case the default behavior (&lt;code&gt;All&lt;/code&gt;) is to require that the client passes the address access restriction &lt;em&gt;and&lt;/em&gt; enters a valid username and password. With the &lt;code&gt;Any&lt;/code&gt; option the client will be granted access if they either pass the host restriction or enter a valid username and password. This can be used to password restrict an area, but to let clients from particular addresses in without prompting for a password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e19113f4271d76f925234a2405344abce5ba47" translate="yes" xml:space="preserve">
          <source>Access to files over the network can be specified using two mechanisms provided by Windows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad48ac9c7d43d1a637fc53ff77c98807ec3007fa" translate="yes" xml:space="preserve">
          <source>Access to the server can be controlled based on the value of environment variables using the &lt;code&gt;allow from env=&lt;/code&gt; and &lt;code&gt;deny from env=&lt;/code&gt; directives. In combination with &lt;code&gt;&lt;a href=&quot;mod/mod_setenvif#setenvif&quot;&gt;SetEnvIf&lt;/a&gt;&lt;/code&gt;, this allows for flexible control of access to the server based on characteristics of the client. For example, you can use these directives to deny access to a particular browser (User-Agent).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b5112823ca6e16235973a2a7280898a064b296e" translate="yes" xml:space="preserve">
          <source>Access via Handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627a003451089cdb56b1ae3a43e6ca17922cd587" translate="yes" xml:space="preserve">
          <source>AccessFileName Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2037647faa937949ef52403b234c435aedc8f5" translate="yes" xml:space="preserve">
          <source>According to RFC 2616, hop-by-hop HTTP headers are not stored in the cache. The following HTTP headers are hop-by-hop headers and thus do not get stored in the cache in &lt;em&gt;any&lt;/em&gt; case regardless of the setting of &lt;code&gt;CacheIgnoreHeaders&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b97be0623cda1d51009a7072e756ef01933412" translate="yes" xml:space="preserve">
          <source>According to much of the code, the max packet size is &lt;code&gt;8 * 1024 bytes (8K)&lt;/code&gt;. The actual length of the packet is encoded in the header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ba087334819e04600fcf0b5b54c0e8a8d41448" translate="yes" xml:space="preserve">
          <source>Accurate Logging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127a1265de40e3f83fabf0a468db5b96473a42af" translate="yes" xml:space="preserve">
          <source>Accurate time keeping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c89a4d6630adeb18fa12ba9976a31413fe293e" translate="yes" xml:space="preserve">
          <source>Action</source>
          <target state="translated">Action</target>
        </trans-unit>
        <trans-unit id="7e6689d3689a75fad77c630f6f2b3472e1cab60d" translate="yes" xml:space="preserve">
          <source>Action Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f50c1666d2f0e59b1e59adaa7ee9b620c50007" translate="yes" xml:space="preserve">
          <source>Action if no coordinates are given when calling an imagemap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b9b90d5a94af7611aaa2ce6ca6c4c80f29c76f" translate="yes" xml:space="preserve">
          <source>Action must be taken immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd7d73fdee428ad7840de52cc39632a131416ec" translate="yes" xml:space="preserve">
          <source>Action to take if a single acceptable document is not found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9240abefca608d9427abbd5dddbf5c838963ed00" translate="yes" xml:space="preserve">
          <source>Activates CERN meta-file processing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57e0bcb4396daab43248b38dee05813ba72d18d" translate="yes" xml:space="preserve">
          <source>Activates a CGI script for a particular handler or content-type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f485d2c4ab1e7c2b92cb5b65ec71298d2cdfa2f1" translate="yes" xml:space="preserve">
          <source>Activates a CGI script for a particular request method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5d0e34c63ace2866a746e45b95a543964b642a" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;APACHE_MODPATH_FINISH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc3180a80fa9be6b51aeb212eda41ee878927c2" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;APACHE_MODPATH_INIT(new_module)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c7519f4ec8b451750127dcd9eb7f980fc488eb" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;SSLUseStapling Off&lt;/code&gt; to the virtual hosts for which OCSP Stapling should be disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8dcc65659e50eed3980eec171ed2534537e6dfd" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;SYS:/APACHE2&lt;/code&gt; to the search path, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122524248d9b3e7fffa24d53370bd4f4a59ba6de" translate="yes" xml:space="preserve">
          <source>Add &lt;var&gt;filter-name&lt;/var&gt; to the end of the filter chain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705ebeed4fb4fe8685b4563bb55ddcb8971dca26" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;Cookie:&lt;/code&gt; line to the request. The argument is typically in the form of a &lt;code&gt;name=value&lt;/code&gt; pair. This field is repeatable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4baea8ab1e14d8c9cfa1a32df70d4e1144293246" translate="yes" xml:space="preserve">
          <source>Add a directory to lua's package.cpath</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4178ca1fa975136b735ee01ccb61e240738d2d8d" translate="yes" xml:space="preserve">
          <source>Add a directory to lua's package.path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775494a1cb5297e937ca392871cadc803acd2d7e" translate="yes" xml:space="preserve">
          <source>Add a header, &lt;code&gt;MyHeader&lt;/code&gt;, to the response including a timestamp for when the request was received and how long it took to begin serving the request. This header can be used by the client to intuit load on the server or in isolating bottlenecks between the client and the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd783d18e1fa6f32f95cc90a54e37567163e45c" translate="yes" xml:space="preserve">
          <source>Add a hook (at APR_HOOK_MIDDLE) to the translate name phase of request processing. The hook function receives a single argument, the request_rec, and should return a status code, which is either an HTTP error code, or the constants defined in the apache2 module: apache2.OK, apache2.DECLINED, or apache2.DONE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5810bc40347efce82dded07b5265dca55d7705" translate="yes" xml:space="preserve">
          <source>Add a member to a load balancing group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3483eb11b82d23e7e568a237e1f1a80466645af" translate="yes" xml:space="preserve">
          <source>Add a path to lua's module search path. Follows the same conventions as lua. This just munges the package.path in the lua vms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2983808f1f7a18a2fbf417d369dfe1d90f026d2" translate="yes" xml:space="preserve">
          <source>Add a path to lua's shared library search path. Follows the same conventions as lua. This just munges the package.cpath in the lua vms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a68f69abf503d2e482c7257b52bf2a9000855e89" translate="yes" xml:space="preserve">
          <source>Add an X-Cache header to the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66657b9c3c365114eb33d40a42abf94e579623f5" translate="yes" xml:space="preserve">
          <source>Add an X-Cache-Detail header to the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8b323d58c72215e906c8c9bfd86fd819017cc8" translate="yes" xml:space="preserve">
          <source>Add one or more third-party modules to the list of statically linked modules. The module source file &lt;code&gt;module-file&lt;/code&gt; will be searched in the &lt;code&gt;modules/module-type&lt;/code&gt; subdirectory of your Apache HTTP server source tree. If it is not found there &lt;code&gt;configure&lt;/code&gt; is considering &lt;var&gt;module-file&lt;/var&gt; to be an absolute file path and tries to copy the source file into the &lt;var&gt;module-type&lt;/var&gt; subdirectory. If the subdirectory doesn't exist it will be created and populated with a standard &lt;code&gt;Makefile.in&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520cfb8ebe858086a16a99cd1ed7ecde9feebc18" translate="yes" xml:space="preserve">
          <source>Add or modify &lt;code&gt;username2&lt;/code&gt; in the password file &lt;code&gt;Filename&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff86d32127770fe71ec22d35b521ac5568a5afe" translate="yes" xml:space="preserve">
          <source>Add proxy information in X-Forwarded-* headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7387813ee6a515829b935782c5d15e74b2ca001" translate="yes" xml:space="preserve">
          <source>Add the custom parameters including the &quot;BEGIN DH PARAMETERS&quot; and &quot;END DH PARAMETERS&quot; lines to the end of the first certificate file you have configured using the &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslcertificatefile&quot;&gt;SSLCertificateFile&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a452a84fa2eff9ef1a0f1aca4af74ea80108c1cc" translate="yes" xml:space="preserve">
          <source>Add your hook to the access_checker phase. An access checker hook function usually returns OK, DECLINED, or HTTP_FORBIDDEN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9393be668624019c6f5797959679cd97d7aa8b57" translate="yes" xml:space="preserve">
          <source>AddAlt</source>
          <target state="translated">AddAlt</target>
        </trans-unit>
        <trans-unit id="97619fedf42f928e1e51105447b97bf625d06716" translate="yes" xml:space="preserve">
          <source>AddAlt Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99d781f9fdf2447ff46316e50daf2b6a9d0b876" translate="yes" xml:space="preserve">
          <source>AddAltByEncoding</source>
          <target state="translated">AddAltByEncoding</target>
        </trans-unit>
        <trans-unit id="d370052985a1826a6dcc39dab6422c25a5daecb6" translate="yes" xml:space="preserve">
          <source>AddAltByEncoding Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b6629aff94266a3ce56cdd72eb40d7348f833b" translate="yes" xml:space="preserve">
          <source>AddAltByType</source>
          <target state="translated">AddAltByType</target>
        </trans-unit>
        <trans-unit id="ca8ffbf8d08c0cb4e33ed14b859626923c50cecf" translate="yes" xml:space="preserve">
          <source>AddAltByType Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209101bdcd4cc790657c97056c0ce11122acfa4a" translate="yes" xml:space="preserve">
          <source>AddAltClass</source>
          <target state="translated">AddAltClass</target>
        </trans-unit>
        <trans-unit id="2c620e2e12b84ed458470acf6814d1bd2c939ae8" translate="yes" xml:space="preserve">
          <source>AddCharset</source>
          <target state="translated">AddCharset</target>
        </trans-unit>
        <trans-unit id="a7388fec60063480aa14a742610959260559ce51" translate="yes" xml:space="preserve">
          <source>AddCharset Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b28f355ec1cbb8192de33546b738a85fdd01001" translate="yes" xml:space="preserve">
          <source>AddDefaultCharset</source>
          <target state="translated">AddDefaultCharset</target>
        </trans-unit>
        <trans-unit id="087f7ef0359fb57db667e7ad4b723b3a7322af9e" translate="yes" xml:space="preserve">
          <source>AddDefaultCharset Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e95acda9e660d3a7adcb6de9c682d69234f15f3" translate="yes" xml:space="preserve">
          <source>AddDescription</source>
          <target state="translated">AddDescription</target>
        </trans-unit>
        <trans-unit id="86dfd73cf2ad45203e74655f80ff5a7fc4343018" translate="yes" xml:space="preserve">
          <source>AddDescription Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba00cd54cf8fb7fc4dc8f1630530aa8ced3d8a5" translate="yes" xml:space="preserve">
          <source>AddEncoding</source>
          <target state="translated">AddEncoding</target>
        </trans-unit>
        <trans-unit id="875aef0c4b45b489223c0eac113143be4c0b6032" translate="yes" xml:space="preserve">
          <source>AddEncoding Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d7f4b37d9ac59a457c9b488e51c1b0bcc4e4d74" translate="yes" xml:space="preserve">
          <source>AddHandler</source>
          <target state="translated">AddHandler</target>
        </trans-unit>
        <trans-unit id="c62b237f373a48c9a650a07d3daa1fea1c24e6a5" translate="yes" xml:space="preserve">
          <source>AddHandler Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2d060d4aa0cc164179d19b3fed1b19aff565c9" translate="yes" xml:space="preserve">
          <source>AddIcon</source>
          <target state="translated">AddIcon</target>
        </trans-unit>
        <trans-unit id="44d9c5936135877cf967ed8e4784a00b9199f36d" translate="yes" xml:space="preserve">
          <source>AddIcon Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d75799c1e67d4028c064a82d841a4f5bb4c5c575" translate="yes" xml:space="preserve">
          <source>AddIconByEncoding</source>
          <target state="translated">AddIconByEncoding</target>
        </trans-unit>
        <trans-unit id="fd4ae2414fbe04fe350f85fa6921b7c122097ec9" translate="yes" xml:space="preserve">
          <source>AddIconByEncoding Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3fa1a20aea0350d97ec05662ea521021d048bba" translate="yes" xml:space="preserve">
          <source>AddIconByType</source>
          <target state="translated">AddIconByType</target>
        </trans-unit>
        <trans-unit id="5d76d0bd204bab640c37d8ecf9c1c62668e4a637" translate="yes" xml:space="preserve">
          <source>AddIconByType Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668f33ed64795a4d0cf44b1b066ea57652bb981e" translate="yes" xml:space="preserve">
          <source>AddInputFilter</source>
          <target state="translated">AddInputFilter</target>
        </trans-unit>
        <trans-unit id="db4a36cfe73342641fc9c82fad494c0f8967387f" translate="yes" xml:space="preserve">
          <source>AddInputFilter Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b40eeada4eff7b8beb0a042d88f768c042cdcf" translate="yes" xml:space="preserve">
          <source>AddLanguage</source>
          <target state="translated">AddLanguage</target>
        </trans-unit>
        <trans-unit id="779270ab4f68727ff256747152dbaee1a0674459" translate="yes" xml:space="preserve">
          <source>AddLanguage Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25196b2771266b91fe5a48cf678e0cf88cdd2481" translate="yes" xml:space="preserve">
          <source>AddModuleInfo Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644d84e295b6edaa05ed45a7b32a8ef969b8c5b0" translate="yes" xml:space="preserve">
          <source>AddOutputFilter</source>
          <target state="translated">AddOutputFilter</target>
        </trans-unit>
        <trans-unit id="0d535fa4a7c13a3439b6958e5660628d5778317b" translate="yes" xml:space="preserve">
          <source>AddOutputFilter Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d50a59722b20e9aaa0bdb978aeeaa5a7ce4000" translate="yes" xml:space="preserve">
          <source>AddOutputFilterByType</source>
          <target state="translated">AddOutputFilterByType</target>
        </trans-unit>
        <trans-unit id="959247347d316c366750823ea02b622815bdccf8" translate="yes" xml:space="preserve">
          <source>AddOutputFilterByType Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a821f235e21641f5441e88e61d3397016d787bd" translate="yes" xml:space="preserve">
          <source>AddSuffix</source>
          <target state="translated">AddSuffix</target>
        </trans-unit>
        <trans-unit id="f0dbcaf73769ae1d2a089adb0d2e7ea1fe85ca62" translate="yes" xml:space="preserve">
          <source>AddType</source>
          <target state="translated">AddType</target>
        </trans-unit>
        <trans-unit id="67ebf822cefc0f90b2eba226ff6a776146054a0a" translate="yes" xml:space="preserve">
          <source>AddType Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da458aa15499a579f3f8aaa7b83b4738dff37f3" translate="yes" xml:space="preserve">
          <source>Adding an input filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b785ff25bc3b9d349e112891712f4225ef9e3f6" translate="yes" xml:space="preserve">
          <source>Adding an output filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2346042d32ef3551b64016d8ff416e11df712c" translate="yes" xml:space="preserve">
          <source>Adding virtual hosts is simply a matter of creating the appropriate directories in the filesystem and entries in the DNS - you don't need to reconfigure or restart Apache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d48a4257256fd4edb826846d6ad4d8eec00a7e" translate="yes" xml:space="preserve">
          <source>Additional &lt;code&gt;memcached&lt;/code&gt; servers can be specified by appending them to the end of the &lt;code&gt;CacheSocache memcache:&lt;/code&gt; line separated by commas:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecfe29ef8fcfc7c6552fb9793fd0884a7b9c0a8b" translate="yes" xml:space="preserve">
          <source>Additional Information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cdf8f979acdec9ba190d22b6004f55acb6e429d" translate="yes" xml:space="preserve">
          <source>Additional NetWare specific directives:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6886107051f6296b301c835737605aa7c616a6a" translate="yes" xml:space="preserve">
          <source>Additional Notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5355e4327f213c14ba731bc3f05650f65e04569e" translate="yes" xml:space="preserve">
          <source>Additional URI to be appended to the worker URL for the health check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ffb34d3e8039cef63b29a14a01239131013677" translate="yes" xml:space="preserve">
          <source>Additional configurable debug logging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485fc0956ddbd4389044679e1d04f2dbc387cb96" translate="yes" xml:space="preserve">
          <source>Additional environment variable options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea5ef09a89f93581e248dcc20539555e85c3a48" translate="yes" xml:space="preserve">
          <source>Additional examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219ef57240c3407a75d176dec39e4b747e5ef6cf" translate="yes" xml:space="preserve">
          <source>Additional examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="458d4af82d14d1eec8227237c7cc418e6dccdcc9" translate="yes" xml:space="preserve">
          <source>Additional hostname for the managed domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f9cdc652d0d6da2f770e7782a02104d354df5f" translate="yes" xml:space="preserve">
          <source>Additional information about the command-line options of &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;programs/apachectl&quot;&gt;apachectl&lt;/a&gt;&lt;/code&gt; as well as other support programs included with the server is available on the &lt;a href=&quot;programs/index&quot;&gt;Server and Supporting Programs&lt;/a&gt; page. There is also documentation on all the &lt;a href=&quot;mod/index&quot;&gt;modules&lt;/a&gt; included with the Apache distribution and the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/mod/directives.html&quot;&gt;directives&lt;/a&gt; that they provide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da73e1d40ccc7827747fd76622f21653555b449" translate="yes" xml:space="preserve">
          <source>Additional make options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0619169ac3a4813f4bcf273ef1cf73e3b3a7910" translate="yes" xml:space="preserve">
          <source>Additional modules are enabled using the &lt;code&gt;--enable-module&lt;/code&gt; option, where &lt;var&gt;module&lt;/var&gt; is the name of the module with the &lt;code&gt;mod_&lt;/code&gt; string removed and with any underscore converted to a dash. Similarly, you can disable modules with the &lt;code&gt;--disable-module&lt;/code&gt; option. Be careful when using these options, since &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; cannot warn you if the module you specify does not exist; it will simply ignore the option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f806b5606aa7ec9dd1c936466459585488c0a5a" translate="yes" xml:space="preserve">
          <source>Additional modules are provided for each implementation, offering the following backends:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04631f096375a5fd8c1b96c0b9a67f5978a03598" translate="yes" xml:space="preserve">
          <source>Additional modules can provide their own ErrorLog providers. The syntax is similar to the &lt;code&gt;syslog&lt;/code&gt; example above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96e2e336ff8fb5c3ee6a9ea2291f58eb1e61711" translate="yes" xml:space="preserve">
          <source>Additionally you can set special &lt;a id=&quot;rewriteflags&quot; name=&quot;rewriteflags&quot;&gt;actions&lt;/a&gt; to be performed by appending &lt;strong&gt;&lt;code&gt;[&lt;/code&gt;&lt;em&gt;flags&lt;/em&gt;&lt;code&gt;]&lt;/code&gt;&lt;/strong&gt; as the third argument to the &lt;code&gt;RewriteRule&lt;/code&gt; directive. &lt;em&gt;Flags&lt;/em&gt; is a comma-separated list, surround by square brackets, of any of the flags in the following table. More details, and examples, for each flag, are available in the &lt;a href=&quot;../rewrite/flags&quot;&gt;Rewrite Flags document&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47833e0339ab4a30b1e7e86c7b434aa06789f643" translate="yes" xml:space="preserve">
          <source>Additionally you can use the special keyword &lt;code&gt;all&lt;/code&gt;, which will select all MPMs which support dynamic loading on the current platform and build them as DSO modules. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58543d32eac5c897aee97abbd82ca7cd901ebd68" translate="yes" xml:space="preserve">
          <source>Additionally you can use the special keywords &lt;code&gt;reallyall&lt;/code&gt;, &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;most&lt;/code&gt; and &lt;code&gt;few&lt;/code&gt;. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de24fe2adbc409342d187fcc06acc0431cad8144" translate="yes" xml:space="preserve">
          <source>Additionally, a set of values are provided, so that the error document can be customized further based on the values of these variables, using &lt;a href=&quot;howto/ssi&quot;&gt;Server Side Includes&lt;/a&gt;. Or, you can have error conditions handled by a cgi program, or other dynamic handler (PHP, mod_perl, etc) which makes use of these variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d5b7cc0f702e2cef0426387a72bf662fbf493a" translate="yes" xml:space="preserve">
          <source>Additionally, because the operating system knows when files are deleted or modified, it can automatically remove file contents from the cache when necessary. This is a big advantage over httpd's in-memory caching which has no way of knowing when a file has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a8aa6a67b96a3136bd79079dfd4f5cbc028254" translate="yes" xml:space="preserve">
          <source>Additionally, the special value &lt;code&gt;default&lt;/code&gt; can be used to specify Apache httpd's simple hardcoded message. While not required under normal circumstances, &lt;code&gt;default&lt;/code&gt; will restore Apache httpd's simple hardcoded message for configurations that would otherwise inherit an existing &lt;code&gt;ErrorDocument&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c067e2ab1f3726f0142ce2da1d1ed14b951d7d6" translate="yes" xml:space="preserve">
          <source>Additionally, these documents contain various of the &lt;code&gt;REDIRECT_&lt;/code&gt; variables, so that additional information can be provided to the end-user about what happened, and what they can do now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e07601198e5ae5c718b1b230ded2c1803c0b9e" translate="yes" xml:space="preserve">
          <source>Additionally, this is used when creating self-referential redirection URLs when &lt;code&gt;&lt;a href=&quot;#usecanonicalname&quot;&gt;UseCanonicalName&lt;/a&gt;&lt;/code&gt; is set to a non-default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac5361b07ede9efdd00e626374601fe00dbbf97" translate="yes" xml:space="preserve">
          <source>Additionally, this module implements the server side of HAProxy's &lt;a href=&quot;http://blog.haproxy.com/haproxy/proxy-protocol/&quot;&gt;PROXY Protocol&lt;/a&gt; when using the &lt;code&gt;&lt;a href=&quot;#remoteipproxyprotocol&quot;&gt;RemoteIPProxyProtocol&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914145ab042cb29e2eadf7de4fc53112ff53a6e8" translate="yes" xml:space="preserve">
          <source>Address to bind to when making outgoing connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffb56145c8d8cba256c6a376c5898cab2641258" translate="yes" xml:space="preserve">
          <source>Addresses on the Web are expressed with URLs - Uniform Resource Locators - which specify a protocol (e.g. &lt;code&gt;http&lt;/code&gt;), a servername (e.g. &lt;code&gt;www.apache.org&lt;/code&gt;), a URL-path (e.g. &lt;code&gt;/docs/current/getting-started.html&lt;/code&gt;), and possibly a query string (e.g. &lt;code&gt;?arg=value&lt;/code&gt;) used to pass additional arguments to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9163e87d1e7cad25e573c26a1bc91226dbe413d" translate="yes" xml:space="preserve">
          <source>Adds a CSS stylesheet to the directory index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368f34873c77f02f4f98b3892b5b51442cb4daab" translate="yes" xml:space="preserve">
          <source>Adds additional information to the module information displayed by the server-info handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58ee459d933aa9c6b7287dfe052fbbccacf5a21" translate="yes" xml:space="preserve">
          <source>Adds an additional CSS class declaration to each row of the directory listing table when &lt;code&gt;IndexOptions HTMLTable&lt;/code&gt; is in effect and an &lt;code&gt;IndexStyleSheet&lt;/code&gt; is defined. Rather than the standard &lt;code&gt;even&lt;/code&gt; and &lt;code&gt;odd&lt;/code&gt; classes that would otherwise be applied to each row of the table, a class of &lt;code&gt;even-&lt;em&gt;ALT&lt;/em&gt;&lt;/code&gt; or &lt;code&gt;odd-&lt;em&gt;ALT&lt;/em&gt;&lt;/code&gt; where &lt;em&gt;ALT&lt;/em&gt; is either the standard alt text associated with the file style (eg. &lt;em&gt;snd&lt;/em&gt;, &lt;em&gt;txt&lt;/em&gt;, &lt;em&gt;img&lt;/em&gt;, etc) or the alt text defined by one of the various &lt;code&gt;AddAlt*&lt;/code&gt; directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70c81686cf2a920cb98a4c888ed7eac42946e30" translate="yes" xml:space="preserve">
          <source>Adds an entry for &lt;var&gt;username&lt;/var&gt; to &lt;var&gt;filename&lt;/var&gt; using the encrypted password &lt;var&gt;encpasswd&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40cf4fbeccbfdf7a486386b82a7563bcb7fdf353" translate="yes" xml:space="preserve">
          <source>Adds or modifies the password for user &lt;code&gt;jsmith&lt;/code&gt;. The user is prompted for the password. If executed on a Windows system, the password will be encrypted using the modified Apache MD5 algorithm; otherwise, the system's &lt;code&gt;crypt()&lt;/code&gt; routine will be used. If the file does not exist, &lt;code&gt;htdbm&lt;/code&gt; will do nothing except return an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd9c8470c8591270e231d08a2e0667acd5b35e8" translate="yes" xml:space="preserve">
          <source>Adds or modifies the password for user &lt;code&gt;jsmith&lt;/code&gt;. The user is prompted for the password. The password will be encrypted using the modified Apache MD5 algorithm. If the file does not exist, &lt;code&gt;htpasswd&lt;/code&gt; will do nothing except return an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f018e4f0e38d57786633cfc37cb9750a8316ee36" translate="yes" xml:space="preserve">
          <source>Adds to the list of files to hide when listing a directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7bf8edd33a59d6e1c7ae375442da2d40656616" translate="yes" xml:space="preserve">
          <source>Adjust the size of the proxy response field buffer. The buffer size should be at least the size of the largest expected header size from a proxied response. Setting the value to 0 will use the system default of 8192 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304d11b8a212909d0612f87c34231cd0d8153386" translate="yes" xml:space="preserve">
          <source>Adjusts the Domain string in Set-Cookie headers from a reverse- proxied server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1e8838c88854822d6d7f527b45e3c6a2463899" translate="yes" xml:space="preserve">
          <source>Adjusts the Path string in Set-Cookie headers from a reverse- proxied server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9875b099dab3c2d5a5841dd0a644484fd165cf5f" translate="yes" xml:space="preserve">
          <source>Adjusts the URL in HTTP response headers sent from a reverse proxied server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5707279f1e6aa2070e55d12f88b3a1724c8c01" translate="yes" xml:space="preserve">
          <source>Adjusts the size of the explicit (TCP/IP) network buffer size for proxied connections. This allows you to override the &lt;code&gt;ProxyReceiveBufferSize&lt;/code&gt; for a specific worker. This must be at least 512 or set to 0 for the system default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd41e945e3bcf02c091610aa644aace528eee1f6" translate="yes" xml:space="preserve">
          <source>Adjusts the size of the internal scratchpad IO buffer. This allows you to override the &lt;code&gt;ProxyIOBufferSize&lt;/code&gt; for a specific worker. This must be at least 512 or set to 0 for the system default of 8192.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee50647564bbe48f6a92477a72fb0b8a6af1939" translate="yes" xml:space="preserve">
          <source>Administrative Information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e773da5944ce0366112dceb2dd752eb9f0bc9b3" translate="yes" xml:space="preserve">
          <source>Advanced SSI techniques</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10d54ddd491e4d3aa698ca677fb96fe4c35db05" translate="yes" xml:space="preserve">
          <source>Advanced Techniques with mod_rewrite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131bda0fd599c0b0680601368b233ac79f36d1c5" translate="yes" xml:space="preserve">
          <source>Advanced techniques</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3958f8aa92fa78f24eb53923e37a54bf00be5bac" translate="yes" xml:space="preserve">
          <source>Advantages and Disadvantages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ac4a1d48d8f6807e79832c9bca712d0e773005" translate="yes" xml:space="preserve">
          <source>Advise the parser to skip leading junk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3620b31f131ebd3c13a718a0458f81b00b89d0" translate="yes" xml:space="preserve">
          <source>After a lua function has been registered as authorization provider, it can be used with the &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f22964693607325a50f7329387e441ebd6a1c2" translate="yes" xml:space="preserve">
          <source>After a sufficient number of bytes have been send successfully, the TCP state of the connection is stable and maximum TLS record sizes (16 KB) can be used for optimal performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294aba4c00930b76059a4ad95ff2844de097203e" translate="yes" xml:space="preserve">
          <source>After all components have been built you can execute the command &lt;code&gt;make install&lt;/code&gt; to install them. The binary image &lt;code&gt;suexec&lt;/code&gt; is installed in the directory defined by the &lt;code&gt;--sbindir&lt;/code&gt; option. The default location is &quot;/usr/local/apache2/bin/suexec&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd49850ffe393ea384df24f3f6e3ad06d846fc0" translate="yes" xml:space="preserve">
          <source>After creating this file, specify it in the SSL server configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2f1f0c349d8ba3f17f382e29e26a55cced6d5f" translate="yes" xml:space="preserve">
          <source>After downloading, it is important to verify that you have a complete and unmodified version of the Apache HTTP Server. This can be accomplished by testing the downloaded tarball against the PGP signature. Details on how to do this are available on the &lt;a href=&quot;http://httpd.apache.org/download.cgi#verify&quot;&gt;download page&lt;/a&gt; and an extended example is available describing the &lt;a href=&quot;http://httpd.apache.org/dev/verification.html&quot;&gt;use of PGP&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3067fe875d3e50eeef7ccfd070901766aeff91bd" translate="yes" xml:space="preserve">
          <source>After httpd has obtained a list of the variants for a given resource, either from a type-map file or from the filenames in the directory, it invokes one of two methods to decide on the 'best' variant to return, if any. It is not necessary to know any of the details of how negotiation actually takes place in order to use httpd's content negotiation features. However the rest of this document explains the methods used for those interested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98e3b217c68710895e77a21414350a5f1879355" translate="yes" xml:space="preserve">
          <source>After reloading/restarting your server, you should be able to browse to this location and see the brief display mentioned earlier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a8f961b588be2c573bb28ffecff6122cab5ba7" translate="yes" xml:space="preserve">
          <source>After starting Apache (either in a console window or as a service) it will be listening on port 80 (unless you changed the &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; directive in the configuration files or installed Apache only for the current user). To connect to the server and access the default page, launch a browser and enter this URL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee51f81eda50ba8a167b5314fcc4f0e20f84f4bc" translate="yes" xml:space="preserve">
          <source>After starting Apache, it will be listening to port 80 (unless you changed the &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; directive in the configuration files). To connect to the server and access the default page, launch a browser and enter the server's name or address. This should respond with a welcome page, and a link to the Apache manual. If nothing happens or you get an error, look in the &lt;code&gt;error_log&lt;/code&gt; file in the &lt;code&gt;logs&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253c636f585addde88c7a4a60db4845165719777" translate="yes" xml:space="preserve">
          <source>After the above step, the &quot;real&quot; processing of the HTTP request begins: each module has a chance to run and perform whatever tasks they like. They can retrieve their own final merged configuration from the core of the httpd to determine how they should act.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="812ee0e1ff279dc5a0a951f9e7e8d96def11002f" translate="yes" xml:space="preserve">
          <source>After the code or the string header name, the header value is immediately encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11b486236c9738bd3b32c087b356f11264bfd91" translate="yes" xml:space="preserve">
          <source>After the value or after the coordinates, the line optionally may contain text within double quotes. This string is used as the text for the link if a menu is generated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d137fbc111eb873248b97ea203992776e1884922" translate="yes" xml:space="preserve">
          <source>After version 2.0.44, the details of the server version number presented are controlled by the &lt;code&gt;&lt;a href=&quot;#servertokens&quot;&gt;ServerTokens&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce7ed56c4191808ffce90834ace09027aaa11aa" translate="yes" xml:space="preserve">
          <source>After version 2.0.44, this directive also controls the information presented by the &lt;code&gt;&lt;a href=&quot;#serversignature&quot;&gt;ServerSignature&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da32e9fc4fdeea7543e9ce48b11788a55ac06af" translate="yes" xml:space="preserve">
          <source>After you have signaled &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt;, you can read about its progress by issuing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53111db1473005a2e87227ecd7b6d4735a3c594" translate="yes" xml:space="preserve">
          <source>Again, this can cause &lt;strong&gt;Big Trouble&lt;/strong&gt; if you try this without knowing what you are doing. Stay away from it if at all possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105f22e759159d69678765e8e32e5dee36f56d50" translate="yes" xml:space="preserve">
          <source>Agent (Browser) log format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56641188c99f3f042286e860486ede4ab76ac3b3" translate="yes" xml:space="preserve">
          <source>Alan O. Freier, Philip Karlton, Paul C. Kocher, &lt;q&gt;The SSL Protocol Version 3.0&lt;/q&gt;, 1996. See &lt;a href=&quot;http://www.netscape.com/eng/ssl3/draft302.txt&quot;&gt;http://www.netscape.com/eng/ssl3/draft302.txt&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e9c50724d4dd9a6083c8625ee1a2643ce8318a" translate="yes" xml:space="preserve">
          <source>Algorithm used for the public key of client's certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58eb7513d3347d3c46b262d8583d85124008a41" translate="yes" xml:space="preserve">
          <source>Algorithm used for the public key of server's certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a61d8be5a690f9949da456313e0b12323eb06f" translate="yes" xml:space="preserve">
          <source>Algorithm used for the signature of client's certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a6ebaefb4ed84997be694cfe1c948b5f7fd9c0e" translate="yes" xml:space="preserve">
          <source>Algorithm used for the signature of server's certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0fd1c5e084728362905b98e99b94d652d9d0c0f" translate="yes" xml:space="preserve">
          <source>Alias Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d8002781befbbaac7c1426b04a8d3bc1d27359" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;-U&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1aed7a103bd69650ae107e1915cf1cf33f2cb7" translate="yes" xml:space="preserve">
          <source>AliasMatch Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81ee3811a6a20b13b6e96fb3183d113a98fb60c" translate="yes" xml:space="preserve">
          <source>Aliases and Redirects occurring in different contexts are processed like other directives according to standard &lt;a href=&quot;../sections#mergin&quot;&gt;merging rules&lt;/a&gt;. But when multiple Aliases or Redirects occur in the same context (for example, in the same &lt;code&gt;&lt;a href=&quot;core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; section) they are processed in a particular order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a72085653e4c5be8c7640c868ef787cbcf063d1" translate="yes" xml:space="preserve">
          <source>All</source>
          <target state="translated">All</target>
        </trans-unit>
        <trans-unit id="2a2b258135a55b733f5a2fcb76ba946e58c93b80" translate="yes" xml:space="preserve">
          <source>All I/O between the module and the FastCGI application, including all environment variables, will be logged in printable and hex format at log level &lt;code&gt;trace5&lt;/code&gt;. &lt;strong&gt;All sensitive data will be visible in the log.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e8cb0d18ec8317a28bfa6b43e5f6be06bf3d22" translate="yes" xml:space="preserve">
          <source>All answers to &lt;code&gt;https:&lt;/code&gt; requests will carry the header &lt;code&gt;Strict-Transport-Security&lt;/code&gt; with a life time of half a year. This tells the browser that it &lt;strong&gt;never&lt;/strong&gt; (for half a year) shall use &lt;code&gt;http:&lt;/code&gt; when talking to this domain name. Browsers will, after having seen this, refuse to contact your unencrypted site. This prevents malicious middleware to downgrade connections and listen/manipulate the traffic. Which is good. But you cannot simply take it back again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2bfb0096b17270c712009a81ce89a8abc4a02e" translate="yes" xml:space="preserve">
          <source>All available fields will be used. This is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6071dbb5ec0284526d78dfdea7c4ee64cedf11f8" translate="yes" xml:space="preserve">
          <source>All files with a &lt;code&gt;Content-Type:&lt;/code&gt; which does not start with &lt;code&gt;text/&lt;/code&gt; are regarded as &lt;em&gt;binary files&lt;/em&gt; by the server and are not subject to any conversion. Examples for binary files are GIF images, gzip-compressed files and the like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf2e7e1b2e0172fee4b158c741aae081c4e8222" translate="yes" xml:space="preserve">
          <source>All four of these files should be placed in the same directory, and the &lt;code&gt;.var&lt;/code&gt; file should be associated with the &lt;code&gt;type-map&lt;/code&gt; handler with an &lt;code&gt;&lt;a href=&quot;mod_mime#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt; directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d7bd800491d4a5d91704729668237ee8c8073dd" translate="yes" xml:space="preserve">
          <source>All functions have had necessary Apache API request or server structures passed to them where necessary to call other Apache API routines. (&lt;em&gt;i.e.&lt;/em&gt;, usually for logging, files, or memory allocation in itself or a called function.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d6fb821f1a4eadeb517435c974ae8a3ef67c44" translate="yes" xml:space="preserve">
          <source>All internal addresses 10/8, 172.16/12, 192.168/16, 169.254/16 and 127/8 blocks (and IPv6 addresses outside of the public 2000::/3 block) are only evaluated by mod_remoteip when &lt;code&gt;&lt;a href=&quot;#remoteipinternalproxy&quot;&gt;RemoteIPInternalProxy&lt;/a&gt;&lt;/code&gt; internal (intranet) proxies are registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e171bb5d38c9d99e2de493f106eb0c460a2ee0" translate="yes" xml:space="preserve">
          <source>All network servers can be subject to denial of service attacks that attempt to prevent responses to clients by tying up the resources of the server. It is not possible to prevent such attacks entirely, but you can do certain things to mitigate the problems that they create.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f357a8a864a8be24291e910b5cbd2198315a06" translate="yes" xml:space="preserve">
          <source>All options except for &lt;code&gt;MultiViews&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d737171559baabed98b44a0c7bc5846b2cda33" translate="yes" xml:space="preserve">
          <source>All other headers are ignored. Cookies will also not be copied over. PUSHing resources that require a cookie to be present will not work. This can be a matter of debate. But unless this is more clearly discussed with browser, let's err on the side of caution and not expose cookie where they might oridinarily not be visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc43391f6eb7bd30378150c4b42748ee2d8b75f" translate="yes" xml:space="preserve">
          <source>All providers are currently registered as AP_AUTH_INTERNAL_PER_CONF, which means that checks are not performed again for internal subrequests with the same access control configuration as the initial request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5e72842391a4f5babbafe78d0919d626d6f201" translate="yes" xml:space="preserve">
          <source>All request to the &lt;code&gt;http:&lt;/code&gt; resources are redirected to the same url with the &lt;code&gt;https:&lt;/code&gt; scheme using the &lt;code&gt;301&lt;/code&gt; status code. This tells clients that this is intended to be forever and the should update any links they have accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8fbad014efc338433d2a2a05d4b3a98c57399d3" translate="yes" xml:space="preserve">
          <source>All shared memory is cleared and cleaned with each restart, whether graceful or not. The data itself is stored and restored within a file noted by the &lt;code&gt;name&lt;/code&gt; parameter in the &lt;code&gt;create&lt;/code&gt; and &lt;code&gt;attach&lt;/code&gt; calls. If not specified with an absolute path, the file will be created relative to the path specified by the &lt;code&gt;&lt;a href=&quot;core#defaultruntimedir&quot;&gt;DefaultRuntimeDir&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0c6af1c9a20af7a63a13ca7581962260afc411" translate="yes" xml:space="preserve">
          <source>All slashes which are not intended to act as delimiters in your regex must be escaped. This is regardless of their meaning to the regex engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382d19d74bb7da06ec2ee52db30f876e4665a232" translate="yes" xml:space="preserve">
          <source>All the CGI scripts will run as the same user, so they have potential to conflict (accidentally or deliberately) with other scripts e.g. User A hates User B, so he writes a script to trash User B's CGI database. One program which can be used to allow scripts to run as different users is &lt;a href=&quot;../suexec&quot;&gt;suEXEC&lt;/a&gt; which is included with Apache as of 1.2 and is called from special hooks in the Apache server code. Another popular way of doing this is with &lt;a href=&quot;http://cgiwrap.sourceforge.net/&quot;&gt;CGIWrap&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63aaabb385544654c83130380797ee35ce1ce141" translate="yes" xml:space="preserve">
          <source>All the directives in this module interpolate a string into a pathname. The interpolated string (henceforth called the &quot;name&quot;) may be either the server name (see the &lt;code&gt;&lt;a href=&quot;core#usecanonicalname&quot;&gt;UseCanonicalName&lt;/a&gt;&lt;/code&gt; directive for details on how this is determined) or the IP address of the virtual host on the server in dotted-quad format. The interpolation is controlled by specifiers inspired by &lt;code&gt;printf&lt;/code&gt; which have a number of formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398d7fe66e3ebea7633c87e9013173f365037a88" translate="yes" xml:space="preserve">
          <source>All the names in the list are managed as one Managed Domain (MD). &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; will request one single certificate that is valid for all these names. This directive uses the global settings (see other MD directives below). If you need specific settings for one MD, use the &lt;code&gt;&lt;a href=&quot;#mdomainset&quot;&gt;&amp;lt;MDomainSet&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8454cf66a64590381efbf7bf77e7b4524a826a8d" translate="yes" xml:space="preserve">
          <source>All valid users can access the resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad0e3698278f45b2af94445396e9865f213f617" translate="yes" xml:space="preserve">
          <source>Allow</source>
          <target state="translated">Allow</target>
        </trans-unit>
        <trans-unit id="9723de8da9f056940a3ae48d4479e05167dc65bc" translate="yes" xml:space="preserve">
          <source>Allow 10 seconds to receive the request including the headers and 30 seconds for receiving the request body:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba7359f770636f939c9a904f9869900690105511" translate="yes" xml:space="preserve">
          <source>Allow Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf2d81fb97f532058592ec09edde70c140edb2e" translate="yes" xml:space="preserve">
          <source>Allow IPv6 sockets to handle IPv4 connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c940815b45da4b769c806e099c40a5c98b4b45f" translate="yes" xml:space="preserve">
          <source>Allow PROPFIND, Depth: Infinity requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f441554149e92f94a67a15ee1a6a9ba02137f44" translate="yes" xml:space="preserve">
          <source>Allow a connection that was created on the specified address and/or port to be upgraded to an SSL connection upon request from the client. The address and/or port must have already be defined previously with a &lt;code&gt;&lt;a href=&quot;mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27bc5698f45ccef02ea40aae5bc960a440503f9e" translate="yes" xml:space="preserve">
          <source>Allow access only when an arbitrarily complex boolean expression is true</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5384350d37e3bf0939135946822626a4726b71b0" translate="yes" xml:space="preserve">
          <source>Allow at least 10 seconds to receive the request body. If the client sends data, increase the timeout by 1 second for every 1000 bytes received, with no upper limit for the timeout (except for the limit given indirectly by &lt;code&gt;&lt;a href=&quot;core#limitrequestbody&quot;&gt;LimitRequestBody&lt;/a&gt;&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71db609bb6fe5bb169fdef955ff2ef4b4cbfe079" translate="yes" xml:space="preserve">
          <source>Allow at least 10 seconds to receive the request including the headers. If the client sends data, increase the timeout by 1 second for every 500 bytes received. But do not allow more than 30 seconds for the request including the headers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453129785b8beb906a157e76c0f2354f200df71a" translate="yes" xml:space="preserve">
          <source>Allow the use of all the scoreboard slots up to &lt;code&gt;&lt;a href=&quot;mpm_common#serverlimit&quot;&gt;ServerLimit&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;mpm_common#maxrequestworkers&quot;&gt;MaxRequestWorkers&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mpm_common#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt; are used to limit the amount of active processes, meanwhile &lt;code&gt;&lt;a href=&quot;mpm_common#serverlimit&quot;&gt;ServerLimit&lt;/a&gt;&lt;/code&gt; takes also into account the ones doing a graceful close to allow extra slots when needed. The idea is to use &lt;code&gt;&lt;a href=&quot;mpm_common#serverlimit&quot;&gt;ServerLimit&lt;/a&gt;&lt;/code&gt; to instruct httpd about how many overall processes are tolerated before impacting the system resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5352867984284c96418c9df7dafcdd26f93a15" translate="yes" xml:space="preserve">
          <source>Allow to configure global/default options for regexes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11215b3d789a3e561c81f2890652a78e7639be5e" translate="yes" xml:space="preserve">
          <source>Allow use of AllowOverride option to treat syntax errors in .htaccess as nonfatal. Instead of causing an Internal Server Error, disallowed or unrecognised directives will be ignored and a warning logged:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b659e29cbe2e79c853eff3c13091176980f2e0" translate="yes" xml:space="preserve">
          <source>Allow use of the authorization directives (&lt;code&gt;&lt;a href=&quot;mod_authz_dbm#authdbmgroupfile&quot;&gt;AuthDBMGroupFile&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_authn_dbm#authdbmuserfile&quot;&gt;AuthDBMUserFile&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_authz_groupfile#authgroupfile&quot;&gt;AuthGroupFile&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_authn_core#authname&quot;&gt;AuthName&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_authn_core#authtype&quot;&gt;AuthType&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_authn_file#authuserfile&quot;&gt;AuthUserFile&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt;, &lt;em&gt;etc.&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b8bdf6434ee1373c0469bbd6c04214be7b8727" translate="yes" xml:space="preserve">
          <source>Allow use of the directives controlling directory indexing (&lt;code&gt;&lt;a href=&quot;mod_autoindex#adddescription&quot;&gt;AddDescription&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_autoindex#addicon&quot;&gt;AddIcon&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_autoindex#addiconbyencoding&quot;&gt;AddIconByEncoding&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_autoindex#addiconbytype&quot;&gt;AddIconByType&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_autoindex#defaulticon&quot;&gt;DefaultIcon&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_dir#directoryindex&quot;&gt;DirectoryIndex&lt;/a&gt;&lt;/code&gt;, &lt;a href=&quot;mod_autoindex#indexoptions.fancyindexing&quot;&gt;&lt;code&gt;FancyIndexing&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&lt;a href=&quot;mod_autoindex#headername&quot;&gt;HeaderName&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_autoindex#indexignore&quot;&gt;IndexIgnore&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_autoindex#indexoptions&quot;&gt;IndexOptions&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_autoindex#readmename&quot;&gt;ReadmeName&lt;/a&gt;&lt;/code&gt;, &lt;em&gt;etc.&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d54a6cafdd22374cee0c47b8f18319638191c5" translate="yes" xml:space="preserve">
          <source>Allow use of the directives controlling document types (&lt;code&gt;&lt;a href=&quot;#errordocument&quot;&gt;ErrorDocument&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#forcetype&quot;&gt;ForceType&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_negotiation#languagepriority&quot;&gt;LanguagePriority&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#sethandler&quot;&gt;SetHandler&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#setinputfilter&quot;&gt;SetInputFilter&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#setoutputfilter&quot;&gt;SetOutputFilter&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt; Add* and Remove* directives), document meta data (&lt;code&gt;&lt;a href=&quot;mod_headers#header&quot;&gt;Header&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_headers#requestheader&quot;&gt;RequestHeader&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_setenvif#setenvif&quot;&gt;SetEnvIf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_setenvif#setenvifnocase&quot;&gt;SetEnvIfNoCase&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_setenvif#browsermatch&quot;&gt;BrowserMatch&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_usertrack#cookieexpires&quot;&gt;CookieExpires&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_usertrack#cookiedomain&quot;&gt;CookieDomain&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_usertrack#cookiestyle&quot;&gt;CookieStyle&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_usertrack#cookietracking&quot;&gt;CookieTracking&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_usertrack#cookiename&quot;&gt;CookieName&lt;/a&gt;&lt;/code&gt;), &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; directives (&lt;code&gt;&lt;a href=&quot;mod_rewrite#rewriteengine&quot;&gt;RewriteEngine&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_rewrite#rewriteoptions&quot;&gt;RewriteOptions&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_rewrite#rewritebase&quot;&gt;RewriteBase&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_rewrite#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt;), &lt;code&gt;&lt;a href=&quot;mod_alias&quot;&gt;mod_alias&lt;/a&gt;&lt;/code&gt; directives (&lt;code&gt;&lt;a href=&quot;mod_alias#redirect&quot;&gt;Redirect&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_alias#redirecttemp&quot;&gt;RedirectTemp&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_alias#redirectpermanent&quot;&gt;RedirectPermanent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_alias#redirectmatch&quot;&gt;RedirectMatch&lt;/a&gt;&lt;/code&gt;), and &lt;code&gt;&lt;a href=&quot;mod_actions#action&quot;&gt;Action&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;&lt;a href=&quot;mod_actions&quot;&gt;mod_actions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd7dfc0f0bd1dd8f3cac265e616e6c506139ea4" translate="yes" xml:space="preserve">
          <source>Allow use of the directives controlling host access (&lt;code&gt;&lt;a href=&quot;mod_access_compat#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_access_compat#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_access_compat#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d69f878dad3f0035d4e53fb508a4947f3239f6" translate="yes" xml:space="preserve">
          <source>Allow use of the directives controlling specific directory features (&lt;code&gt;&lt;a href=&quot;#options&quot;&gt;Options&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_include#xbithack&quot;&gt;XBitHack&lt;/a&gt;&lt;/code&gt;). An equal sign may be given followed by a comma-separated list, without spaces, of options that may be set using the &lt;code&gt;&lt;a href=&quot;#options&quot;&gt;Options&lt;/a&gt;&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6daf83c41ceb6b8ded053be83377455d17d4a83d" translate="yes" xml:space="preserve">
          <source>Allow variables sent to FastCGI servers to be fixed up</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af00f0f29dd3860841e25b90dd28550ed194cc6" translate="yes" xml:space="preserve">
          <source>Allow,Deny result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c69347b0704268011935b5d6edcf963dd414e6" translate="yes" xml:space="preserve">
          <source>Allow0.9|Require1.0</source>
          <target state="translated">Allow0.9|Require1.0</target>
        </trans-unit>
        <trans-unit id="a2f17b813e613c7baead865cca88fcbdd8dcc933" translate="yes" xml:space="preserve">
          <source>AllowCONNECT Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9439fdc65629fa0ad46c33d5db2798dcbe94dd7" translate="yes" xml:space="preserve">
          <source>AllowEncodedSlashes Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b98280926c8b1073327b7a15061fb44ac318dd" translate="yes" xml:space="preserve">
          <source>AllowMethods Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e7eb78bfad633d8aced0400a01109cf9803b20" translate="yes" xml:space="preserve">
          <source>AllowOverride</source>
          <target state="translated">AllowOverride</target>
        </trans-unit>
        <trans-unit id="8c5bdf150ccd4ea63579f3452c010ca0ae746e77" translate="yes" xml:space="preserve">
          <source>AllowOverride Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ee61ef35447e4f50fd960896d21ac1de4ee4b9" translate="yes" xml:space="preserve">
          <source>AllowOverrideList Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f03e3718d8e118c316dc2cbfe1ba084c6b578443" translate="yes" xml:space="preserve">
          <source>Allowing users to alter configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf54347d9ef462d0c38bb08176e132de9b37dd1" translate="yes" xml:space="preserve">
          <source>Allowing users to execute CGI scripts in any directory should only be considered if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7195d39da8550abe2211e1e295386f2454247e" translate="yes" xml:space="preserve">
          <source>Allows &quot;anonymous&quot; user access to authenticated areas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09443bea698822c905e92603e4a76dc91a292680" translate="yes" xml:space="preserve">
          <source>Allows CGI scripts to run as a specified user and Group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a42f210cdfbea4344f3f2af5a80dd157ee4791" translate="yes" xml:space="preserve">
          <source>Allows HTTP/2 negotiation (h2) via TLS ALPN for secure &lt;code&gt;&lt;a href=&quot;core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt;. Allows HTTP/2 cleartext negotiation (h2c) upgrading from an initial HTTP/1.1 connection or via HTTP/2 preamble checking (Direct mode, see &lt;code&gt;&lt;a href=&quot;#h2direct&quot;&gt;H2Direct&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7289b7062536cd8e4a79930a497c51de964855eb" translate="yes" xml:space="preserve">
          <source>Allows HTTP/2 negotiation (h2) via TLS ALPN in a secure &lt;code&gt;&lt;a href=&quot;core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt;. HTTP/2 preamble checking (Direct mode, see &lt;code&gt;&lt;a href=&quot;#h2direct&quot;&gt;H2Direct&lt;/a&gt;&lt;/code&gt;) is disabled by default for &lt;code&gt;h2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2030d2632cc1035bf2cee4b477f4f9f67e57f02e" translate="yes" xml:space="preserve">
          <source>Allows a FastCGI authorizer application to handle Apache httpd authentication and authorization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe670f47c89c4cf6cfa9c155b8fcdf4c0376e8be" translate="yes" xml:space="preserve">
          <source>Allows a connection to be upgraded to an SSL connection upon request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7686f50d4957328111ca7351df09199c19087bd4" translate="yes" xml:space="preserve">
          <source>Allows an LDAP directory to be used to store the database for HTTP Basic authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b38d7b9744503535be556b05503d5bb800e73c" translate="yes" xml:space="preserve">
          <source>Allows content-negotiated documents to be cached by proxy servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c636f0e9a741de31c4643c249da48355efa7d089" translate="yes" xml:space="preserve">
          <source>Allows the setting of environment variables based on characteristics of the request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c717abc51deee597eddae5429600b828f538e9da" translate="yes" xml:space="preserve">
          <source>Almost &lt;strong&gt;any&lt;/strong&gt; configuration directive can be put in the VirtualHost directive, with the exception of directives that control process creation and a few other directives. To find out if a directive can be used in the VirtualHost directive, check the Context using the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/mod/quickreference.html&quot;&gt;directive index&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3d0cc04bdb1742d1e045e5822dc510756eb809" translate="yes" xml:space="preserve">
          <source>Almost all modern browsers support HTTP/2, but only over SSL connections: Firefox (v43), Chrome (v45), Safari (since v9), iOS Safari (v9), Opera (v35), Chrome for Android (v49) and Internet Explorer (v11 on Windows10) (&lt;a href=&quot;http://caniuse.com/#search=http2&quot;&gt;source&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c633c8a688a6bc12b2dea7726c9954bd5bcef4b" translate="yes" xml:space="preserve">
          <source>Almost all modern operating systems cache file-data in memory managed directly by the kernel. This is a powerful feature, and for the most part operating systems get it right. For example, on Linux, let's look at the difference in the time it takes to read a file for the first time and the second time;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d606d932f4dceb5e27b21dc41ce77df628ad33ec" translate="yes" xml:space="preserve">
          <source>Also at this point, you can specify which &lt;a href=&quot;programs/configure#optionalfeatures&quot;&gt;features&lt;/a&gt; you want included in Apache by enabling and disabling &lt;a href=&quot;mod/index&quot;&gt;modules&lt;/a&gt;. Apache comes with a wide range of modules included by default. They will be compiled as &lt;a href=&quot;dso&quot;&gt;shared objects (DSOs)&lt;/a&gt; which can be loaded or unloaded at runtime. You can also choose to compile modules statically by using the option &lt;code&gt;--enable-module=static&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6197e3e4dadfd354e7ea65eec28c6f054df1e178" translate="yes" xml:space="preserve">
          <source>Also be wary of playing games with the &lt;code&gt;&lt;a href=&quot;../mod/mod_userdir#userdir&quot;&gt;UserDir&lt;/a&gt;&lt;/code&gt; directive; setting it to something like &lt;code&gt;./&lt;/code&gt; would have the same effect, for root, as the first example above. We strongly recommend that you include the following line in your server configuration files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60675b493489024ea63d1e4733bd07edeb6b22df" translate="yes" xml:space="preserve">
          <source>Also note that explicitly creating a &lt;code&gt;type-map&lt;/code&gt; file provides better performance than using &lt;code&gt;MultiViews&lt;/code&gt;, as the necessary information can be determined by reading this single file, rather than having to scan the directory for files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda1579a02f5f0eca05dfee1ed26b504fa4ab4a0" translate="yes" xml:space="preserve">
          <source>Also note that if you are using Cygwin tools (&lt;a href=&quot;http://www.cygwin.com/&quot;&gt;http://www.cygwin.com/&lt;/a&gt;) the awk utility is named &lt;code&gt;gawk.exe&lt;/code&gt; and that the file &lt;code&gt;awk.exe&lt;/code&gt; is really a symlink to the &lt;code&gt;gawk.exe&lt;/code&gt; file. The Windows command shell does not recognize symlinks, and because of this building InstallBin will fail. A workaround is to delete &lt;code&gt;awk.exe&lt;/code&gt; from the cygwin installation and copy &lt;code&gt;gawk.exe&lt;/code&gt; to &lt;code&gt;awk.exe&lt;/code&gt;. Also note the cygwin/mingw ports of gawk 3.0.x were buggy, please upgrade to 3.1.x before attempting to use any gawk port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb78007b2c6c7e4ca44fc14cb9a7b1aa9dced68" translate="yes" xml:space="preserve">
          <source>Also note that some browsers may erroneously change POST requests into GET (thus discarding POST data) when a redirect is issued.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0733318762f717eb21e406847d02001a6dff7c" translate="yes" xml:space="preserve">
          <source>Also, if your program reads from, or writes to, any other files, those files will need to have the correct permissions to permit this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689a6df1de6ca66920fdfde9348ce63761f139c5" translate="yes" xml:space="preserve">
          <source>Also, remember that while Apache supports ISAPI Extensions, it &lt;strong&gt;does not support ISAPI Filters&lt;/strong&gt;. Support for filters may be added at a later date, but no support is planned at this time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c4138c1da78fc75d258eede22f57b1b94840a3" translate="yes" xml:space="preserve">
          <source>Also, you should read the &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_core&quot;&gt;mod_authz_core&lt;/a&gt;&lt;/code&gt; documentation for examples of combining multiple access requirements and specifying how they interact.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68536715861eb3bd836e49db4aa65484ff04280e" translate="yes" xml:space="preserve">
          <source>Altered versions must be plainly marked as such, and must not be misrepresented as being the original software. Since few users ever read sources, credits must appear in the documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84f076ec01ece864ad418bf4b54209c57e31afc" translate="yes" xml:space="preserve">
          <source>Altering the suEXEC code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1407d180b1cb0a4d1f3de36cf436a9b0b8e1d05e" translate="yes" xml:space="preserve">
          <source>Alternate Interval Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d59143dda2d171de95b0ac78ff913211f765899" translate="yes" xml:space="preserve">
          <source>Alternate names for a host used when matching requests to name-virtual hosts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad055c501b1cd51c815bbdf448aeaa1f369f4d4" translate="yes" xml:space="preserve">
          <source>Alternate password storage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca15723090db34fb7da502743a10e2d6e070947" translate="yes" xml:space="preserve">
          <source>Alternate text to display for a file instead of an icon selected by MIME-encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de9922ab321c2c35c8ee553f2951eb8be7a9ada" translate="yes" xml:space="preserve">
          <source>Alternate text to display for a file, instead of an icon selected by MIME content-type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5c2c555e4e92b7f1d6e76377e7a112651630b2" translate="yes" xml:space="preserve">
          <source>Alternate text to display for a file, instead of an icon selected by filename</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff079175e10b599a76093f12b8f49362b50593b6" translate="yes" xml:space="preserve">
          <source>Alternately, if you wish to have all files in the given directory be considered to be CGI programs, this may be done with the following configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac355d2374c9bba29843b8012fb1fa886d87118a" translate="yes" xml:space="preserve">
          <source>Alternately, it may tell you that you had a syntax error in your usage of the directive itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85002701c89ceb325cba1cb7777e9f21dec78f40" translate="yes" xml:space="preserve">
          <source>Alternating even and odd rows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b74e96e489cf616e54374e5e92ff3290101f441" translate="yes" xml:space="preserve">
          <source>Alternative</source>
          <target state="translated">Alternative</target>
        </trans-unit>
        <trans-unit id="24a3a81c7452ef3f87d531079744310801248589" translate="yes" xml:space="preserve">
          <source>Alternatively you may prefer to use the &lt;code&gt;&lt;a href=&quot;core#forcetype&quot;&gt;ForceType&lt;/a&gt;&lt;/code&gt; directive to default everything to binary:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c9d318ce71ba0475e7b5302d00270fb8813d66" translate="yes" xml:space="preserve">
          <source>Alternatively you might use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7dfab62b3ad385e58989c6b4a45870730a7fe7" translate="yes" xml:space="preserve">
          <source>Alternatively, if the error is the result of the script returning incorrect header information (often due to a bug in the script), the following information is logged:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5621945033d8a208e9f2672f99b4ddfce5198d2" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;code&gt;&lt;a href=&quot;mod/mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; directive will map any part of the filesystem into the web space. For example, with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0702fac43c54396444c1b0239c66e088b0551cd8" translate="yes" xml:space="preserve">
          <source>Alternatively, the URL to redirect the user to on success can be embedded within the login form, as in the example below. As a result, the same &lt;var&gt;form-login-handler&lt;/var&gt; can be reused for different areas of a website.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0258056cbde53f0fcfaadb44718633caf794ab4d" translate="yes" xml:space="preserve">
          <source>Alternatively, the following command will just be ignored in case of missing files or directories:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad0639156a522b3f982489bf4a5cd8fa95fb700" translate="yes" xml:space="preserve">
          <source>Alternatively, the modules can be statically compiled into the &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; binary when the server is built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54609985966cee8e51d398307e03c97d4db3299" translate="yes" xml:space="preserve">
          <source>Alternatively, to temporarily redirect all pages on one site to a particular page on another site, use the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ab1e4a0715e5ae559279352dae48bf73d0b631" translate="yes" xml:space="preserve">
          <source>Although Alice could have sent a private message to the bank, signed it and ensured the integrity of the message, she still needs to be sure that she is really communicating with the bank. This means that she needs to be sure that the public key she is using is part of the bank's key-pair, and not an intruder's. Similarly, the bank needs to verify that the message signature really was signed by the private key that belongs to Alice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2829bfc190bba101da413b88c87d6b37f1363893" translate="yes" xml:space="preserve">
          <source>Although Alice may encrypt her message to make it private, there is still a concern that someone might modify her original message or substitute it with a different one, in order to transfer the money to themselves, for instance. One way of guaranteeing the integrity of Alice's message is for her to create a concise summary of her message and send this to the bank as well. Upon receipt of the message, the bank creates its own summary and compares it with the one Alice sent. If the summaries are the same then the message has been received intact.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d110d769aa7f14fc29c50b76995bba874654153" translate="yes" xml:space="preserve">
          <source>Although Apache attempts to increase the limit as required, this may not work if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f7a96f86d463492c2d8cab5461be4c22cea6a7" translate="yes" xml:space="preserve">
          <source>Although SSL compression negotiation was defined in the specification of SSLv2 and TLS, it took until May 2004 for RFC 3749 to define DEFLATE as a negotiable standard compression method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bdf5e3765666100aa8f4f5dfee4db89e6867a22" translate="yes" xml:space="preserve">
          <source>Although it is possible to handle &lt;a href=&quot;vhosts&quot;&gt;virtual hosts with mod_rewrite&lt;/a&gt;, it is seldom the right way. Creating individual &lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; blocks is almost always the right way to go. In the event that you have an enormous number of virtual hosts, consider using &lt;code&gt;&lt;a href=&quot;../mod/mod_vhost_alias&quot;&gt;mod_vhost_alias&lt;/a&gt;&lt;/code&gt; to create these hosts automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42362918b1122d2af95ab73e251609fbd5f6ccef" translate="yes" xml:space="preserve">
          <source>Although most directives can be placed in any of these sections, some directives do not make sense in some contexts. For example, directives controlling process creation can only be placed in the main server context. To find which directives can be placed in which sections, check the Context of the directive. For further information, we provide details on &lt;a href=&quot;sections&quot;&gt;How Directory, Location and Files sections work&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753558d0216d55acf3c4239ba637df1462379cc5" translate="yes" xml:space="preserve">
          <source>Although most error messages can be overridden, there are certain circumstances where the internal messages are used regardless of the setting of &lt;code&gt;&lt;a href=&quot;#errordocument&quot;&gt;ErrorDocument&lt;/a&gt;&lt;/code&gt;. In particular, if a malformed request is detected, normal request processing will be immediately halted and the internal error message returned. This is necessary to guard against security problems caused by bad requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5ef05c52167d9813748de65b3b6f3d50000bb0" translate="yes" xml:space="preserve">
          <source>Although rewrite rules are syntactically permitted in &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;core#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt; sections (including their regular expression counterparts), this should never be necessary and is unsupported. A likely feature to break in these contexts is relative substitutions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b0d3dd3198da235b352a521200631bb9346a120" translate="yes" xml:space="preserve">
          <source>Although the Apache HTTP Server provides generic error responses in the event of 4xx or 5xx HTTP status codes, these responses are rather stark, uninformative, and can be intimidating to site users. You may wish to provide custom error responses which are either friendlier, or in some language other than English, or perhaps which are styled more in line with your site layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444e3cdcb4d2958bb76ed40844104ab3db147938" translate="yes" xml:space="preserve">
          <source>Although the standard &lt;code&gt;query&lt;/code&gt; and &lt;code&gt;run&lt;/code&gt; functions are freely available, it is recommended that you use prepared statements whenever possible, to both optimize performance (if your db handle lives on for a long time) and to minimize the risk of SQL injection attacks. &lt;code&gt;run&lt;/code&gt; and &lt;code&gt;query&lt;/code&gt; should only be used when there are no variables inserted into a statement (a static statement). When using dynamic statements, use &lt;code&gt;db:prepare&lt;/code&gt; or &lt;code&gt;db:prepared&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e61394a9a71fadd6746c23fdf8adb9133a73c95" translate="yes" xml:space="preserve">
          <source>Although the suEXEC wrapper will check to ensure that its caller is the correct user as specified with the &lt;code&gt;--with-suexec-caller&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; option, there is always the possibility that a system or library call suEXEC uses before this check may be exploitable on your system. To counter this, and because it is best-practise in general, you should use filesystem permissions to ensure that only the group httpd runs as may execute suEXEC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32ba843334738b30aef587e4c3956f672f450bd" translate="yes" xml:space="preserve">
          <source>Although these variables are referred to as &lt;em&gt;environment variables&lt;/em&gt;, they are not the same as the environment variables controlled by the underlying operating system. Instead, these variables are stored and manipulated in an internal Apache structure. They only become actual operating system environment variables when they are provided to CGI scripts and Server Side Include scripts. If you wish to manipulate the operating system environment under which the server itself runs, you must use the standard environment manipulation mechanisms provided by your operating system shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb05641ee0b49998b7ef08ef2151f3b18c9d5ebc" translate="yes" xml:space="preserve">
          <source>Although this DSO mechanism sounds straightforward there is at least one difficult step here: The resolving of symbols from the executable program for the DSO when using a DSO to extend a program (the second way). Why? Because &quot;reverse resolving&quot; DSO symbols from the executable program's symbol set is against the library design (where the library has no knowledge about the programs it is used by) and is neither available under all platforms nor standardized. In practice the executable program's global symbols are often not re-exported and thus not available for use in a DSO. Finding a way to force the linker to export all global symbols is the main problem one has to solve when using DSO for extending a program at run-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b724b52749cf726aedca80d12b14ea25cc60799f" translate="yes" xml:space="preserve">
          <source>Although using &lt;code&gt;&lt;a href=&quot;mod/mod_file_cache#cachefile&quot;&gt;CacheFile&lt;/a&gt;&lt;/code&gt; does not cause the file-contents to be cached per-se, it does mean that if the file changes while httpd is running these changes will not be picked up. The file will be consistently served as it was when httpd was started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4309f41ab68386749784b6aaab26ded1bed8e50c" translate="yes" xml:space="preserve">
          <source>Although we have just shown that conditional logging is very powerful and flexible, it is not the only way to control the contents of the logs. Log files are more useful when they contain a complete record of server activity. It is often easier to simply post-process the log files to remove requests that you do not want to consider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aff3c9dece1761cdb7037f06b283d7695181f91" translate="yes" xml:space="preserve">
          <source>Always review the generated &lt;code&gt;.mak&lt;/code&gt; and &lt;code&gt;.dep&lt;/code&gt; files for Platform SDK or other local, machine specific file paths. The &lt;code&gt;DevStudio\Common\MSDev98\bin\&lt;/code&gt; (VC6) directory contains a &lt;code&gt;sysincl.dat&lt;/code&gt; file, which lists all exceptions. Update this file (including both forward and backslashed paths, such as both &lt;code&gt;sys/time.h&lt;/code&gt; and &lt;code&gt;sys\time.h&lt;/code&gt;) to ignore such newer dependencies. Including local-install paths in a distributed &lt;code&gt;.mak&lt;/code&gt; file will cause the build to fail completely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb7793f77fdcc162aaa2e994c566bc193635112" translate="yes" xml:space="preserve">
          <source>Amount of time the server will wait for certain events before failing a request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ffde017c93ff5c61c3ea09f692730a31030242" translate="yes" xml:space="preserve">
          <source>Amount of time the server will wait for subsequent requests on a persistent connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f449d91185308c011c8963b83014c535053af2" translate="yes" xml:space="preserve">
          <source>An &lt;var&gt;IPAddr&lt;/var&gt; does not need to be resolved by the DNS system, so it can result in more effective apache performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea2ad21493dd9ff8185bb6166f815f5ea8746b2" translate="yes" xml:space="preserve">
          <source>An Active Directory installation may support multiple domains at the same time. To distinguish users between domains, an identifier called a User Principle Name (UPN) can be added to a user's entry in the directory. This UPN usually takes the form of the user's account name, followed by the domain components of the particular domain, for example &lt;em&gt;somebody@nz.example.com&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b580e5321bb20c3074d26b639d00136703312fe" translate="yes" xml:space="preserve">
          <source>An Apache httpd proxy server situated in an intranet needs to forward external requests through the company's firewall (for this, configure the &lt;code&gt;&lt;a href=&quot;#proxyremote&quot;&gt;ProxyRemote&lt;/a&gt;&lt;/code&gt; directive to forward the respective &lt;var&gt;scheme&lt;/var&gt; to the firewall proxy). However, when it has to access resources within the intranet, it can bypass the firewall when accessing hosts. The &lt;code&gt;&lt;a href=&quot;#noproxy&quot;&gt;NoProxy&lt;/a&gt;&lt;/code&gt; directive is useful for specifying which hosts belong to the intranet and should be accessed directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166fa67a632fefd3e1657685144812fcae6c3bd1" translate="yes" xml:space="preserve">
          <source>An ETag is not generated for responses parsed by &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; since the response entity can change without a change of the INode, MTime, or Size of the static file with embedded SSI directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275f1fd676e53d64bc9fcd2b516e1377e6ed77d4" translate="yes" xml:space="preserve">
          <source>An Example Packet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add49e35a91887c9a554bb45feb215fa0787e12f" translate="yes" xml:space="preserve">
          <source>An FTP URI is interpreted relative to the home directory of the user who is logging in. Alas, to reach higher directory levels you cannot use /../, as the dots are interpreted by the browser and not actually sent to the FTP server. To address this problem, the so called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9821e35b5aca895e52011f5aae2a072335c19f4" translate="yes" xml:space="preserve">
          <source>An HTTP request header field (see &lt;a href=&quot;http://www.rfc-editor.org/rfc/rfc2616.txt&quot;&gt;RFC2616&lt;/a&gt; for more information about these); for example: &lt;code&gt;Host&lt;/code&gt;, &lt;code&gt;User-Agent&lt;/code&gt;, &lt;code&gt;Referer&lt;/code&gt;, and &lt;code&gt;Accept-Language&lt;/code&gt;. A regular expression may be used to specify a set of request headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9070a765d0ff2680086e8d6e0d4ac00d27290106" translate="yes" xml:space="preserve">
          <source>An IP address of a host allowed access</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be461a97c99b8abb25a76e15c6962be46e675129" translate="yes" xml:space="preserve">
          <source>An In-Depth Discussion of Virtual Host Matching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8d544cc12c52cf33148ab69000437063c3967c" translate="yes" xml:space="preserve">
          <source>An LDAP group object may contain members that are users and members that are groups (called nested or sub groups). The &lt;code&gt;&lt;a href=&quot;#authldapsubgroupattribute&quot;&gt;AuthLDAPSubGroupAttribute&lt;/a&gt;&lt;/code&gt; directive identifies the labels of members that may be sub-groups of the current group (as opposed to user members). The &lt;code&gt;AuthLDAPSubGroupClass&lt;/code&gt; directive specifies the LDAP objectClass values used in verifying that these potential sub-groups are in fact group objects. Verified sub-groups can then be searched for more user or sub-group members. Multiple attributes can be used by specifying this directive multiple times. If not specified, then &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; uses the &lt;code&gt;groupOfNames&lt;/code&gt; and &lt;code&gt;groupOfUniqueNames&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b783b7494e15e5149cd655bebe32a2d2f64d29b" translate="yes" xml:space="preserve">
          <source>An LDAP group object may contain members that are users and members that are groups (called nested or sub groups). The &lt;code&gt;AuthLDAPSubGroupAttribute&lt;/code&gt; directive identifies the labels of group members and the &lt;code&gt;&lt;a href=&quot;#authldapgroupattribute&quot;&gt;AuthLDAPGroupAttribute&lt;/a&gt;&lt;/code&gt; directive identifies the labels of the user members. Multiple attributes can be used by specifying this directive multiple times. If not specified, then &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; uses the &lt;code&gt;member&lt;/code&gt; and &lt;code&gt;uniqueMember&lt;/code&gt; attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eec55302e85fd2caac172706197f80b043b9df3" translate="yes" xml:space="preserve">
          <source>An RFC 2255 URL which specifies the LDAP search parameters to use. The syntax of the URL is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e0667f23884664bd3a9d31b6f58208df82adb0" translate="yes" xml:space="preserve">
          <source>An RSA private key file is a digital file that you can use to decrypt messages sent to you. It has a public component which you distribute (via your Certificate file) which allows people to encrypt those messages to you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad193c76ece1ef686c6a482fae32dcf6b8ca047" translate="yes" xml:space="preserve">
          <source>An SSL cipher can also be an export cipher. SSLv2 ciphers are no longer supported. To specify which ciphers to use, one can either specify all the Ciphers, one at a time, or use aliases to specify the preference and order for the ciphers (see &lt;a href=&quot;#table1&quot;&gt;Table 1&lt;/a&gt;). The actually available ciphers and aliases depends on the used openssl version. Newer openssl versions may include additional ciphers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b56333c5998eeac430921f94200651b628c254" translate="yes" xml:space="preserve">
          <source>An SSL cipher specification in &lt;em&gt;cipher-spec&lt;/em&gt; is composed of 4 major attributes plus a few extra minor ones:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912aff3c2aef5e2d57b278ee052cf8edc00def7b" translate="yes" xml:space="preserve">
          <source>An absolute URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be62702595bf220d5b9da6b944be8fa49fb7e31f" translate="yes" xml:space="preserve">
          <source>An alternative flag, [END], can be used to terminate not only the current round of rewrite processing but prevent any subsequent rewrite processing from occurring in per-directory (htaccess) context. This does not apply to new requests resulting from external redirects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8761d7f8389a8a577b5aabdf57661d58837fab0e" translate="yes" xml:space="preserve">
          <source>An alternative to PUSHing resources is to send &lt;code&gt;Link&lt;/code&gt; headers to the client before the response is even ready. This uses the HTTP feature called &quot;Early Hints&quot; and is described in &lt;a href=&quot;https://tools.ietf.org/html/rfc8297&quot;&gt;RFC 8297&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac15f511dcee9bdaff128b7c5ab8bb623bbd19a" translate="yes" xml:space="preserve">
          <source>An alternative to this flag is using a &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt; to capture against %{THE_REQUEST} which will capture strings in the encoded form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326abe9f4ac5c4310bc3412caa77df3adb5bd1fa" translate="yes" xml:space="preserve">
          <source>An alternative to this may be the third-party ODBC driver, which offers the security of genuine prepared statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2326c57b0b392fedd5fba159dd16ca754bbdd333" translate="yes" xml:space="preserve">
          <source>An appropriate Windows Platform SDK is included by default in the full (not express/lite) versions of Visual C++ 7.1 (Visual Studio 2002) and later, these users can ignore these steps unless explicitly choosing a newer or different version of the Platform SDK.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cad34a34bc5c6454eee060460c7e94e681d3c23" translate="yes" xml:space="preserve">
          <source>An associated question that arises here is, of course, what modules you need, and which ones you don't. The answer here will, of course, vary from one web site to another. However, the &lt;em&gt;minimal&lt;/em&gt; list of modules which you can get by with tends to include &lt;code&gt;&lt;a href=&quot;../mod/mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/mod_dir&quot;&gt;mod_dir&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../mod/mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;mod_log_config&lt;/code&gt; is, of course, optional, as you can run a web site without log files. This is, however, not recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cefcd8dac6b03bc4657f095528361e3d35110836" translate="yes" xml:space="preserve">
          <source>An attempt to access the URI &lt;var&gt;/logout/&lt;/var&gt; will result in the user being logged out, and the page &lt;var&gt;/loggedout.html&lt;/var&gt; will be displayed. Make sure that the page &lt;var&gt;loggedout.html&lt;/var&gt; is not password protected, otherwise the page will not be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4097d7fd65f778a94cd11543836583ef9793f283" translate="yes" xml:space="preserve">
          <source>An attribute defines the location of the document, and may appear more than once in an include element; an inclusion is done for each attribute given to the include command in turn. The valid attributes are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b360877e7ac2dc4c5261526bd15c5549f0c241" translate="yes" xml:space="preserve">
          <source>An entry in an HTTP cache exists in one of three states:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6825510a5f4432bc8a0ec34d0ef9c9742a06800e" translate="yes" xml:space="preserve">
          <source>An especially useful feature of mod_speling, is that it will compare filenames without respect to case. This can help systems where users are unaware of the case-sensitive nature of URLs and the unix filesystem. But using mod_speling for anything more than the occasional URL correction can place additional load on the server, since each &quot;incorrect&quot; request is followed by a URL redirection and a new request from the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed723d85d2799ed764e945777ae7e49f26c4323" translate="yes" xml:space="preserve">
          <source>An estimation of the maximum concurrent connections across all the processes given an average value of idle worker threads can be calculated with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b2a9ad36f4ca83338eb1901320ac1528bbe92a" translate="yes" xml:space="preserve">
          <source>An example can help to visualize the whole process. The following configuration uses the &lt;code&gt;&lt;a href=&quot;mod/mod_headers#header&quot;&gt;Header&lt;/a&gt;&lt;/code&gt; directive of &lt;code&gt;&lt;a href=&quot;mod/mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt; to set a specific HTTP header. What value will httpd set in the &lt;code&gt;CustomHeaderName&lt;/code&gt; header for a request to &lt;code&gt;/example/index.html&lt;/code&gt; ?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="324253b77455b4bec3f6a67a2d3e5f8a7887e8f5" translate="yes" xml:space="preserve">
          <source>An example for such a module is &lt;code&gt;mod_wsgi&lt;/code&gt; that may place Python file handles into the response. Those files get close down when Python thinks processing has finished. That may be well before &lt;code&gt;&lt;a href=&quot;mod_http2&quot;&gt;mod_http2&lt;/a&gt;&lt;/code&gt; is done with them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c777cca93992d239e52deb2af32fb4fd841cca" translate="yes" xml:space="preserve">
          <source>An example of a data URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69791558c6e844b7ab8936f9305f834bc04344c" translate="yes" xml:space="preserve">
          <source>An example where this may be useful is on an intranet server where you have users connecting to the machine using short names such as &lt;code&gt;www&lt;/code&gt;. You'll notice that if the users type a shortname and a URL which is a directory, such as &lt;code&gt;http://www/splat&lt;/code&gt;, &lt;em&gt;without the trailing slash&lt;/em&gt;, then Apache httpd will redirect them to &lt;code&gt;http://www.example.com/splat/&lt;/code&gt;. If you have authentication enabled, this will cause the user to have to authenticate twice (once for &lt;code&gt;www&lt;/code&gt; and once again for &lt;code&gt;www.example.com&lt;/code&gt; -- see &lt;a href=&quot;http://wiki.apache.org/httpd/FAQ#Why_does_Apache_ask_for_my_password_twice_before_serving_a_file.3F&quot;&gt; the FAQ on this subject for more information&lt;/a&gt;). But if &lt;code&gt;UseCanonicalName&lt;/code&gt; is set &lt;code&gt;Off&lt;/code&gt;, then Apache httpd will redirect to &lt;code&gt;http://www/splat/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71152a1f5ff2ed868da10d071887b4b9e199616c" translate="yes" xml:space="preserve">
          <source>An external URL to redirect to (if the action is a valid URL).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62529589b23e547a9fafc34a19de0c1663b8239b" translate="yes" xml:space="preserve">
          <source>An internal redirect happens, for example, when using the &lt;code&gt;&lt;a href=&quot;mod_actions#action&quot;&gt;Action&lt;/a&gt;&lt;/code&gt; directive, which internally redirects the original request to a CGI script. A subrequest is Apache httpd's mechanism to find out what would happen for some URI if it were requested. For example, &lt;code&gt;&lt;a href=&quot;mod_dir&quot;&gt;mod_dir&lt;/a&gt;&lt;/code&gt; uses subrequests to look for the files listed in the &lt;code&gt;&lt;a href=&quot;mod_dir#directoryindex&quot;&gt;DirectoryIndex&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ae4a24d6d232a089b7c9e3ec9ec3d653846605" translate="yes" xml:space="preserve">
          <source>An optional DN to bind with during the search phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb085f7cf3fae41a55452dc9ad91830c0fa8f83" translate="yes" xml:space="preserve">
          <source>An optional DN used to bind to the server when searching for entries. If not provided, &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; will use an anonymous bind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d13f319de51d60e00016bb4f9fb73796bf084a" translate="yes" xml:space="preserve">
          <source>An optional MIME encoding can be included as a fifth column. For example, this can recognize gzipped files and set the encoding for them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7756a72babf6444509eea6593e627c921752e772" translate="yes" xml:space="preserve">
          <source>An optional list of cookie attributes can be specified, as per the example below. These attributes are inserted into the cookie as is, and are not interpreted by Apache. Ensure that your attributes are defined correctly as per the cookie specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3311225df4af77a89076574ba19bcfe7f33f0367" translate="yes" xml:space="preserve">
          <source>An optional parameter can be added to allow the LDAP Url to override the connection type. This parameter can be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2cb40b0f74a6b51f37d195fe5b4af6d552474f" translate="yes" xml:space="preserve">
          <source>An optional password to bind with during the search phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c16a2d16f131c90117716b8338aafa427de23e" translate="yes" xml:space="preserve">
          <source>An optional second parameter can be added to the &lt;code&gt;&lt;a href=&quot;#authldapurl&quot;&gt;AuthLDAPURL&lt;/a&gt;&lt;/code&gt; to override the default connection type set by &lt;code&gt;&lt;a href=&quot;mod_ldap#ldaptrustedmode&quot;&gt;LDAPTrustedMode&lt;/a&gt;&lt;/code&gt;. This will allow the connection established by an &lt;em&gt;ldap://&lt;/em&gt; Url to be upgraded to a secure connection on the same port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbbe520e0822c5797a66f756e45eb6845cdaf60" translate="yes" xml:space="preserve">
          <source>An ordinary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4495e3de09722017047179b09a8897868184ba" translate="yes" xml:space="preserve">
          <source>Analyze the core-dump. For this, run &lt;code&gt;gdb /path/to/httpd /tmp/httpd.core&lt;/code&gt; or a similar command. In GDB, all you have to do then is to enter &lt;code&gt;bt&lt;/code&gt;, and voila, you get the backtrace. For other debuggers consult your local debugger manual.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f5a46896223a7bcdef89565fa7a15d27e53008" translate="yes" xml:space="preserve">
          <source>And &lt;var&gt;b&lt;/var&gt; gets disabled, the following schedule is produced:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e92bba64f1c7556673e73408923eb7ba0543a65" translate="yes" xml:space="preserve">
          <source>And for a site running on port 80</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11810127a65be6a325eb1baab3f1b2fb6110673a" translate="yes" xml:space="preserve">
          <source>And for really deep inspection &lt;a href=&quot;https://wiki.wireshark.org/HTTP2&quot;&gt;wireshark&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c449d1b37230bdc8163df37b138bdc6fe5c873" translate="yes" xml:space="preserve">
          <source>And last, but not least, &lt;code&gt;&lt;a href=&quot;#h2streammaxmemsize&quot;&gt;H2StreamMaxMemSize&lt;/a&gt;&lt;/code&gt; controls how much response data shall be buffered. The request sits in a H2Worker thread and is producing data, the HTTP/2 connection tries to send this to the client. If the client does not read fast enough, the connection will buffer this amount of data and then suspend the H2Worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4fc9f1a2055b9eabb49acde9e6c3e8758e3a247" translate="yes" xml:space="preserve">
          <source>And so, for each file access out of that directory, there are 4 additional file-system accesses, even if none of those files are present. (Note that this would only be the case if &lt;code&gt;.htaccess&lt;/code&gt; files were enabled for &lt;code&gt;/&lt;/code&gt;, which is not usually the case.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9758e055c30152193e37fe3ceb768d3c12fdc1" translate="yes" xml:space="preserve">
          <source>And the Email addresses entered in the passwd field are logged to the error log file. (&lt;code&gt;&lt;a href=&quot;#anonymous_logemail&quot;&gt;Anonymous_LogEmail&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08d705a0f828cae2b8654e180c3813ee969f26d" translate="yes" xml:space="preserve">
          <source>And there is more:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2c08d2d497f2113906f65825f7a77515e34352" translate="yes" xml:space="preserve">
          <source>And you can &lt;code&gt;config&lt;/code&gt; the format in which file sizes are returned with the &lt;code&gt;sizefmt&lt;/code&gt; attribute. You can specify &lt;code&gt;bytes&lt;/code&gt; for a full count in bytes, or &lt;code&gt;abbrev&lt;/code&gt; for an abbreviated number in Kb or Mb, as appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c16860173f8e0d45a8c87acbd883051b272975" translate="yes" xml:space="preserve">
          <source>And you may want to look at the &lt;a href=&quot;access&quot;&gt;Access Control&lt;/a&gt; howto, which discusses a number of related topics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec101f64eb08f7bc9904698cda5642127a69e6a" translate="yes" xml:space="preserve">
          <source>And you'll need to know a little bit about the directory structure of your server, in order to know where some files are kept. This should not be terribly difficult, and I'll try to make this clear when we come to that point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689da815d13a6e7bc524b823b216f2d36a46cdfb" translate="yes" xml:space="preserve">
          <source>And, if you'd like to block access from an entire domain, you can specify just part of an address or domain name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3240761373b4d6677c46df5db1347a548020ac65" translate="yes" xml:space="preserve">
          <source>And, when the page is served, this fragment will be evaluated and replaced with its value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bed5104004c5fe4e3e46673da174472bff1360a" translate="yes" xml:space="preserve">
          <source>Anonymous</source>
          <target state="translated">Anonymous</target>
        </trans-unit>
        <trans-unit id="ecf02dba4d12a6f337e5ba504e3a9c2895378422" translate="yes" xml:space="preserve">
          <source>Anonymous Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8157f0149b8c5b385c04f06b81ff47349d390952" translate="yes" xml:space="preserve">
          <source>Anonymous Sessions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2088bd71a684934ed1dfb17aed243bef53906c7" translate="yes" xml:space="preserve">
          <source>Anonymous sessions are keyed against a unique UUID, and stored on the browser within an HTTP cookie. This method is similar to that used by most application servers to store session information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26785b94ee59faaa2546949880692d82a6a90d86" translate="yes" xml:space="preserve">
          <source>Anonymous_LogEmail</source>
          <target state="translated">Anonymous_LogEmail</target>
        </trans-unit>
        <trans-unit id="d0fe46250893880170fa85f854a646c77c015ff3" translate="yes" xml:space="preserve">
          <source>Anonymous_LogEmail Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9ef4521cf25b75ba75c14a4de050383de07230" translate="yes" xml:space="preserve">
          <source>Anonymous_MustGiveEmail</source>
          <target state="translated">Anonymous_MustGiveEmail</target>
        </trans-unit>
        <trans-unit id="6afc38d7afdd31728d471eb56a880561fd254681" translate="yes" xml:space="preserve">
          <source>Anonymous_MustGiveEmail Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf565b81e30a3c96bc748538ace39451431bd88" translate="yes" xml:space="preserve">
          <source>Anonymous_NoUserID</source>
          <target state="translated">Anonymous_NoUserID</target>
        </trans-unit>
        <trans-unit id="d127603580a094fcffa42f720037976154c9dbbf" translate="yes" xml:space="preserve">
          <source>Anonymous_NoUserID Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1c4637c1fd927359a87377454f5c795edce7ff" translate="yes" xml:space="preserve">
          <source>Anonymous_VerifyEmail</source>
          <target state="translated">Anonymous_VerifyEmail</target>
        </trans-unit>
        <trans-unit id="1c30898aac1052912019e661d033bba1237d666e" translate="yes" xml:space="preserve">
          <source>Anonymous_VerifyEmail Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abd05ecc453342890464743836fdec1a412b85f" translate="yes" xml:space="preserve">
          <source>Another challenge that Alice faces is finding a way to send the digest to the bank securely; if the digest is not sent securely, its integrity may be compromised and with it the possibility for the bank to determine the integrity of the original message. Only if the digest is sent securely can the integrity of the associated message be determined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3313d7952f10741e25cce4bc4581498483f4c8cd" translate="yes" xml:space="preserve">
          <source>Another common cause of &quot;File Not Found&quot; errors is accidental mistyping of URLs, either directly in the browser, or in HTML links. httpd provides the module &lt;code&gt;&lt;a href=&quot;mod/mod_speling&quot;&gt;mod_speling&lt;/a&gt;&lt;/code&gt; (sic) to help with this problem. When this module is activated, it will intercept &quot;File Not Found&quot; errors and look for a resource with a similar filename. If one such file is found, mod_speling will send an HTTP redirect to the client informing it of the correct location. If several &quot;close&quot; files are found, a list of available alternatives will be presented to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074360e0774248818f487c99c1463b311b809362" translate="yes" xml:space="preserve">
          <source>Another common use of &lt;code&gt;.htaccess&lt;/code&gt; files is to enable Server Side Includes for a particular directory. This may be done with the following configuration directives, placed in a &lt;code&gt;.htaccess&lt;/code&gt; file in the desired directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d03376a84e36005f034a1f8e6d22268fd05c912" translate="yes" xml:space="preserve">
          <source>Another commonly used format string is called the Combined Log Format. It can be used as follows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ba3e66e5729f9249bff62c220ab64b5c8ec718" translate="yes" xml:space="preserve">
          <source>Another example of how to provide load balancing with stickyness using &lt;code&gt;&lt;a href=&quot;mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt;, even if the back-end server does not set a suitable session cookie:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f5cafd43358275b5cb14da7f09f54b748da1f5" translate="yes" xml:space="preserve">
          <source>Another example: if you wanted to have the server display a status report whenever a URL of &lt;code&gt;http://servername/status&lt;/code&gt; was called, you might put the following into &lt;code&gt;httpd.conf&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc4d7b944b0498d54dd4d2801a37bdd9b78ee7b" translate="yes" xml:space="preserve">
          <source>Another experimental draft that has been implemented in &lt;code&gt;&lt;a href=&quot;../mod/mod_http2&quot;&gt;mod_http2&lt;/a&gt;&lt;/code&gt; is the &lt;a href=&quot;https://tools.ietf.org/html/draft-ruellan-http-accept-push-policy-00&quot;&gt; Accept-Push-Policy Header Field&lt;/a&gt; where a client can, for each request, define what kind of PUSHes it accepts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb4d9ef1c32e9f496aa7b24b0c1c3c446c37821" translate="yes" xml:space="preserve">
          <source>Another frequent use of the &lt;code&gt;Satisfy&lt;/code&gt; directive is to relax access restrictions for a subdirectory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e350e00b6977b0ea5b4c1b1e1bbcf0dd9cfbf0" translate="yes" xml:space="preserve">
          <source>Another option for dynamically generated virtual hosts is &lt;code&gt;&lt;a href=&quot;../mod/mod_macro&quot;&gt;mod_macro&lt;/a&gt;&lt;/code&gt;, with which you can create a virtualhost template, and invoke it for multiple hostnames. An example of this is provided in the &lt;strong&gt;Usage&lt;/strong&gt; section of the module documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63997b6de4f01ff9fd60376ae1947935e3de92f" translate="yes" xml:space="preserve">
          <source>Another option is to have content cached before personalisation is applied by &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; (or another content processing filter). In this example templates containing tags understood by &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; are cached before being parsed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b4b192a75236beaba05ff6ab4595dae6ba4159" translate="yes" xml:space="preserve">
          <source>Another option is to render the login form using a CGI script or other dynamic technology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bdb81d546aad0407b55867911b20e37801af507" translate="yes" xml:space="preserve">
          <source>Another solution is to disable the ability to run scripts and programs from SSI pages. To do this replace &lt;code&gt;Includes&lt;/code&gt; with &lt;code&gt;IncludesNOEXEC&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;../mod/core#options&quot;&gt;Options&lt;/a&gt;&lt;/code&gt; directive. Note that users may still use &lt;code&gt;&amp;lt;--#include virtual=&quot;...&quot; --&amp;gt;&lt;/code&gt; to execute CGI scripts if these scripts are in directories designated by a &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220e5d2b0eb19a3a61587775481e3169013276ba" translate="yes" xml:space="preserve">
          <source>Another solution that has been considered but never implemented is to partially serialize the loop -- that is, let in a certain number of processes. This would only be of interest on multiprocessor boxes where it's possible that multiple children could run simultaneously, and the serialization actually doesn't take advantage of the full bandwidth. This is a possible area of future investigation, but priority remains low because highly parallel web servers are not the norm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa2038e4b9104796d9a72f2a0c0a5856dc64961" translate="yes" xml:space="preserve">
          <source>Another solution, the one used by Apache, is to serialize entry into the inner loop. The loop looks like this (differences highlighted):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18bf22f9a6c129b4fc138999bf089c8a1437e301" translate="yes" xml:space="preserve">
          <source>Another thing to watch out for is is memory consumption. Since HTTP/2 keeps more state on the server to manage all the open request, priorities for and dependencies between them, it will always need more memory than HTTP/1.1 processing. There are three directives which steer the memory footprint of a HTTP/2 connection: &lt;code&gt;&lt;a href=&quot;#h2maxsessionstreams&quot;&gt;H2MaxSessionStreams&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#h2windowsize&quot;&gt;H2WindowSize&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#h2streammaxmemsize&quot;&gt;H2StreamMaxMemSize&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b924a1143ee1a49d988d75be08fb81e7a193adc3" translate="yes" xml:space="preserve">
          <source>Another tool to maintain a DBM password database is &lt;code&gt;&lt;a href=&quot;htdbm&quot;&gt;htdbm&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b8ba8e68070289724e73c84f6499fefa1a2d85" translate="yes" xml:space="preserve">
          <source>Another way to perform log rotation is using &lt;a href=&quot;#piped&quot;&gt;piped logs&lt;/a&gt; as discussed in the next section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec38ef4e2cfbeea5f650366d0b29bf8b76d1efd" translate="yes" xml:space="preserve">
          <source>Answers in the User Manual's F.A.Q. List (this)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5059a9730a5f0cb046dba19165aa932a396c6d" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;text/html&lt;/code&gt; file that has the user-execute bit set will be treated as a server-parsed html document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1de723852363fae614357d55c9d3f26f835a0f5" translate="yes" xml:space="preserve">
          <source>Any address mentioned in the argument to a virtualhost that never appears in another virtual host is a strictly IP-based virtual host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cf1ed9868947bfafef2fc60802747b32d3df20" translate="yes" xml:space="preserve">
          <source>Any arbitrary method name may be used. &lt;strong&gt;Method names are case-sensitive&lt;/strong&gt;, so &lt;code&gt;Script PUT&lt;/code&gt; and &lt;code&gt;Script put&lt;/code&gt; have two entirely different effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9dc036e4804a87b7246b15f655bb16319598a61" translate="yes" xml:space="preserve">
          <source>Any errors during Apache startup are logged into the Windows event log when running on Windows NT. This mechanism acts as a backup for those situations where Apache is not yet prepared to use the &lt;code&gt;error.log&lt;/code&gt; file. You can review the Windows Application Event Log by using the Event Viewer, e.g. Start - Settings - Control Panel - Administrative Tools - Event Viewer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299fe00e24c1928ea6728c24ad4c33baa2dde42c" translate="yes" xml:space="preserve">
          <source>Any file that has the handler &lt;code&gt;cgi-script&lt;/code&gt; will be treated as a CGI script, and run by the server, with its output being returned to the client. Files acquire this handler either by having a name containing an extension defined by the &lt;code&gt;&lt;a href=&quot;mod_mime#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt; directive, or by being in a &lt;code&gt;&lt;a href=&quot;mod_alias#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0dfedc663b7c75786ce9422ea0e9fc36ec64aa" translate="yes" xml:space="preserve">
          <source>Any location on the server where DAV is enabled should be protected by authentication. The use of HTTP Basic Authentication is not recommended. You should use at least HTTP Digest Authentication, which is provided by the &lt;code&gt;&lt;a href=&quot;mod_auth_digest&quot;&gt;mod_auth_digest&lt;/a&gt;&lt;/code&gt; module. Nearly all WebDAV clients support this authentication method. An alternative is Basic Authentication over an &lt;a href=&quot;../ssl/index&quot;&gt;SSL&lt;/a&gt; enabled connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793d1ee17a92055d05f139cf6963a2e0d5987aa3" translate="yes" xml:space="preserve">
          <source>Any number slashes in the &lt;var&gt;URL-path&lt;/var&gt; parameter matches any number of slashes in the requested URL-path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb64e8d2f7ba4ebebe511c3235047dad19c1c96" translate="yes" xml:space="preserve">
          <source>Any of the techniques discussed here can be extended to any number of IP addresses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4f0b648f2206dfd604b02d31f4734cb1e5eed7" translate="yes" xml:space="preserve">
          <source>Any option preceded by a '+' is added to the already set options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4f001b1e41411b1940e3ac03315c2990084df6" translate="yes" xml:space="preserve">
          <source>Any option preceded by a '-' is removed from the already set options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd2f2f6ba109325a3c3bf3b45acb1a594a65850" translate="yes" xml:space="preserve">
          <source>Any option without a '+' or a '-' will be set, removing any other already set option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78bdf61bfcf4a5479646c789f709157746d0b50" translate="yes" xml:space="preserve">
          <source>Any other variable (either ones that you define, or normal environment variables) can be used in conditional statements. See &lt;a href=&quot;../expr&quot;&gt;Expressions in Apache HTTP Server&lt;/a&gt; for more information on the expression evaluation engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfdbd0b6b87142dc05d0e0130434f313d2f99db8" translate="yes" xml:space="preserve">
          <source>Any port in the &lt;code&gt;Host:&lt;/code&gt; header field is never used during the matching process. Apache always uses the real port to which the client sent the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7020a25a10e92099dac9171fef9799d8e043e4cc" translate="yes" xml:space="preserve">
          <source>Any request that doesn't match an existing &lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; is handled by the global server configuration, regardless of the hostname or ServerName.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="892488bb26c73dcbc79f1b488b12d769f54a7c7e" translate="yes" xml:space="preserve">
          <source>Any request to an address other than &lt;code&gt;172.20.30.50&lt;/code&gt; will be served from the main server. A request to &lt;code&gt;172.20.30.50&lt;/code&gt; with an unknown hostname, or no &lt;code&gt;Host:&lt;/code&gt; header, will be served from &lt;code&gt;www.example.com&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011db10badb40dfd3e581a6d3dd016e19f9ee9f0" translate="yes" xml:space="preserve">
          <source>Any use of &lt;code&gt;*&lt;/code&gt; in a virtual host declaration will have higher precedence than &lt;code&gt;_default_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b74e56234dfeb02209f044ea2407b585f629a9" translate="yes" xml:space="preserve">
          <source>Any vhost that includes the magic &lt;code&gt;_default_&lt;/code&gt; wildcard is given the same &lt;code&gt;ServerName&lt;/code&gt; as the main server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a713524f9bb259f290d8c9e29851bc73ecfe96" translate="yes" xml:space="preserve">
          <source>Any web/database application needs to secure itself against SQL injection attacks. In most cases, Apache DBD is safe, because applications use prepared statements, and untrusted inputs are only ever used as data. Of course, if you use it via third-party modules, you should ascertain what precautions they may require.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c8c59899770777ef2e7d11c958d27bd306c5d8" translate="yes" xml:space="preserve">
          <source>Anyone can encrypt a message using the public key, but only the owner of the private key will be able to read it. In this way, Alice can send private messages to the owner of a key-pair (the bank), by encrypting them using their public key. Only the bank will be able to decrypt them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696a350ae172804d359e63347399f8a8a0958d75" translate="yes" xml:space="preserve">
          <source>Anyone who can write to the directory where Apache httpd is writing a log file can almost certainly gain access to the uid that the server is started as, which is normally root. Do &lt;em&gt;NOT&lt;/em&gt; give people write access to the directory the logs are stored in without being aware of the consequences; see the &lt;a href=&quot;misc/security_tips&quot;&gt;security tips&lt;/a&gt; document for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77decfe48d803b20754be2edee6eb7c51f2e2e9c" translate="yes" xml:space="preserve">
          <source>Anything that's not recognized as a variable or an operator is treated as a string. Strings can also be quoted: &lt;code&gt;'string'&lt;/code&gt;. Unquoted strings can't contain whitespace (blanks and tabs) because it is used to separate tokens such as variables. If multiple strings are found in a row, they are concatenated using blanks. So,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cdce832a31fff9cfea709bd5832cbc59155143d" translate="yes" xml:space="preserve">
          <source>Apache 2.0 for NetWare can also be run in a NetWare 5.1 environment as long as the latest service pack or the latest version of the &lt;a href=&quot;http://developer.novell.com/ndk/libc.htm&quot;&gt;NetWare Libraries for C (LibC)&lt;/a&gt; has been installed . &lt;strong&gt;WARNING:&lt;/strong&gt; Apache 2.0 for NetWare has not been targeted for or tested in this environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff9a1de64e37e2000945734a729678a1ea3a3fa" translate="yes" xml:space="preserve">
          <source>Apache 2.0 for NetWare includes a set of command line directives that can be used to modify or display information about the running instance of the web server. These directives are only available while Apache is running. Each of these directives must be preceded by the keyword &lt;code&gt;APACHE2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6acee6bdeb95e440e12444380df900be960fbd8e" translate="yes" xml:space="preserve">
          <source>Apache 2.0 is designed to run on NetWare 6.0 service pack 3 and above. If you are running a service pack less than SP3, you must install the latest &lt;a href=&quot;http://developer.novell.com/ndk/libc.htm&quot;&gt;NetWare Libraries for C (LibC)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4068b7a028355ceb06747357ed3fa37f23812aba" translate="yes" xml:space="preserve">
          <source>Apache 2.x is a general-purpose webserver, designed to provide a balance of flexibility, portability, and performance. Although it has not been designed specifically to set benchmark records, Apache 2.x is capable of high performance in many real-world situations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc18489bf2da8404e1a756981ef53e47c621e3b" translate="yes" xml:space="preserve">
          <source>Apache 2.x supports pluggable concurrency models, called &lt;a href=&quot;../mpm&quot;&gt;Multi-Processing Modules&lt;/a&gt; (MPMs). When building Apache, you must choose an MPM to use. There are platform-specific MPMs for some platforms: &lt;code&gt;&lt;a href=&quot;../mod/mpm_netware&quot;&gt;mpm_netware&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/mpmt_os2&quot;&gt;mpmt_os2&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../mod/mpm_winnt&quot;&gt;mpm_winnt&lt;/a&gt;&lt;/code&gt;. For general Unix-type systems, there are several MPMs from which to choose. The choice of MPM can affect the speed and scalability of the httpd:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49846cdd9391b7acd802eaaf110ec447b7ad372d" translate="yes" xml:space="preserve">
          <source>Apache Core Features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce8d600f85b52fa8fc3f2f340ae01aa21b89046b" translate="yes" xml:space="preserve">
          <source>Apache DBD API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7652c077d70c68ed9b8f67767958666702a13728" translate="yes" xml:space="preserve">
          <source>Apache HTTP Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92dbbca75947f168c57da17bcb383976d5a4bc7" translate="yes" xml:space="preserve">
          <source>Apache HTTP Server 2.0 extends this modular design to the most basic functions of a web server. The server ships with a selection of Multi-Processing Modules (MPMs) which are responsible for binding to network ports on the machine, accepting requests, and dispatching children to handle the requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79842698555ce0ecbca29a0a5ca2da54f976c81" translate="yes" xml:space="preserve">
          <source>Apache HTTP Server 2.3.12 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2396d18661e5ae6e412282e8f24a52ba82ca4588" translate="yes" xml:space="preserve">
          <source>Apache HTTP Server 2.3.3 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80a42ea5bde64c28a80194d2f94db061876f5e9" translate="yes" xml:space="preserve">
          <source>Apache HTTP Server 2.3.5 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc3a30228688a1b5e0554d194812019b47503eb9" translate="yes" xml:space="preserve">
          <source>Apache HTTP Server 2.4.13 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d1da663202753ce7188fd354a11d5e623c7882" translate="yes" xml:space="preserve">
          <source>Apache HTTP Server 2.4.5 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae78c08a02db0eb4a55a32e4dfa7799a30ddef0" translate="yes" xml:space="preserve">
          <source>Apache HTTP Server 2.4.7 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2da5b1908106661fe677a358f0a3f721eb2d3c" translate="yes" xml:space="preserve">
          <source>Apache HTTP Server Log Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c836acc26147a644b3b9a310a6412e29295cf081" translate="yes" xml:space="preserve">
          <source>Apache HTTP Server Tutorial: .htaccess files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a89e43e2de22b72ff64d4750947bb1ba21c49be" translate="yes" xml:space="preserve">
          <source>Apache HTTP Server Version 2.4 Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74dccbdaada3821780ec0d3393f369ebc3356eac" translate="yes" xml:space="preserve">
          <source>Apache HTTP Server Virtual Host documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c96e8d6a1a2bc1128750a855aaa61dba9f6b77" translate="yes" xml:space="preserve">
          <source>Apache HTTP Server always tries to maintain a pool of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0b476d5bccbf432079fbbeb7c57282859a1905" translate="yes" xml:space="preserve">
          <source>Apache HTTP Server can be configured in both a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0235f6c3aa39bef0abe99395cf81842c60fd71" translate="yes" xml:space="preserve">
          <source>Apache HTTP Server is configured by placing &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/mod/directives.html&quot;&gt;directives&lt;/a&gt; in plain text configuration files. The main configuration file is usually called &lt;code&gt;httpd.conf&lt;/code&gt;. The location of this file is set at compile-time, but may be overridden with the &lt;code&gt;-f&lt;/code&gt; command line flag. In addition, other configuration files may be added using the &lt;code&gt;&lt;a href=&quot;mod/core#include&quot;&gt;Include&lt;/a&gt;&lt;/code&gt; directive, and wildcards can be used to include many configuration files. Any directive may be placed in any of these configuration files. Changes to the main configuration files are only recognized by httpd when it is started or restarted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33982e208c071010199e39eabe4dc9d882695cb" translate="yes" xml:space="preserve">
          <source>Apache HTTP Server uses a scoreboard to communicate between its parent and child processes. Some architectures require a file to facilitate this communication. If the file is left unspecified, Apache httpd first attempts to create the scoreboard entirely in memory (using anonymous shared memory) and, failing that, will attempt to create the file on disk (using file-based shared memory). Specifying this directive causes Apache httpd to always create the file on the disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254fb200ca44e3ef4f8f4b6473967756352e71d9" translate="yes" xml:space="preserve">
          <source>Apache HTTP Server versions later than 2.2 will not run on any operating system earlier than Windows 2000.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3f724bef6b68f309c38a10f6e893baaeeb3794" translate="yes" xml:space="preserve">
          <source>Apache HTTP Server virtual host documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ccf20113a0124d325167f74ecea3702a3142577" translate="yes" xml:space="preserve">
          <source>Apache HTTP server benchmarking tool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39dd44815b66b9f00c9b56be11b4f3726a3a5619" translate="yes" xml:space="preserve">
          <source>Apache HTTP server control interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9600184f2238e7589b13d0c92ac8add43dc526" translate="yes" xml:space="preserve">
          <source>Apache HTTP server version string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d3649bc2051a4d98c765232f5183b6608fe9681" translate="yes" xml:space="preserve">
          <source>Apache HTTPD supports content negotiation as described in the HTTP/1.1 specification. It can choose the best representation of a resource based on the browser-supplied preferences for media type, languages, character set and encoding. It also implements a couple of features to give more intelligent handling of requests from browsers that send incomplete negotiation information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c18711c4e127a270427f353a40e7ae413b0223" translate="yes" xml:space="preserve">
          <source>Apache IP-based Virtual Host Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38082f070e53c753b7c51e215f2557e4b877c008" translate="yes" xml:space="preserve">
          <source>Apache License</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533164bd89599edd8f09a2aa11afd98d8ff7633d" translate="yes" xml:space="preserve">
          <source>Apache Lounge</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="334bcebb35d4afa57d0d13ef3b848d977c505840" translate="yes" xml:space="preserve">
          <source>Apache MPM Common Directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219cb308ef2237086cef2d6b8cd661490155515d" translate="yes" xml:space="preserve">
          <source>Apache MPM event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65eae6c7ade91fd5bf8f1e593124fc08f1e989fe" translate="yes" xml:space="preserve">
          <source>Apache MPM netware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64a1d04a8d021f5718217d562d2524740800611" translate="yes" xml:space="preserve">
          <source>Apache MPM os2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e605efe4466e08adb940ba764077c868eb0782" translate="yes" xml:space="preserve">
          <source>Apache MPM prefork</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a229f167517cdcc76c0a5097e9edf1bb358b4c" translate="yes" xml:space="preserve">
          <source>Apache MPM winnt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7a90dc6048b0a9a03e898372a2988b92a6ed3e" translate="yes" xml:space="preserve">
          <source>Apache MPM worker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c60df4ae873b65e3ac94973e5bc2f377ffb755a" translate="yes" xml:space="preserve">
          <source>Apache Miscellaneous Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6295adccb3f0dbb1d80ad085868d593d5e2768" translate="yes" xml:space="preserve">
          <source>Apache Module mod_access_compat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736c59338716667b55e4a614424d956ed9adcf86" translate="yes" xml:space="preserve">
          <source>Apache Module mod_actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c71a37d5574aedc989601a2e615ced10284b8d" translate="yes" xml:space="preserve">
          <source>Apache Module mod_alias</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795e861c82063399f819fbfa39e32c1a58cdb110" translate="yes" xml:space="preserve">
          <source>Apache Module mod_allowmethods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1689d40297b1cd5c7536d7ff5ab67428955be780" translate="yes" xml:space="preserve">
          <source>Apache Module mod_asis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="439dccebc6eb11db943e305c05fcd97db6484a6b" translate="yes" xml:space="preserve">
          <source>Apache Module mod_auth_basic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2456d3105eddda01db8f28bc1cfec101281a002" translate="yes" xml:space="preserve">
          <source>Apache Module mod_auth_digest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ad20efd229de4d223d27814321b562adf5d3dd" translate="yes" xml:space="preserve">
          <source>Apache Module mod_auth_form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4afd8eca8ca128379dc8bcc31956f74b42b4702c" translate="yes" xml:space="preserve">
          <source>Apache Module mod_authn_anon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a010cb09753c78263f08b2c3a5dd77dfb0c93a82" translate="yes" xml:space="preserve">
          <source>Apache Module mod_authn_core</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3646e3b4cca5f5ae8fbc09f9e02b160525327dd7" translate="yes" xml:space="preserve">
          <source>Apache Module mod_authn_dbd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a87e611d8630452ff6961579e3391744ee25923" translate="yes" xml:space="preserve">
          <source>Apache Module mod_authn_dbm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ba1178a138216340d1fde69caf5e57f6b2c9ed" translate="yes" xml:space="preserve">
          <source>Apache Module mod_authn_file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d425af23f6273940f92df4f6e288d5f1681e44a2" translate="yes" xml:space="preserve">
          <source>Apache Module mod_authn_socache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a966a8b5db0082e1410e7db3b1c8bab881eaf3" translate="yes" xml:space="preserve">
          <source>Apache Module mod_authnz_fcgi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e560e4fad691f74a36a51f1764a548f1c9fff7" translate="yes" xml:space="preserve">
          <source>Apache Module mod_authnz_ldap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1e2d619d005f853201fd788c1446097ce40ec5" translate="yes" xml:space="preserve">
          <source>Apache Module mod_authz_core</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="214a09d9725576b0c4c645b567042fd7b9e08133" translate="yes" xml:space="preserve">
          <source>Apache Module mod_authz_dbd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850a661b22571cebc99a8b75f182aad04d428065" translate="yes" xml:space="preserve">
          <source>Apache Module mod_authz_dbm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6bcd18a1d67584d72b47de7d8f78c702dac4e5b" translate="yes" xml:space="preserve">
          <source>Apache Module mod_authz_groupfile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a948cbc176a9189ba09fadb9b78661ff5db4249b" translate="yes" xml:space="preserve">
          <source>Apache Module mod_authz_host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd84b1b387daa9c0555d4ae8740f193e870a0da" translate="yes" xml:space="preserve">
          <source>Apache Module mod_authz_owner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa5609032ac161f71047cc684553cd6bb1416ad" translate="yes" xml:space="preserve">
          <source>Apache Module mod_authz_user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a08115544353de1cebaf2c6dd8190905085af6b" translate="yes" xml:space="preserve">
          <source>Apache Module mod_autoindex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7af897d4329bb91792e7e9dd6b857c585dea083" translate="yes" xml:space="preserve">
          <source>Apache Module mod_brotli</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8113f700423c372711bb0d9df13fce17f5bef28d" translate="yes" xml:space="preserve">
          <source>Apache Module mod_buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390276b105b41a4c8a41d84d132b16209d011f23" translate="yes" xml:space="preserve">
          <source>Apache Module mod_cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b6ec3887999856eb123facee7879976f105350" translate="yes" xml:space="preserve">
          <source>Apache Module mod_cache_disk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d26538722e57c9efc8c33e23330f72099b9fbe4" translate="yes" xml:space="preserve">
          <source>Apache Module mod_cache_socache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c992cd3b59d5c20c12409181067692749e6ad574" translate="yes" xml:space="preserve">
          <source>Apache Module mod_cern_meta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6d8a1add0e66f4b4b5169d4d3847c33366b280" translate="yes" xml:space="preserve">
          <source>Apache Module mod_cgi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5eb2862b2c468df06119d64726bcff4132ed9b" translate="yes" xml:space="preserve">
          <source>Apache Module mod_cgid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582a0dcf14cb12737896548dcccfcc5ff9474ce0" translate="yes" xml:space="preserve">
          <source>Apache Module mod_charset_lite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11551925b888993b9b4c4010ce3516a25f760060" translate="yes" xml:space="preserve">
          <source>Apache Module mod_data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6302ad9fa86842bb161aaf6233367b2803cba31" translate="yes" xml:space="preserve">
          <source>Apache Module mod_dav</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29a15b4c538d7853a1e8b30b3b288382699ddce" translate="yes" xml:space="preserve">
          <source>Apache Module mod_dav_fs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33d32d4294212bd1ff9ad2934a7e8e0d0f529e2" translate="yes" xml:space="preserve">
          <source>Apache Module mod_dav_lock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bde30382e30d876f254e2a439d859e8b5a5ea69" translate="yes" xml:space="preserve">
          <source>Apache Module mod_dbd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032510ed59c456251a2b0503b2a7a5f08e7570ed" translate="yes" xml:space="preserve">
          <source>Apache Module mod_deflate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e7708020970d8f4f6960884876a67c51859b19" translate="yes" xml:space="preserve">
          <source>Apache Module mod_dialup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c5e106da9bddd239d09b0df2bb5c7276d1598c7" translate="yes" xml:space="preserve">
          <source>Apache Module mod_dir</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40b16e4a37f8657ffa626e14ab98e88317545d4" translate="yes" xml:space="preserve">
          <source>Apache Module mod_dumpio</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee18f21793adba4ec5b3f30bf22e22095b67041" translate="yes" xml:space="preserve">
          <source>Apache Module mod_echo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078681aa139f263dbd7ed936a9981861284b00cb" translate="yes" xml:space="preserve">
          <source>Apache Module mod_env</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade049f4b3076955aa15d0694d8eef18b719c1f0" translate="yes" xml:space="preserve">
          <source>Apache Module mod_example_hooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e087209a0510724ffc8ec70889e58bb5f32c43d9" translate="yes" xml:space="preserve">
          <source>Apache Module mod_expires</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47389bf87189ee1ffb3bfa9ceff79c5240252ced" translate="yes" xml:space="preserve">
          <source>Apache Module mod_ext_filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe0dd8de2944aec7d248748f5b2563786bf7010" translate="yes" xml:space="preserve">
          <source>Apache Module mod_file_cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357467312d04bea037cca429c26fc19ae741a378" translate="yes" xml:space="preserve">
          <source>Apache Module mod_filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6446bad365e17c785d09e27384e255156b6fff7f" translate="yes" xml:space="preserve">
          <source>Apache Module mod_headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72cae03dfe851b008d84dc325fe1ae893923d989" translate="yes" xml:space="preserve">
          <source>Apache Module mod_heartbeat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea71bafd70b42c7d6a06a705b7e6390e557c12e0" translate="yes" xml:space="preserve">
          <source>Apache Module mod_heartmonitor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c34f2ab454efd5f9e23e5822c21a5ba7cd5651" translate="yes" xml:space="preserve">
          <source>Apache Module mod_http2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b218115cacf06fe4500799d9811d844c317375" translate="yes" xml:space="preserve">
          <source>Apache Module mod_ident</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88cd0e8a1f71c3597bde5b09b7179df7d255960d" translate="yes" xml:space="preserve">
          <source>Apache Module mod_imagemap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e95146bdfd4f6675b454fbc8a747c31db5db713" translate="yes" xml:space="preserve">
          <source>Apache Module mod_include</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371bf78241572030e99ad0134f38ccf280888333" translate="yes" xml:space="preserve">
          <source>Apache Module mod_info</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca8b9bc696963f9daf5232b00341a0862af3bdd" translate="yes" xml:space="preserve">
          <source>Apache Module mod_isapi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38d4f2075cb2272bfa345b600a6291cdcb6831a" translate="yes" xml:space="preserve">
          <source>Apache Module mod_lbmethod_bybusyness</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a1042faf0e6dbb6480cad4efc342176976bcc7" translate="yes" xml:space="preserve">
          <source>Apache Module mod_lbmethod_byrequests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a805139b56abf24863863f616f8d88f30f848f" translate="yes" xml:space="preserve">
          <source>Apache Module mod_lbmethod_bytraffic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838318cfa65f5f8c20675cbf402f827ce0cc46c9" translate="yes" xml:space="preserve">
          <source>Apache Module mod_lbmethod_heartbeat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4273193542e8e7c351ebf60d436bcbb9cdbd05" translate="yes" xml:space="preserve">
          <source>Apache Module mod_ldap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628e7d88f57cbc7d3b3904145b84b5b172754829" translate="yes" xml:space="preserve">
          <source>Apache Module mod_log_config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27280a9aa55806162650e593fe4c0a92c08f7692" translate="yes" xml:space="preserve">
          <source>Apache Module mod_log_debug</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75607c91648f295ed39d4b6133c3b9ada33f4a78" translate="yes" xml:space="preserve">
          <source>Apache Module mod_log_forensic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d40bbc8e99053ec874d3033d07c49deaffc0805" translate="yes" xml:space="preserve">
          <source>Apache Module mod_logio</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8221d4cf2d9f956ca9bdab7c168720ad65fa5172" translate="yes" xml:space="preserve">
          <source>Apache Module mod_lua</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da8819c10e13f17aa99eca72e7f55f113db59a2" translate="yes" xml:space="preserve">
          <source>Apache Module mod_macro</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe14e8885634e3166839b615cabf5c6c8a585be" translate="yes" xml:space="preserve">
          <source>Apache Module mod_md</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2ace4b97515ebe32e4127c12addcd70570a80f" translate="yes" xml:space="preserve">
          <source>Apache Module mod_mime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f08ddb303750d29026eb470b34922b5b668a637" translate="yes" xml:space="preserve">
          <source>Apache Module mod_mime_magic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1855d9d35e6cc6454ad41821d51c5ee280bd7d33" translate="yes" xml:space="preserve">
          <source>Apache Module mod_negotiation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5820ed42d650aada080b3427e2d13f0f6b7b70" translate="yes" xml:space="preserve">
          <source>Apache Module mod_nw_ssl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf125270e691581a8e04fdbd0c821b251a403c0" translate="yes" xml:space="preserve">
          <source>Apache Module mod_privileges</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040e3bd62ddd374f753efeefbd9e9a4dc60e12cc" translate="yes" xml:space="preserve">
          <source>Apache Module mod_proxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee16bd21716c63d8bcd0bdd04fd9c130b888a0b" translate="yes" xml:space="preserve">
          <source>Apache Module mod_proxy_ajp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc01809321a719d9821cf5488b39e49c97e7f39" translate="yes" xml:space="preserve">
          <source>Apache Module mod_proxy_balancer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c484e90f279e714e8a7c1b89e902b16f3fda2517" translate="yes" xml:space="preserve">
          <source>Apache Module mod_proxy_connect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f14a9ca98b53e6bb3fe1427596d6bf3728928c8" translate="yes" xml:space="preserve">
          <source>Apache Module mod_proxy_express</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce8a116cadaf7f989d9baebc916745809190e552" translate="yes" xml:space="preserve">
          <source>Apache Module mod_proxy_fcgi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c467befe2cf9a6703d9ed1914dbb44b3ee38127b" translate="yes" xml:space="preserve">
          <source>Apache Module mod_proxy_fdpass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0594de35596075e09a84159c46c99338976751d" translate="yes" xml:space="preserve">
          <source>Apache Module mod_proxy_ftp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd9584d3cc9bb5f4c5670a6dfcdf4bdb1cb4067" translate="yes" xml:space="preserve">
          <source>Apache Module mod_proxy_hcheck</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7091031d6011667db428ad8e3f25f262556ac3" translate="yes" xml:space="preserve">
          <source>Apache Module mod_proxy_html</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22529e9a9bb035b3142ea7ff70d755e3b1d0d9d4" translate="yes" xml:space="preserve">
          <source>Apache Module mod_proxy_http</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1b3cbc31d57feb7cbed7c2f3d9c3f33f2ab992" translate="yes" xml:space="preserve">
          <source>Apache Module mod_proxy_http2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08baf7e79a68bf2010ea348bfd936adf438a173" translate="yes" xml:space="preserve">
          <source>Apache Module mod_proxy_scgi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f790149df0e386da096ab59cba3657a5bf4fde" translate="yes" xml:space="preserve">
          <source>Apache Module mod_proxy_uwsgi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7eb5fac1469c8371ad79c36e94d466b3f9cc77c" translate="yes" xml:space="preserve">
          <source>Apache Module mod_proxy_wstunnel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ee20f05e16071b04cb3c8f8282b668e2ba6489" translate="yes" xml:space="preserve">
          <source>Apache Module mod_ratelimit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d001979f151de48250df2b3276d44c814f1451fa" translate="yes" xml:space="preserve">
          <source>Apache Module mod_reflector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db411cb4e27231068ad2c657fead2b52ccdc56ed" translate="yes" xml:space="preserve">
          <source>Apache Module mod_remoteip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40aa622871d1a621b598597834020c8185d2f8d" translate="yes" xml:space="preserve">
          <source>Apache Module mod_reqtimeout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fe7c06a2cc1e02dc8fe8f6ccd91d2fa081c67f" translate="yes" xml:space="preserve">
          <source>Apache Module mod_request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746ea01dac4c13579187f4a78511370e58e0fdb4" translate="yes" xml:space="preserve">
          <source>Apache Module mod_rewrite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60fdf3a7f2dbb63a2fbb00fac059596d09792881" translate="yes" xml:space="preserve">
          <source>Apache Module mod_sed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391293078caff895715bd168e11139895bbea142" translate="yes" xml:space="preserve">
          <source>Apache Module mod_session</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c532171a01d782f7d91884715b47bc84a5b35a" translate="yes" xml:space="preserve">
          <source>Apache Module mod_session_cookie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3290babd1422a512c3934d4844a72975874003b4" translate="yes" xml:space="preserve">
          <source>Apache Module mod_session_crypto</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ca2be02dbaf9b58e9ce7eede6cbfee2c855a77" translate="yes" xml:space="preserve">
          <source>Apache Module mod_session_dbd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2185d6af552fcb583c79233682602ea76676ec5" translate="yes" xml:space="preserve">
          <source>Apache Module mod_setenvif</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8750051dc6adc1617b96b6b8bdec6b76d37957" translate="yes" xml:space="preserve">
          <source>Apache Module mod_slotmem_plain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c66fe8aefa656254e61a99050788011729ece48" translate="yes" xml:space="preserve">
          <source>Apache Module mod_slotmem_shm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5896f6bd64007ec414e2f26b1a8a1077d254ae" translate="yes" xml:space="preserve">
          <source>Apache Module mod_so</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2117e5cffd54069673d5f31e302362245cee7c" translate="yes" xml:space="preserve">
          <source>Apache Module mod_socache_dbm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6635fb5453196026dcad310909253f57f2f3774e" translate="yes" xml:space="preserve">
          <source>Apache Module mod_socache_dc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e2f3d30d9d71d18a9b0c70dc9b697a0afbaeba" translate="yes" xml:space="preserve">
          <source>Apache Module mod_socache_memcache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa96e38440e8bb1a253fed3958426a65d09db58" translate="yes" xml:space="preserve">
          <source>Apache Module mod_socache_shmcb</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad78e1725224be66fef7e8e7d6ae7e875b23d9be" translate="yes" xml:space="preserve">
          <source>Apache Module mod_speling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb71c4a359d34e4ea57b9b23ff8e03c932a6934" translate="yes" xml:space="preserve">
          <source>Apache Module mod_ssl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176c17035a1854afa7e8032b9e70b14e84ff2379" translate="yes" xml:space="preserve">
          <source>Apache Module mod_status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30662aa5728e098f6194fbe4153c89a5ccc09ea" translate="yes" xml:space="preserve">
          <source>Apache Module mod_substitute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cdd66925449b821fd354a41849832c840b167ed" translate="yes" xml:space="preserve">
          <source>Apache Module mod_suexec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3f11c2ca0ce60eea2fb378e6ea535b186d3440" translate="yes" xml:space="preserve">
          <source>Apache Module mod_unique_id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553669881f1bc65fef6f8403ff0bad111ae81926" translate="yes" xml:space="preserve">
          <source>Apache Module mod_unixd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccee63e7be04e66bfc5d63407775d96918f1a533" translate="yes" xml:space="preserve">
          <source>Apache Module mod_userdir</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea982bd6811e37c632416638e8e8737e2b068906" translate="yes" xml:space="preserve">
          <source>Apache Module mod_usertrack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9372348e5661532dd4269fcdb96b5f78e9f34ec" translate="yes" xml:space="preserve">
          <source>Apache Module mod_version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277789559b31c5b5d48628c14bcdc5f7ea77cb79" translate="yes" xml:space="preserve">
          <source>Apache Module mod_vhost_alias</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4aa7031ef00f313928542590abc4066176375a6" translate="yes" xml:space="preserve">
          <source>Apache Module mod_watchdog</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ead4e75be64d5d7fe48378edd2ed9a4f52b53d" translate="yes" xml:space="preserve">
          <source>Apache Module mod_xml2enc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317acec70f25027efb64f64563db2fce68113f8b" translate="yes" xml:space="preserve">
          <source>Apache Modules' Status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9100f7bb1e3ad7d04cfee1b3bbab0d6c7827e4a7" translate="yes" xml:space="preserve">
          <source>Apache Performance Tuning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b597ab97aa31b43a3e0c84c391a8e366edeaf2b" translate="yes" xml:space="preserve">
          <source>Apache SSL/TLS Encryption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095dabe1b07bef8a0f775f7d7937c6c5d400d853" translate="yes" xml:space="preserve">
          <source>Apache Tutorial: Dynamic Content with CGI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ec6052dc6711a09b667e6e705a238ca623897b" translate="yes" xml:space="preserve">
          <source>Apache Virtual Host documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf316639ff2ef442d5c2503382cb9e5f7babfa7" translate="yes" xml:space="preserve">
          <source>Apache accepts a response body following the header if it follows the blank line (two consecutive newlines) in the headers string argument. This body cannot contain NULLs, since the headers argument is NULL terminated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9236724f529e5544364dd9a0cbac037afdaf3bb3" translate="yes" xml:space="preserve">
          <source>Apache also uses a number of filters internally to perform functions like chunking and byte-range handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65418478f76f26585455f4c68182fc63272379b0" translate="yes" xml:space="preserve">
          <source>Apache automatically discriminates on the basis of the HTTP &lt;code&gt;Host&lt;/code&gt; header supplied by the client whenever the most specific match for an IP address and port combination is listed in multiple virtual hosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5c18643c00568cee607e9c217b4375ec7bb27b" translate="yes" xml:space="preserve">
          <source>Apache by default identifies the useragent with the connection's client_ip value, and the connection remote_host and remote_logname are derived from this value. These fields play a role in authentication, authorization and logging and other purposes by other loadable modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be8c9c4833e64e0f567e738c771d9516a627380" translate="yes" xml:space="preserve">
          <source>Apache can also be compiled using VC++'s Visual Studio development environment. To simplify this process, a Visual Studio workspace, &lt;code&gt;Apache.dsw&lt;/code&gt;, is provided. This workspace exposes the entire list of working &lt;code&gt;.dsp&lt;/code&gt; projects that are required for the complete Apache binary release. It includes dependencies between the projects to assure that they are built in the appropriate order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928080b7cc72a0607b7f2414ed5dd10566b4d6d9" translate="yes" xml:space="preserve">
          <source>Apache can also load ISAPI (Internet Server Application Programming Interface) extensions such as those used by Microsoft IIS and other Windows servers. &lt;a href=&quot;../mod/mod_isapi&quot;&gt;More information is available&lt;/a&gt;. Note that Apache &lt;strong&gt;cannot&lt;/strong&gt; load ISAPI Filters, and ISAPI Handlers with some Microsoft feature extensions will not work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a49b9af4bc2bb662a45e24753376c94c0658226" translate="yes" xml:space="preserve">
          <source>Apache can be built using the command line tools, or from within the Visual Studio IDE Workbench. The command line build requires the environment to reflect the &lt;code&gt;PATH&lt;/code&gt;, &lt;code&gt;INCLUDE&lt;/code&gt;, &lt;code&gt;LIB&lt;/code&gt; and other variables that can be configured with the &lt;code&gt;vcvars32.bat&lt;/code&gt; script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9dd9cafda06697aed8f23e1263ac64633b01df3" translate="yes" xml:space="preserve">
          <source>Apache can be configured to keep track of per user sessions stored on a particular server or group of servers. This functionality is similar to the sessions available in typical application servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad588a561e6ad3ce7d7caa7ec7289f4ced80a12" translate="yes" xml:space="preserve">
          <source>Apache comes with a load-balancing module - &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt; - which is far more flexible and featureful than anything you can cobble together using mod_rewrite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179d97b3d1c357d8aedc68b136708a592e20c459" translate="yes" xml:space="preserve">
          <source>Apache comes with a utility called the Apache Service Monitor. With it you can see and manage the state of all installed Apache services on any machine on your network. To be able to manage an Apache service with the monitor, you have to first install the service (either automatically via the installation or manually).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90714e04272b1c487c69d31ee588c02d5b2b1418" translate="yes" xml:space="preserve">
          <source>Apache considers this a no-op, since the session will be finished when the ISAPI returns from processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d8ba4c69021463bd69ef8b55de8f1fa45c38079" translate="yes" xml:space="preserve">
          <source>Apache for NetWare has the ability to load modules at runtime, without recompiling the server. If Apache is compiled normally, it will install a number of optional modules in the &lt;code&gt;\Apache2\modules&lt;/code&gt; directory. To activate these, or other modules, the &lt;code&gt;&lt;a href=&quot;../mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; directive must be used. For example, to active the status module, use the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4212afeee87b6300705ea6d170fe9d0bc942ce01" translate="yes" xml:space="preserve">
          <source>Apache for Windows contains the ability to load modules at runtime, without recompiling the server. If Apache is compiled normally, it will install a number of optional modules in the &lt;code&gt;\Apache2.4\modules&lt;/code&gt; directory. To activate these or other modules, the &lt;code&gt;&lt;a href=&quot;../mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; directive must be used. For example, to activate the status module, use the following (in addition to the status-activating directives in &lt;code&gt;access.conf&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f7e655bf699e70d66062ca6ed862149fb10c0b" translate="yes" xml:space="preserve">
          <source>Apache httpd Tutorial: Introduction to Server Side Includes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f17ce8aa136b0c85ce1c680f43c0c93d8b047670" translate="yes" xml:space="preserve">
          <source>Apache httpd access checker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55614de52bd69f41fa43f033e30faff1b1a04935" translate="yes" xml:space="preserve">
          <source>Apache httpd and OpenSSL version information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d35b6cf20c89e80c48d70ab74345661a24244e58" translate="yes" xml:space="preserve">
          <source>Apache httpd can more cleanly and efficiently support a wide variety of operating systems. In particular, the Windows version of the server is now much more efficient, since &lt;code&gt;&lt;a href=&quot;mod/mpm_winnt&quot;&gt;mpm_winnt&lt;/a&gt;&lt;/code&gt; can use native networking features in place of the POSIX layer used in Apache httpd 1.3. This benefit also extends to other operating systems that implement specialized MPMs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6451969f6fdf45b466b1e4df56fa510b257a17c7" translate="yes" xml:space="preserve">
          <source>Apache httpd is capable of writing error and access log files through a pipe to another process, rather than directly to a file. This capability dramatically increases the flexibility of logging, without adding code to the main server. In order to write logs to a pipe, simply replace the filename with the pipe character &quot;&lt;code&gt;|&lt;/code&gt;&quot;, followed by the name of the executable which should accept log entries on its standard input. The server will start the piped-log process when the server starts, and will restart it if it crashes while the server is running. (This last feature is why we can refer to this technique as &quot;reliable piped logging&quot;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a377936d8cd1f616f6d64b1359da370299891afd" translate="yes" xml:space="preserve">
          <source>Apache httpd uses &lt;code&gt;libtool&lt;/code&gt; and &lt;code&gt;autoconf&lt;/code&gt; to create a build environment that looks like many other Open Source projects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f1845e555386a25877420eb8b0f7a1affd3f95" translate="yes" xml:space="preserve">
          <source>Apache hypertext transfer protocol server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9afaa6e3cbc9260c8d434b9187d607759682227" translate="yes" xml:space="preserve">
          <source>Apache is configured by reading configuration files usually stored in the &lt;code&gt;conf&lt;/code&gt; directory. These are the same as files used to configure the Unix version, but there are a few different directives for Apache on NetWare. See the &lt;a href=&quot;../mod/index&quot;&gt;Apache module documentation&lt;/a&gt; for all the available directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19afd64889f06c9ba004898e19d7099fcc780b7c" translate="yes" xml:space="preserve">
          <source>Apache is configured by the files in the &lt;code&gt;conf&lt;/code&gt; subdirectory. These are the same files used to configure the Unix version, but there are a few different directives for Apache on Windows. See the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/mod/directives.html&quot;&gt;directive index&lt;/a&gt; for all the available directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a6e9c8838be5f89af975174bcde0c8b17f4c1b2" translate="yes" xml:space="preserve">
          <source>Apache may be installed to other volumes besides the default &lt;code&gt;SYS&lt;/code&gt; volume.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb5e1a344473b51fa90f0ec0cdeb9d8b48ebc75" translate="yes" xml:space="preserve">
          <source>Apache mod_rewrite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a113045b3eece4c13234362149b8df9e59263f65" translate="yes" xml:space="preserve">
          <source>Apache mod_rewrite Introduction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335e0e26663b0a414b633844c17c1b2aee41de2d" translate="yes" xml:space="preserve">
          <source>Apache mod_rewrite Technical Details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8102dba8f3f11d5d12231dea5d10761359363454" translate="yes" xml:space="preserve">
          <source>Apache modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf274f8f5b071423548412579f90c9dc6b3fbf0" translate="yes" xml:space="preserve">
          <source>Apache must be compiled with &lt;code&gt;&lt;a href=&quot;mod_auth_basic&quot;&gt;mod_auth_basic&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_authn_file&quot;&gt;mod_authn_file&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_authz_groupfile&quot;&gt;mod_authz_groupfile&lt;/a&gt;&lt;/code&gt; in order to use FrontPage support. This is because Apache will still use the &lt;code&gt;&lt;a href=&quot;mod_authz_groupfile&quot;&gt;mod_authz_groupfile&lt;/a&gt;&lt;/code&gt; group file for determine the extent of a user's access to the FrontPage web.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936bb290c636b46aae68352278ce1ead0db76566" translate="yes" xml:space="preserve">
          <source>Apache recognizes one format for digest-authentication passwords - the MD5 hash of the string &lt;code&gt;user:realm:password&lt;/code&gt; as a 32-character string of hexadecimal digits. &lt;code&gt;realm&lt;/code&gt; is the Authorization Realm argument to the &lt;code&gt;&lt;a href=&quot;../mod/mod_authn_core#authname&quot;&gt;AuthName&lt;/a&gt;&lt;/code&gt; directive in httpd.conf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def20ea89b3de67b9bbf64b30b4c33f72e67d87c" translate="yes" xml:space="preserve">
          <source>Apache returns &lt;code&gt;FALSE&lt;/code&gt; to any unsupported call to &lt;code&gt;ServerSupportFunction&lt;/code&gt;, and sets the &lt;code&gt;GetLastError&lt;/code&gt; value to &lt;code&gt;ERROR_INVALID_PARAMETER&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4c333cc8a936ae53ebf2f79751f100c9677376" translate="yes" xml:space="preserve">
          <source>Apache sends a &lt;code&gt;Content-encoding&lt;/code&gt; header with the resource, in order to tell the client browser about the encoding method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8388315c8b92390f398119c99ce8cc6de5b3fa12" translate="yes" xml:space="preserve">
          <source>Apache should respond with a welcome page and you should see &quot;It Works!&quot;. If nothing happens or you get an error, look in the &lt;code&gt;error.log&lt;/code&gt; file in the &lt;code&gt;logs&lt;/code&gt; subdirectory. If your host is not connected to the net, or if you have serious problems with your DNS (Domain Name Service) configuration, you may have to use this URL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b159c87409193c18346125af8f6259536ce0b36" translate="yes" xml:space="preserve">
          <source>Apache was one of the first servers to support IP-based virtual hosts right out of the box. Versions 1.1 and later of Apache support both IP-based and name-based virtual hosts (vhosts). The latter variant of virtual hosts is sometimes also called &lt;em&gt;host-based&lt;/em&gt; or &lt;em&gt;non-IP virtual hosts&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d39683fc85c69ea746368e5c234952f92bf372a" translate="yes" xml:space="preserve">
          <source>Apache will execute, and will remain running until it is stopped by pressing Control-C.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e1be0e7fe984ee20a3509308be55185e4b2b47b" translate="yes" xml:space="preserve">
          <source>Apache will look at the original request (the one that triggered the PUSH) and copy the following headers over to PUSH requests: &lt;code&gt;user-agent&lt;/code&gt;, &lt;code&gt;accept&lt;/code&gt;, &lt;code&gt;accept-encoding&lt;/code&gt;, &lt;code&gt;accept-language&lt;/code&gt;, &lt;code&gt;cache-control&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49826a8dc0c9be9cbf02119b2ea7b1028eeeecf" translate="yes" xml:space="preserve">
          <source>Apache will then try to determine its &lt;code&gt;&lt;a href=&quot;../mod/core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; by trying the following, in this order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c185e0ede2fc2a32ccd94b3cc50900c72a8186e" translate="yes" xml:space="preserve">
          <source>Apache will translate a virtual name to a physical name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c544305c01462728488d852fda169a18cf7641" translate="yes" xml:space="preserve">
          <source>Apache&amp;#x27;s Handler Use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88243ffd20a1254a2c11b86a371326d6458af276" translate="yes" xml:space="preserve">
          <source>Apache's &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; directive is used during the authorization phase to ensure that a user is allowed or denied access to a resource. mod_authz_host extends the authorization types with &lt;code&gt;ip&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;forward-dns&lt;/code&gt; and &lt;code&gt;local&lt;/code&gt;. Other authorization types may also be used but may require that additional authorization modules be loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d345b8e4b4007d52276b4ab104a93c1288ea32cf" translate="yes" xml:space="preserve">
          <source>Apache's &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; directives are used during the authorization phase to ensure that a user is allowed to access a resource. mod_authnz_ldap extends the authorization types with &lt;code&gt;ldap-user&lt;/code&gt;, &lt;code&gt;ldap-dn&lt;/code&gt;, &lt;code&gt;ldap-group&lt;/code&gt;, &lt;code&gt;ldap-attribute&lt;/code&gt; and &lt;code&gt;ldap-filter&lt;/code&gt;. Other authorization types may also be used but may require that additional authorization modules be loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c3c4263017ec5bbbb08741dfaa265ffec2b18c" translate="yes" xml:space="preserve">
          <source>Apache's &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; directives are used during the authorization phase to ensure that a user is allowed to access a resource. mod_authz_dbd extends the authorization types with &lt;code&gt;dbd-group&lt;/code&gt;, &lt;code&gt;dbd-login&lt;/code&gt; and &lt;code&gt;dbd-logout&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a5cad110f2d49959545bf7bf9c6ba097e2b874" translate="yes" xml:space="preserve">
          <source>Apache's &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; directives are used during the authorization phase to ensure that a user is allowed to access a resource. mod_authz_dbm extends the authorization types with &lt;code&gt;dbm-group&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcffa68835a0f0cc604335bda6dec6abe41292ef" translate="yes" xml:space="preserve">
          <source>Apache's &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; directives are used during the authorization phase to ensure that a user is allowed to access a resource. mod_authz_groupfile extends the authorization types with &lt;code&gt;group&lt;/code&gt; and &lt;code&gt;group-file&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03642f0255d642a3d9f3892a8faeb2e9038b8dde" translate="yes" xml:space="preserve">
          <source>Apache's &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; directives are used during the authorization phase to ensure that a user is allowed to access a resource. mod_authz_user extends the authorization types with &lt;code&gt;user&lt;/code&gt; and &lt;code&gt;valid-user&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba75535b3a15c10f18e83a8786c40c79072a63cf" translate="yes" xml:space="preserve">
          <source>Apache's Handler Use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140e31a66a6824ed87f7c46b4e5ce14c99d75222" translate="yes" xml:space="preserve">
          <source>Apache's ISAPI implementation conforms to all of the ISAPI 2.0 specification, except for some &quot;Microsoft-specific&quot; extensions dealing with asynchronous I/O. Apache's I/O model does not allow asynchronous reading and writing in a manner that the ISAPI could access. If an ISA tries to access unsupported features, including async I/O, a message is placed in the error log to help with debugging. Since these messages can become a flood, the directive &lt;code&gt;ISAPILogNotSupported Off&lt;/code&gt; exists to quiet this noise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e82910a860c8dd50a6c563556b7ec06e5fc641c" translate="yes" xml:space="preserve">
          <source>Apache's parent and children communicate with each other through something called the scoreboard. Ideally this should be implemented in shared memory. For those operating systems that we either have access to, or have been given detailed ports for, it typically is implemented using shared memory. The rest default to using an on-disk file. The on-disk file is not only slow, but it is unreliable (and less featured). Peruse the &lt;code&gt;src/main/conf.h&lt;/code&gt; file for your architecture, and look for either &lt;code&gt;USE_MMAP_SCOREBOARD&lt;/code&gt; or &lt;code&gt;USE_SHMGET_SCOREBOARD&lt;/code&gt;. Defining one of those two (as well as their companions &lt;code&gt;HAVE_MMAP&lt;/code&gt; and &lt;code&gt;HAVE_SHMGET&lt;/code&gt; respectively) enables the supplied shared memory code. If your system has another type of shared memory, edit the file &lt;code&gt;src/main/http_main.c&lt;/code&gt; and add the hooks necessary to use it in Apache. (Send us back a patch too, please.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae93a4e5fdaa591f3a4029ba7c33f6e85f0cd28" translate="yes" xml:space="preserve">
          <source>Apache-SSL 1.x &amp;amp; mod_ssl 2.0.x compatibility:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945df71a9dad234857251eb99002c397addbabed" translate="yes" xml:space="preserve">
          <source>Apache-SSL 1.x compatibility:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90bc7447d3c8ecb1febb5eed8dece065921d2dba" translate="yes" xml:space="preserve">
          <source>ApacheHaus</source>
          <target state="translated">ApacheHaus</target>
        </trans-unit>
        <trans-unit id="1d81cb4cf267959451462cd177c04bee5d7ce7de" translate="yes" xml:space="preserve">
          <source>Apart from &lt;code&gt;&lt;a href=&quot;mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt;, within each group the sections are processed in the order they appear in the configuration files. For example, a request for &lt;em&gt;/foo/bar&lt;/em&gt; will match &lt;code&gt;&amp;lt;Location &quot;/foo/bar&quot;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;Location &quot;/foo&quot;&amp;gt;&lt;/code&gt; (group 4 in this case): both sections will be evaluated but in the order they appear in the configuration files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68969aabc31a6acdadb4a33a05553f78c7d6de75" translate="yes" xml:space="preserve">
          <source>Apart from those two things, writing a CGI program will look a lot like any other program that you might write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1437d9fbc666d88a64f980d6d6743969418d1ac" translate="yes" xml:space="preserve">
          <source>Append a Caching header for responses with a HTTP status code of 200</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec04385189308649acd196e84ab0dda1dbebde1b" translate="yes" xml:space="preserve">
          <source>Append extra headers to the request. The argument is typically in the form of a valid header line, containing a colon-separated field-value pair (&lt;em&gt;i.e.&lt;/em&gt;, &lt;code&gt;&quot;Accept-Encoding: zip/zop;8bit&quot;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9694f63a6e90644bc8bb4b1911e5ae3e7fc9e9b1" translate="yes" xml:space="preserve">
          <source>Append the compression method onto the end of the ETag, causing compressed and uncompressed representations to have unique ETags. In another dynamic compression module, mod_deflate, this has been the default since 2.4.0. This setting prevents serving &quot;HTTP Not Modified&quot; (304) responses to conditional requests for compressed content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6658685c314406651e5cac1c1d366cb6839444" translate="yes" xml:space="preserve">
          <source>Append the current line to the hold buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7addd51e244706719ba2e6e69815c561dbd8fc85" translate="yes" xml:space="preserve">
          <source>Append the hold buffer to the current line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e9afc16f6cc31bc60eed57aa2325174759c976" translate="yes" xml:space="preserve">
          <source>Appendix: Detailed Analysis of a Trace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8397e6b12acd2b759e56feef2cc1a6ab002a407b" translate="yes" xml:space="preserve">
          <source>Appends any query string from the original request URL to any query string created in the rewrite target.&lt;em&gt;&lt;a href=&quot;../rewrite/flags#flag_qsa&quot;&gt;details ...&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfacd95a640a52376becc8ec9b8105eeceb19f3" translate="yes" xml:space="preserve">
          <source>Application process management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e97381d2c43e288a368dc1a723da9bc8d6048e" translate="yes" xml:space="preserve">
          <source>Applications behind &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558c702dafc415d5971008260e238a777122c4af" translate="yes" xml:space="preserve">
          <source>Applications might choose to manipulate the session outside the control of the Apache HTTP server. In this case, it is the responsibility of the application to read the session from the chosen storage mechanism, decrypt the session, update the session, encrypt the session and write the session to the chosen storage mechanism, as appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbac61e2b4a9decbb12b33423887d8d5a903e899" translate="yes" xml:space="preserve">
          <source>Applications that run within the webserver can optionally retrieve the value of the session from the &lt;strong&gt;HTTP_SESSION&lt;/strong&gt; environment variable. The session should be encoded as a &lt;strong&gt;application/x-www-form-urlencoded&lt;/strong&gt; string as described by the &lt;a href=&quot;http://www.w3.org/TR/html4/&quot;&gt;HTML specification&lt;/a&gt;. The environment variable is controlled by the setting of the &lt;code&gt;&lt;a href=&quot;#sessionenv&quot;&gt;SessionEnv&lt;/a&gt;&lt;/code&gt; directive. The session can be written to by the script by returning a &lt;strong&gt;application/x-www-form-urlencoded&lt;/strong&gt; response header with a name set by the &lt;code&gt;&lt;a href=&quot;#sessionheader&quot;&gt;SessionHeader&lt;/a&gt;&lt;/code&gt; directive. In both cases, any encryption or decryption, and the reading the session from or writing the session to the chosen storage mechanism is handled by the &lt;code&gt;&lt;a href=&quot;mod_session&quot;&gt;mod_session&lt;/a&gt;&lt;/code&gt; modules and corresponding configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34814b1d8bdcdf8e6862ca1bae8d5a7a1ed405ba" translate="yes" xml:space="preserve">
          <source>Applies also to RFC 5077 TLS session resumption in Apache 2.4.10 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7720287f72a957ed5131a9e4e5eebd973c2887f6" translate="yes" xml:space="preserve">
          <source>Applies the enclosed directives only to matching URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026ddfda0eb8df4f5d1a058e7c28076cd342d73a" translate="yes" xml:space="preserve">
          <source>Applies the enclosed directives only to regular-expression matching URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b45b6d867d2ce28cbcdb91918f640790e5a1d6" translate="yes" xml:space="preserve">
          <source>Apply any &lt;code&gt;FileInfo&lt;/code&gt; directives in &lt;code&gt;/home/.htaccess&lt;/code&gt;, &lt;code&gt;/home/web/.htaccess&lt;/code&gt; and &lt;code&gt;/home/web/dir/.htaccess&lt;/code&gt; in that order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3593e3d167fbd3dbd117e115f6ad138455442945" translate="yes" xml:space="preserve">
          <source>Apply directive &lt;code&gt;AllowOverride FileInfo&lt;/code&gt; (for directory &lt;code&gt;/home&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5670ac57dd94dd7c1c275b7c5cc32a4122eb29d1" translate="yes" xml:space="preserve">
          <source>Apply directive &lt;code&gt;AllowOverride None&lt;/code&gt; (disabling &lt;code&gt;.htaccess&lt;/code&gt; files).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ceaabb1f93b0ac2cf48d367051f7cbb02c5d886" translate="yes" xml:space="preserve">
          <source>Applying logic and ordering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcef47334458e260ecdb5b71e14b2af2c32b100" translate="yes" xml:space="preserve">
          <source>Appropriate Patches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7438d05c5adc72521df476257567667f09211f7a" translate="yes" xml:space="preserve">
          <source>Arguments to directives are separated by whitespace. If an argument contains spaces, you must enclose that argument in quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71361177226eb35d748e547153982e877f611b28" translate="yes" xml:space="preserve">
          <source>As a consequence of the difference in the stored values between Basic and Digest Authentication, converting from Digest Authentication to Basic Authentication generally requires that all users be assigned new passwords, as their existing passwords cannot be recovered from the password storage scheme imposed on those providers which support Digest Authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37742e91bb0b1d87523e1682da7ba779c293b5f8" translate="yes" xml:space="preserve">
          <source>As a degenerate case, a &lt;em&gt;SubNet&lt;/em&gt; with 32 valid bits is the equivalent to an &lt;var&gt;&lt;a href=&quot;#ipaddr&quot;&gt;IPAddr&lt;/a&gt;&lt;/var&gt;, while a &lt;var&gt;SubNet&lt;/var&gt; with zero valid bits (&lt;em&gt;e.g.&lt;/em&gt;, 0.0.0.0/0) is the same as the constant &lt;var&gt;_Default_&lt;/var&gt;, matching any IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66904739d054f0d15ea8a56bbac6d083395167fd" translate="yes" xml:space="preserve">
          <source>As a filter, &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; can be placed in front of content originating from any handler, including &lt;strong&gt;flat files&lt;/strong&gt; (served from a slow disk cached on a fast disk), the output of a &lt;strong&gt;CGI script&lt;/strong&gt; or &lt;strong&gt;dynamic content generator&lt;/strong&gt;, or content &lt;strong&gt;proxied from another server&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c399101d42497e7e5152d6236bd947c4737f14" translate="yes" xml:space="preserve">
          <source>As a further safety mechanism, locks have a configurable maximum age. Once this age has been reached, the lock is removed, and a new request is given the opportunity to create a new lock. This maximum age can be set using the &lt;code&gt;CacheLockMaxAge&lt;/code&gt; directive, and defaults to 5 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e97bac15fb751172d8382eb340ff143b60d0e61" translate="yes" xml:space="preserve">
          <source>As an Apache HTTP Server administrator, your most valuable assets are the log files, and, in particular, the error log. Troubleshooting any problem without the error log is like driving with your eyes closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de34ab94bd653ef44771d15c45759d58f907f8f" translate="yes" xml:space="preserve">
          <source>As an alternative approach you can use the ``&lt;code&gt;SSLPassPhraseDialog exec:/path/to/program&lt;/code&gt;'' facility. Bear in mind that this is neither more nor less secure, of course.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e427609bb514d6544aa8622205378a11870525f" translate="yes" xml:space="preserve">
          <source>As an alternative to having a dedicated login page for a website, it is possible to configure &lt;code&gt;&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt;&lt;/code&gt; to authenticate users inline, without being redirected to another page. This allows the state of the current page to be preserved during the login attempt. This can be useful in a situation where a time limited session is in force, and the session times out in the middle of the user request. The user can be re-authenticated in place, and they can continue where they left off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8458387134846e5efb05c333b4fd58f7c153a586" translate="yes" xml:space="preserve">
          <source>As an alternative, you can put the following into a &lt;a href=&quot;core#accessfilename&quot;&gt;&lt;code&gt;.htaccess&lt;/code&gt;&lt;/a&gt; file and then request the file &quot;test.example&quot; from that location:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd6a54b989ac68b501c59c4b9cd7f5d24b7403bf" translate="yes" xml:space="preserve">
          <source>As an example of a more complex request, this browser has been configured to accept French and English, but prefer French, and to accept various media types, preferring HTML over plain text or other text types, and preferring GIF or JPEG over other media types, but also allowing any other media type as a last resort:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883ffeee9996d4cd5851c040e9a44feae667beb9" translate="yes" xml:space="preserve">
          <source>As an introduction this chapter is aimed at readers who are familiar with the Web, HTTP, and Apache, but are not security experts. It is not intended to be a definitive guide to the SSL protocol, nor does it discuss specific techniques for managing certificates in an organization, or the important legal issues of patents and import and export restrictions. Rather, it is intended to provide a common background to &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; users by pulling together various concepts, definitions, and examples as a starting point for further exploration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc4d9f0437bbc8c37d533abde0a0200b6957678" translate="yes" xml:space="preserve">
          <source>As another example, consider logging requests from english-speakers to one log file, and non-english speakers to a different log file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0fbb0f366d97c2cf280c6328179f1298a5714b9" translate="yes" xml:space="preserve">
          <source>As described in RFC 2616, the no-store directive is intended to &quot;prevent the inadvertent release or retention of sensitive information (for example, on backup tapes).&quot; Enabling this option could store sensitive information in the cache. You are hereby warned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="546471915454a6cd3322ebfe7bf996855149e9ad" translate="yes" xml:space="preserve">
          <source>As discussed in &lt;a href=&quot;http://www.ics.uci.edu/pub/ietf/http/draft-ietf-http-connection-00.txt&quot;&gt; draft-ietf-http-connection-00.txt&lt;/a&gt; section 8, in order for an HTTP server to &lt;strong&gt;reliably&lt;/strong&gt; implement the protocol, it needs to shut down each direction of the communication independently. (Recall that a TCP connection is bi-directional. Each half is independent of the other.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4933d7424f908c6e82976daa77d5316e44c06c6d" translate="yes" xml:space="preserve">
          <source>As discussed in the documentation on &lt;a href=&quot;../sections&quot;&gt;Configuration Sections&lt;/a&gt;, &lt;code&gt;.htaccess&lt;/code&gt; files can override the &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; sections for the corresponding directory, but will be overridden by other types of configuration sections from the main configuration files. This fact can be used to enforce certain configurations, even in the presence of a liberal &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; setting. For example, to prevent script execution while allowing anything else to be set in &lt;code&gt;.htaccess&lt;/code&gt; you can use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d28358803761cb2554e153469557a80d643d2e" translate="yes" xml:space="preserve">
          <source>As far as operating system assumptions go, we assume that pids (process ids) fit in 32-bits. If the operating system uses more than 32-bits for a pid, the fix is trivial but must be performed in the code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac028c5194036c8abfe609c7d232ab4eb1a27e3" translate="yes" xml:space="preserve">
          <source>As for &lt;code&gt;on&lt;/code&gt; but also test the group-execute bit. If it is set, then set the &lt;code&gt;Last-modified&lt;/code&gt; date of the returned file to be the last modified time of the file. If it is not set, then no last-modified date is sent. Setting this bit allows clients and proxies to cache the result of the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca29910231a5873bae23a8364b54f20133678725" translate="yes" xml:space="preserve">
          <source>As for AliasMatch, the full range of &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#rexex&quot;&gt;regular expression&lt;/a&gt; power is available. For example, it is possible to construct an alias with case-insensitive matching of the URL-path:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790fb3ce05c330c482ffbd6b9bfcd9ed42a2ffd5" translate="yes" xml:space="preserve">
          <source>As is possible within many application servers, authentication modules can use a session for storing the username and password after login. The &lt;code&gt;&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt;&lt;/code&gt; saves the user's login name and password within the session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227d1b7d52d33b099448859453d67ae1ec1414c6" translate="yes" xml:space="preserve">
          <source>As noted above, this technique is trivial to circumvent, by simply modifying the &lt;code&gt;USER_AGENT&lt;/code&gt; request header. If you are experiencing a sustained attack, you should consider blocking it at a higher level, such as at your firewall.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9747942b767f405b23da89853d2792857a1f7923" translate="yes" xml:space="preserve">
          <source>As noted earlier, each certificate requires an issuer to assert the validity of the identity of the certificate subject, up to the top-level Certificate Authority (CA). This presents a problem: who can vouch for the certificate of the top-level authority, which has no issuer? In this unique case, the certificate is &quot;self-signed&quot;, so the issuer of the certificate is the same as the subject. Browsers are preconfigured to trust well-known certificate authorities, but it is important to exercise extra care in trusting a self-signed certificate. The wide publication of a public key by the root authority reduces the risk in trusting this key -- it would be obvious if someone else publicized a key claiming to be the authority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514374f88015ee25748376520cab5423decd2275" translate="yes" xml:space="preserve">
          <source>As of Apache 2.1 it is possible to specify the userID as &quot;&lt;code&gt;*&lt;/code&gt;&quot;. That allows &lt;em&gt;any&lt;/em&gt; supplied userID to be accepted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73295946c25953299e52d75f9936601fa2bd9f2a" translate="yes" xml:space="preserve">
          <source>As of Apache HTTP Server 2, we recommended that you only use the &lt;code&gt;&lt;a href=&quot;../programs/apachectl&quot;&gt;apachectl&lt;/a&gt;&lt;/code&gt; script, or the init script that your OS provides, for (re-)starting or stopping the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb4c692e206b4fa0f3a16cb7697a81c8ad21201" translate="yes" xml:space="preserve">
          <source>As of release 2.4.21, all configurations which enable either one of the &lt;code&gt;SSLProxyCheckPeerName&lt;/code&gt; or &lt;code&gt;SSLProxyCheckPeerCN&lt;/code&gt; options will use the new &lt;code&gt;&lt;a href=&quot;#sslproxycheckpeername&quot;&gt;SSLProxyCheckPeerName&lt;/a&gt;&lt;/code&gt; behavior, and all configurations which disable either one of the &lt;code&gt;SSLProxyCheckPeerName&lt;/code&gt; or &lt;code&gt;SSLProxyCheckPeerCN&lt;/code&gt; options will suppress all remote server certificate name validation. Only the following configuration will trigger the legacy certificate CN comparison in 2.4.21 and later releases;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c852a3ab182616ce6395a60008cacf97314b9ac4" translate="yes" xml:space="preserve">
          <source>As of version 2.2.16, you should use the &lt;code&gt;&lt;a href=&quot;../mod/mod_dir#fallbackresource&quot;&gt;FallbackResource&lt;/a&gt;&lt;/code&gt; directive for this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c0cbb7fa886a058d5df7d1b3e9bb9a321c9807" translate="yes" xml:space="preserve">
          <source>As of version 2.3.13, &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; has switched to the new &lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt; syntax for conditional expressions in &lt;code&gt;#if&lt;/code&gt; flow control elements. This directive allows to switch to the &lt;a href=&quot;#legacyexpr&quot;&gt;old syntax&lt;/a&gt; which is compatible with Apache HTTPD version 2.2.x and earlier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878c5be69c622f836b59cfbd412f8b650f7cc99c" translate="yes" xml:space="preserve">
          <source>As of version 2.4.7 if the value begins with &lt;var&gt;exec:&lt;/var&gt; the resulting command will be executed and the first line returned to standard output by the program will be used as the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1129c703a7f273c696eb7209e84fca3b6d5117" translate="yes" xml:space="preserve">
          <source>As originally specified, all versions of the SSL and TLS protocols (up to and including TLS/1.2) were vulnerable to a Man-in-the-Middle attack (&lt;a href=&quot;http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2009-3555&quot;&gt;CVE-2009-3555&lt;/a&gt;) during a renegotiation. This vulnerability allowed an attacker to &quot;prefix&quot; a chosen plaintext to the HTTP request as seen by the web server. A protocol extension was developed which fixed this vulnerability if supported by both client and server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebdfd578dfdc611c3e56e05bdc409fc4f0837882" translate="yes" xml:space="preserve">
          <source>As requests to end-users can be served from the cache, the cache itself can become a target for those wishing to deface or interfere with content. It is important to bear in mind that the cache must at all times be writable by the user which httpd is running as. This is in stark contrast to the usually recommended situation of maintaining all content unwritable by the Apache user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f6d4591a59239255dbf664956220d52c8cad10" translate="yes" xml:space="preserve">
          <source>As required by the underlying driver. Typically this will be used to pass whatever cannot be defaulted amongst username, password, database name, hostname and port number for connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a2e15640f37e1876482a41b4b37288960fb235" translate="yes" xml:space="preserve">
          <source>As the contents of the session are stored exclusively on the server, there is an expectation of privacy of the contents of the session. This does have performance and resource implications should a large number of sessions be present, or where a large number of webservers have to share sessions with one another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ff4effe09f5a7e6ff82841333f2bb9f22c075f" translate="yes" xml:space="preserve">
          <source>As the example shows, there can be several link headers added to a response, resulting in several pushes being triggered. There are no checks in the module to avoid pushing the same resource twice or more to one client. Use with care.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8637b0ac00fa9562ed96de393c41be1ee67f7269" translate="yes" xml:space="preserve">
          <source>As the term</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2eed02ca20142f92a5f8ea484321f029b48d8e" translate="yes" xml:space="preserve">
          <source>As traversing a filesystem hierarchy to examine potential &lt;code&gt;.htaccess&lt;/code&gt; files would be a very expensive operation, partially defeating the point of caching (to speed up requests), &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; makes no decision about whether a cached entity is authorised for serving. In other words; if &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; has cached some content, it will be served from the cache as long as that content has not expired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a545271f0cd9dcd84638face76dca52aeabaaa" translate="yes" xml:space="preserve">
          <source>As useful as the above is, it still has the deficiencies that should the (single) backend node go down, or become heavily loaded, that proxying those requests provides no real advantage. What is needed is the ability to define a set or group of backend servers which can handle such requests and for the reverse proxy to load balance and failover among them. This group is sometimes called a &lt;em&gt;cluster&lt;/em&gt; but Apache httpd's term is a &lt;em&gt;balancer&lt;/em&gt;. One defines a balancer by leveraging the &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#proxy&quot;&gt;&amp;lt;Proxy&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#balancermember&quot;&gt;BalancerMember&lt;/a&gt;&lt;/code&gt; directives as shown:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34f49c918223366de4ed2df19b4b0e7a0d2fd87" translate="yes" xml:space="preserve">
          <source>As with a graceful restart, a syntax check is run before the restart is attempted. If your configuration file has errors in it, the restart will not be attempted, and you will receive notification of the syntax error(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97134391fe30d793988032c8f5da7c9bfc971c13" translate="yes" xml:space="preserve">
          <source>As with conditional logging, piped logs are a very powerful tool, but they should not be used where a simpler solution like off-line post-processing is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d32d4df11f8d88a9c5c94452f5c37be7ed956f4" translate="yes" xml:space="preserve">
          <source>As with httpd in general, any IPv4-over-IPv6 mapped addresses are recorded in their IPv4 representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4307a2de546da9584f6d01ebd1b58e9b6b81e22" translate="yes" xml:space="preserve">
          <source>As with many techniques discussed in this document, mod_rewrite really isn't the best way to accomplish this task. You should, instead, consider using &lt;code&gt;&lt;a href=&quot;../mod/mod_vhost_alias&quot;&gt;mod_vhost_alias&lt;/a&gt;&lt;/code&gt; instead, as it will much more gracefully handle anything beyond serving static files, such as any dynamic content, and Alias resolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59597a485ee161684c63d396db74d48ba87c0df7" translate="yes" xml:space="preserve">
          <source>As with the &lt;code&gt;&lt;a href=&quot;mod/mod_file_cache#cachefile&quot;&gt;CacheFile&lt;/a&gt;&lt;/code&gt; directive, any changes in these files will not be picked up by httpd after it has started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c65d4787e8b0568efa645507d9ff30fd59cd5622" translate="yes" xml:space="preserve">
          <source>As with the [F] flag, you will typically use the &quot;-&quot; syntax for the rewrite target when using the [G] flag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff8f7bf36c2cee0a0760d4a3d4bd70863427d58" translate="yes" xml:space="preserve">
          <source>As with the input filter, the output filter supports denying/skipping a filter if it is deemed unwanted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ca453b45ba50f0f93c73c1bf72e018ae3095f2" translate="yes" xml:space="preserve">
          <source>As you become more advanced in CGI programming, it will become useful to understand more about what's happening behind the scenes. Specifically, how the browser and server communicate with one another. Because although it's all very well to write a program that prints &quot;Hello, World.&quot;, it's not particularly useful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b83a27e04ac3785e861e7c7493d9572f7d3534" translate="yes" xml:space="preserve">
          <source>As you can see, the log files only report what already has happened, so if the client had been able to access the &lt;code&gt;.htpasswd&lt;/code&gt; file you would have seen something similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8021f54ba71d9de26450df51e535ae467bd321c" translate="yes" xml:space="preserve">
          <source>Asks for a password and then adds an entry for &lt;var&gt;username&lt;/var&gt; to &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e23ad3519cc94db9fee7cc5b1545947e21e4d66d" translate="yes" xml:space="preserve">
          <source>Asks for a password and then checks if &lt;var&gt;username&lt;/var&gt; is in &lt;var&gt;filename&lt;/var&gt; and if it's password matches the specified one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97c25165d5f542247f2f113d8b73f0efbeb3d65" translate="yes" xml:space="preserve">
          <source>Assign arbitrary privileges to a virtual host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778625b7bf27b86fe17306767920f20a0f3087f2" translate="yes" xml:space="preserve">
          <source>Assign arbitrary privileges to subprocesses created by a virtual host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24e824b68118fff14de0778b82b4c9dbfb94b46" translate="yes" xml:space="preserve">
          <source>Assigned</source>
          <target state="translated">Assigned</target>
        </trans-unit>
        <trans-unit id="8f58e791089e894622b841633ce20aea21df820d" translate="yes" xml:space="preserve">
          <source>Associates the requested filename's extensions with the file's behavior (handlers and filters) and content (mime-type, language, character set and encoding)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1427c72eeec2cdc3965bacd17cd3923c81ed6d07" translate="yes" xml:space="preserve">
          <source>Assume again that we have recently renamed the page &lt;code&gt;foo.html&lt;/code&gt; to &lt;code&gt;bar.html&lt;/code&gt; and now want to provide the old URL for backward compatibility. But this time we want that the users of the old URL get hinted to the new one, i.e. their browsers Location field should change, too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a320f506a3a49164b84ebce0d1aa129931aca5" translate="yes" xml:space="preserve">
          <source>Assume we have recently renamed the page &lt;code&gt;foo.html&lt;/code&gt; to &lt;code&gt;bar.html&lt;/code&gt; and now want to provide the old URL for backward compatibility. However, we want that users of the old URL even not recognize that the pages was renamed - that is, we don't want the address to change in their browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862f592a36355eabd024fb6e5e4f18bf9f523819" translate="yes" xml:space="preserve">
          <source>Assume you have an Apache module named &lt;code&gt;mod_foo.c&lt;/code&gt; available which should extend Apache's server functionality. To accomplish this you first have to compile the C source into a shared object suitable for loading into the Apache server under runtime via the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ae0443e7c88cb252de285375f8c6316059cd3b" translate="yes" xml:space="preserve">
          <source>Async connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf12346749b18a8428d98592c6635a69a58b47db" translate="yes" xml:space="preserve">
          <source>Async connections would need a fixed dedicated worker thread with the previous MPMs but not with event. The status page of &lt;code&gt;&lt;a href=&quot;mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt; shows new columns under the Async connections section:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48c781b647ec3cc5106f5aa213d80a182b931b2" translate="yes" xml:space="preserve">
          <source>AsyncRequestWorkerFactor Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3ee068f4e34fd6f84e7d55d61ccc2843b3d5af" translate="yes" xml:space="preserve">
          <source>At present there are 6 environment variables exported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e594adfb9d75f7ee51566cd2aebd310835efd8" translate="yes" xml:space="preserve">
          <source>At present there is no way for a log rotation script using &lt;code&gt;USR1&lt;/code&gt; to know for certain that all children writing the pre-restart log have finished. We suggest that you use a suitable delay after sending the &lt;code&gt;USR1&lt;/code&gt; signal before you do anything with the old log. For example if most of your hits take less than 10 minutes to complete for users on low bandwidth links then you could wait 15 minutes before doing anything with the old log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c223d49a028ca21ce335dd192d15620959d2010" translate="yes" xml:space="preserve">
          <source>At present, there are 4 load balancer scheduler algorithms available for use: Request Counting (&lt;code&gt;&lt;a href=&quot;mod_lbmethod_byrequests&quot;&gt;mod_lbmethod_byrequests&lt;/a&gt;&lt;/code&gt;), Weighted Traffic Counting (&lt;code&gt;&lt;a href=&quot;mod_lbmethod_bytraffic&quot;&gt;mod_lbmethod_bytraffic&lt;/a&gt;&lt;/code&gt;), Pending Request Counting (&lt;code&gt;&lt;a href=&quot;mod_lbmethod_bybusyness&quot;&gt;mod_lbmethod_bybusyness&lt;/a&gt;&lt;/code&gt;) and Heartbeat Traffic Counting (&lt;code&gt;&lt;a href=&quot;mod_lbmethod_heartbeat&quot;&gt;mod_lbmethod_heartbeat&lt;/a&gt;&lt;/code&gt;). These are controlled via the &lt;code&gt;lbmethod&lt;/code&gt; value of the Balancer definition. See the &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; directive for more information, especially regarding how to configure the Balancer and BalancerMembers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e341199419950800d0c806981e9a3476ce5227a" translate="yes" xml:space="preserve">
          <source>At runtime, the core of httpd iterates over the defined configuration sections in the order described above to determine which ones apply to the current request. When the first section matches, it is considered the current configuration for this request. If a subsequent section matches too, then each module with a directive in either of the sections is given a chance to merge its configuration between the two sections. The result is a third configuration, and the process goes on until all the configuration sections are evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73694074b673e988ed834df2a1ca8b05ec3df304" translate="yes" xml:space="preserve">
          <source>At server startup time, each of these &lt;code&gt;&lt;a href=&quot;#use&quot;&gt;Use&lt;/a&gt;&lt;/code&gt; invocations would be expanded into a full virtualhost, as described by the &lt;code&gt;&lt;a href=&quot;#macro&quot;&gt;&amp;lt;Macro&amp;gt;&lt;/a&gt;&lt;/code&gt; definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="716fde468408f9392732259e1d3c6b79c9c3789a" translate="yes" xml:space="preserve">
          <source>At the Apache level, a module named &lt;a href=&quot;http://modsecurity.org/&quot;&gt;mod_security&lt;/a&gt; can be seen as a HTTP firewall and, provided you configure it finely enough, can help you enhance your dynamic content security.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69c69807478fff4d74e884d197b4d55217acd79" translate="yes" xml:space="preserve">
          <source>At the core of the session interface is a table of key and value pairs that are made accessible across browser requests. These pairs can be set to any valid string, as needed by the application making use of the session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58001a0de6b1ad6cfa0567fa2b31c9c7a259ef36" translate="yes" xml:space="preserve">
          <source>At the same time, &lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; should not interfere with a filter that wants to handle all aspects of the protocol. By default (i.e. in the absence of any &lt;code&gt;&lt;a href=&quot;#filterprotocol&quot;&gt;FilterProtocol&lt;/a&gt;&lt;/code&gt; directives), &lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; will leave the headers untouched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce458b494e9c62b3c816488a943a6a671fedeac" translate="yes" xml:space="preserve">
          <source>At the same time, the origin server defined freshness lifetime can be overridden by a client when the client presents their own &lt;code&gt;Cache-Control&lt;/code&gt; header within the request. In this case, the lowest freshness lifetime between request and response wins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f588194ec20980218283637dc67331facce8ad72" translate="yes" xml:space="preserve">
          <source>At the time of writing, this feature is largely untested, as modules in common use are designed to work with 2.0. Modules using it should test it carefully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae24dd13a31b11f4f1203d0e7228160c351bd08e" translate="yes" xml:space="preserve">
          <source>At the user level, MPMs appear much like other Apache httpd modules. The main difference is that one and only one MPM must be loaded into the server at any time. The list of available MPMs appears on the &lt;a href=&quot;mod/index&quot;&gt;module index page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac1323661d22efb7c298e5ddcbb9b50ef5498c1" translate="yes" xml:space="preserve">
          <source>At this point, the servlet container is presumably ready to start processing the request. As it does so, it can send the following messages back to the web server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b81194f4c9dcfe614cf122cec5c77bef140ebd" translate="yes" xml:space="preserve">
          <source>At this time the only data passed to the external process is the client socket. To receive a client socket, call recvfrom with an allocated &lt;a href=&quot;http://www.kernel.org/doc/man-pages/online/pages/man3/cmsg.3.html&quot;&gt;&lt;code&gt;struct cmsghdr&lt;/code&gt;&lt;/a&gt;. Future versions of this module may include more data after the client socket, but this is not implemented at this time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6282ea1463d5fd7faf76bc441a07c02b561de51d" translate="yes" xml:space="preserve">
          <source>At time, we want to maintain some kind of status when we perform a rewrite. For example, you want to make a note that you've done that rewrite, so that you can check later to see if a request can via that rewrite. One way to do this is by setting an environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9e2f01b8f571f987bb84b81a50e14c402a3909" translate="yes" xml:space="preserve">
          <source>At top-level, it sets a default that will be inherited by virtualhosts. In a virtual host, FAST or SECURE mode acts on the entire HTTP request, and any settings in a &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; context will be &lt;strong&gt;ignored&lt;/strong&gt;. A third pseudo-mode SELECTIVE defers the choice of FAST vs SECURE to directives in a &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fbd2fd9cc354420ab6c1b9170e0b29144a85e6" translate="yes" xml:space="preserve">
          <source>Atomic Operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6edabef5d8607ab1f2b40095cdcecf30a239bea2" translate="yes" xml:space="preserve">
          <source>Atomic cache updates to both header and body files are achieved without the need for locking by storing the device and inode numbers of the body file within the header file. This has the side effect that cache entries manually moved into the cache will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c6115b6b47aa7e23c2d76361f510266fd9a0bb" translate="yes" xml:space="preserve">
          <source>Attempt to cache requests or responses that have been marked as no-store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93160442aa08e0f2779499458c2071aa300aa797" translate="yes" xml:space="preserve">
          <source>Attempt to cache responses that the server has marked as private</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd272cf6e19a3d2b0044e932048cf93f4ff92765" translate="yes" xml:space="preserve">
          <source>Attempt to cache responses that the server reports as expired</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331ce096b9e36b76d6b8e2e79d75ddc791ac87aa" translate="yes" xml:space="preserve">
          <source>Attempt to persist changes made by the Balancer Manager across restarts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e1b82d7be359ac3adbe77521a18585c1153d92" translate="yes" xml:space="preserve">
          <source>Attempting to &lt;code&gt;&lt;a href=&quot;mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; more than one MPM will result in a startup failure with the following error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48b65cf1e7e0868ebf43186fdb1623e67065d1d" translate="yes" xml:space="preserve">
          <source>Attempts to correct mistaken URLs by ignoring capitalization, or attempting to correct various minor misspellings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="b8087185e5ee37cef4c337de5697d35d75d909fd" translate="yes" xml:space="preserve">
          <source>Attributes:</source>
          <target state="translated">Attributes:</target>
        </trans-unit>
        <trans-unit id="507108ff43da1db62dee6b1647b65fb48a8fe536" translate="yes" xml:space="preserve">
          <source>Auth &lt;em&gt;mechanism&lt;/em&gt; refers to the Apache httpd configuration mechanisms and processing phases, and can be &lt;code&gt;AuthBasicProvider&lt;/code&gt;, &lt;code&gt;Require&lt;/code&gt;, or &lt;code&gt;check_user_id&lt;/code&gt;. The first two of these correspond to the directives used to enable participation in the appropriate processing phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86aa2224f12570a3a3c43e16ca3a63444a4b3f87" translate="yes" xml:space="preserve">
          <source>Auth.</source>
          <target state="translated">Auth.</target>
        </trans-unit>
        <trans-unit id="31783ee55d9b666218e82cf298b81a94862bc544" translate="yes" xml:space="preserve">
          <source>AuthBasicAuthoritative</source>
          <target state="translated">AuthBasicAuthoritative</target>
        </trans-unit>
        <trans-unit id="582b273a5d55c5b3c824c1cc378376013e3ec1e0" translate="yes" xml:space="preserve">
          <source>AuthBasicAuthoritative Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761dbdb8d48112367baca0483c30d2d330a4b304" translate="yes" xml:space="preserve">
          <source>AuthBasicFake</source>
          <target state="translated">AuthBasicFake</target>
        </trans-unit>
        <trans-unit id="9fe64103421a410d9f371ae79c209a6a020468c2" translate="yes" xml:space="preserve">
          <source>AuthBasicFake Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70e3956aa3459d22c95c972525458239d236fb41" translate="yes" xml:space="preserve">
          <source>AuthBasicProvider</source>
          <target state="translated">AuthBasicProvider</target>
        </trans-unit>
        <trans-unit id="ad9befcc2cfb213b30ccb23a088311931a5e3d27" translate="yes" xml:space="preserve">
          <source>AuthBasicProvider Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0fadf265d8c0c210c391eb43f0479fb487c6a42" translate="yes" xml:space="preserve">
          <source>AuthBasicUseDigestAlgorithm</source>
          <target state="translated">AuthBasicUseDigestAlgorithm</target>
        </trans-unit>
        <trans-unit id="b508544c4b61fe3a4a0fcd8aa887725677ff0198" translate="yes" xml:space="preserve">
          <source>AuthBasicUseDigestAlgorithm Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc4c8d56d10ccc109ba8965d6b1f5429c4315ca" translate="yes" xml:space="preserve">
          <source>AuthConfig</source>
          <target state="translated">AuthConfig</target>
        </trans-unit>
        <trans-unit id="089664b729345f5c6c30ec927c000c2edb3c0662" translate="yes" xml:space="preserve">
          <source>AuthConfig, Limit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd25744d564631cfaa99cf8ba56a4334752c0da3" translate="yes" xml:space="preserve">
          <source>AuthDBDUserPWQuery Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11b3aa35d89d01f91cdab58bd24f498c291ad7d" translate="yes" xml:space="preserve">
          <source>AuthDBDUserRealmQuery Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d35ea0c94331dd3eaba6ea0fa3b6e8cb8cfb6fa9" translate="yes" xml:space="preserve">
          <source>AuthDBMGroupFile</source>
          <target state="translated">AuthDBMGroupFile</target>
        </trans-unit>
        <trans-unit id="3d7be85eba367a97c2ccc300a8f5a6b61199b512" translate="yes" xml:space="preserve">
          <source>AuthDBMGroupFile Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f1b570c0cb9c28308eeb0ec2958517edf33f43" translate="yes" xml:space="preserve">
          <source>AuthDBMType</source>
          <target state="translated">AuthDBMType</target>
        </trans-unit>
        <trans-unit id="b1fa783358b01cd5418e87d4aa3f670c4a9c6a1a" translate="yes" xml:space="preserve">
          <source>AuthDBMType Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842f6f708486e0f3dd17ccc430912b00f9bbec9b" translate="yes" xml:space="preserve">
          <source>AuthDBMUserFile</source>
          <target state="translated">AuthDBMUserFile</target>
        </trans-unit>
        <trans-unit id="f35653ff29a2f1ffbe320ebb67bddb4758ed206b" translate="yes" xml:space="preserve">
          <source>AuthDBMUserFile Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844e29b642b0bf6e6b7133756bfcd52ebf4e1b25" translate="yes" xml:space="preserve">
          <source>AuthDigestAlgorithm</source>
          <target state="translated">AuthDigestAlgorithm</target>
        </trans-unit>
        <trans-unit id="8f3817a7c9b02db17952a5ecb37ba1600a06b6bf" translate="yes" xml:space="preserve">
          <source>AuthDigestAlgorithm Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ae7e97165ac744abc8ca9a495dc3a53bed510a" translate="yes" xml:space="preserve">
          <source>AuthDigestDomain</source>
          <target state="translated">AuthDigestDomain</target>
        </trans-unit>
        <trans-unit id="27171adbd9f38a3c065d8a8741c1824aac5688bb" translate="yes" xml:space="preserve">
          <source>AuthDigestDomain Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90989d1dd44336f6f22653eef2932b43afd808d6" translate="yes" xml:space="preserve">
          <source>AuthDigestNonceLifetime</source>
          <target state="translated">AuthDigestNonceLifetime</target>
        </trans-unit>
        <trans-unit id="f65858e27134b40502ab37409c79d2b936f9ab66" translate="yes" xml:space="preserve">
          <source>AuthDigestNonceLifetime Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b683853dfa7d6996db724ea02b86b35c428c17af" translate="yes" xml:space="preserve">
          <source>AuthDigestProvider</source>
          <target state="translated">AuthDigestProvider</target>
        </trans-unit>
        <trans-unit id="6dbe8d3203e2062fd1611f64d5ca1597393fe403" translate="yes" xml:space="preserve">
          <source>AuthDigestProvider Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b670182efeb877921c060b41d069277ca7ffb2" translate="yes" xml:space="preserve">
          <source>AuthDigestQop</source>
          <target state="translated">AuthDigestQop</target>
        </trans-unit>
        <trans-unit id="bc80c795e94bf8bdee021c12bbd0562bfc94ff18" translate="yes" xml:space="preserve">
          <source>AuthDigestQop Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b107d5b9099648d9e247d9cc4884cac5fdac0f8" translate="yes" xml:space="preserve">
          <source>AuthDigestShmemSize Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7032a33c2050207ddfb979c5bb6db09eaa6435a2" translate="yes" xml:space="preserve">
          <source>AuthFormAuthoritative</source>
          <target state="translated">AuthFormAuthoritative</target>
        </trans-unit>
        <trans-unit id="bd0d89fab8cc9ccb27ea8933aee2240f084b0ba5" translate="yes" xml:space="preserve">
          <source>AuthFormAuthoritative Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e3534f4a81de71e07a4b462faf77679e5d9987" translate="yes" xml:space="preserve">
          <source>AuthFormBody Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0752f1356e62b091b5dd4796322ef7e7cbb853" translate="yes" xml:space="preserve">
          <source>AuthFormDisableNoStore Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62948a15981d7e72533529ca7023d2532069aa73" translate="yes" xml:space="preserve">
          <source>AuthFormFakeBasicAuth Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f167e040be7757252245a5ea453235c19f8c7c04" translate="yes" xml:space="preserve">
          <source>AuthFormLocation Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad76ea595934b89dcbc4fb118e66e411b31d10b9" translate="yes" xml:space="preserve">
          <source>AuthFormLoginRequiredLocation Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ca8948d84cf6795bc6e772dfca30865451423d" translate="yes" xml:space="preserve">
          <source>AuthFormLoginSuccessLocation Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00bd67133ae945608c310744e00acf4389efc5e2" translate="yes" xml:space="preserve">
          <source>AuthFormLogoutLocation Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997426c43cbebf619f56495b913cbc23c20ecf85" translate="yes" xml:space="preserve">
          <source>AuthFormMethod Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73820e369f8809e298502b0a10b446154390d15" translate="yes" xml:space="preserve">
          <source>AuthFormMimetype Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b05534444b428e0c3c3fc575318f71d085f5e3" translate="yes" xml:space="preserve">
          <source>AuthFormPassword Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ac75e42bbe3c07a4dd83a2564264985bb76871" translate="yes" xml:space="preserve">
          <source>AuthFormProvider</source>
          <target state="translated">AuthFormProvider</target>
        </trans-unit>
        <trans-unit id="76df6f0af318b80ec407bb5393674f223a502015" translate="yes" xml:space="preserve">
          <source>AuthFormProvider Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509e6e94d86913e3779290d30398b86b9719c1d3" translate="yes" xml:space="preserve">
          <source>AuthFormSitePassphrase Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce2a9bef1f647d4f6a989cf1dd162f582209946" translate="yes" xml:space="preserve">
          <source>AuthFormSize Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a308624587073f954378c1145c48619f5ae49f8" translate="yes" xml:space="preserve">
          <source>AuthFormUsername Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231b03299aec4f1dedc604eae1f550ed6275cf78" translate="yes" xml:space="preserve">
          <source>AuthGroupFile</source>
          <target state="translated">AuthGroupFile</target>
        </trans-unit>
        <trans-unit id="ccb900d0e50d817707d5ef92cbb775d848057950" translate="yes" xml:space="preserve">
          <source>AuthGroupFile Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668f3e778ee32ef498cf186b46d66ff606ad1787" translate="yes" xml:space="preserve">
          <source>AuthLDAPAuthorizePrefix</source>
          <target state="translated">AuthLDAPAuthorizePrefix</target>
        </trans-unit>
        <trans-unit id="9e941a8af79c00993ddd1c63d20c90b892eb541c" translate="yes" xml:space="preserve">
          <source>AuthLDAPAuthorizePrefix Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b4aa856e5dfb13aebd4bfca1b2bedbcaaa157e" translate="yes" xml:space="preserve">
          <source>AuthLDAPBindAuthoritative</source>
          <target state="translated">AuthLDAPBindAuthoritative</target>
        </trans-unit>
        <trans-unit id="4afc8ace7282f835d6732f42a00aa7e28acb5418" translate="yes" xml:space="preserve">
          <source>AuthLDAPBindAuthoritative Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e57dbb29d2bd21ddd43dc9001f398cc1ccffddbf" translate="yes" xml:space="preserve">
          <source>AuthLDAPBindDN</source>
          <target state="translated">AuthLDAPBindDN</target>
        </trans-unit>
        <trans-unit id="09eca6402ef831a82ad5bd889a772c71ab42cea0" translate="yes" xml:space="preserve">
          <source>AuthLDAPBindDN Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45677d06dd8bd13df9a6573886a2111356d178d2" translate="yes" xml:space="preserve">
          <source>AuthLDAPBindPassword</source>
          <target state="translated">AuthLDAPBindPassword</target>
        </trans-unit>
        <trans-unit id="2f78e26e034b3cbd3e1bf99d4050a9fa01de8d41" translate="yes" xml:space="preserve">
          <source>AuthLDAPBindPassword Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbbc5aeca2f26035669a5ebe37390149ff634a94" translate="yes" xml:space="preserve">
          <source>AuthLDAPCharsetConfig Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165ec31b6872c77b7dd222c176012192b27dfe3e" translate="yes" xml:space="preserve">
          <source>AuthLDAPCompareAsUser</source>
          <target state="translated">AuthLDAPCompareAsUser</target>
        </trans-unit>
        <trans-unit id="0d521e9e011b000cf4ec23e8910411abeb95b4fb" translate="yes" xml:space="preserve">
          <source>AuthLDAPCompareAsUser Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c322e7f0b7aaa5a11916ecf0cfb2b7cd6be774f2" translate="yes" xml:space="preserve">
          <source>AuthLDAPCompareDNOnServer</source>
          <target state="translated">AuthLDAPCompareDNOnServer</target>
        </trans-unit>
        <trans-unit id="f370556e39c895341cec184a4f041e5430f6cf8f" translate="yes" xml:space="preserve">
          <source>AuthLDAPCompareDNOnServer Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535c882b0ddbb3c915741dbc1770977c644d6d88" translate="yes" xml:space="preserve">
          <source>AuthLDAPDereferenceAliases</source>
          <target state="translated">AuthLDAPDereferenceAliases</target>
        </trans-unit>
        <trans-unit id="caabb3715661c8a93505b0e93100500599b17bf5" translate="yes" xml:space="preserve">
          <source>AuthLDAPDereferenceAliases Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4f238672c4feb612fe1a71f0794037cfbbdba4" translate="yes" xml:space="preserve">
          <source>AuthLDAPGroupAttribute</source>
          <target state="translated">AuthLDAPGroupAttribute</target>
        </trans-unit>
        <trans-unit id="257f9ed5317e94de5a6b64108d600818eb2e6b74" translate="yes" xml:space="preserve">
          <source>AuthLDAPGroupAttribute Directive</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
