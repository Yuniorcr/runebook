<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="rethinkdb">
    <body>
      <group id="rethinkdb">
        <trans-unit id="00b6913cd3861f0ef499a5831d68bc1ef10b3704" translate="yes" xml:space="preserve">
          <source>&amp;copy; RethinkDB contributors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8d6faea6be97858cb937459b609ff0419e4a5d" translate="yes" xml:space="preserve">
          <source>&amp;hellip;and the bottom 10</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e3e8faa5ff4b607fa30f408083495e71904e74" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Cannot use r.row in nested queries&amp;rdquo; error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf9a2f420ea53c0d4518d0b041508dbd1c753ee" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Nesting depth limit exceeded&amp;rdquo; error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c4012fd3c37fbd6ea6860af676b3aa1224aaed" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;RqlTzinfo object is not JSON serializable&amp;rdquo; error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40e9dc6c7f3a6bc11a551d612145a2010d454e9" translate="yes" xml:space="preserve">
          <source>(&amp;ldquo;Shawshank&amp;rdquo; has been the most-loved movie on IMDb for many years. Take that, Orson Welles.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a56f2ab30d167040da12f75428530ae6d4516522" translate="yes" xml:space="preserve">
          <source>() (bracket)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b0b508ff41bc58989050035f5cb5923e32d5d8" translate="yes" xml:space="preserve">
          <source>() (getField)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd39c1331367dc512705bc76454eab684ac70ca" translate="yes" xml:space="preserve">
          <source>(Compare this to an &lt;a href=&quot;../inner_join/index&quot;&gt;innerJoin&lt;/a&gt; with the same inputs and predicate, which would return a list only of the matchups in which the DC hero has the higher strength.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63cbee8d985e1551cb07cefd1bd372a5764e748f" translate="yes" xml:space="preserve">
          <source>(Compare this to an &lt;a href=&quot;../outer_join/index&quot;&gt;outerJoin&lt;/a&gt; with the same inputs and predicate, which would return a list of &lt;em&gt;all&lt;/em&gt; Marvel heroes along with any DC heroes with a higher strength.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdf4f65c3ed61f86d6567c4cf81924e192d9a18" translate="yes" xml:space="preserve">
          <source>(Compare this to an &lt;a href=&quot;inner_join/index&quot;&gt;innerJoin&lt;/a&gt; with the same inputs and predicate, which would return a list only of the matchups in which the DC hero has the higher strength.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a47e0c5ca224a9ff3ec86526ca7750210e0bbaf" translate="yes" xml:space="preserve">
          <source>(For more complex filtering recipes, read on.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a6af43ea1a811a2db743bd5685ef150de52de0" translate="yes" xml:space="preserve">
          <source>(Note that JavaScript, or another language where &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt; operators aren&amp;rsquo;t overridden to work with ReQL, will require you to use &lt;a href=&quot;../../api/javascript/div/index&quot;&gt;div&lt;/a&gt; and &lt;a href=&quot;../../api/javascript/add/index&quot;&gt;add&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1580c96773f97561c7970da00fe08e668f0c1246" translate="yes" xml:space="preserve">
          <source>(Note we must use &lt;code&gt;gt&lt;/code&gt; instead of the native &lt;code&gt;&amp;gt;&lt;/code&gt; operator in JavaScript, for the same reason. In Python the &lt;code&gt;&amp;gt;&lt;/code&gt; operator is &lt;a href=&quot;https://docs.python.org/2/reference/datamodel.html#special-method-names&quot;&gt;overloaded&lt;/a&gt; to be translated to ReQL&amp;rsquo;s &lt;code&gt;gt&lt;/code&gt; command, a trick that is not possible in JavaScript.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f15070111bac580b811b51a815600be20208e3" translate="yes" xml:space="preserve">
          <source>(Some of these options only apply to file imports, and there are other options available. Type &lt;code&gt;rethinkdb help import&lt;/code&gt; for a full list.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd7d64a5395c1f54c8e339eb3351024cb82e047" translate="yes" xml:space="preserve">
          <source>(That command is suitable for running in the Data Explorer, but can be easily adapted into other languages.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466d3bf6569cf8688e0ce95b7c962ef5a712ead2" translate="yes" xml:space="preserve">
          <source>(The &lt;code&gt;config_changes&lt;/code&gt; field contains metadata about the newly created table; for more details, read about the &lt;a href=&quot;../../../api/javascript/table_create/index&quot;&gt;tableCreate&lt;/a&gt; command.) There are a couple of things you should note about this query:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48bc2c2f1e71d4038905c05c36089344615a86bc" translate="yes" xml:space="preserve">
          <source>(The &lt;code&gt;db&lt;/code&gt; field will be absent unless &lt;code&gt;type&lt;/code&gt; is &lt;code&gt;table_name_collision&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e91668a7d0a2a0c51d48f40138dd9029356157e" translate="yes" xml:space="preserve">
          <source>(The full result set is abbreviated in the figure; &lt;code&gt;&amp;lt;id 1&amp;gt;, &amp;lt;id 2&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;id 3&amp;gt;&lt;/code&gt; would be the entire documents matching those keys.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a647faa8bfe090a824a43307cdb5e49e70a62f4c" translate="yes" xml:space="preserve">
          <source>(The same example can be found in &lt;code&gt;index_create&lt;/code&gt; for both &lt;a href=&quot;https://rethinkdb.com/api/ruby/index_create&quot;&gt;Ruby&lt;/a&gt; and &lt;a href=&quot;../../api/javascript/index_create/index&quot;&gt;JavaScript&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e98b1346ae48301475fe11c2b749386c386d18c" translate="yes" xml:space="preserve">
          <source>(This example could be implemented with &lt;code&gt;reduce&lt;/code&gt;, but &lt;code&gt;fold&lt;/code&gt; will preserve the order when &lt;code&gt;words&lt;/code&gt; is a RethinkDB table or other stream, which is not guaranteed with &lt;code&gt;reduce&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc410dd6aa57d299e675b3807c8ce564db4fd65a" translate="yes" xml:space="preserve">
          <source>(This may happen, for instance, between v1.13 and v1.14, when the internal format of secondary indexes changed.) Outdated indexes can still be used&amp;mdash;they don&amp;rsquo;t affect availability. However, you should rebuild your index before updating to the next version of RethinkDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76150d81664c1c42bbdd5aa5e7613f2a9c6a94ee" translate="yes" xml:space="preserve">
          <source>(Those are the bottom 10 of the top 250, so they&amp;rsquo;re still pretty good.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bbcee372aa2012380a5d22a468a2e99b7f6cd87" translate="yes" xml:space="preserve">
          <source>(We also use the technique for renaming a field, described above, to give the names &amp;ldquo;reduction&amp;rdquo; and &amp;ldquo;group&amp;rdquo; more useful names of &amp;ldquo;invoices&amp;rdquo; and &amp;ldquo;month.&amp;rdquo;) You could use any combination of the ReQL date/time interval commands in the group, or work with the date/time as a native object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f0a2afa4e66253d93351c5d92ee71343fbb2dc" translate="yes" xml:space="preserve">
          <source>(You can also specify &lt;code&gt;bind-http=&lt;/code&gt; in the &lt;a href=&quot;../config-file/index&quot;&gt;configuration file&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2446a5cc15f57cbe29b162ed21a3afc82e476b" translate="yes" xml:space="preserve">
          <source>(You must specify the archive to restore from; there is no default.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="894099c785bd4fd8399aa9e77f8fc89fbfd5b212" translate="yes" xml:space="preserve">
          <source>1-16 RethinkDB servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b5cdc465dd1c022bb5ec2ded7def22617f9a58" translate="yes" xml:space="preserve">
          <source>10Gbps Ethernet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef2a38fb1960cf8352e76ce9b714dc0806f7ea1" translate="yes" xml:space="preserve">
          <source>128 GB RAM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6651c600fffcc73e3ad13d3f9e943ef4b6cd5b0" translate="yes" xml:space="preserve">
          <source>128 client connections per server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b4781e7be851686453081fdf81b6054e4bcc18" translate="yes" xml:space="preserve">
          <source>2x Intel Xeon E5-2680 v2 CPU 2.8 GHz (2x10 cores)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf06c7b42b1141580d27509c6f968f00fa36c06b" translate="yes" xml:space="preserve">
          <source>32 GB RAM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78f4c5ff34062edae00f2d2abac9525e3047914" translate="yes" xml:space="preserve">
          <source>5 GB of free EBS space for your data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d476858b0b6521074885a06b75a1f9c0e85543" translate="yes" xml:space="preserve">
          <source>8 RethinkDB clients</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d0a94e0248c0d75d9e45ef575777822ce0fb6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../api/javascript/circle/index&quot;&gt;circle&lt;/a&gt;: create a line or polygon that approximates a circle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20604349e728e9785df369cc6558bbb190597aab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../api/javascript/distance/index&quot;&gt;distance&lt;/a&gt;: compute the distance between a point and another geometry object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="695f2118c7f3ad5c728b6c5a558acde4606c5577" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../api/javascript/geojson/index&quot;&gt;geojson&lt;/a&gt;: convert a GeoJSON object to a geometry object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92fe6568e9ff095f3ce87aeca9d4da337a0c3319" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../api/javascript/get_intersecting/index&quot;&gt;getIntersecting&lt;/a&gt;: return documents from a sequence that have a geospatially indexed field whose values intersect with a given geometry object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0651455d6009d499467ebd5bbeba57fecf62b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../api/javascript/get_nearest/index&quot;&gt;getNearest&lt;/a&gt;: return documents from a sequence that have a geospatially indexed field whose values are within a specified distance of a given point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1497153460b684842cc2cc099f4385355cfdf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../api/javascript/includes/index&quot;&gt;includes&lt;/a&gt;: determine whether one geometry object is completely contained by a polygon object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a715e787a17d290fe1a31a9953a44bf52397ec33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../api/javascript/intersects/index&quot;&gt;intersects&lt;/a&gt;: determine whether two geometry objects intersect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71dd114afa2ee99eee1ca65347ece99182940536" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../api/javascript/line/index&quot;&gt;line&lt;/a&gt;: create a line object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c8503f96df8cfb0bd411b7874a98761088b2df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../api/javascript/order_by/index&quot;&gt;orderBy&lt;/a&gt;.&lt;a href=&quot;../../../api/javascript/limit/index&quot;&gt;limit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8361c615785162c794dc875ff2b77e291aec5a23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../api/javascript/point/index&quot;&gt;point&lt;/a&gt;: create a point object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="957406cb0bb03c34b9eee981f123fda6eb8d204e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../api/javascript/polygon/index&quot;&gt;polygon&lt;/a&gt;: create a polygon object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb18f23fc5510986b101b39e6216ef8655abf81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../api/javascript/polygon_sub/index&quot;&gt;polygonSub&lt;/a&gt;: use one polygon completely contained within another to cut out a &amp;ldquo;hole&amp;rdquo; in the enclosing polygon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e54b8b69269b2d5447ee57d0d429e4ea0f127e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/javascript/http/index&quot;&gt;r.http&lt;/a&gt; API reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c574324b74b21db77d0785ffc5a7356e94c4bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../docs/install-drivers/index&quot;&gt;Find the project page&lt;/a&gt; for your driver for specific ReQL documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e17dd9d14244dc5a6bcb46de58c1e00a92f008" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../coerce_to/index&quot;&gt;coerceTo&lt;/a&gt; can coerce &lt;code&gt;binary&lt;/code&gt; objects to &lt;code&gt;string&lt;/code&gt; types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1746a852218be4653579a5f90911a359120495" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../count/index&quot;&gt;count&lt;/a&gt; will return the number of bytes in the object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ec379129fdc80fc0bf25dcecc7752d426ba099" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../info/index&quot;&gt;info&lt;/a&gt; will return information on a binary object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef65231483c78b16ac3fcabc6b9e17b07f57476" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../map-reduce/index&quot;&gt;Map-reduce&lt;/a&gt; operations: &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;concat_map&lt;/code&gt;, &lt;code&gt;reduce&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdbf6c60b5e6f8f5f5b69801681ed80195e1c3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../slice/index&quot;&gt;slice&lt;/a&gt; will treat bytes like array indexes (i.e., &lt;code&gt;slice(10,20)&lt;/code&gt; will return bytes 10&amp;ndash;19)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7c47c3d819cd87d89e09effc214cca31e8978e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../type_of/index&quot;&gt;typeOf&lt;/a&gt; returns &lt;code&gt;PTYPE&amp;lt;BINARY&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb685cc9283f2f918e2a62ccd7476a29a3eac0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://dockerfile.github.io/#/rethinkdb&quot;&gt;Dockerfile/rethinkdb&lt;/a&gt; by &lt;a href=&quot;https://github.com/pilwon&quot;&gt;@pilwon&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30cd44af59807a27b580e2afba501e3955afbeb9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/MapReduce&quot;&gt;Map-reduce&lt;/a&gt; is a way to summarize and run aggregation functions on large data sets, potentially stored across many servers, in an efficient fashion. It works by processing the data on each server in parallel and then combining those results into one set. It was originally designed by &lt;a href=&quot;http://research.google.com/archive/mapreduce.html&quot;&gt;Google&lt;/a&gt; and later implemented in database systems such as &lt;a href=&quot;http://hadoop.apache.org/&quot;&gt;Apache Hadoop&lt;/a&gt; and &lt;a href=&quot;http://www.mongodb.org/&quot;&gt;MongoDB&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb2c41f60a707258731c5e204a221115475bbad2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.celeryproject.org/&quot;&gt;Celery&lt;/a&gt;&amp;rsquo;s custom result backend for RethinkDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8ca6ad060e292cf8b1ca1e35bd13e22ec3a4b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.elasticsearch.org&quot;&gt;Elasticsearch&lt;/a&gt; is a database that stores documents in a crafty way that makes it fast to search large fields of pure text. For instance, it indexes words in different ways depending on how frequent they are in your overall data. It doesn&amp;rsquo;t waste time checking &lt;a href=&quot;http://www.elasticsearch.org/blog/stop-stopping-stop-words-a-look-at-common-terms-query/&quot;&gt;common words&lt;/a&gt; like &amp;ldquo;is&amp;rdquo; and &amp;ldquo;to&amp;rdquo; when returning results unless they actually make a difference. It also performs &lt;a href=&quot;http://www.elasticsearch.org/guide/en/elasticsearch/guide/current/controlling-stemming.html&quot;&gt;stemming&lt;/a&gt;, so that a search for &amp;ldquo;looked&amp;rdquo; will return results containing the words &amp;ldquo;looks&amp;rdquo; and &amp;ldquo;looking.&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9adb23d628e778d28dddae067d7ef26a6bea9700" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Zipf%27s_law&quot;&gt;Zipfian&lt;/a&gt; key access distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094d507e38bfdb43c577d688b823ff078f259890" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/AVVSDevelopment/chef-rethinkdb&quot;&gt;chef-rethinkdb&lt;/a&gt; by &lt;a href=&quot;https://github.com/AVVSDevelopment&quot;&gt;@AVVSDevelopment&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14894891871c0d3b9f1d4bc84f79e84e548cf27b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Calder/methink&quot;&gt;Methink&lt;/a&gt; by &lt;a href=&quot;https://github.com/Calder&quot;&gt;@Calder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586b364a3be039ae61ac5736658b61552cf6fcb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/JoshAshby/pyRethinkORM&quot;&gt;pyRethinkORM&lt;/a&gt; by &lt;a href=&quot;https://github.com/JoshAshby&quot;&gt;@JoshAshby&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d024de40a5aca353f35b4d90236958893a5e8bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/RyanAmos/rethinkdb-vagrant&quot;&gt;Rethinkdb-vagrant&lt;/a&gt; by &lt;a href=&quot;https://github.com/RyanAmos&quot;&gt;@RyanAmos&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e183e99afbbdb6505d039279cbd32d4b5c4804" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/angeloashmore/lotus-rethinkdb&quot;&gt;lotus-rethinkdb&lt;/a&gt; by &lt;a href=&quot;https://github.com/angeloashmore&quot;&gt;@angeloashmore&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07860b734629b83c6610e383be6e0bedd6bb76b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/apa512&quot;&gt;@apa512&lt;/a&gt; (Clojure): &lt;a href=&quot;https://github.com/apa512/clj-rethinkdb&quot;&gt;https://github.com/apa512/clj-rethinkdb&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1714a6650fb2aac025bddbcd46c1b80e0901c93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/athlite/hapi-rethinkdb-crud&quot;&gt;hapi-rethinkdb-crud&lt;/a&gt; by &lt;a href=&quot;https://github.com/athlite&quot;&gt;@athlite&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d97a03b5bad104ecf0596f9ca4c11abdb31b25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/athlite/rethinkdb-cli&quot;&gt;rethinkdb-cli&lt;/a&gt; by &lt;a href=&quot;https://github.com/athlite&quot;&gt;@athlite&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62c793269bef2b299a74953095340254667ec00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/athlite/rethinkdb-fixtures&quot;&gt;rethinkdb-fixtures&lt;/a&gt; by &lt;a href=&quot;https://github.com/athlite&quot;&gt;@athlite&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e8cffc012791051c7fd4013652b6052845fe43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/atnnn&quot;&gt;@atnnn&lt;/a&gt; (Haskell): &lt;a href=&quot;https://github.com/atnnn/haskell-rethinkdb&quot;&gt;https://github.com/atnnn&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262e933c19f47132dbdedde5a99370a26367ef8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/baruch/rethink-miner&quot;&gt;rethink-miner&lt;/a&gt; by &lt;a href=&quot;https://github.com/baruch&quot;&gt;@baruch&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9adbdc3867c71061789f737d3a44764366368d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/bchavez&quot;&gt;@bchavez&lt;/a&gt; (C#/.NET): &lt;a href=&quot;https://github.com/bchavez/RethinkDb.Driver&quot;&gt;https://github.com/bchavez/RethinkDb.Driver&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1120c23754655dde7c2f95cad6194854efcc1479" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/billbarsch/phpReAdmin&quot;&gt;phpReAdmin&lt;/a&gt; by &lt;a href=&quot;https://github.com/billbarsch&quot;&gt;@billbarsch&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aad7d04311af126ba00a97b435300de6620fc55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/billysometimes&quot;&gt;@billysometimes&lt;/a&gt; (Dart): &lt;a href=&quot;https://github.com/billysometimes/rethinkdb&quot;&gt;https://github.com/billysometimes/rethinkdb&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20cd7bee2db6d566afd15e93b07fe7a3becda2da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/brandonhamilton&quot;&gt;@brandonhamilton&lt;/a&gt; (Delphi): &lt;a href=&quot;https://github.com/brandonhamilton/rethinkdb-delphi&quot;&gt;https://github.com/brandonhamilton/rethinkdb-delphi&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b02660a7547322eefc899001b96d3d479d673c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/byterussian/rethinkdb-cli&quot;&gt;rethinkdb-cli&lt;/a&gt; by &lt;a href=&quot;https://github.com/byterussian&quot;&gt;@byterussian&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="434ac76642cf227c0bad28e404a422424be39869" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/caoimhghin/rethink&quot;&gt;rethink&lt;/a&gt; by &lt;a href=&quot;https://github.com/caoimhghin&quot;&gt;@caoimhghin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70ed31cd3656b360f6bd63240b0cb346ca6d1a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/crosbymichael/docker-cookbooks&quot;&gt;Docker-cookbooks&lt;/a&gt; by &lt;a href=&quot;https://github.com/crosbymichael&quot;&gt;@crosbymichael&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c76f61407eaece84a2a73012ea890f3e496e55e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/dancannon&quot;&gt;@dancannon&lt;/a&gt; (Go): &lt;a href=&quot;https://github.com/dancannon/gorethink&quot;&gt;https://github.com/dancannon/gorethink&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a2fb6311ef264aeb66669bac6788ad55a4decd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/danielmewes&quot;&gt;@danielmewes&lt;/a&gt; (PHP): &lt;a href=&quot;https://github.com/danielmewes/php-rql&quot;&gt;https://github.com/danielmewes/php-rql&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd7d07dfef65b6602c21d11ddecfdc421cb1c37f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/dkhenry&quot;&gt;@dkhenry&lt;/a&gt; (Java): &lt;a href=&quot;https://github.com/dkhenry/rethinkjava&quot;&gt;https://github.com/dkhenry/rethinkjava&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9aa6391b224f3c73d2db107be3c689f09cd776b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/dparlevliet/rwrapper&quot;&gt;rwrapper&lt;/a&gt; by &lt;a href=&quot;https://github.com/dparlevliet&quot;&gt;@dparlevliet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88f2c09b0de46c8918752c28e357124a98d48afc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/dparnell&quot;&gt;@dparnell&lt;/a&gt; (Objective-C): &lt;a href=&quot;https://github.com/dparnell/rethink-db-client&quot;&gt;https://github.com/dparnell/rethink-db-client&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe98c1e4f5e5cc79f29f6a2340560cae4d5a7e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/fluent/fluentd&quot;&gt;FluentD&lt;/a&gt; output plugins to ship logs to RethinkDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1145040a22d305fab7ccebd87404398155c31f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/fuwaneko/jugglingdb-rethink&quot;&gt;JugglingDB-RethinkDB&lt;/a&gt; by &lt;a href=&quot;https://github.com/fuwaneko&quot;&gt;@fuwaneko&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98021bf62b70c487338677632cea63e09c3fb7ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/grandquista&quot;&gt;@grandquista&lt;/a&gt; (Lua): &lt;a href=&quot;https://github.com/grandquista/Lua-ReQL&quot;&gt;https://github.com/grandquista/Lua-ReQL&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64cf8b3cd344057abda0e01552ddda2e9cbb6a31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/grzesiek/docker-rethinkdb&quot;&gt;Docker-rethinkdb&lt;/a&gt; by &lt;a href=&quot;https://github.com/grzesiek&quot;&gt;@grzesiek&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22bffcaf59618a9bec1bba211600382899e5332e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/guillaumervls/connect-rethinkdb&quot;&gt;connect-rethinkdb&lt;/a&gt; by &lt;a href=&quot;https://github.com/guillaumervls&quot;&gt;@guillaumervls&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd73ea0c7ef0d8e890557965b28ad4703f05ebf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/guillaumervls/rdb-cursor-stream&quot;&gt;rdb-cursor-stream&lt;/a&gt; by &lt;a href=&quot;https://github.com/guillaumervls&quot;&gt;@guillaumervls&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f201e5d379ceee2dcdf518a14ab00eac868295" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/hamiltop&quot;&gt;@hamiltop&lt;/a&gt; (Elixir): &lt;a href=&quot;https://github.com/hamiltop/rethinkdb-elixir&quot;&gt;https://github.com/hamiltop/rethinkdb-elixir&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d2492257b180acb86c6caf8c137efc7aefc2fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/hden/koa-rethinkdb&quot;&gt;koa-rethinkdb&lt;/a&gt; by &lt;a href=&quot;https://github.com/hden&quot;&gt;@hden&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1460c623c0eeed94df2bdc1f6f063ff6ffbe53f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/hden/rethinkdb-co&quot;&gt;rethinkdb-co&lt;/a&gt; by &lt;a href=&quot;https://github.com/hden&quot;&gt;@hden&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22cbee45b511ed3d07adb79b6ecddc0d2399ea0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/hden/rethinkdb-pool&quot;&gt;Rethinkdb-pool&lt;/a&gt; by &lt;a href=&quot;https://github.com/hden&quot;&gt;@hden&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7fda2f26f0fd009f0dfcf94c1c9282510f67eb9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/js-data/js-data-rethinkdb&quot;&gt;js-data-rethinkdb&lt;/a&gt; by &lt;a href=&quot;https://github.com/jmdobry&quot;&gt;@jmdobry&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d99a2003d9af5b8ff29386866cdd4150e074fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/jurajmasar&quot;&gt;@jurajmasar&lt;/a&gt; (C++): &lt;a href=&quot;https://github.com/jurajmasar/rethink-db-cpp-driver&quot;&gt;https://github.com/jurajmasar/rethink-db-cpp-driver&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8483ec4dc2984ebec85b79b62775027fbf8dcc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/kclay&quot;&gt;@kclay&lt;/a&gt; (Scala): &lt;a href=&quot;https://github.com/kclay/rethink-scala&quot;&gt;https://github.com/kclay/rethink-scala&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af613dbca2d7937d5eed4dd02d32b28fa65ce2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/kstaken/dockerfile-examples&quot;&gt;Dockerfiles-examples&lt;/a&gt; by &lt;a href=&quot;https://github.com/kstaken&quot;&gt;@kstaken&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc87452be60b01376c41cc5c19478053be68605" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/kureikain&quot;&gt;@kureikain&lt;/a&gt; (Erlang): &lt;a href=&quot;https://github.com/kureikain/relang&quot;&gt;https://github.com/kureikain/relang&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ab89811ae3753e725b950b4bc36fce34e9a2aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/kureikain/epiphy&quot;&gt;Epiphy&lt;/a&gt; by &lt;a href=&quot;https://github.com/kureikain&quot;&gt;@kureikain&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083aebfc74587e404ae484e250efa1dd79850b1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/linkyndy/flask-rethinkdb&quot;&gt;flask-rethinkdb&lt;/a&gt; by &lt;a href=&quot;https://github.com/linkyndy&quot;&gt;@linkyndy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d465353b08ca20ad7d296e7cdcc677fc28f2ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/linkyndy/remodel&quot;&gt;remodel&lt;/a&gt; by &lt;a href=&quot;https://github.com/linkyndy&quot;&gt;@linkyndy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a423df29a87cd122da9c8fc88c50a6bfb8d49e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mbq&quot;&gt;@mbq&lt;/a&gt; (R): &lt;a href=&quot;https://github.com/mbq/rethinker&quot;&gt;https://github.com/mbq/rethinker&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326ce449fd508ac593d9a105ab44e90f619a2f5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mbroadst/thinkagain&quot;&gt;ThinkAgain&lt;/a&gt; by &lt;a href=&quot;https://github.com/mbroadst&quot;&gt;@mbroadst&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32dc6d4618e1359645abde77d9e3c13886068dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mtabini/osmos&quot;&gt;Osmos&lt;/a&gt; by &lt;a href=&quot;https://github.com/mtabini&quot;&gt;@mtabini&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042f10a0a94b6e2a2502a6358fbc494a98ff9033" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mwielbut/thinky-loader&quot;&gt;thinky-loader&lt;/a&gt; by &lt;a href=&quot;https://github.com/mwielbut&quot;&gt;@mwielbut&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="080a5a06718be9aa184f421136e57dc7db3dd0e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/neumino&quot;&gt;@neumino&lt;/a&gt; (Node.js): &lt;a href=&quot;https://github.com/neumino/rethinkdbdash&quot;&gt;https://github.com/neumino/rethinkdbdash&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce9187b5dd8f79994bcda26136426cfec143da3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/neumino/chateau&quot;&gt;Chateau&lt;/a&gt; by &lt;a href=&quot;https://github.com/neumino&quot;&gt;@neumino&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9710321248ce3a38ecbf92bf4cca5ca8cd965cc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/neumino/rethinkdbdash&quot;&gt;rethinkdbdash&lt;/a&gt; by &lt;a href=&quot;https://github.com/neumino&quot;&gt;@neumino&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b14b613636474cc2f644cc0329b286e11bcdc89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/neumino/thinky&quot;&gt;Thinky&lt;/a&gt; by &lt;a href=&quot;https://github.com/neumino&quot;&gt;@neumino&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f43d59462442406bf8823011ff0a9256736884" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/njlg&quot;&gt;@njlg&lt;/a&gt; (Perl): &lt;a href=&quot;https://github.com/njlg/perl-rethinkdb&quot;&gt;https://github.com/njlg/perl-rethinkdb&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca83634b07d92cbc3d785b3ee00b72deb2bba74f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/npiv/&quot;&gt;@npiv&lt;/a&gt; (Java): &lt;a href=&quot;https://github.com/npiv/rethink-java-driver&quot;&gt;https://github.com/npiv/rethink-java-driver&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c11c33fd4962606f832ea2a1afc3b5b9043eaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/nviennot/nobrainer&quot;&gt;NoBrainer&lt;/a&gt; by &lt;a href=&quot;https://github.com/nviennot&quot;&gt;@nviennot&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe88998c3232daddd02ce887baa0b67d66fee2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/orthecreedence&quot;&gt;@orthecreedence&lt;/a&gt; (Common Lisp): &lt;a href=&quot;https://github.com/orthecreedence/cl-rethinkdb&quot;&gt;https://github.com/orthecreedence/cl-rethinkdb&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5297460a533477083f59bfac9d9d86eda828731" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/pilwon/celery-backends-rethinkdb&quot;&gt;celery-backends-rethinkdb&lt;/a&gt; by &lt;a href=&quot;https://github.com/pilwon&quot;&gt;@pilwon&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06fdd668936d2c2bca39670a52c93d1cd79d2981" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/pixelspark&quot;&gt;@pixelspark&lt;/a&gt; (Swift): &lt;a href=&quot;https://github.com/pixelspark/rethink-swift&quot;&gt;https://github.com/pixelspark/rethink-swift&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab2ed527e87f45ed46fae1ebe04a3fe25235e2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/rgv151&quot;&gt;@rgv151&lt;/a&gt; (Nim): &lt;a href=&quot;https://github.com/rgv151/rethinkdb.nim&quot;&gt;https://github.com/rgv151/rethinkdb.nim&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7081f54c7e51f3c05db9c6cb96c8df04fcca265c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/robconery/rethinkdb_nightly&quot;&gt;rethinkdb_nightly&lt;/a&gt; by &lt;a href=&quot;https://github.com/robconery&quot;&gt;@robconery&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6256b7c93bdd88826f1f1450bb5fe439dd7abc2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/robconery/second-thought&quot;&gt;second-thought&lt;/a&gt; by &lt;a href=&quot;https://github.com/robconery&quot;&gt;@robconery&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c5baf4a9c050ed3c4c7e41b5c97f30248d0fde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/stiang/recli&quot;&gt;recli&lt;/a&gt; by &lt;a href=&quot;https://github.com/stiang&quot;&gt;@stiang&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927d5de6744855dd37d92d36813399eb03f2a93a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/tmont/puppet-rethinkdb&quot;&gt;puppet-rethinkdb&lt;/a&gt; by &lt;a href=&quot;https://github.com/tmont&quot;&gt;@tmont&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf7e27caf125415f8db2837964bb6d2ba6f5859" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/unbit&quot;&gt;@unbit&lt;/a&gt; (C): &lt;a href=&quot;https://github.com/unbit/librethinkdb&quot;&gt;https://github.com/unbit/librethinkdb&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c5a6699d6f666989b0775401bd839132966524" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rethinkdb.com/docs/install-drivers/python/&quot;&gt;Upgrade&lt;/a&gt; the Python driver for the &lt;code&gt;restore&lt;/code&gt; step below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2fd9312c38e81a5888ec2e1c9354306cf05d2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rethinkdb.com/faq/&quot;&gt;Read the FAQ&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1bcb07ea00e5abdeeed03173bd3c3b52591969c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.npmjs.com/package/express-session-rethinkdb&quot;&gt;express-session-rethinkdb&lt;/a&gt; by &lt;a href=&quot;https://github.com/armenfilipetyan&quot;&gt;@armenfilipetyan&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b6d6a8ec841fc636bc97bfc6dc229eafa8f9a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;to_geojson/index&quot;&gt;toGeojson&lt;/a&gt;/&lt;a href=&quot;../../../api/javascript/to_geojson/index&quot;&gt;to_geojson&lt;/a&gt;: convert a geometry object to a GeJSON object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa0f4762731bb24e3b0d3d99b121a8c4d452d946" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;always&quot;&lt;/code&gt;: behave as &lt;code&gt;true&lt;/code&gt;, but include all documents the command tried to update whether or not the update was successful. (This was the behavior of &lt;code&gt;true&lt;/code&gt; pre-2.0.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d837fc2286872a0ea070eacfbb9c18f7c64dd58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;error&quot;&lt;/code&gt;: Do not insert the new document and record the conflict as an error. This is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8490247a5e940c508bbe59a8b6e9811bab94c36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;field_name&quot;&lt;/code&gt;: a string will be taken as the name of a field to perform a merge-sort on. The input sequences must be ordered &lt;em&gt;before&lt;/em&gt; being passed to &lt;code&gt;union&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731505c47c6e0f4f50eb2ec6d4ef7e02b8e46958" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;replace&quot;&lt;/code&gt;: &lt;a href=&quot;../replace/index&quot;&gt;Replace&lt;/a&gt; the old document in its entirety with the new one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42186c51b153bab26a8ed2e97d372b950b8744d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;update&quot;&lt;/code&gt;: &lt;a href=&quot;../update/index&quot;&gt;Update&lt;/a&gt; fields of the old document with fields from the new one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb118cf5aefbd11e1199f16be1b77cfdb5df064" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;arguments&amp;gt;&lt;/code&gt; is a list of all arguments. Each argument is itself a query (a command list, or data).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0cd73ee9bf604342888a0048d45db19f640d19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt; is the integer representing the command, from &lt;code&gt;ql2.proto&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6079ddbff871433d01bb78a5473351dfcbb644" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt; are the command&amp;rsquo;s optional arguments. This element may be left out if the command has no optional arguments given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4fc1bd0d0eb358294a782506e26cc4c43bb7cf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'majority'&lt;/code&gt; will only return values that are safely committed on disk on a majority of replicas. This requires sending a message to every replica on each read, so it is the slowest but most consistent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4039bb68f95f263a755abc75879c132b7bc66985" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'outdated'&lt;/code&gt; will return values that are in memory on an arbitrarily-selected replica. This is the fastest but least consistent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c22e6f5867d5cfa44ddd09b8ca69c2018f15e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'single'&lt;/code&gt; (the default) returns values that are in memory (but not necessarily written to disk) on the primary replica.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127c9083f6e5b22daec122ac3f603aed4c89d387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*_port&lt;/code&gt;: the RethinkDB ports on that server (from the server&amp;rsquo;s own point of view).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9bc494f91932fd88d20b07e5c7465412660227" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--bind {all | addr}&lt;/code&gt;: add the address of a local interface to listen on when accepting connections; loopback addresses are enabled by default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519aed3955fbd120bac4556181697d5f584ec6c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--bind-cluster {all | addr}&lt;/code&gt;: bind the cluster connection port to a specific address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2a0fd6800edf166cbcafee03ed5988211ea4a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--bind-driver {all | addr}&lt;/code&gt;: bind the client driver to a specific address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a531b519a89f5d947eaf873aef00b61c7e01d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--bind-http {all | addr}&lt;/code&gt;: bind the web administration UI port to a specific address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6e7f014ad3aeb14d6d65225ac8339be06bda42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--cache-size mb&lt;/code&gt;: total cache size (in megabytes) for the process. Can be &amp;lsquo;auto&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bccfd78027e9612adf4100967405f367f21a914" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--canonical-address addr&lt;/code&gt;: address that other RethinkDB instances will use to connect to us, can be specified multiple times</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9452d2ababfe1b7b7fcaaf3627fe326c04e33c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--clients&lt;/code&gt;: number of client connections to use (default: &lt;code&gt;8&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416137846d090c627a9d2b43582ae4e0a68ba011" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--clients&lt;/code&gt;: number of tables to export simultaneously (default: &lt;code&gt;3&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca9f7c0f87a4491c0602dfd7b4ebc329b8f3251" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--clients&lt;/code&gt;: the number of client connections to use at once (default 8)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7b4829da24186aedc58b9216e0790c19556a63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--cluster-port port&lt;/code&gt;: port for receiving connections from other nodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5069f1e58f74071c8ae3828c5094e8d9775200" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--cluster-reconnect-timeout secs&lt;/code&gt;: the amount of time, in seconds, this server will try to reconnect to a cluster if it loses connection before giving up; default &lt;code&gt;86400&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2720a7419c2fe35bc05ad2384dafd272bf59c261" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--cluster-tls-ca ca_filename&lt;/code&gt;: CA certificate bundle used to verify cluster peer certificates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9df9726a63a13f8d4b4e80625b4de093324f6ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--cluster-tls-cert cert_filename&lt;/code&gt;: certificate to use for intra-cluster connection TLS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af22bd31bf0def15199260289f1bd4e6f9a38fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--cluster-tls-key key_filename&lt;/code&gt;: private key to use for intra-cluster connection TLS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa1e01ee0401f56e8960f3737499ba875cbf4f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--config-file&lt;/code&gt;: take options from a configuration file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f04bb78170064b61bfb4a0a78697d6ddc058cbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--custom-header&lt;/code&gt;: supply a custom header row for a CSV file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af83d50008e11c7203d812557a97d01c6fb4dc85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--daemon&lt;/code&gt;: daemonize this rethinkdb process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025f3bf11d1489f36c783f5a7ef254d6561758ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--direct-io&lt;/code&gt;: use direct I/O for file access</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c74ef76b6b008ca31e209d11837bf67c51c376" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--directory&lt;/code&gt;&amp;mdash;use a different data directory so the two nodes don&amp;rsquo;t try to access the same files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767dda5722ed64844a537eaab24551e86796180a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--driver-port port&lt;/code&gt;: port for RethinkDB protocol client drivers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7adac6e3e49ef9be82642efc2405162ce3db5f09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--driver-tls-ca ca_filename&lt;/code&gt;: CA certificate bundle used to verify client certificates; TLS client authentication disabled if omitted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b594caa421668f6cbab01d8f23e8e9f570c4e45e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--driver-tls-cert cert_filename&lt;/code&gt;: certificate to use for client driver connection TLS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd8229335f644f9efae00e8e1c153f6025a8c75e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--driver-tls-key key_filename&lt;/code&gt;: private key to use for client driver connection TLS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43aa667d892a8d22e752a778fbeb9c792161f47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--fields&lt;/code&gt;: only import from the listed fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe401caff8bd5d75a1a83ecdf82023a78473c45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--force&lt;/code&gt;: import data even if a table already exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe821db6146de2a942aee83c0780d717cbfa2b18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--format&lt;/code&gt;: CSV or JSON (default JSON)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b479719929e335c3ca8f4733a165e28276e3af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--hard-durability&lt;/code&gt;: use hard durability writes (slower, but less memory consumption on the server)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a6360192437d55dc94af6f06d4e9b5ecd6be07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--http-port port&lt;/code&gt;: port for web administration console</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec1288ef77659fde83fe28214ff573a2619fbc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--http-tls-cert cert_filename&lt;/code&gt;: certificate to use for web administration console TLS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f673cebf647b3273d81108e9aec18afa0653d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--http-tls-key key_filename&lt;/code&gt;: private key to use for web administration console TLS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577a56cfc5c912f654799921361af145350e9f94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--initial-password&lt;/code&gt;: set a password for the &lt;code&gt;admin&lt;/code&gt; user if none has previously been set; use &lt;code&gt;auto&lt;/code&gt; to choose a random password that will be printed to &lt;code&gt;stdout&lt;/code&gt; (see &lt;a href=&quot;../security/index&quot;&gt;Secure your cluster&lt;/a&gt; for more information)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98f0fa1a5b6463d6ee8fb043857f82973e158f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--io-threads n&lt;/code&gt;: how many simultaneous I/O operations can happen at the same time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a190ca3bb68f3bff3e177fb3bf860744dcff6662" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--join&lt;/code&gt;&amp;mdash;tell our new RethinkDB instance to connect to another instance (in this case, &lt;code&gt;localhost:29015&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae764074c2227f221c3e181612c27c909442a607" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--log-file file&lt;/code&gt;: specify the file to log to, defaults to &amp;lsquo;log_file&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05e0f4d960723113a5989851520d89ab0b1b756" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-default-bind&lt;/code&gt;: disable automatic listening on loopback addresses, unless explicitly specified in a separate &lt;code&gt;--bind&lt;/code&gt; option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b8bba4f4d8fcc21005af4d6848c0cbccc7f316" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-header&lt;/code&gt;: indicate the first line of a CSV file is &lt;em&gt;not&lt;/em&gt; a header row</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dada3a8c2d02a898cd38d9000fb86c9fefc7f954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-http-admin&lt;/code&gt;: disable web administration console</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2848ec9bd8f3a62d7c585ca34ea566f5a4a50f9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-secondary-indexes&lt;/code&gt;: do not create secondary indexes for the restored tables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d48d0149f35b4896db2ea4ea8723074a0ad5866" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-update-check&lt;/code&gt;: disable checking for available updates. Also turns off anonymous usage data collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a727a689f4cf1a3fa26a1afe038b155ffbd857b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--password-file&lt;/code&gt;: read the admin password from a plain text file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b62ae0f71d249c464c2be66e70c0e4a16a3abee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--pid-file path&lt;/code&gt;: a file in which to write the process id when the process is running</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80274700f2e493b2afe2b3d2a255b238264424d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--port-offset&lt;/code&gt;&amp;mdash;increment all ports by 1 so the two nodes don&amp;rsquo;t try to use the same ports on one machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150ebee1f8695df96194e353384adc5661f76def" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--reql-http-proxy [protocol://]host[:port]&lt;/code&gt;: HTTP proxy to use for performing &lt;code&gt;r.http(...)&lt;/code&gt; queries, default port is 1080</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5796beffe5a1583b96884e2134e4679dc58bfd1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--rungroup group&lt;/code&gt;: run with the specified group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65385f509b8ab24736c351dfad5703e7410c5301" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--runuser user&lt;/code&gt;: run as the specified user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da8306a66989f584c1b453b6c67fffeb20cf81a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--table&lt;/code&gt;: table to import to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b434ea6ad355d357111be415f234222c9d8b2da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--temp-dir&lt;/code&gt;: directory to use for intermediary results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d08077ab98341648dced52ecf2d4f4465826c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--tls-cert&lt;/code&gt;: specify a path to a TLS certificate to allow encrypted connections to the server (see &lt;a href=&quot;../security/index&quot;&gt;Securing the cluster&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c664c0135823639977a80b0ecb18b563cbda57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--tls-ciphers cipher_list&lt;/code&gt;: specify a list of TLS ciphers to use; default is &lt;code&gt;EECDH+AESGCM&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b32d40155c33dacae76838656514980fb7ed896" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--tls-dhparams dhparams_filename&lt;/code&gt;: provide parameters for DHE key agreement; REQUIRED if using DHE cipher suites; at least 2048-bit recommended</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b7614abc65002c47b7867a7f4aac41cf917940" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--tls-ecdh-curve curve_name&lt;/code&gt;: specify a named elliptic curve to use for ECDHE; default is &lt;code&gt;prime256v1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86180245d3eaba1d760fb9f4291a410e3e8121e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--tls-min-protocol protocol&lt;/code&gt;: the minimum TLS protocol version the server accepts, one of &lt;code&gt;TLSv1&lt;/code&gt;, &lt;code&gt;TLSv1.1&lt;/code&gt;, &lt;code&gt;TLSv1.2&lt;/code&gt;; default is &lt;code&gt;TLSv1.2&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87bd9d19e6c0b126b999025752e159c2616eb095" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--web-static-directory directory&lt;/code&gt;: the directory containing web resources for the http interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827beb03f8c3545e06fe44a22c1a2dff7b66c861" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1&lt;/code&gt;: no limit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b6ddecd92c9789dcc43f9b4444733c448cf04b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c [ --cores ] n&lt;/code&gt;: the number of cores to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1dc7ee0db7a7dcd84421bc35bf61dd9b8f76f0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt;, &lt;code&gt;--connect&lt;/code&gt;: host and client port of the node to connect to (default: &lt;code&gt;localhost:28015&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3293db891763304d7235bc183b3f2cad8215e485" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt;: connect to the given IP address/host and port</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328ba8131f58320ed0f84f4c571d1885255eb850" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d [ --directory ] path&lt;/code&gt;: specify directory to store data and metadata</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1898a13115521c415c34fcb98350853a5f94d7af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt;, &lt;code&gt;--export&lt;/code&gt;: limit the dump to the given database or table (specified as &lt;code&gt;database.table&lt;/code&gt;); may be specified multiple times for multiple databases/tables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3938179628fb7348d23bd30ed8a83f9e9c2c7350" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;--file&lt;/code&gt;: specify a filename for the archive (default: &lt;code&gt;rethinkdb_dump_&amp;lt;date&amp;gt;_&amp;lt;time&amp;gt;.tar.gz&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b180074c460a3ea29ec914e0894725a2ce1ccca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt;: file to import from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcbd5704a27991ede8013bcc2ec2c1f4c90dc087" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-h [ --help ]&lt;/code&gt;: print this help</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c49aeab650a599b20682042c95dcb38940e4920" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-h&lt;/code&gt;, &lt;code&gt;--help&lt;/code&gt;: print help</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37072b9512a71ae914d3a04bf8e3b3483f45d11e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt;, &lt;code&gt;--import&lt;/code&gt;: limit the restore to the given database or table (specified as &lt;code&gt;database.table&lt;/code&gt;); may be specified multiple times for multiple databases/tables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c39764e546bf57ac0df26ebf444ff24d52a195a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-j [ --join ] host:port&lt;/code&gt;: host and port of a RethinkDB node to connect to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d966243e031cdb7ca72c10b6c36c7f2844ef92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n [ --server-name ] arg&lt;/code&gt;: the name for this server (as will appear in the metadata). If not specified, it will be randomly chosen from a short list of names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c27d2fd7600b3f440f15c724827cf655f54613" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-o [ --port-offset ] offset&lt;/code&gt;: all ports used locally will have this value added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b077bfaccd425c2c93f17b001f5ffdafdda7ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt;, &lt;code&gt;--password&lt;/code&gt;: prompt for the admin password, if one has been set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f935ffac28fa9f4b5dedd43f70e060576c04f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-t [ --server-tag ] arg&lt;/code&gt;: a tag for this server. Can be specified multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0479b0e6020d6bc9c09ff90d21d361f5ae848b16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-v [ --version ]&lt;/code&gt;: print the version number of rethinkdb</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8a01ffe4dbe0acb0aae00fa87184d07531a151" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt;: no requests will be made, an empty stream will be returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3212abc2633698d3b227a2accd5b7f8b6d7dda49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;16&lt;/code&gt;&lt;code&gt;CLIENT_ERROR&lt;/code&gt;: The server failed to run the query due to a bad client request. The error message will be in the first element of &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d580d93259ce9410b45bf0ebf79da8e4773094ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;17&lt;/code&gt;&lt;code&gt;COMPILE_ERROR&lt;/code&gt;: The server failed to run the query due to an ReQL compilation error. The error message will be in the first element of &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0463169c225f26081dedb6340a613120ac613b77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;18&lt;/code&gt;&lt;code&gt;RUNTIME_ERROR&lt;/code&gt;: The query compiled correctly, but failed at runtime. The error message will be in the first element of &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8335bf647142e578d1ecb79de9efcdc973539789" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt;&lt;code&gt;SEQUENCE_FEED&lt;/code&gt;: The stream is a changefeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276f053b55351d9bfea1bbf6381527204c40bd3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt;&lt;code&gt;START&lt;/code&gt;: Start a new query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923611a2fc7f6925fa5752d8e9243b3dd774824b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt;&lt;code&gt;SUCCESS_ATOM&lt;/code&gt;: The whole query has been returned and the result is in the first (and only) element of &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb82b1c8fba9fd90d9deebf85950b4a63a5d2df8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&lt;/code&gt;&lt;code&gt;ATOM_FEED&lt;/code&gt;: The stream is a &lt;em&gt;point&lt;/em&gt; changefeed, i.e., returning changes from a single document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b43967dd6834a3ca5ded5728978ab82d59a3394" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&lt;/code&gt;&lt;code&gt;CONTINUE&lt;/code&gt;: Continue a query that returned &lt;code&gt;SUCCESS_PARTIAL&lt;/code&gt; (see &lt;a href=&quot;#receive-responses&quot;&gt;Receive responses&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa66d82972d72e8129663e6b3f6a794353f808a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&lt;/code&gt;&lt;code&gt;SUCCESS_SEQUENCE&lt;/code&gt;: Either the whole query has been returned in &lt;code&gt;r&lt;/code&gt;, or the last section of a multi-response query has been returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b256f0070740916702f2978e5048664e3b5692ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3000&lt;/code&gt; can be changed to any port that is available on your local server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd5b63a68312c3a8b2293df2f3b3bc403985036" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3&lt;/code&gt;&lt;code&gt;ORDER_BY_LIMIT_FEED&lt;/code&gt;: The stream is a changefeed generated with an &lt;code&gt;order_by().limit()&lt;/code&gt; query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31dfbd2c3bf2d449d0b9737e6830cbece81c1ca5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3&lt;/code&gt;&lt;code&gt;STOP&lt;/code&gt;: Stop a query that is still executing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af56c5cd8b0d8b551003bbee9e220fe8df97c7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3&lt;/code&gt;&lt;code&gt;SUCCESS_PARTIAL&lt;/code&gt;: The query has returned a stream, which may or may not be complete. To retrieve more results for the query, send a &lt;code&gt;CONTINUE&lt;/code&gt; message (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61cbff1f57aafbbc63cbbc54e8278dbc9306a626" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;4&lt;/code&gt;&lt;code&gt;NOREPLY_WAIT&lt;/code&gt;: Wait for noreply operations to finish. The server will return a &lt;code&gt;WAIT_COMPLETE&lt;/code&gt; response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf33bab6b56a156b365da444b9802421d5686f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;4&lt;/code&gt;&lt;code&gt;UNIONED_FEED&lt;/code&gt;: The stream is a union of multiple changefeed types that cannot be collapsed to a single type, e.g., &lt;code&gt;r.table('test').changes().union(r.table('test').get(0).changes())&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11cf1687b053a13d6f09259ac04c3009a31af955" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;4&lt;/code&gt;&lt;code&gt;WAIT_COMPLETE&lt;/code&gt;: This &lt;code&gt;ResponseType&lt;/code&gt; indicates all queries run in &lt;code&gt;noreply&lt;/code&gt; mode have finished executing. &lt;code&gt;r&lt;/code&gt; will be empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ca6cc5e634b16d9586e3a2da0f77ec94f2a25e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;5&lt;/code&gt;&lt;code&gt;INCLUDES_STATES&lt;/code&gt;: The stream is a changefeed that includes states notes, e.g., `{state: &amp;lsquo;initializing&amp;rsquo;}.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef470377ccd3f3c078976cf56e825837e70c268a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;5&lt;/code&gt;&lt;code&gt;SERVER_INFO&lt;/code&gt;: Ask for server information. The server will return a &lt;code&gt;SERVER_INFO&lt;/code&gt; response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8b378c097f4707e949502deb39e25351471217" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;5&lt;/code&gt;&lt;code&gt;SERVER_INFO&lt;/code&gt;: The response to a &lt;code&gt;SERVER_INFO&lt;/code&gt; request. The data will be in the first (and only) element of &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6ff29f63f5be6afab1821457251dd57da72d7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CONTINUE&lt;/code&gt; and &lt;code&gt;STOP&lt;/code&gt; should be sent on the same connection with the same token generated for that query&amp;rsquo;s &lt;code&gt;START&lt;/code&gt; message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7649bf53093e2c10dcf7b73abe04b9d570674049" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOST&lt;/code&gt; is the ip of any server on your RethinkDB cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5689f4f84eb940ab8522646aba4fd6e5aee58754" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReqlAuthError&lt;/code&gt;: the client failed authentication with the server. This is a subclass of &lt;code&gt;ReqlDriverError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca5058465d005b8a501209bab7ec44104214cb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReqlAvailabilityError&lt;/code&gt;: the parent class of &lt;code&gt;ReqlOpFailedError&lt;/code&gt; and &lt;code&gt;ReqlOpIndeterminateError&lt;/code&gt;, indicating that a server in the cluster is unavailable. Programs may use this to catch any availability error, but the server will always return one of this class&amp;rsquo;s children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704ed09e61baf0588de1c02c71042ee3a10a35bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReqlCompileError&lt;/code&gt;: the query cannot be compiled by the server. This may be due to a syntax error, such as an unrecognized optional argument, or specifying the wrong number of arguments to a command. &lt;strong&gt;Note:&lt;/strong&gt; Some drivers may catch certain syntax errors and return a &lt;code&gt;ReqlDriverError&lt;/code&gt; before sending the query to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d6f1d0d3d1b8442361fca55874289a93bf222d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReqlDriverError&lt;/code&gt;: an error has occurred within the driver. This may be a driver bug, or it may be an unfulfillable command, such as an unserializable query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885201586a65ea302674b41b3668e62a057b310e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReqlInternalError&lt;/code&gt;: query execution stopped due to an internal error, i.e., a server bug.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7a4c62425125eadc1ab6902a3f7e5501abc94f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReqlNonExistenceError&lt;/code&gt;: a &lt;code&gt;ReqlQueryLogicError&lt;/code&gt; that results from accessing a non-existent field or something else that can be handled with the &lt;a href=&quot;../../api/javascript/default/index&quot;&gt;default&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1096d8c508f330b4ade107a19124358af4a810" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReqlOpFailedError&lt;/code&gt;: the operation has failed due to cluster state, configuration or table availability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="018f3d75db22466100064e4a4b664d07f43deca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReqlOpIndeterminateError&lt;/code&gt;: the status of the operation cannot be verified due to cluster state, configuration or table availability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e851cd6dc8d0f8d0e5c79f582286fe7dfff20d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReqlPermissionsError&lt;/code&gt;: the user account does not have the permissions necessary to execute the query. See &lt;a href=&quot;../permissions-and-accounts/index&quot;&gt;Permissions and user accounts&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83233786e1379fd57fea176a83552734a75bbebb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReqlQueryLogicError&lt;/code&gt;: the query contains a logical impossibility, such as adding a number to a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a5df5e31c9882e3dd55d9014913620f67db1ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReqlResourceLimitError&lt;/code&gt;: query execution caused a resource limit (for example, the array size limit) to be exceeded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0dd618a78a224ead0c380ab84c7d80a3d38bdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReqlRuntimeError&lt;/code&gt;: the parent class of all runtime errors (all errors on the server unrelated to compilation). Programs may use this to catch any runtime error, but the server will always return a more specific error class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9cca623b7b3f6031ed7c54530af5cca97c8301" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReqlTimeoutError&lt;/code&gt;: the query has timed out. (This error happens on the client, not the server. Depending on driver implementation it may derive from a native error class rather than &lt;code&gt;ReqlError&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5236b30fb5b1f43cfd948c1d2ee130b1e8540db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReqlUserError&lt;/code&gt;: an error produced by the &lt;a href=&quot;../../api/javascript/error/index&quot;&gt;error&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef5dc10c039cc758b78c631ed236e18846ad45a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add&lt;/code&gt;: a new value added to the result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0d5a5516bfa1ac6cb4b518e60a66a578fa483f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application/json-p&lt;/code&gt;, &lt;code&gt;text/json-p&lt;/code&gt;, &lt;code&gt;text/javascript&lt;/code&gt;: as &lt;code&gt;jsonp&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8456e6a319dd731da3c274f95b2b6eb0a098e595" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application/json&lt;/code&gt;: as &lt;code&gt;json&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef9b9cf0cfa465298f762e59ee4230030cdcb10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argv&lt;/code&gt;: the command line arguments the server started with, as an array of strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f02b08e41287e720233f83a3ab3e3153cddb1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arrayLimit&lt;/code&gt;: the maximum numbers of array elements that can be returned by a query (default: 100,000). This affects all ReQL commands that return arrays. Note that it has no effect on the size of arrays being &lt;em&gt;written&lt;/em&gt; to the database; those always have an upper limit of 100,000 elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad229618d2633d318e91d01a8c1d900710ce670" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attempts&lt;/code&gt;: number of retry attempts to make after failed connections (default &lt;code&gt;5&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718c832add961eb6765eb6bee18e038acae73d2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;audio/*&lt;/code&gt;, &lt;code&gt;video/*&lt;/code&gt;, &lt;code&gt;image/*&lt;/code&gt;, &lt;code&gt;application/octet-stream&lt;/code&gt;: as &lt;code&gt;binary&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14261020915b8ede002a4ceb4eb01816fe024c27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auth&lt;/code&gt;: object giving authentication, with the following fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="671434ee928c3859f7aef2a8eba9a36f7d33a655" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto&lt;/code&gt;: parse the result based on its &lt;code&gt;Content-Type&lt;/code&gt; (the default):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44fdd8ec3e3ee4a4c39b1e5ecf036944d94950ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b&lt;/code&gt;: a backtrace if &lt;code&gt;t&lt;/code&gt; is an error type; this field will not be present otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54967b62d982afb4e24b9f9463c21d81f7fb95ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backfilling&lt;/code&gt;: the server is receiving data from another server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99417f89f197e05bd23c587820755e766e03c00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binary&lt;/code&gt;: return a binary object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39d33408242ae0241fc8e22b91d820ef5f11b10a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binaryFormat&lt;/code&gt;: what format to return binary data in (default: &lt;code&gt;'native'&lt;/code&gt;). Set this to &lt;code&gt;'raw'&lt;/code&gt; if you want the raw pseudotype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72adab6f8bc3b66de7d52a342b608183d78b73b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bind-cluster&lt;/code&gt;: Similar to &lt;code&gt;bind&lt;/code&gt;, but only for the cluster connection port. This option will override &lt;code&gt;bind&lt;/code&gt; for this port if both are specified in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f214ea6a85a9b49b73c5b2f0c304d742a5c9cc98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bind-driver&lt;/code&gt;: Similar to &lt;code&gt;bind&lt;/code&gt;, but only for the client driver connection port. This option will override &lt;code&gt;bind&lt;/code&gt; for this port if both are specified in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95ea94b64bcd82535830f251d7a004cf240e69a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bind-http&lt;/code&gt;: Similar to &lt;code&gt;bind&lt;/code&gt;, but only for the web UI connection port. This option will override &lt;code&gt;bind&lt;/code&gt; for this port if both are specified in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c2427b447126d194ed4ab1e42f100663f805b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bind&lt;/code&gt;: Address of local interfaces to listen on when accepting connections. May be &amp;lsquo;all&amp;rsquo; or an IP address, loopback addresses are enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69a27dc8e4a76ed7b14a96d987a95c70d0af505" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ca&lt;/code&gt;: a list of &lt;a href=&quot;http://nodejs.org&quot;&gt;Node.js&lt;/a&gt;&lt;code&gt;Buffer&lt;/code&gt; objects containing SSL CA certificates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d895741f45b02d4d926d7582ec4427c7cb243c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache-size&lt;/code&gt;: Size of the cache in MB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49a8fff6a8423d27464960d15c6fe770d5ac0b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache_size_mb&lt;/code&gt;: the cache size in megabytes. (This can be &lt;a href=&quot;../cluster-on-startup/index&quot;&gt;configured on startup&lt;/a&gt; or by editing the &lt;code&gt;server_status&lt;/code&gt; entry for that server.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12657521722d64126623e7b0a807c73625763054" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache_size_mb&lt;/code&gt;: the server&amp;rsquo;s cache size, either a number (the desired size in megabytes) or &lt;code&gt;&quot;auto&quot;&lt;/code&gt; (let the server decide on startup, based on the system&amp;rsquo;s available memory).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90d8f524136a48a0f7cb08d986368d4677033f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;canonical-address&lt;/code&gt;: Address that other rethinkdb instances will use to connect to this machine. The address must be specified as &lt;code&gt;host:port&lt;/code&gt; if the instance uses a port other than &lt;code&gt;29015&lt;/code&gt;. This option can be specified multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4d2b3fe0b045c252257e699c92f9242d24a734" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;canonical_addresses&lt;/code&gt;: a list of the canonical addresses and ports of the server. These may differ from &lt;code&gt;hostname&lt;/code&gt; and &lt;code&gt;cluster_port&lt;/code&gt; depending on your network configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2552a889bd50fe80cf4f00ffc638a4ab66f5d25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;change&lt;/code&gt;: an existing value changed in the result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ce4eb4516faa29d8a7d897328ce27bbf1ba893" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;changefeedQueueSize&lt;/code&gt;: the number of changes the server will buffer between client reads before it starts dropping changes and generates an error (default: 100,000).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98e3589ac068b7b32b3dcf7a6cd516469bf4420" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;changes&lt;/code&gt;: if &lt;code&gt;returnChanges&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, this will be an array of objects, one for each objected affected by the &lt;code&gt;delete&lt;/code&gt; operation. Each object will have two keys: &lt;code&gt;{new_val:null,old_val:&amp;lt;oldvalue&amp;gt;}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b1ac8e9da350d140d3ca9e9fb00f6914b3cc0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;changes&lt;/code&gt;: if &lt;code&gt;returnChanges&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, this will be an array of objects, one for each objected affected by the &lt;code&gt;insert&lt;/code&gt; operation. Each object will have two keys: &lt;code&gt;{new_val:&amp;lt;newvalue&amp;gt;,old_val:null}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec97053164d9172924f0ec2fc5712d4aaba3ec7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;changes&lt;/code&gt;: if &lt;code&gt;returnChanges&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, this will be an array of objects, one for each objected affected by the &lt;code&gt;replace&lt;/code&gt; operation. Each object will have two keys: &lt;code&gt;{new_val:&amp;lt;newvalue&amp;gt;,old_val:&amp;lt;oldvalue&amp;gt;}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1ab2419470539cb17300b422fe77d57c11b3f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;changes&lt;/code&gt;: if &lt;code&gt;returnChanges&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, this will be an array of objects, one for each objected affected by the &lt;code&gt;update&lt;/code&gt; operation. Each object will have two keys: &lt;code&gt;{new_val:&amp;lt;newvalue&amp;gt;,old_val:&amp;lt;oldvalue&amp;gt;}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a24147a756b4073364c3c0678244a980adf2ebd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;close&lt;/code&gt;: the connection has been closed, either through an error or by calling &lt;code&gt;connection.close()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07c1fdc70ec0cdbde4261e1c6bf841a27f2298d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster-reconnect-timeout&lt;/code&gt;: the amount of time, in seconds, this server will try to reconnect to a cluster if it loses connection before giving up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5dcad752f3c76e85ca6ef2aba53470a2484103" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster-tls-ca&lt;/code&gt;: the filename of a CA certificate to use for verifying cluster connections. All three &lt;code&gt;cluster-tls-*&lt;/code&gt; configurations must be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e811204febb518ee2829f6cb85d065319aa58649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster-tls-cert&lt;/code&gt;: the filename of a TLS certificate to use for cluster connections. All three &lt;code&gt;cluster-tls-*&lt;/code&gt; configurations must be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149f5be18f09db1edcfd776b3e51c9fccba70065" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster-tls-key&lt;/code&gt;: the filename of a private key to use with TLS for cluster connections. All three &lt;code&gt;cluster-tls-*&lt;/code&gt; configurations must be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66626aa9cc071eda86c3a86d5f0ec7bae163f61d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster_config&lt;/code&gt; stores the authentication key for the cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824d3f28e910ce7920c38a811fd68939fd78ffba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;concatMap&lt;/code&gt; works in a similar fashion to &lt;a href=&quot;../map/index&quot;&gt;map&lt;/a&gt;, applying the given function to each element in a sequence, but it will always return a single sequence. If the mapping function returns a sequence, &lt;code&gt;map&lt;/code&gt; would produce a sequence of sequences:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd950102f1ab86351c0d28cb9af28e2f5e930adf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config&lt;/code&gt; allows users different abilities, depending on its scope:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a796436bfb8d835ee4c7e0b195afac52fc9505d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config&lt;/code&gt; allows users to create/drop &lt;a href=&quot;../../../docs/secondary-indexes/javascript/index&quot;&gt;secondary indexes&lt;/a&gt; on a table and changing the cluster configuration; to create and drop tables, if granted on a database; and to create and drop databases, if granted globally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e812b8e92b23cac52b2071bb7555c14c63cb128" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config_changes&lt;/code&gt;: a list containing one object with two fields, &lt;code&gt;old_val&lt;/code&gt; and &lt;code&gt;new_val&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2a03ee881e09f0328d99b56442b0bbaa23af19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config_changes&lt;/code&gt;: a list containing one two-field object, &lt;code&gt;old_val&lt;/code&gt; and &lt;code&gt;new_val&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48f163f2d2704434925e352f3a013e899ab6d02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config_changes&lt;/code&gt;: a list of new and old table configuration values. Each element of the list will be an object with two fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c111bcd124e6675267da9367aa929dc50488a293" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conflict&lt;/code&gt;: Determine handling of inserting documents with the same primary key as existing entries. There are three built-in methods: &lt;code&gt;&quot;error&quot;&lt;/code&gt;, &lt;code&gt;&quot;replace&quot;&lt;/code&gt; or &lt;code&gt;&quot;update&quot;&lt;/code&gt;; alternatively, you may provide a conflict resolution function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b46f8fe9f014f5ed97e55df2f028010c43064dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connect&lt;/code&gt; allows a user to open HTTP connections via the &lt;a href=&quot;../../api/javascript/http/index&quot;&gt;http&lt;/a&gt; command. (Restricting this offers security against an exploit in your code being used to circumvent firewall restrictions.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9552dc950715cfdfd0c4556dc3f08dce765ebde5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connect&lt;/code&gt; allows a user to open HTTP connections via the &lt;a href=&quot;../http/index&quot;&gt;http&lt;/a&gt; command. This permission can only be granted in global scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d9e3090e757c8bf4e615f9dd42bc2679f9d1b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connect&lt;/code&gt;: a successful connection to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c0882bce9db5a2dd81a0529b485b0240b35824" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connected_to&lt;/code&gt;: a key/value list of servers this server is either currently connected to (&lt;code&gt;true&lt;/code&gt;), or knows about but is not currently connected to (&lt;code&gt;false&lt;/code&gt;). In most cases other servers will be identified by name, but if the server being queried cannot determine the name of a server in the cluster it is not connected to, it will be identified by UUID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3654315de22509219c5ff09a319752468e6223" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cores&lt;/code&gt;: Number of cores to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac14ec45bde284b4e127dbaddc286f97f72d2c06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;critical&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt; if the issue is likely to cause loss of availability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78abe08848cf2984d7ea5e69970c3b426576b4f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;current_issues&lt;/code&gt; is a read-only table that returns statistics about cluster problems. For details, read the &lt;a href=&quot;../system-issues/index&quot;&gt;System current issues table&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2410deab9ee199f115f2cb819add704409447573" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt;: Data to send to the server on a &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;PATCH&lt;/code&gt;, or &lt;code&gt;DELETE&lt;/code&gt; request. For &lt;code&gt;POST&lt;/code&gt; requests, data may be either an object (which will be written to the body as form-encoded key/value pairs) or a string; for all other requests, data will be serialized as JSON and placed in the request body, sent as &lt;code&gt;Content-Type: application/json&lt;/code&gt;. Default: no data will be sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ed56cb878785a81ba3ea54c3dd6caa1c4b11d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;database&lt;/code&gt;: the name of the database these permissions apply to, only present for permissions with database or table scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63dd2f302d14b75180915520e79b2345ea89d3d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;day&lt;/code&gt; is an integer between 1 and 31.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7c535c898e42e377e85bda57e8ce292790daf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;db&lt;/code&gt;: the database the table is in, either a name or UUID depending on the value of &lt;code&gt;identifier_format&lt;/code&gt; (see &amp;ldquo;caveats&amp;rdquo; in the overview at the top of this document).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb8a426fa2e1f1ea1e2bb95531764512b8679e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;db&lt;/code&gt;: the database the table is in, either a name or UUID depending on the value of &lt;code&gt;identifier_format&lt;/code&gt;. Read-only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b9ca3f97370ea825ce420a86851e3f26d5a124" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;db&lt;/code&gt;: the database the table is in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b429a9d6616897c9156aa887dab0fae340c747" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;db&lt;/code&gt;: the database to run this query against as a string. The default is the database specified in the &lt;code&gt;db&lt;/code&gt; parameter to &lt;a href=&quot;../connect/index&quot;&gt;connect&lt;/a&gt; (which defaults to &lt;code&gt;test&lt;/code&gt;). The database may also be specified with the &lt;a href=&quot;../db/index&quot;&gt;db&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e44d61d3ae5f98333bd96a9a05de8e47935a482" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;db&lt;/code&gt;: the default database (default &lt;code&gt;test&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4e6d28049fb3ef2a2d727fc9b998c98871b261" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;db_config&lt;/code&gt; stores database UUIDs and names. By writing to this table, databases can be created, deleted or modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ffb3bebc04bc5cb3546c03a8eea3c35b6ad56d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dbs_created&lt;/code&gt;: always &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7600c701f848d264ffc9861c6861f5359d946043" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dbs_dropped&lt;/code&gt;: always &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa026c448551fbad4330a7723de2b8bfc5392ba0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deleted&lt;/code&gt; &amp;ndash; Number of documents deleted from the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556c913275ae1689fa9c5c221343db664cca1b64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deleted&lt;/code&gt; and &lt;code&gt;inserted&lt;/code&gt;: 0 for an update operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451133b65e50fb6b365a41c044b0fcb905dc359e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deleted&lt;/code&gt; and &lt;code&gt;skipped&lt;/code&gt;: 0 for an insert operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed1c464838a33f6370afb300372d687486a2516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deleted&lt;/code&gt;: the number of deleted documents when doing a replace with &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be604d7dea8819a2ac921b9b5a5bac45d3f9d36d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deleted&lt;/code&gt;: the number of documents that were deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454ba5a476628e2648e218d8b19d1e9d6d05ff0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;description&lt;/code&gt;: a human-readable description of the problem, including suggestions for how to solve it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5148f5ae685fc24408e52bb6a91e64cc71c4bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;direct-io&lt;/code&gt;: Use direct I/O for file system access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794161287eae991c09bd5d2a15ed2a765414ab43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directory&lt;/code&gt;: the data directory where database tables will be stored. This location must be readable and writable by the user or group (or both) specified by &lt;code&gt;runuser&lt;/code&gt; and &lt;code&gt;rungroup&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268e72fa2cba1ac35bb49bd62e1fdcbeba3dc8c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disconnected&lt;/code&gt;: the server is not connected to the cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d0ce74a0973ac5db769e41b22d169f2c6a6d9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;driver-tls-ca&lt;/code&gt;: the filename of a CA certificate bundle to use for verifying client driver connections. If specified, the server will only accept connections from clients that provide a certificate signed with the CA certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993fcb92451bc8142735aa8c12831d06121de2bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;driver-tls-cert&lt;/code&gt;: the filename of a TLS certificate to use for client driver connections. Both &lt;code&gt;driver-tls-key&lt;/code&gt; and &lt;code&gt;driver-tls-cert&lt;/code&gt; must be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb3fb0c49f9a4f9b964a8e381f6db8c5a96897a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;driver-tls-key&lt;/code&gt;: the filename of a private key to use with TLS for client driver connections. Both &lt;code&gt;driver-tls-key&lt;/code&gt; and &lt;code&gt;driver-tls-cert&lt;/code&gt; must be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15312768e76bb9c532eacbd3eea1c365eae676a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;driver_port&lt;/code&gt; is the RethinkDB driver port (28015 by default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95575361cf783a8a3f5f61b3e8aa7aff4dbb1493" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dryRun&lt;/code&gt;: if &lt;code&gt;true&lt;/code&gt; the generated configuration will not be applied to the table, only returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35375a9f3e111c92d071455a35360c89f43e07e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;durability&lt;/code&gt;: &lt;code&gt;hard&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d278f6c2b57dc70835bf1bb1e0afda87d3811b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;durability&lt;/code&gt;: &lt;code&gt;soft&lt;/code&gt; or &lt;code&gt;hard&lt;/code&gt; (the default). In &lt;code&gt;hard&lt;/code&gt; durability mode, writes are committed to disk before acknowledgements are sent; in &lt;code&gt;soft&lt;/code&gt; mode, writes are acknowledged immediately upon receipt. The &lt;code&gt;soft&lt;/code&gt; mode is faster but slightly less resilient to failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d887b95c0a56a28acae71f6037df7a4630063187" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;durability&lt;/code&gt;: if set to &lt;code&gt;soft&lt;/code&gt;, writes will be acknowledged by the server immediately and flushed to disk in the background. The default is &lt;code&gt;hard&lt;/code&gt;: acknowledgment of writes happens after data has been written to disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ee49cc1a63c0c32971db22720bebb9e3d80c73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;durability&lt;/code&gt;: possible values are &lt;code&gt;'hard'&lt;/code&gt; and &lt;code&gt;'soft'&lt;/code&gt;. In soft durability mode RethinkDB will acknowledge the write immediately after receiving it, but before the write has been committed to disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="360bc69418d46d8274b034dc4e5170276bb5c390" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;durability&lt;/code&gt;: possible values are &lt;code&gt;hard&lt;/code&gt; and &lt;code&gt;soft&lt;/code&gt;. This option will override the table or query&amp;rsquo;s durability setting (set in &lt;a href=&quot;../run/index&quot;&gt;run&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a029ee515512cdac8bd431d6d7c2b18395a70c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;durability&lt;/code&gt;: possible values are &lt;code&gt;hard&lt;/code&gt; and &lt;code&gt;soft&lt;/code&gt;. This option will override the table or query&amp;rsquo;s durability setting (set in &lt;a href=&quot;../run/index&quot;&gt;run&lt;/a&gt;). In soft durability mode RethinkDB will acknowledge the write immediately after receiving and caching it, but before the write has been committed to disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd6d08086733fcbefabb48114dae308fe0823fae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;durability&lt;/code&gt;: possible values are &lt;code&gt;hard&lt;/code&gt; and &lt;code&gt;soft&lt;/code&gt;. This option will override the table or query&amp;rsquo;s durability setting (set in &lt;a href=&quot;../run/index&quot;&gt;run&lt;/a&gt;). In soft durability mode RethinkDB will acknowledge the write immediately after receiving it, but before the write has been committed to disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265aee765af8c9c00540454b6aa4f1e40ba74743" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emergencyRepair&lt;/code&gt;: Used for the Emergency Repair mode. See the separate section below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e877bdb164e72b55a1bfa32e6951b28d519cd50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end&lt;/code&gt;: The matched string&amp;rsquo;s end</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8495f275cc02abf32eaab2f00348198f4ddb2dde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error&lt;/code&gt;: a protocol-level error has occurred. (This will &lt;em&gt;not&lt;/em&gt; be sent on a query error; those are returned to callbacks/promises.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a3ca6449fe4d7a374469d3c02dddd590c706a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;errors&lt;/code&gt; &amp;ndash; Number of documents that were left unmodified due to an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b658a1c316cc3d116ee7e4b360a04f4c23769088" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;errors&lt;/code&gt;: the number of errors encountered while performing the delete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a5eb6aadefa35edc92407867a4b2e34bf8718a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;errors&lt;/code&gt;: the number of errors encountered while performing the insert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f73ec7a16a07871025b9f86698084eb5751c88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;errors&lt;/code&gt;: the number of errors encountered while performing the replace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d30430532e43a6f16a8c4de316b9226239aeef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;errors&lt;/code&gt;: the number of errors encountered while performing the update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d984176cd756f4b6b454a5ba547f6bd2c905be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: All changes will be sent to the client verbatim. This is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f13ca0a8297c156cf81d4fc2235ca5c5b5a61d64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: do not return a &lt;code&gt;changes&lt;/code&gt; array (the default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8da0c132895c1eee7f29dafc83d305ebba582c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: input sequences will be appended to one another, left to right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac720839591b65629fa07f7fe0c54c0a87312a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fill&lt;/code&gt;: if &lt;code&gt;true&lt;/code&gt; (the default) the circle is filled, creating a polygon; if &lt;code&gt;false&lt;/code&gt; the circle is unfilled (creating a line).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f901cc6bce8e10286c494f08679b4da201476c30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;pluck&lt;/code&gt;, &lt;code&gt;order_by&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28291ad7c3b556b525822b55ffd0026d09f37c91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;firstBatchScaledownFactor&lt;/code&gt;: factor to scale the other parameters down by on the first batch (default: 4). For example, with this set to 8 and &lt;code&gt;maxBatchRows&lt;/code&gt; set to 80, on the first batch &lt;code&gt;maxBatchRows&lt;/code&gt; will be adjusted to 10 (80 / 8). This allows the first batch to return faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73339f17bc2c65ada74ac72185b4a2fa03e5eb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;first_error&lt;/code&gt; &amp;ndash; If &lt;code&gt;errors&lt;/code&gt; is positive, the text of the first error message encountered will be in this field. This is a very useful debugging aid. (We don&amp;rsquo;t return all of the errors because a single typo can result in millions of errors when operating on a large database.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5236f7b648bc2f8afe39808cef06cb2c652874" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;first_error&lt;/code&gt;: If errors were encountered, contains the text of the first error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fcdfa2ee4260f90335efd56011d843b2b39102" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function (id, oldDoc, newDoc) { return resolvedDoc }&lt;/code&gt;: a function that receives the id, old and new documents as arguments and returns a document which will be inserted in place of the conflicted one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11840ae2687d0dd8ec0fb64cc8a66bb4b669c5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;generated_keys&lt;/code&gt; &amp;ndash; If you issue an insert query where some or all of the rows lack primary keys, the server will generate primary keys for you and return an array of those keys in this field. (The order of this array will match the order of the rows in your insert query.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76359504e8b7b940081485b3032b95e64fde7af1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;generated_keys&lt;/code&gt;: a list of generated primary keys for inserted documents whose primary keys were not specified (capped to 100,000).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659d26b547f32acfdf99806a468960bb99e9cfbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;geoSystem&lt;/code&gt;: the reference ellipsoid to use for geographic coordinates. Possible values are &lt;code&gt;WGS84&lt;/code&gt; (the default), a common standard for Earth&amp;rsquo;s geometry, or &lt;code&gt;unit_sphere&lt;/code&gt;, a perfect sphere of 1 meter radius.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43124702e06fd7dfae332b2fcda99f89cbd13745" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;group&lt;/code&gt;, &lt;code&gt;eqJoin&lt;/code&gt;, map-reduce</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e414a032780c79c5e64f6dc11b70e349f015f232" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;groupFormat&lt;/code&gt;: what format to return &lt;code&gt;grouped_data&lt;/code&gt; and &lt;code&gt;grouped_streams&lt;/code&gt; in (default: &lt;code&gt;'native'&lt;/code&gt;). Set this to &lt;code&gt;'raw'&lt;/code&gt; if you want the raw pseudotype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8208c4214d2248d0c5cd314bd0ec787005070eb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;groups&lt;/code&gt;: The capture groups defined with parentheses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f54dbb904065de28f259d2edb630976c60dc75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hasFields&lt;/code&gt; lets you test for nested fields in objects. If the value of a field is itself a set of key/value pairs, you can test for the presence of specific keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d486c809b136d813617cef7d502cab5c1810ac94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;header&lt;/code&gt;: Extra header lines to include. The value may be an array of strings or an object. Default: &lt;code&gt;Accept-Encoding: deflate;q=1, gzip;q=0.5&lt;/code&gt; and &lt;code&gt;User-Agent: RethinkDB/&amp;lt;VERSION&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be20d8e7727dec63a4f59e4860b928523c6c67a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;heartbeat_timeout_secs&lt;/code&gt;: the time, in seconds, between when a server loses connectivity to a cluster and the &lt;a href=&quot;../failover/index&quot;&gt;failover&lt;/a&gt; process begins. The default is 10 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa36433e4bd5daf73000464954ccbde21a60b6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;host&lt;/code&gt;: the host to connect to (default &lt;code&gt;localhost&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c3e33ff53327dc034226d81d43acb97907c531" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hostname&lt;/code&gt;: the host name as returned by &lt;code&gt;gethostname()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7826c74a089b48c7a0d5c2e534e84d75c9bd2390" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hour&lt;/code&gt; is an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17fc910295e41cf616de428d0e2dfb732217508" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http-port&lt;/code&gt;, &lt;code&gt;driver-port&lt;/code&gt;, and &lt;code&gt;cluster-port&lt;/code&gt;: the web UI port (default &lt;code&gt;8080&lt;/code&gt;), the client driver port (default &lt;code&gt;28015&lt;/code&gt;), and intracluster traffic port (default &lt;code&gt;29015&lt;/code&gt;), respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1de80a46e5965e45bf141d3c6e98eb399177ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http-tls-cert&lt;/code&gt;: the filename of a TLS certificate to use for the web administration console. Both &lt;code&gt;http-tls-key&lt;/code&gt; and &lt;code&gt;http-tls-cert&lt;/code&gt; must be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448508e9d28921fcc8ce96cf9831bc21d7c3d128" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http-tls-key&lt;/code&gt;: the filename of a private key to use with TLS for the web administration console. Both &lt;code&gt;http-tls-key&lt;/code&gt; and &lt;code&gt;http-tls-cert&lt;/code&gt; must be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ce7a4a797ebbe2945fb82443ad48d47df90e6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;: a list of one to three items indicating the user and the scope for the given permission, the items being a username, a database UUID (for database and table scope), and a table UUID (only for table scope).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b794c4daa04339bdae7e1a958c2287f7895fed0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;: a two-element array, consisting of the timestamp of the log entry (in UTC) and the UUID of the server generating the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba9a54cb55db61897e5d189d1496fd25f584f22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;: the UUID of the database. (Read-only.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01d2dbccf31f490251628d8744a1442caa9cfcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;: the UUID of the server the client is connected to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd25776d0a8fd08c13b7ce42eed20000bbc59955" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;: the UUID of the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b9b8411b81c59b8551b51ffecb71c51622530a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;: the UUID of the server. (Read-only.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc120de4fc4c75fb7c90d5b7865149bd239b18ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;: the UUID of the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea16f2d03e840b5788e833829bf59d259228bf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;: the UUID of the table. Read-only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232c3eb7f60a751ee7d183494c857693cbb13338" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;: the primary key, &lt;code&gt;heartbeat&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7dbf6e3e1a8a56d5f0110c28f68638b42aae6f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;: the primary key; it remains unchanged throughout the issue&amp;rsquo;s lifespan.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06db08dcd6865208c99d3e2e0ac212c2d0703b37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;identifierFormat&lt;/code&gt;: possible values are &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;uuid&lt;/code&gt;, with a default of &lt;code&gt;name&lt;/code&gt;. If set to &lt;code&gt;uuid&lt;/code&gt;, then &lt;a href=&quot;../../../docs/system-tables/index&quot;&gt;system tables&lt;/a&gt; will refer to servers, databases and tables by UUID rather than name. (This only has an effect when used with system tables.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ea86ec1aa887d55e68d7d924cdbdb6c1b113d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;includeInitial&lt;/code&gt;: if &lt;code&gt;true&lt;/code&gt;, the changefeed stream will begin with the current contents of the table or selection being monitored. These initial results will have &lt;code&gt;new_val&lt;/code&gt; fields, but no &lt;code&gt;old_val&lt;/code&gt; fields. The initial results may be intermixed with actual changes, as long as an initial result for the changed document has already been given. If an initial result for a document has been sent and a change is made to that document that would move it to the unsent part of the result set (e.g., a changefeed monitors the top 100 posters, the first 50 have been sent, and poster 48 has become poster 52), an &amp;ldquo;uninitial&amp;rdquo; notification will be sent, with an &lt;code&gt;old_val&lt;/code&gt; field but no &lt;code&gt;new_val&lt;/code&gt; field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef61ef4acd16a8f855414713dc29901642870ddd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;includeOffsets&lt;/code&gt;: if &lt;code&gt;true&lt;/code&gt;, a changefeed stream on an &lt;code&gt;orderBy.limit&lt;/code&gt; changefeed will include &lt;code&gt;old_offset&lt;/code&gt; and &lt;code&gt;new_offset&lt;/code&gt; fields in status documents that include &lt;code&gt;old_val&lt;/code&gt; and &lt;code&gt;new_val&lt;/code&gt;. This allows applications to maintain ordered lists of the stream&amp;rsquo;s result set. If &lt;code&gt;old_offset&lt;/code&gt; is set and not &lt;code&gt;null&lt;/code&gt;, the element at &lt;code&gt;old_offset&lt;/code&gt; is being deleted; if &lt;code&gt;new_offset&lt;/code&gt; is set and not &lt;code&gt;null&lt;/code&gt;, then &lt;code&gt;new_val&lt;/code&gt; is being inserted at &lt;code&gt;new_offset&lt;/code&gt;. Setting &lt;code&gt;includeOffsets&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; on a changefeed that does not support it will raise an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca2377a3e9f52314bb117dacc64f198e9289ed7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;includeStates&lt;/code&gt;: if &lt;code&gt;true&lt;/code&gt;, the changefeed stream will include special status documents consisting of the field &lt;code&gt;state&lt;/code&gt; and a string indicating a change in the feed&amp;rsquo;s state. These documents can occur at any point in the feed between the notification documents described below. If &lt;code&gt;includeStates&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; (the default), the status documents will not be sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97cd94e67e7749aa0394d3457b9727d9086dac51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;includeTypes&lt;/code&gt;: if &lt;code&gt;true&lt;/code&gt;, every result on a changefeed will include a &lt;code&gt;type&lt;/code&gt; field with a string that indicates the kind of change the result represents: &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;change&lt;/code&gt;, &lt;code&gt;initial&lt;/code&gt;, &lt;code&gt;uninitial&lt;/code&gt;, &lt;code&gt;state&lt;/code&gt;. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa480abb05c4c958935121ccf4bcb80dccd32dfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexes&lt;/code&gt;: a list of secondary indexes in the table. Read-only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd445d25178954ce8c5f265381671cef8c39105f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;info&lt;/code&gt;: detail fields; the keys and values will depend on the issue type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9442f23851bf47a7f284ae3beaf0d39d4a22fabe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initial&lt;/code&gt;: an initial value notification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d60cda8b164fc492930dfa78da2aefdc29d3f7be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inserted&lt;/code&gt; &amp;ndash; Number of new documents added to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b24ae10c60fa06b0bc94b6619148854b7735b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inserted&lt;/code&gt;, &lt;code&gt;replaced&lt;/code&gt;, and &lt;code&gt;unchanged&lt;/code&gt;: all 0 for a delete operation..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f95be4d07758bea85df9c85cb94992137b7a08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inserted&lt;/code&gt;: the number of documents successfully inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1e19053a3cf18b5893d46c71d61ba1d824cac4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inserted&lt;/code&gt;: the number of new documents added. A document is considered inserted if its primary key did not exist in the table at the time of the &lt;code&gt;replace&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085ccd2ddfb0f207f6c20ca6a9982fde2270b3b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;io-threads&lt;/code&gt;: Number of simultaneous I/O operations can happen at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be1af578974f9fec57ba306b7929ce02700942a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ip_of_rethinkdb_server&lt;/code&gt; is the IP address of the server that runs the RethinkDB server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff17b0a9b9d0b5671f02580c387c7199e951df4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jobs&lt;/code&gt; lists the jobs&amp;mdash;queries, index creation, disk compaction, and other utility tasks&amp;mdash;the cluster is spending time on, and also allows you to interrupt running queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193a9cfd52d4144cc2d40bfdaab568bd4c80a8dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;join&lt;/code&gt;: The &lt;code&gt;host:port&lt;/code&gt; of a node that Rethinkdb will connect to. It can be specified multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dabe6fc89adb6a80f4ab1371736d31c1feab2c54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;json&lt;/code&gt;: parse the result as JSON, raising an error on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67174511bd6c6c88c20a85cc7bc4cf4aeaef74b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jsonp&lt;/code&gt;: parse the result as &lt;a href=&quot;https://en.wikipedia.org/wiki/JSONP&quot;&gt;Padded JSON&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50bde490a374180bb23aaf1238b3dd166c4e7753" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;level&lt;/code&gt;: a string indicating the log message&amp;rsquo;s severity level. One of &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;notice&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, or &lt;code&gt;error&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4874ccb68a19d84b6e13f02bd116349d39455d27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;limit&lt;/code&gt;, &lt;code&gt;skip&lt;/code&gt;, &lt;code&gt;slice&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6a45defaa2771235285e1187e52f0fe58cd415" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;local_port&lt;/code&gt; is the port you are going to specify in the driver - It can be any available port on your server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6986854e6ef783e84ebba7574ec3891a418d7e81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log-file&lt;/code&gt;: path to the log file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8581258e7f4cece4dee3a23dea9f84bc7bbeb0df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logs&lt;/code&gt; is a read-only table that stores log messages from all the servers in the cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e096a688b639f5fb4dbd51c369eadb50198064b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;majority&lt;/code&gt; will only return values that are safely committed on disk on a majority of replicas. This requires sending a message to every replica on each read, so it is the slowest but most consistent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c380e2bcc631911a7df0e863c59910a6ecdb8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;majority&lt;/code&gt;: The cluster sends the acknowledgement when the majority of replicas have acknowledged it. This is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c5d8c78d228921175608584c6ff561d780bca6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;avg&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbebcfd7731f3fb2ea2eee3d19368b2b9572e4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxBatchBytes&lt;/code&gt;: maximum number of bytes to wait for before batching a result set (default: 1MB). This is an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32f8652e94e9924d821dabc6edc9d867404ddcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxBatchRows&lt;/code&gt;: maximum number of rows to wait for before batching a result set (default: unlimited). This is an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3272a5db86fd151bff302c2d0506a5c3b581eeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxBatchSeconds&lt;/code&gt;: maximum number of seconds to wait before batching a result set (default: 0.5). This is a float (not an integer) and may be specified to the microsecond.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115801e4c1d94462f11fbf556a4ad96f978d9399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxDist&lt;/code&gt;: the maximum distance from an object to the specified point (default 100 km).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e1ea9948214e03965c90407d4b109ac7d13cf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxResults&lt;/code&gt;: the maximum number of results to return (default 100).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872d44839ff725b32787ba539975f23a2319422f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt;: the contents of the log message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c3f6899d10f32cf10b3e648f28f8faef2087c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;method&lt;/code&gt;: HTTP method to use for the request. One of &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;PATCH&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt; or &lt;code&gt;HEAD&lt;/code&gt;. Default: &lt;code&gt;GET&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c087c8cae7c964f73efabb6185f8afc8a7b236" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt; and &lt;code&gt;orderBy&lt;/code&gt; must be used with indexes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56dc41e5f344ca9affb1efc31b8e400c43de8739" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minBatchRows&lt;/code&gt;: minimum number of rows to wait for before batching a result set (default: 8). This is an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1c3d062f35cf3db374a05e569a7ab01dfe95a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minutes&lt;/code&gt; is an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="580af8d7744533ce60bc16051438765e23cd482f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;month&lt;/code&gt; is an integer between 1 and 12.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af40e1b5bed27232bcb9bc19a1cf151ddbcecd96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt;: &lt;code&gt;n&lt;/code&gt; requests will be made</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc1ba3001124c0c71d0ea0fd233209ecdc04688" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt;: A numeric value (floating point). Similar to &lt;code&gt;true&lt;/code&gt;, but the server will wait &lt;code&gt;n&lt;/code&gt; seconds to respond in order to squash as many changes together as possible, reducing network traffic. The first batch will always be returned immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b05a91f6b9706dee28eaf6a0888851de4e0a0dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt;: an optional array of &lt;code&gt;ResponseNote&lt;/code&gt; values, as defined in &lt;code&gt;ql2.proto&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd348504b64098842079fb04b8f60ab3e34065f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: the name of the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7f28d589c97c8ca55b3f6fa6b34f37d0536680" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: the name of the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589a19297506e952ba422414a0f6f4713fff26ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: the name of the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05263ec03eae129e5cdeb7cd11ffbae64ec42dba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: the server name. If &lt;code&gt;proxy&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, this field will not be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63260f2b756cff6b4411289182afc4e16a74bd75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: the server&amp;rsquo;s name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5606523f352ad1fa0331ebb90b816e9fca39818" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: the table&amp;rsquo;s name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde658f9a28092bff1ea62e52c2269c274c9489c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;network&lt;/code&gt;: information about the network the server is on:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d5a9d0b5aed0d8dbc2087be1a1e2aef7b9ce0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_val&lt;/code&gt;: The table&amp;rsquo;s &lt;code&gt;config&lt;/code&gt; value after &lt;code&gt;reconfigure&lt;/code&gt; was executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c5f11ea32e4cc818a6a51daf4fc983c7a624f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_val&lt;/code&gt;: The table&amp;rsquo;s &lt;code&gt;status&lt;/code&gt; value after &lt;code&gt;rebalance&lt;/code&gt; was executed. (This value will almost always indicate the table is unavailable.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebdb809687ca42efab5bb716e785f4812c610774" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_val&lt;/code&gt;: The table&amp;rsquo;s &lt;code&gt;status&lt;/code&gt; value after &lt;code&gt;reconfigure&lt;/code&gt; was executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b086da0628d34b5befa8f434e00d810d91487a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_val&lt;/code&gt;: always &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea7363ee3c13ff12681cfa2fcc50eb1cf387914" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_val&lt;/code&gt;: the database&amp;rsquo;s new &lt;a href=&quot;../config/index&quot;&gt;config&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38df1dfcaf36b7cb5668d9105922c85f62670794" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_val&lt;/code&gt;: the table&amp;rsquo;s new &lt;a href=&quot;../config/index&quot;&gt;config&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fefe8cbc1a1b5e137de4b89867d9dec7cf08e6ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no-http-admin&lt;/code&gt;: Disable web administration console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4c47b95a3e2a1c1fe34ba80ca3285f351c2b21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nonAtomic&lt;/code&gt;: if set to &lt;code&gt;true&lt;/code&gt;, executes the replacement and distributes the result to replicas in a non-atomic fashion. This flag is required to perform non-deterministic updates, such as those that require reading data from another table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0baec12d80a1503833ed2e3e2a7f22c17b52fbbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nonAtomic&lt;/code&gt;: if set to &lt;code&gt;true&lt;/code&gt;, executes the update and distributes the result to replicas in a non-atomic fashion. This flag is required to perform non-deterministic updates, such as those that require reading data from another table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787f29e95ca66afe4009f57f79a4d337731b1f92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nonvotingReplicaTags&lt;/code&gt;: replicas with these server tags will be added to the &lt;code&gt;nonvoting_replicas&lt;/code&gt; list of the resulting configuration. (See &lt;a href=&quot;../../../docs/failover/index&quot;&gt;failover&lt;/a&gt; for details about non-voting replicas.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04392f6fa1034bef4480e8a5640486468a9e9e3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nonvoting_replicas&lt;/code&gt;: a list of servers which do not participate in &amp;ldquo;voting&amp;rdquo; as part of &lt;a href=&quot;../failover/index&quot;&gt;failover&lt;/a&gt;. If this field is omitted, it is treated as an empty list. This list must be a subset of the &lt;code&gt;replicas&lt;/code&gt; field and must not contain the primary replica.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ce09ab45cc13d5f4fb03dd58f7aebe5013dd1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noreply&lt;/code&gt;: set to &lt;code&gt;true&lt;/code&gt; to not receive the result object or cursor and return immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52befced4a127bc527c1f8adc90c2f844f6a0150" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noreplyWait&lt;/code&gt; ensures that previous queries with the &lt;code&gt;noreply&lt;/code&gt; flag have been processed by the server. Note that this guarantee only applies to queries run on the given connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99637a17b9501efec527888e26207339c6e52b30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;not&lt;/code&gt; can be called either via method chaining, immediately after an expression that evaluates as a boolean value, or by passing the expression as a parameter to &lt;code&gt;not&lt;/code&gt;. All values that are not &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; will be converted to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a010aff40a8c5b222f6142c7facb568b6f72dc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;numVertices&lt;/code&gt;: the number of vertices in the polygon or line. Defaults to 32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cca1f98a37a1a7ef6af1f5161541e5fd6922733" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;old_val&lt;/code&gt;: The table&amp;rsquo;s &lt;a href=&quot;../config/index&quot;&gt;config&lt;/a&gt; value before &lt;code&gt;reconfigure&lt;/code&gt; was executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a50f7dc70848cec443571d688cb983314a1ae8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;old_val&lt;/code&gt;: The table&amp;rsquo;s &lt;a href=&quot;../status/index&quot;&gt;status&lt;/a&gt; value before &lt;code&gt;rebalance&lt;/code&gt; was executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af703dfbb9546ad4e308190a526207ef1284ffd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;old_val&lt;/code&gt;: The table&amp;rsquo;s &lt;a href=&quot;../status/index&quot;&gt;status&lt;/a&gt; value before &lt;code&gt;reconfigure&lt;/code&gt; was executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c566aa834b0aac07358e2be5601b51bfb0fc40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;old_val&lt;/code&gt;: always &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9581140876e488e6648163aa262ac867f0704005" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;old_val&lt;/code&gt;: the database&amp;rsquo;s original &lt;a href=&quot;../config/index&quot;&gt;config&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64dfc56e5d00b48607d6dea5592a7045161aa4de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;old_val&lt;/code&gt;: the dropped table&amp;rsquo;s &lt;a href=&quot;../config/index&quot;&gt;config&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024b1e85f74005d44438684ff8940852bca83e3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;on_change&lt;/code&gt;: changes will be passed to this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb2909f0981dfe4bdee29278b65a4a912ffe157" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;on_change_error&lt;/code&gt;: if the feed includes a document specifying errors that do not cause the feed to abort (for instance, a notification the server discarded some changes), those errors will be passed to this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc12fe0ba55d097518ef8087a85d164ce5bde43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;on_initial_val&lt;/code&gt;: if the changefeed returns initial values (&lt;code&gt;include_initial&lt;/code&gt; has been specified as an option to &lt;a href=&quot;https://rethinkdb.com/api/ruby/changes/&quot;&gt;changes&lt;/a&gt;, those values will be passed to this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fecf4a0556a771fba74bb2db76b24cccc17fa639" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;on_state&lt;/code&gt;: a feed may include documents specifying the state of the stream; those documents will be passed to this function if defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89bd8b024496204bdb2445bdebfa146e6a2c758a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;on_uninitial_val&lt;/code&gt;: a changefeed that returns initial values may also return &amp;ldquo;uninitial&amp;rdquo; values to indicate a document already sent as an initial value has been changed (see the &lt;code&gt;changes&lt;/code&gt; documentation for details); those values, if any, will be passed to this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddc1cae6a2cec8e41e734816aaacf6b4bbbc5b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;orderBy&lt;/code&gt; must be used with a &lt;a href=&quot;../../secondary-indexes/javascript/index&quot;&gt;secondary index&lt;/a&gt; or the primary index; it cannot be used with an unindexed field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b40ac11fab52fbacd4d07b13d8a721756cea80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;orderBy&lt;/code&gt; requires &lt;code&gt;limit&lt;/code&gt;; neither command works by itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49774f1a9d4ac12f3bddf3ab6aea0c4d27dd88d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;order_by&lt;/code&gt; (with or without indexes)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37593c3bef34fb2943d91e05ee38be54a53d74ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;order_by&lt;/code&gt;&lt;em&gt;with&lt;/em&gt; indexes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563ac3004eef7f084eb4b0ac05dc7f17871234fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outdated&lt;/code&gt; will return values that are in memory on an arbitrarily-selected replica. This is the fastest but least consistent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711b14fa71e946e980242a240c5b99c8513d3e73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;p&lt;/code&gt;: a profile if the global optarg &lt;code&gt;profile: true&lt;/code&gt; was specified; this field will not be present otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0935dfa6dbd8c0a17d1bb1fbf410cdf26735d71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;page&lt;/code&gt;: This option may specify either a built-in pagination strategy (see below), or a function to provide the next URL and/or &lt;code&gt;params&lt;/code&gt; to request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f134af5ebebf91d9e45ecc3b825c4620ccb454a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pageLimit&lt;/code&gt;: An integer specifying the maximum number of requests to issue using the &lt;code&gt;page&lt;/code&gt; functionality. This is to prevent overuse of API quotas, and must be specified with &lt;code&gt;page&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7aa42e35286afd65fb7f9be8726be07790c1e64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt;: object specifying URL parameters to append to the URL as encoded key/value pairs. &lt;code&gt;{query:'banana',limit:2}&lt;/code&gt; will be appended as &lt;code&gt;?query=banana&amp;amp;limit=2&lt;/code&gt;. Default: no parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ef116a714edb137db8e938c57f4004d34d1572" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pass&lt;/code&gt;: password in plain text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868f9ff90aae9893837618fe6997d06c37c27273" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;password&lt;/code&gt;: the password for the user account to connect as (default &lt;code&gt;''&lt;/code&gt;, empty).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc745199d5d3131322383ed8f9638fe6668b86c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;permissions&lt;/code&gt; stores permissions and scopes associated with RethinkDB user accounts. (See &lt;a href=&quot;../permissions-and-accounts/index&quot;&gt;Permissions and user accounts&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ecf7294c32e9f790028cec23d7be908bd37259" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;permissions&lt;/code&gt;: an object with one to four boolean keys corresponding to the valid permissions (&lt;code&gt;read&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;connect&lt;/code&gt; and &lt;code&gt;config&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a86faeb8af39d5cbb98994c1b0984db48b1c830" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pid-file&lt;/code&gt;: the location of the file with the RethinkDB instance process ID (used by the init script to communicate with the server process).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4c1c3d748c64c746a40d61314d626ae63e2906" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pid&lt;/code&gt;: the process ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a724c8a3f7ed30d57d86a3f06eeeae5e6b21960c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port-offset&lt;/code&gt; All ports used locally will have this value added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca3e6db631d1bc96564f94e9018c2a6bfbd340e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port&lt;/code&gt;: the port to connect on (default &lt;code&gt;28015&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033e53fbb48745c668b9f398956e311ddae93ec8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;primaryKey&lt;/code&gt;: the name of the primary key. The default primary key is &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7878247e3154f179b3a4e26e98967407ed5e4f84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;primaryReplicaTag&lt;/code&gt;: the primary server specified by its server tag. Required if &lt;code&gt;replicas&lt;/code&gt; is an object; the tag must be in the object. This must &lt;em&gt;not&lt;/em&gt; be specified if &lt;code&gt;replicas&lt;/code&gt; is an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470fe0d2ee63fbb4340cb39084e8eec184e2ef3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;primary_key&lt;/code&gt;: the name of the field used as the primary key of the table, set at table creation. Read-only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b8e119a3c35a25a9c5a530829120d978d5b30f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;primary_replica&lt;/code&gt;: the name or UUID of the server acting as the shard&amp;rsquo;s primary. If &lt;code&gt;primary_replica&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the table will be unavailable. This may happen if the server acting as the shard&amp;rsquo;s primary is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c29143e5db50fef3c7ae2e4d5cc188c899abb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;primary_replicas&lt;/code&gt;: a list of zero or more servers acting as primary replicas for the shard. If it contains more than one server, different parts of the shard are being served by different primaries; this is a temporary condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76dc5a3bb3fa40481e630fba40cc29a84815efa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;primary_replicas&lt;/code&gt;: a list of zero or more servers acting as primary replicas for the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1941eda540bca4c3e135c60be53a49dffbc9ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;process&lt;/code&gt;: information about the RethinkDB server process:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0fd93aa0cac9d26fc9f4b32d8fdcba5dc350604" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;profile&lt;/code&gt;: whether or not to return a profile of the query&amp;rsquo;s execution (default: &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280131decb9b2f94dac26594dcee0d854be81c56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;proxy&lt;/code&gt;: a boolean indicating whether the server is a &lt;a href=&quot;../../../docs/sharding-and-replication/index#running-a-proxy-node&quot;&gt;RethinkDB proxy node&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a0e083bab16643e43d48b1e714087159b668fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r.args&lt;/code&gt; is a special term that&amp;rsquo;s used to splice an array of arguments into another term. This is useful when you want to call a variadic term such as &lt;a href=&quot;../get_all/index&quot;&gt;getAll&lt;/a&gt; with a set of arguments produced at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ab9178d5a6520f20290ff723c4f845e1a7aa6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r.args&lt;/code&gt; is a special term that&amp;rsquo;s used to splice an array of arguments into another term. This is useful when you want to call a variadic term such as &lt;a href=&quot;get_all/index&quot;&gt;getAll&lt;/a&gt; with a set of arguments produced at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b420f350a8d0e24706f4d480e7a5bcaf90c002" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r.http&lt;/code&gt; supports depagination, which will request multiple pages in a row and aggregate the results into a stream. The use of this feature is controlled by the optional arguments &lt;code&gt;page&lt;/code&gt; and &lt;code&gt;pageLimit&lt;/code&gt;. Either none or both of these arguments must be provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa02061edcfd3ecd66340ac1bdad59ad0d63cad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r.row('name')&lt;/code&gt; refers to the value of the field &lt;code&gt;name&lt;/code&gt; of the visited document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1118998782a935b62c9f153d22df86087f6d7f88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r.row&lt;/code&gt; refers to the currently visited document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08e4fbed199c39538a58248bb483e850e2acd7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r&lt;/code&gt;: data from the result, as a JSON array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20f015a651f79af1fba4197f0e6ecaf801b9db7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;range&lt;/code&gt; takes 0, 1 or 2 arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d616941e10a0105407caa84b6acbe10e05624abe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;read&lt;/code&gt; allows reading the data in tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25685ce1a1a373e4ea1aa49df3521bb37b159b3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;readMode&lt;/code&gt;: One of three possible values affecting the consistency guarantee for the query (default: &lt;code&gt;'single'&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672301d502d74406ec21560e784340f05e543f25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;readMode&lt;/code&gt;: One of three possible values affecting the consistency guarantee for the table read:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92cb6ed18a8ee1c56018e39bfd477e8ecf23648" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;read_mode&lt;/code&gt;: &lt;code&gt;majority&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0e5c1326219242f3b2b138d7d66aeda336b103" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ready&lt;/code&gt;: the server is ready to serve queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff1013bba79e80470d0ee40b330c4822ebbe032" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rebalanced&lt;/code&gt;: the number of tables rebalanced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b0a52e6dbaf5cec76693f355c22e63517c7c19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reconfigured&lt;/code&gt;: the number of tables reconfigured. This will be &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;dryRun&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0546018e603059414f998a9424411097932eabd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;redirects&lt;/code&gt;: number of redirect and location headers to follow (default &lt;code&gt;1&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1d8bdaf37b09ecfec9e03916e2a7704c158058" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reduce&lt;/code&gt;, &lt;code&gt;fold&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628f006333b09e74a50b353e038240cef5dc029c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove&lt;/code&gt;: an old value removed from the result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2383bf748d18453c3b0cd4ec6a8e5d8464c7e50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replaced&lt;/code&gt; &amp;ndash; Number of documents that were modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188c5d93c3465addd908f71d172ecc7a98c0fb8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replaced&lt;/code&gt;: the number of documents that were replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0786bd5112fbbd4c66671e1575178c647750208" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replaced&lt;/code&gt;: the number of documents that were updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0e6484e1b970d14e3d22914f4c96ed716fb5f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replaced&lt;/code&gt;: the number of documents updated when &lt;code&gt;conflict&lt;/code&gt; is set to &lt;code&gt;&quot;replace&quot;&lt;/code&gt; or &lt;code&gt;&quot;update&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f765447e4acde064dca0c6269888d066fa872a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replicas&lt;/code&gt;: a list of all servers acting as a replica for that shard. The &lt;code&gt;state&lt;/code&gt; field may be one of the following: &lt;code&gt;ready&lt;/code&gt;, &lt;code&gt;transitioning&lt;/code&gt;, &lt;code&gt;backfilling&lt;/code&gt;, &lt;code&gt;disconnected&lt;/code&gt;, &lt;code&gt;waiting_for_primary&lt;/code&gt;, or &lt;code&gt;waiting_for_quorum&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ae01a9a44dc8fbf0a2aeae1b9f61484a583d96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replicas&lt;/code&gt;: a list of all servers acting as a replica for that shard. This may include servers which are no longer configured as replicas but are still storing data until it can be safely deleted. The &lt;code&gt;state&lt;/code&gt; field may be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68aa83e1eda6ed0b95e6632d2d6f1f5137367c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replicas&lt;/code&gt;: a list of servers, including the primary, storing replicas of the shard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8a633d7714b078158f5b6d4358d4f990b4b5e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replicas&lt;/code&gt;: either an integer or a mapping object. Defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f97d7b5adc8349daf36f4876061d0d4679565d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replicas&lt;/code&gt;: either an integer or a mapping object. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2cd4f3a08810b37f2f15e11a6fe7ccef16ec2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resultFormat&lt;/code&gt;: string specifying the format to return results in. One of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2998e82c34cd95babc9d40a380fb58271cc32c20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rethinkdb create&lt;/code&gt;: prepare files on disk for a new server instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0dd095af32dabac23905d0b067681322ba30c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rethinkdb dump&lt;/code&gt;: export and compress data from an existing cluster</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574d8667d16e8a6603f831b9af807746a004f27d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rethinkdb export&lt;/code&gt;: export data from an existing cluster into a file or directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0313133aae722bb102b309cfbac3f9cef8a1f5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rethinkdb import&lt;/code&gt;: import data from from a file or directory into an existing cluster</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef5c091d76b1073df8a2c0df11e92b98d84057f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rethinkdb index-rebuild&lt;/code&gt;: rebuild outdated secondary indexes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a3531f6c0eb087db12e32d3681cb8fd59af73b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rethinkdb proxy&lt;/code&gt;: run a proxy server (serve queries from an existing cluster but don&amp;rsquo;t host data)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74181d3e203407722eaae5d732adcca9d31e612a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rethinkdb restore&lt;/code&gt;: import compressed data into an existing cluster</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1642abf7569c263ae440e4843eac22e81922152f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rethinkdb serve&lt;/code&gt;: use an existing data directory to host data and serve queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c37436c43f52d67ef19577d9495c981176b05e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;returnChanges&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25eba25a43f308be7a561ec643f8fe6e5174940" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runuser&lt;/code&gt; and &lt;code&gt;rungroup&lt;/code&gt;: specifies which user and group should be used launch the Rethinkdb process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47244c28cf9e1782b74c180948223394c5579f80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seconds&lt;/code&gt; is a double. Its value will be rounded to three decimal places (millisecond-precision).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994f3f9c1bdbf0c828bcadc173d2df5d326a274a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;server-name&lt;/code&gt;: The name for this machine (as it will appear in the metadata).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e239a418a9ac8909d0130cb7834463c8d8f4cc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;server-tag&lt;/code&gt;: Specifies tags for this server, which can be used to group servers together for administration purposes (for instance, servers in the same data center). See &lt;a href=&quot;../sharding-and-replication/index&quot;&gt;Sharding and replication&lt;/a&gt; for more details. To assign multiple tags to a server, repeat &lt;code&gt;server-tag&lt;/code&gt; lines for each tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8230e57ec8e14768120be6c8aa301f774bd4b39a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;server&lt;/code&gt;: the UUID or name of the generating server (depending on the value of &lt;code&gt;identifier_format&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275854719f4d032be336b252e8761e45f56502c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;server_config&lt;/code&gt; stores server names and tags. By writing to this table you can rename servers and assign them tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92574545d2f459d0323e52c9ef59386ca9d785a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;server_status&lt;/code&gt; is a read-only table that returns information about the process and host machine for each server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255e14112c75f26b562b51ebde0262abf071d2d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shards&lt;/code&gt;: a list of the table&amp;rsquo;s shards. Each shard is an object with these fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb558bd85c2363cf213617d6f03737ac21aa427" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shards&lt;/code&gt;: one entry for each shard in &lt;code&gt;table_config&lt;/code&gt;. Each shard&amp;rsquo;s object has the following fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3113465e66768f0de21288992da2bf7f38c789a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shards&lt;/code&gt;: the number of shards, an integer from 1-64. Defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e11166aa346e6e247814118ac48ef7551d4e9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shards&lt;/code&gt;: the number of shards, an integer from 1-64. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5baadec6869751e36ca0d562dcb9463e4e2f1d74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;single&lt;/code&gt; returns values that are in memory (but not necessarily written to disk) on the primary replica. This is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb92e6e2af60270c0e54f8f5d13dc879af193e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;single&lt;/code&gt;: The cluster sends the acknowledgement when any replica has acknowledged it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16cabb610a0c0ec91c19185ceb7aa76f7b5cca88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;skipped&lt;/code&gt; &amp;ndash; Number of documents that were unmodified in a write operation, because the document is not available to be deleted or updated. The document might have been deleted by a different operation happening concurrently, or in the case of a &lt;code&gt;get&lt;/code&gt; operation the key might not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5d24e620b72e99b35a38367668edbcc5768430" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;skipped&lt;/code&gt;: 0 for a replace operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bdcd12fbf4bb569180f0ecb27ed10a44999b2d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;skipped&lt;/code&gt;: the number of documents that were skipped because the document didn&amp;rsquo;t exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aefe3c63463cb799414dbfd41a55ac6684ac154" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;skipped&lt;/code&gt;: the number of documents that were skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8794471d16ffdb84c619c310f6bcc4b124ab6cdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slice&lt;/code&gt; returns the range between &lt;code&gt;startOffset&lt;/code&gt; and &lt;code&gt;endOffset&lt;/code&gt;. If only &lt;code&gt;startOffset&lt;/code&gt; is specified, &lt;code&gt;slice&lt;/code&gt; returns the range from that index to the end of the sequence. Specify &lt;code&gt;leftBound&lt;/code&gt; or &lt;code&gt;rightBound&lt;/code&gt; as &lt;code&gt;open&lt;/code&gt; or &lt;code&gt;closed&lt;/code&gt; to indicate whether to include that endpoint of the range by default: &lt;code&gt;closed&lt;/code&gt; returns that endpoint, while &lt;code&gt;open&lt;/code&gt; does not. By default, &lt;code&gt;leftBound&lt;/code&gt; is closed and &lt;code&gt;rightBound&lt;/code&gt; is open, so the range &lt;code&gt;(10,13)&lt;/code&gt; will return the tenth, eleventh and twelfth elements in the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b529ba4c7bd70f8387fb8179dc6625dd4f8c184" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;squash&lt;/code&gt;: Controls how change notifications are batched. Acceptable values are &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; and a numeric value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67aacb77c5cca9038b5e7ac2f921e7fd98f65e96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ssl&lt;/code&gt;: a hash of options to support SSL connections (default &lt;code&gt;null&lt;/code&gt;). Currently, there is only one option available, and if the &lt;code&gt;ssl&lt;/code&gt; option is specified, this key is required:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483fc0f65f7e4e5f99256d5b27fad159ac6b2322" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt;: The matched string&amp;rsquo;s start</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920b46f775f6c9916a1ba55059964ad7e81da65f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;state&lt;/code&gt;: a status document from &lt;code&gt;includeStates&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f1d1ce9acf95a72da76c3a1792dd506cbe4a05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stats&lt;/code&gt; is a read-only table that returns statistics about the cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d756cba20828e4960ddec961c0b63386a5daee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;status&lt;/code&gt;: the subfields in this field indicate whether all shards of the table are ready to accept the given type of query: &lt;code&gt;outdated_reads&lt;/code&gt;, &lt;code&gt;reads&lt;/code&gt; and &lt;code&gt;writes&lt;/code&gt;. The &lt;code&gt;all_replicas_ready&lt;/code&gt; field indicates whether all backfills have finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2f38946fd71a2d29f034cc407c0328df6802dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;status_changes&lt;/code&gt;: a list of new and old table status values. Each element of the list will be an object with two fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75a15fc96258365237f93e35019002acc6e558c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;str&lt;/code&gt;: The matched string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f20982d9d6718b37b41107820b88b59dea7d5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sync&lt;/code&gt; ensures that writes on a given table are written to permanent storage. Queries that specify soft durability (&lt;code&gt;{durability:'soft'}&lt;/code&gt;) do not give such guarantees, so &lt;code&gt;sync&lt;/code&gt; can be used to ensure the state of these queries. A call to &lt;code&gt;sync&lt;/code&gt; does not return until all previous writes to the table are persisted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221f81571f9b0ded9aa5909a9d8e820bf5218655" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t&lt;/code&gt;: the &lt;code&gt;ResponseType&lt;/code&gt;, as defined in &lt;code&gt;ql2.proto&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd7da1cc7eccdccfd6ebcf11d5acf3035cd3391" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;table&lt;/code&gt;: the name of the table these permissions apply to, only present for permissions with table scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ad342b3313e453b4008bddd715835f936e8e1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;table_config&lt;/code&gt; stores table configurations, including sharding and replication. By writing to &lt;code&gt;table_config&lt;/code&gt;, you can create, delete, and reconfigure tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37920534f724e9d83b7c39bb472d89677bd1ffed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;table_status&lt;/code&gt; is a read-only table which returns the status and configuration of tables in the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7829dec217a5fe759db4a85049364862533ca5c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tables_created&lt;/code&gt;: always &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5277f57825c91257f1bac3371fd8ea8367a4b27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tables_dropped&lt;/code&gt;: always &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866dc9f36d275435ab87851659d921cfe3a473dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tables_dropped&lt;/code&gt;: the number of tables in the dropped database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308eb1ea9a5d851ea67f1b51d9ca9b36dfb9009d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tags&lt;/code&gt;: a list of unordered tags associated with the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9f80b5cbb57d30ccf47246e72a513fe0d3a5f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text&lt;/code&gt;: always return a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f1750a964dfd9e52b52eca38d9677a368e6b9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeFormat&lt;/code&gt;: what format to return times in (default: &lt;code&gt;'native'&lt;/code&gt;). Set this to &lt;code&gt;'raw'&lt;/code&gt; if you want times returned as JSON objects for exporting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f4248c04e16877af518006086609a613ad5313" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;time_connected&lt;/code&gt;: the time the server connected (or reconnected) to the cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f044340c2c789b679b558b118197920305e6e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;time_started&lt;/code&gt;: the time the server process started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31cc7eba0f57ab98c27b376b70137d274251a0c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeout&lt;/code&gt; is the number of seconds before &lt;code&gt;r.js&lt;/code&gt; times out. The default value is 5 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86a9ad937ee4f4173b3b4fdd463034af34c0091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeout&lt;/code&gt;: a number indicating maximum time, in seconds, to wait for the table to be ready. If this value is exceeded, a &lt;code&gt;ReqlRuntimeError&lt;/code&gt; will be thrown. A value of&lt;code&gt;0&lt;/code&gt; means no timeout. The default is &lt;code&gt;0&lt;/code&gt; (no timeout).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79a15291820391da0caa061432f23abc094716c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeout&lt;/code&gt;: the underlying socket has timed out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9529b10092b1212133369c48b7cc02de0edb0dc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeout&lt;/code&gt;: timeout period in seconds for the connection to be opened (default &lt;code&gt;20&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f558587c6af692f17e9c8b06bcea22b7465c5ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeout&lt;/code&gt;: timeout period in seconds to wait before aborting the connect (default &lt;code&gt;30&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c18143d43094d32c6117fecde977bc2411157e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timestamp&lt;/code&gt;: the time when the log message is posted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab36183c4d05b80f3cbddfd60c35ed854e535812" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timezone&lt;/code&gt; can be &lt;code&gt;'Z'&lt;/code&gt; (for UTC) or a string with the format &lt;code&gt;&amp;plusmn;[hh]:[mm]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73df55a9c79190c8c6ab4e4301c1bc4dcfc471e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tls-ciphers&lt;/code&gt;: A list of TLS ciphers to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37624c8857024b98d84ec58d5ee96009bc670234" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tls-dhparams&lt;/code&gt;: A filename containing parameters for DHE key agreement; this is required if using DHE cipher suites, and unused otherwise. At least a 2048-bit key is recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e39d7ae11df0c133b3e5f45dbbacb58844631bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tls-ecdh-curve&lt;/code&gt;: A named elliptic curve to use for ECDHE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dede2c03ed2c5f6676253e4066252f06495c60a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tls-min-protocol&lt;/code&gt;: the minimum TLS protocol version the server accepts, one of &lt;code&gt;TLSv1&lt;/code&gt;, &lt;code&gt;TLSv1.1&lt;/code&gt;, &lt;code&gt;TLSv1.2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bda57339fd3164c0d51fb16b5e3f718ef5ac067" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transitioning&lt;/code&gt;: the server is between one of the above states. A transitioning state should typically only last a fraction of a second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f329d87b6b98e066e939ee2375f7a7ac53088b21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt;: When multiple changes to the same document occur before a batch of notifications is sent, the changes are &amp;ldquo;squashed&amp;rdquo; into one change. The client receives a notification that will bring it fully up to date with the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1783f828911fbd6c4aa25de795fc98c018c58cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt;: results will be mixed together; this is the fastest setting, but ordering of elements is not guaranteed. (This is the default.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1a8b750c8508b751460d60786094b87c2fac0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt;: return a &lt;code&gt;changes&lt;/code&gt; array consisting of &lt;code&gt;old_val&lt;/code&gt;/&lt;code&gt;new_val&lt;/code&gt; objects describing the changes made, only including the documents actually updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7834433c3e2fcbdbfb723497465259acfd63e0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt;: &lt;code&gt;basic&lt;/code&gt; (default) or &lt;code&gt;digest&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e4a2be6491d27a62accdf0d3fb2d00c850117e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt;: a short string indicating the issue type. (The rest of this document goes into more detail on types.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dec510807d4ab27ea4df3f25bd31cbdc0e347c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unchanged&lt;/code&gt; &amp;ndash; Number of documents that would have been modified, except that the new value was the same as the old value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5694caa1aaff75a08b03a8e35ab24a25c275ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unchanged&lt;/code&gt;: the number of documents that would have been modified except the new value was the same as the old value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222767ddc8eda839fa5d8abe7150c8bd3d094437" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unchanged&lt;/code&gt;: the number of documents that would have been modified, except that the new value was the same as the old value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7e252f829cdfea4b0d23e4233db850e50e8740" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unchanged&lt;/code&gt;: the number of documents whose fields are identical to existing documents with the same primary key when &lt;code&gt;conflict&lt;/code&gt; is set to &lt;code&gt;&quot;replace&quot;&lt;/code&gt; or &lt;code&gt;&quot;update&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d311335eb7bb312e6b769dbbd07300f771572851" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uninitial&lt;/code&gt;: an uninitial value notification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4637666352f71bd49091da245f6aee4f9bfc9aeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unit&lt;/code&gt;: Unit for the distance. Possible values are &lt;code&gt;m&lt;/code&gt; (meter, the default), &lt;code&gt;km&lt;/code&gt; (kilometer), &lt;code&gt;mi&lt;/code&gt; (international mile), &lt;code&gt;nm&lt;/code&gt; (nautical mile), &lt;code&gt;ft&lt;/code&gt; (international foot).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a8a8f03ba398ff17d4d28e571ea551f49ff703" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unit&lt;/code&gt;: Unit for the radius distance. Possible values are &lt;code&gt;m&lt;/code&gt; (meter, the default), &lt;code&gt;km&lt;/code&gt; (kilometer), &lt;code&gt;mi&lt;/code&gt; (international mile), &lt;code&gt;nm&lt;/code&gt; (nautical mile), &lt;code&gt;ft&lt;/code&gt; (international foot).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86bd36edc5f457ab7b4ec6106e4200c9073a238c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unit&lt;/code&gt;: Unit to return the distance in. Possible values are &lt;code&gt;m&lt;/code&gt; (meter, the default), &lt;code&gt;km&lt;/code&gt; (kilometer), &lt;code&gt;mi&lt;/code&gt; (international mile), &lt;code&gt;nm&lt;/code&gt; (nautical mile), &lt;code&gt;ft&lt;/code&gt; (international foot).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f3dcfb0c33fb19b0988b1ac35c264a31541008" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe_rollback&lt;/code&gt;: shards that are beyond repair will be left alone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5a92e907f9b3205694bc64d46c602dbd253bac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe_rollback_or_erase&lt;/code&gt;: a shard that is beyond repair will be destroyed and recreated on an available server that holds another shard for that table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d8e9774bab0c12573f4f22a5af3d12ebf6b3a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uptime&lt;/code&gt;: how many seconds the server had been running at the time the log message was generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c339ec0185249ced7c907ccf29a0e14ad4874cb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;user&lt;/code&gt;: the user account to connect as (default &lt;code&gt;admin&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c3a6545dbb764a6a638014582632112673d201" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;user&lt;/code&gt;: username</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7be962b3523e3b008455aa9deb00ef78a83990" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;users&lt;/code&gt; stores RethinkDB user accounts. (See &lt;a href=&quot;../permissions-and-accounts/index&quot;&gt;Permissions and user accounts&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d666f634a59f57e095d65b349546e92483c865f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;verify&lt;/code&gt;: if &lt;code&gt;true&lt;/code&gt;, verify the server&amp;rsquo;s SSL certificate (default &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7967550574976b5420680669f5f3729e421a340" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt;: the version string of the RethinkDB server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c8b1a46ce9fc5d60e34374175b71fc2518d242e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;waitFor&lt;/code&gt;: a string indicating a table &lt;a href=&quot;../status/index&quot;&gt;status&lt;/a&gt; to wait on before returning, one of &lt;code&gt;ready_for_outdated_reads&lt;/code&gt;, &lt;code&gt;ready_for_reads&lt;/code&gt;, &lt;code&gt;ready_for_writes&lt;/code&gt;, or &lt;code&gt;all_replicas_ready&lt;/code&gt;. The default is &lt;code&gt;all_replicas_ready&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2124454ea863f40ae06cf5f95381433912b0d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;waiting_for_primary&lt;/code&gt;: the server is waiting for its primary replica to be available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff0b251f61b1407ffe555f29985b9c2feadb970" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;waiting_for_quorum&lt;/code&gt;: the primary is waiting for a quorum of the table&amp;rsquo;s replicas to be available before it starts accepting writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="431e00d0954a5faf33bfb9e09fb470ec67be76e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;warnings&lt;/code&gt;: if the field &lt;code&gt;generated_keys&lt;/code&gt; is truncated, you will get the warning &lt;em&gt;&amp;ldquo;Too many generated keys (&amp;lt;X&amp;gt;), array truncated to 100000.&amp;rdquo;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686fef49faaea1c488cea9e615ecc4d704835f70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write&lt;/code&gt; allows modifying data, including inserting, replacing/updating, and deleting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85ef438b7f18779762ed817ee2047a8fc791823" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write_acks&lt;/code&gt;: &lt;code&gt;majority&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a74b90e9a9c3fef88804c7ae0cb4c9fabb9b59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write_acks&lt;/code&gt;: the write acknowledgement settings for the table. When set to &lt;code&gt;majority&lt;/code&gt; (the default), writes will be acknowledged when a majority of replicas have acknowledged their writes; when set to &lt;code&gt;single&lt;/code&gt; writes will be acknowledged when a single replica acknowledges it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dacbe26f4c077d4cc761348fe597aa1a848bee1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt; is an integer between 1400 and 9,999.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd92f60f03d51473a7b7a53c56f9095bbe8f4107" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{state:'initializing'}&lt;/code&gt; indicates the following documents represent initial values on the feed rather than changes. This will be the first document of a feed that returns initial values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70f7aec0c507a52402ea1e1666616c03ed95a74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{state:'ready'}&lt;/code&gt; indicates the following documents represent changes. This will be the first document of a feed that does &lt;em&gt;not&lt;/em&gt; return initial values; otherwise, it will indicate the initial values have all been sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c9c9f6c5e28443e35fb692470423b6a92fcba6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; these versions do not support RethinkDB users and permissions, and may be deprecated in a future release. When communicating with RethinkDB 2.3 or later, the authentication key will be compared to the admin user account password.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366dbe3f88f519dcc8810b4f0c4c85d40c060ac4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Compound indexes&lt;/em&gt; based on multiple fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35ca0369ea9fbfbe4006db971de4e75270529ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default&lt;/em&gt;: 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f7c8b1112ca8ab5eb92ab45d341a64b617d68d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default&lt;/em&gt;: 64</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90bb1108759cdb216f883be68fca509705056b11" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default&lt;/em&gt;: &lt;code&gt;&amp;lt;directory&amp;gt;/log_file&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08473b7db581e2edbfa2e987869b69c9bf9647ba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default&lt;/em&gt;: &lt;code&gt;/var/lib/rethinkdb/&amp;lt;name&amp;gt;/&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb031b67f9280bd1acf2c5e056146c506b314209" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default&lt;/em&gt;: &lt;code&gt;/var/run/rethinkdb/&amp;lt;name&amp;gt;/pid_file&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c202c02c9e7ceb772a475fd1bd63e7ff4e8358a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default&lt;/em&gt;: &lt;code&gt;86400&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827ca52ebdbc22cab40c9afd0c3ebf2d466524d4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default&lt;/em&gt;: &lt;code&gt;EECDH+AESGCM&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be01010e6444c441b230d31efff5a3a54c7992af" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default&lt;/em&gt;: &lt;code&gt;TLSv1.2&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d22789a82ca55be8cb3e6a2bd6c84ca5f1f0427" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default&lt;/em&gt;: &lt;code&gt;prime256v1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476b000e4944ba461635f4454ef365e99baeb1ec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default&lt;/em&gt;: &lt;code&gt;rethinkdb&lt;/code&gt; and &lt;code&gt;rethinkdb&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17acaccfb60e2e4f9abd2500353ee4b21a37ce56" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default&lt;/em&gt;: Half of the available RAM on startup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a7bcd849e3817ec5d5b326712c880c043b4da8e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default&lt;/em&gt;: Number of cores of the CPU.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdcf46e6dbca345e2eb911526c3ba9c6b7bbd80" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default&lt;/em&gt;: Randomly chosen from a short list of names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d03c3e321d72fd98dca63195f183385d245fdf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default&lt;/em&gt;: all local addresses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1f2892cdf809f53faf2acdb203f2e544d64f34" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Geospatial indexes&lt;/em&gt; based on indexes of geometry objects, created when the &lt;code&gt;geo&lt;/code&gt; optional argument is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d0a713cc2a204ceedd001ed19fe06e1d722b3b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Import from a directory&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9fa38c56f5aa91eb3357c2181d314d1a5306864" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Import from a file&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da140f62c5693ecaefcc413cdd40615341b5d0cd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Internal metadata&lt;/em&gt; proportional to the size of the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21adcd4ba2e40fb71cf07e741b8a1d934999c02e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Multi indexes&lt;/em&gt; based on arrays of values, created when the &lt;code&gt;multi&lt;/code&gt; optional argument is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d192c39e25319073f14213e108a21ec957f7f6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; A nicer syntax will eventually be added. See the &lt;a href=&quot;https://github.com/rethinkdb/rethinkdb/issues/838&quot;&gt;Github issue 838&lt;/a&gt; to track progress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3368dde636fa0d4036da83d00eb182436cdaac" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; Because a feed is a cursor that never terminates, calling &lt;code&gt;toArray&lt;/code&gt; on a feed will throw an error. See the &lt;a href=&quot;../changes/index&quot;&gt;changes&lt;/a&gt; command for more information on feeds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb67889c6cf5e31b6db18282bed66444c1f15543" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; RethinkDB is a NoSQL database and does not enforce schemas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8fdceb63e62516693b069bf765410c402cce4f6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; The default primary key is &lt;code&gt;id&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3edf5eed726428791613e5111598d6d13ffcfcb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt;&lt;code&gt;zip()&lt;/code&gt; will merge the user in the post, overwriting fields in case of conflict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408d98c66882098c1067f1106f3cea6d96425eac" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: It is best to create the database manually via &lt;code&gt;rethinkdb create --directory ...&lt;/code&gt; as &lt;code&gt;runuser&lt;/code&gt; or &lt;code&gt;rungroup&lt;/code&gt; before enabling auto-start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4bc67183e6b470fa787dbdee0c79a9f2ad7851d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: You can perform more efficient &lt;code&gt;OUTER JOIN&lt;/code&gt; operations with the &lt;a href=&quot;../../../api/javascript/concat_map/index&quot;&gt;concatMap&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202ff1e9f87f4ad0acadcfb8f11c490ae5fe22ec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: You cannot specify multiple orders in a compound index. See &lt;a href=&quot;https://github.com/rethinkdb/rethinkdb/issues/2306&quot;&gt;issue #2306&lt;/a&gt; to track progress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b25abe580f04d06ac85d5d16aa7641c36372595" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Running queries and background processes,&lt;/em&gt; such as backfilling between nodes in a cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a88c9c9bd2464a93f11d8bea2c0c9d99018547" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Simple indexes&lt;/em&gt; based on the value of a single field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558cee213b65ce2478112d4dd3436d76c2516307" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The page cache.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78f37f9fe82720411fa942d71ed47a497183714" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;These steps are only necessary if you&amp;rsquo;re upgrading from RethinkDB version 1.7&amp;ndash;1.12 to version 2.1 or higher.&lt;/em&gt; If you&amp;rsquo;re using a later version, see the sections above. (If you&amp;rsquo;re using 1.6 or earlier, read the &amp;ldquo;&lt;a href=&quot;#deprecated-versions&quot;&gt;Deprecated versions&lt;/a&gt;&amp;rdquo; section below.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ee1333b1a14193452f8a9e979aa5f36f148c2bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1.13&amp;ndash;1.15:&lt;/strong&gt; Upgrade to RethinkDB 2.0.5 &lt;em&gt;first,&lt;/em&gt; rebuild the secondary indexes by following the &amp;ldquo;Rebuild indexes&amp;rdquo; directions, then upgrade to 2.1 or higher. (Migration from 2.0.5 to 2.1+ will be handled automatically.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe2f800d37648f1347bd8c5975bf65e8fff4ffb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1.16 or higher:&lt;/strong&gt; Migration is handled automatically. (This is also true for upgrading from 1.14 onward to versions earlier than 2.2.) After migration, follow the &amp;ldquo;Rebuild indexes&amp;rdquo; directions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe809be075c970291b3fc1eebb5de9cd938d03d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1.6 or earlier:&lt;/strong&gt; Read the &amp;ldquo;Deprecated versions&amp;rdquo; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6edf59792260ecce6c1a5b00649c38f44b3bd2f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1.7&amp;ndash;1.12:&lt;/strong&gt; Follow the &amp;ldquo;Migrating old data&amp;rdquo; directions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56f59fa482d1eb0525c168a87818228807ab51dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A few things to note about this query:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc4bf4c7d7f5a9e73dbcf9b7166afa23d8eef9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A&lt;/strong&gt;: Use the &lt;a href=&quot;https://github.com/rethinkdb/elasticsearch-river-rethinkdb&quot;&gt;Elasticsearch River for RethinkDB&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0977b4a9dc97d13bee9daea33015f93ccee42e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Add your project:&lt;/strong&gt; Have you written a cool library or tool for RethinkDB? Shoot us an email at &lt;a href=&quot;mailto:info@rethinkdb.com&quot;&gt;info@rethinkdb.com&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b291cd504401606e4364a15f385089d6a8c18bbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Advantages of using embedded arrays:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862bf1e86065119a8e35769082ed53c673c7e2cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Advantages of using multiple tables:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ea71206f23e74d79730943c94edbba4c4676e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;All ReQL queries are chainable&lt;/strong&gt;. You begin with a table and incrementally chain transformers to the end of the query using the &lt;code&gt;.&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db1dd256f551abd5d75188cd19dded6b400ad95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;All queries execute on the server&lt;/strong&gt;. While queries are constructed on the client in a familiar programming language, they execute entirely on the database server once you call the &lt;code&gt;run&lt;/code&gt; command and pass it an active database connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff787cfca3fef849d005afae4ed88d9e976543a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Arrays&lt;/strong&gt; are lists of zero or more elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9fd777c210cb2c19e7c9f11e4a5578141a0e464" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ask a question&lt;/strong&gt; on &lt;a href=&quot;http://stackoverflow.com/questions/tagged/rethinkdb&quot;&gt;Stack Overflow&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc223c8a7b0dc7da91ae980e807ce8f139bcaf50" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ask a question&lt;/strong&gt; on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/rethinkdb&quot;&gt;Stack Overflow&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbeb0e7942f2b5126f90df8167d8d0828782d55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Batch writes.&lt;/strong&gt; Instead of doing single writes in a loop, group writes together. This can result in significant increases in throughput. Instead of doing multiple queries like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371920d3ca2a022e076f917091bf74489974496a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Be careful!&lt;/strong&gt; Make sure your reduction function doesn&amp;rsquo;t assume the reduction step executes from left to right!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b751fcd448b60bd3b90b88784a55a911731ec660" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Before you start:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05b475d2ef1715dda4ae588a6df30166f85f86e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Before you start:&lt;/strong&gt; make sure you&amp;rsquo;ve &lt;a href=&quot;https://rethinkdb.com/install&quot;&gt;installed RethinkDB&lt;/a&gt;&amp;mdash;it should only take a minute!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad54ed04b513367bfe0aeb751f0d63249cef65db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Before you start&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ec1703bff29ed13c7e9f7326a7aa9bc6f5fee9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Beyond repair:&lt;/strong&gt; the shard has no replicas available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387ae5fa845390d03ff03b30d4ed9fe72f5ceb62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Binary objects&lt;/strong&gt; are similar to BLOBs in SQL databases: files, images and other binary data. See &lt;a href=&quot;../storing-binary/javascript/index&quot;&gt;Storing binary objects&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65cc80ae77bb0199e012ab461182dd01c324bdba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Binary pseudo type&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0b7ea9bbeb358fe323ff5430b28f2b6d7d5434" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Booleans&lt;/strong&gt; are &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84c1e75a3d9fdafaafebb81ab1a9914cb35c723" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Can you export to WKT or WKB?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63051594d401176bb71b06ed22bb775e950736fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Change the admin user password.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0a28939807e1001ffcc7f3255976d7c4206061" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Changefeeds&lt;/strong&gt; lie at the heart of RethinkDB&amp;rsquo;s real-time functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3cba0cba95138ea387f0b79ccb106d2917c7d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Chat with us&lt;/strong&gt; and our community on &lt;a href=&quot;http://slack.rethinkdb.com&quot;&gt;Slack&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9940d22fe5b76031482bd32cf63d55a6e2aa60ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Compound indexes&lt;/strong&gt; based on multiple fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc2033132ffca9411ecee637117ee171191c2cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider using &lt;code&gt;noreply&lt;/code&gt; mode.&lt;/strong&gt; In this mode, the client driver will not wait for the server acknowledgement of the query before moving on to the next query. This mode is even less safe than the soft durability mode, but can result in the highest performance improvement. You can run a command in a &lt;code&gt;noreply&lt;/code&gt; mode as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0728a2754ba393ec6f65814377aa4fe0ef0688c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider using soft durability mode.&lt;/strong&gt; In soft durability mode RethinkDB will acknowledge the write immediately after receiving it, but before the write has been committed to disk. The server will use main memory to absorb the write, and will flush new data to disk in the background.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b19395da347889d5af94d1943139441fe18ae6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Databases&lt;/strong&gt; are RethinkDB databases. This is the return type of &lt;code&gt;db&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c293df12369ba86087fd81891f665960014557" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Date pseudo type&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c134e50f5bd7c9c21d7a8a45741c4256e74da773" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Disadvantages of using embedded arrays:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301b150e63a8c7c61cea8cb3f4c434039e572be7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Disadvantages of using multiple tables:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02befaa899a48b0624f15bb76218823c45efab4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Does RethinkDB do a correct interpolation of degrees to meters along a path?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c830da9dfd96a79db90c654748fff4eb098aa0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Don&amp;rsquo;t see the recipe you&amp;rsquo;re looking for?&lt;/strong&gt; Request or add a recipe by &lt;a href=&quot;https://github.com/rethinkdb/docs/issues&quot;&gt;opening an issue&lt;/a&gt; on GitHub.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426d04c4dfe4e5339b06bdb8c88a40ad49ba7db4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Durability&lt;/strong&gt; is set per table with the &lt;code&gt;durability&lt;/code&gt; setting, again using either &lt;code&gt;reconfigure&lt;/code&gt; or writing to the &lt;code&gt;table_config&lt;/code&gt; system table. In &lt;code&gt;hard&lt;/code&gt; durability mode, writes are committed to disk before acknowledgements are sent; in &lt;code&gt;soft&lt;/code&gt; mode, writes are acknowledged immediately after being stored in memory. The &lt;code&gt;soft&lt;/code&gt; mode is faster but slightly less resilient to failure. The default is &lt;code&gt;hard&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4168878b06eaa6917a0f012585506612f5054ea6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3364c41d047f0894112a780279774d2c35e6b612" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; &amp;lsquo;zips up&amp;rsquo; the sequence by merging the left and right fields produced by a join.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787877c73233b9f4ca720331764df6908d2ddd77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Access the attribute &amp;lsquo;child&amp;rsquo; of an embedded document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f059c0204026316b91c276aa71362af7a98db30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Add 1 to every element of an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be47d23f82b635d0bc4acecc0ba0213f65ee312" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Add a new user with the time at which he subscribed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882aa184c2b858c06b74c3fbf54036f321a4cdee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Add another note to Bob Smith&amp;rsquo;s record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6ac4d7cbd0803b464e0404eafa0fb32c25180e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; After having updated multiple heroes with soft durability, we now want to wait until these changes are persisted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63ed4dcde93e5b3d10ce8a4be4ddebc2af88595" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Allow potentially out-of-date data in exchange for faster reads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72bbf80b77e9613739d3c6ef46abc7cfc922a16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Are there any documents in the marvel table?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e969d2bcb4c7ca3f51d8359ae11168e3d27e67c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Arrays can be multiplied by numbers as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a3d37c0af95077a956c968e2c541a0a3a049b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; As above, but prefix-style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abba98b0f4bab67fd305bdd50f17524edfb9da96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; As above, but using the &lt;code&gt;rowFinished&lt;/code&gt; and &lt;code&gt;final&lt;/code&gt; callbacks rather than the Promise returned from &lt;code&gt;eachAsync&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc594602ded44c09436f966f92f9ad579193342" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; As above, infix-style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e4054153b1314d44e0c4bf3d84ccdec435a6a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; As in Node, &lt;code&gt;on&lt;/code&gt; is a synonym for &lt;code&gt;addListener&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110187586c73197ee96e0107528184b1851efc05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Assign every superhero an archenemy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18dc000710454c8f3883a9d2fe59110afe046af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Between can be used on secondary indexes too. Just pass an optional index argument giving the secondary index to query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a4dfef044a4f4bb62999390b3beb495c92c181" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Broadcast all messages with &lt;a href=&quot;http://socket.io&quot;&gt;socket.io&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e955db8c8292fd02cd3bd1996c5dd8b9034721c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Broadcast all the messages inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a149c09b9fe6e9bebcc6328e67a35fd1e5d9688" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Bruce Banner hulks out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10de35129fc9990fff78044936e88481c1f152e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Cancel outstanding requests/queries that are no longer needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4195589bb693186041394fd9c3480781d3222501" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Catching errors in the coroutine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176a9bf252726a3e872423291881e75443a721e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Catching runtime errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c9246729e4b0d8bcca6317fb133dd46164fe1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Categorize heroes by victory counts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5fed7d38a555da38ebb1a1c94eca3dc3852c978" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Change the batching parameters for this query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf11de8882f5e5fe67fd7be2c054c74b5e69a760" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Change the default database so that we don&amp;rsquo;t need to specify the database when referencing a table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b5728648b60cefcbff4958c2ef1b0a37a69f53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Change the write acknowledgement requirement of the &lt;code&gt;users&lt;/code&gt; table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc40759c11e75845d6de4c0b5aea5c5c3424adf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Check which pieces of equipment Iron Man has from a fixed list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474f0040521606d55417932be1888761ae353063" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Check which pieces of equipment Iron Man has, excluding a fixed list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e28c21c02389df5084704933602486664ea4b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Close a cursor and execute a function upon close.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6dc767837661fa89d4134f05d23a7f4ce75174c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Close a cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d67c11dcb414545893a1eece7cb0aca13dbc36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Close an open connection immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0188f0a705ec665ec506d19d8b19002473ba8896" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Close an open connection, waiting for noreply writes to finish.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d4c61d55ff0ee38ca9b0f6ee03e7236ea3adb3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Coerce a number to a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198322c0142259bfb0398c9db6883e83e4b2e6ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Coerce a stream to an array to store its output in a field. (A stream cannot be stored in a field directly.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f06aca3193d8b5163af703394255437171e852f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Coerce an array of key-value pairs into an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15bcabb70a593bed7d187b8be86d976cf1ea8d33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Combine four arrays into one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417b0b99ea698aab5671a8f044f37bcd7c653702" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Compute a five-day running average for a weight tracker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d30cbf37c70f5b4842052b10bae518fe8b4198" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Compute a golfer&amp;rsquo;s net score for a game.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d062e489db160bbe1b2a95b11c969ff88790b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Compute the distance between two points on the Earth in kilometers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d2399bb40718f09d48b0d7bb05077289492754" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Concatenate an array of strings with &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a48e12936f5ae513b82086f195c9870c6efd0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Concatenate arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd6376c84385a9bc872e99de392b6495b9a2d9d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Concatenate strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea1914aa17e1d844380fd0297da6b2352a6a8ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Concatenate two strings using JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8052c0c6438984d21e115d0deeed48ef5740a54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Concatenate words from a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc001d702ba039ee8c504199ce944df5c5317189" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Construct a sequence of all monsters defeated by Marvel heroes. The field &amp;ldquo;defeatedMonsters&amp;rdquo; is an array of one or more monster names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4cf99aaef69bcdd45574381331b1c7ae7345bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Construct a stream of all heroes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726040297ee6c63553aa703ce674a70e42730b52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Convert a GeoJSON object to a ReQL geometry object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b508cd112be1430f941ff74d584bc34663517b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Convert a ReQL geometry object to a GeoJSON object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2602b51701ba821b2f18e76b1e7c6879d40e688b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Copy the documents from &lt;code&gt;posts&lt;/code&gt; to &lt;code&gt;postsBackup&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5c61766423794d3751a2751bcb56159d01f9c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Count the number of 18 year old users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da213897e22da2cc6449e2341d7462749d3aeb56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Count the number of users over 18.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675e915fb3a633fd94483bb6252f68f422ad63d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Count the number of users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7780bfffa15ad78cd51969a1db61a386033179dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Create a &lt;a href=&quot;../../../docs/changefeeds/javascript/index&quot;&gt;changefeed&lt;/a&gt; from the first example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b2fd5a7cc89af6e6eda910398afecaebe324f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Create a compound index based on the fields &lt;code&gt;postId&lt;/code&gt; and &lt;code&gt;date&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fefda1694279aacb38e8a7ab189229ef40ed6b97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Create a database named &amp;lsquo;superheroes&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87d47bfed507e2becf1428a8ca5eb200febc6e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Create a date one year ago today.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c22128fd04a4ca859175882051d2b874a196c64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Create a date one year from now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bc2dc0f15bf02a25df7734c0c0288967874fdd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Create a geospatial index based on the field &lt;code&gt;location&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d5098c2b0af9748a9c978c9d670bbc2a4fe9d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Create a geospatial multi index based on the field &lt;code&gt;towers&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ff960a26efc45fa0bf9c50c6207c23adeb9104" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Create a line object and then convert it to a polygon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced6e2a4e616f5746b65b480907ebc3079fc251a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Create a multi index based on the field &lt;code&gt;authors&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc9608827b8dc23176afa39d20a30a8e26422af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Create a new secondary index based on an existing one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f756775e32932210526ddbcca8c46ac778aa0f96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Create a simple index based on the field &lt;code&gt;postId&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2187c4dc525a7ae4924e3955c6407dba96ed869a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Create a simple index based on the nested field &lt;code&gt;author &amp;gt; name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1824f148bac6ad019d5bee8b23dfb8860588172d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Create a simple object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31382869ae9c8deb30525438808721f82a9d7009" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Create a table named &amp;lsquo;dc_universe&amp;rsquo; using the field &amp;lsquo;name&amp;rsquo; as primary key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3d0ed65353b466d9e5eb25830ed51b53ab95c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Create a table named &amp;lsquo;dc_universe&amp;rsquo; with the default settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf6a0f949542beecd097cd94e65f1d9c0397b1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Create a table set up for two shards and three replicas per shard. This requires three available servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5570c7d3dea70f78e433b120ab5981b01694b187" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Create an index based on an arbitrary expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01203759785a4e89f5cf931faaa1869daafb2782" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Define a circle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f07a7bd9d94c3b8aec62bb45da028b2a64c704" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Define a line using an array of points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d5d66a444db9e7b10d1f72f899c05aa445a5ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Define a line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff927a661543396e631d2c9bbc4465f3ccd12ee0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Define a point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea38bdfded2a573a11b5510204b7b696ef750727" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Define a polygon using an array of vertices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48fc911bb2afc5c01ab69ffd207ad1e227322c61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Define a polygon with a hole punched in it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e2bd47bf18803289af667ad428e0013262af430" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Define a polygon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82858cddfe42c62151a5849ce62de8df4be1f552" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Delete a comment on a post.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a04e070f8f630ff05c80f33def96ca9252f3c01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Delete a single document from the table &lt;code&gt;comments&lt;/code&gt; and return its value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c259466d209cb5a60b3d2f8f4d976474b11538" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Delete a single document from the table &lt;code&gt;comments&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8ae5682448fba625014d4c93dd2e9202dd1609" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Delete a table-level permission for the &lt;code&gt;chatapp&lt;/code&gt; account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53488d5e3eeaf15d641f8d039c97a534bdfb92d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Delete all comments where the field &lt;code&gt;idPost&lt;/code&gt; is &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b170403b3b57542c02e921eb96782fe461b42fa5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Delete all documents from the table &lt;code&gt;comments&lt;/code&gt; without waiting for the operation to be flushed to disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec77c9fa1dcc30d0217375beb7c3a4531bedf7d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Delete all documents from the table &lt;code&gt;comments&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518ae3820b2dd913f4ca10b1cbe12123fe7cbc49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Delete the next-to-last element of an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e542a76be08695d86d95a7f6970aab39888ed211" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Delete the second and third elements of an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c7c62b6b1651852e9fd59b997df7bbf0b78910" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Delete the second element of an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2026a0f63f9cbc0b6a89cac418d6ded23b4761d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Deny write permissions from the &lt;code&gt;chatapp&lt;/code&gt; account for the &lt;code&gt;admin&lt;/code&gt; table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68dc6240c6f0ef2ecb6f6e9f25e46f43aa18457a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Drop a database named &amp;lsquo;superheroes&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c215952cc6235cbab45edf3a6ca7438d2be58df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Drop a secondary index named &amp;lsquo;code_name&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787b83de7b7b6b6b678ce4e224247c1c8ade699e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Drop a table named &amp;lsquo;dc_universe&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c4f3c069ac415cdd68b84dad2a7acdfffbf907" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Efficient operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7d90b1ec3ed96e1dd3e4e02e9af0a2400301a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Equip Thor for battle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="325acc5bc7119ec6579253e5314a9f1393539290" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Equip every hero for battle, using a subquery function to retrieve their weapons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c902b3473f0ff3ca97850b89a2da05aa641a9779" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Explicitly specify a database for a query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1fa0adeb4bf12109792c3cd1f56b28c8723502" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Fail to parse out the domain and returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4411062d0d207e5299de25a966ef29658d9ac49b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Filter based on nested fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c3c684ca9ecde39b45d77601d148585c47a7244" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Filter based on the presence of a value in an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eff880769862e49043c4464cb3ac21bf7c387c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Find a document and merge another document with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfdedaed1e6470945c531ba17780c2c8274fd5db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Find a document by UUID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329a21dd3c01f006c540b103c3a26625bba97698" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Find all users with primary key &amp;gt; 10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be63bc16adadeffc0b767f43f6f7176360169f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Find all users with primary key &amp;gt;= 10 and &amp;lt; 20 (a normal half-open interval).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624b94269195a9a393d87459d957099f24f3c4c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Find all users with primary key &amp;gt;= 10 and &amp;lt;= 20 (an interval closed on both sides).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6968016126d3a30145e3aab3274a87ae022e4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Find all users with primary key &amp;lt; 20.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4927db88e56facbb23afc16074a825d038b555dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Find the popularity ranking of invisible heroes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a0e4f98d7995da64704fb4eb6c1018835178be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Find the position of the letter &amp;lsquo;c&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186a33b9e685e53001ff2842ce67419644ca3507" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Finding the arithmetic mode of an array of values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9116fca7fe994a2a300558217037d44eaf900a14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; For nested queries, use functions instead of &lt;code&gt;row&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5a24e64543ef69354a1601a5fdb363a80e4559" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; For small result sets it may be more convenient to process them at once as an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d817bcb309dc1bb080e8e16e088be9ec57e8d58e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; For the hero beauty contest we only care about certain qualities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc1b53ed4a9aa4113db2754c9fd5ff9f69b6f8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Generate a UUID based on a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ab14c513e7a596e57ef3cde34a56616845af37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Generate a UUID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf0979a680f027b8f8f793dd0f621a2c62e42b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Generate a random integer in the range &lt;code&gt;[0,100)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa0938278ed9dfc55c259a30ef86a951b0e9362" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Generate a random number in the range &lt;code&gt;(-2.24,1.59]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce4d6e5ff68dd20111f24478ea5aafeb790017f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Generate a random number in the range &lt;code&gt;[0,1)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a399971f4a90f860c40ca80c9f00ab95ec663b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get Alice and Bob from the table &lt;code&gt;people&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9051888c281780e674266cd0d68eb4c0338509ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get a ReQL document as a JSON string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2bb38423b800d2975fd5e4dcc3ac163955b140" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get a list of users and their posts, excluding any users who have not made any posts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a174566d75a2a634adf3de3e5cc9168678506e5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get a table&amp;rsquo;s status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2670852163c2cd04adff94f252fbf72ae1e0aa87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get all of Alice&amp;rsquo;s children from the table &lt;code&gt;people&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb488abcc12c95c1c71c78c1d2a50b14b92c7420" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get all of the values from a table row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6bb489fd022ba83cd69e7d0609aedf7b196fa0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get all the keys from a table row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606bc1932d21d63bab30484c534302149b2afe2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get all users less than 18 years old or whose &lt;code&gt;age&lt;/code&gt; field is missing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4188bc2cd32e37c2d553f6383bb4dbe03990d421" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get all users more than 18 years old. Throw an error if a document is missing the field &lt;code&gt;age&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4100919e4ece1a3e31d0700310e2ae2856a62ed6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get all users where the zipcode is a string of 5 digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c25874d2ed07bbe43a7a67636c4da70d0f9166" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get all users who are 30 years old.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c9284b3d135d6817099bd3746a1333c5d7f012" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get all users who are less than 18 years old and more than 13 years old.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4f55f7ea64d856f4167c513f470a4bae8689e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get all users who are more than 18 years old or have their parental consent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16aa2102664575d69056327c111ec7ffe593fc84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get all users who are more than 18 years old.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7d88ab7d81412fa72344dadc5976fccd54c870" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get all users who have given their phone number (all the documents whose field &lt;code&gt;phoneNumber&lt;/code&gt; exists and is not &lt;code&gt;null&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71adf70650f6ffd858cf96bec2e6cd34107322db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get all users whose age is greater than 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d049dc5ae21191af523880368c63ca0be9c61b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get all users whose full name is between &amp;ldquo;John Smith&amp;rdquo; and &amp;ldquo;Wade Welles.&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f8e0653fd39e7eac79f890e9381b9a70c9ee8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get all users whose name ends with &amp;ldquo;n&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f977708d61d96cde700d6c1fde4bdfbede66e0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get all users whose name has &amp;ldquo;li&amp;rdquo; in it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7c99dedbe718c739c1af1bfc95075cd6ccff4c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get all users whose name is &amp;ldquo;John&amp;rdquo; with a case-insensitive search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7438b1a7f73f075d7f46a5b1867c29b963a0d210" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get all users whose name is composed of only characters between &amp;ldquo;a&amp;rdquo; and &amp;ldquo;z&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8a9f4012d80bb183812c395bbbe93f50851556" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get all users whose name starts with &amp;ldquo;A&amp;rdquo;. Because &lt;code&gt;null&lt;/code&gt; evaluates to &lt;code&gt;false&lt;/code&gt; in &lt;a href=&quot;../filter/index&quot;&gt;filter&lt;/a&gt;, you can just use the result of &lt;code&gt;match&lt;/code&gt; for the predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec791f5855e33bfbc9da7b3ff984fc79732d2fa0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get all users whose name starts with &amp;ldquo;A&amp;rdquo;. Because &lt;code&gt;null&lt;/code&gt; evaluates to &lt;code&gt;false&lt;/code&gt; in &lt;a href=&quot;filter/index&quot;&gt;filter&lt;/a&gt;, you can just use the result of &lt;code&gt;match&lt;/code&gt; for the predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522f6fa3b3b670fc9009853b9c983447a805cbfc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get all users with an &amp;ldquo;editor&amp;rdquo; role or an &amp;ldquo;admin&amp;rdquo; privilege.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c793e7384ca243a6f48f6872b5a2c89cdcc2541" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get back a copy of the inserted document (with its generated primary key).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12378ff0da807071583d08ee6eb618cf3816ac74" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get back the raw &lt;code&gt;GROUPED_DATA&lt;/code&gt; pseudotype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae9dd89df8c9c5827447852f27a7fff21e8551b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get information about a table such as primary key, or cache size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347832cdf774515a95581ccc94492ddc01e7e513" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get the configuration for the &lt;code&gt;users&lt;/code&gt; table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3de6fcab68e82a74af822540bc45847b4673bbb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get the fourth element in a sequence. (The first element is position &lt;code&gt;0&lt;/code&gt;, so the fourth element is position &lt;code&gt;3&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfcd8cf6dcd39011de8c718415cab2fc37e15c7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get the size of an existing avatar image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc28fd94d85fbec2f84bcee27f6623d34358873" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get the status of all the indexes on &lt;code&gt;test&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ea46fac899f01e9199893f9c5164dc663eb21f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get the status of the &lt;code&gt;timestamp&lt;/code&gt; index:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721c888fd2dedde0aed3c41fb8ec1400aa5703f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get the top 10 ranked teams in order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0802494513eab1833a09ae7e541bcba20c772e52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Get the type of a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994f943c49cf38ab8a7c4e36cec0d8af686a1fed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Grant &lt;code&gt;chatapp&lt;/code&gt; the ability to use HTTP connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bfe9b18635473cdfd588cffe45568d7d3649bea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Grant a &lt;code&gt;monitor&lt;/code&gt; account read-only access to all databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22efbfb347eb1091a1bfecfd24c42fa5b72fa154" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Grant the &lt;code&gt;chatapp&lt;/code&gt; user account read and write permissions on the &lt;code&gt;users&lt;/code&gt; database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1248e3669b116aacca31245ff5e15ad32ec23e9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Group games by player.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f84c629919d6963cbb68fa44bbd674b05627bcb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Has Iron Man ever defeated Superman in battle?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f6ca59414f86b1073a84da690a02cd64886a6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Has Iron Man ever fought Superman?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544235dd277910711946c91828d695e4ddbc4f4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Here in conjunction with &lt;a href=&quot;../order_by/index&quot;&gt;orderBy&lt;/a&gt; we choose to ignore the most successful heroes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f30ad9a1df565f98cb4a480cb675d039e99a07d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Here in conjunction with &lt;a href=&quot;order_by/index&quot;&gt;orderBy&lt;/a&gt; we choose to ignore the most successful heroes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ea1bc17dc6b6c804f58226ba516a7a244eda5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Hour of the day in San Francisco (UTC/GMT -8, without daylight saving time).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac43e42348ebda9d60933a50041b259b4610a02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; How many matches have been played this year by month?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67bec48415eb283a460d199f5b1fc0e09214cfd3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; How many points have been scored across all games, counting bonus points?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f4c4e9b99ab2cb4f906bfb3815ba827b362c77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; How many points have been scored across all games?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea8c5e0a68aa332fcd6af8f7221b6258c0a2e6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Hulk and Thor decide to join the avengers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f89aa79368fd68841adf5f735051265a336023" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Hulk decides to join the avengers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550af2977136abff7e0e2d5ce274f3dc2829797b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; If we need to know when the iteration is complete, &lt;code&gt;each&lt;/code&gt; also accepts a second &lt;code&gt;onFinished&lt;/code&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39817dcf6609b18aa0e3b83a390e65fd3136fea9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; If you are OK with potentially out of date data from all the tables involved in this query and want potentially faster reads, pass a flag allowing out of date data in an options object. Settings for individual tables will supercede this global setting for all tables in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d906e5516d6ea2f082c44f7687e1ce9e477b38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; If you do not want a time object to be converted to a native date object, you can pass a &lt;code&gt;time_format&lt;/code&gt; flag to prevent it (valid flags are &amp;ldquo;raw&amp;rdquo; and &amp;ldquo;native&amp;rdquo;). This query returns an object with two fields (&lt;code&gt;epoch_time&lt;/code&gt; and &lt;code&gt;$reql_type$&lt;/code&gt;) instead of a native date object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae2a48bed0b9e5f22586b2ff23fa26933e8d918" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; If you have a sequence with fewer documents than the &lt;code&gt;arrayLimit&lt;/code&gt;, you can order it by multiple fields without an index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69d60b60ac53358e1bfa0b045f57ca6ded0e044" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; If you have a sequence with fewer documents than the &lt;code&gt;arrayLimit&lt;/code&gt;, you can order it with an arbitrary function directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec223b49f724f0d3af9c61c346e69a2f3bceb9a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; If you just want to send a write and forget about it, you can set &lt;code&gt;noreply&lt;/code&gt; to true in the options. In this case &lt;code&gt;run&lt;/code&gt; will return immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9545aedfc9ad1f9aaac0b51461e4accad3545d28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; If you want to specify whether to wait for a write to be written to disk (overriding the table&amp;rsquo;s default settings), you can set &lt;code&gt;durability&lt;/code&gt; to &lt;code&gt;'hard'&lt;/code&gt; or &lt;code&gt;'soft'&lt;/code&gt; in the options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c89e5a15ad0946456fa62f7aa60f7a1ea9e5057" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; In JavaScript, you can also do this with just r.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148a8becfe58c052f386799b670ed4b1eb6b8f8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; In the &lt;code&gt;players&lt;/code&gt; table, the &lt;code&gt;games_won&lt;/code&gt; field contains one or more fields for kinds of games won:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7313f808fc865c018882db2084c6fadfdd52ca2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Increment the field &lt;code&gt;view&lt;/code&gt; of the post with &lt;code&gt;id&lt;/code&gt; of &lt;code&gt;1&lt;/code&gt;. If the field &lt;code&gt;views&lt;/code&gt; does not exist, it will be set to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5984e1961048d2f1611ca82c8c0fbd663c52f950" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Increment the field &lt;code&gt;view&lt;/code&gt; of the post with &lt;code&gt;id&lt;/code&gt; of &lt;code&gt;1&lt;/code&gt;. This query will throw an error if the field &lt;code&gt;views&lt;/code&gt; doesn&amp;rsquo;t exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="082a9b5071491d743ad5129e61dadccc5c778b90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Increment the field &lt;code&gt;views&lt;/code&gt; and return the values of the document before and after the update operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5394223574ca80965dd1780852eb1a2189c884ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Inefficient operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca874a34d7c40336b8a5127c72bc474668c3bb10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Insert a document into the table &lt;code&gt;posts&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb7246bc7b33dfa4c42320be1e974bcbf7363d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Insert a document into the table &lt;code&gt;users&lt;/code&gt;, replacing the document if it already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da355e9c4269f4c643e9721486d9b2d68cd09ada" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Insert a document without a defined primary key into the table &lt;code&gt;posts&lt;/code&gt; where the primary key is &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2617fe7f765afc7499ec431e7ab879c3c33c2cb7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Insert multiple documents into the table &lt;code&gt;users&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7aee31f295dd63a7f494b5d05ad35035e2c42f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Iron Man can&amp;rsquo;t possibly have lost a battle:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa847c6a77a7ad8f9a9ee066588bc40879bda87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Is &lt;code&gt;point2&lt;/code&gt; included within a 2000-meter circle around &lt;code&gt;point1&lt;/code&gt;?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7409aa1d3ddade7b4bc0b5e2ef9637de9751a51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Is &lt;code&gt;point2&lt;/code&gt; within a 2000-meter circle around &lt;code&gt;point1&lt;/code&gt;?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328f114ac45463f88a3d7e315366e0a3d49a0ec8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; It&amp;rsquo;s as easy as 2 % 2 = 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409e632804bdff50e47cbf78f7d73136fba4c7b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; It&amp;rsquo;s as easy as 2 * 2 = 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b161654c98af31d7c7db5c228b31b99d69fa6fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; It&amp;rsquo;s as easy as 2 + 2 = 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="771a3ea977d7f69cef84531f7b3918cebaddaac0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; It&amp;rsquo;s as easy as 2 - 2 = 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95feec0fc8b8dec2447d5a8d8610850c81ac521" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; It&amp;rsquo;s as easy as 2 / 2 = 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da06a020f2156d6a24788f836047fe7a1a920b9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Iterate over a stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e657b564c348b44f1fb2c5927e17550c6fed4095" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Iterate over a stream using a handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b5e5dcb0f7bbb8f92d9fd439470a46c20ffec6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Iteration can be stopped prematurely by returning &lt;code&gt;false&lt;/code&gt; from the callback. For instance, if you want to stop the iteration as soon as &lt;code&gt;row&lt;/code&gt; is negative:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021ded0f0f98923e3169e95bf477e5c15457b505" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Let&amp;rsquo;s process all the elements!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0a8303040ea7e3896095fdb9e49b6b4c99acaf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; List all databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e522a80b7b8e962e46bbc9303bba9981cd04f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; List all tables of the &amp;lsquo;test&amp;rsquo; database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b296a8eb3c2f5dc7801d4bef5b6017bdaf1005" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; List the available secondary indexes for this table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4491a267b6cf9bd022393783e20dc5ed729f8528" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Literal can be used to remove keys from an object as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc490cc394e39baedd6e4e93ed56016377f152fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Match players with the games they&amp;rsquo;ve played against one another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913aebd544a24f24dddb23739e66aaf94d92d9aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Merge can be used recursively to modify object within objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229b593d1677a6f21b5fa8e436475c8777866c21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Merge-sort the tables of heroes, ordered by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20356d91b456fd8d89b0f05472a754b2fe0e7da2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Monitor the connection state with events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c54ee77fcb50b50d7ae0e0d9e61fe2e3410fb84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Nested objects can be used to remove the damage subfield from the weapons and abilities fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9be7bde6d388d5b8be2655f09babff8a03076d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Not true is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da84b4c3e6a90a745dafc5719b2e1296844eaa55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Notice that an index ordering always has highest precedence. The following query orders posts by date, and if multiple posts were published on the same date, they will be ordered by title.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41af360ec2004f33b1f8536a4f6f953dbd86095" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Now that our heroes have defeated their villains, we can safely remove them from the villain table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d9b6eba3bb55e1d884dd2240d3adff5d45728c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Objects wrapped with &lt;code&gt;expr&lt;/code&gt; can then be manipulated by ReQL API functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f85ab190f50a1b8e1f0a5ba58b6546c562c579" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Only so many can fit in our Pantheon of heroes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7932f9b1260230b6f983ef45d0dd6110ee536d8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Open a connection using the default host and port, specifying the default database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfc854ee893fe49625830eb8e7d30b76d41ad28a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Open a new connection to the database using an SSL proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55942f283877bdf406241c29810c6ee80898e5c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Open a new connection to the database, specifying a user/password combination for authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ce0695f63476b3d80ca294fe1cbb90d1d3f49e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Open a new connection to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb1ed51c1d5d48a8809a477db3b66daca87dc289" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Order a sequence without an index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58820938d247c994fd6aa29d6b3fc8e711cc8b71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Order all the posts using the index &lt;code&gt;date&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86e89c0e057ea3e060d974f92b114a173fe9a11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Ordering after a &lt;code&gt;between&lt;/code&gt; command can be done as long as the same index is being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782d872b6c19d66f1c8507046aabda7ad9607302" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Perform a &lt;code&gt;POST&lt;/code&gt; request with accompanying data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217b3634b79ecdf5665d834cec5d09a71d08645e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Perform a &lt;code&gt;PUT&lt;/code&gt; request for each item in a table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0cb0963c59dfe291949b643db0be7e3b6724c98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Perform a GitHub search and collect up to 3 pages of results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b1cba4ccccbdfcf7ad89786c7d33aabb3c736c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Perform a conditional update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda0082c765a147d5a45a48f281a08de834d60c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Perform an HTTP &lt;code&gt;GET&lt;/code&gt; and store the result in a table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fcd7c71989c914a215e3eed70eaa13a98b893a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Perform an emergency repair on a table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc5580ed5f0ad089b358a862c3fbe495f15cc8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Perform depagination with a custom &lt;code&gt;page&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ff9582e1f2c7a160edabfcd8b1815ee43765c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Perform multiple requests with different parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e6686405d967b9a419e01624d668b1fe72c801" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Pluck can also be used on nested objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b2cd5a56104d72cab424255fcb358d9c139cf6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Print the first five changes to a table. After the handler has been stopped, the changefeed query will be closed on the next change to the table rather than returning a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d48bde88fbfe3c9aaed9ed11c2f26c755e55ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Process all the elements in a stream, using &lt;code&gt;then&lt;/code&gt; and &lt;code&gt;catch&lt;/code&gt; for handling the end of the stream and any errors. Note that iteration may be stopped in the first callback (&lt;code&gt;rowProcess&lt;/code&gt;) by returning any non-Promise value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059eb5b0869e2e191678e0d556b3a93a5a65c753" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Provide a resolution function that concatenates memo content in case of conflict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17156ff871469e287ec8c8f1c4f943f35d05efc8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Re-thrown errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7ffc6c4788622751ef899927f873f8f6f85ec5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Rebalance a table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f6cae38d6581cb6ee3967e6383f959a2ecbf740" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Rebuild an outdated secondary index on a table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b04bd156bbe6c3f8a3edb641420c6bcc53c7c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Reconfigure a table, specifying replicas by server tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e73eaa09e4d2f9e125c012238ac9e74972b07ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Reconfigure a table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87947cb4505d654c2cd5821373a2ecb60de474b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Remove Iron Man&amp;rsquo;s boots from his equipment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41cca4ac39f96c7380d047789fd2a7d309fdb76" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Remove all the fields that are not &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt; or &lt;code&gt;content&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b125a610cc8f9a808d39f56127f27589332efd91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Remove the field &lt;code&gt;status&lt;/code&gt; from all posts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69726260e53475c2044442c3c99756d5bb5cefb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Rename a field when retrieving documents using &lt;code&gt;map&lt;/code&gt; and &lt;a href=&quot;../merge/index&quot;&gt;merge&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76aa37e8988ff7de51151d9dfb89aa94f0afb6bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Rename an index on the comments table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98116588040f3ba95cdfa0f75dc3607e019d24a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Replace all of Bob&amp;rsquo;s IM records. Normally, &lt;code&gt;update&lt;/code&gt; will merge nested documents together; to replace the entire &lt;code&gt;&quot;im&quot;&lt;/code&gt; document, use the &lt;a href=&quot;../literal/index&quot;&gt;literal&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e1f1dfdc3caa4d0e0a28e158868f152c0312847" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Replace one nested document with another rather than merging the fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe6b383fa90dfa3393f80dc4c4fe6afd69bbd0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Replace the document with the primary key &lt;code&gt;1&lt;/code&gt; and return the values of the document before and after the replace operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb65112f80380b0d61f56efeb695d5359ed1c75" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Replace the document with the primary key &lt;code&gt;1&lt;/code&gt; using soft durability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b1c34beff09c01a4414ce3e43a031a45d34513" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Replace the document with the primary key &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2d4d66cfaf5f546a7875404c9dbe211b392453" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Retrieve Iron Man&amp;rsquo;s equipment list with the addition of some new boots and an arc reactor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4818a36b8964caff8b5b5d631f362dcd9ed5ded" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Retrieve Iron Man&amp;rsquo;s equipment list with the addition of some new boots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d71b30f4ecfa30ba4824cc388231397c8d88fbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Retrieve Iron Man&amp;rsquo;s equipment list without boots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64027dda01d591ee95dbb6b24b12acb7d83f368b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Retrieve all the posts that were posted between December 1st, 2013 (exclusive) and December 10th, 2013 (inclusive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eceff5d7792fb805e3e844beb86d3c657a70b08a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Retrieve all the posts that were posted between December 1st, 2013 (inclusive) and December 10th, 2013 (exclusive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ab15684f1479663492967dc9e70ca2d21435be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Retrieve all the users born in 1986.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bdd51e2f6ed6b3fce35c574a5ddd16fd791eae6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Retrieve all the users who were born in November.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598bc095699e0053af7b830abc22cefe5f6d7748" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Retrieve all the users who were born on a Tuesday.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69194f53c9e0b4f240a8819a5956e24b26664f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Retrieve all the users who were born the first day of a year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc0390e8f101aecb7b640cf1f8e98898e5bcc47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Retrieve all the users whose birthday is today.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5dc5699d8d18d32928141ca473945223220387" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Retrieve all users who have a gmail account (whose field &lt;code&gt;email&lt;/code&gt; ends with &lt;code&gt;@gmail.com&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696db8f23541074a26488c2ee52d431675f0e4c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Retrieve all users who subscribed between January 1st, 2012 (included) and January 1st, 2013 (excluded).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b978fa8a8e411acfad3d1f6bcd996544090dc34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Retrieve how many seconds elapsed between today and &lt;code&gt;date&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb60c836cc07f52e5da14c10254cb912334dda0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Retrieve posts that were submitted before noon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada9589a852d7cb65fd9369802ca50afce60f2a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Retrieve the domain of a basic email</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77dca504bc71dd07a614f384e15c30bd02515df0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Retrieve the next element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c83442093b6e22faa9854415acb4ae0eed1ea79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Retrieve the titles and authors of the table &lt;code&gt;posts&lt;/code&gt;. In the case where the author field is missing or &lt;code&gt;null&lt;/code&gt;, we want to retrieve the string &lt;code&gt;Anonymous&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6bc3bff550a8e8b5c4b19a3c00d3f1e5d2cb73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return Iron Man&amp;rsquo;s weight, rounded down with &lt;code&gt;floor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d21101f2647bc033a576981114e49894dc5abbf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return Iron Man&amp;rsquo;s weight, rounded to the nearest integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f361b65aacfeadcd187e94352441252fce2d52d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return Iron Man&amp;rsquo;s weight, rounded up with &lt;code&gt;ceil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e668f49c7b44832fb2a3e58dd5a00174ba7ac8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return a four-element range of &lt;code&gt;[0, 1, 2, 3]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23765255bf2b4c4bb4a1a1f27139e3521e4413ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return a list of all Marvel heroes, paired with any DC heroes who could beat them in a fight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1abd6c2659e1c59ed6cad002f1b26185906b87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return a list of all matchups between Marvel and DC heroes in which the DC hero could beat the Marvel hero in a fight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce2f07932a2d156d022f0236bc558ea2830e93c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return a list of the closest 25 enemy hideouts to the secret base.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e93dba7896b17054f85b59427ec69d9b44a2be4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return a range from -5 through 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3df29a2bb120bd03b02953c619e7df2efc1f723" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return all but the top three players who have a red flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="580252ea30671bef6448ff971798b8226d4152e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return all documents in the table &amp;lsquo;marvel&amp;rsquo; of the database &amp;lsquo;heroes&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e00035bc24bb6a8bcb307de47d8fc5c66e68f95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return all documents in the table &amp;lsquo;marvel&amp;rsquo; of the default database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282156a7b43c39f78f001dcb521c6c7f4d358800" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return all the changes that increase a player&amp;rsquo;s score.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6d7fd23d6bf93e005e8ef846a9068145d6ca74" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return all the changes to a specific player&amp;rsquo;s score that increase it past 10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dafa60da7929153c5c95736a16872a5a818e1520" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return all the changes to game 1, with state notifications and initial values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ca38bb0bf493c1752c3f9b10124037cdd8e7b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return all the changes to the top 10 games. This assumes the presence of a &lt;code&gt;score&lt;/code&gt; secondary index on the &lt;code&gt;games&lt;/code&gt; table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da47743845247b03cb7b62369e7ea588ca8fe16a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return all the inserts on a table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c800293ee11b4c28cb47aa00e5605df6a7faaf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return all the posts submitted after midnight and before 4am.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2eb1b13670c5fd06052ca96c92e19fbbf7029e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return all the posts submitted during the first 10 minutes of every hour.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281a9e792080d04d5b11ea2bb4bf1646c4d6f0e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return all the users in the &amp;ldquo;-07:00&amp;rdquo; timezone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad31dc5c0a4e63b4cb486106b11f68f42f0d1c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return all the users that do not have a &amp;ldquo;flag&amp;rdquo; field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138f95b16743f5c6b3fd7c600a4316d5320c05d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return every other row in a table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e447ef92e69139af64b9b1ed6f07673fec4ebc6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return holders of tickets &lt;code&gt;X&lt;/code&gt; through &lt;code&gt;Y&lt;/code&gt;, assuming tickets are numbered sequentially. We want to include ticket &lt;code&gt;Y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4175445a554f28658daba13047aefd62814f1da1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return server information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c6a6d5e0e7e1a8c1bbffaf6adfe0d66e6958d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the best scoring player in a two-player golf match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f99acb227e65127dd3387c9cd4ec2724dd1592" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the ceiling of -12.345.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4a04e0bdf1e837c7395ea7ab38ad77e7faf1bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the ceiling of 12.345.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105a6beb774e4c1bcd2a7047adfff6f1ef11d317" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the current ISO 8601 time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ba9e6027f4009489d2ccee677e317b62f45cec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the current time in seconds since the Unix Epoch with millisecond-precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c75cb514e6cc027b56668e481bc8618f912a787" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the elements of an array from the second through two from the end (that is, not including the last two).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2261f0fd4a819426231b85dc70c2a8cac7c71c0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the first five squares.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6523e3ae9491319d244b75256cc6dee474801f06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the floor of -12.345.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c90174b0406b33422dc83d8f8f8be2b62694156" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the floor of 12.345.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c60fe72b560b13e86d17920fa303c608d0f137" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the fourth, fifth and sixth youngest players. (The youngest player is at index 0, so those are elements 3&amp;ndash;5.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d791bacf8cb116089d7c78e0080c861a09ddc1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the highest number of points any user has ever scored. This returns the value of that &lt;code&gt;points&lt;/code&gt; field, not a document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fa45a0595a729289e6713c9664b9263d3dc14f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the length of a Unicode string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="259593b48d37ffa9a0a7be1415445fc60298c64c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the maximum value in the list &lt;code&gt;[3, 5, 7]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c5cc3c1463ff6e538666926d596220ab03bbe9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the minimum value in the list &lt;code&gt;[3, 5, 7]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867eead12eaf9797e2ca5f5293270dcd0faf12da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the number of documents in the table &lt;code&gt;posts&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009eb7bf79da186a517b4453c16c880674784f85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the players who have &lt;em&gt;not&lt;/em&gt; won games. To do this, use &lt;code&gt;hasFields&lt;/code&gt; with &lt;a href=&quot;../not/index&quot;&gt;not&lt;/a&gt;, wrapped with &lt;a href=&quot;../filter/index&quot;&gt;filter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffdae6bac174d28f081903d1674ceaa321fd592" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the players who have won games.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760e7b2c9af1e54fa24400226260b2079ede2cb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the post submitted during the first 30 seconds of every minute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b942be6df8089dac354c5efafcf08d85690d15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the smallest number of points any user has ever scored. This returns the value of that &lt;code&gt;points&lt;/code&gt; field, not a document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc55a1e22bd7554a6e506b2ee0f20c3e22e3153" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the third through fifth characters of a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421170e20f7357508f6b09dd0e025576d0df2607" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the user who has scored the fewest points, adding in bonus points from a separate field using a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf1cbe4851374244369da456f032cafadc6fe97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the user who has scored the fewest points, but add a default &lt;code&gt;null&lt;/code&gt; return value to prevent an error if no user has ever scored points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a352ca57f03751ce897ff17cf00a5c6bcfa80b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the user who has scored the fewest points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca59390b8d2d26239efb9115dd36ec274093789a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the user who has scored the most points, adding in bonus points from a separate field using a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d41bf116d7b00d1c253e51321dc0973c2484ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the user who has scored the most points, but add a default &lt;code&gt;null&lt;/code&gt; return value to prevent an error if no user has ever scored points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9757d2e6e49446a074d75ed6eebff33e052b6b3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the user who has scored the most points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e126373c1001aee4ccdc44229e0f3791fa09b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return the users born on the 24th of any month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e87d7b09c36ce966755b302531318ea8208f94f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return today&amp;rsquo;s day of week.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d521127d8e5ef3cc7ff9e753c6a3778f619536" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return whether all of &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;z&lt;/code&gt; evaluate to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10febe6c34ec38e1aff3ba9ec1eab6e04fdcb094" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return whether any of &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; or &lt;code&gt;z&lt;/code&gt; evaluate to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed4d0c322773cac73f4d144cc763f17308f3e37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return whether both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; evaluate to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ff14e5505f17d4eb8c5feb8d082ce0dfd68a6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Return whether either &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; evaluate to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dfe946f9993347138992ec45dffa31f2a91ab0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Rewrite the previous example with &lt;code&gt;getIntersecting&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82dac3d61f4d464c79b7e34dd64955136009d8f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Round -12.345 to the nearest integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ce5ae25de70118ef993895de7ab84458bd3369" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Round 12.345 to the nearest integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a4d4584a8b19bb9cd585aa96340e7511dd91cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Run a query on the connection &lt;code&gt;conn&lt;/code&gt; and log each row in the result to the console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d64a5af05c893657e37a2b8bbea51498568248" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Run a query on the connection &lt;code&gt;conn&lt;/code&gt; and retrieve all the rows in an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b95201d75aa3a85fbab1f90281c582628b6ce73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Save an avatar image to a existing user record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe5976c3ce6158153abc094a62c6dcc0b1b2e8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Save the binary representation of the index:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfdce19b25dbd19391f8151d039fb21b0f1bfc39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Secondary index keys are not guaranteed to be unique so we cannot query via &lt;a href=&quot;../get/index&quot;&gt;get&lt;/a&gt; when using a secondary index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11895d6c0fb39e67f3ca602f1204b880ef83d4bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Secondary index keys are not guaranteed to be unique so we cannot query via &lt;a href=&quot;get/index&quot;&gt;get&lt;/a&gt; when using a secondary index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38650ffc9b846ff5bfddce1ee1f1483d924799a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; See if a user&amp;rsquo;s &lt;code&gt;role&lt;/code&gt; field is not set to &lt;code&gt;administrator&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3251a70c9971e6e8cb5f26f5bee7e07c45b58c68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; See if a user&amp;rsquo;s &lt;code&gt;role&lt;/code&gt; field is set to &lt;code&gt;administrator&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d1055d3b75d9e8d04163337db75bc126cc2551" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; See if three variables contain equal values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e129c48a29a87e203f0ab7ab63a3b978abc8eb2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; See if three variables do not contain equal values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e10181a3354243eb22f60df94e1ae712a4a261" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Select 3 random heroes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac7f07750bf035cd4d094183239ea021b2a9a2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Select all documents where the &amp;lsquo;magazines&amp;rsquo; field is greater than 5 by running JavaScript on the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cdc0007474651cf7a93f608e375a9beaa4908b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Select one random player and all their games.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba7f0bf4ebaa23a9f442901e96d6470ec3bfd7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Select the bronze medalist from the competitors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29310dbc87586d30d1bbc7f78db602fa8d2774d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Select the last place competitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="195a526bc178a35def2630e8146b587f2a3da6ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Select the second element in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e699d6f86e8c1ca64af9c6426d09dfc766ba1793" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Send a note to every user with an ICQ number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640f47a33f5ac87f924bff799452f784b061674e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Send an array to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10debf1928a6c384a2beacf3f2e20431fc67e9a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Set up your top-level namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d804d175c8ed5dc8317325ef0256be10da468d83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Simple use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce410fcc8e54638f1dba4931491401618c3b5b58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Simulate an &lt;a href=&quot;../eq_join/index&quot;&gt;eqJoin&lt;/a&gt; using &lt;code&gt;concatMap&lt;/code&gt;. (This is how ReQL joins are implemented internally.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4af3f8e5b07893e51544c6e90ade5f56f984aea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Since we don&amp;rsquo;t need it for this computation we&amp;rsquo;ll save bandwidth and leave out the list of IronMan&amp;rsquo;s romantic conquests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420aaa9aad34417d15be481dcfd2cce3bfad254d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Specify the database to use for the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06746e0d33f893a9cf8fee465d4e107ecb0d911a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Split a string into characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd7a71036f6cc9c055f6cca84ea6ad2752fe9af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Split on whitespace at most once (i.e. get the first word).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da6e654d9fb01fb3f1bceca1fe4c627955aad61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Split on whitespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88947fbdc47899bff4020d11e34c7b03aedd845" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Split the entries in a CSV file, but only at most 3 times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218cc7fa0883d539013927dec037fe5a5cece7de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Split the entries in a CSV file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8804fac24de266b0833d582f0de10fd34005a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Subscribe to a &lt;a href=&quot;../../../docs/changefeeds/javascript/index&quot;&gt;changefeed&lt;/a&gt; of teams ranked in the top 10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2daa7192126e2491b5d27da261468e286793fd3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Subscribe to the changes on a table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5cd25bba94b3c82a1cfe5024e40709316249c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Sum the elements of three sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8169867db70df07a66f809e36d279b3cf816a95e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Suppose that each &lt;code&gt;post&lt;/code&gt; has a field &lt;code&gt;comments&lt;/code&gt; that is an array of comments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd33b0ace48ca18801a67415d01189b03729284" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Take different actions based on the result of a ReQL &lt;a href=&quot;../insert/index&quot;&gt;insert&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1331c4c50e12499667a4cdbd70565b20bc0ab67a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt; Test if a player has scored 10 points or less.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
