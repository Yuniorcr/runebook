<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="6d3749bd80b9a3e6b64c10cfb0571b3d16e05599" translate="yes" xml:space="preserve">
          <source>&quot;A Web for Everyone: Designing Accessible User Experiences&quot;, Sarah Horton and Whitney Quesenbery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a85842a00b6aacc572730798eadada0934442b" translate="yes" xml:space="preserve">
          <source>&quot;Inclusive Design Patterns&quot;, Heydon Pickering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab11c10fd7d15a2898d0901ba882d89542a9be37" translate="yes" xml:space="preserve">
          <source>&quot;Rules&quot; are like plugins for Bazel. Many rule sets are available. This guide documents the ones maintained by the Angular team at Google.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdda55b307e6851847004e16db0d7e12584bf9c" translate="yes" xml:space="preserve">
          <source>&quot;ci&quot; : Enables analytics and configures reporting for use with Continuous Integration, which uses a common CI user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937e4092ee73c84d3356be089ce5f56627bacefb" translate="yes" xml:space="preserve">
          <source>&quot;enum&quot;: [...]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8e7fc33d5c436e7537c52c76dfebcb0ad998b9" translate="yes" xml:space="preserve">
          <source>&quot;off&quot; : Disables analytics gathering and reporting for the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca686b1a6096f8e22ac6642a7b45176c487fe8e4" translate="yes" xml:space="preserve">
          <source>&quot;on&quot; : Enables analytics gathering and reporting for the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="786f0b0fdba0e7e6f629657cdbbde92b21c4a610" translate="yes" xml:space="preserve">
          <source>&quot;project&quot; : Sets the default status for the project to the &lt;em&gt;projectSetting&lt;/em&gt; value, which can be any of the other values. The &lt;em&gt;projectSetting&lt;/em&gt; argument is ignored for all other values of &lt;em&gt;settingOrProject&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994e99cb6f189eacbd02f675504086a8bbfc9058" translate="yes" xml:space="preserve">
          <source>&quot;prompt&quot; : Prompts the user to set the status interactively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a48c5ba60b34292a010a747ba3afe52390cef1" translate="yes" xml:space="preserve">
          <source>&quot;type&quot;: &quot;boolean&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8c898251b2a876444168ecc0b736b5456bf416" translate="yes" xml:space="preserve">
          <source>&quot;type&quot;: &quot;integer&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a204891f50fcebde8aa5636c4aff6e7573aff874" translate="yes" xml:space="preserve">
          <source>&quot;type&quot;: &quot;number&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8406286fc295f8e2be3b72a8910b7199b3b761" translate="yes" xml:space="preserve">
          <source>&quot;type&quot;: &quot;string&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0627031bc9fb1d2b40046fab6f7e81a7e26f86eb" translate="yes" xml:space="preserve">
          <source>$locationShim</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce10375bafe0eeb818e044811bd963e06ce95a54" translate="yes" xml:space="preserve">
          <source>$locationShimProvider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5b90dcfc66d1ef800fc4c0a78b9c55952c9929" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2010&amp;ndash;2019 Google, Inc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96fb3b85e55d5e5a85d990f7e5a3b5ec9230b2f5" translate="yes" xml:space="preserve">
          <source>&amp;curren;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5eb021d14802dd8de47342f74b9a42820439322" translate="yes" xml:space="preserve">
          <source>&amp;lt;img&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dac79354b752febcb9f1726dc159b997c286a26" translate="yes" xml:space="preserve">
          <source>&amp;lt;ng-container&amp;gt; to the rescue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfbfd69bf6b2dc5a5aef007b419287bf654ef7fd" translate="yes" xml:space="preserve">
          <source>&amp;lt;template&amp;gt; tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea457e13c3bd58bc056a82d906e4785b66e7a16" translate="yes" xml:space="preserve">
          <source>&amp;mdash;or&amp;mdash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919eee0227d60f9c3f72efb279ccc3425b973414" translate="yes" xml:space="preserve">
          <source>'InjectionToken' objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3711960582ca257067906627eda39e5a120bc0" translate="yes" xml:space="preserve">
          <source>'disabled' - The initial navigation is not performed. The location listener is set up before the root component gets created. Use if there is a reason to have more control over when the router starts its initial navigation due to some complex initialization logic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2172cc4d18e9a8edc8793eccd563d452337847" translate="yes" xml:space="preserve">
          <source>'disabled'- (Default) Does nothing. Scroll position is maintained on navigation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3c1d6d854d61bdf4467b67d3dc6ecc70779fe6" translate="yes" xml:space="preserve">
          <source>'enabled' - The initial navigation starts before the root component is created. The bootstrap is blocked until the initial navigation is complete. This value is required for &lt;a href=&quot;../../guide/universal&quot;&gt;server-side rendering&lt;/a&gt; to work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40afc865582ac79a8bcafab01414db398c0a63e2" translate="yes" xml:space="preserve">
          <source>'enabled'- Restores the previous scroll position on backward navigation, else sets the position to the anchor if one is provided, or sets the scroll position to [0, 0] (forward navigation). This option will be the default in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c7a13812fd886b36e524f66d855ebf26fd39e9" translate="yes" xml:space="preserve">
          <source>'legacy_disabled'- The initial navigation is not performed. The location listener is set up after the root component gets created. @deprecated since v4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ecabecf888717b1214dca30c4197e7c3a58893" translate="yes" xml:space="preserve">
          <source>'legacy_enabled'- (Default, for compatibility.) The initial navigation starts after the root component has been created. The bootstrap is not blocked until the initial navigation is complete. @deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4dfeeeba28466ee813d6aef442e5d5677c4c5c" translate="yes" xml:space="preserve">
          <source>'top'- Sets the scroll position to x = 0, y = 0 on all navigation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067cdf519b257821ce1e924903c5a511fa00f15b" translate="yes" xml:space="preserve">
          <source>(Deprecated in v4.0.0 use &lt;code&gt;queryParamsHandling&lt;/code&gt; instead) You can also tell the directive to preserve the current query params and fragment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4662724ea5a572943e07b286d8759983b471d29e" translate="yes" xml:space="preserve">
          <source>(Note: The &quot;Checkout&quot; button that we provided in the top-bar component was already configured with a &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;/cart&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f789c14a9475c42edfbae7ecde94299ffb8562c3" translate="yes" xml:space="preserve">
          <source>(deprecated) &lt;code&gt;/deep/&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;::ng-deep&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21dc2f98182dd959be1c1af286df85e91e1c0388" translate="yes" xml:space="preserve">
          <source>(implemented as class methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a641c7fc0180b3ac58c7b0329a2968efe39e1e04" translate="yes" xml:space="preserve">
          <source>(required) The &lt;code&gt;maxAge&lt;/code&gt; parameter indicates how long responses are allowed to remain in the cache before being considered invalid and evicted. &lt;code&gt;maxAge&lt;/code&gt; is a duration string, using the following unit suffixes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90369e540090901e785ed9bc7495ae3c5924739" translate="yes" xml:space="preserve">
          <source>(required) The maximum number of entries, or responses, in the cache. Open-ended caches can grow in unbounded ways and eventually exceed storage quotas, calling for eviction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd44775e8acbe8dd02f9747df5d0266f76608874" translate="yes" xml:space="preserve">
          <source>* Figures are for minified and gzipped code, computed with the &lt;a href=&quot;http://closure-compiler.appspot.com/home&quot;&gt;closure compiler&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7229c8bed4657f0c6db46841c4a31171845fb19" translate="yes" xml:space="preserve">
          <source>*ngFor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b7f1c669ffd069cc24e6af9b19bf24144afa1a" translate="yes" xml:space="preserve">
          <source>*ngFor microsyntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7aff0d2d2fc8945be404d95bddd086d8d1405a" translate="yes" xml:space="preserve">
          <source>*ngFor with &lt;code&gt;trackBy&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c52c21816b330fc0165a88e889078e7ede64683" translate="yes" xml:space="preserve">
          <source>*ngIf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81600b4a9234e16342d625af832664a2d020c4f8" translate="yes" xml:space="preserve">
          <source>-OR-</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ece903ed54e2e9a29ce75975835257a0082ee3" translate="yes" xml:space="preserve">
          <source>/schematics/ng-add/ folder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff3de0e4c15ab8da5760688f896442dc2310a05" translate="yes" xml:space="preserve">
          <source>0, 23</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa55b59064510b7d1b64ddcd0bf30168ddf97d4d" translate="yes" xml:space="preserve">
          <source>0. The Application Shell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c6167f3ff400ddeacd4f071e09e35de9165fbb" translate="yes" xml:space="preserve">
          <source>0... 59</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d24c1e9066a9c30823fc418b5c93309bfb3853b" translate="yes" xml:space="preserve">
          <source>0... 9</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4194547c8883da7e8ee6006cd8f8e1ef4b99d0b" translate="yes" xml:space="preserve">
          <source>0.1KB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e46029b347f8d32214508e89f4a369e8802d551" translate="yes" xml:space="preserve">
          <source>0.4KB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74df59d5b024efd129d979a36e61fcaeffe6d99d" translate="yes" xml:space="preserve">
          <source>00, 23</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce90b426291d8352838c1f4f1237db2bec8e0344" translate="yes" xml:space="preserve">
          <source>00... 59</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7116d5e9b8ecb838c1425531adb4201035d4ea" translate="yes" xml:space="preserve">
          <source>00... 99</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39443668f7e9ee9cbadaa88e3b6957fd828c2d5" translate="yes" xml:space="preserve">
          <source>000... 999</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e743d004e04b370e185db323f84180d984bc9f1" translate="yes" xml:space="preserve">
          <source>0002, 0020, 0201, 2017, 20173</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ef6b2e27fff24acacab1d2434af62d7efeb694" translate="yes" xml:space="preserve">
          <source>002, 020, 201, 2017, 20173</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebaf5d2c7058d5d56edf2d0ed45410c353ae16e2" translate="yes" xml:space="preserve">
          <source>01, 12</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e360210f191362d6a1a4421824a35418bbec30b" translate="yes" xml:space="preserve">
          <source>01... 53</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5e7c01cac312a5a2318af0e4ab00a06ee69b90" translate="yes" xml:space="preserve">
          <source>02, 20, 01, 17, 73</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4c026b88a785c112752167b0e39ad6d2b56873" translate="yes" xml:space="preserve">
          <source>08, 59</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c47ac55abcff1f04cd14720361b40518b849534" translate="yes" xml:space="preserve">
          <source>09, 12</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6694a4f6470e70837769b36bf43eaf5ddc940941" translate="yes" xml:space="preserve">
          <source>1 character for &lt;code&gt;en-US&lt;/code&gt;. For example: 'S'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a67d83fa03ded7661b5390c9d072d07b2fe6c41" translate="yes" xml:space="preserve">
          <source>1) &lt;code&gt;&lt;a href=&quot;abstractcontroloptions&quot;&gt;AbstractControlOptions&lt;/a&gt;&lt;/code&gt; object (preferred), which consists of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b315f0efbe638a2ac95d1c0251272bc11710b4db" translate="yes" xml:space="preserve">
          <source>1, 12</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b3e6eaaf00e8b2827ff79eafa10db51e15ab2e" translate="yes" xml:space="preserve">
          <source>1-3 minor releases for each major release</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86cd4572239007254b63d78ea18dd858c8426ae3" translate="yes" xml:space="preserve">
          <source>1. The Hero Editor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0409d939bd9dd7e2c9b334b0d7d6d9d605e89a9" translate="yes" xml:space="preserve">
          <source>1... 5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40d5d5389292f64d6fa15dfc8b13bb780576d36" translate="yes" xml:space="preserve">
          <source>1... 53</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4714d686163abf0fb332134439e02c33f2d985d3" translate="yes" xml:space="preserve">
          <source>1.3KB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ba0791499db908433b80f37c5fbc89b870084b" translate="yes" xml:space="preserve">
          <source>11</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dfedc2e0116a89e95c942d0cdd57fd1c828ad77" translate="yes" xml:space="preserve">
          <source>11, 10, 9 (&quot;compatibility view&quot; mode not supported)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a69e3b67ebb2180c6c474535759b4edca8b8979" translate="yes" xml:space="preserve">
          <source>12 months of &lt;em&gt;long-term support (LTS)&lt;/em&gt;, during which only critical fixes and security patches are released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e01ec95635eef65b94a88bb60491c2b316909fe" translate="yes" xml:space="preserve">
          <source>12%: Percentage of size relative to baseline. (Not valid for baseline values.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275c4e6c028b548b940dba9695c63a949b372f44" translate="yes" xml:space="preserve">
          <source>123 or 123b: Size in bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37eecc59be0bae23d301da90f087c39b5c1dd6c0" translate="yes" xml:space="preserve">
          <source>123kb: Size in kilobytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14299613ebe2db61442d81b702a081012916a626" translate="yes" xml:space="preserve">
          <source>123mb: Size in megabytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfc6db297ab706a6dde3ef9e3c1cd115a87d5fe" translate="yes" xml:space="preserve">
          <source>13.5KB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4bb318970f2245a6bf569cfb87067273779176" translate="yes" xml:space="preserve">
          <source>14.8KB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34274c9930ba079153e31b6b9dea11c17947cc67" translate="yes" xml:space="preserve">
          <source>15 overloads...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6498bd15aa9886259761663b40d9f115db2c8ba" translate="yes" xml:space="preserve">
          <source>17 overloads...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f7dcba5e6bd1b94dbf9b3c6bc0e4e65b191d10d" translate="yes" xml:space="preserve">
          <source>1KB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96f390db06225c926f546b54f48f849e353c6cf" translate="yes" xml:space="preserve">
          <source>2 characters for &lt;code&gt;en-US&lt;/code&gt;, For example: &quot;Su&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa74ee8a16b8bc66d2eabe586f892de61c4f223" translate="yes" xml:space="preserve">
          <source>2 most recent major versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5743fba0666d4cc997b5077e84f04b08f73f01ca" translate="yes" xml:space="preserve">
          <source>2) Legacy configuration object, which consists of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3318edaf1a1289aa4d43287f6bbcb4f986bbe8f4" translate="yes" xml:space="preserve">
          <source>2, 20, 201, 2017, 20173</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e6b09b2ee5af635a586fca69cd9d36345f0e34" translate="yes" xml:space="preserve">
          <source>2-digit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14caa417d57d9712d84cc06095d439a7f505130" translate="yes" xml:space="preserve">
          <source>2. Display a Heroes List</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35249fad6027e3cc46a6dc8252fb3b2178052f1f" translate="yes" xml:space="preserve">
          <source>27.4KB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89120eb623c3c0f77c16adde49525acc8c653133" translate="yes" xml:space="preserve">
          <source>3 characters for &lt;code&gt;en-US&lt;/code&gt;. For example: 'Sun'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9a1d19da905defe08ed5f2146607883c3fd3a5" translate="yes" xml:space="preserve">
          <source>3 overloads...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0bc0f51587fe17d330a5988db6005bc81f12bfc" translate="yes" xml:space="preserve">
          <source>3. Master/Detail Components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a405f03c52e50a767eac85fc4df296b80c6163b0" translate="yes" xml:space="preserve">
          <source>3rd party libraries might implement their hooks as well in order to give developers more control over how these libraries are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c1c1c848d6a9b98e9b795f5d85b5c3424baef2" translate="yes" xml:space="preserve">
          <source>4. Services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0996bd1dc3a23f0c15c35dedab68175adf3e3968" translate="yes" xml:space="preserve">
          <source>4KB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88001b036a01e6e97488eb05f5aea0a783e6de75" translate="yes" xml:space="preserve">
          <source>5. Routing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0617dcd1d02c43e8fc73a5c155a66428cb17cc" translate="yes" xml:space="preserve">
          <source>50 pixels: &lt;code&gt;'50px'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abb01c1a6ac728c08be44b5affc661f50b7047e" translate="yes" xml:space="preserve">
          <source>6 months of &lt;em&gt;active support&lt;/em&gt;, during which regularly-scheduled updates and patches are released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb37d5bfa34fcbe3b6c21945d8e6ee67719cdc3" translate="yes" xml:space="preserve">
          <source>6. HTTP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e7acc1792355a1ec505553c3df078c67673904" translate="yes" xml:space="preserve">
          <source>8, 59</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642dc82a986ccd60d9a3e4de64ce9e9c31b74947" translate="yes" xml:space="preserve">
          <source>9, 12</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed8a49f19081888db48d9ad66d2983200ce2268" translate="yes" xml:space="preserve">
          <source>:enter and :leave aliases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b86a5defb42589cdacc5218eed5e279918cf2e8" translate="yes" xml:space="preserve">
          <source>:host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a50308174b22c7fb696f2e7b878835fcb625235" translate="yes" xml:space="preserve">
          <source>:host-context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cec73409d02a5f4fa1b7f41fd75585c88ad2150" translate="yes" xml:space="preserve">
          <source>:increment and :decrement in transitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6dddaf64cf16d0cea587eefd325043e84c350f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../guide/dependency-injection&quot;&gt;&quot;Dependency Injection Guide&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8fa339a8a8901b6b73151f9ce084bd7ef5a91cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../guide/lifecycle-hooks#onchanges&quot;&gt;Lifecycle Hooks&lt;/a&gt; guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81583fb24c996b4730642a8f23be9c267a025da3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../guide/router&quot;&gt;Routing and Navigation Guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="014e67c8f99cffda83d2c8964c54d1046c5fa264" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../guide/router&quot;&gt;Routing and Navigation&lt;/a&gt; for an overview of how the router service should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fee800045c3edcf896ed20aa24ec4e8c97fdf91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/animations/animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;. (Standard animation support does not require polyfills.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8573b198152e557b075b7cca35e3c6de30c2e6c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/animations/group&quot;&gt;&lt;code&gt;group()&lt;/code&gt;&lt;/a&gt; runs multiple animation steps in parallel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1e5bbcad569e8cbfb7cccce8d190063e7e5d3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/common/ngclass&quot;&gt;NgClass&lt;/a&gt; on SVG elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c834054a3fb097f8173b32d9786bf4ebf5f02cbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/core/app_bootstrap_listener&quot;&gt;APP_BOOTSTRAP_LISTENER&lt;/a&gt;: Callback is invoked for each component that is bootstrapped. The handler function receives the ComponentRef instance of the bootstrapped component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8bc08983ea37037fe4e793ca546e5f098d5f53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/core/app_initializer&quot;&gt;APP_INITIALIZER&lt;/a&gt;: Callback is invoked before an app is initialized. All registered initializers can optionally return a Promise. All initializer functions that return Promises must be resolved before the application is bootstrapped. If one of the initializers fails to resolves, the application is not bootstrapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f28366f7261d9ec518df08a6195ecc04f4a841de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/core/platform_initializer&quot;&gt;PLATFORM_INITIALIZER&lt;/a&gt;: Callback is invoked when a platform is initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299d74d15d48895eb60ed7f48123896143a7f751" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/core/renderertype2&quot;&gt;&lt;code&gt;RendererType2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../api/core/renderer2&quot;&gt;&lt;code&gt;Renderer2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5083f2fd842f8324cc53bdfdf74f14cc574e341" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt; contains two &lt;a href=&quot;../api/router/activatedroute#properties&quot;&gt;properties&lt;/a&gt; that are less capable than their replacements and may be deprecated in a future Angular version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4be41f3f56effcfd94c070e24e8be5596d5c02b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/router/canactivate&quot;&gt;&lt;code&gt;CanActivate&lt;/code&gt;&lt;/a&gt; to mediate navigation &lt;em&gt;to&lt;/em&gt; a route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e9012484c409afc19a9c5c28397276aca30572" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/router/canactivatechild&quot;&gt;&lt;code&gt;CanActivateChild&lt;/code&gt;&lt;/a&gt; to mediate navigation &lt;em&gt;to&lt;/em&gt; a child route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0030140bd17105104bea5963dca6677e89598d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/router/candeactivate&quot;&gt;&lt;code&gt;CanDeactivate&lt;/code&gt;&lt;/a&gt; to mediate navigation &lt;em&gt;away&lt;/em&gt; from the current route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c78b72a556382ef979b8f8e3280089fd298078" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/router/canload&quot;&gt;&lt;code&gt;CanLoad&lt;/code&gt;&lt;/a&gt; to mediate navigation &lt;em&gt;to&lt;/em&gt; a feature module loaded &lt;em&gt;asynchronously&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae906237bfe53f715ce6968dcc69d628ac5c19ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/router/resolve&quot;&gt;&lt;code&gt;Resolve&lt;/code&gt;&lt;/a&gt; to perform route data retrieval &lt;em&gt;before&lt;/em&gt; route activation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48e66e8e926744693eb1317b9b0ff2220dfc664" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../api/router/router#events&quot;&gt;&lt;code&gt;Router.events&lt;/code&gt;&lt;/a&gt; provides events as observables. You can use the &lt;code&gt;&lt;a href=&quot;../api/core/querylist#filter&quot;&gt;filter()&lt;/a&gt;&lt;/code&gt; operator from RxJS to look for events of interest, and subscribe to them in order to make decisions based on the sequence of events in the navigation process. Here's an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9c1d6176cd38403ad97248fcbeb48a65269cd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guide/pipes&quot;&gt;Pipes&lt;/a&gt; are a good way to format strings, currency amounts, dates and other display data. Angular ships with several built-in pipes and you can create your own.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef68472e39dff6414fc1268920a86b23e8dba258" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;animations&quot;&gt;Animations&lt;/a&gt;: Use Angular's animation library to animate component behavior without deep knowledge of animation techniques or CSS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8e0ce43424269b5b712cda94d75bdf8b6f0d8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;aot-compiler&quot;&gt;Ahead-of-Time (AOT) Compilation&lt;/a&gt;: pre-compiles Angular component templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb14d061a328ab5f89a0d91b765fce465f1d12f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;aot-compiler&quot;&gt;Compilation&lt;/a&gt;: Angular provides just-in-time (JIT) compilation for the development environment, and ahead-of-time (AOT) compilation for the production environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7c3de0094819275678d9a912ae284cbf3298fd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;aot-metadata-errors#expression-form-not-supported&quot;&gt;Expression form not supported&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#reference-to-a-local-symbol&quot;&gt;Reference to a local (non-exported) symbol&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#only-initialized-variables&quot;&gt;Only initialized variables and constants&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#reference-to-a-non-exported-class&quot;&gt;Reference to a non-exported class&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#reference-to-a-non-exported-function&quot;&gt;Reference to a non-exported function&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#function-calls-not-supported&quot;&gt;Function calls are not supported&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#destructured-variable-not-supported&quot;&gt;Destructured variable or constant not supported&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#could-not-resolve-type&quot;&gt;Could not resolve type&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#name-expected&quot;&gt;Name expected&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#unsupported-enum-member-name&quot;&gt;Unsupported enum member name&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#tagged-template-expressions-not-supported&quot;&gt;Tagged template expressions are not supported&lt;/a&gt;&lt;a href=&quot;aot-metadata-errors#symbol-reference-expected&quot;&gt;Symbol reference expected&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5d6f214bd4347a298f7d37b98f9a1d189a25b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;applicationref#is-stable-examples&quot;&gt;Usage notes&lt;/a&gt; for examples and caveats when using this API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edfa6228eeb428f9ac0ed66e15bdbf235e8f212f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attribute-directives#apply-directive&quot;&gt;Apply the directive&lt;/a&gt; to an element in a template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327abf8f348f2f3a3cd2a8a639673e9afd621b7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attribute-directives#bindings&quot;&gt;&lt;strong&gt;Bind&lt;/strong&gt; values to the directive&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2318173d9b76b60acb3e375c9b608569dc5c3b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attribute-directives#respond-to-user&quot;&gt;Respond to &lt;strong&gt;events&lt;/strong&gt;&lt;/a&gt; that change the directive's behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13bc96a7398a8f42fbeafb0ac2ca5f8d3c1f678" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attribute-directives#write-directive&quot;&gt;Build an &lt;strong&gt;attribute directive&lt;/strong&gt;&lt;/a&gt; that modifies the behavior of an element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68c4837bb8f15b45ff7eb9ac94b4bfdde0cf21d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bootstrapping&quot;&gt;Bootstrapping&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce646448fc20682bbed1e4cb01065df6bfce3222" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;browser-support&quot;&gt;Browser support&lt;/a&gt;: Make your apps compatible across a wide range of browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6174a6656d781663053900ee71e383009fe86863" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;build&quot;&gt;Building and Serving&lt;/a&gt;: Learn to define different build and proxy server configurations for your project, such as development, staging, and production.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb56ab0cbb3a3d12c65b61691f0321baed53df64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;build&quot;&gt;Building and serving&lt;/a&gt; describes how packages come together to create a development build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a179bb603888e1cfcdd6e2f03e4c5d1c207c2a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cli&quot;&gt;CLI Command Reference&lt;/a&gt;: The Angular CLI is a command-line tool that you use to create projects, generate application and library code, and perform a variety of ongoing development tasks such as testing, bundling, and deployment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a4239375b78a6c9540414e6798519eede89c88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dependency-injection-in-action&quot;&gt;Dependency Injection in Action&lt;/a&gt; is a cookbook for some of the interesting things you can do with DI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10043de7f9799fe38c325824ad34aead11e765f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dependency-injection-navtree#parent-token&quot;&gt;Parent&lt;/a&gt; is the provider's class interface token. The &lt;a href=&quot;dependency-injection-in-action#forwardref&quot;&gt;&lt;em&gt;forwardRef&lt;/em&gt;&lt;/a&gt; breaks the circular reference you just created by having the &lt;code&gt;AlexComponent&lt;/code&gt; refer to itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21087d6adb12bd5cb78976f2386ffd902c19d5ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dependency-injection-providers#tree-shakable-providers&quot;&gt;Tree-shakable Providers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39633768d44e649aeeb1c40470f8f53135e87044" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;deployment&quot;&gt;Deployment&lt;/a&gt; describes how packages come together to create a production build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ffbc267457898a8f367bdab8c5a728c78a86a4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;deployment&quot;&gt;Deployment&lt;/a&gt;: Learn techniques for deploying your Angular application to a remote server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3189e89f23191818f9a6d6b93463c0e8871ed1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;deployment#enable-prod-mode&quot;&gt;Production mode&lt;/a&gt;: deploys the production environment which enables &lt;em&gt;production mode&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db6871aed0fef74eb8b726cf3dd9307794b4ae8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;displaying-data#ngFor&quot;&gt;&lt;code&gt;*ngFor&lt;/code&gt;&lt;/a&gt; is an iterative; it tells Angular to stamp out one &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; per hero in the &lt;code&gt;heroes&lt;/code&gt; list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873b0cb15ccb12957e5405f0ea6d29fc170717a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;displaying-data#ngIf&quot;&gt;&lt;code&gt;*ngIf&lt;/code&gt;&lt;/a&gt; is a conditional; it includes the &lt;code&gt;HeroDetail&lt;/code&gt; component only if a selected hero exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8476247529ce38d9bc6fbedf91f7fbb9dfbe43e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;entry-components&quot;&gt;Entry Components&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f366f34b15d4450107593ffa19d1ebf4d825dc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;feature-modules&quot;&gt;Feature Modules&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503bb4c2b562c476d9bdc4a539ef72689bd3b7d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;file-structure&quot;&gt;Workspace and File Structure&lt;/a&gt;: Understand the structure of Angular workspace and project folders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f7dcfc50789eefb9ceb5fe63f39961c26daa56f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;forms&quot;&gt;Forms&lt;/a&gt;: Support complex data entry scenarios with HTML-based validation and dirty checking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2516249ead30e928946a383ad53f1f2b0a2f7b6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;frequent-ngmodules&quot;&gt;Frequently used modules&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f834a2d41be562f21a41430d3148b9a91bb4e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;glossary#A&quot;&gt;A&lt;/a&gt;&lt;a href=&quot;glossary#B&quot;&gt;B&lt;/a&gt;&lt;a href=&quot;glossary#C&quot;&gt;C&lt;/a&gt;&lt;a href=&quot;glossary#D&quot;&gt;D&lt;/a&gt;&lt;a href=&quot;glossary#E&quot;&gt;E&lt;/a&gt;&lt;a href=&quot;glossary#F&quot;&gt;F&lt;/a&gt;&lt;a href=&quot;glossary#G&quot;&gt;G&lt;/a&gt;&lt;a href=&quot;glossary#H&quot;&gt;H&lt;/a&gt;&lt;a href=&quot;glossary#I&quot;&gt;I&lt;/a&gt;&lt;a href=&quot;glossary#J&quot;&gt;J&lt;/a&gt;&lt;a href=&quot;glossary#K&quot;&gt;K&lt;/a&gt;&lt;a href=&quot;glossary#L&quot;&gt;L&lt;/a&gt;&lt;a href=&quot;glossary#M&quot;&gt;M&lt;/a&gt;&lt;a href=&quot;glossary#N&quot;&gt;N&lt;/a&gt;&lt;a href=&quot;glossary#O&quot;&gt;O&lt;/a&gt;&lt;a href=&quot;glossary#P&quot;&gt;P&lt;/a&gt;&lt;a href=&quot;glossary#Q&quot;&gt;Q&lt;/a&gt;&lt;a href=&quot;glossary#R&quot;&gt;R&lt;/a&gt;&lt;a href=&quot;glossary#S&quot;&gt;S&lt;/a&gt;&lt;a href=&quot;glossary#T&quot;&gt;T&lt;/a&gt;&lt;a href=&quot;glossary#U&quot;&gt;U&lt;/a&gt;&lt;a href=&quot;glossary#V&quot;&gt;V&lt;/a&gt;&lt;a href=&quot;glossary#W&quot;&gt;W&lt;/a&gt;&lt;a href=&quot;glossary#X&quot;&gt;X&lt;/a&gt;&lt;a href=&quot;glossary#Y&quot;&gt;Y&lt;/a&gt;&lt;a href=&quot;glossary#Z&quot;&gt;Z&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a008f38ef8754cd716374e3e475e08937807961b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;glossary#attribute-directive&quot;&gt;Attribute directives&lt;/a&gt; modify behavior and appearance of page elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e9b8b562222e2992939ef5af2d0694130ca07d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;glossary#component&quot;&gt;Components&lt;/a&gt; use &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; (an extension of &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt;) to associate a template with a class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb15523b2937ec0c14c57703bb98992d78cfa83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;glossary#data-binding&quot;&gt;Two-way binding&lt;/a&gt; with &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; keeps the component model synchronized with the user's entry into the input elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0275d46150bd064ea050e504a89dcc202de9a38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;glossary#lazy-loading&quot;&gt;Lazy loading&lt;/a&gt; is a technique that defers the loading of required assets and code resources until they are actually used. This reduces startup time and increases efficiency, especially when running different frameworks in the same application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1dd0f0dc39e53bf8d33d62e695c711a2c28baa5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;glossary#library&quot;&gt;Library&lt;/a&gt; developers can create schematics that enable the Angular CLI to add and update their published libraries, and to generate artifacts the library defines. Add these schematics to the npm package that you use to publish and share your library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24fd7b522a028cb9a9d1f13688f4f77777fc894" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;glossary#structural-directive&quot;&gt;Structural directives&lt;/a&gt; modify the structure of the DOM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012b905d0a8a9b31c2b496bafa9975c8a84ca254" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http&quot;&gt;HTTP&lt;/a&gt;: Communicate with a server to get data, save data, and invoke server-side actions with an HTTP client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a528e6e9c3dc3c13058560046e8a97b66eee19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http&quot;&gt;Http&lt;/a&gt; when sending and receiving binary data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd2d480faa29ebcb671e50348117c02a789e51f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codelyzer.com/rules/&quot;&gt;Codelyzer&lt;/a&gt; provides linting rules that can help you make sure your code meets accessibility standards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a490c94a31d4f6753c24253d38b0bb7f1d31a731" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://localhost:4200/&quot;&gt;http://localhost:4200/&lt;/a&gt; &amp;mdash; browse to the app running locally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d9c838aa62cff527ade96335288821e4ed470e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://nginx.org/&quot;&gt;Nginx&lt;/a&gt;: use &lt;code&gt;try_files&lt;/code&gt;, as described in &lt;a href=&quot;https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/#front-controller-pattern-web-apps&quot;&gt;Front Controller Pattern Web Apps&lt;/a&gt;, modified to serve &lt;code&gt;index.html&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5333ebd749f869b42deff87f9d40cf2cca53eeb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://reactivex.io/rxjs/&quot;&gt;RxJS&lt;/a&gt; is a library for composing asynchronous and callback-based code in a &lt;em&gt;functional, reactive style&lt;/em&gt;. Many Angular APIs, including &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;, produce and consume RxJS &lt;code&gt;Observables&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0708db239eb61dd91d851bf057638ac2984d8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/deployment&quot;&gt;Skip ahead to the &quot;Deployment&quot; section&lt;/a&gt; to move to local development, or deploy your app to Firebase or your own server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e1a4e084f127b82fd88cba8823a99b9b17c886" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/routing&quot;&gt;Continue to the &quot;Routing&quot; section&lt;/a&gt; to create a product details page that can be accessed by clicking a product name and that has its own URL pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689a67c05fdef063c183d35a0fa56109dee7633b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/start/data&quot;&gt;Continue to the &quot;Managing Data&quot; section&lt;/a&gt; to add the shopping cart feature, using a service to manage the cart data and using HTTP to retrieve external data for shipping prices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59ff7e8cd67136b432cf19d8936d588fdfe9ce3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/start/deployment&quot;&gt;Continue to the &quot;Deployment&quot; section&lt;/a&gt; to move to local development, or deploy your app to Firebase or your own server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2269d64dcb4a754119ed1212f5b94bd300bc8550" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/start/deployment&quot;&gt;Skip ahead to the &quot;Deployment&quot; section&lt;/a&gt; to move to local development, or deploy your app to Firebase or your own server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a196b2b34e4f0c35e0edd41af80ec9fc69e967" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/start/deployment&quot;&gt;Skip ahead to the Deployment section&lt;/a&gt; to deploy your app to Firebase or move to local development.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b30346ad683c0df172f9edfcb03e1085bc324722" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://angular.io/start/start/forms&quot;&gt;Continue to the &quot;Forms&quot; section&lt;/a&gt; to finish the app by adding the shopping cart page and a form-based checkout feature. You'll create a form to collect user information as part of checkout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29bbaccd61d4a682bae9cb389589a2b77320c4e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;Web Workers&lt;/a&gt; allow you to run CPU intensive computations in a background thread, freeing the main thread to update the user interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b47b6bf74b5812c636dac2d1c2172abdfc03f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/raw&quot;&gt;&lt;code&gt;String.raw()&lt;/code&gt;&lt;/a&gt; is a &lt;em&gt;tag function&lt;/em&gt; native to JavaScript ES2015.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e2046ebdc0c52c172c977fac8e05478ec42609" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements&quot;&gt;Custom elements&lt;/a&gt; are a Web Platform feature currently supported by Chrome, Firefox, Opera, and Safari, and available in other browsers through polyfills (see &lt;a href=&quot;elements#browser-support&quot;&gt;Browser Support&lt;/a&gt;). A custom element extends HTML by allowing you to define a tag whose content is created and controlled by JavaScript code. The browser maintains a &lt;code&gt;CustomElementRegistry&lt;/code&gt; of defined custom elements, which maps an instantiable JavaScript class to an HTML tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac54a6284ea149d8a94525e8ce6560e2a2992a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;Cross-Site Request Forgery (XSRF)&lt;/a&gt; is an attack technique by which the attacker can trick an authenticated user into unknowingly executing actions on your website. &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; supports a &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery#Cookie-to-Header_Token&quot;&gt;common mechanism&lt;/a&gt; used to prevent XSRF attacks. When performing HTTP requests, an interceptor reads a token from a cookie, by default &lt;code&gt;XSRF-TOKEN&lt;/code&gt;, and sets it as an HTTP header, &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt;. Since only code that runs on your domain could read the cookie, the backend can be certain that the HTTP request came from your client application and not an attacker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f70e95bd25e7dc919a25c0762c9214eef01915" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;Cross-site scripting (XSS)&lt;/a&gt; enables attackers to inject malicious code into web pages. Such code can then, for example, steal user data (in particular, login data) or perform actions to impersonate the user. This is one of the most common attacks on the web.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e64e74221f7d30e0d86948be76d3e988bc48616" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Fragment_identifier&quot;&gt;Fragments&lt;/a&gt; refer to certain elements on the page identified with an &lt;code&gt;id&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ed860c591f09b442494b6abea7d3b3592e0497" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://firebase.google.com/docs/hosting/&quot;&gt;Firebase hosting&lt;/a&gt;: add a &lt;a href=&quot;https://firebase.google.com/docs/hosting/url-redirects-rewrites#section-rewrites&quot;&gt;rewrite rule&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b11894ce4c71c48cc40a36f3f13d07bf63504d1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/angular/quickstart/archive/master.zip&quot;&gt;Download the QuickStart seed&lt;/a&gt; and unzip it into your project folder. Then perform the remaining steps with these terminal commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81012129c89232fbe4276e2ab4985af33b263508" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/fgnass/domino&quot;&gt;Domino&lt;/a&gt;, which is used in server-side rendering, doesn't support &lt;code&gt;innerText&lt;/code&gt;, so in platform-server's &quot;domino adapter&quot;, there was special code to fall back to &lt;code&gt;textContent&lt;/code&gt; if you tried to bind to &lt;code&gt;innerText&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc50b9fbefdc84768ebc724674877ac105e4f298" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://golang.org/&quot;&gt;Golang&lt;/a&gt;: create a Golang server using (&lt;a href=&quot;https://github.com/gorilla/mux&quot;&gt;gorilla/mux&lt;/a&gt;) with a basic Golang file that configures the server &lt;code&gt;main.go&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884e13675b53054a90e03b9c2f764ee2e2a00d7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://httpd.apache.org/&quot;&gt;Apache&lt;/a&gt;: add a &lt;a href=&quot;http://httpd.apache.org/docs/current/mod/mod_rewrite.html&quot;&gt;rewrite rule&lt;/a&gt; to the &lt;code&gt;.htaccess&lt;/code&gt; file as shown (&lt;a href=&quot;https://ngmilk.rocks/2015/03/09/angularjs-html5-mode-or-pretty-urls-on-apache-using-htaccess/&quot;&gt;https://ngmilk.rocks/2015/03/09/angularjs-html5-mode-or-pretty-urls-on-apache-using-htaccess/&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c20e7e73b679f118286f6116001760a1e305fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://material.angular.io/&quot;&gt;Angular Material&lt;/a&gt; offers an extensive library of Material Design components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2dd13277dda02d85d59b6c1ece62d7a4bc089d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;: you can't &lt;a href=&quot;https://github.com/isaacs/github/issues/408&quot;&gt;directly configure&lt;/a&gt; the GitHub Pages server, but you can add a 404 page. Copy &lt;code&gt;index.html&lt;/code&gt; into &lt;code&gt;404.html&lt;/code&gt;. It will still be served as the 404 response, but the browser will process that page and load the app properly. It's also a good idea to &lt;a href=&quot;https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/#publishing-your-github-pages-site-from-a-docs-folder-on-your-master-branch&quot;&gt;serve from &lt;code&gt;docs/&lt;/code&gt; on master&lt;/a&gt; and to &lt;a href=&quot;https://www.bennadel.com/blog/3181-including-node-modules-and-vendors-folders-in-your-github-pages-site.htm&quot;&gt;create a &lt;code&gt;.nojekyll&lt;/code&gt; file&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ae4cf44a70eb9ece2606087c21c356df6a0c2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://protractor.angular.io/&quot;&gt;Angular Protractor&lt;/a&gt; offers an end-to-end testing framework for Angular apps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2474af262463a1f1584e4b5b8d56ff513ff65f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://web.dev/accessible-angular-with-codelyzer/&quot;&gt;Audit your Angular app's accessibility with codelyzer&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e12c2cbfa95739e6ea296eb368a107a5671b83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.iis.net/&quot;&gt;IIS&lt;/a&gt;: add a rewrite rule to &lt;code&gt;web.config&lt;/code&gt;, similar to the one shown &lt;a href=&quot;http://stackoverflow.com/a/26152011/2116927&quot;&gt;here&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb95f352ba40b1a6db688cf30f2add38817c23ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; configuration for the application tests. See &lt;a href=&quot;typescript-configuration&quot;&gt;TypeScript Configuration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52785f1e9e65b0406a87730482df36132fbe70c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; configuration for the library tests. See &lt;a href=&quot;typescript-configuration&quot;&gt;TypeScript Configuration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44d25ff2fc71a0a66fb431a38b5bc1cacaa1e89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/tsconfig-json.html&quot;&gt;TypeScript configuration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563e4f57ffcb0ce3f3e311b8d28e3829e8f0befe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.youtube.com/watch?v=kW9cJsvcsGo&quot;&gt;Watch compiler author Tobias Bosch explain the Angular compiler&lt;/a&gt; at AngularConnect 2016.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18312434cf04457d54583c04d7be3ec18f37c111" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;i18n&quot;&gt;Internationalization&lt;/a&gt;: Make your app available in multiple languages with Angular's internationalization (i18n) tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406d7a962508d8a0a0a49859d913408903701904" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;Lazy Loading Modules with the Angular Router&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cdd4614090735af9c3f4224542dc4055cd7ddc6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;Lazy Loading Modules&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="676bcd93d0a3a11fa1c6db1aab235fc4cdee5473" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;lifecycle-hooks&quot;&gt;Lifecycle hooks&lt;/a&gt;: Tap into key moments in the lifetime of a component, from its creation to its destruction, by implementing the lifecycle hook interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe3291c6dfb10f45e6dc765d3170b2651211545" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;module-types&quot;&gt;Types of Feature Modules&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8504f1b6186a88c1b757a9b8233eeeec0aaf717e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;module-types&quot;&gt;Types of NgModules&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1a3b4b050d05d52ad2badc20dc91f23d9f5547" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ngmodule-faq&quot;&gt;NgModule FAQ&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33aec4977fd8a9055ba7b62a6e209902d447fc0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ngmodule-faq&quot;&gt;NgModules FAQ&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7396d8059153d1cc90a2525644b01abe772f2e04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ngmodule-faq#q-reexport&quot;&gt;Re-export&lt;/a&gt; makes module transitivity explicit. If Module 'A' re-exports &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; and Module 'B' imports Module 'A', Module 'B' components can use &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; even though 'B' itself didn't import &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289c9c06fc0851d19dd1d3a95ef797a278ab7287" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ngmodule-faq#q-root-component-or-module&quot;&gt;Always register &lt;em&gt;application-wide&lt;/em&gt; services with the root &lt;code&gt;AppModule&lt;/code&gt;&lt;/a&gt;, not the root &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60df7be8e2262f58d695d3d14ccbec8769b48b17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ngmodule-vs-jsmodule&quot;&gt;JavaScript Modules vs. NgModules&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc79f560242af18e219593beb47fa51034529ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ngmodules&quot;&gt;NgModules&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c03a49bb08e1fdf0d69105d07a855a275d479c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;npm-packages&quot;&gt;npm Packages&lt;/a&gt;: The Angular Framework, Angular CLI, and components used by Angular applications are packaged as &lt;a href=&quot;https://docs.npmjs.com/&quot;&gt;npm&lt;/a&gt; packages and distributed via the npm registry. The Angular CLI creates a default &lt;code&gt;package.json&lt;/code&gt; file, which specifies a starter set of packages that work well together and jointly support many common application scenarios.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6136ba0f7ab0f8ff39277bfe2092d86838b39db9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;npm-packages#angular-packages&quot;&gt;&lt;strong&gt;Angular packages&lt;/strong&gt;&lt;/a&gt;: Angular core and optional modules; their package names begin &lt;code&gt;@angular/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71c244f07e09d82292dc92bb3cb182590db5cd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;npm-packages#dependencies&quot;&gt;Dependencies&lt;/a&gt; are essential to &lt;em&gt;running&lt;/em&gt; applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af9a60a7ab9f3e1910c02f6d55142329c6714ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;npm-packages#dev-dependencies&quot;&gt;DevDependencies&lt;/a&gt; are only necessary to &lt;em&gt;develop&lt;/em&gt; applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6599252d350b6aa09903cc06891188565994af05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;npm-packages#polyfills&quot;&gt;&lt;strong&gt;Polyfill packages&lt;/strong&gt;&lt;/a&gt;: Polyfills plug gaps in a browser's JavaScript implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12350411c789fe81001c9b846f88e3b5bb6b6cd2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;npm-packages#support-packages&quot;&gt;&lt;strong&gt;Support packages&lt;/strong&gt;&lt;/a&gt;: 3rd party libraries that must be present for Angular apps to run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6990f3be7cad53718e427eed9f80186fe7fb7958" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;observables&quot;&gt;Observables and event processing&lt;/a&gt;: How to use observables with components and services to publish and subscribe to messages of any type, such as user-interaction events and asynchronous operation results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f11ab708e85200043ffcf35803f4a4ef66d82b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;providers&quot;&gt;Providers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae55e9a01c6e3d1f79097b2bc4e29edf2cc7f00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;releases#versioning&quot;&gt;Angular Versioning and Releases&lt;/a&gt; describes the level of change that you can expect based a release's version number. It also describes supported update paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d67250f40f2acb9478b566e9898b4166d758c70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt; when using &lt;a href=&quot;router#appendix-locationstrategy-and-browser-url-styles&quot;&gt;hash-based routing&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7864666c0f5634cca853c4eda0430b6e83d2094c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;router&quot;&gt;Routing and Navigation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9ac18f71b5fd4b4d4cca2b133628c2e857202f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;security&quot;&gt;Security guidelines&lt;/a&gt;: Learn about Angular's built-in protections against common web-app vulnerabilities and attacks such as cross-site scripting attacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0cf59eef40529551dde50fb2b75e0d4ccc0e55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;service-worker-communications&quot;&gt;Communicating with service workers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31ed292ba2f7d16618f69f9b907ceaaaef52d39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;service-worker-communications&quot;&gt;Service Worker Communication&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0190a4bb7d780c19467a905a93502d1ddeb0343" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;service-worker-config&quot;&gt;Service Worker Configuration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c25ab6c23c5b43a04ea66186fb5ae5821717927" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;service-worker-devops&quot;&gt;Service Worker in Production&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e98022b284274c8d4411388102ad633a44e04943" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;service-worker-getting-started&quot;&gt;Getting Started with Service Workers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745c1063b20a1f964dbb97ea774091c0778de3eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;service-worker-intro&quot;&gt;Service Workers&lt;/a&gt;: Use a service worker to reduce dependency on the network significantly improving the user experience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b80aaf171346ddd6cfb4f3ba23cec88ba9d330" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sharing-ngmodules&quot;&gt;Sharing Modules&lt;/a&gt;, which elaborates on the concepts covered on this page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cad0d8922aef4307cfca5faa4eea387fb79eb1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;singleton-services&quot;&gt;Singleton Services&lt;/a&gt;, which elaborates on the concepts covered on this page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a9d4e23669ba4a96b3b12eaa59df34a5da3091" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;template-syntax#ngClass&quot;&gt;&lt;code&gt;NgClass&lt;/code&gt;&lt;/a&gt;&amp;mdash;adds and removes a set of CSS classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e53659b9d00c9421af85d1aa856fb44971db633" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;template-syntax#ngFor&quot;&gt;&lt;code&gt;NgFor&lt;/code&gt;&lt;/a&gt;&amp;mdash;repeat a node for each item in a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224bf2d91e9f1bec7d0139d20782d5aaca524d52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;template-syntax#ngIf&quot;&gt;&lt;code&gt;NgIf&lt;/code&gt;&lt;/a&gt;&amp;mdash;conditionally creates or destroys subviews from the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf68a84f627bea6877403337a58b6f648b7d58c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;template-syntax#ngModel&quot;&gt;&lt;code&gt;NgModel&lt;/code&gt;&lt;/a&gt;&amp;mdash;adds two-way data binding to an HTML form element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fcb617321c4bc14cfad94d88a019eeaa5d588e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;template-syntax#ngStyle&quot;&gt;&lt;code&gt;NgStyle&lt;/code&gt;&lt;/a&gt;&amp;mdash;adds and removes a set of HTML styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17be61e362d9c8c3f1d0ef99793474177be2c73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;template-syntax#ngSwitch&quot;&gt;&lt;code&gt;NgSwitch&lt;/code&gt;&lt;/a&gt;&amp;mdash;a set of directives that switch among alternative views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e9adac5d9f54a0682c824ea3e6932319935eb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;testing&quot;&gt;Testing platform&lt;/a&gt;: Run unit tests on your application parts as they interact with the Angular framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c311ee4f65a545ab767e4db7fcc7012241021714" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;typescript-configuration&quot;&gt;TypeScript configuration&lt;/a&gt;: TypeScript is the primary language for Angular application development.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ca60a89f6d1fbd40c0143c1804a15c47481c3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;typescript-configuration#tsconfig&quot;&gt;tsconfig.json&lt;/a&gt;&amp;mdash;TypeScript compiler configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb47bde2e932892f7a5ff9a839eef276319723b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;typescript-configuration#typings&quot;&gt;typings&lt;/a&gt;&amp;mdash;TypesScript declaration files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc89ce31f7e0691030da999e220204ded70ffcaf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;universal&quot;&gt;Server-side Rendering&lt;/a&gt;: Angular Universal generates static application pages on the server through server-side rendering (SSR). This allows you to run your Angular app on the server in order to improve performance and show the first page quickly on mobile and low-powered devices, and also facilitate web crawlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac52eb7e615e1132e4c7515adbbe99a3aebdb0cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;upgrade#making-angular-dependencies-injectable-to-angularjs&quot;&gt;Making Angular Dependencies Injectable to AngularJS&lt;/a&gt;. &lt;em&gt;NOTE: If you are downgrading multiple modules, you need to specify the name of the downgraded module each injectable belongs to, when calling &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;()&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56500e3adac93b17c38cb29ec0cb166fb34eae4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;upgrade#making-angularjs-dependencies-injectable-to-angular&quot;&gt;Making AngularJS Dependencies Injectable to Angular&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e07bc685278a9d9a470e7d263db94d81ed7eab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;upgrade#projecting-angularjs-content-into-angular-components&quot;&gt;Projecting AngularJS Content into Angular Components&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0e82db5161cd2b9be5cc2919b3fb4a014597df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;upgrade#transcluding-angular-content-into-angularjs-component-directives&quot;&gt;Transcluding Angular Content into AngularJS Component Directives&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cfac725eb791f4869d28a852726875ca336cd85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;upgrade#using-angular-components-from-angularjs-code&quot;&gt;Using Angular Components from AngularJS Code&lt;/a&gt;. &lt;em&gt;NOTE: If you are downgrading multiple modules, you need to specify the name of the downgraded module each component belongs to, when calling &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;()&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b20b0ba5f4af641907f060c2e1e223ee03b8cce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;upgrade#using-angularjs-component-directives-from-angular-code&quot;&gt;Using AngularJS Component Directives from Angular Code&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9eefb5bb5483152fe22fb75b988d8ddedfc257" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;i&gt;Link parameters array&lt;/i&gt;&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07aa4df86bb3a59ccd6a32ea0c59b0b861a6dfc8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;i&gt;Routing component&lt;/i&gt;&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc096abf022b3e0bf250788b3ae5f37f95f68078" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Content-rich applications&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8c5a5bd70ac3f83354f817f3a31df706856901" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Definitions:&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebc9bc50d8714000ac7281f1c2c5e9f08e7be7c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Easy dynamic content in an Angular app&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d6a8b1310f1064e77dd425a5baa78d8744c89a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Important:&lt;/b&gt; The characters &lt;code&gt;.&lt;/code&gt;&lt;code&gt;,&lt;/code&gt;&lt;code&gt;0&lt;/code&gt;&lt;code&gt;#&lt;/code&gt; (and others below) are special placeholders that stand for the decimal separator, and so on, and are NOT real characters. You must NOT &quot;translate&quot; the placeholders. For example, don't change &lt;code&gt;.&lt;/code&gt; to &lt;code&gt;,&lt;/code&gt; even though in your language the decimal point is written with a comma. The symbols should be replaced by the local equivalents, using the appropriate &lt;code&gt;&lt;a href=&quot;numbersymbol&quot;&gt;NumberSymbol&lt;/a&gt;&lt;/code&gt; for your language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa1b0fb57aebdf9db7c088f57d84b699c7e613b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;template reference&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a2b342809ebf174f21b9bb8b098a40720c37f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!/**/*.map&lt;/code&gt; exclude all sourcemaps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f096d53b6c2253adf945490a3d9739887867ee4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#name=&quot;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&quot;&lt;/code&gt; exports &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; into a local variable called &lt;code&gt;name&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; mirrors many of the properties of its underlying &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance, so you can use this in the template to check for control states such as &lt;code&gt;valid&lt;/code&gt; and &lt;code&gt;dirty&lt;/code&gt;. For a full list of control properties, see the &lt;a href=&quot;../api/forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt; API reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0932a1ac0eab10385e5ea5373aa9aa3eabf6498d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$event&lt;/code&gt; and event handling statements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5f5e68b5abcf0caec77963bdd2fd955e0442fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$implicit: T&lt;/code&gt;: The value of the individual items in the iterable (&lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;ngForOf&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aaaba15641048c99b47e564c041a8fdda7744a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;div &lt;b&gt;[ngStyle]&lt;/b&gt;=&quot;{'property': 'value'}&quot;&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;div &lt;b&gt;[ngStyle]&lt;/b&gt;=&quot;dynamicStyles()&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7008e3d194f46e9d62fab7d157d8f52e909f80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; is the host element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686c790a0aa440a5bc90ce1ffac9d143ba9b819e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;template&lt;/code&gt;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3794ddaf1be97f7c035cb69e27a1214703b5a588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;a href=&quot;../core/version#full&quot;&gt;full&lt;/a&gt;'&lt;/code&gt;: equivalent to &lt;code&gt;'EEEE, MMMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; zzzz'&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;weekday#Monday&quot;&gt;Monday&lt;/a&gt;, June 15, 2015 at 9:03:01 AM GMT+01:00&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c9c3fc600cc3c128168731689fdf4de6303a88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;a href=&quot;urlserializer&quot;&gt;UrlSerializer&lt;/a&gt;'&lt;/code&gt; - UrlSerializer that&amp;rsquo;s configured with the router.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3962d7b9fd4b767897236d047a134c5ea8c4696" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'URIError'&lt;/code&gt; - Error thrown when parsing a bad URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c79a177e5863f1c4cb1d5d4e6e4fed8fe997457" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'always'&lt;/code&gt; : Inherit parent parameters, data, and resolved data for all child routes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca72adaa4fd68ab37c9c844d9d27690d93850a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'emptyOnly'&lt;/code&gt; : Inherit parent parameters, data, and resolved data for path-less or component-less routes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00e510463f41a9a01f8be681830b452ce0596aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'fullDate'&lt;/code&gt;: equivalent to &lt;code&gt;'EEEE, MMMM d, y'&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;weekday#Monday&quot;&gt;Monday&lt;/a&gt;, June 15, 2015&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fff836b794a1f71f68fdb4fb66ec9e13ac03827" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'fullDate'&lt;/code&gt;: equivalent to &lt;code&gt;'yMMMMEEEEd'&lt;/code&gt; (e.g. &lt;code&gt;&lt;a href=&quot;weekday#Friday&quot;&gt;Friday&lt;/a&gt;, September 3, 2010&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd99c4ad278021c0633c452ef2f1fdf890d3ba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'fullTime'&lt;/code&gt;: equivalent to &lt;code&gt;'h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; zzzz'&lt;/code&gt; (&lt;code&gt;9:03:01 AM GMT+01:00&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f9dbc5a865e0963c61d30ea9085b8d23adc94f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'ignore'&lt;/code&gt; : The router ignores the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d7879b351c35637b1ae413a68d1aeaf3370368" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'long'&lt;/code&gt;: equivalent to &lt;code&gt;'MMMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; z'&lt;/code&gt; (&lt;code&gt;June 15, 2015 at 9:03:01 AM GMT+1&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788ca79109eae611761a7bc664533d3ca9f30859" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'longDate'&lt;/code&gt;: equivalent to &lt;code&gt;'MMMM d, y'&lt;/code&gt; (&lt;code&gt;June 15, 2015&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8042cc768188f93b931e11d226e294683607bcbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'longDate'&lt;/code&gt;: equivalent to &lt;code&gt;'yMMMMd'&lt;/code&gt; (e.g. &lt;code&gt;September 3, 2010&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34eaa339f0b2309477bacd7a9f01e2a4190143a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'longTime'&lt;/code&gt;: equivalent to &lt;code&gt;'h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; z'&lt;/code&gt; (&lt;code&gt;9:03:01 AM GMT+1&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="708e5ddb98c01d161e4d4dace6dd96796100924f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'medium'&lt;/code&gt;: equivalent to &lt;code&gt;'MMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;'&lt;/code&gt; (&lt;code&gt;Jun 15, 2015, 9:03:01 AM&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36d928c9a84885299b19bc4a64c04f558a38921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'medium'&lt;/code&gt;: equivalent to &lt;code&gt;'yMMMdjms'&lt;/code&gt; (e.g. &lt;code&gt;Sep 3, 2010, 12:05:08 PM&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d769d80b29a9677d777168169eb271a84ae7690" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mediumDate'&lt;/code&gt;: equivalent to &lt;code&gt;'MMM d, y'&lt;/code&gt; (&lt;code&gt;Jun 15, 2015&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94fd42f22b1ea07eea6339ecf8fbab4194bbb6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mediumDate'&lt;/code&gt;: equivalent to &lt;code&gt;'yMMMd'&lt;/code&gt; (e.g. &lt;code&gt;Sep 3, 2010&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0899c698e9cf6869cbdb38023669e55e29dab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mediumTime'&lt;/code&gt;: equivalent to &lt;code&gt;'h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;'&lt;/code&gt; (&lt;code&gt;9:03:01 AM&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b7ccb273106b2f89cff8c932d4a4109e1483c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mediumTime'&lt;/code&gt;: equivalent to &lt;code&gt;'jms'&lt;/code&gt; (e.g. &lt;code&gt;12:05:08 PM&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f94d441cdcc1b7761abe92e0feee2f77f56aad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'merge'&lt;/code&gt;: merge the queryParams into the current queryParams</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10377b55e280138a1622e66dade5ccc302a9c302" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'preserve'&lt;/code&gt;: preserve the current queryParams</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6cfc1fbda1399d8abcac30fe018fcd33ac7aff4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'reload'&lt;/code&gt; : The router reloads the URL. Use to implement a &quot;refresh&quot; feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c6f247b33faf30fc477cfaa3e9d2b237c2b6e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'short'&lt;/code&gt;: equivalent to &lt;code&gt;'M/d/yy, h:mm &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;'&lt;/code&gt; (&lt;code&gt;6/15/15, 9:03 AM&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3413770f7714441078e942fc208d161c0c7390" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'short'&lt;/code&gt;: equivalent to &lt;code&gt;'yMdjm'&lt;/code&gt; (e.g. &lt;code&gt;9/3/2010, 12:05 PM&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c2ab185113aede9e7518865a34659f043e864c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'shortDate'&lt;/code&gt;: equivalent to &lt;code&gt;'M/d/yy'&lt;/code&gt; (&lt;code&gt;6/15/15&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e082e28d697a7715bf7650b9e18a35f6f8ae7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'shortDate'&lt;/code&gt;: equivalent to &lt;code&gt;'yMd'&lt;/code&gt; (e.g. &lt;code&gt;9/3/2010&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804652815182c13a05a6defa25fd92102343f520" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'shortTime'&lt;/code&gt;: equivalent to &lt;code&gt;'h:mm &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;'&lt;/code&gt; (&lt;code&gt;9:03 AM&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48866985fe63a44e6e009ab38955f072c9dcff81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'shortTime'&lt;/code&gt;: equivalent to &lt;code&gt;'jm'&lt;/code&gt; (e.g. &lt;code&gt;12:05 PM&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51bd365cc081a85763afcb8e46f32fb04fa89c90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'url'&lt;/code&gt; - The malformed URL that caused the URIError</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7616cb07734fb1653cd1384af5639e3701edc96a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;() =&amp;gt; void&lt;/code&gt;: An &quot;unlisten&quot; function for disposing of this handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8165dab95db5eb9ed28019654d2a31e9ee3c521b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(...args: any[]) =&amp;gt; any&lt;/code&gt;: The function wrapped to be executed in the fakeAsync zone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5f3a7fa354ee8c6694605070f89b70a421f048" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;testing/componentfixture#componentRef&quot;&gt;componentRef&lt;/a&gt;: &lt;a href=&quot;componentref&quot;&gt;ComponentRef&lt;/a&gt;) =&amp;gt; void&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d8cf63753a20d31088272af4bc7c0d13f5bcae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt; | [&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;, &lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;])[]&lt;/code&gt;: The rules for the locale, a single time value or array of &lt;em&gt;from-time, to-time&lt;/em&gt;, or null if no periods are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8102e875e4a10d2ea8e65cb12735cbab95e1f66d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(value: number) =&amp;gt; number&lt;/code&gt;: The plural function for the locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b1011b11b77be1dc3a45f89bfbb34433764a8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;**&lt;/code&gt; matches 0 or more path segments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86fd12bc40e77f589f3b0929878a0ac2ef7666ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; (asterisk) Indicates the default state. You can associate styles with this name to be used as the fallback when the state that is being animated is not declared within the trigger.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d17fd6b84d2dfbc7a52297defdc0b6c9508ceb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; matches 0 or more characters excluding &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edea2f88c69510ffe94a2324adb161eb21607b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;index&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6f2a518fa640a8f545ae8245c351652d2cddd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;a href=&quot;api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; is a &quot;structural directive&quot;. Structural directives shape or reshape the DOM's structure, typically by adding, removing, and manipulating the elements to which they are attached. Any directive with an asterisk, &lt;code&gt;*&lt;/code&gt;, is a structural directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2909ff2da89e11f619cca13bf8fbde77a273927" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--flat&lt;/code&gt; puts the file in &lt;code&gt;src/app&lt;/code&gt; instead of its own folder. &lt;code&gt;--module=app&lt;/code&gt; tells the CLI to register it in the &lt;code&gt;imports&lt;/code&gt; array of the &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f0be98028e0b1785b753b6bdf1efca5c49a844" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--i18nFile&lt;/code&gt;=&lt;em&gt;path to the translation file&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63e10e15d4a74fd848966865371b4cc6205b7be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--i18nFormat&lt;/code&gt;=&lt;em&gt;format of the translation file&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14bfbfee5926f7406f483df9d8e8ce0f8267fa23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--i18nLocale&lt;/code&gt;= &lt;em&gt;locale id&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e15cd84341e492ec50f632e91d26e0b0a65f56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;../&lt;/code&gt; to go up one level in the route path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e6b21e6c5734e1679686779d6722d993f4f11c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;./&lt;/code&gt; or &lt;code&gt;no leading slash&lt;/code&gt; is relative to the current level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ac5c90f54bb9dad26ab7140a1b9a76c14175c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.class&lt;/code&gt;: Select by class name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e113d6dbdba6584c35b28312a121542d7d79d655" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/**/*.html&lt;/code&gt; specifies all HTML files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c4cfd5660a8d942ac6cbbe22cb4891c6d32608" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/*.html&lt;/code&gt; specifies only HTML files in the root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9790461d814a22ff3e68c7a5847e664fc2bad896" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/BUILD.bazel&lt;/code&gt; and &lt;code&gt;/src/BUILD.bazel&lt;/code&gt; tell Bazel about your source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3cf60086070be8ad133ef737acb29e0402ab50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/WORKSPACE&lt;/code&gt; tells Bazel how to download external dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d863cee96733dbc7e94ba0176dfa5f7feb7244ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/angular.json.bak&lt;/code&gt; replaces &lt;code&gt;/angular.json&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406404b28a022d696b0a6d7fe56f07adee250fc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/deep/&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;:ng-deep&lt;/code&gt; component style selectors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="910d5852d89ec2c7ad5105950b6bd557c5aedab2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/deep/&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;::ng-deep&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5aabb6903788e49c570fb7115ea162417fcfc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/my/app/user/123/&lt;/code&gt;&lt;strong&gt;is not&lt;/strong&gt; normalized</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3d65b844176686071676d8dec640b031d75453" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/my/app/user/123&lt;/code&gt; is normalized</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a055061b5c5a3a55fa835d64ce36650ef761ddfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enter&lt;/code&gt; and &lt;code&gt;:leave&lt;/code&gt; are aliases for the &lt;code&gt;void =&amp;gt; *&lt;/code&gt; and &lt;code&gt;* =&amp;gt; void&lt;/code&gt; transitions. These aliases are used by several animation functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2b7a5cd5a46052e6fdabcf3e296a50f034a102" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:not(sub_selector)&lt;/code&gt;: Select only if the element does not match the &lt;code&gt;sub_selector&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f2b7a13ce90f134c436e590d67d8ba0373bb42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; used for providing and configuring Angular's Unified Location Service for upgrading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f9265a5f31621cc2164fdb1443cc279b1862ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../core/ngmodulefactory&quot;&gt;NgModuleFactory&lt;/a&gt;&lt;/code&gt;: If you pass an &lt;code&gt;&lt;a href=&quot;../../core/ngmodulefactory&quot;&gt;NgModuleFactory&lt;/a&gt;&lt;/code&gt;, it will be used to instantiate a module using &lt;code&gt;&lt;a href=&quot;../../platform-browser/platformbrowser&quot;&gt;platformBrowser&lt;/a&gt;&lt;/code&gt;'s &lt;a href=&quot;../../core/platformref#bootstrapModuleFactory&quot;&gt;bootstrapModuleFactory()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03be5df725216c59acc08ae24f10c0feb5f33cf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;(':enter &lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;({ left: '-100%'})&lt;/code&gt; matches the view that is added and hides the newly added view by positioning it to the far left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5981093ea6333760d7bb50c63a8e45563b5319cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; finds one or more inner HTML elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e831343e297a162591488084b35d378c25b8ad1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/animations/sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; runs animation steps one after another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54ee7f2e69466eadee0325a21fa840f1625c9f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/animations/stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; applies a cascading delay to animations for multiple elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad79e9ca80983cf9c63d1d8eedbe960eb3ab906" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;&lt;/code&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee90ae5fabd23c2cccb16955c7d0bb03386c95ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt;&amp;mdash;the &quot;hash URL&quot; style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86447376deb3ac72e4501db04b06491ccd41dc65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; is Angular's mechanism for communicating with a remote server over HTTP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2970ac4a30e4dd07607b3b76cea08bffb54983" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; methods return one value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e732bf13622c573f66c526611569d6b5479dbd86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; returns a string rather than the default JSON because of the &lt;code&gt;&lt;a href=&quot;../api/common/http/httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7438ddf0941285fb62a292852c94f8a1a42972" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; returns response data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbef61b50517d07fbceccb21377e7fafb6abf8a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; returns the body of the response as an untyped JSON object by default. Applying the optional type specifier, &lt;code&gt;&amp;lt;Hero[]&amp;gt;&lt;/code&gt; , gives you a typed result object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4095d14b8e51da1d582b13b1589eb2e0b1d0baa8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; is the simplest structural directive and the easiest to understand. It takes a boolean expression and makes an entire chunk of the DOM appear or disappear.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ade4e4841046521002ff64df76beef3476b7894" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; works differently. When &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, Angular removes the element and its descendants from the DOM. It destroys their components, freeing up resources, which results in a better user experience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1df56aeb460185161a94d8aed5374faa9f97a53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; is actually a set of three, cooperating directives: &lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;NgSwitchDefault&lt;/a&gt;&lt;/code&gt; as in the following example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7772da8375b182bb0e419c62e16d370aa325f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; is the controller directive. Bind it to an expression that returns the &lt;em&gt;switch value&lt;/em&gt;, such as &lt;code&gt;feature&lt;/code&gt;. Though the &lt;code&gt;feature&lt;/code&gt; value in this example is a string, the switch value can be of any type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffb15992e960c5fcb6ee267d7855d22b6c2bd63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; itself is not a structural directive. It's an &lt;em&gt;attribute&lt;/em&gt; directive that controls the behavior of the other two switch directives. That's why you write &lt;code&gt;[&lt;a href=&quot;../api/common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;]&lt;/code&gt;, never &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b09c03e7c242ac0ef45150c3c59d8b3fbc661ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; adds its element to the DOM when its bound value equals the switch value and removes its bound value when it doesn't equal the switch value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dedafe82553dd8acae7b616669ca15824d65b74b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;NgSwitchDefault&lt;/a&gt;&lt;/code&gt;&lt;em&gt;are&lt;/em&gt; structural directives. You attach them to elements using the asterisk (*) prefix notation. An &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; displays its host element when its value matches the switch value. The &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;NgSwitchDefault&lt;/a&gt;&lt;/code&gt; displays its host element when no sibling &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; matches the switch value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659df2cc34db97a6823137d0dd8421f5f4ec67b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;NgSwitchDefault&lt;/a&gt;&lt;/code&gt; adds its element to the DOM when there is no selected &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598f75080de9860d16f147117c7567a52cd45589" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/common/pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt;&amp;mdash;the default &quot;HTML5 pushState&quot; style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a67fa624e99f37fdb779c9899f2ab16fc30d6b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/component#styleUrls&quot;&gt;styleUrls&lt;/a&gt;&lt;/code&gt;&amp;mdash; the location of the component's private CSS styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9dcdfce1217b8a858a272578069ffbd7e6552d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; also has &lt;code&gt;&lt;a href=&quot;../api/core/debugelement#childNodes&quot;&gt;childNodes&lt;/a&gt;&lt;/code&gt;, a list of &lt;code&gt;&lt;a href=&quot;../api/core/debugnode&quot;&gt;DebugNode&lt;/a&gt;&lt;/code&gt; objects. &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; derives from &lt;code&gt;&lt;a href=&quot;../api/core/debugnode&quot;&gt;DebugNode&lt;/a&gt;&lt;/code&gt; objects and there are often more nodes than elements. Testers can usually ignore plain nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be71f43d75dceab126fb3fbbaf60558d36821734" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/debugelement#properties&quot;&gt;DebugElement.properties&lt;/a&gt;&lt;/code&gt; affords access to the artificial custom property that is set by the directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf8744723d0400411e4b0f0a83ce77defce8515" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/debugelement#styles&quot;&gt;DebugElement.styles&lt;/a&gt;&lt;/code&gt; affords access to element styles even in the absence of a real browser, thanks to the &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; abstraction. But feel free to exploit the &lt;code&gt;nativeElement&lt;/code&gt; when that seems easier or more clear than the abstraction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940effa3627a77809314573e15a5b7c230e81b14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt; grants direct access to the host DOM element through its &lt;code&gt;nativeElement&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57972ed1c66ec9d2dd371d65a320a3fc0f2afa82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&amp;lt;string&amp;gt;&lt;/code&gt;&amp;mdash;the &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt;'s type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a568e7e2964ceb719251355f947386e7b29d198" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; and NgModules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5809d8914703bdca48a956dbc08a574c83b2cb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; has these characteristics. You encountered them twice in the &lt;em&gt;Hero of the Month&lt;/em&gt; example, in the &lt;em&gt;title&lt;/em&gt; value provider and in the &lt;em&gt;runnersUp&lt;/em&gt; factory provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f378d5d6b2332a64999aab3ff1741357d4ad06f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt; is the locale of the target language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2710880ae6cc7ae2b08c176aa7a0db29b9b5829" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa86a81d9b4ce3921e761044b74e8c5b0ea78f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; simulates passage of time, which allows you to calculate the difference between dates inside &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e76f03da0e15b6e870578146e3814873f3328a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/translations&quot;&gt;TRANSLATIONS&lt;/a&gt;&lt;/code&gt; is a string containing the content of the translation file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b2d347e3cbd21a3b61683487ce2832b26307dcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/translations_format&quot;&gt;TRANSLATIONS_FORMAT&lt;/a&gt;&lt;/code&gt; is the format of the file: &lt;code&gt;xlf&lt;/code&gt;, &lt;code&gt;xlf2&lt;/code&gt;, or &lt;code&gt;xtb&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0497ebce097065d72153dfa2f80b48c4463e284c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/viewencapsulation#Emulated&quot;&gt;Emulated&lt;/a&gt;&lt;/code&gt; view encapsulation (the default) emulates the behavior of shadow DOM by preprocessing (and renaming) the CSS code to effectively scope the CSS to the component's view. For details, see &lt;a href=&quot;component-styles#inspect-generated-css&quot;&gt;Appendix 1&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096e2b6f9c61f687a09d8d37ec9c4abffaba6f8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/viewencapsulation#Native&quot;&gt;Native&lt;/a&gt;&lt;/code&gt; view encapsulation uses a now deprecated version of the browser's native shadow DOM implementation - &lt;a href=&quot;https://hayato.io/2016/shadowdomv1/&quot;&gt;learn about the changes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7a32edfd9bb7be4a2f1b5a294bcd43d556672a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/viewencapsulation#ShadowDom&quot;&gt;ShadowDom&lt;/a&gt;&lt;/code&gt; view encapsulation only works on browsers that have native support for shadow DOM (see &lt;a href=&quot;https://caniuse.com/#feat=shadowdomv1&quot;&gt;Shadow DOM v1&lt;/a&gt; on the &lt;a href=&quot;http://caniuse.com&quot;&gt;Can I use&lt;/a&gt; site). The support is still limited, which is why &lt;code&gt;&lt;a href=&quot;../api/core/viewencapsulation#Emulated&quot;&gt;Emulated&lt;/a&gt;&lt;/code&gt; view encapsulation is the default mode and recommended in most cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5e9ad84c6b3ad325a3f616c018853d3d56da3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/viewencapsulation#ShadowDom&quot;&gt;ShadowDom&lt;/a&gt;&lt;/code&gt; view encapsulation uses the browser's native shadow DOM implementation (see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM&quot;&gt;Shadow DOM&lt;/a&gt; on the &lt;a href=&quot;https://developer.mozilla.org&quot;&gt;MDN&lt;/a&gt; site) to attach a shadow DOM to the component's host element, and then puts the component view inside that shadow DOM. The component's styles are included within the shadow DOM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361b9798a23f96c4ffaac19d930a954d2336538d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/core/wtfstarttimerange&quot;&gt;wtfStartTimeRange&lt;/a&gt;&lt;/code&gt; and all &lt;code&gt;wtf*&lt;/code&gt; APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ecec69b1b851db70523458fa8002479fa2bac8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; creates a bridge between Angular &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instances and native DOM elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d0da826812121a9557c43cd29242f28bea9fc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; is an alternative to &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; for managing any number of unnamed controls. As with form group instances, you can dynamically insert and remove controls from form array instances, and the form array instance value and validation status is calculated from its child controls. However, you don't need to define a key for each control by name, so this is a great option if you don't know the number of child values in advance. The following example shows you how to manage an array of &lt;em&gt;aliases&lt;/em&gt; in &lt;code&gt;ProfileEditor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c315484ec0d20da9d0ca62f5c6f5411bfa8e5376" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; tracks the same values and status for an array of form controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9313f1945a36085e175c25f16a18ebd7b7931c90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; tracks the value and validation status of an individual form control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0abc067741c7147539b3c8815c4227c97d5107f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/forms/formcontrolname&quot;&gt;formControlName&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;formGroup&lt;/code&gt; are directives defined in &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt;. The templates can access these directives directly since you imported &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62c05b37a0fde297ce1de9460d3fd6abc29315e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; tracks the same values and status for a collection of form controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49dcb289af1c2079857c53a0e8c0299445a36e05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; and friends in the &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; to enable two-way data binding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff558b76ac2ffe77b76bed51ed74984f24f2aff5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; and value accessors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dcf0ea48543891a47bb3776438fb6545b7510c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; also re-exports &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;@angular/common&lt;/code&gt;, which means that components in the &lt;code&gt;AppModule&lt;/code&gt; module also have access to the Angular directives every app needs, such as &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;NgFor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf81ac0a95bede605692a73f0021b0d4461b064d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e08f4d307a789116f4b437a7c3ec691d4bc2aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; imports &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt;, which contributes many common directives such as &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;. Additionally, &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; re-exports &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; making all of its directives available to any module that imports &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db75a5b79ffd1cfd3335894ed66227edce7ed4b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; provides services that are essential to launch and run a browser app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f6d184544a0c398c2c3abdd78b12b3a522aeeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt;s aren't tied to route configuration, so you'll need to update the associated router links so they remain active when the new route is active. You'll update the &lt;code&gt;app.component.ts&lt;/code&gt; template for the &lt;code&gt;/heroes&lt;/code&gt; routerLink.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e89f142e80027e19a333fc6863e2292dccd7748" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; also offers a &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt; static method for configuring the routes of lazy-loaded modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7868f37b403427210bde1607f5b5c862887b8d9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; provides the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; service, as well as router directives, such as &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt;. The root application module imports &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; so that the application has a &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; and the root application components can access the router directives. Any feature modules must also import &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; so that their components can place router directives into their templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26916fe484a4b4870d64ff8e2d78460613de76da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74cb2fde1b220e943bf4fd5f10aa3af96500e0ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt; are conventional names for methods that configure services in root and feature modules respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0e42871c22b7c88c2e070721c3184e9d419a2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc350a2b995195bbd642c797081a2f8c613ce133" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; takes a service configuration object and returns a &lt;a href=&quot;../api/core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;, which is a simple object with the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbbf4abe8bda4ea5d682c643f99b1c014ec416a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/service-worker/swregistrationoptions#scope&quot;&gt;scope&lt;/a&gt;: {}&lt;/code&gt; - an isolate scope. In Angular, components are always isolated from their surroundings, and you should do this in AngularJS too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdca9841e654e46a230c35d6417dcb9e15e1a179" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate&quot;&gt;SwUpdate&lt;/a&gt;&lt;/code&gt; service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1318c9fa08fdc822e34c9fa7b12c0166fa67ce9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt;, on the other side, avoids explicitly triggering change detection unless it knows the other part of the app is interested in the changes. For example, if a downgraded component defines an &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt;, chances are that the app needs to be aware when that value changes. Thus, &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;()&lt;/code&gt; automatically triggers change detection on that component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71300f907d87fd31e9a67cc4e9a73c992f56be6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../core/missingtranslationstrategy#Error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; If the directive does not have a valid parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734fee2b6898269660210e09109a76d5d1e5fefd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../core/missingtranslationstrategy#Error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; When strict checks fail, such as setting the value of a control that doesn't exist or if you exclude a value of a control that does exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b499ccef464c33814bfedce8c7ece31764134b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;&amp;lt;&lt;a href=&quot;browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&amp;gt;&lt;/code&gt;: The reconfigured &lt;code&gt;&lt;a href=&quot;browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; to import into the app's root &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9fe82a6a34a0194b6e596c4409a243250c126d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;&amp;lt;&lt;a href=&quot;routermodule&quot;&gt;RouterModule&lt;/a&gt;&amp;gt;&lt;/code&gt;: The new router module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e5ad5f9f46fde9a480bbb4f322a1b04ce7e845" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; used for providing and configuring Angular's Unified Location Service for upgrading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e324c2fb917e5e843927edf76c92561d78e77ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../service-worker/swregistrationoptions#scope&quot;&gt;scope&lt;/a&gt;&lt;/code&gt; to end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d602dfa6f21688e05a04f00ff35e2feed996ac00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../service-worker/swregistrationoptions#scope&quot;&gt;scope&lt;/a&gt;&lt;/code&gt;: supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb82fa3a588b8be1fea10490f50c88e42cdab691" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;abstractcontroloptions#asyncValidators&quot;&gt;asyncValidators&lt;/a&gt;&lt;/code&gt;: A single async validator or array of async validator functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c74cbe88b4ac5b82a2eb0395fcb7b918293849" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;abstractcontroloptions#validators&quot;&gt;validators&lt;/a&gt;&lt;/code&gt;: A synchronous validator function, or an array of validator functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f25da67f7c9693b8acec59f49fe98399275b66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;activationstart&quot;&gt;ActivationStart&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf21a6727dfa6433bbc8274a839cc417a11a87b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;(&quot;100ms 0.5s&quot;)&lt;/code&gt; : Duration is 100 milliseconds, delay is 500 milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b212c8bcdb851de567a6f62c8bd8e60f1edb83f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;(&quot;1s&quot;)&lt;/code&gt; : Duration is 1000 milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae4390dc741aac436286eb1e945d05069536c28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;(&quot;5s 10ms cubic-bezier(.17,.67,.88,.1)&quot;)&lt;/code&gt; : Duration is 5000 milliseconds, delay is 10 milliseconds, easing according to a bezier curve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad559a0c77a756c47bffce3b05b1b6ec2df1af8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;(&quot;5s ease-in&quot;)&lt;/code&gt; : Duration is 5000 milliseconds, easing in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea1936a5f69a8e59c74a7f35d64f9b3fb81d7a5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;(500)&lt;/code&gt; : Duration is 500 milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b646c1f894dff260430fdf2642df5a9a4ab098" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationanimatechildmetadata&quot;&gt;AnimationAnimateChildMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the child animation data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a078405f7918d2e2f66e3c08dcaa2dde16d0c863" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationanimatemetadata&quot;&gt;AnimationAnimateMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the animation step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3629e0a5a466926d91fa24c11b155b7282d7b287" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationanimaterefmetadata&quot;&gt;AnimationAnimateRefMetadata&lt;/a&gt;&lt;/code&gt;: An object that contains the animation parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144373eb0ee873a21954278fbe147d4fd4bd9867" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationfactory&quot;&gt;AnimationFactory&lt;/a&gt;&lt;/code&gt;: A factory object that can create a player for the defined animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4304094cc6253f1f46122148e5d56bf8941c185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationgroupmetadata&quot;&gt;AnimationGroupMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the group data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89eb3fda127c0d99d6f786794835ab4956a5e3b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationkeyframessequencemetadata&quot;&gt;AnimationKeyframesSequenceMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the keyframes data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35ccee6d3579a3edbe03cf7c3e65010e729dd2ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationquerymetadata&quot;&gt;AnimationQueryMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the query data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34242adfb8eeea4c71a834a5209a67f91ee57f62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationreferencemetadata&quot;&gt;AnimationReferenceMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the animation data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f3e196f47aabb0764424047cdd053fab50adfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationsequencemetadata&quot;&gt;AnimationSequenceMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the sequence data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8880d0b98c486d9d249a6be26fc8e1fa7099a234" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationstaggermetadata&quot;&gt;AnimationStaggerMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the stagger data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06eda7b76225e0bb980d02566919878e855e53d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationstatemetadata&quot;&gt;AnimationStateMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the new state data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a86932f72716b5bd79be200a436ce09500a0e337" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationstylemetadata&quot;&gt;AnimationStyleMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the style data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8a9002405c5aea01f1fc71fb858dd1d64936f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationtransitionmetadata&quot;&gt;AnimationTransitionMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the transition data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa7b5f9840b43d8c80de17795a7be7993d8d1843" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;animationtriggermetadata&quot;&gt;AnimationTriggerMetadata&lt;/a&gt;&lt;/code&gt;: An object that encapsulates the trigger data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a38489a8fdb54a2fa8199852e2b4bd68353c164d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;asyncvalidatorfn&quot;&gt;AsyncValidatorFn&lt;/a&gt; | null&lt;/code&gt;: A validator function that returns an error map with the merged error objects of the async validators if the validation check fails, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f5695c989af97b6cb46a8308c71bc87e9ead1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;changedetectionstrategy&quot;&gt;ChangeDetectionStrategy&lt;/a&gt;#Default&lt;/code&gt; sets the strategy to &lt;code&gt;&lt;a href=&quot;component&quot;&gt;CheckAlways&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a566cf872572fa81743e74d0bcb90a2012ab79f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;changedetectionstrategy&quot;&gt;ChangeDetectionStrategy&lt;/a&gt;#OnPush&lt;/code&gt; sets the strategy to &lt;code&gt;&lt;a href=&quot;component&quot;&gt;CheckOnce&lt;/a&gt;&lt;/code&gt; (on demand).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512e0e935566e436719af2204b1a2f4f518d994a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;childactivationstart&quot;&gt;ChildActivationStart&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbce24a0a742e3d027f32152993c13f908e52cb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;componentref&quot;&gt;ComponentRef&amp;lt;C&amp;gt;&lt;/a&gt;&lt;/code&gt;: The new component instance, containing the host view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e833e17819fe90a04f5590afb447662ebed5adb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;contentchild&quot;&gt;ContentChild&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23020a854f91ac604827402e30919a53d6e028b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;contentchildren&quot;&gt;ContentChildren&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1dd81d178b4d1cf07b5bed658358412b058192" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; requires either an &lt;code&gt;&lt;a href=&quot;../../core/ngmodulefactory&quot;&gt;NgModuleFactory&lt;/a&gt;&lt;/code&gt; or a function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a74438f08a8e812fea83143c3780561bb48885" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; returns the name of the created AngularJS wrapper module. You can use it to declare a dependency in your main AngularJS module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4dba4c71216af240187ba2798d7c620b81624c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt;, on the other side, does not try to tie the two change detection systems as tightly, restricting the explicit change detection runs only to cases where it knows it is necessary (e.g. when the inputs of a downgraded component change). This improves performance, especially in change-detection-heavy applications, but leaves it up to the developer to manually notify each framework as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e37efd1c6f3d00eba7c82757da2256f56893f91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;embeddedviewref&quot;&gt;EmbeddedViewRef&amp;lt;C&amp;gt;&lt;/a&gt;&lt;/code&gt;: The &lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt; instance for the newly created view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc0949d5fd5b81d89dbd731b01d885cb19ed3bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;embeddedviewref&quot;&gt;EmbeddedViewRef&amp;lt;C&amp;gt;&lt;/a&gt;&lt;/code&gt;: The new embedded view object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae3dc770600071411b183bde75730b88ab73dfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; is one of the three fundamental building blocks used to define forms in Angular, along with &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7261e0dfb8f243657b3c4043474cf4a1542ce111" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; is one of the three fundamental building blocks used to define forms in Angular, along with &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b8a80b55192dbb4f59e7c7574219191360cb3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;getlocalenumberformat&quot;&gt;getLocaleNumberFormat&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b55aa18918719697d20db3a2c4fd0e15b46faa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;guardscheckend&quot;&gt;GuardsCheckEnd&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63749d7f5026c97f87e9c6cc3cb57d3f91d748f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;guardscheckstart&quot;&gt;GuardsCheckStart&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a283ca15fe3d3ae058bfcced16ebc3e3fe99fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;httphandler&quot;&gt;HttpHandler&lt;/a&gt;&lt;/code&gt; is injectable. When injected, the handler instance dispatches requests to the first interceptor in the chain, which dispatches to the second, etc, eventually reaching the &lt;code&gt;&lt;a href=&quot;httpbackend&quot;&gt;HttpBackend&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f3cffa8563ca1a5fd5ddbd9c80c0b7d9c7f063" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;httpheaderresponse&quot;&gt;HttpHeaderResponse&lt;/a&gt;&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt; available on the response event stream, only when progress events are requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db4d714fa96ac23fe32fb243d62f7aefa97d5f29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;httpheaders&quot;&gt;HttpHeaders&lt;/a&gt;&lt;/code&gt;: A clone of the HTTP headers object with the given value deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd50b6987c8bd87a3301f5a58724af6029dff2b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;httpheaders&quot;&gt;HttpHeaders&lt;/a&gt;&lt;/code&gt;: A clone of the HTTP headers object with the newly set header value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fbc74438c10b515c6e284298c19fbf4654bcd15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;httpheaders&quot;&gt;HttpHeaders&lt;/a&gt;&lt;/code&gt;: A clone of the HTTP headers object with the value appended to the given header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e9061b271c3d5d20d647a28723d7c6f1a34dd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;httpparams&quot;&gt;HttpParams&lt;/a&gt;&lt;/code&gt;: A new body with the appended value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc737361986d462289f8d117e324fa5699653453" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;httpparams&quot;&gt;HttpParams&lt;/a&gt;&lt;/code&gt;: A new body with the given value removed, or with all values removed if no value is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8392a1bf802eea133f8b5e1a7453c7b10c5f942c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;httpparams&quot;&gt;HttpParams&lt;/a&gt;&lt;/code&gt;: A new body with the new value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c200082c6351776b32d0b8972399e91fa8a274" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; represents an outgoing request, including URL, method, headers, body, and other request configuration options. Instances should be assumed to be immutable. To modify a &lt;code&gt;&lt;a href=&quot;httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;clone&lt;/code&gt; method should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130b568b3a947edd9d5cd27090e123be0e7dec97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt; available on the response event stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da98438d39899a649e24140358e0b1aecf45bcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; is parameterized on &lt;code&gt;T&lt;/code&gt; which is the type of object which will be returned by the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt;. This provides additional level of type safety.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3413092bc8e4d014339d8b0ffbbee34a7f8d2823" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; returns itself when given &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; as a token:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7cd16f219c2e49b6175fc7bf45a893e6bfebb5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;iterablechanges&quot;&gt;IterableChanges&lt;/a&gt;&amp;lt;V&amp;gt; | null&lt;/code&gt;: an object describing the difference. The return value is only valid until the next &lt;code&gt;&lt;a href=&quot;defaultiterablediffer#diff&quot;&gt;diff()&lt;/a&gt;&lt;/code&gt; invocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6908f8551f47ccac5bc169408cca349fb2a4379" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;keyvaluechanges&quot;&gt;KeyValueChanges&lt;/a&gt;&amp;lt;string, V&amp;gt; | null&lt;/code&gt;: an object describing the difference. The return value is only valid until the next &lt;code&gt;&lt;a href=&quot;defaultiterablediffer#diff&quot;&gt;diff()&lt;/a&gt;&lt;/code&gt; invocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbeab4d73c45487df767b481626dca93d3fdd29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; is responsible for normalizing the URL against the application's base href. A normalized URL is absolute from the URL host, includes the application's base href, and has no trailing slash:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f2db92121b6f1bb3951e6bbab5b81e473b88ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;missingtranslationstrategy#Error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; When the &lt;code&gt;notFoundValue&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;injector#THROW_IF_NOT_FOUND&quot;&gt;Injector.THROW_IF_NOT_FOUND&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0dc1f453a816759a02eb855e25a5dec3067b072" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;navigationcancel&quot;&gt;NavigationCancel&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475c287b535f622172020666cbcfa7f9b2caa423" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;navigationend&quot;&gt;NavigationEnd&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a58e70d507c3a16f6fd9663e3cb14271aee57e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;navigationstart&quot;&gt;NavigationStart&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dccea5ec83e99c95ae2fef83db967232b3cc6fdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngcomponentoutlet&quot;&gt;NgComponentOutlet&lt;/a&gt;&lt;/code&gt; requires a component type, if a falsy value is set the view will clear and any existing component will get destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6a2893ca7b14a97670cf240ffd9f180c239812" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngcomponentoutlet#ngComponentOutletContent&quot;&gt;ngComponentOutletContent&lt;/a&gt;&lt;/code&gt;: Optional list of projectable nodes to insert into the content section of the component, if exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa2a737bd072eeaf0b9a955612be2ab041cf8ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngcomponentoutlet#ngComponentOutletInjector&quot;&gt;ngComponentOutletInjector&lt;/a&gt;&lt;/code&gt;: Optional custom &lt;a href=&quot;../core/injector&quot;&gt;&lt;code&gt;Injector&lt;/code&gt;&lt;/a&gt; that will be used as parent for the Component. Defaults to the injector of the current view container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b08267da277f0d727c55a88ae6cdaddf8d1c705" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngcomponentoutlet#ngComponentOutletNgModuleFactory&quot;&gt;ngComponentOutletNgModuleFactory&lt;/a&gt;&lt;/code&gt;: Optional module factory to allow dynamically loading other module, then load a component from that module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec50ce550a6457b22b22e2c3524fa9a39b5af61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngelementconstructor&quot;&gt;NgElementConstructor&amp;lt;P&amp;gt;&lt;/a&gt;&lt;/code&gt;: The custom-element construction class, which can be registered with a browser's &lt;code&gt;CustomElementRegistry&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e61fd503bafc1626207f003a8cbcf3ce52769ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; provides exported values that can be aliased to local variables. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7417f738d7b6f6f9e7ce8e59889cffed7ca4e10c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;ngForOf&lt;/a&gt;: &lt;a href=&quot;../core/ngiterable&quot;&gt;NgIterable&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;: The value of the iterable expression. Useful when the expression is more complex then a property access, for example when using the async pipe (&lt;code&gt;userStreams | async&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a225eff0352ebc2ffccfd419a9f3229fbc813a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngforofcontext#even&quot;&gt;even&lt;/a&gt;: boolean&lt;/code&gt;: True when the item has an even index in the iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7955a657edb2c4ff95de058b10654bf6b858207" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;: boolean&lt;/code&gt;: True when the item has an odd index in the iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdef2e0a8c3d06e033f26d6243297b9e7f4ef3ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ngmoduleref&quot;&gt;NgModuleRef&lt;/a&gt;&lt;/code&gt; provides access to the NgModule Instance as well other objects related to this NgModule Instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635a842763bcb849ebe64cb9464c2e07111e9831" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;parammap&quot;&gt;ParamMap&lt;/a&gt;&lt;/code&gt;: The new map instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86744ae01afb0c4ac4f128b5b417622405f0a57e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;platformconfig#document&quot;&gt;document&lt;/a&gt;&lt;/code&gt; is the full document HTML of the page to render, as a string. &lt;code&gt;url&lt;/code&gt; is the URL for the current render request. &lt;code&gt;extraProviders&lt;/code&gt; are the platform level providers for the current render request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e953e251c09907073215fa0540509f9ea1e07ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;platformlocation&quot;&gt;PlatformLocation&lt;/a&gt;&lt;/code&gt; encapsulates all calls to DOM apis, which allows the Router to be platform agnostic. This means that we can have different implementation of &lt;code&gt;&lt;a href=&quot;platformlocation&quot;&gt;PlatformLocation&lt;/a&gt;&lt;/code&gt; for the different platforms that angular supports. For example, &lt;code&gt;@angular/platform-browser&lt;/code&gt; provides an implementation specific to the browser environment, while &lt;code&gt;@angular/platform-webworker&lt;/code&gt; provides one suitable for use with web workers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf2cfa85f246697ea90501a6269fb9091faff76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;(&quot;:animating&quot;)&lt;/code&gt; : Query all currently animating elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4b191d56391f7aa915ae06df3e873d955f7409" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;(&quot;:enter&quot;)&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;(&quot;:leave&quot;)&lt;/code&gt; : Query for newly inserted/removed elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37996ecc0571ee3e5f3b34a3eeb255428a5ab5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;(&quot;:self&quot;)&lt;/code&gt; : Include the current element into the animation sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa884b82bdbaf9919211e4392ed8cbd9181c15b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;(&quot;@*&quot;)&lt;/code&gt; : Query all elements that contain an animation triggers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb56475f761e4343c2c3d8fa8ba0a8ecc0d67ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;(&quot;@&lt;a href=&quot;animationevent#triggerName&quot;&gt;triggerName&lt;/a&gt;&quot;)&lt;/code&gt; : Query elements that contain an animation trigger.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124b5832b9b8c4142d5b646af66f8d8a60a8f71b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;renderer2&quot;&gt;Renderer2&lt;/a&gt;&lt;/code&gt;: The new custom renderer instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d553367b90296ce21bfdcec132f65b25d3bab2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;resolveend&quot;&gt;ResolveEnd&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07671970b61ea3a3190a161a435b18ca9f896b53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;resolvestart&quot;&gt;ResolveStart&lt;/a&gt;&lt;/code&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc9fc2bfdfe26d1061618d108920925eee43ab42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;resolvestart&quot;&gt;ResolveStart&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc7e79fbfcc312266f26ab88119b8b93a273741" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;resolvestart&quot;&gt;ResolveStart&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4747477fbe17193ac552bb3f9b6e40dbf6669d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;#&lt;a href=&quot;route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0648577339c936f71bff120d6a848bbba962c9b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;#&lt;a href=&quot;route#resolve&quot;&gt;resolve&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72e9cfeff225851ceddb2bd235db1591e4f6fda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa15f92d85306cdf8160fe6c5df7c1517ad94a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;routeconfigloadend&quot;&gt;RouteConfigLoadEnd&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aadb85c6421a02f1d456db43182757b4494a2b5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;routeconfigloadstart&quot;&gt;RouteConfigLoadStart&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9253646390dcb5f14ab9cb0d26c8273ba22510d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;routesrecognized&quot;&gt;RoutesRecognized&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2572a9d42077a643a5eddcc7dbb05990b74d5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; is the primary api for writing unit tests for Angular applications and libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a3e4e80ea686b6c91911426fb4d28ebd7e7c5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;transferstate&quot;&gt;TransferState&lt;/a&gt;&lt;/code&gt; will be available as an injectable token. To use it import &lt;code&gt;&lt;a href=&quot;../platform-server/servertransferstatemodule&quot;&gt;ServerTransferStateModule&lt;/a&gt;&lt;/code&gt; on the server and &lt;code&gt;&lt;a href=&quot;browsertransferstatemodule&quot;&gt;BrowserTransferStateModule&lt;/a&gt;&lt;/code&gt; on the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48517ff6562f7b870208ffe5b667f4532e4d4861" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;upgradeadapterref&quot;&gt;UpgradeAdapterRef&lt;/a&gt;&lt;/code&gt;: an &lt;code&gt;&lt;a href=&quot;upgradeadapterref&quot;&gt;UpgradeAdapterRef&lt;/a&gt;&lt;/code&gt;, which lets you register a &lt;code&gt;&lt;a href=&quot;upgradeadapterref#ready&quot;&gt;ready()&lt;/a&gt;&lt;/code&gt; callback to run assertions once the Angular components are ready to test through AngularJS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78f3a5358e002d1ac9dafdaf3d9da80f2562f78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;: The new URL tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1962e5ff4c5c57ec70f754c1a2f3fcf641364874" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;validationerrors&quot;&gt;ValidationErrors&lt;/a&gt; | null&lt;/code&gt;: A map of validation errors if validation fails, otherwise null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ba81d62351eb182340f3f37b0ddba5d699d28a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;validationerrors&quot;&gt;ValidationErrors&lt;/a&gt; | null&lt;/code&gt;: An error map that contains the &lt;code&gt;required&lt;/code&gt; property set to &lt;code&gt;true&lt;/code&gt; if the validation check fails, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774b5cabbee22d83071b9df7583ae9f92e28528c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;validationerrors&quot;&gt;ValidationErrors&lt;/a&gt; | null&lt;/code&gt;: An error map with the &lt;code&gt;&lt;a href=&quot;emailvalidator&quot;&gt;email&lt;/a&gt;&lt;/code&gt; property if the validation check fails, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c750c12ad870ecddc67df6eb491886efe48a956a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;validationerrors&quot;&gt;ValidationErrors&lt;/a&gt; | null&lt;/code&gt;: An error map with the &lt;code&gt;required&lt;/code&gt; property if the validation check fails, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ce9f923c9148dc34c7ef242acdec4efe90cbd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;validatorfn&quot;&gt;ValidatorFn&lt;/a&gt;&lt;/code&gt;: A validator function that returns an error map with the &lt;code&gt;&lt;a href=&quot;maxlengthvalidator&quot;&gt;maxlength&lt;/a&gt;&lt;/code&gt; property if the validation check fails, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a7063f8ef3a3bd3f11fc8e474841aa4e59a959" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;validatorfn&quot;&gt;ValidatorFn&lt;/a&gt;&lt;/code&gt;: A validator function that returns an error map with the &lt;code&gt;&lt;a href=&quot;minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt; if the validation check fails, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21f5b371702da60ecb769ac9664f177ba288ee9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;validatorfn&quot;&gt;ValidatorFn&lt;/a&gt;&lt;/code&gt;: A validator function that returns an error map with the &lt;code&gt;&lt;a href=&quot;patternvalidator&quot;&gt;pattern&lt;/a&gt;&lt;/code&gt; property if the validation check fails, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e786aa7c1313da1ebce2cd9d8a662800341cb0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;validatorfn&quot;&gt;ValidatorFn&lt;/a&gt;&lt;/code&gt;: A validator function that returns an error map with the &lt;code&gt;max&lt;/code&gt; property if the validation check fails, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac7eeca7c4bc8411ac9009236c2182e7ae43824" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;validatorfn&quot;&gt;ValidatorFn&lt;/a&gt;&lt;/code&gt;: A validator function that returns an error map with the &lt;code&gt;min&lt;/code&gt; property if the validation check fails, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34282c282ef789659d4b54497997829d2206fbeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewchild&quot;&gt;ViewChild&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7568fbdba697738f582cc4de3d3857b5fb856638" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewchildren&quot;&gt;ViewChildren&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccfb1cd4b2704f197599e0f487fa461b3091888" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewencapsulation#Emulated&quot;&gt;Emulated&lt;/a&gt;&lt;/code&gt; (default): Emulate native scoping of styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337a797ddd55c60605b9aa3a7355ff65b3204924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewencapsulation#Emulated&quot;&gt;ViewEncapsulation.Emulated&lt;/a&gt;&lt;/code&gt;: Use shimmed CSS that emulates the native behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63346354764ec54d59fca82476136ccdcae8f133" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewencapsulation#Native&quot;&gt;Native&lt;/a&gt;&lt;/code&gt;: Use the native encapsulation mechanism of the renderer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108fece1fc733fa50500bcbe874704d9068f2a88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewencapsulation#Native&quot;&gt;ViewEncapsulation.Native&lt;/a&gt;&lt;/code&gt;: Deprecated. Use &lt;code&gt;&lt;a href=&quot;viewencapsulation#ShadowDom&quot;&gt;ViewEncapsulation.ShadowDom&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b153b873299a450e9201bf2112d7cc692b58dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewencapsulation#None&quot;&gt;ViewEncapsulation.None&lt;/a&gt;&lt;/code&gt;: Use global CSS without any encapsulation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c9cb9400c899ecc942bf331aa78ef3a5a7fa3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewencapsulation#ShadowDom&quot;&gt;ShadowDom&lt;/a&gt;&lt;/code&gt;: Use modern &lt;a href=&quot;https://w3c.github.io/webcomponents/spec/shadow/&quot;&gt;Shadow DOM&lt;/a&gt; and create a ShadowRoot for component's host element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c371cc21ed646a13fd59cbdd7621c7212c028f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewencapsulation#ShadowDom&quot;&gt;ViewEncapsulation.ShadowDom&lt;/a&gt;&lt;/code&gt;: Use Shadow DOM v1 to encapsulate styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e328ee763c3419fc3ac3eb6b7d4603c7c20da4fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt; | null&lt;/code&gt;: The &lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt; instance, or null if the index is out of range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c331c7a5f4189987afc4b555f67a1ac69f233a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt;: The inserted &lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd732f0905dd21a64b1e8b52d0703c1e467ef277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt;: The moved &lt;code&gt;&lt;a href=&quot;viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca406306f3b740c4a627f87081cd85521636945" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;weekday&quot;&gt;WeekDay&lt;/a&gt;&lt;/code&gt;: A day index number, using the 0-based week-day index for &lt;code&gt;en-US&lt;/code&gt; (Sunday = 0, Monday = 1, ...). For example, for &lt;code&gt;fr-FR&lt;/code&gt;, returns 1 to indicate that the first day is Monday.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10912fa0c709f6b79baa8001ec52d213438a543b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; is matched literally; that is, it matches &lt;em&gt;only&lt;/em&gt; the character &lt;code&gt;?&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1270daceea3b2260a63ded33f1f39d66a327d3f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; matches exactly one character excluding &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30c6dd61436988862959bb849037594e9e127fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; extends &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt;, so the &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; configuration applies to components as well</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52500b3eac7aa8510164f2665f2a34295e7089e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; is a decorator function that specifies the Angular metadata for the component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b872a46f3c12b6dd595c98412bd6fef818ceea3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/contentchild&quot;&gt;ContentChild&lt;/a&gt;()&lt;/code&gt; / &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; used together</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec79c6a862679a4f547da02004d20730f0b6df7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83057aec842759895e841beda881cab2995e2fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964ce757d00178b0192570a822b1d0b5f9b75bd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; causes the injector to look until it encounters the edge of the &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b82846979ba2b3c3aec7fc7efde4476f8065bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; lets you designate a component as the last stop in the injector tree when searching for providers. Even if there is a service instance further up the tree, Angular won't continue looking. Use &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b393e86d562cb68018c3614d40f2fd3439437e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt; are &lt;em&gt;parameter decorators&lt;/em&gt;. They alter the way the DI framework provides a dependency, by annotating the dependency parameter on the constructor of the class that requires the dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc85dd75766839e63ae4d424e89a90f22816085" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;(Token)=&amp;gt;&lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; demonstrates that if &lt;code&gt;Token&lt;/code&gt; is injected at this location in the logical tree its value would be &lt;code&gt;&lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Value&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1064c227111edb303b1ee138838547bdad0a19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd5a7b6534b18264742ffac125bd2e772f1d779" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; vs. &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02eca41584ced2a8591e638d0fda6f161c287e32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; act as the API, or application programming interface, of the child component in that they allow the child to communicate with the parent. Think of &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; like ports or doorways&amp;mdash;&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; is the doorway into the component allowing data to flow in while &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; is the doorway out of the component, allowing the child component to send data out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9502ef19a3a56c64d892654d6e4e777f65b0533" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; allow Angular to share data between the parent context and child directives or components. An &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; property is writable while an &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; property is observable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226486b9f473a6e4ae880810f9be654cdeb6ce32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; are independent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b09c859a3befd2bfd7597737f7dee7263842343" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; declarations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a49f4d50c659735e79892be8a358a3fb9f7e51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afdd6359ef45d33da460127c107200c00356879e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; together</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c9111ee98e8c51095f3615b5bd05724b59372e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;(Token)&lt;/code&gt; demonstrates that a fallback &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; injector should be used at this location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa772e61a2d04e10845b19a0ca79a5335bae034" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; metadata</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3f1b3e145eb9a0ee1940dbb91f560f2207491e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; metadata tells the Angular compiler what components to compile for this module and how to link this module with other modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6972eeefe7eac00a069d512e646a46bb7c13ff58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt; allows Angular to consider a service you inject to be optional. This way, if it can't be resolved at runtime, Angular simply resolves the service as &lt;code&gt;null&lt;/code&gt;, rather than throwing an error. In the following example, the service, &lt;code&gt;OptionalService&lt;/code&gt;, isn't provided in the service, &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt;, or component class, so it isn't available anywhere in the app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81559745b7ead2cb893f8a76046522d0b7a8e6a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; marks a property in a child component as a doorway through which data can travel from the child to the parent. The child component then has to raise an event so the parent knows something has changed. To raise an event, &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; works hand in hand with &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt;, which is a class in &lt;code&gt;@angular/core&lt;/code&gt; that you use to emit custom events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eae59175740fa7e3fe510bfed3175924db18924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt;&amp;mdash;a decorator function marking the property as a way for data to go from the child to the parent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be3c4ae30cbb072cf873f9fe19ac38edb784e2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e21f119928963530faf51124d241c3bba2da26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; is the opposite of &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt;. With &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt;, Angular starts its search for a service in the parent &lt;code&gt;ElementInjector&lt;/code&gt;, rather than in the current one. So if the parent &lt;code&gt;ElementInjector&lt;/code&gt; were using the value &lt;code&gt;🌿&lt;/code&gt; (fern) for &lt;code&gt;emoji&lt;/code&gt; , but you had &lt;code&gt;🍁&lt;/code&gt; (maple leaf) in the component's &lt;code&gt;providers&lt;/code&gt; array, Angular would ignore &lt;code&gt;🍁&lt;/code&gt; (maple leaf) and use &lt;code&gt;🌿&lt;/code&gt; (fern).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ffddef70b3efe7aac4f09d3867c789053d29fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; with &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee87b8917a6a921485dc8d1644ae6d8553a865a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt;, causes the injector to start its search for the &lt;code&gt;AnimalService&lt;/code&gt; at the &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt;, not the &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt;, where the request originates, and &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; stops the search at the &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt;. Since &lt;code&gt;AnimalService&lt;/code&gt; is provided via the &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; array, the injector finds 🦔 (hedgehog) in the &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a84bdcf6b7e28315149c1f06114a22bb1d1b466" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;&lt;/code&gt; is essential for two reasons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4b02b9857b724f247ab96d80f89428b62e36a21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;../api/core/viewchild&quot;&gt;ViewChild&lt;/a&gt;()&lt;/code&gt; / &lt;code&gt;@&lt;a href=&quot;../api/core/contentchild&quot;&gt;ContentChild&lt;/a&gt;()&lt;/code&gt; static resolution as the default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818a4f7f78bf20e58b62bde715ebff70077a8578" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;custom_elements_schema&quot;&gt;CUSTOM_ELEMENTS_SCHEMA&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;no_errors_schema&quot;&gt;NO_ERRORS_SCHEMA&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca7761fe6f1c92450dc5ccbb52a08c185c1edb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Provide(Token=&lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Value&lt;/a&gt;)&lt;/code&gt; demonstrates that there is a declaration of &lt;code&gt;Token&lt;/code&gt; provider with value &lt;code&gt;&lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; at this location in the logical tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df93d3356523f89d3823d58f5daa7a3f985c9ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@angular/platform-webworker&lt;/code&gt; was introduced in Angular version 2 as an experiment in leveraging Angular's rendering architecture to run an entire web application in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;web worker&lt;/a&gt;. We've learned a lot from this experiment and have come to the conclusion that running the entire application in a web worker is not the best strategy for most applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee6934fa313c36bb3632eefa683d74e7be6f236d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@angular/upgrade/&lt;a href=&quot;../api/upgrade/static&quot;&gt;static&lt;/a&gt;&lt;/code&gt; has a &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;&lt;/code&gt; method for the purpose of making Angular services available to AngularJS code. Use it to plug in the &lt;code&gt;Phone&lt;/code&gt; service:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e30ffb5154739abe2e62bf2940062c63bb5efe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@types/angular&lt;/code&gt; is declared as a UMD module, and due to the way &lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/What's-new-in-TypeScript#support-for-umd-module-definitions&quot;&gt;UMD typings&lt;/a&gt; work, once you have an ES6 &lt;code&gt;import&lt;/code&gt; statement in a file all UMD typed modules must also be imported via &lt;code&gt;import&lt;/code&gt; statements instead of being globally available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a458d887be531fc181433bd61e339c2e04a69767" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Activated Route&lt;/code&gt; in action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5dd5882973665f048d159d3ef852b35e9226a4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActivatedRoute&lt;/code&gt; params and &lt;code&gt;queryParams&lt;/code&gt; properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac42a8f4c89465ac4e569e07b18ce3682f353126" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AdBannerComponent&lt;/code&gt; takes an array of &lt;code&gt;AdItem&lt;/code&gt; objects as input, which ultimately comes from &lt;code&gt;AdService&lt;/code&gt;. &lt;code&gt;AdItem&lt;/code&gt; objects specify the type of component to load and any data to bind to the component.&lt;code&gt;AdService&lt;/code&gt; returns the actual ads making up the ad campaign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a521eab173b9f837bc6789f8e888f759453b138f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AdDirective&lt;/code&gt; injects &lt;code&gt;&lt;a href=&quot;../api/core/viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; to gain access to the view container of the element that will host the dynamically added component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f14889583e9bb0b9cddff9fded84c128a6a24039" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AlexComponent&lt;/code&gt;&lt;em&gt;should&lt;/em&gt; implement &lt;code&gt;Parent&lt;/code&gt; as a matter of proper style. It doesn't in this example &lt;em&gt;only&lt;/em&gt; to demonstrate that the code will compile and run without the interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2bda7caf88799fe289c3e3e58cac88dd77160b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AppComponent&lt;/code&gt; could be bootstrapped in this module but declared in a different feature module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb551f85199da795f4f8bcaf46b2fc92e3e8fa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AppComponent&lt;/code&gt; could be declared in this module but not bootstrapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ee884f53d753e9009c1ef0d273ad8f868573ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AppComponent&lt;/code&gt; defines a method that can detect when a view changes. The method assigns an animation state value to the animation trigger (&lt;code&gt;@routeAnimation&lt;/code&gt;) based on the route configuration &lt;code&gt;data&lt;/code&gt; property value. Here's an example of an &lt;code&gt;AppComponent&lt;/code&gt; method that detects when a route change happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383b3a22bba66e0a98e4280236ab92e8d0eee8c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AppComponent&lt;/code&gt; is included in the &lt;code&gt;exports&lt;/code&gt; list here for illustration; it isn't actually necessary in this example. A root NgModule has no reason to &lt;em&gt;export&lt;/em&gt; anything because other modules don't need to &lt;em&gt;import&lt;/em&gt; the root NgModule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3729c23c1e7924997731702e5777be2ad7aacc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AppComponent&lt;/code&gt; is often listed in both &lt;code&gt;declarations&lt;/code&gt; and &lt;code&gt;bootstrap&lt;/code&gt;. You might see the same component listed in &lt;code&gt;declarations&lt;/code&gt;, &lt;code&gt;exports&lt;/code&gt;, and &lt;code&gt;entryComponents&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b375afc618b783b6925c578e4b562c41ed937b02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AppComponent&lt;/code&gt; is the application's root component. It will host the new &lt;code&gt;HeroFormComponent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9627bfd51be26f75305be962a4822bed9097ba92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AppRoutingModule&lt;/code&gt;, &lt;code&gt;AppModule&lt;/code&gt;, and &lt;code&gt;HeroService&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c52ae238c535f227c40c8b444ca832e7f7c79e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array&lt;/code&gt; - the CSS classes declared as Array elements are added,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd8e81a4e027857b3a992656a2789e479d74def" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;By.all&lt;/code&gt; - return all elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead15d12ec92c1bcf05250ca08a17a031f4616e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;By.css(selector)&lt;/code&gt; - return elements with matching CSS selectors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f945f7c5be538beb44c3e86fe3e9bf02c32354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;By.directive(directive)&lt;/code&gt; - return elements that Angular matched to an instance of the directive class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="279eee9c75e9e5084fdbc52a0aa7e2fc2bb2a88a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CanActivate&lt;/code&gt;: requiring authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b04bf7ecd44697353fbc221c6083a5b7620e65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CanActivateChild&lt;/code&gt;: guarding child routes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064160c691a18470cd89ffb3a1318ea809793db8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CanDeactivate&lt;/code&gt;: handling unsaved changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ae91271080d62702e9a068720fe8945ae08840" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CanLoad&lt;/code&gt; Guard: guarding unauthorized loading of feature modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680ef6a9b3647d0470bb4485305a4262a8cb90a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DOCUMENT&lt;/code&gt; in &lt;code&gt;@angular/common&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb7ac779c82f86f6e3779b0dfe6f48b7d4f1638" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DashboardComponent&lt;/code&gt; hero links</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f13dc7a4840d6dd0549866e4797f952f2144610" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateLoggerService&lt;/code&gt; inherits from &lt;code&gt;LoggerService&lt;/code&gt;; it appends the current date/time to each message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a726088085f1bb15a75c512f2d14f16073ccf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DropdownQuestion&lt;/code&gt; presents a list of choices in a select box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90640d30422213fd13ec563d16f1870c68876ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DynamicFormComponent&lt;/code&gt; expects the list of questions in the form of an array bound to &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;() questions&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d85def03aa8159714ae909c1594b4aa24fcd68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DynamicFormComponent&lt;/code&gt; is the entry point and the main container for the form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64be889d31debd22c2cc760bc53ab6f115ee390b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXISTING_CLIENTS_ONLY&lt;/code&gt;: the service worker does not have a clean copy of the latest known version of the app. Older cached versions are safe to use, so existing tabs continue to run from cache, but new loads of the app will be served from the network. The service worker will try to recover from this state when a new version of the application is detected and installed (that is, when a new &lt;code&gt;ngsw.json&lt;/code&gt; is available).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969d8f4800f19339856dba68d8883f2ff3116eb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ElementInjector&lt;/code&gt; hierarchy&amp;mdash;created implicitly at each DOM element. An &lt;code&gt;ElementInjector&lt;/code&gt; is empty by default unless you configure it in the &lt;code&gt;providers&lt;/code&gt; property on &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; or &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be404c81a25c135b343b10f14e939f833b324e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ElementInjector&lt;/code&gt; use case examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c26ee637359e8234226dcd054fa37fd3d6f5ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;End-to-End&lt;/code&gt; (E2E) test file names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed7b8029daf2443d2ce4d0190704ced388f68af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Folders-by-feature&lt;/code&gt; structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c604411866d36053a4b8f378905344a35e7e038d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Function&lt;/code&gt;: A callback function that can be used to remove the handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1009d43e61fd029bb71e8be43497826cc67527a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Function&lt;/code&gt;: If you pass a function, it is expected to return a promise resolving to an &lt;code&gt;&lt;a href=&quot;../../core/ngmoduleref&quot;&gt;NgModuleRef&lt;/a&gt;&lt;/code&gt;. The function is called with an array of extra &lt;a href=&quot;../../core/staticprovider&quot;&gt;Providers&lt;/a&gt; that are expected to be available from the returned &lt;code&gt;&lt;a href=&quot;../../core/ngmoduleref&quot;&gt;NgModuleRef&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;../../core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0625b821e5e44330b516d6c1d62494c6f01dded" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Function&lt;/code&gt;: a &lt;a href=&quot;https://docs.angularjs.org/guide/di&quot;&gt;factory function&lt;/a&gt; that can be used to register the service on an AngularJS module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fefd001fe93a832c4d5543c80ac5ca90f8ee72c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HammerInstance&lt;/code&gt;: A HammerJS event-manager object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a179323fa2040d5e147b809e26a61ece9dff9ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HeroChildComponent&lt;/code&gt; has two &lt;strong&gt;&lt;em&gt;input properties&lt;/em&gt;&lt;/strong&gt;, typically adorned with &lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;@Input decorations&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62061c1403d1569b2c00da036f7adf3c3df9d0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HeroService.getHeroes()&lt;/code&gt; must have an &lt;em&gt;asynchronous signature&lt;/em&gt; of some kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e897b2c34a092b65e416b1b8245b24762c27ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HeroService&lt;/code&gt; must be provided in some parent injector. The code in &lt;code&gt;HeroListComponent&lt;/code&gt; doesn't depend on where &lt;code&gt;HeroService&lt;/code&gt; comes from. If you decided to provide &lt;code&gt;HeroService&lt;/code&gt; in &lt;code&gt;AppModule&lt;/code&gt;, &lt;code&gt;HeroListComponent&lt;/code&gt; wouldn't change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b535dc533abff5678ced63783c9b134f1ce7db75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HeroService&lt;/code&gt;, &lt;code&gt;InMemoryDataService&lt;/code&gt;, &lt;code&gt;AppModule&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea47dcbe833629e5397bb6e79fc3a5e0f44491c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HeroService&lt;/code&gt;&lt;em&gt;requires&lt;/em&gt; a logger, but what if it could get by without one?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab63d7f0034a805503d5d68aaa2687d5e3a1daac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HeroesComponent&lt;/code&gt; doesn't do that anymore. Now the router creates the &lt;code&gt;HeroDetailComponent&lt;/code&gt; in response to a URL such as &lt;code&gt;~/detail/11&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab66504cd46291da78576c065b890089f590aa64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HeroesComponent&lt;/code&gt; hero links</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53af9e5c1693268db6d88a3318949b66a05baae4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HeroesComponent&lt;/code&gt; is the top-level heroes component. Its only purpose is to display &lt;code&gt;HeroListComponent&lt;/code&gt;, which displays a list of hero names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261958e227a2b3a42d63b0e3bc175e66fe3de23b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HostListener&lt;/code&gt;/&lt;code&gt;HostBinding&lt;/code&gt; decorators versus &lt;code&gt;host&lt;/code&gt; metadata</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1dc914145a28379c9b74e9dc5b2786d662ba84e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InjectableDefType&lt;/code&gt;s contain their own Dependency Injection metadata and are usable in an &lt;code&gt;InjectorDef&lt;/code&gt;-based `StaticInjector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef89f86962cf497ad648c99c0c26375a5a169479" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InjectorDefTypes&lt;/code&gt; can be used to configure a &lt;code&gt;StaticInjector&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c95732f0b8d340b62d752cc04461e168c46e98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Key&lt;/code&gt; is used internally by &lt;a href=&quot;reflectiveinjector&quot;&gt;&lt;code&gt;ReflectiveInjector&lt;/code&gt;&lt;/a&gt; because its system-wide unique &lt;code&gt;id&lt;/code&gt; allows the injector to store created objects in a more efficient way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b0991df15787d4b31976801d02f5eb8a192cec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Key&lt;/code&gt; should not be created directly. &lt;a href=&quot;reflectiveinjector&quot;&gt;&lt;code&gt;ReflectiveInjector&lt;/code&gt;&lt;/a&gt; creates keys automatically when resolving providers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="360cb8a3889c180392f6d03f776e73063dcf78cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LiveAnnouncer&lt;/code&gt; is used to announce messages for screen-reader users using an &lt;code&gt;aria-live&lt;/code&gt; region. See the W3C documentation for more information on &lt;a href=&quot;https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-live&quot;&gt;aria-live regions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba66fb7bfeacbaf1ffc6ea4bd9d06ebd5b766e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MasterService&lt;/code&gt; delegates its only method, &lt;code&gt;getValue&lt;/code&gt;, to the injected &lt;code&gt;ValueService&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e085a6383dff2cd96fbc420f5c5f9b9cc86330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MinimalLogger&lt;/code&gt; is an abstract class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15aef367fdeb7e1459aa1e009069302aa5205c22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModuleInjector&lt;/code&gt; hierarchy&amp;mdash;configure a &lt;code&gt;ModuleInjector&lt;/code&gt; in this hierarchy using an &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt; or &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75f5974124d7263318f5bcdc142c54368877ed6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModuleInjector&lt;/code&gt; is configured by the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule#imports&quot;&gt;NgModule.imports&lt;/a&gt;&lt;/code&gt; property. &lt;code&gt;ModuleInjector&lt;/code&gt; is a flattening of all of the providers arrays which can be reached by following the &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule#imports&quot;&gt;NgModule.imports&lt;/a&gt;&lt;/code&gt; recursively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f96f976e8d7a5c24766b6b7e50deb746e168466" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NORMAL&lt;/code&gt; indicates that the service worker is operating normally and is not in a degraded state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a5e3f4930ea78cf244e968e47fe46c580ff22c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NgFor&lt;/code&gt; is a repeater directive&amp;mdash;a way to present a list of items. You define a block of HTML that defines how a single item should be displayed and then you tell Angular to use that block as a template for rendering each item in the list. The text assigned to &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; is the instruction that guides the repeater process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b636bb2ec20c55d61d572ce7293a10e0281fa0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NgFor&lt;/code&gt; is implemented by the &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; directive. Read more about the other &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; context values such as &lt;code&gt;last&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/common/ngforofcontext#even&quot;&gt;even&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;&lt;/code&gt; in the &lt;a href=&quot;../api/common/ngforof&quot;&gt;NgForOf API reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712ff9f1b588beb4ed659a88fa0afe8b0c0ceb4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; means that Angular does no view encapsulation. Angular adds the CSS to the global styles. The scoping rules, isolations, and protections discussed earlier don't apply. This is essentially the same as pasting the component's styles into the HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae81bfa8c96ded1470b7f407938ce4b208c7314" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt;: Do not provide any template or style encapsulation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165107a4089c1a1b040b3e9b60b6c485079e3994" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt; - keys are CSS classes that get added when the expression given in the value evaluates to a truthy value, otherwise they are removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4cb2a72d35a10e13def1872d86a55f2195ffb95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HTTPEvents&lt;/code&gt; for the request, with response body as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf4d12dc292b8039d5bc07650d478c202bc2bed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with the response body as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d982f70e2ecc6519d17bafd926521958c4a1bd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HTTPevents&lt;/code&gt; for the request, with the response body as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc34288f847500d445f0148d634cdce80beec7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of tall &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with the response body as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deec97c496233f58a2e396c1012255c3b0dc4bca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body as an array of &lt;code&gt;HTTPEvents&lt;/code&gt; for the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a247af8c0467a2b0a416f7835d655c5d6906e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with the response body as &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2053a17b08e96e7c946365f8963439502ee66194" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with the response body as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7528aeb421a26c5f8a0a2d88de375b21c85d9bd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HTTPEvents&lt;/code&gt; for the request, with the response body as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b8d6aee32d2407704b46c3751b9192b495d43d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HTTPevents&lt;/code&gt; for the request, with the response body as &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d774a577e8e69c3ad503de62f0167b491dd3a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of of all &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with the response body of type &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d65bbaf2a5d12f559144c5aedca5309b59a2946" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81946f7e044b9fc7811fe16e543d41477818b76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HTTPEvents&lt;/code&gt; for the request, with a response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61375af1e7e153a72e45302d68adc01e2eddba03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HTTPEvents&lt;/code&gt; for the request, with response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e57133f6a2bae86c18553cb76202dcae9af70b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with a response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22f76194108fea4611d285cb6bb858fe30cfd72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HTTPevents&lt;/code&gt; for the request, with a response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10516d7e59757763c8e525f33eae89f78b695850" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HttpEvents&lt;/code&gt; for the request with the response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999865ddc055a67532cd5a43f27381e220eb47c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3c8940e935968513a065c1d2fa226686d4cfea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;R&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with the response body of type &lt;code&gt;R&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ad5923035843dba2df1789cda511b211fe5340" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;R&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body as a stream of &lt;code&gt;HTTPEvents&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97295d31395e923948cb6ce35b45ba5227b50a05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with a response body in the requested type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3a17932ce78aadbc92fd72c3b79d8f209af272" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HTTPEvents&lt;/code&gt; for the request , with a response body in the requested type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4810028c7771bfe4049b2062839791c3e638f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HTTPEvents&lt;/code&gt; for the request, with a response body in the requested type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f1b3a29133d22cd886f9798b4d489dd725c570" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HTTPevents&lt;/code&gt; for the request, with a response body in the requested type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff15e6463dc74bc0cc8a08905e324ce7a8f45cfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with a response body in the requested type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31567e918b3934136935c1abbc25190a3ce1e12f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with a response body in the requested type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9480e7909e0b8bb2434f62f343f684a811826f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;any&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with the response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a90cd9585416b77751ede1dca889f386ed36e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;any&amp;gt;&amp;gt;&lt;/code&gt;: An observable of the event stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340ee407e8b98ce7900c6878cd0b94e02a8705d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;any&amp;gt;&amp;gt;&lt;/code&gt;: An observable of the response events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9d45f7a1e9a6f604b8db530e4d363f97fcb63d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HTTPEvents&lt;/code&gt; for the request, with the response body of type string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad861968b282d83afe21cb084251f5287d6d82d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HttpEvents&lt;/code&gt; for the reques, with the response body of type string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c241fc869fd2d5deaae60d5104e08f3597a049" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all &lt;code&gt;HttpEvents&lt;/code&gt; for the request, with a response body of type string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa79542140f01a77e7b3c90d678c0e3b136f7434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all HttpEvents for the request, with a response body of type string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d27c2a28893ad0184b48943830aad57de18fad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all HttpEvents for the request, with the response body of type string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06fbd05a596b12679e56bbd8651d63118a281b4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HTTPEvents&lt;/code&gt; for the request, with the response body of type string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174cb7df8e420614e3c330510298f004be0e4dc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of all the &lt;code&gt;HTTPevents&lt;/code&gt;for the request, with a response body of type string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbfc5dfa9135a6d079de1dd356abcc88d1a0dceb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body of type string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d789a2edcf2b14334d98440997f9d66063060339" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; for the request, with the response body as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab4d3667d17b7d5ca532c8eb85367935172d67d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with the response body as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f84f434f99dc2fd359d5b14879fb2bb82db189f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt;, with the response body as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9222f9a6e6d165b23d3ce1564c2829fa056cbf02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;ArrayBuffer&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the full &lt;code&gt;HTTPResponse&lt;/code&gt;, with the response body as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ed3ecf1b0fa0c84a83f8c762fff960daead3bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; for the request, with the response body as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb604dbca87712299b220c8a64f1fd78fd05eae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with the response body as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634080094c6a9cb53cf0753d69f0b27b87dee980" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with the response body as a blob.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc10c704be17305266d227a38050c84d4154229" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Blob&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt;, with the response body of type &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36a18309cffa5df67d86aba55827db02d1d079a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; for the request, with a response body in the requested type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82029bbdc249ee1c6bd0da8f4868d4c154560c24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; for the request, with the response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b7b31694b12047020ff85d5e5f4cf8b25f4d37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with a response body of type 'Object`.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f176cae387098701caa2db811ed22c28aad6b8d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with a response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82c556e00c0f026f377013b87070364553ab2d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with the response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b94d5fb2e554705f8d80378f4009d7daa2c78c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt;, with the response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1400880225a0e92606ab04cbcbab83d0b764ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the full &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt;, with the response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e212dc6f1b0d169c286e89bb737e5671333e24ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;Object&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the full &lt;code&gt;HTTPResponse&lt;/code&gt;, with the response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16bba95e94d8fd1b0e083cd7b4497fa9456b747" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;R&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the full &lt;code&gt;HTTPResponse&lt;/code&gt;, with the response body of type &lt;code&gt;R&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff21d981b9a2d6ef4774977062973441ef92680" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; for the request, with a response body in the given type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b1cd962b51da06c058a99f2a2eeb76ccaa617c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; for the request, with a response body in the requested type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecbf330ee98845ae4a51dbfc10754611a91444fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with a responmse body of the requested type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48dffe13a8fb09c2adba5a7606ac925a56ac92e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with a response body in the requested type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5130b18aaebbd0ce194feeb4078e67e5cf526d89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt;, with the response body of the requested type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b65cb7ea5bc5ef4470cb29dc873fa8718aebcd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the full &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with a response body in the requested type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9bc9beb23b805b2f2d736a5b78e5a1f6b4deec8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; for the request, with a response body of type string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e917e6ab1c23bb852553c763bdb35fc4da68808e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; for the request, with the response body of type string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d05a1a8f3402a58292b15bb9dcf80f97f71a99c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with a response body of type string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967b5b88cbece296352fa9565f0cec35b8885330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with the response body of type string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e692ab46cb6b07072a3fc70424c1dd812223fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the HTTP response, with the response body of type string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd9188a8c08920b2c113a3162e879d9e0b9b5fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the full &lt;code&gt;HTTPResponse&lt;/code&gt;, with the response body of type string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f592cae7c8362cbb66f2bd0bf6a2a8d58ff5df3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;ArrayBuffer&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response body as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a41a3174678dfc0b51e5ee3b1919490b59c8bb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;ArrayBuffer&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f2740abd224046529e08b3f5d81cd0dcb2a074" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;Blob&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response body as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8daee6e3cb9b7ddd0a8f58b3920b9e05ae05824" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;Blob&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e1386a706c832fb9aa5907869352f9d63ceb798" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;Blob&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body of type &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb4e8b9d50f15ef117ea42fbca3bd5dd0239b57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;Object&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt;, with the response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d97a761230146184aca434651a8573a2be6bb646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;Object&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response body as a JSON object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd77146f2ac45c42b7a71c267746986cf6b3d96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;Object&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response object, with response body as an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6285c5a18345b8a2ad75af645e0e18ed0d2f1a26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;Object&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body as a JSON object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a519e247a743792c90bf9a09f1cbc83380a0b35e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;Object&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daec76bfa6bbd9cb42119b6e16418798de623b59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;R&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt;, with the response body of type &lt;code&gt;R&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc43e93ed325c99c62e971bf5b32de94417b0d92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; for the request, with a response body in the given type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193d64efc25c5d9f269891de8162966c19ad35d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with a response body in the requested type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32732d45dc1ae6092dd40ac114c1f7312e45f8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt; for the request, with a response body of the given type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4c959cfa4556bc05f0a4d95a098a52c56fb86f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt;, with a response body in the requested type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bbcc3a28dfbad56ae2f8aade370af3a3c0dcce6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt;, with a response body of the given type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3125734b7c1affe1a7cdecf61c88f20587565207" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the &lt;code&gt;HTTPResponse&lt;/code&gt;, with response body in the requested type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c784cff7b4c5ea3a12916047fe615f659393ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;T&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response object, with response body in the requested type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b63f3c217f95624f492c78f633ae0214eb8a08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;any&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the reuested response, wuth body of type &lt;code&gt;any&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a917e9237805c222d203d3fbd1e0cea19ef29194" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;string&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with a response body of type string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="771f12a31343008ffc25baa1c0a4c4864b863e35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&amp;lt;string&amp;gt;&lt;/code&gt;: An &lt;code&gt;Observable&lt;/code&gt; of the response, with the response body of type string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e978afd48eab72d129bdff12c88dacb8b548f75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable.subscribe()&lt;/code&gt; is the critical difference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320b050eb7ecbbcdf33038ae4eff7617ebdf4418" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Observable&lt;/code&gt; is one of the key classes in the &lt;a href=&quot;http://reactivex.io/rxjs/&quot;&gt;RxJS library&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886e56966287010cbc5ff52e34ce73237aea864f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ProfileEditor&lt;/code&gt; allows you to manage the form control instances for the &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt; controls within the form group instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ea9a44e25164ca7502f6a28f9a0aac1588f957" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise&amp;lt;&lt;a href=&quot;validationerrors&quot;&gt;ValidationErrors&lt;/a&gt; | null&amp;gt; | Observable&amp;lt;&lt;a href=&quot;validationerrors&quot;&gt;ValidationErrors&lt;/a&gt; | null&amp;gt;&lt;/code&gt;: A promise or observable that resolves a map of validation errors if validation fails, otherwise null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d326e1960b8ea578bee65725f1adf262b501fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise&amp;lt;PushSubscription&amp;gt;&lt;/code&gt;: A Promise that resolves to the new subscription object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7e2ec990d825955192d30186738c9317d4dd25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise&amp;lt;any&amp;gt;&lt;/code&gt;: The asynchronous result of the developer-defined function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ffe110e7d577c9b41aa63c3e48bbca812cfc111" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise&amp;lt;boolean&amp;gt;&lt;/code&gt;: A Promise that resolves to 'true' when navigation succeeds, to 'false' when navigation fails, or is rejected on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea029792a17001a25a012ff80cf75f314c256b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise&amp;lt;void&amp;gt;&lt;/code&gt;: A Promise that is resolved when the operation succeeds, or is rejected if there is no active subscription or the unsubscribe operation fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af91523c636eb2447ac991b912925007841cf16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Resolve&lt;/code&gt;: pre-fetching component data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4b6598d8fe33d86f02fbc1bbf998deeb2acacd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SAFE_MODE&lt;/code&gt;: the service worker cannot guarantee the safety of using cached data. Either an unexpected error occurred or all cached versions are invalid. All traffic will be served from the network, running as little service worker code as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965b3c71bb518c1981f8fe6c858a5e2140b7671c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt; implements the &lt;code&gt;&lt;a href=&quot;../api/router/preloadingstrategy&quot;&gt;PreloadingStrategy&lt;/a&gt;&lt;/code&gt;, which has one method, &lt;code&gt;preload&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175148b0e52be6df9d1312e8ad33097f1f699818" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SharedModule&lt;/code&gt; is a conventional name for an &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; with the components, directives, and pipes that you use everywhere in your app. This module should consist entirely of &lt;code&gt;declarations&lt;/code&gt;, most of them exported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72b91d9d64570604773f76d058bd7452fb43cc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SubscriptionLike&lt;/code&gt;: Subscribed events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac216f979452a0495e636dc9e34f4ec59226a6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T-DRY&lt;/code&gt; (Try to be &lt;code&gt;DRY&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a911efc75ec4c18afcbc9211c8534c257e4555d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt;: The instance from the injector if defined, otherwise the &lt;code&gt;notFoundValue&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb6a77af2cda10f6238bbd6cf4d3be97cc71b41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TemplateRef&lt;/code&gt; and &lt;code&gt;ViewContainerRef&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a508049889acdb3103e90015f9489eb4a1ad0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TestBed.createComponent()&lt;/code&gt; creates an instance of the &lt;code&gt;BannerComponent&lt;/code&gt;, adds a corresponding element to the test-runner DOM, and returns a &lt;a href=&quot;testing#component-fixture&quot;&gt;&lt;code&gt;ComponentFixture&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c15418d4e613d73dab6292eadb3e0cd2b76a98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TextboxQuestion&lt;/code&gt; supports multiple HTML5 types such as text, email, and url via the &lt;code&gt;type&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb662938b936af9994cdba140666a87ddfac0da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UserContext&lt;/code&gt; in turn depends on both &lt;code&gt;LoggerService&lt;/code&gt; and &lt;code&gt;UserService&lt;/code&gt;, another service that gathers information about a particular user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d7a3675faa7376ffc994d60623798ba236d1cb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VillainService&lt;/code&gt; is a singleton with respect to &lt;code&gt;VillainsListComponent&lt;/code&gt; because that is where it is declared. As long as &lt;code&gt;VillainsListComponent&lt;/code&gt; does not get destroyed it will be the same instance of &lt;code&gt;VillainService&lt;/code&gt; but if there are multilple instances of &lt;code&gt;VillainsListComponent&lt;/code&gt;, then each instance of &lt;code&gt;VillainsListComponent&lt;/code&gt; will have its own instance of &lt;code&gt;VillainService&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d4e60486861745a063ecfa7a542fd955138f05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; syntax for two-way data binding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25769304915377a27af47b79cfbaa50985810fe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt;: Two-way binding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55fdb4c2c1f561b26d112fdb44dffa2c4c7b7be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;a href=&quot;weekday&quot;&gt;WeekDay&lt;/a&gt;, &lt;a href=&quot;weekday&quot;&gt;WeekDay&lt;/a&gt;]&lt;/code&gt;: The range of day values, &lt;code&gt;[startDay, endDay]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef00cc9c9a38e53f380bc610baa56eb24f423c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[attribute=value]&lt;/code&gt;: Select by attribute name and value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e2695d09ee01b75c95ae4ebf6f56ff3650a3c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[attribute]&lt;/code&gt;: Select by attribute name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981077324f89b35e73c0c305facc766b011303d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[hero]=&quot;selectedHero&quot;&lt;/code&gt; is an Angular &lt;a href=&quot;../guide/template-syntax#property-binding&quot;&gt;property binding&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2168029e02ba93f77c4132dce9ea0a455dfc7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[number, number]&lt;/code&gt;: A position in screen coordinates (a tuple with x and y values).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b51a6313ad1d821395f0a6e2abde7e0d0a55abb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[prefixKey] &quot;expression&quot;
    (let-prefixKey=&quot;export&quot;)&lt;/code&gt;  Notice that the &lt;code&gt;prefix&lt;/code&gt; is added to the &lt;code&gt;key&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="943a403280fa32d76ea8de74863e4dda3d4fafa8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[string, string]&lt;/code&gt;: An array of localized era strings. For example, &lt;code&gt;[AD, BC]&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77f0294935d596f9ac5cfe95a0b4c5e3d33de93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[string, string]&lt;/code&gt;: An array of localized period strings. For example, &lt;code&gt;[AM, PM]&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ed4795313114963e18caab75c8c6b26e990912" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addHero()&lt;/code&gt; differs from &lt;code&gt;updateHero()&lt;/code&gt; in two ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c5f1b08cce1c261a6815016a66e0b81f1fcb81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt; - The size of the entire app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd512f9e9548625a99f4ffff5cc1750ad86b0944" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allScript&lt;/code&gt; - The size of all scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249a33bba6c4d8b1574ee4eb9ffb84c655e64ef4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;always&lt;/code&gt; : Run on every execution. By default, guards and resolvers run only when the matrix parameters of the route change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f449e748fc1233b1b63cc8bece1d46f91e8640" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt; - The size of any file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="080cbb4c036bd6938407740610ba18144893e9f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt;: The modified element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ef77912807893b5ef66342d55d466189be199c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt;: The new element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed88af26e88454716dc136bfa3563149b1eb2445" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt;: The parent node, or null if there is no parent. For WebWorkers, always returns true. This is because the check is synchronous, and the caller can't rely on checking for null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d1491d3123541787d7b4f64427edfa343fdacf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt;: The root element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610e513b973f2fa4ded91b1d1fd3446c1e3d061c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt;: The sibling node, or null if there is no sibling. For WebWorkers, always returns a value. This is because the check is synchronous, and the caller can't rely on checking for null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd185f1e55e06a53d31c0d1f421c181e4ffcf79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt;: a factory function that can be used to register the component in an AngularJS module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce9e2e457575c3316876dc5c178f35235a330e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt;: error data for that particular error. If the control or error is not present, null is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a39528555600550d67cd8c7fac676129244987" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyComponentStyle&lt;/code&gt; - This size of any one component stylesheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49e823e2ab788e802dfc06a0d5348e53a0d07b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyScript&lt;/code&gt; - The size of any one script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3100b81401afb949faac69e139bf9fa0ed980c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app-product-list&lt;/code&gt; (purple box) is the product list that you modified in the previous section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e58891e688e83e8eab6a528e23b03efb92b7747" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app-root&lt;/code&gt; (orange box) is the application shell. This is the first component to load and the parent of all other components. You can think of it as the base page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99641bce8501c79b2b0ebc50e2dfdb718aa23d59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app-top-bar&lt;/code&gt; (blue background) is the store name and checkout button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4364e86ff66da5973bbdd38d513ecdac23c5c4f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app.component.css&lt;/code&gt;&amp;mdash; the component's private CSS styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba00be702a9139005b7cf907b3a9feb661a8ebc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app.component.html&lt;/code&gt;&amp;mdash; the component template, written in HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9a5bed3c3ab2bc271b8f49169a5c3ba57cdeee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app.component.ts&lt;/code&gt; defines the app's root component, which uses the PopupService to add the pop-up to the DOM at run time. When the app runs, the root component's constructor converts PopupComponent to a custom element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe7378523c0851920dd543fae23906d06334eab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app.component.ts&lt;/code&gt;&amp;mdash; the component class code, written in TypeScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e3ead2644c27bf3e7d9c2a94ca6c8a41a9ee14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app.module.ts&lt;/code&gt; adds the PopupComponent in the module's &lt;code&gt;entryComponents&lt;/code&gt; list, to exclude it from compilation and avoid startup warnings or errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="181b279a7e7e6f486c1513f2f69281e3083a0424" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app.module.ts&lt;/code&gt; defines the application's root module. In it you identify the external modules you'll use in the application and declare the components that belong to this module, such as the &lt;code&gt;HeroFormComponent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de6a7b76e0302ef8f8bbc7747bd55e3acc1525f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asyncValidator&lt;/code&gt;: A single async validator or array of async validator functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248e4ad585c886808ce5bc61d9848e7a41c1ced6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bazel build [targets]&lt;/code&gt;: Compile the default output artifacts of the given targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3408ff9388227c58531226b1d9ea1f3270ac76d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bazel run [&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;]&lt;/code&gt;: Compile the program represented by target, and then run it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8536e8d20e50dcbc097bb83ccd92af0581325a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bazel test [targets]&lt;/code&gt;: For whichever &lt;code&gt;*_test&lt;/code&gt; targets are found in the patterns, run the tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a008a9716e4238a05bc0f8f012dfaae54f8c57eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bindToController: {}&lt;/code&gt;. Component inputs and outputs should be bound to the controller instead of using the &lt;code&gt;$&lt;a href=&quot;../api/service-worker/swregistrationoptions#scope&quot;&gt;scope&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f497babe6a22740fb9ac7d86a523f20e4893ad1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bindToController&lt;/code&gt;: supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abfd76a6d95df31580853b5c9622c772f88a777" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bindingProperty&lt;/code&gt; specifies the DOM property the event handler is attached to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a14bafc8cff39cccd9b76ef0503c471fb058212" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bindingProperty&lt;/code&gt; specifies the DOM property where the value is read from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81cc83b3f12b2063c1e38db3106dfd89b432c105" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;: True if the animation has started, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227365fdbd25edbc4dc7fe9e3ffe3f8d42912dfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;: True if the given URL path is equal to the current normalized path, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28ca9c1e0b4234538eb13f92b97f4a6f36a4d42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;: True if the header exists, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c32adeda863ed45e26de4d059eb6ac5713f4029" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;: True if the map contains the given parameter, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b2e3880d2d7e3aa5cc6656bd8c67144fb3044e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;: True if the parameter has one or more values, false if it has no value or is not present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda1b6bf727795564750d221d43e2b29793e70d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;: false for disabled controls, true otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a8511884e4ca678180a0046045f88b98585d30d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;: whether the given error is present in the control at the given path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b308dc64e4337b46d9517ecf2e60542cf0b6b14f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bootstrap&lt;/code&gt;: The main application view, called the &lt;em&gt;root component&lt;/em&gt;, which hosts all other app views. Only the &lt;em&gt;root NgModule&lt;/em&gt; should set the &lt;code&gt;bootstrap&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e98f9e6d6350457f27c5a238d16463b9167e6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufferTime&lt;/code&gt;, &lt;code&gt;concatMap&lt;/code&gt;, &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;mergeMap&lt;/code&gt;, &lt;code&gt;scan&lt;/code&gt;, &lt;code&gt;switchMap&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd54cd69e545951370b7b56b968e24304a34373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bundle&lt;/code&gt; - The size of a specific bundle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="385e1f353c508d0fec12b98f9e9214e3283a5cfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;children&lt;/code&gt; - an array of child nodes (&lt;em&gt;header node only&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55143cd71a8ea88db6c03b0427ac2bc347d1034d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f371005076c32e358f595f72b3fd693d6a0656b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt;- code snippets can be styled with the CSS classes &lt;code&gt;no-box&lt;/code&gt;, &lt;code&gt;code-shell&lt;/code&gt;, and &lt;code&gt;avoid&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090112e53789f1e202cdc6c3e33483de9d1744a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff69b69128819a84c4c70e33411bead72813a17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt;&lt;code&gt;security&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9d1eef55f7e0638dd32a0105fac64f08aebdfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;click&lt;/code&gt;, &lt;code&gt;deleteRequest&lt;/code&gt;, and &lt;code&gt;myClick&lt;/code&gt; in the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d46a9e3470e521eb5d17ff2e7079447c56b1476" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;code&lt;/code&gt;: Show the code (such as &lt;code&gt;USD&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c1e14f7570575032aa9526f131244ad6d8e15c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;colspan&lt;/code&gt; and &lt;code&gt;colSpan&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3876a48e7b7cc4a327f51ade338f5cf525d8aeeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;combineLatest&lt;/code&gt;, &lt;code&gt;concat&lt;/code&gt;, &lt;code&gt;merge&lt;/code&gt;, &lt;code&gt;startWith&lt;/code&gt; , &lt;code&gt;withLatestFrom&lt;/code&gt;, &lt;code&gt;zip&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ff60b681ca9ab0505e05dd8fec8fdce6f8607d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compile&lt;/code&gt;. This will not be supported in Angular.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1618ecf424fe8e358181f5dae98816bd030f9b64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compile&lt;/code&gt;: not supported because the host element is owned by Angular, which does not allow modifying DOM structure during compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86017fec659d000e684f7795358c7a9b00a4c67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;component: &lt;a href=&quot;../../core/type&quot;&gt;Type&lt;/a&gt;&amp;lt;any&amp;gt;&lt;/code&gt;: The type of the Component that will be downgraded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab277cbf235ddc8b4284ed136a019796369b3699" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;component&lt;/code&gt;: the component that the router should create when navigating to this route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e3ce8cf8f6f6b30d96601e5247c1a2150d5413" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;confirmation&lt;/code&gt;, &lt;code&gt;input&lt;/code&gt;, or &lt;code&gt;list&lt;/code&gt; (selected automatically in short form)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3062963b3add2de0b39712839b6fab62615ac4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83db028c715ae4a4814b23bf4cc4b8503ec1620" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;consumed&lt;/code&gt; is an array of the consumed URL segments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db7c0fb550fb8d15f743a1aba495dbce8db3ade9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;controller&lt;/code&gt; and &lt;code&gt;controllerAs&lt;/code&gt;. Components have their own controllers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7b24688baf7d02553a427cfefefe353a8209a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;controller&lt;/code&gt;: supported. (NOTE: injection of &lt;code&gt;$attrs&lt;/code&gt; and &lt;code&gt;$transclude&lt;/code&gt; is not supported.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ff24a833e78462c99f588624c53b6465a52865" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;controllerAs&lt;/code&gt;: supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11d622508fe8ff343f7226f8e56cb0ee063839a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;currencyCode&lt;/code&gt; is the &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_4217&quot;&gt;ISO 4217&lt;/a&gt; currency code, such as &lt;code&gt;USD&lt;/code&gt; for the US dollar and &lt;code&gt;EUR&lt;/code&gt; for the euro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f5347648a477bbdf8dde86b843a46b4f7dca04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;d&lt;/code&gt;: days</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a08d11daacd94f0fad43824f9baf7cf9e68a7da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;debounceTime(300)&lt;/code&gt; waits until the flow of new string events pauses for 300 milliseconds before passing along the latest string. You'll never make requests more frequently than 300ms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b82b5864e4afb8f00827404125654c1208ce75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;debounceTime(500)&lt;/code&gt; - wait for the user to stop typing (1/2 second in this case).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207a9a519e849d5c8777c3951663c454673fb675" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;debounceTime&lt;/code&gt;, &lt;code&gt;distinctUntilChanged&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;take&lt;/code&gt;, &lt;code&gt;takeUntil&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f4ac029fdf8f6f0b833bb1cc14123afb54683d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;declarations&lt;/code&gt;: The &lt;a href=&quot;architecture-components&quot;&gt;components&lt;/a&gt;, &lt;em&gt;directives&lt;/em&gt;, and &lt;em&gt;pipes&lt;/em&gt; that belong to this NgModule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e332f5822c816160a427f1d620d4de4aef875c05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;defaultProject&lt;/code&gt;: Default project name to use in commands, where not provided as an argument. When you use &lt;code&gt;ng new&lt;/code&gt; to create a new app in a new workspace, that app is the default project for the workspace until you change it here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9f7ce5ed92a122a23f3c6de9a833e7b6403ccd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deleteHero()&lt;/code&gt; calls &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#delete&quot;&gt;HttpClient.delete()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6dd31849eeeb66c721938477e0d213158c5639" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;digitInfo&lt;/code&gt; See &lt;a href=&quot;decimalpipe&quot;&gt;&lt;code&gt;DecimalPipe&lt;/code&gt;&lt;/a&gt; for detailed description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b99f6d728535d03de7d02341cdf2b22cda27b10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;digitInfo&lt;/code&gt; is a &lt;code&gt;string&lt;/code&gt; which has a following format:  &lt;code&gt;{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa4191a4cfc2e9691d734c757ba280b923bcd1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directive&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59eb8c3789887162b3beaf645075acdbc57c14e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directiveProperty&lt;/code&gt; specifies the component property that emits events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8cbac0f3423195d59ec2f253768c64dfe1e5c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;directiveProperty&lt;/code&gt; specifies the component property where the value is written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984ed0f81cc1f6a63aa1d5f70b5218d9e7951ad4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;distinctUntilChanged()&lt;/code&gt; - wait until the search text changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c752e400a0e78f2f1acc448f36ed8bc7b8d9c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;distinctUntilChanged()&lt;/code&gt; ensures that a request is sent only if the filter text changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7260386ea7423807783a8ceb9c1b8864212f5121" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;downgradedModule?: string&lt;/code&gt;: The name of the downgraded module (if any) that the component &quot;belongs to&quot;, as returned by a call to &lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt;. It is the module, whose corresponding Angular module will be bootstrapped, when the component needs to be instantiated.  (This option is only necessary when using &lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; to downgrade more than one Angular module.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32074cff87b01d7acd641e085213437d41ef5e8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;element-name&lt;/code&gt;: Select by element name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf767b54fd713a4efc3c6cbddb260b08e2fead0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitEvent&lt;/code&gt;: When true or not supplied (the default), both the &lt;code&gt;statusChanges&lt;/code&gt; and &lt;code&gt;valueChanges&lt;/code&gt; observables emit events with the latest status and value when the control is disabled. When false, no events are emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3da5c91326394a315c7a55006641bc882e1e8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitEvent&lt;/code&gt;: When true or not supplied (the default), both the &lt;code&gt;statusChanges&lt;/code&gt; and &lt;code&gt;valueChanges&lt;/code&gt; observables emit events with the latest status and value when the control is enabled. When false, no events are emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478085925be393aba7765ee821196dd0248d70e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitEvent&lt;/code&gt;: When true or not supplied (the default), both the &lt;code&gt;statusChanges&lt;/code&gt; and &lt;code&gt;valueChanges&lt;/code&gt; observables emit events with the latest status and value when the control is reset. When false, no events are emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04a8b4e7f6d5dcc3650b23e78e3836e489cf392" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitEvent&lt;/code&gt;: When true or not supplied (the default), both the &lt;code&gt;statusChanges&lt;/code&gt; and &lt;code&gt;valueChanges&lt;/code&gt; observables emit events with the latest status and value when the control is reset. When false, no events are emitted. The configuration options are passed to the &lt;a href=&quot;abstractcontrol#updateValueAndValidity&quot;&gt;updateValueAndValidity&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08fe7c7bbf7f09fd6cd4dae09278b1f68c7e0a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitEvent&lt;/code&gt;: When true or not supplied (the default), both the &lt;code&gt;statusChanges&lt;/code&gt; and &lt;code&gt;valueChanges&lt;/code&gt; observables emit events with the latest status and value when the control is updated. When false, no events are emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5c0bd8624035236ccd8b910c27683ff60f47f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitEvent&lt;/code&gt;: When true or not supplied (the default), both the &lt;code&gt;statusChanges&lt;/code&gt; and &lt;code&gt;valueChanges&lt;/code&gt; observables emit events with the latest status and value when the control value is updated. When false, no events are emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f368666507e63f99d0ef1410cc88d00815c80ed1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitEvent&lt;/code&gt;: When true or not supplied (the default), both the &lt;code&gt;statusChanges&lt;/code&gt; and &lt;code&gt;valueChanges&lt;/code&gt; observables emit events with the latest status and value when the control value is updated. When false, no events are emitted. The configuration options are passed to the &lt;a href=&quot;abstractcontrol#updateValueAndValidity&quot;&gt;updateValueAndValidity&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9b27a4eacf2113f790f453b05c2476a3dcb8b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitEvent&lt;/code&gt;: When true or not supplied (the default), the &lt;code&gt;statusChanges&lt;/code&gt; observable emits an event with the latest status the control is marked pending. When false, no events are emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fca3ee2de8f23f1e4bb00133fe9919e8ce230fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitModelToViewChange&lt;/code&gt;: When true or not supplied (the default), each change triggers an &lt;code&gt;onChange&lt;/code&gt; event to update the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8eecee148663da6cc44de6aad85f6292fa3db2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitViewToModelChange&lt;/code&gt;: When true or not supplied (the default), each change triggers an &lt;code&gt;ngModelChange&lt;/code&gt; event to update the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e628c9a92651ad74a7d614dbecf5d14e1db47d45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;entryComponents&lt;/code&gt; and the compiler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48cd8a1eb0de7b3c8ccb7d3f4b8f0aab446953b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enum&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb582ef09f458005136497a0490f175a19fd1c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exports&lt;/code&gt;: The subset of declarations that should be visible and usable in the &lt;em&gt;component templates&lt;/em&gt; of other NgModules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e606f128cd0ccef6573a8e883e9a85103ef40af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expression&lt;/code&gt; is a date object or a number (milliseconds since UTC epoch) or an ISO string (&lt;a href=&quot;https://www.w3.org/TR/NOTE-datetime&quot;&gt;https://www.w3.org/TR/NOTE-datetime&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95c2b8d2de2e0dd96838243f44c4cf8cbfca254" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; - same as 'legacy_disabled'. @deprecated since v4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94d69cf9ca890c842874fee48fa4ad03d8cd19e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; - same as &lt;code&gt;legacy_disabled&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f2977ec6da4718e49b746a393d0528f2708e46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;(default): use code (e.g. &lt;code&gt;USD&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56f10ef5fed4bf5f3d118ad15f71289bf7cefac5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;favicon.ico&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4bdc13bd7bd80a23642620408d0f81851ce4f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;files&lt;/code&gt; lists patterns that match files in the distribution directory. These can be single files or glob-like patterns that match a number of files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90014fb638e7d2782f1aba693043a81118b94ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;first: boolean&lt;/code&gt;: True when the item is the first item in the iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4709c4148fd53bd47c1a74f0e23acb1cbeb7a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forChild&lt;/code&gt; creates a module that contains all the directives and the given routes, but does not include the router service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047252cd8a5ff4e572370974f457f98cf0b64184" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forRoot&lt;/code&gt; creates a module that contains all the directives, the given routes, and the router service itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff6b50cba475aecf666534cf482674307d4cf97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt; indicates which date/time components to include. The format can be predefined as shown below or custom as shown in the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23779a1b8f7f0d4f97e92a9ce114307a095cf3c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;freshness&lt;/code&gt; optimizes for currency of data, preferentially fetching requested data from the network. Only if the network times out, according to &lt;code&gt;timeout&lt;/code&gt;, does the request fall back to the cache. This is useful for resources that change frequently; for example, account balances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56f5e69842012588dc7ed4cd3d3f20513b0d77f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from(iterable)&lt;/code&gt;&amp;mdash;Converts its argument to an &lt;code&gt;Observable&lt;/code&gt; instance. This method is commonly used to convert an array to an observable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8ee192a28d4ebf3852dc5d279edba01514290a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from&lt;/code&gt;,&lt;code&gt;fromEvent&lt;/code&gt;, &lt;code&gt;of&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe45d23f684b15638587a600e466d7276009066" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94aab1ca6af3e39c0f35c43e8f5d1891cf017251" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getHero()&lt;/code&gt; constructs a request URL with the desired hero's id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d62017d1ddf9dfdba7918517c7a109d5138b001" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getHero()&lt;/code&gt; returns an &lt;code&gt;Observable&amp;lt;Hero&amp;gt;&lt;/code&gt; (&quot;&lt;em&gt;an observable of Hero objects&lt;/em&gt;&quot;) rather than an observable of hero &lt;em&gt;arrays&lt;/em&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2163d994e77d626aeb32d81c707f9669b8a376d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;glob&lt;/code&gt;: A &lt;a href=&quot;https://github.com/isaacs/node-glob/blob/master/README.md&quot;&gt;node-glob&lt;/a&gt; using &lt;code&gt;input&lt;/code&gt; as base directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9203b795f1a5448d42ee0c2a23ee62080a77d7bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;h&lt;/code&gt;: hours</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f86af6252098247335ffeefed3bef7e56feb1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;header&lt;/code&gt; - seen in the header of a tab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b4aa465854e2343a933d97f89dc00f47ee52bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;header&lt;/code&gt;- the header of the code listing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4fc919a194b119ef291a86170a1870c3a59a4ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hero&lt;/code&gt; - the data to POST in the body of the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a8f4fc417199f1911c000e01cf1b15865fe04b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hero&lt;/code&gt; holds the current hero object for each iteration through the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66f4b100a5340130d450890532c2598e6f6db11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;heroes&lt;/code&gt; holds the mock heroes list from the &lt;code&gt;HeroesComponent&lt;/code&gt; class, the mock heroes list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a307e1fb3ebd8b4343d228f83ba28fbd7fc1462" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hidden&lt;/code&gt; - defined and set true if this is a guide page that should &lt;em&gt;not&lt;/em&gt; be displayed in the navigation panel. Rarely needed, it is a way to hide the page from navigation while making it available to readers who should know about it. &lt;em&gt;This&lt;/em&gt; &quot;Authors Style Guide&quot; is a hidden page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7496ea205ac47bc12f5568e04b4cb2f672033e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hideCopy&lt;/code&gt;- hides the copy button</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac46d7300b5cd1e396ac9617440194bc2516185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;httpOptions&lt;/code&gt; - the method options which, in this case, &lt;a href=&quot;http#adding-headers&quot;&gt;specify required headers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff52e80ea82f1f5d78e21fd87b31819968ab229" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i18n&lt;/code&gt; is a custom attribute, recognized by Angular tools and compilers. After translation, the compiler removes it. It is not an Angular directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60328f60ea5ba7d8a36d124223ccd7d99c3f747a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i18nFile&lt;/code&gt;: the path to the translation file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f03f406728a2d321c9eabcec451958cd5e172f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i18nFormat&lt;/code&gt;: the format of the translation file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dccae092c8848ac376a8aa07cd574f969c5a660" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i18nLocale&lt;/code&gt;: the locale id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e49f43f55a2c230078902ebdd2f2293f9fa6608" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignore&lt;/code&gt;: A list of globs to exclude.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2822bdafec74bba0d349bf46863500ccc012ab15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imports&lt;/code&gt;: Other modules whose exported classes are needed by component templates declared in &lt;em&gt;this&lt;/em&gt; NgModule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa3535bfbe686960f02fb48c43f7cd7429ab59a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index.html&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5a75a7e1987e4d5d2512734c8fd8a4579688dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index: number&lt;/code&gt;: The index of the current item in the iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f09f88e053c44d395fd27d2f581cde3b3ec788e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initial&lt;/code&gt; - The initial size of the app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab9b12e428433108c9912e74a45dc72a6e1a04d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input&lt;/code&gt;: A path relative to the workspace root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f88cb42dbf80282bcc19254bfe1bb7c2d9eca7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;interface&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e916f4e153229e0e9e59235605fae45e6aba52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;language&lt;/code&gt;- the source code language such as &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;typescript&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/common/jsonpipe&quot;&gt;json&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;sh&lt;/code&gt;. This attribute only works for inline examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c030916dd464b1e17abe6cc867ebe59eb87bac1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;last: boolean&lt;/code&gt;: True when the item is the last item in the iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17dfbef7b304ba0d7f68f860ac8f15a01b51c787" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lazy&lt;/code&gt; does not cache any of the resources up front. Instead, the Angular service worker only caches resources for which it receives requests. This is an on-demand caching mode. Resources that are never requested will not be cached. This is useful for things like images at different resolutions, so the service worker only caches the correct assets for the particular screen and orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c4253fb4a05fcf659605e418fffa39b4136153" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lazy&lt;/code&gt; tells the service worker to not cache those resources. Instead, it treats them as unrequested and waits until they're requested again before updating them. An &lt;code&gt;updateMode&lt;/code&gt; of &lt;code&gt;lazy&lt;/code&gt; is only valid if the &lt;code&gt;installMode&lt;/code&gt; is also &lt;code&gt;lazy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6301dfe56dbdc7802b771af97eefea226dd79046" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;legacy_disabled&lt;/code&gt; - The initial navigation is not performed. The location listener is set up after the root component gets created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77739a1987006fd5403fd495ccaf755e37e2a205" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;legacy_enabled&lt;/code&gt; - Default for compatibility. The initial navigation starts after the root component has been created, but the bootstrap is not blocked until the initial navigation is complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43059916312e98b8aed2248832d7d6dab7bba0fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let customer&lt;/code&gt;, or a template reference variable, &lt;code&gt;#customerInput&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea858ad96e08678c125567aad19fe0062e7be92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;linenums&lt;/code&gt; - overrides the &lt;code&gt;linenums&lt;/code&gt; property at the &lt;code&gt;code-tabs&lt;/code&gt; level for this particular pane. The value can be &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; or a number indicating the starting line number. If not specified, it defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd86f86825d6580a9b56dc328efe7938ab241d68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;linenums&lt;/code&gt;- value may be &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, or a &lt;code&gt;number&lt;/code&gt;. When not specified, line numbers default to &lt;code&gt;false&lt;/code&gt; (i.e. no line numbers are displayed). The rarely used &lt;code&gt;number&lt;/code&gt; option starts line numbering at the given value. &lt;code&gt;linenums=4&lt;/code&gt; sets the starting line number to 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97e7b1f7bdadc84270f35636ff6bc10f47a2110" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;linenums&lt;/code&gt;: The value can be &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; or a number indicating the starting line number. If not specified, it defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562e505b10dade94c7ae91c985d4aa99fe05df3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;link&lt;/code&gt;: supported. (NOTE: only pre-link function is supported.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da4227eab396a27b6cd45996640d9a4ecbc9fa8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loadChildren&lt;/code&gt; string syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa6d1bf69920052157f242b4626efb0c0a1a05c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;m&lt;/code&gt;: minutes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5bb8bed1430404de3c38a1fc9097318aaa664c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxFractionDigits&lt;/code&gt; is the maximum number of digits after fraction. Defaults to &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c8c47e3367b372d4153edf2a56665f2f54167b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxFractionDigits&lt;/code&gt;: The maximum number of digits after the decimal point. Default is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310229f0aee67e6dd16d79fabf13ce61b6b73af5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxFractionDigits&lt;/code&gt;: The maximum number of digits after the decimal point. Default is &lt;code&gt;2&lt;/code&gt;. If not provided, the number will be formatted with the proper amount of digits, depending on what the &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_4217&quot;&gt;ISO 4217&lt;/a&gt; specifies. For example, the Canadian dollar has 2 digits, whereas the Chilean peso has none.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ff228326ff629e3dbe373d042001bff279fe99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxFractionDigits&lt;/code&gt;: The maximum number of digits after the decimal point. Default is &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6caa85dcafdb4381c1e9ef73f7719e8e0fcf5036" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;merge&lt;/code&gt; : Merge new with current parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f79c178f83e518a4723ed1dcecbc03cecb7ce7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minFractionDigits&lt;/code&gt; is the minimum number of digits after fraction. Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce56c8db052ebb8fe6faa85745e2be1ea0c140ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minFractionDigits&lt;/code&gt;: The minimum number of digits after the decimal point. Default is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4146ab8a174107482970a7e99367f14e64bb867d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minFractionDigits&lt;/code&gt;: The minimum number of digits after the decimal point. Default is &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3ac159b47ac5f1c5d70495c25131ba8bb003e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minIntegerDigits&lt;/code&gt; is the minimum number of integer digits to use. Defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7af2c95c34a84afff08ce8b90fd190bd76f858" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minIntegerDigits&lt;/code&gt;: The minimum number of integer digits before the decimal point. Default is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922c6394878bbd1a1f108130ff96305e14e56793" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;my-app&lt;/code&gt; takes the name of your client application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3bc7348a99d5aa7299c99b6578abafdcafc28bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;my/app/user/123&lt;/code&gt;&lt;strong&gt;is not&lt;/strong&gt; normalized</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e1d95ae0fa3ca6c48bd798c2445aed57880f1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c487586788aa1e540996c26ace3ef5f316d17717" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&amp;lt;string&amp;gt;()&lt;/code&gt;&amp;mdash;tells Angular to create a new event emitter and that the data it emits is of type string. The type could be any type, such as &lt;code&gt;number&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt;, and so on. For more information on &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt;, see the &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter API documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e7df24278f62001abb8adb94c5ee75a46c629f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;newItemEvent&lt;/code&gt;&amp;mdash;the name of the &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d079a0b4814853da71d19fcce2290377843df4c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;newProjectRoot&lt;/code&gt;: Path where new projects are created. Absolute or relative to the workspace folder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c8c4a0593c02463a204cb13400ed6f503c71e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-model&lt;/code&gt; is controlled by AngularJS and communicates with the downgraded Angular component by way of the &lt;code&gt;&lt;a href=&quot;../forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; interface from @angular/forms. Only components that implement this interface are eligible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cefcf17c68ded7382461fef6fcd1abc8a0ba2e7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng&lt;/code&gt;&lt;em&gt;commandNameOrAlias&lt;/em&gt;&lt;em&gt;requiredArg&lt;/em&gt; [&lt;em&gt;optionalArg&lt;/em&gt;] &lt;code&gt;[options]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45f49adc73c246bc8acc10c0225f8e391df6b6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngAfterContentChecked&lt;/code&gt;: After every check of component content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f1a90405b0261fcd6765b0f7320ccde4444968f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngAfterContentInit&lt;/code&gt;: After component content initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ac4b43e4ccd5b71c3fb21c18ff828069c2766d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngAfterViewChecked&lt;/code&gt;: After every check of a component's views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbc1d56cb494a79916232d1fc6238683cf4ee8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngAfterViewInit&lt;/code&gt;: After a component's views are initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe676f35825dc492c735a75fc303938db9c8c121" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngDoCheck&lt;/code&gt;: Developer's custom change detection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d76deb8a8467a5ed5cc3e308d59a2da27bcd74c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngForm&lt;/code&gt; element selector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8c9863b097c5a6439cf027d850e65e326f8575" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngModel&lt;/code&gt; with reactive forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f395eb14bfa2b51d4d59399a6cda65024134e1fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngModule&lt;/code&gt;: in this example, the &lt;code&gt;GreetingModule&lt;/code&gt; class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8fd5672f83ea7b0cc8e2c0d44cb45ce1f275c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngOnChanges&lt;/code&gt;: When an &lt;a href=&quot;glossary#input&quot;&gt;input&lt;/a&gt;/&lt;a href=&quot;glossary#output&quot;&gt;output&lt;/a&gt; binding value changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d97017998b8ce4e037ebba4b7b0f43d573092a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngOnDestroy&lt;/code&gt;: Just before the directive is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba021b4f7f03303f57a1936dcc1fb9670a9fb17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngOnInit&lt;/code&gt;: After the first &lt;code&gt;ngOnChanges&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370760a92de86f3e976060925842886409effa15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngmodule&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e5c940743c63597e44ac6698a1727050dd0284" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noImplicitAny&lt;/code&gt; and &lt;code&gt;suppressImplicitAnyIndexErrors&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58942b12d57fceb86aaa35f375ab7cd18d8511d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;npm start&lt;/code&gt; fails in &lt;em&gt;Bash for Windows&lt;/em&gt; in versions earlier than the Creator's Update (April 2017).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1168d8088ce7429129123cc2789745847bd70f00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt;: A validator function that returns an error map with the merged error maps of the validators if the validation check fails, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="546cd4d30393c16e31ee514c6e30a4a3ef883c7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt;: A 0-based offset into the duration, in milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db969632d6c7c0694b4efe3a51de274ca1678999" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt;: The 0-based index of the view's position in this container, or &lt;code&gt;-1&lt;/code&gt; if this container doesn't contain the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8620e05f5ab4ecbfdfd3cfa78c312b6b32a54bf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt;: The number of decimal digits, typically 0 or 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4151b6d35b1038968f0e50e8272abcad7d8eb69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt;: The simulated time elapsed, in millis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6257c4fcb4c9741bb0f9547c7815712cd1401e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;of(...items)&lt;/code&gt;&amp;mdash;Returns an &lt;code&gt;Observable&lt;/code&gt; instance that synchronously delivers the values provided as arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369e03850d25d2f8b753ad244ee87e080fff9983" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;of(HEROES)&lt;/code&gt; returns an &lt;code&gt;Observable&amp;lt;Hero[]&amp;gt;&lt;/code&gt; that emits &lt;em&gt;a single value&lt;/em&gt;, the array of mock heroes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa725f3cad9c9ce52c2e08c61d4b5add616c808" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onlySelf&lt;/code&gt;: When true, each change only affects this control and not its parent. Default is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04bc5eba5b4535fc49c7a6a053beeeb5e02bd34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onlySelf&lt;/code&gt;: When true, each change only affects this control, and not its parent. Default is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c6724c667b852b536869d2695e536749b5fa04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onlySelf&lt;/code&gt;: When true, mark only this control. When false or not supplied, marks all direct ancestors. Default is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1392560d983f1115d6778f485a19474e01c8c17d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onlySelf&lt;/code&gt;: When true, mark only this control. When false or not supplied, marks all direct ancestors. Default is false..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5401b81121c502c1ffb99d1d1624b3ff2ebea4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onlySelf&lt;/code&gt;: When true, only update this control. When false or not supplied, update all direct ancestors. Default is false..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517dca98ae31db0e3e97e62a914e964f5ce04d64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output&lt;/code&gt;: A path relative to &lt;code&gt;outDir&lt;/code&gt; (default is &lt;code&gt;dist/&lt;/code&gt;&lt;em&gt;project-name&lt;/em&gt;). Because of the security implications, the CLI never writes files outside of the project output path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b722c6ac3a1c083d6b8bdd9f63fcad17c5a3909" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;package&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2dea3825b55c116cf7ab2fbd0690015ab354a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;paramMap&lt;/code&gt; returns an &lt;code&gt;Observable&lt;/code&gt; that can emit more than one value during a test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e19d4a896f759f441c895290f8147b178a611f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;paramsOrQueryParamsChange&lt;/code&gt; : Run when query parameters change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26aea518dc7d3f66f8a62c3b1785d82d5f923fb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; - a file in the content/examples folder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24390f57a234c9afc923e92e407e9eac1137e6fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;- the path to the file in the &lt;code&gt;content/examples&lt;/code&gt; folder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f7f90bba65ab93ce6a94ea05115dfd1affc432d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;: a string that matches the URL in the browser address bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469b73f7b6d81438e653fe538a2c874ddd01c68e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;performance&lt;/code&gt;, the default, optimizes for responses that are as fast as possible. If a resource exists in the cache, the cached version is used, and no network request is made. This allows for some staleness, depending on the &lt;code&gt;maxAge&lt;/code&gt;, in exchange for better performance. This is suitable for resources that don't change often; for example, user avatar images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd4a32866311faa0bf1b4248f9b635cefbd9fb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pipe&lt;/code&gt;&lt;code&gt;impure&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5c47dca97984fe774986e3650ec8229a1c4b91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;popup.component.ts&lt;/code&gt; defines a simple pop-up element that displays an input message, with some animation and styling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf9d3fffc89fee58ecd6bcfc23f61c2a565fee1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;popup.service.ts&lt;/code&gt; creates an injectable service that provides two different ways to invoke the PopupComponent; as a dynamic component, or as a custom element. Notice how much more setup is required for the dynamic-loading method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19394267ae5c300988bc73d2eece52917fc172b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;posParams&lt;/code&gt; is a map of positional parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaff4ae7bf0182fdef047f6b2889d906dcec4e6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prefetch&lt;/code&gt; tells the Angular service worker to fetch every single listed resource while it's caching the current version of the app. This is bandwidth-intensive but ensures resources are available whenever they're requested, even if the browser is currently offline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb06c575f03ee3d4fd511ef1622a5c0ab9f023cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prefetch&lt;/code&gt; tells the service worker to download and cache the changed resources immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5da769d9bc4728f145664190a6d966e4ad14800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prefix&lt;/code&gt; and naked &lt;code&gt;expression&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5796f639d3531c5775721f4332dd1b3a66ae22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;preserve&lt;/code&gt; : Preserve current parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4d6764b69b5cc29d2da93c674b239d926f6dbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;priority&lt;/code&gt; and &lt;code&gt;terminal&lt;/code&gt;. While AngularJS components may use these, they are not used in Angular and it is better not to write code that relies on them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50451c3b65b276a1784f5064a86de5269060013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;priority&lt;/code&gt;: ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44759221d85b4888680488a0a86926898a009e06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;projects&lt;/code&gt; : Contains a subsection for each project (library or application) in the workspace, with the per-project configuration options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0490d6c4ba3558d7e1cc13e7311c8523d1f51f8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;propagateDigest?: boolean&lt;/code&gt;: Whether to perform &lt;a href=&quot;../../core/changedetectorref#detectChanges&quot;&gt;change detection&lt;/a&gt; on the component on every &lt;a href=&quot;https://docs.angularjs.org/api/ng/type/%24rootScope.Scope#%24digest&quot;&gt;$digest&lt;/a&gt;. If set to &lt;code&gt;false&lt;/code&gt;, change detection will still be performed when any of the component's inputs changes. (Default: true)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7471d7d8ecd167652ae86c117b2b9d263998e4d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;provideParent()&lt;/code&gt; helper function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a09a985d2e274b365f1e469836ed70e4db51334" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;providers&lt;/code&gt; vs. &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6933eb60f058694dfa4d5d6ca58bf5c6edaf84ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;providers&lt;/code&gt;: An array of &lt;a href=&quot;glossary#provider&quot;&gt;providers&lt;/a&gt; for services that the component requires. In the example, this tells Angular how to provide the &lt;code&gt;HeroService&lt;/code&gt; instance that the component's constructor uses to get the list of heroes to display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68823d80da7964ba1e4e766121d1e779aa9e3173" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;providers&lt;/code&gt;: Creators of &lt;a href=&quot;architecture-services&quot;&gt;services&lt;/a&gt; that this NgModule contributes to the global collection of services; they become accessible in all parts of the app. (You can also specify providers at the component level, which is often preferred.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cedad40121ea0769436ca28f4dfb11b20dc5df7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;providers&lt;/code&gt;: the configured providers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3b99ba5f6f67aa2fc884414e27254d4ade0aed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;region&lt;/code&gt;- displays the source file fragment with that region name; regions are identified by &lt;em&gt;docregion&lt;/em&gt; markup in the source file, as explained &lt;a href=&quot;docs-style-guide#region&quot;&gt;below&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbc3df537c252434b3e4e092270cba867b80aa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;registerImmediately&lt;/code&gt;: Register immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38afa64cc3e9c3a30f5d3059255739112fc6aa16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;registerWhenStable&lt;/code&gt;: Register as soon as the application stabilizes (no pending micro-/macro-tasks).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002548787c40427b6859a51755fd46c57319f80b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;registerWithDelay:&amp;lt;timeout&amp;gt;&lt;/code&gt;: Register with a delay of &lt;code&gt;&amp;lt;timeout&amp;gt;&lt;/code&gt; milliseconds. For example, use &lt;code&gt;registerWithDelay:5000&lt;/code&gt; to register the ServiceWorker after 5 seconds. If &lt;code&gt;&amp;lt;timeout&amp;gt;&lt;/code&gt; is omitted, is defaults to &lt;code&gt;0&lt;/code&gt;, which will register the ServiceWorker as soon as possible but still asynchronously, once all pending micro-tasks are completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6256ce300fad77012d2e39962359ed6c392910c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replace: true&lt;/code&gt;. Angular never replaces a component element with the component template. This attribute is also deprecated in AngularJS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc17f4410a0d0dbfa66004668f05c785e712b9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replace&lt;/code&gt;: not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20ff245cdac0904f583989b170168ce70e2fcd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require&lt;/code&gt;, if the component needs to communicate with some parent component's controller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5494d2b50ecc5c66bf821224814b6f073cfee3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require&lt;/code&gt;: supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317d31a209bb581f76d623e31c0a86f2503908ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;restrict: 'E'&lt;/code&gt;. Components are usually used as elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0581b7eead4efc39f5963320ba4c689c3a81a344" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;restrict&lt;/code&gt;: must be set to 'E'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc7bcc19e49b8229a00b675a3a9a37a1eb1e45b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;returnValue&lt;/code&gt; (optional) to be passed to the WTF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f5f1466645e3daa435c9f581485f6fc6b563334" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt;: seconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a61e9ff4ef600049d208dedd43b8bc4fba61868" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;schematics&lt;/code&gt; : A set of &lt;a href=&quot;glossary#schematic&quot;&gt;schematics&lt;/a&gt; that customize the &lt;code&gt;ng generate&lt;/code&gt; sub-command option defaults for this workspace. See &lt;a href=&quot;workspace-config#schematics&quot;&gt;Generation schematics&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9ad11377986e9f3dceb9d36b9ec4d33234473d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;selector1, selector2&lt;/code&gt;: Select if either &lt;code&gt;selector1&lt;/code&gt; or &lt;code&gt;selector2&lt;/code&gt; matches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260559789fb0c7799d0787d851e59468e1dd0bc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;selector&lt;/code&gt;&amp;mdash; the component's CSS element selector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61774bacbd137079996f9a4fd68b0ee03b75c821" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;selector&lt;/code&gt;: A CSS selector that tells Angular to create and insert an instance of this component wherever it finds the corresponding tag in template HTML. For example, if an app's HTML contains &lt;code&gt;&amp;lt;app-hero-list&amp;gt;&amp;lt;/app-hero-list&amp;gt;&lt;/code&gt;, then Angular inserts an instance of the &lt;code&gt;HeroListComponent&lt;/code&gt; view between those tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a65a1e929568e36c402a1784f5d8e6d3c7ad80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;server-app&lt;/code&gt; takes the name of the Universal (or server) application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4314df5ba3785cdae96e3bdb9758a1922c136587" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setValue&lt;/code&gt; for options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ecda0af49fea9a35f5c30965957720e4beae8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src/app/&lt;/code&gt; FILES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3896cde7961fc16aeb18de2b808617f6f2424cb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt;, &lt;code&gt;hero&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/common/ngclass&quot;&gt;ngClass&lt;/a&gt;&lt;/code&gt; in the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce508ec8b9704c33f7160f84d323a2e80494c8de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string | null&lt;/code&gt;: The currency name, or &lt;code&gt;null&lt;/code&gt; if the main country cannot be determined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521c792176650c7f352acacea2a9e511b2148bac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string | null&lt;/code&gt;: The first value of the given parameter, or &lt;code&gt;null&lt;/code&gt; if the parameter is not present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ac2b60df7a9570747979d3d7cb195c49943e5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string | null&lt;/code&gt;: The localized symbol character, or &lt;code&gt;null&lt;/code&gt; if the main country cannot be determined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbac7bbbc5f97a6bc8f408bc4d39a7890322ab42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string | null&lt;/code&gt;: The parameter's single value, or the first value if the parameter has multiple values, or &lt;code&gt;null&lt;/code&gt; when there is no such parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f036f239b1395e90d9400b9221be8ec051cabb9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string | null&lt;/code&gt;: The value string if the header exists, null otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad64e06e2a0c640b208a87481debd9a90fa7803e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; - the CSS classes listed in the string (space delimited) are added,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06c2e9ffcbfe0d15401f24263bbc32c34a4d1b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: A normalized platform-specific URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faefe044604198bf6c9b9c79790189f34d54165a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The URL string, modified if needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27edcb405cd529800890d92ff4ea83d965380e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The character for the localized symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a400aa12c0003223fee6c8c56c712b2e4a79276d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The decoded key name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c976c65354c43974803e3b387cb2f4d83712247" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The encoded key name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a7b6890b05f461ded02ce2ae03b8431bad12b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The encoded value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d801d10e5fceac2562f9ddc31d3c4cd68ed5acf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The formatted currency value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16045e1e59e01a396e77e7ba5230ce7ed2740578" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The formatted date string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5194f22e1a11efa6c0a915afcb7c61c8c4013736" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The formatted percentage value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54797310ef237c8ab3444889028ea0c2037f59c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The formatted text string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce24a717787e670916e5b453b6b13293a5775c5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The joined URL string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4629777354f6ddf5aff09371d271094611afce88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The locale code. For example, &lt;code&gt;fr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c71217f87256f7dded392202faac3ff3c2c6a73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The localized format string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c2a6b00707a45e58224f0c33e0f81f344e4f192" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The localized formating string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289a987d7eaec8aa953ac0ab72dff98216a23cb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The localized formatting string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8e85c7404d4e09b7188adc258198c98090ef1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The normalized URL parameters string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b30650f38a98f40ab452347f72dacd4ff52a6e10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The normalized URL path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef1f0561847ab7a4e922e31f161f3fd6ac9e39c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The normalized URL string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2e2cb8378cd0d48f6d50afe2698d6d3ae738fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The symbol, or the currency code if no symbol is available.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ac7f17301098b16591445dbade4885b90e4cf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string[] | null&lt;/code&gt;: A string of values if the header exists, null otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ceb59e3d43cd584cbd221c5c804f668f947c97a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string[] | null&lt;/code&gt;: All values in a string array, or &lt;code&gt;null&lt;/code&gt; if the parameter not present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4129d935a46748d37e7b5e74bfa8c746812fa007" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string[]&lt;/code&gt;: A list of header names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6512426881d73ba740935e93657aa9c369fdd9ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string[]&lt;/code&gt;: An array containing one or more values, or an empty array if there is no such parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2ad1c66a00eefe92923ce4dc789213d4244d0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string[]&lt;/code&gt;: An array of localized name strings. For example, &lt;code&gt;[January, February, ...]&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e84552a3a9c083caf8b161028b0ef7618a2c602" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string[]&lt;/code&gt;: An array of localized name strings. For example,&lt;code&gt;[&lt;a href=&quot;weekday#Sunday&quot;&gt;Sunday&lt;/a&gt;, &lt;a href=&quot;weekday#Monday&quot;&gt;Monday&lt;/a&gt;, ... &lt;a href=&quot;weekday#Saturday&quot;&gt;Saturday&lt;/a&gt;]&lt;/code&gt; for &lt;code&gt;en-US&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b731a90d53b3421ff8069dc7b07a093d1d8c17a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string[]&lt;/code&gt;: The parameter names in a string array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c3c3348fa498098f69d1ae90b99210ac58a00e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string[]&lt;/code&gt;: The translated day-period strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766dc2314e107ed5684d8f52eb3dc720140ad927" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;switchMap()&lt;/code&gt; - send the search request to the service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2f0c4c739e6653c54346fd60ce098850a3c782" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;switchMap()&lt;/code&gt; calls the search service for each search term that makes it through &lt;code&gt;debounce()&lt;/code&gt; and &lt;code&gt;distinctUntilChanged()&lt;/code&gt;. It cancels and discards previous search observables, returning only the latest search service observable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09367d6df77166cb2077e553536821d50ab50af5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;switchMap()&lt;/code&gt; preserves the original request order while returning only the observable from the most recent HTTP method call. Results from prior calls are canceled and discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ada8458615683ef953913d1eb7c68a0bfa58630" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symbol-narrow&lt;/code&gt;: Use the narrow symbol for locales that have two symbols for their currency. For example, the Canadian dollar CAD has the symbol &lt;code&gt;CA$&lt;/code&gt; and the symbol-narrow &lt;code&gt;$&lt;/code&gt;. If the locale has no narrow symbol, uses the standard symbol for the locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a300f527a079aa7e12949706a5884b428ea8b77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symbol&lt;/code&gt;(default): Show the symbol (such as &lt;code&gt;$&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff262212485f2499354ad0d51d35e06c679e3e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symbolDisplay&lt;/code&gt; is a boolean indicating whether to use the currency symbol or code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd5dd14b47b2a3b4a0078eaf950f741fd2a11f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template&lt;/code&gt; or &lt;code&gt;templateUrl&lt;/code&gt;. Components have their own templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1866bccde210f5b88a9572d41ff2551598cc9022" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template&lt;/code&gt;: supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9974cfe8e098dcb4ca1e4e14ea9c5bb3a66462" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;templateUrl&lt;/code&gt;&amp;mdash; the location of the component's template file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d02ba20bc5d7f321905f284e140f99d5aaa2dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;templateUrl&lt;/code&gt;: The module-relative address of this component's HTML template. Alternatively, you can provide the HTML template inline, as the value of the &lt;code&gt;template&lt;/code&gt; property. This template defines the component's &lt;em&gt;host view&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39aa23114bbbbcfec2db63bee9cd92d5d3c47ee6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;templateUrl&lt;/code&gt;: supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c76e85910da3856eb5952c822f0b6fd97448b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;terminal&lt;/code&gt;: ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06d77326cd0bca250ebf62c45d57479014d4ca2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;title&lt;/code&gt;- the text displayed in the side nav.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585b1d7f5e808d05bcc6dd7f6e5fd065b5d51722" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tooltip&lt;/code&gt; - text that appears when the reader hovers over the navigation link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168b1734c412f11369f2307da529b415ea1c2cf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transclude: true/{}&lt;/code&gt;, if the component needs to transclude content from elsewhere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36791a6d5b8f7b9c9d866dfedae5d2b614e29a2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transclude&lt;/code&gt;: supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858a81b35724973be837df09606a200bd71f2114" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; - same as 'legacy_enabled'. @deprecated since v4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4f2c4e2f3e4ba12471aa897a0d19fc314c49b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; - same as &lt;code&gt;legacy_enabled&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebb4317a2660f32adcc60a8f4821f12c5d4bf0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt;: use symbol (e.g. &lt;code&gt;$&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882041f58c61297d3bc52474672369483f237e67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type-alias&lt;/code&gt;&lt;code&gt;deprecated&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9afd6eb9f08515ab7057112db91e817d804703" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u&lt;/code&gt;: milliseconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d47669348fafc864662f56602085697fa9dbe3b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unknown&lt;/code&gt;: The current value of the &lt;code&gt;history.state&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a4fef935f67bacb3d3b4135d13ff983e552636" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;updateOn&lt;/code&gt;: The event upon which the control should be updated (options: 'change' | 'blur' | submit')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff47a013ae2594fc049a47bd77e20b3bcd43a753" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt;- the URL of the guide page (&lt;em&gt;item node only&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efda235cea7f63d42e4bda5a12503a793a63fee7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urls&lt;/code&gt; includes both URLs and URL patterns that will be matched at runtime. These resources are not fetched directly and do not have content hashes, but they will be cached according to their HTTP headers. This is most useful for CDNs such as the Google Fonts service. &lt;em&gt;(Negative glob patterns are not supported and &lt;code&gt;?&lt;/code&gt; will be matched literally; i.e. it will not match any character other than &lt;code&gt;?&lt;/code&gt;.)&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc3a481cb6888675704d9c4ec426106f17b7a26f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;validator&lt;/code&gt;: A synchronous validator function, or an array of validator functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07234964ac5da10250991e3e71936781cd2d43e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt; is an integer field and defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2b59157459f0abd6f9f22ecc2904e29bccbcbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt; provides a mechanism to indicate that the resources being cached have been updated in a backwards-incompatible way, and that the old cache entries&amp;mdash;those from previous versions&amp;mdash;should be discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a89bdfc7e5d5af32f4f0b48e7211603421072b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt;: The configuration-file version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f245b84ac85765e1d0c161adfb8d1472bdde2df6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;versionedFiles&lt;/code&gt; has been deprecated. As of v6 &lt;code&gt;versionedFiles&lt;/code&gt; and &lt;code&gt;files&lt;/code&gt; options have the same behavior. Use &lt;code&gt;files&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff9520a491753d902f5326c10c313b3c8663725" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;versionedFiles&lt;/code&gt; setting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174243e0335d9ca825e8fc7f900e68dfbf13895c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;void&lt;/code&gt; You can associate styles with this name to be used when the element is detached from the application. For example, when an &lt;code&gt;&lt;a href=&quot;../common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; evaluates to false, the state of the associated element is void.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620b4535b1085c26bc01fdbfa2fab633694ad961" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;void&lt;/code&gt;: Nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58302f93cf5dfc2fa6a821079040533840282a32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;warnOnDeprecatedNgFormSelector&lt;/code&gt; Configures when to emit a warning when the deprecated &lt;code&gt;&lt;a href=&quot;ngform&quot;&gt;ngForm&lt;/a&gt;&lt;/code&gt; selector is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de8ff6c29acbf9182ced076baf14613978acc39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;warnOnNgModelWithFormControl&lt;/code&gt; Configures when to emit a warning when an &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; binding is used with reactive form directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e853d90075df9dcf996497d5e7bb5c72016333" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn docs-watch --watch-only&lt;/code&gt; &amp;mdash; watches for saved content changes and refreshes the browser. The (optional) &lt;code&gt;--watch-only&lt;/code&gt; flag skips the initial docs rebuild.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8de30571be3a9903ef172dfe208206f967100a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yarn setup&lt;/code&gt; &amp;mdash; installs packages; builds docs, stackblitz, and zips.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
