<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="e8a3239000961222e1a51d13b52ce2170d11bf3c" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_currency</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="555aef064435c32aa56c039a2f381ca70e713e6f" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_delimited</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd770bd60283e3854630a4d0d8df6af7bd610ac" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_human</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fea276bc8c34fa1c7fdb9af9f635fa51c1df32c" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_human_size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="163d0b5ad6620cb0466941a558c9a8e6395ad76a" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_percentage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3032cb4f231eabf9b822856e17819cc9c788b1b4" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_phone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6e1785b3fe36f01f15a022f1a3f306675fc079" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_rounded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a62380404b3b267a5c4e21b5e111455d09031e" translate="yes" xml:space="preserve">
          <source>Numeric</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12952380314ef25dafac5a0d3d04de5fd7fb9c09" translate="yes" xml:space="preserve">
          <source>Numeric#byte</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ddc3e9e09e8db25e967665e786a23d0a466a10b" translate="yes" xml:space="preserve">
          <source>Numeric#day</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3c906dfbdea7498b422ab9b53b0b7717f9aafb" translate="yes" xml:space="preserve">
          <source>Numeric#days</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd1ac9a871955b8caf1eb6d97ffd59c4cb670fc" translate="yes" xml:space="preserve">
          <source>Numeric#hour</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b25fa4cb288ad452bbae28d5073d2083b0bf7d1" translate="yes" xml:space="preserve">
          <source>Numeric#week</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65454a128af7fcaafe8438725972801b014cf09f" translate="yes" xml:space="preserve">
          <source>NumericWithFormat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee86027f7732f7a471be8d5533de0f308291513a" translate="yes" xml:space="preserve">
          <source>NumericWithFormat#to_s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af80f83e91cb2acf5105c5c35c83d3f1e00891aa" translate="yes" xml:space="preserve">
          <source>OK! Now let's add a timestamp to the view, so we can demo the &lt;strong&gt;date/time localization&lt;/strong&gt; feature as well. To localize the time format you pass the Time object to &lt;code&gt;I18n.l&lt;/code&gt; or (preferably) use Rails' &lt;code&gt;#l&lt;/code&gt; helper. You can pick a format by passing the &lt;code&gt;:format&lt;/code&gt; option - by default the &lt;code&gt;:default&lt;/code&gt; format is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34925fb12c571f21781ddda3d56ad6f2dbfb5eef" translate="yes" xml:space="preserve">
          <source>OK! Now you've initialized I18n support for your Ruby on Rails application and told it which locale to use and how to preserve it between requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f5ef0a7a41f4b5fa47c99b3d228787fec02b73" translate="yes" xml:space="preserve">
          <source>ONE_AS_ONE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8e5d05306b818cd2c3ac786d2bf461455a0998" translate="yes" xml:space="preserve">
          <source>OPTION_AS_ERROR_MESSAGE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f0a12e44c14fb9d2ef8fa325826433a689af64" translate="yes" xml:space="preserve">
          <source>OR Conditions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6673abff0e25535a62fa142e46784d8906594513" translate="yes" xml:space="preserve">
          <source>ORDER_IGNORE_MESSAGE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8210fd944bd4d72ef2903592cc6cc8d86ecac8c" translate="yes" xml:space="preserve">
          <source>ORIG_ARGV</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce95b74a7293928d321b45eeb0f7c306f65f50ed" translate="yes" xml:space="preserve">
          <source>Obfuscation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad73191edfacc818048e43fbc454750d4108003" translate="yes" xml:space="preserve">
          <source>Object ID of the connection object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42e56fb93a2d54b07af5e3e41ea98848a0a41a5" translate="yes" xml:space="preserve">
          <source>Object Relational Mapping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782f438afdfb9026987c9473bad03c906cfd0f60" translate="yes" xml:space="preserve">
          <source>Object#in?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4577f031b57b33b7448915bf92f1c64db21a412a" translate="yes" xml:space="preserve">
          <source>Object#try</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7179c7e846b1bd1edbe3601ad7107bcadbe4c20" translate="yes" xml:space="preserve">
          <source>Object#try!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dde3eba34db3a98fea0cf0d796447bbd2b08546" translate="yes" xml:space="preserve">
          <source>Objects will &lt;em&gt;always&lt;/em&gt; be removed from the database, ignoring the &lt;code&gt;:dependent&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ca99176e0a69f92635c323c9ee512f8f14ada0" translate="yes" xml:space="preserve">
          <source>Objects will be deleted if they're associated with &lt;code&gt;dependent: :destroy&lt;/code&gt;, just like &lt;code&gt;dependent: :delete_all&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01833b16e8925d797ee8b329aeb71e620190951f" translate="yes" xml:space="preserve">
          <source>Objects you pass in are expected to return a compliant object from a call to &lt;code&gt;to_model&lt;/code&gt;. It is perfectly fine for &lt;code&gt;to_model&lt;/code&gt; to return &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46252b9dc1831ea83a33362e66afebb86d2829cc" translate="yes" xml:space="preserve">
          <source>Observe in the previous example that consecutive separators result in empty arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="693db33a45a855769a9f6c58107b187af35b357a" translate="yes" xml:space="preserve">
          <source>Observers give you access to the email message after it has been sent. An observer class must implement the &lt;code&gt;:delivered_email(message)&lt;/code&gt; method, which will be called after the email is sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d87645b295e2af8697514a4ed7e203d9756fec" translate="yes" xml:space="preserve">
          <source>Observing Emails</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a768711003c1ef2dc5501f4971819a6899578df" translate="yes" xml:space="preserve">
          <source>Observing and Intercepting Mails</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aca28a7f797bbddbbd6a37fd849e0be2ba581ec" translate="yes" xml:space="preserve">
          <source>Obtain a row lock on this record. Reloads the record to obtain the requested lock. Pass an SQL locking clause to append the end of the SELECT statement or pass true for &amp;ldquo;FOR UPDATE&amp;rdquo; (the default, an exclusive row lock). Returns the locked record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4ae6d585a88c7d20f2576d348e9bfc2db75cee" translate="yes" xml:space="preserve">
          <source>Obtaining (checking out) a connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58dee129363861edbe872680dfc6fe4570a8245" translate="yes" xml:space="preserve">
          <source>Obviously, you'll want to be a bit more sophisticated than that, but it's a start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d21c185b8ddd71aeb92646342d282b983be3fe4" translate="yes" xml:space="preserve">
          <source>Occasionally you may need to explicitly eager_load by using &lt;code&gt;Rails
.application.eager_load!&lt;/code&gt; in the setup of your tests -- this might occur if your &lt;a href=&quot;https://stackoverflow.com/questions/25796409/in-rails-how-can-i-eager-load-all-code-before-a-specific-rspec-test&quot;&gt;tests involve multithreading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175826294ba674ea84cf26b6bb6839a682114a0a" translate="yes" xml:space="preserve">
          <source>Occasionally you need to display just a single date component such as a year or a month. Rails provides a series of helpers for this, one for each component &lt;code&gt;select_year&lt;/code&gt;, &lt;code&gt;select_month&lt;/code&gt;, &lt;code&gt;select_day&lt;/code&gt;, &lt;code&gt;select_hour&lt;/code&gt;, &lt;code&gt;select_minute&lt;/code&gt;, &lt;code&gt;select_second&lt;/code&gt;. These helpers are fairly straightforward. By default they will generate an input field named after the time component (for example, &quot;year&quot; for &lt;code&gt;select_year&lt;/code&gt;, &quot;month&quot; for &lt;code&gt;select_month&lt;/code&gt; etc.) although this can be overridden with the &lt;code&gt;:field_name&lt;/code&gt; option. The &lt;code&gt;:prefix&lt;/code&gt; option works in the same way that it does for &lt;code&gt;select_date&lt;/code&gt; and &lt;code&gt;select_time&lt;/code&gt; and has the same default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3bbd9b2013f62289bec19ff77a0ab1e6d379ac" translate="yes" xml:space="preserve">
          <source>Occasionally you will make a mistake when writing a migration. If you have already run the migration, then you cannot just edit the migration and run the migration again: Rails thinks it has already run the migration and so will do nothing when you run &lt;code&gt;rails db:migrate&lt;/code&gt;. You must rollback the migration (for example with &lt;code&gt;rails db:rollback&lt;/code&gt;), edit your migration, and then run &lt;code&gt;rails db:migrate&lt;/code&gt; to run the corrected version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e792bd00a99b3e1f974aa939eaac10eb676be3" translate="yes" xml:space="preserve">
          <source>Of course, calculating timestamps is no fun, so Active Record provides a generator to handle making it for you:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc4010c4ad109e781e24b28c96b213ace81b2b52" translate="yes" xml:space="preserve">
          <source>Of course, if the application eager loads on boot, that is already accomplished. When it does not, it is in practice enough to instantiate the existing types in the database, which in development or test modes is usually fine. One way to do that is to throw this module into the &lt;code&gt;lib&lt;/code&gt; directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4b613f1200debf00104a7d9324fd9bb7922e4b" translate="yes" xml:space="preserve">
          <source>Of course, the Rails boot process also glues together all registered components. For example, the Rails boot process is what uses your &lt;code&gt;config/database.yml&lt;/code&gt; file when configuring Active Record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f92e1f3e6228f262ba831d9d821b07d9bd0ab6" translate="yes" xml:space="preserve">
          <source>Of course, the most common way of specifying a layout is still just as a plain template name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518c11a35f81fb097eea3275505af4254f7da8d6" translate="yes" xml:space="preserve">
          <source>Of course, this example is anything but elaborate and doesn't improve on the default exception handling at all, but once you can catch all those exceptions you're free to do whatever you want with them. For example, you could create custom exception classes that will be thrown when a user doesn't have access to a certain section of your application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33df8426a8a4b2ff3fed3a9cec145eb8ee044bb" translate="yes" xml:space="preserve">
          <source>Of course, using &lt;code&gt;require&lt;/code&gt; in autoloaded files to load ordinary 3rd party libraries is fine, and Rails is able to distinguish their constants, they are not marked as autoloaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccee0e956089abbe7c4e00b4b79e0eefe175e9a6" translate="yes" xml:space="preserve">
          <source>Of course, you can also query them directly if the scopes don't fit your needs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e9f48eed74793bb1697af713aaddf96ce9e867" translate="yes" xml:space="preserve">
          <source>Of course, you can use the more advanced constraints available in non-resourceful routes in this context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b952fd703726662a492bf2933dece70330fa1e" translate="yes" xml:space="preserve">
          <source>Of course, you need to take special care of the root URL (usually &quot;homepage&quot; or &quot;dashboard&quot;) of your application. A URL like &lt;code&gt;http://localhost:3001/nl&lt;/code&gt; will not work automatically, because the &lt;code&gt;root to: &quot;books#index&quot;&lt;/code&gt; declaration in your &lt;code&gt;routes.rb&lt;/code&gt; doesn't take locale into account. (And rightly so: there's only one &quot;root&quot; URL.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2dba64e87728235370f20557710affb44af9dc" translate="yes" xml:space="preserve">
          <source>Official Rack Website</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1d49fae73e799baf2444a358616e40cdcf62fa" translate="yes" xml:space="preserve">
          <source>Official Ruby Programming Language website</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95620979d30f60c5618328e75a5e42f4e93f415d" translate="yes" xml:space="preserve">
          <source>Often this can be simplified by passing just the name of the model object to &lt;code&gt;fields_for&lt;/code&gt; -</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc8dea3503f3da65ac428e919d1bcc1e3dbca07" translate="yes" xml:space="preserve">
          <source>Often, additional reloading actions need to be performed either just before or just after the Class Unload, so the Reloader also provides &lt;code&gt;before_class_unload&lt;/code&gt; and &lt;code&gt;after_class_unload&lt;/code&gt; callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84fafe478eddda3091745c0f9518cebab98a91f" translate="yes" xml:space="preserve">
          <source>Old Migrations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241c63c8293a4785c5d54a58bad0cc5b1e258e85" translate="yes" xml:space="preserve">
          <source>On Active Record models with no &lt;code&gt;:include&lt;/code&gt; or &lt;code&gt;:exclude&lt;/code&gt; option set, it will only wrap the parameters returned by the class method &lt;code&gt;attribute_names&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598560785c247f274acc5c4070fa99bda2929e8b" translate="yes" xml:space="preserve">
          <source>On Linux and macOS no additional gems are needed, but some are required &lt;a href=&quot;https://github.com/guard/listen#on-bsd&quot;&gt;for *BSD&lt;/a&gt; and &lt;a href=&quot;https://github.com/guard/listen#on-windows&quot;&gt;for Windows&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb7e9843bd82c1dece41d7312bfec068efcb57d0" translate="yes" xml:space="preserve">
          <source>On Load hooks are the API that allow you to hook into this initialization process without violating the load contract with Rails. This will also mitigate boot performance degradation and avoid conflicts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872c870642d0d9df40e9bfdbae27a194c26c0aa3" translate="yes" xml:space="preserve">
          <source>On a collection that is ordered using &lt;code&gt;order&lt;/code&gt;, &lt;code&gt;first&lt;/code&gt; will return the first record ordered by the specified attribute for &lt;code&gt;order&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0750b86b4eede7e1e2ca1d1769894bc80255bcf4" translate="yes" xml:space="preserve">
          <source>On a collection that is ordered using &lt;code&gt;order&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt; will return the last record ordered by the specified attribute for &lt;code&gt;order&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2467f7374b9793dc3ba2d4e7642f2c8e5375ca" translate="yes" xml:space="preserve">
          <source>On a development machine you can then have your tests running with whatever is fastest (ideally &lt;code&gt;config.eager_load = false&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44ed84ddb9890ee1584a9f13e6252cda115659d" translate="yes" xml:space="preserve">
          <source>On databases that support transactions with statements that change the schema, migrations are wrapped in a transaction. If the database does not support this then when a migration fails the parts of it that succeeded will not be rolled back. You will have to rollback the changes that were made by hand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4699ab936180f05f03c55b16dc89707b9176ceab" translate="yes" xml:space="preserve">
          <source>On initialization, the &lt;a href=&quot;activemodel&quot;&gt;ActiveModel&lt;/a&gt; accepts the instance name that will receive the calls:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3677477a5da402fcf2a3027549647c384b11c412" translate="yes" xml:space="preserve">
          <source>On pages generated by &lt;code&gt;NewsController&lt;/code&gt;, you want to hide the top menu and add a right menu:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de926fabb5507cf2933e374222b53742ae1be3df" translate="yes" xml:space="preserve">
          <source>On shared hosts, Apache sometimes doesn't pass authentication headers to FCGI instances. If your environment matches this description and you cannot authenticate, try this rule in your Apache setup:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140918e50b4e7ad423def44526255934da360a32" translate="yes" xml:space="preserve">
          <source>On the contrary, if &lt;code&gt;ApplicationController&lt;/code&gt; is unknown, the constant is considered missing and an autoload is going to be attempted by Rails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe29c24a5a157c6c342e90762e65fd621a7bd0ef" translate="yes" xml:space="preserve">
          <source>On the first request the assets are compiled and cached as outlined in development above, and the manifest names used in the helpers are altered to include the SHA256 hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7885ae34fbf360b8d8a78a1dba62e8f9926afe" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;code&gt;advance&lt;/code&gt; and &lt;code&gt;change&lt;/code&gt; are also defined and support more options, they are documented below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb58821191368609ffb6e4a4ecef873588437b9" translate="yes" xml:space="preserve">
          <source>On the other hand, some calls need to be changed to make caching work properly. For instance, if you're passing a custom collection, you'll need to change:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f46accb2f7cefa982f2385fd4474294bc9c94e" translate="yes" xml:space="preserve">
          <source>On the other hand, when multiple conditions define whether or not a validation should happen, an &lt;code&gt;Array&lt;/code&gt; can be used. Moreover, you can apply both &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt; to the same validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c276557e9fbc03eb8cd74022dd70a23fd6917d1" translate="yes" xml:space="preserve">
          <source>On top of the collections, you have the complete URL that a given action redirected to available in &lt;code&gt;redirect_to_url&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd06efef0d17c2ad10c85691f22c4e0b376101b5" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;config/boot.rb&lt;/code&gt; has finished, the next file that is required is &lt;code&gt;rails/commands&lt;/code&gt;, which helps in expanding aliases. In the current case, the &lt;code&gt;ARGV&lt;/code&gt; array simply contains &lt;code&gt;server&lt;/code&gt; which will be passed over:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32abcc0a8a37ed0baf8f7b2bb77797ece6faa56f" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;classmethods#method-i-composed_of&quot;&gt;composed_of&lt;/a&gt; relationship is specified for a model, records can be loaded from the database by specifying an instance of the value object in the conditions hash. The following example finds all customers with &lt;code&gt;address_street&lt;/code&gt; equal to &amp;ldquo;May Street&amp;rdquo; and &lt;code&gt;address_city&lt;/code&gt; equal to &amp;ldquo;Chicago&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb700a2f08bb886db26d24fcc7aeb84fcb61bf3e" translate="yes" xml:space="preserve">
          <source>Once a file has been uploaded, there are a multitude of potential tasks, ranging from where to store the files (on Disk, Amazon S3, etc), associating them with models, resizing image files, and generating thumbnails, etc. &lt;a href=&quot;active_storage_overview&quot;&gt;Active Storage&lt;/a&gt; is designed to assist with these tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae845b5ac74396339357b98d0fbe2f8795db5fa" translate="yes" xml:space="preserve">
          <source>Once a mailer action and template are defined, you can deliver your message or defer its creation and delivery for later:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b684bfa426d4701425f18ff80e07c01638bd0c35" translate="yes" xml:space="preserve">
          <source>Once an Active Record object has been retrieved, its attributes can be modified and it can be saved to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0fb844d06a05cbbf389493b98ebd0a77466fc8" translate="yes" xml:space="preserve">
          <source>Once our chunk of behavior starts pushing the scroll-to-understand-it boundary, we give in and move it to a separate file. At this size, the increased overhead can be a reasonable tradeoff even if it reduces our at-a-glance perception of how things work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6f741183f1515d1f5d59eb9b0930fde6a4d1c6" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;InboundEmail&lt;/code&gt; has reached the status of being either &lt;code&gt;delivered&lt;/code&gt;, &lt;code&gt;failed&lt;/code&gt;, or &lt;code&gt;bounced&lt;/code&gt;, it'll count as having been &lt;code&gt;#processed?&lt;/code&gt;. Once processed, the &lt;code&gt;InboundEmail&lt;/code&gt; will be scheduled for automatic incineration at a later point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aaa0edd16747144273d0ecd37353ec152bf6c37" translate="yes" xml:space="preserve">
          <source>Once users with SHA1 digested signed cookies should no longer have a chance to have their cookies rewritten, remove the rotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281c76c1b19423718ff2464b5623c5a6fb716258" translate="yes" xml:space="preserve">
          <source>Once we have made the new comment, we send the user back to the original article using the &lt;code&gt;article_path(@article)&lt;/code&gt; helper. As we have already seen, this calls the &lt;code&gt;show&lt;/code&gt; action of the &lt;code&gt;ArticlesController&lt;/code&gt; which in turn renders the &lt;code&gt;show.html.erb&lt;/code&gt; template. This is where we want the comment to show, so let's add that to the &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb223775171386c6c0a22f5de44dc3f9db8c2839" translate="yes" xml:space="preserve">
          <source>Once you have configured your server and your CDN when you serve a webpage that has an asset:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b19612cb485d184e45f8395a5657419dbf087f" translate="yes" xml:space="preserve">
          <source>Once you have created your migration using one of the generators it's time to get to work!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8af5f46a77f239597c4362061aa7aecb214d4a" translate="yes" xml:space="preserve">
          <source>Once you have this unique index, attempting to add the article to a person twice will raise an &lt;code&gt;ActiveRecord::RecordNotUnique&lt;/code&gt; error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e500386e8888e50bcaafff45919de6c32f66f2" translate="yes" xml:space="preserve">
          <source>Once you've configured the application server, you must proxy requests to it by configuring your web server appropriately. For example your NGINX config may include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d9ad0fe6675cc2a1a974cc2bfe7c1f295677c2" translate="yes" xml:space="preserve">
          <source>Once you've created a model and added validations, if that model is created via a web form, you probably want to display an error message when one of the validations fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664bf9ff587f9b7229629113c738857030c6de27" translate="yes" xml:space="preserve">
          <source>Once your README is solid, go through and add rdoc comments to all of the methods that developers will use. It's also customary to add &lt;code&gt;#:nodoc:&lt;/code&gt; comments to those parts of the code that are not included in the public API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdd6eb4ac963f5c83d7049e92388c653554b164" translate="yes" xml:space="preserve">
          <source>Once your comments are good to go, navigate to your plugin directory and run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b89364f39a831c161354043334591a09417103" translate="yes" xml:space="preserve">
          <source>Once your plugin is stable and you are ready to deploy, do everyone else a favor and document it! Luckily, writing documentation for your plugin is easy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cd3e1b38563fd269488b075cfb5c9ad562a629" translate="yes" xml:space="preserve">
          <source>One article can have many comments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c46ab4cd5b6744ee339c80d8a6f96dc75c460ad" translate="yes" xml:space="preserve">
          <source>One can additionally pass a hash as an argument to unscope specific &lt;code&gt;:where&lt;/code&gt; values. This is done by passing a hash with a single key-value pair. The key should be &lt;code&gt;:where&lt;/code&gt; and the value should be the where value to unscope. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4930c9beef86b19c8b6f488e0dbc23b3e8f631e4" translate="yes" xml:space="preserve">
          <source>One common task is to inspect the contents of a variable. Rails provides three different ways to do this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e459071ea49b553ce1ea05c61b3cf666f45e7e9e" translate="yes" xml:space="preserve">
          <source>One could think about doing some &lt;a href=&quot;#require-dependency&quot;&gt;&lt;code&gt;require_dependency&lt;/code&gt;&lt;/a&gt; calls in an initializer to make sure certain constants are loaded upfront, for example as an attempt to address the &lt;a href=&quot;#autoloading-and-sti&quot;&gt;gotcha with STIs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc22f527fe95efb8d4c108c9990bb666b0e1b55d" translate="yes" xml:space="preserve">
          <source>One exception is the &lt;a href=&quot;../rollback&quot;&gt;ActiveRecord::Rollback&lt;/a&gt; exception, which will trigger a ROLLBACK when raised, but not be re-raised by the transaction block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470be94c0a730bbafb8f17dd2546bbba150b60bf" translate="yes" xml:space="preserve">
          <source>One final thing is that the &lt;code&gt;articles&lt;/code&gt; resource for this engine should be the root of the engine. Whenever someone goes to the root path where the engine is mounted, they should be shown a list of articles. This can be made to happen if this line is inserted into the &lt;code&gt;config/routes.rb&lt;/code&gt; file inside the engine:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0402b4436a00e695f872e750277a2c085d1e020" translate="yes" xml:space="preserve">
          <source>One important caveat is that &lt;code&gt;default_scope&lt;/code&gt; will be prepended in &lt;code&gt;scope&lt;/code&gt; and &lt;code&gt;where&lt;/code&gt; conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246e3b48455f1d814518444a63e1c43b2a9f76d1" translate="yes" xml:space="preserve">
          <source>One key consideration for successfully internationalizing an application is to avoid making incorrect assumptions about grammar rules when abstracting localized code. Grammar rules that seem fundamental in one locale may not hold true in another one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f46bc5971c53449743e1084790d667e812021e1a" translate="yes" xml:space="preserve">
          <source>One last feature about generators which is quite useful for plugin generators is fallbacks. For example, imagine that you want to add a feature on top of TestUnit like &lt;a href=&quot;https://github.com/thoughtbot/shoulda&quot;&gt;shoulda&lt;/a&gt; does. Since TestUnit already implements all generators required by Rails and shoulda just wants to overwrite part of it, there is no need for shoulda to reimplement some generators again, it can simply tell Rails to use a &lt;code&gt;TestUnit&lt;/code&gt; generator if none was found under the &lt;code&gt;Shoulda&lt;/code&gt; namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76431a8dde340b2752187d0362cbab4d1a2a066" translate="yes" xml:space="preserve">
          <source>One of the most basic forms you see on the web is a search form. This form contains:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c95f415ebc17087356f0093b18162c4379df3d6" translate="yes" xml:space="preserve">
          <source>One of the most common jobs in a modern web application is sending emails outside of the request-response cycle, so the user doesn't have to wait on it. Active Job is integrated with Action Mailer so you can easily send emails asynchronously:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a82e02c89534b4ce708fde1e165b76a228bb4c9" translate="yes" xml:space="preserve">
          <source>One of the options for compressing CSS is YUI. The &lt;a href=&quot;https://yui.github.io/yuicompressor/css.html&quot;&gt;YUI CSS compressor&lt;/a&gt; provides minification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4251f3c32016070331a0f392559cfb61e10e484" translate="yes" xml:space="preserve">
          <source>One option you have is to set the locale from the domain name where your application runs. For example, we want &lt;code&gt;www.example.com&lt;/code&gt; to load the English (or default) locale, and &lt;code&gt;www.example.es&lt;/code&gt; to load the Spanish locale. Thus the &lt;em&gt;top-level domain name&lt;/em&gt; is used for locale setting. This has several advantages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64fc2fa5bac989aa066db43eaa04574b09961fcd" translate="yes" xml:space="preserve">
          <source>One possibility is to set the expiry time-stamp of the cookie with the session ID. However the client can edit cookies that are stored in the web browser so expiring sessions on the server is safer. Here is an example of how to &lt;em&gt;expire sessions in a database table&lt;/em&gt;. Call &lt;code&gt;Session.sweep(&quot;20 minutes&quot;)&lt;/code&gt; to expire sessions that were used longer than 20 minutes ago.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca890416fb094b3ddfd3cf8fb7b195c7d30af1f" translate="yes" xml:space="preserve">
          <source>One reason you may wish to call this method explicitly is between queries that ask the database to randomize results. Otherwise the cache would see the same SQL query and repeatedly return the same result each time, silently undermining the randomness you were expecting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f09ce296cc38437a13514732993c15e3e11a75f8" translate="yes" xml:space="preserve">
          <source>One should restart the entire transaction if an &lt;a href=&quot;../statementinvalid&quot;&gt;ActiveRecord::StatementInvalid&lt;/a&gt; occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88484856dcbc8c0609510a8e6e9274137c98f286" translate="yes" xml:space="preserve">
          <source>One such application server you can use is &lt;a href=&quot;https://bogomips.org/unicorn/&quot;&gt;Unicorn&lt;/a&gt; to run behind a reverse proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37bddf42c0d0970c5b853c0883f240cfcd7e97c" translate="yes" xml:space="preserve">
          <source>One way to avoid deep nesting (as recommended above) is to generate the collection actions scoped under the parent, so as to get a sense of the hierarchy, but to not nest the member actions. In other words, to only build routes with the minimal amount of information to uniquely identify the resource, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4925d61b004a9041a23947e53a1641d645c142e" translate="yes" xml:space="preserve">
          <source>One way to check the headers are cached properly in your CDN is by using &lt;a href=&quot;https://explainshell.com/explain?cmd=curl+-I+http%3A%2F%2Fwww.example.com&quot;&gt;curl&lt;/a&gt;. You can request the headers from both your server and your CDN to verify they are the same:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d261fa582670a8e042e910d33f5f376cfb98bf" translate="yes" xml:space="preserve">
          <source>One way to use partials is to treat them as the equivalent of subroutines: as a way to move details out of a view so that you can grasp what's going on more easily. For example, you might have a view that looked like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c415290a3667c6831ad121a2104951591264e2" translate="yes" xml:space="preserve">
          <source>One way to use partials is to treat them as the equivalent of subroutines; a way to move details out of a view so that you can grasp what's going on more easily. For example, you might have a view that looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964ce9a18a0f2d237ce83f269c1ef2f591a32a27" translate="yes" xml:space="preserve">
          <source>One-to-many</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfba1b36f2cfd7ce46bc5a8cfbc0d7290fb9c82e" translate="yes" xml:space="preserve">
          <source>One-to-many Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261f46f06dea79f5ef7997cf1cc6cb23aeabfbd2" translate="yes" xml:space="preserve">
          <source>One-to-one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19832bb6d166dd4f18d0ac476a6edbfe61d74927" translate="yes" xml:space="preserve">
          <source>One-to-one Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd135e9223295b1a34af00dc168625632ddce4ef" translate="yes" xml:space="preserve">
          <source>One-to-one associations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33cf6a3be534018b9353cc94282a82862a2fa988" translate="yes" xml:space="preserve">
          <source>Only bug fixes, no API changes, no new features. Except as necessary for security fixes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34302dff8ebb28f6311974ae0500fbaf9ce0fa8" translate="yes" xml:space="preserve">
          <source>Only displays the screenshot path. This is the default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="742072d9be1eda7528ca794b5657d960ee0b2371" translate="yes" xml:space="preserve">
          <source>Only equality, range, and subset checking are possible with Hash conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea92c339437a1c8e9e5808873fb7ac4143f27fa" translate="yes" xml:space="preserve">
          <source>Only generate routes for the given actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca99a5d2669d6851ee378f86d51ad62b685bfa3c" translate="yes" xml:space="preserve">
          <source>Only long-running &quot;top level&quot; processes should invoke the Reloader, because if it determines a reload is needed, it will block until all other threads have completed any Executor invocations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307f86dd0241c519ac2a2916c2c14365af45ecd6" translate="yes" xml:space="preserve">
          <source>Only one console can be rendered per request. Otherwise &lt;code&gt;web-console&lt;/code&gt; will raise an error on the second &lt;code&gt;console&lt;/code&gt; invocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e46e99ce898fa5c16055d4175c91c423d5eb141" translate="yes" xml:space="preserve">
          <source>Only one thread may load or unload at a time, and to do either, it must wait until no other threads are running application code. If a thread is waiting to perform a load, it doesn't prevent other threads from loading (in fact, they'll cooperate, and each perform their queued load in turn, before all resuming running together).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ef82ab895b3dc529ae273b0f6382d3b4a29356" translate="yes" xml:space="preserve">
          <source>Only permitted scalars pass the filter. For example, given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9344c8916cbe73a1ce3670d6a11a8abeb404e3a" translate="yes" xml:space="preserve">
          <source>Only public methods are callable as actions. It is a best practice to lower the visibility of methods (with &lt;code&gt;private&lt;/code&gt; or &lt;code&gt;protected&lt;/code&gt;) which are not intended to be actions, like auxiliary methods or filters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e93b5d895bc12656b7b6de1a04216e25563fc5" translate="yes" xml:space="preserve">
          <source>Only supported on the MySQL and PostgreSQL adapter, ignored elsewhere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7108ad7c547043fec67334a0fc4cd6553fa6d275" translate="yes" xml:space="preserve">
          <source>Only the &lt;code&gt;optgroup&lt;/code&gt; and &lt;code&gt;option&lt;/code&gt; tags are returned, so you still have to wrap the output in an appropriate &lt;code&gt;select&lt;/code&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c30b7d7ef2840e2f43312cf613f3a108641d2a" translate="yes" xml:space="preserve">
          <source>Only the &lt;code&gt;option&lt;/code&gt; tags are returned, you have to wrap this call in a regular HTML &lt;code&gt;select&lt;/code&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f293a9b728eca5c422b1c90cc270c6c7c359207c" translate="yes" xml:space="preserve">
          <source>Only the directory notation is supported. Specifying the controller with Ruby constant notation (eg. &lt;code&gt;controller: 'Admin::UserPermissions'&lt;/code&gt;) can lead to routing problems and results in a warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e66c7fa1859400ed2d95ed4cac3113bddf009f" translate="yes" xml:space="preserve">
          <source>Only the latest release series will receive bug fixes. When enough bugs are fixed and its deemed worthy to release a new gem, this is the branch it happens from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4ced645bf45d22038b24432f2481e5ff66d1f6" translate="yes" xml:space="preserve">
          <source>Only useful if the &lt;code&gt;:autosave&lt;/code&gt; option on the parent is enabled for this associated model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a44af13cbb71470ce7f94311d2355d7c2907d1" translate="yes" xml:space="preserve">
          <source>Opaque based on digest of secret key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dcd96383cc8de5fbb7b0490f160fcf0708a8d1e" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; and modify it as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5febdcd8c7fe18a9d53035d58afbd18e5a23de" translate="yes" xml:space="preserve">
          <source>Open a new session instance. If a block is given, the new session is yielded to the block before being returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de22d522f2006b25c0bcecd1a2ef1748833ee69" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; file in your text editor. Delete all of the existing code in the file, and replace it with the following single line of code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e3daa19d6d3cf34179e2e9bbb764f5410786c3" translate="yes" xml:space="preserve">
          <source>Open the file &lt;code&gt;config/routes.rb&lt;/code&gt; in your editor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dca4768f25a21ed4853295312eaa6669f3aa6c5" translate="yes" xml:space="preserve">
          <source>Open up a command line prompt. On macOS open Terminal.app, on Windows choose &quot;Run&quot; from your Start menu and type 'cmd.exe'. Any commands prefaced with a dollar sign &lt;code&gt;$&lt;/code&gt; should be run in the command line. Verify that you have a current version of Ruby installed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e9f7d79c40866ef09256da578e53ce9fdfbd93" translate="yes" xml:space="preserve">
          <source>OpenSSLCipherError</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1764bd75f367f984cde9cc7a149bc71b74585fdf" translate="yes" xml:space="preserve">
          <source>Opens a new tempfile in &lt;a href=&quot;downloading#method-i-tempdir&quot;&gt;tempdir&lt;/a&gt; and copies blob data into it. Yields the tempfile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3865e51eb9f5969b8c0e66213c28ed627ca736e5" translate="yes" xml:space="preserve">
          <source>Opt in to the new default behavior by setting &lt;code&gt;config.active_storage.replace_on_assign_to_many&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. The old behavior will be deprecated in Rails 6.1 and removed in a subsequent release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778c618117429ef2dedad8c828b71d5371cf6e0f" translate="yes" xml:space="preserve">
          <source>Optimistic Locking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b4d21eac77f9a198165f97088f163752a3a876" translate="yes" xml:space="preserve">
          <source>Optimistic locking allows multiple users to access the same record for edits, and assumes a minimum of conflicts with the data. It does this by checking whether another process has made changes to a record since it was opened. An &lt;code&gt;ActiveRecord::StaleObjectError&lt;/code&gt; exception is thrown if that has occurred and the update is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440efb9593998e73e042de8d5c13a39973de6702" translate="yes" xml:space="preserve">
          <source>Optimize caching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d109ee234bd237eb8e8affab4902dda9120464f" translate="yes" xml:space="preserve">
          <source>Opting Out</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd1d4d5e812e0b7f35050f21e80c418d4c57944" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;:dependent =&amp;gt; :restrict&lt;/code&gt; has been removed from &lt;code&gt;belongs_to&lt;/code&gt;. If you want to prevent deleting the object if there are any associated objects, you can set &lt;code&gt;:dependent =&amp;gt; :destroy&lt;/code&gt; and return &lt;code&gt;false&lt;/code&gt; after checking for existence of association from any of the associated object's destroy callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90caa34c648ca28307163b49f20388699c1c8bb" translate="yes" xml:space="preserve">
          <source>Option Tags from a Collection of Arbitrary Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e460ab9059f609299a4f0391c888d23b7f0608d5" translate="yes" xml:space="preserve">
          <source>Option examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46865efd2e3d2d4f8219e6a941cb11286e86fada" translate="yes" xml:space="preserve">
          <source>Option to encode &lt;code&gt;BigDecimal&lt;/code&gt; objects as numbers instead of strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c339ec350a719390694866ea431c63a56be5b7" translate="yes" xml:space="preserve">
          <source>Optionally provide a Hash of credentials instead of a keyfile path:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d76dd552da264fbd8e54798493528d066d02e5" translate="yes" xml:space="preserve">
          <source>Options (conditions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c5131188beb296ea713be70b28310e57cba19e" translate="yes" xml:space="preserve">
          <source>Options Extraction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f705646e3b59d91301d39cc8bd9297b7ea126a" translate="yes" xml:space="preserve">
          <source>Options applying to all assets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad7db2ddf2757e883ec8b8dac1c23428f0a5f28" translate="yes" xml:space="preserve">
          <source>Options are passed to the underlying cache implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d5cd85068734c29bbb9be8ed9b5362af5558f84" translate="yes" xml:space="preserve">
          <source>Options are passed to the underlying cache implementation. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8886b381a94f23a6e9af413e4bc25e8fb76941b3" translate="yes" xml:space="preserve">
          <source>Options are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc30f96776b234df9f8ca32270e650d3093fcef1" translate="yes" xml:space="preserve">
          <source>Options may also be used by concerns defined in a block by accepting a block parameter. So, using a block, you might do something as simple as limit the actions available on certain resources, passing standard resource options through the concern:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208dc3d066da1d162c0b160a18e93bcc147bb701" translate="yes" xml:space="preserve">
          <source>Options passed to fetch will be merged with the payload when writing to the store</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13471d65e3d4b8c4006e33f8b92e1a0c32cbcc49" translate="yes" xml:space="preserve">
          <source>Options passed to fetch will be merged with the payload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd0b506837a990803d8edf137f2934329835748" translate="yes" xml:space="preserve">
          <source>Options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3fd1b2e2af3b184336a3df7528447495096cac" translate="yes" xml:space="preserve">
          <source>Or a URL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3bc0242c5a25d6a0347f3cd2adf504a9a8659e2" translate="yes" xml:space="preserve">
          <source>Or a collection to be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e798b02ecc9f5ce86d6a37704149b2bd459266" translate="yes" xml:space="preserve">
          <source>Or consider deleting an author, and ensuring that all of its books get deleted as well:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3a2413eccaa37c9edca7d7508e154b05c37f49" translate="yes" xml:space="preserve">
          <source>Or equivalently, if &lt;code&gt;TenderloveMigration&lt;/code&gt; is defined as in the documentation for Migration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d46f7649085a0fc5bd6642728d7255f64346fb" translate="yes" xml:space="preserve">
          <source>Or even multiple scope parameters. For example, making sure that a teacher can only be on the schedule once per semester for a particular class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4775e203194ef68c0ffff0b45e0260781cbe7d36" translate="yes" xml:space="preserve">
          <source>Or even to render a special view:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf071d5d4043c8f993b4afe346faf72c15a6d61" translate="yes" xml:space="preserve">
          <source>Or if the format is json:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ad3309395a57ea267e47d84de8180ed1521394" translate="yes" xml:space="preserve">
          <source>Or in a view:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f13b33e63742fa01f4b9868b2094bcb1f7b7f66" translate="yes" xml:space="preserve">
          <source>Or in the &lt;code&gt;Initializer&lt;/code&gt; section, add &lt;em&gt;any&lt;/em&gt; of the following</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05b4787f0b112e93549bd08dd3c395127fe3054" translate="yes" xml:space="preserve">
          <source>Or on a relation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd960357e2da48b048bf1b0f86562d2ec982a889" translate="yes" xml:space="preserve">
          <source>Or on an association consisting of &lt;code&gt;Article&lt;/code&gt; objects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c76bf3671450a6e5c1752c98d78e3e9357ea980" translate="yes" xml:space="preserve">
          <source>Or ordering by multiple fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353ed84771564a4d91061f6b253d2d768af09ea7" translate="yes" xml:space="preserve">
          <source>Or pass &lt;code&gt;instance_accessor: false&lt;/code&gt;, to omit both instance methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d614a80bf893429ce0e36be6a4449bc948530a" translate="yes" xml:space="preserve">
          <source>Or similarly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb96942494fc6e6e25d0e604bc699226c9dcdc9" translate="yes" xml:space="preserve">
          <source>Or the attacker places the code into the onmouseover event handler of an image:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262059292b81bef2d8cda70b0d63b5f36908f7fe" translate="yes" xml:space="preserve">
          <source>Or to decrypt with a file, that should be version control ignored, relative to &lt;code&gt;Rails.root&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dbccef96008262323edcfb1744318c09d39a853" translate="yes" xml:space="preserve">
          <source>Or we can run a single test file by passing the &lt;code&gt;rails test&lt;/code&gt; command the filename containing the test cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e4c5e6da356d13d896e512ce82a61a1cb72041" translate="yes" xml:space="preserve">
          <source>Or with a block where self points to the current record to be validated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55fad0f3a803ecc0ba8d73b4df09ad1bcaf83a4" translate="yes" xml:space="preserve">
          <source>Or you can insert a middleware to exact position by using indexes. For example, if you want to insert &lt;code&gt;Magical::Unicorns&lt;/code&gt; middleware on top of the stack, you can do it, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86788b76f62cc7d80ba88d052aa89714577b6e5b" translate="yes" xml:space="preserve">
          <source>Or you can remove them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4aa987b22d11cbdd89561b2a3cf032b29fb407" translate="yes" xml:space="preserve">
          <source>Or you can set an array of locales as fallback, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a790a45649781a5473f7e61e6f5b7a3f6f9a4f75" translate="yes" xml:space="preserve">
          <source>Or you can set different fallbacks for locales individually. For example, if you want to use &lt;code&gt;:tr&lt;/code&gt; for &lt;code&gt;:az&lt;/code&gt; and &lt;code&gt;:de&lt;/code&gt;, &lt;code&gt;:en&lt;/code&gt; for &lt;code&gt;:da&lt;/code&gt; as fallbacks, you can do it, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee000edaf91e9f280fa400956381a99a973a4786" translate="yes" xml:space="preserve">
          <source>Or you can use other HTTP headers to convey other information:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f92b3302dc3f5a54ed01bf773c005412f4d003" translate="yes" xml:space="preserve">
          <source>Or, &quot;whaaat my tests are failing!!!?&quot; or &quot;my &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; widget is busted!!&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476fef55382549404628dd1d71367f3e6a2b7ced" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return a Category object for all categories with articles&quot;. Note that you will see duplicate categories if more than one article has the same category. If you want unique categories, you can use &lt;code&gt;Category.joins(:articles).distinct&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9608eda96f81a2096cfa4b308ac3d2afb82fef9" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all articles that have a category and at least one comment&quot;. Note again that articles with multiple comments will show up multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6846db36a33012faef67bdc5fc41c96e2233a4b3" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all articles that have a comment made by a guest.&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5f7ab50058274eb7f14d4b850aaad262badbd2" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all categories that have articles, where those articles have a comment made by a guest, and where those articles also have a tag.&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9be6657aea6e25a56e81a0b77ef30c9fd852c7" translate="yes" xml:space="preserve">
          <source>Or, using a callable object, you might implement something more specific to your application, which would be out of place in your routes file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2b0e8fe92771485e96ea339005a73e1f1d256f" translate="yes" xml:space="preserve">
          <source>Oracle: &lt;code&gt;:precision&lt;/code&gt; [1..38], &lt;code&gt;:scale&lt;/code&gt; [-84..127]. Default is (38,0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3651320b8674613f1874c7fdd0151b4d0caedaba" translate="yes" xml:space="preserve">
          <source>OrderedHash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8011702c2353e126a49a6909828570d332ce0c1b" translate="yes" xml:space="preserve">
          <source>OrderedHash#encode_with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00187da59bc0549040ca22c6603641dd7b7c952c" translate="yes" xml:space="preserve">
          <source>OrderedHash#extractable_options?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6459274eb159c4da482aed019c1a1b2df265595f" translate="yes" xml:space="preserve">
          <source>OrderedHash#nested_under_indifferent_access</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454162ee6ad7c6804ac28d9ea0b805e972c8f02b" translate="yes" xml:space="preserve">
          <source>OrderedHash#reject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="239ff10b89ec8d7a91930001365d2af62f0e790d" translate="yes" xml:space="preserve">
          <source>OrderedHash#select</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f842169a6bbeb6d81c0c2659957a8ebd9b2f8d29" translate="yes" xml:space="preserve">
          <source>OrderedHash#to_yaml_type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac247c4a7d84979677baf43b00743777812d609" translate="yes" xml:space="preserve">
          <source>OrderedOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a56f6d0f3acca66eed843d6d3ec368da741c8ba" translate="yes" xml:space="preserve">
          <source>OrderedOptions#[]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8295c4a54919052ef905cb9a1e90615db5da4f1d" translate="yes" xml:space="preserve">
          <source>OrderedOptions#[]=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dfb747ca0c1f786f335009acb94d658467406ef" translate="yes" xml:space="preserve">
          <source>OrderedOptions#method_missing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0731663e518cae644526e87a0f07ce6e06da60" translate="yes" xml:space="preserve">
          <source>OrderedOptions#respond_to_missing?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ed86c1334d74f0ae883f47feef902d83b9d8c6" translate="yes" xml:space="preserve">
          <source>Ordering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab2cdcb0be97dcee2dba5e417fb9055f1882f2e" translate="yes" xml:space="preserve">
          <source>Ordering callbacks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e0fa2a51ddf9d54aad39d4773739860c37c59c" translate="yes" xml:space="preserve">
          <source>Ordering of test cases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c96a0c3f44b5348309abe5683ccb9be1ee4720" translate="yes" xml:space="preserve">
          <source>Ordinal returns the suffix used to denote the position in an ordered sequence such as 1st, 2nd, 3rd, 4th.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234ebf34ca83ec1a7ef1b9c727705d802ebcb2ad" translate="yes" xml:space="preserve">
          <source>Ordinalize turns a number into an ordinal string used to denote the position in an ordered sequence such as 1st, 2nd, 3rd, 4th.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8236fc5a62a8a4a8a0f05fa3a4f168d16b4015ef" translate="yes" xml:space="preserve">
          <source>Organization of Locale Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e880b1de182f244bb77847d912e987df78ccc8" translate="yes" xml:space="preserve">
          <source>Other &lt;a href=&quot;helpers&quot;&gt;Helpers&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebb2f9cdc2951c739e98100dec8f3363c3a726b" translate="yes" xml:space="preserve">
          <source>Other Components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae03cc5ec3db05ad91a565c0f5d8f4fd2384cdc" translate="yes" xml:space="preserve">
          <source>Other Configurations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625a1d396eaa80f4cad2a3b6a932959b98568e22" translate="yes" xml:space="preserve">
          <source>Other Gem Dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54c0ef7fb66478fc86f1826784d079a09bd05d7" translate="yes" xml:space="preserve">
          <source>Other Helpers of Interest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae765936f631daf3aee7c8cda3fdea24003782b" translate="yes" xml:space="preserve">
          <source>Other Middleware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a64990a17e005b82e9a7862ca72e618bda5a31" translate="yes" xml:space="preserve">
          <source>Other Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9886dff852162d7b391293133a1dfac4eb182bc5" translate="yes" xml:space="preserve">
          <source>Other Security Considerations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b234d8e57efd5e0d141a802475bd8db710c26d" translate="yes" xml:space="preserve">
          <source>Other Ways to Use Filters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5f4f72132946c433741e5405bc096c29b477e1" translate="yes" xml:space="preserve">
          <source>Other authentication methods are available for Rails applications. Two popular authentication add-ons for Rails are the &lt;a href=&quot;https://github.com/plataformatec/devise&quot;&gt;Devise&lt;/a&gt; rails engine and the &lt;a href=&quot;https://github.com/binarylogic/authlogic&quot;&gt;Authlogic&lt;/a&gt; gem, along with a number of others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7a2a9b3af338ac1accecdfa4a69534e1ad2e17" translate="yes" xml:space="preserve">
          <source>Other blocking operations performed inside the Executor block (which includes all application code), however, can needlessly retain the &lt;code&gt;running&lt;/code&gt; lock. If another thread encounters a constant it must autoload, this can cause a deadlock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830c52bd0dcd294842be90215c1c713085511837" translate="yes" xml:space="preserve">
          <source>Other engines, such as Devise, handle this a little differently by making you specify custom helpers (such as &lt;code&gt;devise_for&lt;/code&gt;) in the routes. These helpers do exactly the same thing, mounting pieces of the engines's functionality at a pre-defined path which may be customizable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8acffdfa21f8bb476a3cdcd269b91fe48dbb8dfd" translate="yes" xml:space="preserve">
          <source>Other form controls worth mentioning are textareas, password fields, hidden fields, search fields, telephone fields, date fields, time fields, color fields, datetime-local fields, month fields, week fields, URL fields, email fields, number fields, and range fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b50fdb143f86261971aa63def42c427f9c9d35" translate="yes" xml:space="preserve">
          <source>Other helpers use the &lt;code&gt;_tag&lt;/code&gt; suffix to indicate whether a helper is a barebones helper or one that operates on model objects. With dates and times, &lt;code&gt;select_date&lt;/code&gt;, &lt;code&gt;select_time&lt;/code&gt; and &lt;code&gt;select_datetime&lt;/code&gt; are the barebones helpers, &lt;code&gt;date_select&lt;/code&gt;, &lt;code&gt;time_select&lt;/code&gt; and &lt;code&gt;datetime_select&lt;/code&gt; are the equivalent model object helpers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2cab26bf4d959d62d893f5250b7f6098ab6bd08" translate="yes" xml:space="preserve">
          <source>Other names simply map to a parameter as in the case of &lt;code&gt;:id&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15c76b7bfea78e807b8afdf64ed8d6b9ef0d4c1" translate="yes" xml:space="preserve">
          <source>Other namespaces can be added to the root element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bac31dd685f18ba9e6e1193d5c12c6e7fadab12" translate="yes" xml:space="preserve">
          <source>Other options will be handled by the specific cache store implementation. Internally, &lt;a href=&quot;store#method-i-fetch&quot;&gt;fetch&lt;/a&gt; calls read_entry, and calls write_entry on a cache miss. &lt;code&gt;options&lt;/code&gt; will be passed to the &lt;a href=&quot;store#method-i-read&quot;&gt;read&lt;/a&gt; and &lt;a href=&quot;store#method-i-write&quot;&gt;write&lt;/a&gt; calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599ffbd6e95e9102a19874cfc765e0666e6a5f25" translate="yes" xml:space="preserve">
          <source>Other options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3332c9f3937213720f845d4ac9ee1edb90cf9d" translate="yes" xml:space="preserve">
          <source>Other plugins may add additional modules. You can get a list of all modules included into &lt;code&gt;ActionController::API&lt;/code&gt; in the rails console:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36e24362db8d00a039fa3e864e49bf3c4a454d4" translate="yes" xml:space="preserve">
          <source>Other plugins, including Active Record, may add additional middleware. In general, these middleware are agnostic to the type of application you are building, and make sense in an API-only Rails application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aedf6a5786c078a2cfdc5f48960cfa1333f86471" translate="yes" xml:space="preserve">
          <source>Other popular testing approaches and plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47f5a683ca5a39d9b1514343c124845320bb602" translate="yes" xml:space="preserve">
          <source>Others remove columns when they migrate up instead of down:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ac804a990007dc6304805bea8e1b38b1a18234" translate="yes" xml:space="preserve">
          <source>Otherwise accepts the same options as text_field_tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f9f1958a60e4e904e41cbb2365f4dbd85d71ac" translate="yes" xml:space="preserve">
          <source>Otherwise raises &lt;code&gt;ActionController::ParameterMissing&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffdd72cc23a2041167e980413c8165ef15604bd4" translate="yes" xml:space="preserve">
          <source>Otherwise the root element is &amp;ldquo;objects&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5cd5b915cbdb8da5ee2ba3178987d2c61bb672d" translate="yes" xml:space="preserve">
          <source>Otherwise you'll get this error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54580cb3434b8b0cdd18cab31cb152aae8e86621" translate="yes" xml:space="preserve">
          <source>Otherwise, a node with &lt;code&gt;key&lt;/code&gt; as tag is created with a string representation of &lt;code&gt;value&lt;/code&gt; as text node. If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; an attribute &quot;nil&quot; set to &quot;true&quot; is added. Unless the option &lt;code&gt;:skip_types&lt;/code&gt; exists and is true, an attribute &quot;type&quot; is added as well according to the following mapping:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b654bd32ac21eaac826fe8d3e81294668380e3d9" translate="yes" xml:space="preserve">
          <source>Otherwise, a node with &lt;code&gt;key&lt;/code&gt; as tag is created with a string representation of &lt;code&gt;value&lt;/code&gt; as text node. If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; an attribute &amp;ldquo;nil&amp;rdquo; set to &amp;ldquo;true&amp;rdquo; is added. Unless the option &lt;code&gt;:skip_types&lt;/code&gt; exists and is true, an attribute &amp;ldquo;type&amp;rdquo; is added as well according to the following mapping:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff985b48294c27e9963776306b1e5656a018dd5" translate="yes" xml:space="preserve">
          <source>Otherwise, an array with the argument as its single element is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a46a92c0871a1f545a82e3e2650b051d10a817f" translate="yes" xml:space="preserve">
          <source>Otherwise, if the argument responds to &lt;code&gt;to_ary&lt;/code&gt; it is invoked, and if the value of &lt;code&gt;to_ary&lt;/code&gt; is not &lt;code&gt;nil&lt;/code&gt;, it is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b84b854ca5bed9f78d1e328de5b12c40f1d7d3" translate="yes" xml:space="preserve">
          <source>Otherwise, if the argument responds to &lt;code&gt;to_ary&lt;/code&gt; it is invoked, and its result returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414d32a57c350caae7ff14388456d7ee72359586" translate="yes" xml:space="preserve">
          <source>Otherwise, in every request Rails walks the application tree to check if anything has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f36700a4ed306bdca5493ebd8253ef6986e00cf" translate="yes" xml:space="preserve">
          <source>Otherwise, returns an array with the argument as its single element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3485420d5e1b49bbbeba6112829799e07b174463" translate="yes" xml:space="preserve">
          <source>Otherwise, the method re-raises the first exception found:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c9b95f925ab45cf4a279e41a46a5994bcadf92" translate="yes" xml:space="preserve">
          <source>Otherwise, the value received as argument, which defaults to &lt;code&gt;nil&lt;/code&gt;, is the separator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d5bd4dc7bbb64daeee7999f816b10fc1419a87" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;edit&lt;/code&gt; page looks very similar to the &lt;code&gt;new&lt;/code&gt; page; in fact, they both share the same code for displaying the form. Let's remove this duplication by using a view partial. By convention, partial files are prefixed with an underscore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82eeec9fd8f73f99fcc6143ff8b19533c75db304" translate="yes" xml:space="preserve">
          <source>Our Rubyist instinct quickly sees some redundancy in there: If classes were defined in files matching their name, couldn't their loading be automated somehow? We could save scanning the file for dependencies, which is brittle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e45b9cc1b4d086cee8e2c7013c2bc9acac8f0d" translate="yes" xml:space="preserve">
          <source>Our new generator is quite simple: it inherits from &lt;code&gt;Rails::Generators::Base&lt;/code&gt; and has one method definition. When a generator is invoked, each public method in the generator is executed sequentially in the order that it is defined. Finally, we invoke the &lt;code&gt;create_file&lt;/code&gt; method that will create a file at the given destination with the given content. If you are familiar with the Rails Application Templates API, you'll feel right at home with the new generators API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1bd646f38a3eef656ac0e0c5c2bb44de5157d99" translate="yes" xml:space="preserve">
          <source>Our test should now look something as what follows. Disregard the other tests for now, we're leaving them out for brevity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95461b950981122aa65ad0a7032ed4e287b96375" translate="yes" xml:space="preserve">
          <source>Out of the box, only &lt;code&gt;:json&lt;/code&gt; is supported. But for any custom MIME types you've registered, you can add your own encoders with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9cc29509d84069896dfef67f7c4cab5f0313961" translate="yes" xml:space="preserve">
          <source>Output Safety</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e28eb9764c2a5229fdbe174f04f0ae264c0938" translate="yes" xml:space="preserve">
          <source>Output the contents of a file in the template's &lt;code&gt;source_path&lt;/code&gt;, usually a README.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db12a660e44a55964f23231b7a5be02a5431ac7b" translate="yes" xml:space="preserve">
          <source>Outputs a deprecation warning to the output configured by &lt;code&gt;ActiveSupport::Deprecation.behavior&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd45310d7cdd6bf8d77dab304bf862ac96670313" translate="yes" xml:space="preserve">
          <source>Outputs text along with how long it took to run its block. If the block returns an integer it assumes it is the number of rows affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cad32653578534c0fce4b84f3d17dfe365988ae" translate="yes" xml:space="preserve">
          <source>Outside of a Rails application, manipulate &lt;code&gt;ActiveStorage.analyzers&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf990db8f5aef3dcee23798a692bb46525a2324f" translate="yes" xml:space="preserve">
          <source>Outside of a Rails application, modify &lt;code&gt;ActiveStorage.previewers&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb06d2788e90ddfe556348a6c5937f5f35cd508" translate="yes" xml:space="preserve">
          <source>Override &lt;code&gt;AbstractController::Base#process_action&lt;/code&gt; to run the &lt;code&gt;process_action&lt;/code&gt; callbacks around the normal behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e94313642caff82ab1212d6d182d25d760d8ec" translate="yes" xml:space="preserve">
          <source>Override Rack's &lt;a href=&quot;request#method-i-GET&quot;&gt;#GET&lt;/a&gt; method to support indifferent access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7919d6c7900a9ba2c6cb14bf7e61b2f06e55d0e" translate="yes" xml:space="preserve">
          <source>Override Rack's &lt;a href=&quot;request#method-i-POST&quot;&gt;#POST&lt;/a&gt; method to support indifferent access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed186c4c96af29b90fa2e8ff78f11527c0c5d78" translate="yes" xml:space="preserve">
          <source>Override the default form builder for all views rendered by this controller and any of its descendants. Accepts a subclass of &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571d157055fbe9494924014185113ca02f5063d6" translate="yes" xml:space="preserve">
          <source>Override the template to digest by passing &lt;code&gt;:template&lt;/code&gt; to &lt;code&gt;fresh_when&lt;/code&gt; and &lt;code&gt;stale?&lt;/code&gt; calls. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659843aa814204b022a832480caa1f4343072659" translate="yes" xml:space="preserve">
          <source>Override this method if you want to customize when detailed exceptions must be shown. This method is only called when &lt;code&gt;consider_all_requests_local&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;. By default, it returns &lt;code&gt;false&lt;/code&gt;, but someone may set it to &lt;code&gt;request.local?&lt;/code&gt; so local requests in production still show the detailed exception pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cbba4c825939538cd3c4052d8c629401395619" translate="yes" xml:space="preserve">
          <source>Override this method in a concrete subclass. Have it return a &lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt; of metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7012fde9def053cf38f8839597f7a9e51474af2c" translate="yes" xml:space="preserve">
          <source>Override this method in a concrete subclass. Have it yield an attachable preview image (i.e. anything accepted by &lt;a href=&quot;attached/one#method-i-attach&quot;&gt;ActiveStorage::Attached::One#attach&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea62c6865b9d12d1a6525780dd25898deabdfa91" translate="yes" xml:space="preserve">
          <source>Override this method in a module to change the default behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4dfdfb3026247d292bbe54b879d99d5ae0cba6" translate="yes" xml:space="preserve">
          <source>Override this method in subclasses with validation logic, adding errors to the records &lt;code&gt;errors&lt;/code&gt; array where necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd08da67482a0c2c313df115f9a10cc17fc9d73" translate="yes" xml:space="preserve">
          <source>Override to return the quoted table name for assignment. Defaults to table quoting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e61b07bdd533dfaaa49e91b7ff70db783ff858" translate="yes" xml:space="preserve">
          <source>Override to turn off referential integrity while executing &lt;code&gt;&amp;amp;block&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c12a7eb4d3f6a7bc6548f5bd29111edbbe19f4" translate="yes" xml:space="preserve">
          <source>Overrides the application config to specify if an error should be raised when an order is present in the relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee469c249d0b808f02f56c8e00d57f1ac89da78" translate="yes" xml:space="preserve">
          <source>Overrides the default inspect method with a human readable one, e.g., &amp;ldquo;Mon, 21 Feb 2005 14:30:00 +0000&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e80c9f4d92d1acebc7a3aa867dcf62d6b13f32" translate="yes" xml:space="preserve">
          <source>Overrides the default inspect method with a human readable one, e.g., &amp;ldquo;Mon, 21 Feb 2005&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdcc150066449639a774339b07b0656ab30c52b4" translate="yes" xml:space="preserve">
          <source>Overrides the default resource identifier &lt;code&gt;:id&lt;/code&gt; (name of the dynamic segment used to generate the routes). You can access that segment from your controller using &lt;code&gt;params[&amp;lt;:param&amp;gt;]&lt;/code&gt;. In your router:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca9f6506fa932787a54e9bdb193b09d95399befe" translate="yes" xml:space="preserve">
          <source>Overriding Conditions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3270cba4a12bbee17dc198df863938fcecb8dccb" translate="yes" xml:space="preserve">
          <source>Overriding Models and Controllers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6c57d88b0469224ce074af29a7bb1cc5f9520c" translate="yes" xml:space="preserve">
          <source>Overriding Named Route Parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b862244aeff64fb478f03c9520e3820b7d2020" translate="yes" xml:space="preserve">
          <source>Overriding Views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c315e5288623e3b3ed038cc018c03e7cfb2a7b" translate="yes" xml:space="preserve">
          <source>Overriding case equality method so that it returns true for &lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt; instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70e9816d1335e9ecac8ce4349ea6c1acacddced" translate="yes" xml:space="preserve">
          <source>Overriding generated methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3b8c946ae9aa45abae96fe1f8735ec71a9507a" translate="yes" xml:space="preserve">
          <source>Overriding the &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;edit&lt;/code&gt; Segments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e0d2c47827d98e652a159081209b6e9461aaa1" translate="yes" xml:space="preserve">
          <source>Overriding the Named Route Helpers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669e0882b1c84525a463608f90e7d793dfd9fb15" translate="yes" xml:space="preserve">
          <source>Overriding the Naming Conventions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022551d0b5cfff55add0a874e764a3914ba97024" translate="yes" xml:space="preserve">
          <source>Overriding the Singular Form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57a79f08c0cfc90c7aa58ae5662e09a1242045c" translate="yes" xml:space="preserve">
          <source>Overview of Other Built-In Methods that Provide I18n Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250f8698775adafaacdd138110b24ac4b3a25c5d" translate="yes" xml:space="preserve">
          <source>Overview of helpers provided by Action View</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d8fe12b72857cd0d717cc558336c7470d3bf78" translate="yes" xml:space="preserve">
          <source>Overview of the I18n API Features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b72a670aa3d37fcd434591b7a0698af5c095d1" translate="yes" xml:space="preserve">
          <source>Overview: How the Pieces Fit Together</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58468af38728c26a2326850cb6e380597f34497" translate="yes" xml:space="preserve">
          <source>Overwrite &lt;a href=&quot;classmethods#method-i-modules_for_helpers&quot;&gt;#modules_for_helpers&lt;/a&gt; to accept :all as argument, which loads all helpers in helpers_path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377113a11fffe769ccb21030e23f3ed12c9cdb39" translate="yes" xml:space="preserve">
          <source>Overwrite if you use another logger in your log subscriber.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd91ce0a15e301cc12092b4fb7d5d20f779176cd" translate="yes" xml:space="preserve">
          <source>Overwrites &lt;a href=&quot;renderinghelper#method-i-_layout_for&quot;&gt;#_layout_for&lt;/a&gt; in the context object so it supports the case a block is passed to a partial. Returns the contents that are yielded to a layout, given a name or a block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b0fe5a4f794163b7967149d7e9e868c0d3c372" translate="yes" xml:space="preserve">
          <source>Overwriting default accessors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632cbb4fc12f547a9fb541687f690a1c40922419" translate="yes" xml:space="preserve">
          <source>PAIR_RE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee8bc7166d89a34266bdcdf618cc34eff0a73e4" translate="yes" xml:space="preserve">
          <source>PARAMETERS_KEY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03894bbce303c9f9c81bfff9b4f44824921f46bc" translate="yes" xml:space="preserve">
          <source>PARAMETER_SEPARATOR_REGEXP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f121cf6b1467678cdd4035a2748dc437b3974eab" translate="yes" xml:space="preserve">
          <source>PARTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783c9e559f81aabe784bd2a18a361eb09fab2dd9" translate="yes" xml:space="preserve">
          <source>PARTS_IN_SECONDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49563801c516b55fcf9b36b38aa49d7fa71d1757" translate="yes" xml:space="preserve">
          <source>PATCH/PUT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb7b622110501134d7fc62face8b2201ad5830b" translate="yes" xml:space="preserve">
          <source>PATCH/PUT update</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c16d6a502dba6bf2d3fee213424d5d6bfb7b62" translate="yes" xml:space="preserve">
          <source>PATTERN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d229d608de046fae2425ce1bf3de88fe485b7c" translate="yes" xml:space="preserve">
          <source>PERMITTED_OPTIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6908029161a849d74ee36b9f60d2b8ba2c087c" translate="yes" xml:space="preserve">
          <source>PERMITTED_SCALAR_TYPES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e72115c5e8184f1664db535ffd560b5c9313d19" translate="yes" xml:space="preserve">
          <source>PER_ENTRY_OVERHEAD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6cfaca9cb2539631de34afb5b2889fb12e4df1" translate="yes" xml:space="preserve">
          <source>PETABYTE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ff81c30aa3c76e78afea62b2e3bd1dfa49e854" translate="yes" xml:space="preserve">
          <source>POST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6558fd6a36a1d6db28cadd3ec21faf8102d63e2f" translate="yes" xml:space="preserve">
          <source>POST create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dcb288a15db232057a84beb4f11f41994519e90" translate="yes" xml:space="preserve">
          <source>POST create PATCH/PUT update</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3be5984ced74e5dc11668f62d29dfe705b3a55" translate="yes" xml:space="preserve">
          <source>POST()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b8158d7ad4f6f15e1f37ea3bf9e1c7336f2b59" translate="yes" xml:space="preserve">
          <source>PRECISIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f812723c15ec2dcd8ff1e0f5c3451028487d137f" translate="yes" xml:space="preserve">
          <source>PREFIXED_PARTIAL_NAMES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ad8dab5ed4cd63c77c46353e2a61ae6d4c644c" translate="yes" xml:space="preserve">
          <source>PRE_CONTENT_STRINGS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b7ba4666a92774e0d1afe02f2e20982b307a35" translate="yes" xml:space="preserve">
          <source>PRIVATE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3503939d8cdf2bedfbf2dc57507b92d04a3bc5f7" translate="yes" xml:space="preserve">
          <source>PROTECTED_IVARS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fcc917173ee9015a6560e3977ce67bc97156a09" translate="yes" xml:space="preserve">
          <source>PROTOCOL_REGEXP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1785ca28c3a4d29a6edef1520c544b838a93db3" translate="yes" xml:space="preserve">
          <source>PUBLIC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0595753673b07a799cea5ec4da8674a00ed89291" translate="yes" xml:space="preserve">
          <source>Page Caching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0aee076e25e3e98bd0dba60b5e41a072af0fb2b" translate="yes" xml:space="preserve">
          <source>Page Caching cannot be used for actions that have before filters - for example, pages that require authentication. This is where Action Caching comes in. Action Caching works like Page Caching except the incoming web request hits the Rails stack so that before filters can be run on it before the cache is served. This allows authentication and other restrictions to be run while still serving the result of the output from a cached copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29df9fff8fa01468100d5eb51c3265997a1d99f1" translate="yes" xml:space="preserve">
          <source>Page Caching has been removed from Rails 4. See the &lt;a href=&quot;https://github.com/rails/actionpack-page_caching&quot;&gt;actionpack-page_caching gem&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9299d5eeb4a18817fc53da773b387a9845a190f9" translate="yes" xml:space="preserve">
          <source>Page Change Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c14f44cdf9f738128c66f96575d2dd9d6b7f5a" translate="yes" xml:space="preserve">
          <source>Page caching is a Rails mechanism which allows the request for a generated page to be fulfilled by the web server (i.e. Apache or NGINX) without having to go through the entire Rails stack. While this is super fast it can't be applied to every situation (such as pages that need authentication). Also, because the web server is serving a file directly from the filesystem you will need to implement cache expiration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1355b7be3ad2f138ebc1eaaef9d3a2877e2d5df" translate="yes" xml:space="preserve">
          <source>Pairs passed to &lt;code&gt;options_for_select&lt;/code&gt; should have the text first and the value second, however with &lt;code&gt;options_from_collection_for_select&lt;/code&gt; should have the value method first and the text method second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f56d90fcfd17280003892c8ccacdb0fa403726" translate="yes" xml:space="preserve">
          <source>Parallel Testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18e876b783f6455ea0fddc8eaea682e4a6fbe1a" translate="yes" xml:space="preserve">
          <source>Parallel testing allows you to parallelize your test suite. While forking processes is the default method, threading is supported as well. Running tests in parallel reduces the time it takes your entire test suite to run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221ea1b12f42a6a55d52bf6d5cfb5d76a78f81ff" translate="yes" xml:space="preserve">
          <source>Parallel testing with processes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412eec413ecf3c1ff121f0f86e087c63e0b7be10" translate="yes" xml:space="preserve">
          <source>Parallel testing with threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f805c34e06e0feba3fb69efbb9cb3d55153146" translate="yes" xml:space="preserve">
          <source>Parallelizes the test suite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fefc67d1ca265fb5dd938addc782a0f34fb195c8" translate="yes" xml:space="preserve">
          <source>Parameter Parsing: Want to specify your parameters as JSON instead of as a URL-encoded String? No problem. Rails will decode the JSON for you and make it available in &lt;code&gt;params&lt;/code&gt;. Want to use nested URL-encoded parameters? That works too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a66d075c1503c51aadb896d837605da65392cc" translate="yes" xml:space="preserve">
          <source>Parameter Restriction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645e054aea0b8233084b6a4f61680bab34d2428f" translate="yes" xml:space="preserve">
          <source>ParameterEncoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84f9e17c4c0631589680174cc3e50ef9744ee53" translate="yes" xml:space="preserve">
          <source>ParameterEncoding::ClassMethods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4546575f6e6e13dd391577e8055ad2c8233977e" translate="yes" xml:space="preserve">
          <source>ParameterEncoding::ClassMethods#skip_parameter_encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657e4a6a1c074a4e23682d693297aea2064d2dbf" translate="yes" xml:space="preserve">
          <source>ParameterFilter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a290ca1e0d0831e035465b2ba78943075494d5" translate="yes" xml:space="preserve">
          <source>ParameterFilter#filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28ae4e19bb8f01350e8f3a9d3681587e383e7bb" translate="yes" xml:space="preserve">
          <source>ParameterFilter#filter_param</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174a1e1695c688a92704938e6aa11599667c0087" translate="yes" xml:space="preserve">
          <source>ParameterFilter::new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef431435b7dcd18d8b61cdea7d42c6f296555c0e" translate="yes" xml:space="preserve">
          <source>Parameterized</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39bf4bba6d2b87fb7a1fe0b7be92684d011ea736" translate="yes" xml:space="preserve">
          <source>Parameterized::ClassMethods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a34bc12e1078cadb12179769f431b961f03fa7" translate="yes" xml:space="preserve">
          <source>Parameterized::ClassMethods#with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a639e77013711aef323a1dc00bfc9a22c768a9" translate="yes" xml:space="preserve">
          <source>Parameters Filtering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a96b0e3284e6cb9c0de64adf5c031b8d904a8d2" translate="yes" xml:space="preserve">
          <source>ParamsWrapper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07979ab9cd724370034eba3a2315e1ecd2327fa9" translate="yes" xml:space="preserve">
          <source>ParamsWrapper#process_action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44cde84177e024385d8e799bbce04ac7b46e62ca" translate="yes" xml:space="preserve">
          <source>ParamsWrapper::ClassMethods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5da75cd03009da8eb9ca026d6f4445fa5284e4" translate="yes" xml:space="preserve">
          <source>ParamsWrapper::ClassMethods#inherited</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00153c096deae306756d549f3308a9ca2da2351" translate="yes" xml:space="preserve">
          <source>ParamsWrapper::ClassMethods#wrap_parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f836b597f967979e84ffeafb1c4d10e39c5e5fee" translate="yes" xml:space="preserve">
          <source>Parent Namespaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf5c8ea03419c3d9dd98f03fe2ea9a021efbca3" translate="yes" xml:space="preserve">
          <source>Parent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280cfd1a5bc6d8fd74f84e285bc4c553ecbc7b74" translate="yes" xml:space="preserve">
          <source>Parents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1870e38cfb7290ae4462f484252f93615fc8eb" translate="yes" xml:space="preserve">
          <source>Parses &lt;code&gt;str&lt;/code&gt; according to &lt;code&gt;format&lt;/code&gt; and returns an &lt;a href=&quot;timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd37a9f7bd43fdc9b9ae74bbf8f80aac1a7c64f3" translate="yes" xml:space="preserve">
          <source>Parses a &lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt; string (JavaScript &lt;a href=&quot;../object&quot;&gt;Object&lt;/a&gt; Notation) into a hash. See &lt;a href=&quot;http://www.json.org&quot;&gt;www.json.org&lt;/a&gt; for more info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a695e79d01278755cec33b9d8c870dac96596c3" translate="yes" xml:space="preserve">
          <source>Parses the token and options out of the token Authorization header. The value for the Authorization header is expected to have the prefix &lt;code&gt;&quot;Token&quot;&lt;/code&gt; or &lt;code&gt;&quot;Bearer&quot;&lt;/code&gt;. If the header looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d908fc6f281480761bc6cadd10ccf68a22d0b239" translate="yes" xml:space="preserve">
          <source>Partial Layouts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2caab278ba17137817e4a58046e8042a794544b1" translate="yes" xml:space="preserve">
          <source>Partial templates - usually just called &quot;partials&quot; - are another device for breaking the rendering process into more manageable chunks. With a partial, you can move the code for rendering a particular piece of a response to its own file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e573430db92ea205a74cbe11e7f13d2487a9085" translate="yes" xml:space="preserve">
          <source>Partial templates - usually just called &quot;partials&quot; - are another device for breaking the rendering process into more manageable chunks. With partials, you can extract pieces of code from your templates to separate files and also reuse them throughout your templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570178b16a319c7f426cda17ea9231d3944a33e6" translate="yes" xml:space="preserve">
          <source>PartialIteration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61860521a7de5611f220fd70fe0836f777f3e03a" translate="yes" xml:space="preserve">
          <source>PartialIteration#first?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3dc722cdd53d84c0b057017b8703fafe3a3678" translate="yes" xml:space="preserve">
          <source>PartialIteration#index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6032960ccfce43ec9ff36861057765c175233ebb" translate="yes" xml:space="preserve">
          <source>PartialIteration#last?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5050f9171b95c51fc52669693c34f120719e23b" translate="yes" xml:space="preserve">
          <source>PartialIteration#size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3423460eb358f0f6b4874766fae3b89e33f364cb" translate="yes" xml:space="preserve">
          <source>PartialIteration::new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bf2c7d43ecadef6fa98444973627aea5cca209" translate="yes" xml:space="preserve">
          <source>PartialRenderer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4469552014b5e03313806369d528ebc6165f6b7e" translate="yes" xml:space="preserve">
          <source>PartialRenderer#render</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b13048ddcf0888180cfc8632501489b25497a29" translate="yes" xml:space="preserve">
          <source>PartialRenderer::new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1aae818953eb8ca4053c4ff30bde9bc13d7517f" translate="yes" xml:space="preserve">
          <source>Partials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4497cbabc6842e7f15a805c4bba4285697cb5da9" translate="yes" xml:space="preserve">
          <source>Partials are very useful in rendering collections. When you pass a collection to a partial via the &lt;code&gt;:collection&lt;/code&gt; option, the partial will be inserted once for each member in the collection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8957664d3461a7ae3ad41a2cd2673cad3c3ac490" translate="yes" xml:space="preserve">
          <source>Partials can have their own layouts applied to them. These layouts are different from those applied to a controller action, but they work in a similar fashion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5167747d8a499aeeb0a9cf1fe5cb0cc4423abef1" translate="yes" xml:space="preserve">
          <source>Partials can have their own layouts applied to them. These layouts are different than the ones that are specified globally for the entire action, but they work in a similar fashion. Imagine a list with two types of users:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832cbd88abea0a8ffcfc20173a60f40b6c106e28" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;coder: ActiveSupport::JSON&lt;/code&gt; to decode messages as JSON before passing to the callback. Defaults to &lt;code&gt;coder: nil&lt;/code&gt; which does no decoding, passes raw messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8cfa785255a0490e03d5f72479664d20825f0cf" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;true&lt;/code&gt; for any attributes that can render with no values, like &lt;code&gt;disabled&lt;/code&gt; and &lt;code&gt;readonly&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c106892de37fda9539510f623f6e778d4d42e080" translate="yes" xml:space="preserve">
          <source>Pass a &lt;code&gt;:separator&lt;/code&gt; to truncate &lt;code&gt;text&lt;/code&gt; at a natural break.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8614dade924dc49a437b552511766399a59fceec" translate="yes" xml:space="preserve">
          <source>Pass a &lt;code&gt;:separator&lt;/code&gt; to truncate the string at a natural break:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce9760a7dd9418d747f30e09506a595e4cb8cec" translate="yes" xml:space="preserve">
          <source>Pass a block if you want to show extra content when the text is truncated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5923d7bb61694c1d818be6ba066f327bc89a13c1" translate="yes" xml:space="preserve">
          <source>Pass a false argument if you do not want the underscore in &quot;_id&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615080f180dd4ad4eb21ddf9cd78cbe04c12dd19" translate="yes" xml:space="preserve">
          <source>Pass a hash in the second argument (&lt;code&gt;path&lt;/code&gt;) to specify the request method. This is useful for routes requiring a specific HTTP method. The hash should contain a :path with the incoming request path and a :method containing the required HTTP verb.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191340cf9d496aa6ee0196b7d8ec46440a7717f4" translate="yes" xml:space="preserve">
          <source>Pass a method name or lambda argument or provide a block to call. Specify the calling period in seconds using the &lt;code&gt;every:&lt;/code&gt; keyword argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9029ba47b8bdab79b21efa225ce6210de41efb3b" translate="yes" xml:space="preserve">
          <source>Pass a string or regexp &lt;code&gt;:separator&lt;/code&gt; to specify a different separator of words:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3022e7da977baad8a69945a7a25f26f1426153ba" translate="yes" xml:space="preserve">
          <source>Pass a string or regexp &lt;code&gt;:separator&lt;/code&gt; to truncate &lt;code&gt;text&lt;/code&gt; at a natural break:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82240dc126d252f6c8ddac9c80ddc81cdc134a8c" translate="yes" xml:space="preserve">
          <source>Pass in the instance of the object that is using the errors object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bedc16857cec5d98abc3f8af1ab6c46a80bed00" translate="yes" xml:space="preserve">
          <source>Pass the file name and content and Action Mailer and the &lt;a href=&quot;https://github.com/mikel/mail&quot;&gt;Mail gem&lt;/a&gt; will automatically guess the mime_type, set the encoding, and create the attachment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a839de07e8b68f241c2a7c57e9f838a538d1c4c" translate="yes" xml:space="preserve">
          <source>Pass the file name and specify headers and content and Action Mailer and Mail will use the settings you pass in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b482b63a553f6ff2629938eef051084f313d98" translate="yes" xml:space="preserve">
          <source>Passenger</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba9f242e54d2f884849ecf759527ec4a59b0d03" translate="yes" xml:space="preserve">
          <source>Passenger makes it easy to run your application in a subdirectory. You can find the relevant configuration in the &lt;a href=&quot;https://www.phusionpassenger.com/library/deploy/apache/deploy/ruby/#deploying-an-app-to-a-sub-uri-or-subdirectory&quot;&gt;Passenger manual&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3024167927172510e962e9a92ff0bf2e4004322f" translate="yes" xml:space="preserve">
          <source>Passes each element of &lt;code&gt;candidates&lt;/code&gt; collection to &lt;a href=&quot;arrayinquirer&quot;&gt;ArrayInquirer&lt;/a&gt; collection. The method returns true if any element from the &lt;a href=&quot;arrayinquirer&quot;&gt;ArrayInquirer&lt;/a&gt; collection is equal to the stringified or symbolized form of any element in the &lt;code&gt;candidates&lt;/code&gt; collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6417ca905d30ae549d58a111b569298404b88526" translate="yes" xml:space="preserve">
          <source>Passes if evaluated code in the yielded block raises no exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190d403c7f6d783617446ba82850d0a10e9498c9" translate="yes" xml:space="preserve">
          <source>Passes if the object's model responds to &lt;code&gt;errors&lt;/code&gt; and if calling &lt;code&gt;[](attribute)&lt;/code&gt; on the result of this method returns an array. Fails otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17245a215671968976fdfe888a7c83b0eeb90454" translate="yes" xml:space="preserve">
          <source>Passes if the object's model responds to &lt;code&gt;model_name&lt;/code&gt; both as an instance method and as a class method, and if calling this method returns a string with some convenience methods: &lt;code&gt;:human&lt;/code&gt;, &lt;code&gt;:singular&lt;/code&gt; and &lt;code&gt;:plural&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc5696d68730e36c01c575dad98ce389c6b8d76" translate="yes" xml:space="preserve">
          <source>Passes if the object's model responds to &lt;code&gt;persisted?&lt;/code&gt; and if calling this method returns either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. Fails otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dfdc6b8ee1e9b57d6b195835d4671170823a118" translate="yes" xml:space="preserve">
          <source>Passes if the object's model responds to &lt;code&gt;to_key&lt;/code&gt; and if calling this method returns &lt;code&gt;nil&lt;/code&gt; when the object is not persisted. Fails otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8f81f7f2146ea8d5adc3d3bbb4f42602962f5e" translate="yes" xml:space="preserve">
          <source>Passes if the object's model responds to &lt;code&gt;to_param&lt;/code&gt; and if calling this method returns &lt;code&gt;nil&lt;/code&gt; when the object is not persisted. Fails otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4206ea4b13fd6bf657ab649e6d2084a6e4ec4fdd" translate="yes" xml:space="preserve">
          <source>Passes if the object's model responds to &lt;code&gt;to_partial_path&lt;/code&gt; and if calling this method returns a string. Fails otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2704f6149ae5b0a0029c24090d1a277ae529e5d3" translate="yes" xml:space="preserve">
          <source>Passes the record off to the class or classes specified and allows them to add errors based on more complex conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727b278b8ad46591559c1c04386d3b383ef7cf54" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;true&lt;/code&gt; to the &lt;code&gt;:polymorphic&lt;/code&gt; option indicates that this is a polymorphic association. Polymorphic associations were discussed in detail &lt;a href=&quot;#polymorphic-associations&quot;&gt;earlier in this guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="247384f290e3a3762405764ead608e5fcf97f695" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;true&lt;/code&gt; will forcibly tidy all bytes, assuming that the string's encoding is entirely CP1252 or ISO-8859-1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f10ff0861aaf5eec9bedffb4715234f3953379d3" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;url: my_specified_path&lt;/code&gt; to &lt;code&gt;form_with&lt;/code&gt; tells the form where to make the request. However, as explained below, you can also pass ActiveRecord objects to the form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e09483dc036d027309f40ff5bc938f20fe172cd" translate="yes" xml:space="preserve">
          <source>Passing Modifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e1723361edc1a194cf39ffb62d6d84d2be7746" translate="yes" xml:space="preserve">
          <source>Passing Parameters to Channels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f675ccebf1ef23fe2e941ba31b62bc813d2435d0" translate="yes" xml:space="preserve">
          <source>Passing Variables to Translations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e699dbab1cc292de864d7c3048d1e745d27af9b" translate="yes" xml:space="preserve">
          <source>Passing a &lt;code&gt;String&lt;/code&gt; to &lt;code&gt;to:&lt;/code&gt; will expect a &lt;code&gt;controller#action&lt;/code&gt; format. When using a &lt;code&gt;Symbol&lt;/code&gt;, the &lt;code&gt;to:&lt;/code&gt; option should be replaced with &lt;code&gt;action:&lt;/code&gt;. When using a &lt;code&gt;String&lt;/code&gt; without a &lt;code&gt;#&lt;/code&gt;, the &lt;code&gt;to:&lt;/code&gt; option should be replaced with &lt;code&gt;controller:&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e5aabc7d7b4ced9204fe601d3348bbfbe7c477" translate="yes" xml:space="preserve">
          <source>Passing a block will select all of a person's pets in SQL and then perform the count using Ruby.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e975c77f0c3c2aa939b52a248658f71dacca721a" translate="yes" xml:space="preserve">
          <source>Passing a hash containing &lt;code&gt;:from&lt;/code&gt; and &lt;code&gt;:to&lt;/code&gt; will make this change reversible in migration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae646c5afecc93da682e92e9cd6b8a140c2a36a0" translate="yes" xml:space="preserve">
          <source>Passing a record (like an Active Record) instead of a hash as the options parameter will trigger the named route for that record. The lookup will happen on the name of the class. So passing a Workshop object will attempt to use the &lt;code&gt;workshop_path&lt;/code&gt; route. If you have a nested route, such as &lt;code&gt;admin_workshop_path&lt;/code&gt; you'll have to call that explicitly (it's impossible for &lt;code&gt;url_for&lt;/code&gt; to guess that route).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445f3a626410ddb23b7092107b56bbc720f55147" translate="yes" xml:space="preserve">
          <source>Passing attributes for an associated collection in the form of a hash of hashes can be used with hashes generated from HTTP/HTML parameters, where there may be no natural way to submit an array of hashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630baeda11300c5e83b04a418485ba1062831c7a" translate="yes" xml:space="preserve">
          <source>Passing content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0345ca763f49d8f0842604d3e8bae0c066b794" translate="yes" xml:space="preserve">
          <source>Passing in a custom deprecator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f90eaab2aeeb882cee63edf8285f82b786d162" translate="yes" xml:space="preserve">
          <source>Passing in a fixture name to this dynamic method returns the fixture matching this name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c488da5e60db64250d8c8fe861fde860b757bae" translate="yes" xml:space="preserve">
          <source>Passing in an array of attributes to group by is also supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d5fddaa42d427476be7eae817310ca43f29c78" translate="yes" xml:space="preserve">
          <source>Passing in any fixture name that does not exist will raise &lt;code&gt;StandardError&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042a67b28f16b580a5f6097a3ec35ca21ffbc37c" translate="yes" xml:space="preserve">
          <source>Passing in arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d448f26996bf006fb1df819ef58bd8e155d633" translate="yes" xml:space="preserve">
          <source>Passing in multiple fixture names returns all fixtures matching these names:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad985ebe5cd8f5d1e4029fb7dd341177eb4a2bd" translate="yes" xml:space="preserve">
          <source>Passing in no arguments returns all fixtures:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aca1bb2ec3fa302113fd8420040adbb1c33fbd9" translate="yes" xml:space="preserve">
          <source>Passing local variables to sub templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6815dc5480032b081a823fa6bfb81de64fefbc" translate="yes" xml:space="preserve">
          <source>Passing options to the type constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18b58d89c9e9b2a505f95ead1bc982857ed53c1" translate="yes" xml:space="preserve">
          <source>Passing the article object to the &lt;code&gt;form_with&lt;/code&gt; method will automatically set the URL for submitting the edited article form. This option tells Rails that we want this form to be submitted via the &lt;code&gt;PATCH&lt;/code&gt; HTTP method, which is the HTTP method you're expected to use to &lt;strong&gt;update&lt;/strong&gt; resources according to the REST protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c2220d1c2e70474b2fa2e5240db3e549a0b3ff" translate="yes" xml:space="preserve">
          <source>Password length should be less than or equal to 72 bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a610d2d5e9f6139763b5c2e8105d61f0809eb970" translate="yes" xml:space="preserve">
          <source>Password must be present on creation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4639da0b583ed086c6c3eed4bae212f2818bd5b2" translate="yes" xml:space="preserve">
          <source>Password should be equal to its confirmation (provided &lt;code&gt;XXX_confirmation&lt;/code&gt; is passed along).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b1e3a07fb3c0875a87a1ac083ed38ce29a952b" translate="yes" xml:space="preserve">
          <source>Password should be present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519e39132bb98418cc0483cc446ccf5f3c8dcffe" translate="yes" xml:space="preserve">
          <source>Path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7190e9d38d4f500e5223cbfafc0de3354142882" translate="yes" xml:space="preserve">
          <source>Path and URL Helpers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4d1b70737ffd9e0f406e195be2d07a45b96d8f" translate="yes" xml:space="preserve">
          <source>Path to loaded initializer from &lt;code&gt;config/initializers&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c7776167f00d9f7a97c5c7ee3da3e3a8bb3abb" translate="yes" xml:space="preserve">
          <source>Path to lookup a USAGE description in a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf94d26c70693f391aecbf6bf834623160ff63b2" translate="yes" xml:space="preserve">
          <source>Paths are traversed in the order they occur in the search path. By default, this means the files in &lt;code&gt;app/assets&lt;/code&gt; take precedence, and will mask corresponding paths in &lt;code&gt;lib&lt;/code&gt; and &lt;code&gt;vendor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428e58ce9e1f94ad034bfce34e35c75b482468b0" translate="yes" xml:space="preserve">
          <source>Paths in this guide are relative to Rails or a Rails application unless otherwise specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa5bee237602066b75af5f6c28f9955a47ae102" translate="yes" xml:space="preserve">
          <source>Paths::Path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c41655e361567c5d7ae4438539a2397080865c28" translate="yes" xml:space="preserve">
          <source>Paths::Path#&amp;lt;&amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b66347f43e39c38e09a2dd40e2035948bf5ecdc" translate="yes" xml:space="preserve">
          <source>Paths::Path#children</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094569eb3ee631a8ab33934cdb38824d20862aa1" translate="yes" xml:space="preserve">
          <source>Paths::Path#concat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebfec52f3c3cbca26f90c77984ea3f4b239bc4ff" translate="yes" xml:space="preserve">
          <source>Paths::Path#each</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569cd6b721672f7727739678036f62eab53b7e26" translate="yes" xml:space="preserve">
          <source>Paths::Path#existent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74609a931557faebd40895da25880d9cbfd5334f" translate="yes" xml:space="preserve">
          <source>Paths::Path#existent_directories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e60e0c875edc04a16752d5cdd9a9203f86dee30" translate="yes" xml:space="preserve">
          <source>Paths::Path#expanded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71fa9104c5a4ad979e3b3901abc82bd2afb3e436" translate="yes" xml:space="preserve">
          <source>Paths::Path#first</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73144dd5edb8e5f3fb164484b237e283d20d8d54" translate="yes" xml:space="preserve">
          <source>Paths::Path#glob</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141686438e42f0b58232db66265cb83a628fd956" translate="yes" xml:space="preserve">
          <source>Paths::Path#last</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc46cf97b45886a95edeb7c951eb4165681296ae" translate="yes" xml:space="preserve">
          <source>Paths::Path#push</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680e1451d7d620a35f364724b83251ea55c0be51" translate="yes" xml:space="preserve">
          <source>Paths::Path#to_a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d2ae51e51d420e332af9919c30ae95db0a91d4" translate="yes" xml:space="preserve">
          <source>Paths::Path#to_ary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987ac0cb0b34ebbf09c72122bdc389a9e2e062f8" translate="yes" xml:space="preserve">
          <source>Paths::Path#unshift</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c6dc7f6557778b9b01827d1803ea112a30acff4" translate="yes" xml:space="preserve">
          <source>Paths::Path::new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e82d632e106ef6b1db026fcd848e5a3c8d00f5" translate="yes" xml:space="preserve">
          <source>Paths::Root</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="739e42e85204608faac1ff574fa06bd539766896" translate="yes" xml:space="preserve">
          <source>Paths::Root#[]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b09469b4d6d2abe73470c252bf4e46d9a74dbbc" translate="yes" xml:space="preserve">
          <source>Paths::Root#[]=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461363ef7effdfbcd909e11d45640039ce675fe4" translate="yes" xml:space="preserve">
          <source>Paths::Root#add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e4e97dd1591d63a7e952502c0bb82eee09b020" translate="yes" xml:space="preserve">
          <source>Paths::Root#all_paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ab0eea26015461fb57d8f1f7be71c24ab10ac7" translate="yes" xml:space="preserve">
          <source>Paths::Root#autoload_once</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19fdfec2521624951930e315d394104414867e1" translate="yes" xml:space="preserve">
          <source>Paths::Root#autoload_paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca669c16c966bc976823c509c6c515d5df95bfc" translate="yes" xml:space="preserve">
          <source>Paths::Root#eager_load</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0dbc6337ee5a2ba30481a8863c84e482c4eb4e0" translate="yes" xml:space="preserve">
          <source>Paths::Root#keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72231428e51edbbaea62e5c7a43a8094e43972ce" translate="yes" xml:space="preserve">
          <source>Paths::Root#load_paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307249bd8039330895af5a2bd60d7c910d1a7e18" translate="yes" xml:space="preserve">
          <source>Paths::Root#path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb29c9b4bac567a14bdb59fc93ad15d3e1c14a5a" translate="yes" xml:space="preserve">
          <source>Paths::Root#values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74e9a3e3e846ff7fcbeb43fdee43a29987f2a866" translate="yes" xml:space="preserve">
          <source>Paths::Root#values_at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27119eee44536e308c88b7f39abc724fa3c3b2a" translate="yes" xml:space="preserve">
          <source>Paths::Root::new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8d2afffaefaee555f74e64ef551c9cd09ce086" translate="yes" xml:space="preserve">
          <source>Pay special attention in the previous paragraphs to the distinction between class and module objects, constant names, and value objects associated to them in constant tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed8d3c55b168c6394db3effbba921af8ebf9699e" translate="yes" xml:space="preserve">
          <source>Pending: Just received by one of the ingress controllers and scheduled for routing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="336b65296d7d9818f37c3852f6734b9fe50d4b69" translate="yes" xml:space="preserve">
          <source>People intuitively grasp in which language the content will be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90eb48b47901b245ae45758482d1f0b96e05f8d" translate="yes" xml:space="preserve">
          <source>PerThreadRegistry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfa33b1ab26c0d20347eab8c0af0e320bcbca7ee" translate="yes" xml:space="preserve">
          <source>PerThreadRegistry#instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4177869988553a84f1594045d1f4907624bd1c09" translate="yes" xml:space="preserve">
          <source>PerThreadRegistry::extended</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f4c97142c000d8a2f6cb3c6d8285419703e712" translate="yes" xml:space="preserve">
          <source>Perform action on a channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50597bfc1bab85b917a3f116e72ee0e9ba1480e7" translate="yes" xml:space="preserve">
          <source>Perform database operations in an object-oriented fashion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6add68723ec4d0346fde6fcd78558dc00891b2" translate="yes" xml:space="preserve">
          <source>Perform the work in the supplied block as an execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb90f31e24c2ceba5a9576524cb12c5774b6a2a4" translate="yes" xml:space="preserve">
          <source>Performing Custom Validations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eac63830f55ea4e260e205367f0ed6aa0abe907" translate="yes" xml:space="preserve">
          <source>Performs a DELETE request with the given parameters. See &lt;a href=&quot;session#method-i-process&quot;&gt;ActionDispatch::Integration::Session#process&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82be5750af67597fc9ca85286c7108c74fd58d10" translate="yes" xml:space="preserve">
          <source>Performs a GET request with the given parameters. See &lt;a href=&quot;session#method-i-process&quot;&gt;ActionDispatch::Integration::Session#process&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ccd9f6f17bff245eeb8470e50c1bc0ad24928ca" translate="yes" xml:space="preserve">
          <source>Performs a HEAD request with the given parameters. See &lt;a href=&quot;session#method-i-process&quot;&gt;ActionDispatch::Integration::Session#process&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b36e9133ec4bded109a22ca9070ec456e6e5f8" translate="yes" xml:space="preserve">
          <source>Performs a PATCH request with the given parameters. See &lt;a href=&quot;session#method-i-process&quot;&gt;ActionDispatch::Integration::Session#process&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5cb7fe639692dac4a9d8a999fbb78f1fda7ce52" translate="yes" xml:space="preserve">
          <source>Performs a POST request with the given parameters. See &lt;a href=&quot;session#method-i-process&quot;&gt;ActionDispatch::Integration::Session#process&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df173e56c7216d8951c5d6ff650cad2df735f23b" translate="yes" xml:space="preserve">
          <source>Performs a PUT request with the given parameters. See &lt;a href=&quot;session#method-i-process&quot;&gt;ActionDispatch::Integration::Session#process&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee5882bd3f813eaf3dad27cdc9ba677af9fd8d1" translate="yes" xml:space="preserve">
          <source>Performs a destructive squish. See &lt;a href=&quot;string#method-i-squish&quot;&gt;#squish&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9947ff3d79c8e1eac3f2eb61e9a057be75af39" translate="yes" xml:space="preserve">
          <source>Performs a joins on &lt;code&gt;args&lt;/code&gt;. The given symbol(s) should match the name of the association(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e3e95877dbec5785aacbf92eab3b4177c257a8" translate="yes" xml:space="preserve">
          <source>Performs a left outer joins on &lt;code&gt;args&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9619fd35e4e55947c9d8a68c9cfb40ec2b5a116b" translate="yes" xml:space="preserve">
          <source>Performs all enqueued jobs. If a block is given, performs all of the jobs that were enqueued throughout the duration of the block. If a block is not given, performs all of the enqueued jobs up to this point in the test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668f0da9f11210ae9523e6eab3e2440f764daf37" translate="yes" xml:space="preserve">
          <source>Performs canonical decomposition on all the characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="890d9c7dedc6fbb1ef52ce0dd0da2068bf2d92ae" translate="yes" xml:space="preserve">
          <source>Performs composition on all the characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f30eec6177bd7ee700f504614a0188749b24bf" translate="yes" xml:space="preserve">
          <source>Performs connection attempt to exert &lt;a href=&quot;behavior#method-i-connect&quot;&gt;connect&lt;/a&gt; on the connection under test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f14a52f277082af584bdc83c9a70ef3f1aeb730" translate="yes" xml:space="preserve">
          <source>Performs keys transformation and returns the altered &lt;code&gt;ActionController::Parameters&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7ca1717e0f44921a25df9949fefa1234fe5420" translate="yes" xml:space="preserve">
          <source>Performs parameters wrapping upon the request. Called automatically by the metal call stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc09202ef4de0a408dc4290a73a23d8a80a93a9d" translate="yes" xml:space="preserve">
          <source>Performs the actual request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992a6ea73efb4c2cf82a73d74ead518b5ab1e6db" translate="yes" xml:space="preserve">
          <source>Performs the actual template rendering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13410c0a714d8b52527c2a50235a36b0088705b0" translate="yes" xml:space="preserve">
          <source>Performs the job immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60de1fb8c57243d267395bc60848f215974fbb6f" translate="yes" xml:space="preserve">
          <source>Performs the job immediately. The job is not sent to the queuing adapter but directly executed by blocking the execution of others until it's finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101ed67b68063d979973aba110bc78c3390b3150" translate="yes" xml:space="preserve">
          <source>Performs the opposite of &lt;code&gt;valid?&lt;/code&gt;. Returns &lt;code&gt;true&lt;/code&gt; if errors were added, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe347ffb1a66d018a17e8a3a2dc02be3643197d" translate="yes" xml:space="preserve">
          <source>Performs values transformation and returns the altered &lt;code&gt;ActionController::Parameters&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb392c05f3b7bcac08965ce9fafd49ca3349e46" translate="yes" xml:space="preserve">
          <source>Periodically performs a task on the channel, like updating an online user counter, polling a backend for new status messages, sending regular &amp;ldquo;heartbeat&amp;rdquo; messages, or doing some internal work and giving progress updates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6a5642ffe6092e172d3377807602d7ad45f5d5" translate="yes" xml:space="preserve">
          <source>Permitted lists are also a good approach against the human factor of forgetting something in the restricted list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d21b211011db4c2117b96d4e9e174815d3f857" translate="yes" xml:space="preserve">
          <source>Permitted lists versus Restricted lists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4782469ecc3622759893c8f2291c74de65211189" translate="yes" xml:space="preserve">
          <source>Persistence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b6b86cf5f12c64ced5270167516a3d7a2045f2" translate="yes" xml:space="preserve">
          <source>Persistence#becomes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64abdd979ee2720c1172be123df76a6510f67e0" translate="yes" xml:space="preserve">
          <source>Persistence#becomes!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b426256ae9fd6226bd92e54c7c4ed73f42d89deb" translate="yes" xml:space="preserve">
          <source>Persistence#decrement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a0a12f3e72261f96cfa428cd1b2e2d9ee42aa0" translate="yes" xml:space="preserve">
          <source>Persistence#decrement!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a8b0e2db1760d814e911887190113d9e56b410" translate="yes" xml:space="preserve">
          <source>Persistence#delete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3157671882b93c1d3f8b0b5d5a481c1cf7784c16" translate="yes" xml:space="preserve">
          <source>Persistence#destroy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532b0d142d9efc7385b92bcd599d397fd1e020de" translate="yes" xml:space="preserve">
          <source>Persistence#destroy!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35585d84afc55737dafbd0dc27506288566234ab" translate="yes" xml:space="preserve">
          <source>Persistence#destroyed?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2153282993f62774876067fef5ca1a5b43f5c9a" translate="yes" xml:space="preserve">
          <source>Persistence#increment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3a112f73741fe64309b6688ac231123566e0a7" translate="yes" xml:space="preserve">
          <source>Persistence#increment!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7354345ed5aed9af816ab2ebce8fcc02155aa464" translate="yes" xml:space="preserve">
          <source>Persistence#new_record?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2706292d2f5677bf11b38b230b299b10c16b4410" translate="yes" xml:space="preserve">
          <source>Persistence#persisted?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b8af2e5a7468a015f172887d6eb9f64b6e0291" translate="yes" xml:space="preserve">
          <source>Persistence#reload</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91da93983292bfe5ae13d85a495494baae2588b6" translate="yes" xml:space="preserve">
          <source>Persistence#save</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241722a40286958ec2209205783c13052d8616ba" translate="yes" xml:space="preserve">
          <source>Persistence#save!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a2f0bd5c92214629c449e0cfdb3b335c78d55f" translate="yes" xml:space="preserve">
          <source>Persistence#toggle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd5b3cf529bed00208155a459a8f56b395ed17c" translate="yes" xml:space="preserve">
          <source>Persistence#toggle!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b7a0f5e3b403138de7844af9e16f489d0dfdce" translate="yes" xml:space="preserve">
          <source>Persistence#touch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47791519d6e91870bd007ae4c40aa90a3f600d82" translate="yes" xml:space="preserve">
          <source>Persistence#update</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd6fd8e8555975f8aa86d14ab34e7a4506941d9" translate="yes" xml:space="preserve">
          <source>Persistence#update!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d7206980f3016c7128b98226dd25ce206259427" translate="yes" xml:space="preserve">
          <source>Persistence#update_attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b815b19781971844e71441a01a313699ae8ffd" translate="yes" xml:space="preserve">
          <source>Persistence#update_attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e975d7f2afb2c46c1b59255471814309450eb776" translate="yes" xml:space="preserve">
          <source>Persistence#update_attributes!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f86072692c5f515b993eda2124f5e83f0aa51fb" translate="yes" xml:space="preserve">
          <source>Persistence#update_column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4bcde6fd7738a2c5f754c03e0454d848607b74" translate="yes" xml:space="preserve">
          <source>Persistence#update_columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e01d4f9c7d7747692295c0dcaa84a9490d644b" translate="yes" xml:space="preserve">
          <source>Persistence::ClassMethods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8935aefed8f0f58c4498201e62e0cb64ddb43ae" translate="yes" xml:space="preserve">
          <source>Persistence::ClassMethods#create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e5c7d741181f73b19fb73b0e6ae96a5ac6b790" translate="yes" xml:space="preserve">
          <source>Persistence::ClassMethods#create!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5310dac03fe4783c620686f4fb08f39b464f6806" translate="yes" xml:space="preserve">
          <source>Persistence::ClassMethods#delete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5e8e34b9f93426e7a7cc6dad70a24d6cf25164" translate="yes" xml:space="preserve">
          <source>Persistence::ClassMethods#destroy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f4df7ef862042b37650e866c7274bded5c616d" translate="yes" xml:space="preserve">
          <source>Persistence::ClassMethods#insert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa1af61bcf7660157bc243f231957d329e81fa1" translate="yes" xml:space="preserve">
          <source>Persistence::ClassMethods#insert!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1526e2e9ab0ca7a7dfe2c1ef384c5b0c4eb0b1e7" translate="yes" xml:space="preserve">
          <source>Persistence::ClassMethods#insert_all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11879dc2ace3d74b1d4f1b86c7a24913fc718c9c" translate="yes" xml:space="preserve">
          <source>Persistence::ClassMethods#insert_all!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f749f444ac602ae990d17527df41ab3fad623c" translate="yes" xml:space="preserve">
          <source>Persistence::ClassMethods#instantiate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf9a8302eca915637d316180a3bbb2f67039830" translate="yes" xml:space="preserve">
          <source>Persistence::ClassMethods#update</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddec3e112aa7fc8dcbb98a36dc8c9418e2727784" translate="yes" xml:space="preserve">
          <source>Persistence::ClassMethods#upsert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ab1cb24e4482d039f469c0eb9312b6c35d4865" translate="yes" xml:space="preserve">
          <source>Persistence::ClassMethods#upsert_all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7aeaedcfd280905587ea017020fed1dca2b57e3" translate="yes" xml:space="preserve">
          <source>Pessimistic Locking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938a8fdf7333a62dc17b0df3b0ceb17bed6f7028" translate="yes" xml:space="preserve">
          <source>Pessimistic locking uses a locking mechanism provided by the underlying database. Using &lt;code&gt;lock&lt;/code&gt; when building a relation obtains an exclusive lock on the selected rows. Relations using &lt;code&gt;lock&lt;/code&gt; are usually wrapped inside a transaction for preventing deadlock conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1848aa9890ebf04188ba701a9b81e532c6aae877" translate="yes" xml:space="preserve">
          <source>Pick an asset host for this source. Returns &lt;code&gt;nil&lt;/code&gt; if no host is set, the host if no wildcard is set, the host interpolated with the numbers 0-3 if it contains &lt;code&gt;%d&lt;/code&gt; (the number is the source hash mod 4), or the value returned from invoking call on an object responding to call (proc or otherwise).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6554cdc35c10ed6bb25118d7e5071e5f304b845a" translate="yes" xml:space="preserve">
          <source>Pick the value(s) from the named column(s) in the current relation. This is short-hand for &lt;code&gt;relation.limit(1).pluck(*column_names).first&lt;/code&gt;, and is primarily useful when you have a relation that's already narrowed down to a single row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a44c9e9a599440f3d95f66b47234da7aef98c9" translate="yes" xml:space="preserve">
          <source>Pipeline assets can be placed inside an application in one of three locations: &lt;code&gt;app/assets&lt;/code&gt;, &lt;code&gt;lib/assets&lt;/code&gt; or &lt;code&gt;vendor/assets&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d84b9e9b7a1b79c0f6ce317e124c9afa6f65b25" translate="yes" xml:space="preserve">
          <source>Places a file into &lt;code&gt;lib&lt;/code&gt; which contains the specified code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b3f752867f091b6e03467dcb1a4a2ac07f2bf2" translate="yes" xml:space="preserve">
          <source>Places a file into &lt;code&gt;vendor&lt;/code&gt; which contains the specified code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18a3dece968b8a715ebcfe965fd87d77551bcd6" translate="yes" xml:space="preserve">
          <source>Please Note: We are not accepting pull requests for new adapters. See the README for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a9620f1b31d6469402bcbf1201d75afd6c0f850" translate="yes" xml:space="preserve">
          <source>Please also note that &lt;code&gt;try&lt;/code&gt; is defined on &lt;code&gt;Object&lt;/code&gt;. Therefore, it won't work with instances of classes that do not have &lt;code&gt;Object&lt;/code&gt; among their ancestors, like direct subclasses of &lt;code&gt;BasicObject&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b071339c7c6dd11a0c5df60a9d3dc8b4055597" translate="yes" xml:space="preserve">
          <source>Please be aware of different RDBMS implementations behavior with &lt;code&gt;:decimal&lt;/code&gt; columns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3552db9f33f84c92dbb23997894bddbcb2b94320" translate="yes" xml:space="preserve">
          <source>Please check the documentation of &lt;a href=&quot;classmethods#method-i-after_commit&quot;&gt;after_commit&lt;/a&gt; for options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8cdb8cc9de8d46cc3ed671c28766fb27fd82861" translate="yes" xml:space="preserve">
          <source>Please check unscoped if you want to remove all previous scopes (including the default_scope) during the execution of a block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c608b22490b2b75cf3a08232084ec209e673b60e" translate="yes" xml:space="preserve">
          <source>Please consult the class method documentation for more information on creating your own validator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5416bd58b43d492a1bbb72915d25a656eff5b5b5" translate="yes" xml:space="preserve">
          <source>Please contribute if you see any typos or factual errors. To get started, you can read our &lt;a href=&quot;https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation&quot;&gt;documentation contributions&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b62baa7e3a7992adbaa301d294c4e828e347d5a" translate="yes" xml:space="preserve">
          <source>Please note &lt;strong&gt;this method is not atomic&lt;/strong&gt;, it runs first a SELECT, and if there are no results an INSERT is attempted. If there are other threads or processes there is a race condition between both calls and it could be the case that you end up with two similar records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73861b819c9f88f934f4e52a2db5e9f31b272fc8" translate="yes" xml:space="preserve">
          <source>Please note that default redirection is a 301 &quot;Moved Permanently&quot; redirect. Keep in mind that some web browsers or proxy servers will cache this type of redirect, making the old page inaccessible. You can use the &lt;code&gt;:status&lt;/code&gt; option to change the response status:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7df71db8d4eb6a0cc7a60e5f390156dde44176" translate="yes" xml:space="preserve">
          <source>Please note that if you specify a :domain when setting a cookie, you must also specify the domain when deleting the cookie:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679635c93d17a564236263977763770a4ce6b72c" translate="yes" xml:space="preserve">
          <source>Please note that if your application is dependent on loading certain pages in a &lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;, then you may need to explicitly set &lt;code&gt;X-Frame-Options&lt;/code&gt; to &lt;code&gt;ALLOW-FROM ...&lt;/code&gt; or &lt;code&gt;ALLOWALL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fcef3ecd47fc2d757cbd5c246c59b803d87abf" translate="yes" xml:space="preserve">
          <source>Please note that sanitizing user-provided text does not guarantee that the resulting markup is valid or even well-formed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921cbf2ba3e91b3927c88c93b8795547928f9c5d" translate="yes" xml:space="preserve">
          <source>Please note that these options *are not thread-safe*. In a multi-threaded environment they should only be set once at boot-time and never mutated at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ef53d62e5132cb16afb3263f91a23c90d8017e" translate="yes" xml:space="preserve">
          <source>Please note that this will NOT install the gems for you and you will have to run &lt;code&gt;bundle install&lt;/code&gt; to do that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d208085a78c5ca1be9d6012ac9844980c0b8f315" translate="yes" xml:space="preserve">
          <source>Please note that you should wait to set &lt;code&gt;secret_key_base&lt;/code&gt; until you have 100% of your userbase on Rails 4.x and are reasonably sure you will not need to rollback to Rails 3.x. This is because cookies signed based on the new &lt;code&gt;secret_key_base&lt;/code&gt; in Rails 4.x are not backwards compatible with Rails 3.x. You are free to leave your existing &lt;code&gt;secret_token&lt;/code&gt; in place, not set the new &lt;code&gt;secret_key_base&lt;/code&gt;, and ignore the deprecation warnings until you are reasonably sure that your upgrade is otherwise complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b6142e1b25e406c90e29cbb6833017ab9e75e2" translate="yes" xml:space="preserve">
          <source>Please note the fourth argument does not set a column's default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91e889dcf73b5135af80dcf8104483596d4fcc3" translate="yes" xml:space="preserve">
          <source>Please read &lt;a href=&quot;https://github.com/rails/rails/pull/9978&quot;&gt;Pull Request #9978&lt;/a&gt; for details on the move to encrypted session cookies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff57551cc60f8c1d984a442e27b66b06b361c14" translate="yes" xml:space="preserve">
          <source>Please refer to the documentation of &lt;code&gt;Date._parse&lt;/code&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f65c5183fc5f3408b6919b7f1fcce92ef889c97d" translate="yes" xml:space="preserve">
          <source>Please refer to the documentation of the base helper for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6cf20aaa7ccc3b71d7e36f9ceafdfae900691c" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/Testing/TimeHelpers.html&quot;&gt;&lt;code&gt;ActiveSupport::Testing::TimeHelpers&lt;/code&gt; API Documentation&lt;/a&gt; for in-depth information about the available time helpers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ecd6b6561f115fc933d5cb8ddfd43399259d994" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;https://github.com/teamcapybara/capybara#setup&quot;&gt;Capybara's documentation&lt;/a&gt; for additional settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804950eaca790fb3b5edbf8df1d87238652d0cf0" translate="yes" xml:space="preserve">
          <source>Please see further details in the &lt;a href=&quot;https://guides.rubyonrails.org/active_record_querying.html#running-explain&quot;&gt;Active Record Query Interface guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d672fa5123d43ba6babadefab9dc6baaca002e" translate="yes" xml:space="preserve">
          <source>Please use only for reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9360552133f2334ddadfb048b78fde4158b6fbd" translate="yes" xml:space="preserve">
          <source>Please, check the &lt;a href=&quot;https://github.com/fxn/zeitwerk#file-structure&quot;&gt;Zeitwerk documentation&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46bfebf5facedd96d876ec8911aa9e16ab8b2139" translate="yes" xml:space="preserve">
          <source>Please, do not mutate &lt;code&gt;ActiveSupport::Dependencies.autoload_paths&lt;/code&gt;, the public interface to change autoload paths is &lt;code&gt;config.autoload_paths&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4183850dcf12d1d2ff5d3cb71f65c3cf1e5aa42" translate="yes" xml:space="preserve">
          <source>Pluck all the ID's for the relation using the table's primary key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2181360b33aecd153e9b8296c2271f8610048e" translate="yes" xml:space="preserve">
          <source>Pluck returns an &lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt; of attribute values type-casted to match the plucked column names, if they can be deduced. Plucking an SQL fragment returns &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; values by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8846156e86da8aeb3b48ce6d98d18b51a8eff9" translate="yes" xml:space="preserve">
          <source>Plugins for Debugging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f55eb3ccfe6d119c47582c9f4d34e4b3ccea1db" translate="yes" xml:space="preserve">
          <source>Plugins: Many third-party libraries come with support for Rails that reduce or eliminate the cost of setting up and gluing together the library and the web framework. This includes things like overriding default generators, adding Rake tasks, and honoring Rails choices (like the logger and cache back-end).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deece46c22e64f44a14fe2209222289025573b98" translate="yes" xml:space="preserve">
          <source>Pluralization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79a28423ed1ae0232efb54ad41227d0955084f3" translate="yes" xml:space="preserve">
          <source>Point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f8640c2c24740a64a07c2acd88e37fe1746c19" translate="yes" xml:space="preserve">
          <source>Points to a &lt;code&gt;Rack&lt;/code&gt; endpoint. Can be an object that responds to &lt;code&gt;call&lt;/code&gt; or a string representing a controller's action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d61184962dda249c7c096096c40ff46b825f4a7" translate="yes" xml:space="preserve">
          <source>Policies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940615d7b1c2a240a0fbb7f03ce78d46e92515c9" translate="yes" xml:space="preserve">
          <source>Polymorphic Associations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85982cbe9d25d3b801f589959916be5860f04742" translate="yes" xml:space="preserve">
          <source>Polymorphic URL helpers are methods for smart resolution to a named route call when given an Active Record model instance. They are to be used in combination with ActionController::Resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80f0d6c800afcc9b331affa8224c15080642273" translate="yes" xml:space="preserve">
          <source>Polymorphic URL helpers are used in a number of places throughout the Rails framework:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ce11ea2bc722e61bfdfd5498c9d7cbdfb8517b" translate="yes" xml:space="preserve">
          <source>Polymorphic associations on models are not restricted on what types of models they can be associated with. Rather, they specify an interface that a &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; association must adhere to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44844a171d8554f83e71096c8aef38908cb2ee7" translate="yes" xml:space="preserve">
          <source>Polymorphic belongs_to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e5babfb7c217ddace462bb4715af353b10c95b" translate="yes" xml:space="preserve">
          <source>Populate &lt;code&gt;coder&lt;/code&gt; with attributes about this record that should be serialized. The structure of &lt;code&gt;coder&lt;/code&gt; defined in this method is guaranteed to match the structure of &lt;code&gt;coder&lt;/code&gt; passed to the &lt;a href=&quot;core#method-i-init_with&quot;&gt;init_with&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5df6a30b582106006128fbc78a5fe7177971252" translate="yes" xml:space="preserve">
          <source>Possible authenticity tokens sent in the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9823fdf78eb83e1f660d3199812babcd3ac2903b" translate="yes" xml:space="preserve">
          <source>Possible callbacks are: &lt;code&gt;before_add&lt;/code&gt;, &lt;code&gt;after_add&lt;/code&gt;, &lt;code&gt;before_remove&lt;/code&gt; and &lt;code&gt;after_remove&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810f5142a07f7cc75ea5e1c6b02060953c90adf8" translate="yes" xml:space="preserve">
          <source>Possible options for JavaScript compression are &lt;code&gt;:closure&lt;/code&gt;, &lt;code&gt;:uglifier&lt;/code&gt; and &lt;code&gt;:yui&lt;/code&gt;. These require the use of the &lt;code&gt;closure-compiler&lt;/code&gt;, &lt;code&gt;uglifier&lt;/code&gt; or &lt;code&gt;yui-compressor&lt;/code&gt; gems, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef4f19dbc69bc7fa8ed2879ac59a6eb92531a56" translate="yes" xml:space="preserve">
          <source>Possible output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216031616b32c207cd8fc2830fcc657dc31a6a4f" translate="yes" xml:space="preserve">
          <source>Possible values are &lt;code&gt;:random&lt;/code&gt;, &lt;code&gt;:parallel&lt;/code&gt;, &lt;code&gt;:alpha&lt;/code&gt;, &lt;code&gt;:sorted&lt;/code&gt;. Defaults to &lt;code&gt;:random&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0bb78b7680da2d132fed19999e428a3533d532" translate="yes" xml:space="preserve">
          <source>Postfix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b25c0e55d2e98054c0912b1ba844f297427b691" translate="yes" xml:space="preserve">
          <source>Postfix (&amp;lt;tt&amp;gt;bin/rails action_mailbox:ingress:postfix)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84230059c0a17310c64dc300dd08ac677151266" translate="yes" xml:space="preserve">
          <source>PostgreSQL allows the creation of &amp;ldquo;unlogged&amp;rdquo; tables, which do not record data in the PostgreSQL Write-Ahead Log. This can make the tables faster, but significantly increases the risk of data loss if the database crashes. As a result, this should not be used in production environments. If you would like all created tables to be unlogged in the test environment you can add the following line to your test.rb file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45516ffd2ae7de6675f6515ed8052ca2aa68a0b2" translate="yes" xml:space="preserve">
          <source>PostgreSQL json and hstore datatypes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65a0607d7002ddff8e90a70568fdc3103af8d7a" translate="yes" xml:space="preserve">
          <source>PostgreSQL offers a number of specific datatypes. Following is a list of types, that are supported by the PostgreSQL adapter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c760542366bcd285288b71185e886f63af9fb329" translate="yes" xml:space="preserve">
          <source>PostgreSQL: &lt;a href=&quot;https://www.postgresql.org/docs/current/static/using-explain.html&quot;&gt;Using EXPLAIN&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68b594d6cd417d4427e7741d7d293653d49012f" translate="yes" xml:space="preserve">
          <source>PostgreSQL: &lt;code&gt;:precision&lt;/code&gt; [1..infinity], &lt;code&gt;:scale&lt;/code&gt; [0..infinity]. No default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86cacd3c9a5e463a36003867f7e0e0182cb2fe97" translate="yes" xml:space="preserve">
          <source>Postmark</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4844d742539dce38893f315373365a6636c9c7d3" translate="yes" xml:space="preserve">
          <source>Pow! All is made clear. Active Record reflects on the fixture's model class, finds all the &lt;code&gt;belongs_to&lt;/code&gt; associations, and allows you to specify a target &lt;strong&gt;label&lt;/strong&gt; for the &lt;strong&gt;association&lt;/strong&gt; (monkey: george) rather than a target &lt;strong&gt;id&lt;/strong&gt; for the &lt;strong&gt;FK&lt;/strong&gt; (&lt;code&gt;monkey_id:
1&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63adb6be4f3a124ceb5ea5a8dd436b76ed21e06e" translate="yes" xml:space="preserve">
          <source>Precompiled assets exist on the file system and are served directly by your web server. They do not have far-future headers by default, so to get the benefit of fingerprinting you'll have to update your server configuration to add those headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="286a4e10dadeba8980ea9cad48f398e187cb4ffc" translate="yes" xml:space="preserve">
          <source>Precompiling Assets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deca7ab4d28dc963e1fc816e9bcfddb6626b41ce" translate="yes" xml:space="preserve">
          <source>Preemptively iterates through all stored keys and removes the ones which have expired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a1253e753248ddd47cb13636f8feea3c9306feb" translate="yes" xml:space="preserve">
          <source>Prefixed polymorphic helpers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c336d07b8219a3ea817e490e566980338f4bc66a" translate="yes" xml:space="preserve">
          <source>Prefixes nested shallow route names with specified prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9688b403ae371124e3d3177fba0b4120e2045811" translate="yes" xml:space="preserve">
          <source>Prefixes nested shallow routes with the specified path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2145ded1af1430caad5710a74d9bef2ce54465" translate="yes" xml:space="preserve">
          <source>Prefixing the Named Route Helpers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5a86a6d8959637d8505b8251b158849626278c" translate="yes" xml:space="preserve">
          <source>PreparedStatementCacheExpired</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdcce8b9d1ca7341ceecb4a5e7e4aaf16282d5d4" translate="yes" xml:space="preserve">
          <source>Prepares the context by setting the appropriate instance variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822589e8c1eb51d1e35dadfe1fcdb9feb80941e9" translate="yes" xml:space="preserve">
          <source>Prepend a callback after actions. See &lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;#_insert_callbacks&lt;/a&gt; for parameter details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a98da2464b2038444210e6da5163eba9b1e8199" translate="yes" xml:space="preserve">
          <source>Prepend a callback around actions. See &lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;#_insert_callbacks&lt;/a&gt; for parameter details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf12ff6f75ba25a42b615c9efd69bd6e823d6820" translate="yes" xml:space="preserve">
          <source>Prepend a callback before actions. See &lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;#_insert_callbacks&lt;/a&gt; for parameter details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f14af4f0a4bb67eb4365957efb7ea7594d33aeaa" translate="yes" xml:space="preserve">
          <source>Prepend a path to the list of view paths for the current &lt;code&gt;LookupContext&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e43bc99302f370007e546fd8abe1f24be1f7488" translate="yes" xml:space="preserve">
          <source>Prepend a path to the list of view paths for this controller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eddc512d123296f035be0758d047de74eaf32d0" translate="yes" xml:space="preserve">
          <source>Prepend view path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c93aa4ab33374bb8e7198b2daeff3e433c0fbc" translate="yes" xml:space="preserve">
          <source>Preprocessing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552ea77399607e82d8ea63789bdb2d8c3914a001" translate="yes" xml:space="preserve">
          <source>Pretty URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da0c5b52fed4505c8ff90a44032cc051e1a5997" translate="yes" xml:space="preserve">
          <source>Pretty prints (formats and approximates) a number in a way it is more readable by humans (eg.: 1200000000 becomes &amp;ldquo;1.2 Billion&amp;rdquo;). This is useful for numbers that can get very large (and too hard to read).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a22667ce596ecbf752d9debf770872f30a3f98b" translate="yes" xml:space="preserve">
          <source>Pretty simple, eh?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e2f3016865c659994e054a5e7dc844f300d3ea" translate="yes" xml:space="preserve">
          <source>Prevent writing to the database regardless of role.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2813becc2949623e318a564e83791f2c0f269b7" translate="yes" xml:space="preserve">
          <source>Preventing Empty Records</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1fbb2b43dca281d0138f4fcc92543ad143ef0b1" translate="yes" xml:space="preserve">
          <source>Preview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c0fa4eb1488eabe5a1e416fb46f41ec044ccaf" translate="yes" xml:space="preserve">
          <source>Preview#blob</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91cd24ec497b1d5a81a197aeef03db5a40f9245" translate="yes" xml:space="preserve">
          <source>Preview#image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2198e69fae4f58f29894a95ed4bb34f7043ab337" translate="yes" xml:space="preserve">
          <source>Preview#params</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a802c0ea0c3d5a42e0c9509ff054d72d53af52" translate="yes" xml:space="preserve">
          <source>Preview#processed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d6c3970f24c6ba0bd4dbd128ec3e1f21a6c5c7" translate="yes" xml:space="preserve">
          <source>Preview#service_url</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32836f4a47a9aeb3172e873e18fa7368879a3557" translate="yes" xml:space="preserve">
          <source>Preview#variation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a2ac282676bcaa19c7fa8f76b6d751384d9ce3d" translate="yes" xml:space="preserve">
          <source>Preview::all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb1984fa8d5929710c79d6876e9b542c626f473" translate="yes" xml:space="preserve">
          <source>Preview::call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31893aaa34f0e45cd5c422360f69180d7eb3f66e" translate="yes" xml:space="preserve">
          <source>Preview::email_exists?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af24bd551e74033e1f967a0249860d5dfaeb84ed" translate="yes" xml:space="preserve">
          <source>Preview::emails</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1cc432b11eddc27c99acc0b9c4478e2672f1183" translate="yes" xml:space="preserve">
          <source>Preview::exists?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f7bbb77aed9d5c55ba33457e03541c6ebe3ae7" translate="yes" xml:space="preserve">
          <source>Preview::find</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79814ee513fbf1b3d4149d5463743e904ae76e9" translate="yes" xml:space="preserve">
          <source>Preview::new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675849fdb522012cd200904e72912e89684edab1" translate="yes" xml:space="preserve">
          <source>Preview::preview_name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7aa1d99739f08eb91bfe14e2cdf2a73c6b7f88" translate="yes" xml:space="preserve">
          <source>Previewer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954fe06de95b87dc45c5bdd5b7e9714fef2b6258" translate="yes" xml:space="preserve">
          <source>Previewer#blob</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4dd2391fbc8dad52923ba58743d7511e11c5431" translate="yes" xml:space="preserve">
          <source>Previewer#download_blob_to_tempfile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04bd8620ce7cd8b5619e828479acec7ded694611" translate="yes" xml:space="preserve">
          <source>Previewer#draw</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622b8665e82db1a5c9df7abf2bd14c8dcd79130b" translate="yes" xml:space="preserve">
          <source>Previewer#logger</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2c05d71f46d275ea124120382e59c75c71c259" translate="yes" xml:space="preserve">
          <source>Previewer#preview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f308df8f6ede55de1fb06ecd278cdd46902b4605" translate="yes" xml:space="preserve">
          <source>Previewer#tmpdir</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd18baba3d58b6becc1197f74fbfdf948b6ebfc" translate="yes" xml:space="preserve">
          <source>Previewer::accept?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c06dc88b71effa7d204b00eaf5cbc7d784323d" translate="yes" xml:space="preserve">
          <source>Previewer::new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4884226bd48efa3f789f0ad3ca53b508c000a9b8" translate="yes" xml:space="preserve">
          <source>Previewing Emails</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ea9cfe0cdfb3fa6006765c08105fcdf89110c0" translate="yes" xml:space="preserve">
          <source>Previewing Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86db3093bffaf23d0930c8eb3ebd59856afb4c5" translate="yes" xml:space="preserve">
          <source>Previewing emails</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14da68f641e715f95def268542e5504454676c3e" translate="yes" xml:space="preserve">
          <source>Previews can also be intercepted in a similar manner as deliveries can be by registering a preview interceptor that has a &lt;code&gt;previewing_email&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b70f850a5ac733cb69b371416f1484d0d7b76db" translate="yes" xml:space="preserve">
          <source>Previews::ClassMethods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c4952c35c8ee6a1e386d623c4a986f1b6ba097" translate="yes" xml:space="preserve">
          <source>Previews::ClassMethods#register_preview_interceptor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743be91ebc474a53582c64e454096ed8b9b6b3dd" translate="yes" xml:space="preserve">
          <source>Previews::ClassMethods#register_preview_interceptors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e591c8d526ad3029a576a30ac9b94cf9af3fbf07" translate="yes" xml:space="preserve">
          <source>Previews::ClassMethods#unregister_preview_interceptor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0d25bbddaa09cb7afeccaf332bfc2f1753cde9" translate="yes" xml:space="preserve">
          <source>Previews::ClassMethods#unregister_preview_interceptors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da1734020fd20da863300900370e049b1de011c" translate="yes" xml:space="preserve">
          <source>Previously, &lt;code&gt;ActionDispatch::Response#content_type&lt;/code&gt; returned value does NOT contain charset part. This behavior changed to returned Content-Type header containing charset part as it is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81202fdb3b186e3c639909231e2845609210df07" translate="yes" xml:space="preserve">
          <source>Previously, Rails allowed inline callback blocks to use &lt;code&gt;return&lt;/code&gt; this way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c11635c730bd53452a1d30ebc327d31d6d01538" translate="yes" xml:space="preserve">
          <source>Previously, calling a mailer method on a mailer class will result in the corresponding instance method being executed directly. With the introduction of Active Job and &lt;code&gt;#deliver_later&lt;/code&gt;, this is no longer true. In Rails 4.2, the invocation of the instance methods are deferred until either &lt;code&gt;deliver_now&lt;/code&gt; or &lt;code&gt;deliver_later&lt;/code&gt; is called. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9125f4030a9c273ee140a509784f4cd826d4bfbb" translate="yes" xml:space="preserve">
          <source>Prints all annotations with tag &lt;code&gt;tag&lt;/code&gt; under the root directories &lt;code&gt;app&lt;/code&gt;, &lt;code&gt;config&lt;/code&gt;, &lt;code&gt;db&lt;/code&gt;, &lt;code&gt;lib&lt;/code&gt;, and &lt;code&gt;test&lt;/code&gt; (recursively).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d6195db20a7c82394d5f7f0a8086bebd2b9879" translate="yes" xml:space="preserve">
          <source>Prints the mapping from filenames to annotations in &lt;code&gt;results&lt;/code&gt; ordered by filename. The &lt;code&gt;options&lt;/code&gt; hash is passed to each annotation's &lt;code&gt;to_s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5b4071e0f89e85d87aafd64c210898fe0f06ba" translate="yes" xml:space="preserve">
          <source>Prior to Rails 4.0, &lt;code&gt;mail_to&lt;/code&gt; provided options for encoding the address in order to hinder email harvesters. To take advantage of these options, install the &lt;code&gt;actionview-encoded_mail_to&lt;/code&gt; gem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee3e7a80e710a6ebaab4ad78675f6728dd3df4d" translate="yes" xml:space="preserve">
          <source>Prior to Rails 5.0, some of these were handled by separate Rack middleware classes (such as &lt;code&gt;ActiveRecord::ConnectionAdapters::ConnectionManagement&lt;/code&gt;), or directly wrapping code with methods like &lt;code&gt;ActiveRecord::Base.connection_pool.with_connection&lt;/code&gt;. The Executor replaces these with a single more abstract interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a093be807ab08edf07ae81427609010f66919964" translate="yes" xml:space="preserve">
          <source>Prior to uploading, we compute the checksum, which is sent to the service for transit integrity validation. If the checksum does not match what the service receives, an exception will be raised. We also measure the size of the &lt;code&gt;io&lt;/code&gt; and store that in &lt;code&gt;byte_size&lt;/code&gt; on the blob record. The content type is automatically extracted from the &lt;code&gt;io&lt;/code&gt; unless you specify a &lt;code&gt;content_type&lt;/code&gt; and pass &lt;code&gt;identify&lt;/code&gt; as false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0ad90bec3127568428d4c04d5d1ea52f6ba12f" translate="yes" xml:space="preserve">
          <source>Priorities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99afeaca2ded20621a5e090743e9eeb5956685a1" translate="yes" xml:space="preserve">
          <source>Priority that the job will have (lower is more priority).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a3116072d0d8363b063bbc6fed137f76e92dbe" translate="yes" xml:space="preserve">
          <source>Private Class Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62598381e1c363fac93558c96a6fbbbc9331223" translate="yes" xml:space="preserve">
          <source>Private Instance Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc3564aeb2d87d881114ddd496c3b7f308ecbe7f" translate="yes" xml:space="preserve">
          <source>Privilege Escalation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a86bcca30f727f439ce1dc87d516f31c433de2" translate="yes" xml:space="preserve">
          <source>Problem is, in development mode &lt;a href=&quot;#constant-reloading&quot;&gt;autoloaded constants are wiped&lt;/a&gt; if there is any relevant change in the file system. If that happens then we are in the very same situation the initializer wanted to avoid!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51d4e0dcedaa3fc409bdb1e06a21dc4a5fd577e" translate="yes" xml:space="preserve">
          <source>Proc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ab367a4f8e55e4e5aabe0dcc18eae36a4a9f40b" translate="yes" xml:space="preserve">
          <source>Proc to call if a token is present. The Proc should take two arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded4bbd7a53b7737d04ba776ca959a305bf0a7f1" translate="yes" xml:space="preserve">
          <source>Process extra options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535f5a6efa2a31308faf22836ab05d4c63b055a5" translate="yes" xml:space="preserve">
          <source>Processes the preview if it has not been processed yet. Returns the receiving &lt;a href=&quot;preview&quot;&gt;Preview&lt;/a&gt; instance for convenience:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f873a654101b9492c68ff7e62bfc7085d6de6b8" translate="yes" xml:space="preserve">
          <source>Processing a preview generates an image from its blob and attaches the preview image to the blob. Because the preview image is stored with the blob, it is only generated once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6aca634a219607c471f353c02d31a780ac21f9e" translate="yes" xml:space="preserve">
          <source>Processing: During active processing, while a specific mailbox is running its process method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b53468772843fdcea26a5c2e26f6bf894c73f7" translate="yes" xml:space="preserve">
          <source>Procs will be evaluated by merge:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b041da5ec1603f6362de3e586fca868b602068c" translate="yes" xml:space="preserve">
          <source>Produce a string representation of a number as a human-readable number of bytes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7d84f1ecd1c02c9bd7e63e3424aba3fc03a26a" translate="yes" xml:space="preserve">
          <source>Produce a string representation of a number as a percentage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ba5e3768f2b2dad88d275f1d47450a5c509b4c" translate="yes" xml:space="preserve">
          <source>Produce a string representation of a number as a telephone number:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a956a270b5147f1882b52993b43dd91f7ee58530" translate="yes" xml:space="preserve">
          <source>Produce a string representation of a number as currency:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07318ab9e4ea55c8e162aadd1c70ba1c9c18a5a1" translate="yes" xml:space="preserve">
          <source>Produce a string representation of a number in delimited form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012fc60b5ee9156a144fc33e40ecb9e7af4475f4" translate="yes" xml:space="preserve">
          <source>Produce a string representation of a number in human-readable words:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545690f22a55fe96044cc9f5ccd7ee5520a1264b" translate="yes" xml:space="preserve">
          <source>Produce a string representation of a number rounded to a precision:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1cb8e585e1c6578cb7e1b4c4edb1e4ded9ec906" translate="yes" xml:space="preserve">
          <source>Produces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c943d3bf87e8988d8f553514b261045681c7ce7" translate="yes" xml:space="preserve">
          <source>Production log level</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8f79c6b8420f4365d0c75a3024bbf9e45fe172" translate="yes" xml:space="preserve">
          <source>Project Structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd3f69ecbbe7090c85fae3e4b5ee98001074aa5" translate="yes" xml:space="preserve">
          <source>Project structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d191fb286f556db596ff60a17e8ef6b32cc70c6" translate="yes" xml:space="preserve">
          <source>Proper abstraction is shown in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8eb2081cc69dc946593cc24d8d6a32af385fc4b" translate="yes" xml:space="preserve">
          <source>Property of &lt;code&gt;request&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ae1e85d74f3f373697da62e7dd571a6fae040f" translate="yes" xml:space="preserve">
          <source>Property of &lt;code&gt;response&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b0ba1e85cb9e22d6b28150dfcea1a88d3dc555" translate="yes" xml:space="preserve">
          <source>Protected Instance Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df93918afc0c5d39d1225ed25bd355f278d6dc2" translate="yes" xml:space="preserve">
          <source>Provide a callable (i.e. proc or lambda) to specify that the association should be initialized with a particular record before validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9cfbb011f1d0a2e3c3331a90ea7ea744ba110e" translate="yes" xml:space="preserve">
          <source>Provide separate templates for each format and variant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00bdc342d34cab69bed3edf829fe69f6c1f1425a" translate="yes" xml:space="preserve">
          <source>Provide the parameters to the mailer in order to use them in the instance methods and callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e954faed3ea3d3899e2f25e471792c323d13d64" translate="yes" xml:space="preserve">
          <source>Provided parameters will be filtered out by partial matching regular expression. Rails adds default &lt;code&gt;:password&lt;/code&gt; in the appropriate initializer (&lt;code&gt;initializers/filter_parameter_logging.rb&lt;/code&gt;) and cares about typical application parameters &lt;code&gt;password&lt;/code&gt; and &lt;code&gt;password_confirmation&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15da82b3250aeff774b2d3c4ffffc12eda0e76bd" translate="yes" xml:space="preserve">
          <source>Provided that the pipeline is enabled within your application (and not disabled in the current environment context), this file is served by Sprockets. If a file exists at &lt;code&gt;public/assets/rails.png&lt;/code&gt; it is served by the web server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a541d6ee59da5857e7d2b3dc6683cec16b131a93" translate="yes" xml:space="preserve">
          <source>Provides &lt;code&gt;rescue_from&lt;/code&gt; for mailers. Wraps mailer action processing, mail job processing, and mail delivery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcbc50977662fc17832d25c601587af50b1ad4b" translate="yes" xml:space="preserve">
          <source>Provides a &lt;code&gt;delegate&lt;/code&gt; class method to easily expose contained objects' public methods as your own.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1a6ba58478d65f8c68dfe496f026ebd79dd4b8" translate="yes" xml:space="preserve">
          <source>Provides a DSL to configure a Content-Security-Policy header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21dc7d2e0961b2d070ceefd8b027611757a0ccbd" translate="yes" xml:space="preserve">
          <source>Provides a basic serialization to a &lt;a href=&quot;serialization#method-i-serializable_hash&quot;&gt;#serializable_hash&lt;/a&gt; for your objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4011ff1df184cc11933fb50b226b37e8886dc48" translate="yes" xml:space="preserve">
          <source>Provides a full validation framework to your objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea2e1b4eafd2001e6575c6418364950ac67ea86" translate="yes" xml:space="preserve">
          <source>Provides a modified &lt;code&gt;Hash&lt;/code&gt; that you can include in your object for handling error messages and interacting with Action View helpers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa77aafb0bf80d68b6359e627c2155279bc7046b" translate="yes" xml:space="preserve">
          <source>Provides a number of methods for creating form tags that don't rely on an Active Record object assigned to the template like &lt;a href=&quot;formhelper&quot;&gt;FormHelper&lt;/a&gt; does. Instead, you provide the names and values manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9bea30d6b803b0a731853949756f23a763a7892" translate="yes" xml:space="preserve">
          <source>Provides a number of methods for creating form tags that don't rely on an Active Record object assigned to the template like FormHelper does. Instead, you provide the names and values manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94599ada6e94d32c5c97ffdde1bbccd6f6e662c" translate="yes" xml:space="preserve">
          <source>Provides a number of methods for turning different kinds of containers into a set of option tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7389faba2762f7c0c45a409a7ef27a1fce939c0" translate="yes" xml:space="preserve">
          <source>Provides a proxy to access helper methods from outside the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1e9984f4498611b09adedc468301fd5c2292d4" translate="yes" xml:space="preserve">
          <source>Provides a set of methods for making links and getting URLs that depend on the routing subsystem (see &lt;a href=&quot;../../actiondispatch/routing&quot;&gt;ActionDispatch::Routing&lt;/a&gt;). This allows you to use the same format for links in views and controllers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652e779447d532704ebb80bf995e3ae542772884" translate="yes" xml:space="preserve">
          <source>Provides a store of all the enqueued jobs with the &lt;a href=&quot;testadapter&quot;&gt;TestAdapter&lt;/a&gt; so you can check them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e497bc104e0a5bb1082b97f67995d34ea2461c" translate="yes" xml:space="preserve">
          <source>Provides a store of all the performed jobs with the &lt;a href=&quot;testadapter&quot;&gt;TestAdapter&lt;/a&gt; so you can check them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb7e1e9d006c7268e8a67fa0eaa7319a7e340ae" translate="yes" xml:space="preserve">
          <source>Provides a way to add prefixes and suffixes to your methods as well as handling the creation of &lt;code&gt;ActiveRecord::Base&lt;/code&gt;-like class methods such as &lt;code&gt;table_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087f213a300ba58cc74bc17ed03043ef91588b1b" translate="yes" xml:space="preserve">
          <source>Provides a way to track changes in your object in the same way as Active Record does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee8e3a97002c605891a02e10943547fa905aa2c" translate="yes" xml:space="preserve">
          <source>Provides access to a dependent &lt;a href=&quot;richtext&quot;&gt;RichText&lt;/a&gt; model that holds the body and attachments for a single named rich text attribute. This dependent attribute is lazily instantiated and will be auto-saved when it's been changed. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14856c6ef3449ae481e03ec892ce6e85e6984e17" translate="yes" xml:space="preserve">
          <source>Provides access to the request's HTTP headers from the environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3142276fdfb4874913a8054f15e12f4833f5873b" translate="yes" xml:space="preserve">
          <source>Provides access to the request's HTTP headers, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d09af9c42b8a8d79fab4d23df2225801dea0d6" translate="yes" xml:space="preserve">
          <source>Provides access to the underlying database driver for this adapter. For example, this method returns a Mysql2::Client object in case of &lt;a href=&quot;mysql2adapter&quot;&gt;Mysql2Adapter&lt;/a&gt;, and a PG::Connection object in case of &lt;a href=&quot;postgresqladapter&quot;&gt;PostgreSQLAdapter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96969a66ed64d6455c596224dadbf4397704874" translate="yes" xml:space="preserve">
          <source>Provides accurate date and time measurements using &lt;a href=&quot;../date#method-i-advance&quot;&gt;Date#advance&lt;/a&gt; and &lt;a href=&quot;../time#method-i-advance&quot;&gt;Time#advance&lt;/a&gt;, respectively. It mainly supports the methods on &lt;a href=&quot;../numeric&quot;&gt;Numeric&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1dc3a80dd95eab803271a817bdbcb165a51870" translate="yes" xml:space="preserve">
          <source>Provides an interface for any class to have &lt;code&gt;before_validation&lt;/code&gt; and &lt;code&gt;after_validation&lt;/code&gt; callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba328f417734154b47c789915a2cb8f864c395dd" translate="yes" xml:space="preserve">
          <source>Provides an interface for any class to have Active Record like callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a94a82c146f770061a4825c0e5c32b96121398" translate="yes" xml:space="preserve">
          <source>Provides asynchronous analysis of &lt;a href=&quot;blob&quot;&gt;ActiveStorage::Blob&lt;/a&gt; records via &lt;a href=&quot;blob/analyzable#method-i-analyze_later&quot;&gt;ActiveStorage::Blob::Analyzable#analyze_later&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50cbbda31b047e714acceb144f729a82c7ae2799" translate="yes" xml:space="preserve">
          <source>Provides asynchronous purging of &lt;a href=&quot;blob&quot;&gt;ActiveStorage::Blob&lt;/a&gt; records via &lt;a href=&quot;blob#method-i-purge_later&quot;&gt;ActiveStorage::Blob#purge_later&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b591dced9126b107f3c89be39e600b0e97f642c9" translate="yes" xml:space="preserve">
          <source>Provides behavior for enqueuing jobs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e221acbb1dc48056aecfad39e95b55788a268e8" translate="yes" xml:space="preserve">
          <source>Provides behavior for retrying and discarding jobs on exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc3e313a196ea77ae421ae193353457087f852c" translate="yes" xml:space="preserve">
          <source>Provides callbacks to be executed before and after dispatching the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eee63832a64749bad80e92a25592a71b8658920" translate="yes" xml:space="preserve">
          <source>Provides functionality for working with JavaScript in your views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f3a9e8e0ef66c0e5129f3e84b88e092484b9b3c" translate="yes" xml:space="preserve">
          <source>Provides general behavior that will be included into every Active Job object that inherits from &lt;a href=&quot;base&quot;&gt;ActiveJob::Base&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9057699b786f3ffa85702ab887d187d77f5150" translate="yes" xml:space="preserve">
          <source>Provides helper methods for &lt;a href=&quot;base&quot;&gt;ActionMailer::Base&lt;/a&gt; that can be used for easily formatting messages, accessing mailer or message instances, and the attachments list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f870df0e11b12add68ae83fe7d55f4b5df59cfc5" translate="yes" xml:space="preserve">
          <source>Provides helper methods for testing Action Cable broadcasting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75fa674186d70efe2c76b61f39615c23a6bd177e" translate="yes" xml:space="preserve">
          <source>Provides helper methods for testing Action Mailer, including &lt;a href=&quot;testhelper#method-i-assert_emails&quot;&gt;assert_emails&lt;/a&gt; and &lt;a href=&quot;testhelper#method-i-assert_no_emails&quot;&gt;assert_no_emails&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c56e83156213f06d5f1e8c45884f7dde884d197e" translate="yes" xml:space="preserve">
          <source>Provides helper methods for testing Active Job</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98660e048a6ee02262f2e1d5eb748ee3d51681e" translate="yes" xml:space="preserve">
          <source>Provides integration between your object and the Rails internationalization (i18n) framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adbe31ea56b19ad1774f61c78d1dedcca26a1730" translate="yes" xml:space="preserve">
          <source>Provides methods for converting numbers into formatted strings. Methods are provided for phone numbers, currency, percentage, precision, positional notation, and file size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a91ce97969e476d45434292b5f0713fadddab42" translate="yes" xml:space="preserve">
          <source>Provides methods for converting numbers into formatted strings. Methods are provided for phone numbers, currency, percentage, precision, positional notation, file size and pretty printing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90993840e4795c8a6ea740d7dccc245800c4c1ea" translate="yes" xml:space="preserve">
          <source>Provides methods to generate HTML tags programmatically both as a modern HTML5 compliant builder style and legacy XHTML compliant tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db92dbbb614ff463378c0c6d949827282da735e" translate="yes" xml:space="preserve">
          <source>Provides options for converting numbers into formatted strings. Options are provided for phone numbers, currency, percentage, precision, positional notation, file size and pretty printing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="892ef72f996f7b74ffa54534e995efbe513dcb50" translate="yes" xml:space="preserve">
          <source>Provides precise &lt;a href=&quot;date&quot;&gt;Date&lt;/a&gt; calculations for years, months, and days. The &lt;code&gt;options&lt;/code&gt; parameter takes a hash with any of these keys: &lt;code&gt;:years&lt;/code&gt;, &lt;code&gt;:months&lt;/code&gt;, &lt;code&gt;:weeks&lt;/code&gt;, &lt;code&gt;:days&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91f7e956a3870c3b762094de40a99d992982654" translate="yes" xml:space="preserve">
          <source>Provides prepare and cleanup callbacks, intended to assist with code reloading during development.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d861d75ec4e46d5789fef3cd3d2aed7e0462a0c3" translate="yes" xml:space="preserve">
          <source>Provides some helpers to deal with testing log subscribers by setting up notifications. Take for instance Active Record subscriber tests:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b427a4bfa46aff10f638c1353edab2ae947bc13c" translate="yes" xml:space="preserve">
          <source>Provides the class-level DSL for declaring an Active Record model's attachments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a682de558a012e3e09b6517d25040952b790661" translate="yes" xml:space="preserve">
          <source>Provides the option to parameterize mailers in order to share instance variable setup, processing, and common headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78f0cfc87deb5da4cbad8cffbd2845845841362" translate="yes" xml:space="preserve">
          <source>Providing Translations for Internationalized Strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f326e8bc78f0634e7fc0bd7d5e5d4a01632114" translate="yes" xml:space="preserve">
          <source>Providing a custom Loofah::Scrubber:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203453c49d3a811425f00ca05c17067ca2934382" translate="yes" xml:space="preserve">
          <source>Providing a custom Rails::Html scrubber:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44f3de84c56488b37f9dd9db8d9bb2fb89c43fc" translate="yes" xml:space="preserve">
          <source>Providing custom lists of permitted tags and attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a787b7d9a6689c8390805102524cb35c5b851e" translate="yes" xml:space="preserve">
          <source>Providing engine functionality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028ca5ddc6691a14e69da79c35037170b6c2b85f" translate="yes" xml:space="preserve">
          <source>Providing the functionality that &lt;a href=&quot;naming&quot;&gt;ActiveModel::Naming&lt;/a&gt; provides in your object is required to pass the Active Model Lint test. So either extending the provided method below, or rolling your own is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dedb47fbd4f20c3c69a4f37fce44f84e82b0c1ae" translate="yes" xml:space="preserve">
          <source>ProxyObject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e9ae2bca51f7cbd6ee3dfbbcddddd1c4b9d785" translate="yes" xml:space="preserve">
          <source>ProxyObject#raise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d76b0f4f8246a0450e29bc5bd8c52b29fd97b23d" translate="yes" xml:space="preserve">
          <source>Public Class Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28d50156043ef7155d1f5782b19755f2268a687" translate="yes" xml:space="preserve">
          <source>Public Instance Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c941e4d743e7ae14be0d89cb27d6626848f5f2" translate="yes" xml:space="preserve">
          <source>PublicExceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b57d4760630810793bd6d345f25c763531fcd09" translate="yes" xml:space="preserve">
          <source>PublicExceptions#call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d259a0d3756257a74db25197a7adf3a8a662f32" translate="yes" xml:space="preserve">
          <source>PublicExceptions#public_path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ff974372e67bcee05c5445a2996407e7fce405" translate="yes" xml:space="preserve">
          <source>PublicExceptions::new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfcfc9b926f315d59f1c2460c8d39204626eb8d" translate="yes" xml:space="preserve">
          <source>Publishing Your Gem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a096a88ff63c9b3debcefde70792b38c059cf21" translate="yes" xml:space="preserve">
          <source>Pure String Conditions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0404755ffbe970be3789362e0b2b9a23aa5930" translate="yes" xml:space="preserve">
          <source>PurgeJob</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54040970720eaf2b5b76137a2d470522d3db3bfc" translate="yes" xml:space="preserve">
          <source>PurgeJob#perform</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d1ea98b5aeb34daf7a150bbca79deea93ec2ea" translate="yes" xml:space="preserve">
          <source>Purges each associated attachment through the queuing system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c833d00dcbfe7984b928746b47935679d5728886" translate="yes" xml:space="preserve">
          <source>Purges the attachment through the queuing system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0fb821bdaf93ed9a1f1e920acfb2840eff5b153" translate="yes" xml:space="preserve">
          <source>Purpose</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c346916d73a41b60eb7068ec64da52eec34b94" translate="yes" xml:space="preserve">
          <source>Purpose in signed or encrypted cookie is now embedded within cookies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77491ccdc46eaf6a511020bf7ac86660d5384de3" translate="yes" xml:space="preserve">
          <source>Push a job onto the queue. By default the arguments must be either &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../../integer&quot;&gt;Integer&lt;/a&gt;, Float, &lt;a href=&quot;../../nilclass&quot;&gt;NilClass&lt;/a&gt;, &lt;a href=&quot;../../trueclass&quot;&gt;TrueClass&lt;/a&gt;, &lt;a href=&quot;../../falseclass&quot;&gt;FalseClass&lt;/a&gt;, BigDecimal, Symbol, &lt;a href=&quot;../../date&quot;&gt;Date&lt;/a&gt;, &lt;a href=&quot;../../time&quot;&gt;Time&lt;/a&gt;, &lt;a href=&quot;../../datetime&quot;&gt;DateTime&lt;/a&gt;, &lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt;, &lt;a href=&quot;../../activesupport/duration&quot;&gt;ActiveSupport::Duration&lt;/a&gt;, &lt;a href=&quot;../../hash&quot;&gt;Hash&lt;/a&gt;, &lt;a href=&quot;../../activesupport/hashwithindifferentaccess&quot;&gt;ActiveSupport::HashWithIndifferentAccess&lt;/a&gt;, &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt; or GlobalID::Identification instances, although this can be extended by adding custom serializers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99cbb9bba111e5a22ad11a7b87f8eccd78b962d7" translate="yes" xml:space="preserve">
          <source>Pushes the given Rack middleware and its arguments to the bottom of the middleware stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0b0858b45007b3b23dd60b822b8e6d8f84a34d" translate="yes" xml:space="preserve">
          <source>Putting it together</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd9eb13fc7f550d66cf6335779dd427f74d6d54" translate="yes" xml:space="preserve">
          <source>QUERY_CANCELED</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc6602a70c2aec594ab892653662d997657ab44c" translate="yes" xml:space="preserve">
          <source>QUEUE_ADAPTER_METHODS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1430f8842cb6f02ae6752dbf392e4da839df67" translate="yes" xml:space="preserve">
          <source>Qmail</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1319a094972fc1727e9f36a42134c140c6dd02b" translate="yes" xml:space="preserve">
          <source>Qmail (&amp;lt;tt&amp;gt;bin/rails action_mailbox:ingress:qmail)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1464f789ded78a5dfd5db1a45c94d48875e1e30" translate="yes" xml:space="preserve">
          <source>Qualified References</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64620e3d0e47c2cac5ee32d30428a0e4afee231f" translate="yes" xml:space="preserve">
          <source>Qualified constants look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c07beea6f20df47b52282eb3afb062d24573676" translate="yes" xml:space="preserve">
          <source>Que</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633540de2d6d27021ffc12efe61363d9375e88ac" translate="yes" xml:space="preserve">
          <source>Que adapter for Active Job</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be899028be33b6be40efe5a07b1af65ced8d4df" translate="yes" xml:space="preserve">
          <source>Que is a high-performance alternative to DelayedJob or QueueClassic that improves the reliability of your application by protecting your jobs with the same ACID guarantees as the rest of your data. Que is a queue for Ruby and PostgreSQL that manages jobs using advisory locks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5415f59f6a13d8c04ec18a3e0407f86f88cefc" translate="yes" xml:space="preserve">
          <source>Queries the primary key column's value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67abd3b32da2b0b702ac16e21005e38bc04e8a51" translate="yes" xml:space="preserve">
          <source>Query caching is a Rails feature that caches the result set returned by each query. If Rails encounters the same query again for that request, it will use the cached result set as opposed to running the query against the database again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f21a04872dd7699c1cf5652517696485df021c" translate="yes" xml:space="preserve">
          <source>Query if the following named route was already defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6835ce045ca407e1aa42cf034a40b2dc968c7d" translate="yes" xml:space="preserve">
          <source>Querying</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499f36027ffb5c55310b684e8e847e4f8dfe1f6a" translate="yes" xml:space="preserve">
          <source>Querying car records will just search for vehicles that are cars:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae60b24c73226085937c568d98d3a1cce9f680d" translate="yes" xml:space="preserve">
          <source>Queue Classic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069fa6a1d583c4b831c20a3a61b225d3ba65bd36" translate="yes" xml:space="preserve">
          <source>Queue in which the job will reside.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ef99d20b7b0f28cb3a923ada32b86d3e944aad" translate="yes" xml:space="preserve">
          <source>Queue: The adapter can set the priority for job queues, when setting a queue with Active Job this will be respected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dfa3e8009209318922abac6b104ac1a4be10e46" translate="yes" xml:space="preserve">
          <source>Queue: The timeout is set for all jobs on the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5622664240e92c251ae97aea91e3ec04fbcca243" translate="yes" xml:space="preserve">
          <source>QueueAdapter object processing the job</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2de260f5d3e922e4a65e5f0dff12c259811491" translate="yes" xml:space="preserve">
          <source>QueueAdapter::ClassMethods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12fa50c90f1bf4e262d8bb344cd5e1cdb8a386af" translate="yes" xml:space="preserve">
          <source>QueueAdapter::ClassMethods#queue_adapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa8515a7cffd910053dd765440850836416b4c7" translate="yes" xml:space="preserve">
          <source>QueueAdapter::ClassMethods#queue_adapter=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f929e86c363b7392b9a50ecbe38aa3855ef2909a" translate="yes" xml:space="preserve">
          <source>QueueAdapter::ClassMethods#queue_adapter_name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ff5587de709cf895339c5ff758e2fbe1b99639" translate="yes" xml:space="preserve">
          <source>QueueAdapters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b0599a92fef836abc88f48d2f44f7efa2558573" translate="yes" xml:space="preserve">
          <source>QueueAdapters::AsyncAdapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b00e4e7fd202a25d1816cf32937844dd97887d" translate="yes" xml:space="preserve">
          <source>QueueAdapters::AsyncAdapter::new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70c6745b4b1298eecb636ada50fd610f31fea27" translate="yes" xml:space="preserve">
          <source>QueueAdapters::BackburnerAdapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67074cc08f553e91e7a6a6625ed6318ac88f70cc" translate="yes" xml:space="preserve">
          <source>QueueAdapters::DelayedJobAdapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bdbbbcfeba65327c68f2b2955866955e49cd6df" translate="yes" xml:space="preserve">
          <source>QueueAdapters::InlineAdapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997894ab556c215370d1c324a7b14a508e915b9e" translate="yes" xml:space="preserve">
          <source>QueueAdapters::QueAdapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea1e4f415707c62e75e4e1b227ca83b63e7f64b3" translate="yes" xml:space="preserve">
          <source>QueueAdapters::QueueClassicAdapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f197b5b11ba5e158530992d35886a4532e812c5" translate="yes" xml:space="preserve">
          <source>QueueAdapters::QueueClassicAdapter#build_queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d69b43111807040bd903e222a1cfffe939baddc" translate="yes" xml:space="preserve">
          <source>QueueAdapters::ResqueAdapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1eb769c398c34aae3bf083f0c7bf162b3255a0" translate="yes" xml:space="preserve">
          <source>QueueAdapters::SidekiqAdapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad4d8e7c48733eeb4ab338654fba6bde27533e16" translate="yes" xml:space="preserve">
          <source>QueueAdapters::SneakersAdapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebeb604489d26644faf18824876307e60ced1586" translate="yes" xml:space="preserve">
          <source>QueueAdapters::SneakersAdapter::new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce26e76652a2a35402bd075a160c3b896cae0062" translate="yes" xml:space="preserve">
          <source>QueueAdapters::SuckerPunchAdapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebe2e2044a8c427b3ab42b3b3db5c699833e032" translate="yes" xml:space="preserve">
          <source>QueueAdapters::lookup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc1b68cca683c98284fb7ef98f968376b924cbd" translate="yes" xml:space="preserve">
          <source>QueueName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3886e1c02ab62dd2bf22a89794e9494d106b332c" translate="yes" xml:space="preserve">
          <source>QueueName#queue_name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ff71894027ba54211163565b01fd0e5451902c" translate="yes" xml:space="preserve">
          <source>QueueName::ClassMethods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f086ceb407166ef9d7e42775d269d4830b15da" translate="yes" xml:space="preserve">
          <source>QueueName::ClassMethods#queue_as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db944e7e06da35945649cf786971904da7abd2fc" translate="yes" xml:space="preserve">
          <source>QueuePriority</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8780c3fa22200bbcea3434ef8010963444b2533c" translate="yes" xml:space="preserve">
          <source>QueuePriority#priority</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6684bf8ece86c26556617607e8295b7a18bee6a6" translate="yes" xml:space="preserve">
          <source>QueuePriority::ClassMethods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b88f15ba8017e999208b3b36ef78389fc50fba8" translate="yes" xml:space="preserve">
          <source>QueuePriority::ClassMethods#queue_with_priority</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83dbc32040459c6d170231f099414d8cc8806687" translate="yes" xml:space="preserve">
          <source>Queues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67020addf987d4f125096bc76d55fb8b1a84640" translate="yes" xml:space="preserve">
          <source>Quitting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9c1abc14a858896d8d5a30bad255253dcfb66a" translate="yes" xml:space="preserve">
          <source>Quote date/time values for use in SQL input. Includes microseconds if the value is a &lt;a href=&quot;../../time&quot;&gt;Time&lt;/a&gt; responding to usec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8489a3aa670e839de775906eaf65a24cd67e61f" translate="yes" xml:space="preserve">
          <source>Quotes a string, escaping any ' (single quote) and \ (backslash) characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4ea30fcd6d63b110835ad23b38febb8eb111ac" translate="yes" xml:space="preserve">
          <source>Quotes schema names for use in SQL queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bf4260ccb5755da0a7e00a39f8a56dee6d5ddd" translate="yes" xml:space="preserve">
          <source>Quotes the column name. Defaults to no quoting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26223e8ba13285d233a955c9c1b100dccb9d9b25" translate="yes" xml:space="preserve">
          <source>Quotes the column value to help prevent &lt;a href=&quot;https://en.wikipedia.org/wiki/SQL_injection&quot;&gt;SQL injection attacks&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53db1066fbc1d7cc13a24d3d6c336c0aa3d94c54" translate="yes" xml:space="preserve">
          <source>Quotes the table name. Defaults to column name quoting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3802a9e109335e4ffacee0bd56e9fceec583fb" translate="yes" xml:space="preserve">
          <source>RACK_KEY_TRANSLATION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416cebf84b2d80af25b829322f601e3cac5cbe13" translate="yes" xml:space="preserve">
          <source>RACK_VALUE_TRANSLATION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f28eceff0e9ef3c6abca8c257d47ba81d85d6a73" translate="yes" xml:space="preserve">
          <source>RAILS_DEV_PATH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4fa5fddea5751fb7c6763794336638bb6be46a" translate="yes" xml:space="preserve">
          <source>RAILS_ENV</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f203dc698e03dd350f24a3d607dac2d5ce2369" translate="yes" xml:space="preserve">
          <source>RAILS_GEM_ROOT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8745393905994f9579298e06a642753edeff505" translate="yes" xml:space="preserve">
          <source>RANGE_FORMATS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3a43c784f14e4016e1aa2fb0d9e662677a3853" translate="yes" xml:space="preserve">
          <source>RDoc Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec9a00bfd09b3190ac6b22251dbb1aa95a0579d" translate="yes" xml:space="preserve">
          <source>README.md</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4e68e797393df6570e29ff0598a3e603637ffa" translate="yes" xml:space="preserve">
          <source>RED</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b3b686d2d802520df543276d973f23286cdf22" translate="yes" xml:space="preserve">
          <source>REJECT_ALL_BLANK_PROC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f191fa539e8b1c5bc012e53036aa612232440819" translate="yes" xml:space="preserve">
          <source>REMOTE_ADDR will be correct if the request is made directly against the Ruby process, on e.g. Heroku. When the request is proxied by another server like HAProxy or NGINX, the IP address that made the original request will be put in an X-Forwarded-For header. If there are multiple proxies, that header may contain a list of IPs. Other proxy services set the Client-Ip header instead, so we check that too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f573be7f6fcc3cd9ad23a47a68bf57628764ef73" translate="yes" xml:space="preserve">
          <source>RENDERERS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f0c3fc01f170f8da559a5511c93b6400565ea6" translate="yes" xml:space="preserve">
          <source>RESCUABLE_MIME_FORMAT_ERRORS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb6fc6a6347f2638e5f874d284bad9e4f7b06e0" translate="yes" xml:space="preserve">
          <source>RESOURCE_OPTIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a35b42297fcc8297560dc4c459366885df21d0" translate="yes" xml:space="preserve">
          <source>RESTRICTED_CLASS_METHODS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2bcbb8880406f824da05042bf54efb53783cee6" translate="yes" xml:space="preserve">
          <source>RESTful Downloads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddad119f559fea6c126be2e7e633baf77f4260e5" translate="yes" xml:space="preserve">
          <source>RFC2518</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34df16ec4e939a336be88d7c573d53bfe4242745" translate="yes" xml:space="preserve">
          <source>RFC2616</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b8c492682476281204373d44e1997cc2339a69" translate="yes" xml:space="preserve">
          <source>RFC3253</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="683a00779d49bdfb0cb952b0ddd0a31f0437fdb9" translate="yes" xml:space="preserve">
          <source>RFC3648</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff8a8c39636431dd5ccabb6b93285af148ad4c0" translate="yes" xml:space="preserve">
          <source>RFC3744</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16afa1dff3174c9d465fff0953df00720006793" translate="yes" xml:space="preserve">
          <source>RFC4791</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837f80fd91df10a825ab0e801a87f8a8d43afad9" translate="yes" xml:space="preserve">
          <source>RFC5323</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50332ee688a5bbd44286e44b0b2fb39f6d739dbc" translate="yes" xml:space="preserve">
          <source>RFC5789</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea82384ba2bbc81216a70c56d4b8093bd238330" translate="yes" xml:space="preserve">
          <source>ROUTES TODO: These assertions should really work in an integration context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e053917f4e77de0a5a8c7bf3d29d0ed144d88338" translate="yes" xml:space="preserve">
          <source>RUBY_RESERVED_KEYWORDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ecc7206e18c65f12ddd26ba67f5e13321c51c3c" translate="yes" xml:space="preserve">
          <source>Race condition TTL is not set by default. This can be used to avoid &amp;ldquo;thundering herd&amp;rdquo; cache writes when hot cache entries are expired. See &lt;code&gt;ActiveSupport::Cache::Store#fetch&lt;/code&gt; for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad9213d333a5ba7f86b11b8fdcb972f1545e2a1d" translate="yes" xml:space="preserve">
          <source>Rack configuration for Rack based servers used to start the application. For more information about Rack, see the &lt;a href=&quot;https://rack.github.io/&quot;&gt;Rack website&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7536653fc744f26ae53ac54f3f11d94fffc94926" translate="yes" xml:space="preserve">
          <source>Rack provides a minimal, modular, and adaptable interface for developing web applications in Ruby. By wrapping HTTP requests and responses in the simplest way possible, it unifies and distills the API for web servers, web frameworks, and software in between (the so-called middleware) into a single method call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c79cabd91cfe2f3183044e5b572bbe3ed0270cf" translate="yes" xml:space="preserve">
          <source>Rack: &lt;code&gt;lib/rack/server.rb&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1d4ecfba9d08b96002214827dd57567f74128a" translate="yes" xml:space="preserve">
          <source>Rack: lib/rack/server.rb</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d76d1921a08663dc4c8da01f1f08cec4e4ae39c" translate="yes" xml:space="preserve">
          <source>Rack::Logger</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a352dd6b294474b97e75a6907e889c72fd13869" translate="yes" xml:space="preserve">
          <source>Rack::Logger#call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2b255cef8eb3dcd886387d4381cff641445d33" translate="yes" xml:space="preserve">
          <source>Rack::Logger#call_app</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29453244380d0f23d023986a7648c39964d3a47" translate="yes" xml:space="preserve">
          <source>Rack::Logger#compute_tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36818aa29ee8e1e260fb8034b599ca6bda65d412" translate="yes" xml:space="preserve">
          <source>Rack::Logger#started_request_message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086a68bfa94209ea7b8d80cc2f350eacf6c98407" translate="yes" xml:space="preserve">
          <source>Rack::Logger::new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a72aeabeada73f470180c650097d2b6c8554db" translate="yes" xml:space="preserve">
          <source>Rack::Session::Dalli</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e81630f4f13bc5fb08c64bb0a84f1b13ac75ca" translate="yes" xml:space="preserve">
          <source>Radio buttons, while similar to checkboxes, are controls that specify a set of options in which they are mutually exclusive (i.e., the user can only pick one):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba3c971a2ac81234a063d7cde439104a585e0bb" translate="yes" xml:space="preserve">
          <source>Rails</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baaa9535d71ae296c72888db94231a89f458292b" translate="yes" xml:space="preserve">
          <source>Rails 3 Remote Links and Forms: A Definitive Guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16abd8008d9cba104de96df1077e571eaf35a884" translate="yes" xml:space="preserve">
          <source>Rails 3 and above require Ruby 1.8.7 or higher. Support for all of the previous Ruby versions has been dropped officially. You should upgrade as early as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a5227b3bbd6061502c107a88f9c9509fdc74b0" translate="yes" xml:space="preserve">
          <source>Rails 3.2 deprecates &lt;code&gt;vendor/plugins&lt;/code&gt; and Rails 4.0 will remove them completely. While it's not strictly necessary as part of a Rails 3.2 upgrade, you can start replacing any plugins by extracting them to gems and adding them to your &lt;code&gt;Gemfile&lt;/code&gt;. If you choose not to make them gems, you can move them into, say, &lt;code&gt;lib/my_plugin/*&lt;/code&gt; and add an appropriate initializer in &lt;code&gt;config/initializers/my_plugin.rb&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f717167b5d0084e4413ec5e3ad5cd86a2545b39b" translate="yes" xml:space="preserve">
          <source>Rails 3.2.x is the last branch to support Ruby 1.8.7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8f573ec4e74f8396a84ae4188c42de1b9a65cb" translate="yes" xml:space="preserve">
          <source>Rails 4 now uses &lt;code&gt;PATCH&lt;/code&gt; as the primary HTTP verb for updates when a RESTful resource is declared in &lt;code&gt;config/routes.rb&lt;/code&gt;. The &lt;code&gt;update&lt;/code&gt; action is still used, and &lt;code&gt;PUT&lt;/code&gt; requests will continue to be routed to the &lt;code&gt;update&lt;/code&gt; action as well. So, if you're using only the standard RESTful routes, no changes need to be made:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a102684829fa226442f859b8c48043820a9eb47" translate="yes" xml:space="preserve">
          <source>Rails 4 prefers Ruby 2.0 and requires 1.9.3 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35761025cd6821d5b009daa1f7996aacd83e55be" translate="yes" xml:space="preserve">
          <source>Rails 4.0 allows configuration of HTTP headers by setting &lt;code&gt;config.action_dispatch.default_headers&lt;/code&gt;. The defaults are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef74a404c2e9acee7261b662f9df6fdba7000689" translate="yes" xml:space="preserve">
          <source>Rails 4.0 also changed the way unicode character routes are drawn. Now you can draw unicode character routes directly. If you already draw such routes, you must change them, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a85b14011ef8bc6465c95745ff1d87d8e11955f" translate="yes" xml:space="preserve">
          <source>Rails 4.0 changed how &lt;code&gt;assert_generates&lt;/code&gt;, &lt;code&gt;assert_recognizes&lt;/code&gt;, and &lt;code&gt;assert_routing&lt;/code&gt; work. Now all these assertions raise &lt;code&gt;Assertion&lt;/code&gt; instead of &lt;code&gt;ActionController::RoutingError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d3f01eb608a30f7a2ddb9983daf76e836d7ce1" translate="yes" xml:space="preserve">
          <source>Rails 4.0 changes the default &lt;code&gt;layout&lt;/code&gt; lookup set using symbols or procs that return nil. To get the &quot;no layout&quot; behavior, return false instead of nil.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5451da4da6a9f44d527816f68b5283aeb9c18c5" translate="yes" xml:space="preserve">
          <source>Rails 4.0 changes the default memcached client from &lt;code&gt;memcache-client&lt;/code&gt; to &lt;code&gt;dalli&lt;/code&gt;. To upgrade, simply add &lt;code&gt;gem 'dalli'&lt;/code&gt; to your &lt;code&gt;Gemfile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1071d9c0260cc6502b8e76d54da881c7480e61" translate="yes" xml:space="preserve">
          <source>Rails 4.0 deprecated &lt;code&gt;ActionController::AbstractRequest&lt;/code&gt; in favor of &lt;code&gt;ActionDispatch::Request&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9561467bc9de2199e41a56beb4fd88181b117355" translate="yes" xml:space="preserve">
          <source>Rails 4.0 deprecated &lt;code&gt;ActionController::AbstractResponse&lt;/code&gt; in favor of &lt;code&gt;ActionDispatch::Response&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b072d99fce26f9dce3aac83eaf118b6f53db58d" translate="yes" xml:space="preserve">
          <source>Rails 4.0 deprecated &lt;code&gt;ActionController::Integration&lt;/code&gt; in favor of &lt;code&gt;ActionDispatch::Integration&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b9c1fd2bf7abe2a38f84331d86fc2a2841ceb9" translate="yes" xml:space="preserve">
          <source>Rails 4.0 deprecated &lt;code&gt;ActionController::IntegrationTest&lt;/code&gt; in favor of &lt;code&gt;ActionDispatch::IntegrationTest&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47cb68db78c3ac574afb8af112e61ae51cb699f4" translate="yes" xml:space="preserve">
          <source>Rails 4.0 deprecated &lt;code&gt;ActionController::PerformanceTest&lt;/code&gt; in favor of &lt;code&gt;ActionDispatch::PerformanceTest&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03101c1a0e6865df2c2ccdd92f6c651482904a77" translate="yes" xml:space="preserve">
          <source>Rails 4.0 deprecated &lt;code&gt;ActionController::Request&lt;/code&gt; in favor of &lt;code&gt;ActionDispatch::Request&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a932c34d941b5da4652bc6072589b6d327e8b5" translate="yes" xml:space="preserve">
          <source>Rails 4.0 deprecated &lt;code&gt;ActionController::Response&lt;/code&gt; in favor of &lt;code&gt;ActionDispatch::Response&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4aac961331afbb628fcebe90cf96cd4d4d4580" translate="yes" xml:space="preserve">
          <source>Rails 4.0 deprecated &lt;code&gt;ActionController::Routing&lt;/code&gt; in favor of &lt;code&gt;ActionDispatch::Routing&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118ae9ef6413cbe7c97273423e10b4646d431c08" translate="yes" xml:space="preserve">
          <source>Rails 4.0 deprecates the &lt;code&gt;:confirm&lt;/code&gt; option for the &lt;code&gt;link_to&lt;/code&gt; helper. You should instead rely on a data attribute (e.g. &lt;code&gt;data: { confirm: 'Are you sure?' }&lt;/code&gt;). This deprecation also concerns the helpers based on this one (such as &lt;code&gt;link_to_if&lt;/code&gt; or &lt;code&gt;link_to_unless&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466cbc8146eeedf5065a1a81ded8a629651423c6" translate="yes" xml:space="preserve">
          <source>Rails 4.0 deprecates the &lt;code&gt;dom_id&lt;/code&gt; and &lt;code&gt;dom_class&lt;/code&gt; methods in controllers (they are fine in views). You will need to include the &lt;code&gt;ActionView::RecordIdentifier&lt;/code&gt; module in controllers requiring this feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8f40050da798d1108716b607221f17a1e602ac" translate="yes" xml:space="preserve">
          <source>Rails 4.0 encrypts the contents of cookie-based sessions if &lt;code&gt;secret_key_base&lt;/code&gt; has been set. Rails 3.x signed, but did not encrypt, the contents of cookie-based session. Signed cookies are &quot;secure&quot; in that they are verified to have been generated by your app and are tamper-proof. However, the contents can be viewed by end users, and encrypting the contents eliminates this caveat/concern without a significant performance penalty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b637692be75e01c79559c739e061bf96999cde96" translate="yes" xml:space="preserve">
          <source>Rails 4.0 extracted Active Resource to its own gem. If you still need the feature you can add the &lt;a href=&quot;https://github.com/rails/activeresource&quot;&gt;Active Resource gem&lt;/a&gt; in your &lt;code&gt;Gemfile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e725e6bcfa463b18685d184bb116f6b3fa04da9" translate="yes" xml:space="preserve">
          <source>Rails 4.0 has changed &lt;code&gt;ActiveModel::Serializers::JSON.include_root_in_json&lt;/code&gt; default value to &lt;code&gt;false&lt;/code&gt;. Now, Active Model Serializers and Active Record objects have the same default behavior. This means that you can comment or remove the following option in the &lt;code&gt;config/initializers/wrap_parameters.rb&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b620ed3ac93e3bb56a2f3b1928fc4be560940c50" translate="yes" xml:space="preserve">
          <source>Rails 4.0 has changed &lt;code&gt;serialized_attributes&lt;/code&gt; and &lt;code&gt;attr_readonly&lt;/code&gt; to class methods only. You shouldn't use instance methods since it's now deprecated. You should change them to use class methods, e.g. &lt;code&gt;self.serialized_attributes&lt;/code&gt; to &lt;code&gt;self.class.serialized_attributes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038755cbae06436895ed407f2c60f2f9fdd56fb8" translate="yes" xml:space="preserve">
          <source>Rails 4.0 has changed how errors attach with the &lt;code&gt;ActiveModel::Validations::ConfirmationValidator&lt;/code&gt;. Now when confirmation validations fail, the error will be attached to &lt;code&gt;:#{attribute}_confirmation&lt;/code&gt; instead of &lt;code&gt;attribute&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923e70825c5c3f1c0e6397cae110b6e4f3f971c8" translate="yes" xml:space="preserve">
          <source>Rails 4.0 has changed to default join table for &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; relations to strip the common prefix off the second table name. Any existing &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; relationship between models with a common prefix must be specified with the &lt;code&gt;join_table&lt;/code&gt; option. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6977da8367baa66165093a843e9950bb250186" translate="yes" xml:space="preserve">
          <source>Rails 4.0 has deprecated &lt;code&gt;ActionController::Base.page_cache_extension&lt;/code&gt; option. Use &lt;code&gt;ActionController::Base.default_static_extension&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a56989c39ce040469d81d59d43a5b4e4d0a535" translate="yes" xml:space="preserve">
          <source>Rails 4.0 has deprecated &lt;code&gt;ActiveRecord::Fixtures&lt;/code&gt; in favor of &lt;code&gt;ActiveRecord::FixtureSet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc186122b43bf188d864c736ab5d26472bb92e0" translate="yes" xml:space="preserve">
          <source>Rails 4.0 has deprecated &lt;code&gt;ActiveRecord::TestCase&lt;/code&gt; in favor of &lt;code&gt;ActiveSupport::TestCase&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03c82d30406e4d7639bac82291382fc721d34a2" translate="yes" xml:space="preserve">
          <source>Rails 4.0 has deprecated the old-style hash based finder API. This means that methods which previously accepted &quot;finder options&quot; no longer do. For example, &lt;code&gt;Book.find(:all, conditions: { name: '1984' })&lt;/code&gt; has been deprecated in favor of &lt;code&gt;Book.where(name: '1984')&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca046ecb1b92c52df90e7048efc6266be9c3714" translate="yes" xml:space="preserve">
          <source>Rails 4.0 has removed &lt;code&gt;ActionDispatch::BestStandardsSupport&lt;/code&gt; middleware, &lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt; already triggers standards mode per &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/jj676915(v=vs.85).aspx&quot;&gt;https://msdn.microsoft.com/en-us/library/jj676915(v=vs.85).aspx&lt;/a&gt; and ChromeFrame header has been moved to &lt;code&gt;config.action_dispatch.default_headers&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5550f9afe494a842d84e1b5b9b2d741177d65d66" translate="yes" xml:space="preserve">
          <source>Rails 4.0 has removed &lt;code&gt;attr_accessible&lt;/code&gt; and &lt;code&gt;attr_protected&lt;/code&gt; feature in favor of Strong Parameters. You can use the &lt;a href=&quot;https://github.com/rails/protected_attributes&quot;&gt;Protected Attributes gem&lt;/a&gt; for a smooth upgrade path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e80f9a2afcd313a4c61352e3bb6930c7b49636e" translate="yes" xml:space="preserve">
          <source>Rails 4.0 has removed Action and Page caching from Action Pack. You will need to add the &lt;code&gt;actionpack-action_caching&lt;/code&gt; gem in order to use &lt;code&gt;caches_action&lt;/code&gt; and the &lt;code&gt;actionpack-page_caching&lt;/code&gt; to use &lt;code&gt;caches_page&lt;/code&gt; in your controllers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b2f423e6599f030b4d5c1e65739a19993f704e" translate="yes" xml:space="preserve">
          <source>Rails 4.0 has removed the XML parameters parser. You will need to add the &lt;code&gt;actionpack-xml_parser&lt;/code&gt; gem if you require this feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b490110b50f895a0e09517f53ca53c5269dd55" translate="yes" xml:space="preserve">
          <source>Rails 4.0 has removed the identity map from Active Record, due to &lt;a href=&quot;https://github.com/rails/rails/commit/302c912bf6bcd0fa200d964ec2dc4a44abe328a6&quot;&gt;some inconsistencies with associations&lt;/a&gt;. If you have manually enabled it in your application, you will have to remove the following config that has no effect anymore: &lt;code&gt;config.active_record.identity_map&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c69ddccd48935f0c125d4153a9871f5969ad685" translate="yes" xml:space="preserve">
          <source>Rails 4.0 introduces &lt;code&gt;ActiveSupport::KeyGenerator&lt;/code&gt; and uses this as a base from which to generate and verify signed cookies (among other things). Existing signed cookies generated with Rails 3.x will be transparently upgraded if you leave your existing &lt;code&gt;secret_token&lt;/code&gt; in place and add the new &lt;code&gt;secret_key_base&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccbe12c4d5bbc57896587fda59ee0f7690563e22" translate="yes" xml:space="preserve">
          <source>Rails 4.0 no longer supports loading plugins from &lt;code&gt;vendor/plugins&lt;/code&gt;. You must replace any plugins by extracting them to gems and adding them to your &lt;code&gt;Gemfile&lt;/code&gt;. If you choose not to make them gems, you can move them into, say, &lt;code&gt;lib/my_plugin/*&lt;/code&gt; and add an appropriate initializer in &lt;code&gt;config/initializers/my_plugin.rb&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a036f0812688493c0ebfdc7db0d7b2b6ae77f4ed" translate="yes" xml:space="preserve">
          <source>Rails 4.0 raises an &lt;code&gt;ArgumentError&lt;/code&gt; if clashing named routes are defined. This can be triggered by explicitly defined named routes or by the &lt;code&gt;resources&lt;/code&gt; method. Here are two examples that clash with routes named &lt;code&gt;example_path&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed2bbf081514270cb40033ba7cadaf19f6f1533" translate="yes" xml:space="preserve">
          <source>Rails 4.0 removed the &lt;code&gt;ActionController::Base.asset_path&lt;/code&gt; option. Use the assets pipeline feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444f14e092a020f8c206add52b977a50a6dddac6" translate="yes" xml:space="preserve">
          <source>Rails 4.0 removed the &lt;code&gt;assets&lt;/code&gt; group from &lt;code&gt;Gemfile&lt;/code&gt;. You'd need to remove that line from your &lt;code&gt;Gemfile&lt;/code&gt; when upgrading. You should also update your application file (in &lt;code&gt;config/application.rb&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952ccfbfa22d176e0e6489d4357af0b16920d855" translate="yes" xml:space="preserve">
          <source>Rails 4.0 removes the &lt;code&gt;j&lt;/code&gt; alias for &lt;code&gt;ERB::Util#json_escape&lt;/code&gt; since &lt;code&gt;j&lt;/code&gt; is already used for &lt;code&gt;ActionView::Helpers::JavaScriptHelper#escape_javascript&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4b350d4aef7de51f8366246d899b27aab62260" translate="yes" xml:space="preserve">
          <source>Rails 4.0 requires that routes using &lt;code&gt;match&lt;/code&gt; must specify the request method. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37319dce5e669287a7c488d17b8a9941c6db40a2" translate="yes" xml:space="preserve">
          <source>Rails 4.0 requires that scopes use a callable object such as a Proc or lambda:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8baf8e08dc62766d1d323263ee615dee4f800048" translate="yes" xml:space="preserve">
          <source>Rails 4.1 evaluates each fixture's ERB in a separate context, so helper methods defined in a fixture will not be available in other fixtures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9dd196a6c69d2dfc2655df61f25ad7f405a40d7" translate="yes" xml:space="preserve">
          <source>Rails 4.1 fixed these issues by isolating its own encoder from the JSON gem. The JSON gem APIs will function as normal, but they will not have access to any Rails-specific features. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd31dde3a03edb26e1fee2f1681c1df472aeaa2" translate="yes" xml:space="preserve">
          <source>Rails 4.1 introduces &lt;code&gt;:plain&lt;/code&gt;, &lt;code&gt;:html&lt;/code&gt;, and &lt;code&gt;:body&lt;/code&gt; options to &lt;code&gt;render&lt;/code&gt;. Those options are now the preferred way to render string-based content, as it allows you to specify which content type you want the response sent as.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc86d9c25d59d5cd4f15df8d7af9eb306d8b90b" translate="yes" xml:space="preserve">
          <source>Rails 4.1 now defaults the I18n option &lt;code&gt;enforce_available_locales&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. This means that it will make sure that all locales passed to it must be declared in the &lt;code&gt;available_locales&lt;/code&gt; list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f52b52932eeb4b5475b3d7320bf74c8921b9c4" translate="yes" xml:space="preserve">
          <source>Rails 4.1 now expects an explicit block to be passed when calling &lt;code&gt;ActiveSupport::Callbacks.set_callback&lt;/code&gt;. This change stems from &lt;code&gt;ActiveSupport::Callbacks&lt;/code&gt; being largely rewritten for the 4.1 release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84bac015bd8e9bd2e734c0016eeb7c4890cfda82" translate="yes" xml:space="preserve">
          <source>Rails 4.1 will map &lt;code&gt;json&lt;/code&gt; and &lt;code&gt;hstore&lt;/code&gt; columns to a string-keyed Ruby &lt;code&gt;Hash&lt;/code&gt;. In earlier versions, a &lt;code&gt;HashWithIndifferentAccess&lt;/code&gt; was used. This means that symbol access is no longer supported. This is also the case for &lt;code&gt;store_accessors&lt;/code&gt; based on top of &lt;code&gt;json&lt;/code&gt; or &lt;code&gt;hstore&lt;/code&gt; columns. Make sure to use string keys consistently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddc16dec9d613e0d55264abdf564547aff7183e" translate="yes" xml:space="preserve">
          <source>Rails 5 adds the ability to run tasks and tests through &lt;code&gt;bin/rails&lt;/code&gt; instead of rake. Generally these changes are in parallel with rake, but some were ported over altogether. As the &lt;code&gt;rails&lt;/code&gt; command already looks for and runs &lt;code&gt;bin/rails&lt;/code&gt;, we recommend you to use the shorter &lt;code&gt;rails&lt;/code&gt; over `bin/rails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477f58c2a569c0be57564de445b70effbf8f94e6" translate="yes" xml:space="preserve">
          <source>Rails 5 now supports per-form CSRF tokens to mitigate against code-injection attacks with forms created by JavaScript. With this option turned on, forms in your application will each have their own CSRF token that is specific to the action and method for that form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef30481912f9ab601d0d6fb38d2bbbeae5409d1" translate="yes" xml:space="preserve">
          <source>Rails 5 removes support for the legacy &lt;code&gt;mysql&lt;/code&gt; database adapter. Most users should be able to use &lt;code&gt;mysql2&lt;/code&gt; instead. It will be converted to a separate gem when we find someone to maintain it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e3019080c359a56b21101441bd644f54b2bde7" translate="yes" xml:space="preserve">
          <source>Rails 5 requires Ruby 2.2.2 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09d5f27bdf9824c794d874174d056f81620a475" translate="yes" xml:space="preserve">
          <source>Rails 5.1 introduced rails-ujs and dropped jQuery as a dependency. As a result the Unobtrusive JavaScript (UJS) driver has been rewritten to operate without jQuery. These introductions cause small changes to &lt;code&gt;custom events&lt;/code&gt; fired during the request:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="018d1b1ed3e76aeca064111fd8c61883a9ed840f" translate="yes" xml:space="preserve">
          <source>Rails 5.2 adds bootsnap gem in the &lt;a href=&quot;https://github.com/rails/rails/pull/29313&quot;&gt;newly generated app's Gemfile&lt;/a&gt;. The &lt;code&gt;app:update&lt;/code&gt; command sets it up in &lt;code&gt;boot.rb&lt;/code&gt;. If you want to use it, then add it in the Gemfile, otherwise change the &lt;code&gt;boot.rb&lt;/code&gt; to not use bootsnap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d527e12fc7d5a39f29e8fab6c590cb9bdea98c5e" translate="yes" xml:space="preserve">
          <source>Rails 6 requires Ruby 2.5.0 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a1eaa5098c2c69e7ce557652c69ae31ae2a903d" translate="yes" xml:space="preserve">
          <source>Rails &lt;code&gt;CookieStore&lt;/code&gt; saves the session hash in a cookie on the client-side. The server retrieves the session hash from the cookie and eliminates the need for a session ID. That will greatly increase the speed of the application, but it is a controversial storage option and you have to think about the security implications and storage limitations of it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a681dd59a9688197f1d0e38c5f4c0fead827d94f" translate="yes" xml:space="preserve">
          <source>Rails &lt;em&gt;used&lt;/em&gt; to have a &lt;code&gt;country_select&lt;/code&gt; helper for choosing countries, but this has been extracted to the &lt;a href=&quot;https://github.com/stefanpenner/country_select&quot;&gt;country_select plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2e53ed4ebd1b542311f1c5bcf5ce7f15b8a628" translate="yes" xml:space="preserve">
          <source>Rails Application Templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30257fb8936a2af02b02ffb1e790de2ed599ec95" translate="yes" xml:space="preserve">
          <source>Rails Application's Rack Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e8c3d72319a5cb50dac3c684502640a221d796" translate="yes" xml:space="preserve">
          <source>Rails Controller Testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf458f3716dd370fa673b78d9b777144d2d8299f" translate="yes" xml:space="preserve">
          <source>Rails DOM Testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7267c81cda9e6258654a87faaec502ebe9f05d4" translate="yes" xml:space="preserve">
          <source>Rails Environment Settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ee541b600b236d327ea13f704278c40f6d944c" translate="yes" xml:space="preserve">
          <source>Rails General Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adbc66f7fae73902e201fb12f6a147ec52c38f58" translate="yes" xml:space="preserve">
          <source>Rails HTML Sanitizer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b095bd2fa2eeff293ddb87321652f869521afc1" translate="yes" xml:space="preserve">
          <source>Rails Internationalization (I18n) API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c128758340a68a6a33a3ea4f0a325a9f4cedf5" translate="yes" xml:space="preserve">
          <source>Rails Routing from the Outside In</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99cdc6ce268b5d9a18755330a11aa81f4d1b4ea7" translate="yes" xml:space="preserve">
          <source>Rails Sets up for Testing from the Word Go</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="501126bfec2c5f6adde539211c12590fef83bc64" translate="yes" xml:space="preserve">
          <source>Rails Specific Assertions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855914cbcfdaa883610f5b00e61a85098108fc05" translate="yes" xml:space="preserve">
          <source>Rails adds a &lt;code&gt;t&lt;/code&gt; (&lt;code&gt;translate&lt;/code&gt;) helper method to your views so that you do not need to spell out &lt;code&gt;I18n.t&lt;/code&gt; all the time. Additionally this helper will catch missing translations and wrap the resulting error message into a &lt;code&gt;&amp;lt;span class=&quot;translation_missing&quot;&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882fe2e1420f2aa67a5d9c3b617df1088819a6a2" translate="yes" xml:space="preserve">
          <source>Rails adds all &lt;code&gt;.rb&lt;/code&gt; and &lt;code&gt;.yml&lt;/code&gt; files from the &lt;code&gt;config/locales&lt;/code&gt; directory to the &lt;strong&gt;translations load path&lt;/strong&gt;, automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b85aa055ba0f5a6829322aec2df9df83d5ef61f7" translate="yes" xml:space="preserve">
          <source>Rails adds some custom assertions of its own to the &lt;code&gt;minitest&lt;/code&gt; framework:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba66524d76d4d734ccdc9e818301e0f954fa6c3" translate="yes" xml:space="preserve">
          <source>Rails adds this token to every form that's generated using the &lt;a href=&quot;form_helpers&quot;&gt;form helpers&lt;/a&gt;, so most of the time you don't have to worry about it. If you're writing a form manually or need to add the token for another reason, it's available through the method &lt;code&gt;form_authenticity_token&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41d86cff6ec3d71107d5ed5b79620a456924e7c" translate="yes" xml:space="preserve">
          <source>Rails allows you to alter what generators are used with the &lt;code&gt;config.generators&lt;/code&gt; method. This method takes a block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a149bbbb10626128a0b5f2394e3e0b8b60fd685e" translate="yes" xml:space="preserve">
          <source>Rails allows you to define inflection rules (such as rules for singularization and pluralization) for locales other than English. In &lt;code&gt;config/initializers/inflections.rb&lt;/code&gt;, you can define these rules for multiple locales. The initializer contains a default example for specifying additional rules for English; follow that format for other locales as you see fit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba19baa4a2e12a64a7d673ae81508e50b8aaa998" translate="yes" xml:space="preserve">
          <source>Rails allows you to stream more than just files. In fact, you can stream anything you would like in a response object. The &lt;code&gt;ActionController::Live&lt;/code&gt; module allows you to create a persistent connection with a browser. Using this module, you will be able to send arbitrary data to the browser at specific points in time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12d088778b9674db5fbc0511e3140a16c3a887b" translate="yes" xml:space="preserve">
          <source>Rails also adds a &lt;code&gt;test&lt;/code&gt; method that takes a test name and a block. It generates a normal &lt;code&gt;Minitest::Unit&lt;/code&gt; test with method names prefixed with &lt;code&gt;test_&lt;/code&gt;. So you don't have to worry about naming the methods, and you can write something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9488f0c0cd0b3baffae60bb7bd15ef99a6475f" translate="yes" xml:space="preserve">
          <source>Rails also creates a default &lt;code&gt;app/assets/stylesheets/application.css&lt;/code&gt; file which contains these lines:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37455f4bde79e9b88d388f497f2d34efe713d391" translate="yes" xml:space="preserve">
          <source>Rails also doesn't support automatic load balancing of replicas. This is very dependent on your infrastructure. We may implement basic, primitive load balancing in the future, but for an application at scale this should be something your application handles outside of Rails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c58c0e6fe53943c679ac0dc9ddce6262242f342" translate="yes" xml:space="preserve">
          <source>Rails also has built-in support for converting objects to XML and rendering that XML back to the caller:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c76e2d5cd1e87fb4e699ba91ff026f92a1fd002" translate="yes" xml:space="preserve">
          <source>Rails also makes a counter variable available within a partial called by the collection, named after the title of the partial followed by &lt;code&gt;_counter&lt;/code&gt;. For example, when rendering a collection &lt;code&gt;@products&lt;/code&gt; the partial &lt;code&gt;_product.html.erb&lt;/code&gt; can access the variable &lt;code&gt;product_counter&lt;/code&gt; which indexes the number of times it has been rendered within the enclosing view. Note that it also applies for when the partial name was changed by using the &lt;code&gt;as:&lt;/code&gt; option. For example, the counter variable for the code above would be &lt;code&gt;item_counter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8f0438ddf05e564284d5ff4ffb0e1839ae48d9" translate="yes" xml:space="preserve">
          <source>Rails also provides a signed cookie jar and an encrypted cookie jar for storing sensitive data. The signed cookie jar appends a cryptographic signature on the cookie values to protect their integrity. The encrypted cookie jar encrypts the values in addition to signing them, so that they cannot be read by the end user. Refer to the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Cookies.html&quot;&gt;API documentation&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5eb696897d218020271e0c20270f3e212135629" translate="yes" xml:space="preserve">
          <source>Rails applications generated from JRuby will automatically include the &lt;code&gt;with: :threads&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a74fdb97f1c93a3db79b66fb0ecfa05e3fbb2b79" translate="yes" xml:space="preserve">
          <source>Rails autoloading &lt;strong&gt;does not emulate this algorithm&lt;/strong&gt;, but its starting point is the name of the constant to be autoloaded, and the cref. See more in &lt;a href=&quot;#autoloading-algorithms-relative-references&quot;&gt;Relative References&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929f042a819833e2039d437ea5d5b553808d3a3e" translate="yes" xml:space="preserve">
          <source>Rails autoloading &lt;strong&gt;does not emulate this algorithm&lt;/strong&gt;, but its starting point is the name of the constant to be autoloaded, and the parent. See more in &lt;a href=&quot;#autoloading-algorithms-qualified-references&quot;&gt;Qualified References&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca7a469754795dd798a961472886970ca002b30" translate="yes" xml:space="preserve">
          <source>Rails autoloads files with &lt;code&gt;Kernel#load&lt;/code&gt; when &lt;code&gt;config.cache_classes&lt;/code&gt; is false, the default in development mode, and with &lt;code&gt;Kernel#require&lt;/code&gt; otherwise, the default in production mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72fec4634ffe3f750bfa2aaad28585599746f28a" translate="yes" xml:space="preserve">
          <source>Rails automatically adds the &lt;code&gt;sass-rails&lt;/code&gt; gem to your &lt;code&gt;Gemfile&lt;/code&gt;, which is used by Sprockets for asset compression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635372fd995605b2f6ef4c32902ba93ecb293994" translate="yes" xml:space="preserve">
          <source>Rails automatically allows various operations to be performed at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a22e7d1defbeddde4c68d44ad6f667a7988f29" translate="yes" xml:space="preserve">
          <source>Rails automatically loads all fixtures from the &lt;code&gt;test/fixtures&lt;/code&gt; directory by default. Loading involves three steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7ab0f028fa312ba4843b48a1746a7a7e5fcf07" translate="yes" xml:space="preserve">
          <source>Rails automatically reloads classes and modules if application files change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710057f36693e66e42333161ea3b95aad5462eb1" translate="yes" xml:space="preserve">
          <source>Rails automatically wraps fields that contain an error with a div with class &lt;code&gt;field_with_errors&lt;/code&gt;. You can define a CSS rule to make them standout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f802e7a0fdc68500cf57a3dbc795790985e67c" translate="yes" xml:space="preserve">
          <source>Rails by default comes with an asynchronous queuing implementation that runs jobs with an in-process thread pool. Jobs will run asynchronously, but any jobs in the queue will be dropped upon restart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d1d20e77290403e70a4dc5644a43a2ae38c07e" translate="yes" xml:space="preserve">
          <source>Rails can render a raw file from an absolute path. This is useful for conditionally rendering static files like error pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4a8be4ddcf18fb0b372be5e471247d33aaa10e" translate="yes" xml:space="preserve">
          <source>Rails can render vanilla JavaScript:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a3f986e08352ca51aff16273e7d66262139d76" translate="yes" xml:space="preserve">
          <source>Rails class and module autoloading uses &lt;code&gt;underscore&lt;/code&gt; to infer the relative path without extension of a file that would define a given missing constant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd559a24db45543b21e1e9ed7bc4e71dc1813b79" translate="yes" xml:space="preserve">
          <source>Rails code can often be referenced on load of an application. Rails is responsible for the load order of these frameworks, so when you load frameworks, such as &lt;code&gt;ActiveRecord::Base&lt;/code&gt;, prematurely you are violating an implicit contract your application has with Rails. Moreover, by loading code such as &lt;code&gt;ActiveRecord::Base&lt;/code&gt; on boot of your application you are loading entire frameworks which may slow down your boot time and could cause conflicts with load order and boot of your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe46377f207dd068b73309779a599c92000bd29" translate="yes" xml:space="preserve">
          <source>Rails collects all of the parameters sent along with the request in the &lt;code&gt;params&lt;/code&gt; hash, whether they are sent as part of the query string or the post body. The request object has three accessors that give you access to these parameters depending on where they came from. The &lt;code&gt;query_parameters&lt;/code&gt; hash contains parameters that were sent as part of the query string while the &lt;code&gt;request_parameters&lt;/code&gt; hash contains parameters sent as part of the post body. The &lt;code&gt;path_parameters&lt;/code&gt; hash contains parameters that were recognized by the routing as being part of the path leading to this particular controller and action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f0be8b2546663bb6f50f2797e5859bcf792d45b" translate="yes" xml:space="preserve">
          <source>Rails comes bundled with a command to compile the asset manifests and other files in the pipeline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a9bd939d0ac814f2b94ec98585f4e785c9e4d86" translate="yes" xml:space="preserve">
          <source>Rails comes with a generator for data models too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ad86495862bcc2ce925c1539534f0c8d1733b8" translate="yes" xml:space="preserve">
          <source>Rails comes with a number of scripts called generators that are designed to make your development life easier by creating everything that's necessary to start working on a particular task. One of these is the new application generator, which will provide you with the foundation of a fresh Rails application so that you don't have to write it yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69bbeb72161f8a0539899f71c73137a18b1f2e8" translate="yes" xml:space="preserve">
          <source>Rails comes with a test framework called minitest. Rails owes its stability to the use of tests. The commands available in the &lt;code&gt;test:&lt;/code&gt; namespace helps in running the different tests you will hopefully write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8867987afcf5fc3f4b6e5801f2dc9f2dc2c90d69" translate="yes" xml:space="preserve">
          <source>Rails comes with built-in support for &lt;a href=&quot;http://www.sqlite.org&quot;&gt;SQLite3&lt;/a&gt;, which is a lightweight serverless database application. While a busy production environment may overload SQLite, it works well for development and testing. Rails defaults to using an SQLite database when creating a new project, but you can always change it later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5f5e48468adb5bdf935efdc42730b6a29c5496" translate="yes" xml:space="preserve">
          <source>Rails comes with two built-in HTTP authentication mechanisms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b6a6d33f1e8bf97146a3665c248044cade6e9a" translate="yes" xml:space="preserve">
          <source>Rails configures Zeitwerk to inflect file names with &lt;code&gt;String#camelize&lt;/code&gt;. For example, it expects that &lt;code&gt;app/controllers/users_controller.rb&lt;/code&gt; defines the constant &lt;code&gt;UsersController&lt;/code&gt; because</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c9d8af8dbcb43cfce2fd48cac96f8041e8aff2" translate="yes" xml:space="preserve">
          <source>Rails contains infrastructure for &quot;centralizing dynamic decisions about the URLs&quot; in its &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-default_url_options&quot;&gt;&lt;code&gt;ApplicationController#default_url_options&lt;/code&gt;&lt;/a&gt;, which is useful precisely in this scenario: it enables us to set &quot;defaults&quot; for &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Routing/UrlFor.html#method-i-url_for&quot;&gt;&lt;code&gt;url_for&lt;/code&gt;&lt;/a&gt; and helper methods dependent on it (by implementing/overriding &lt;code&gt;default_url_options&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e01e5294891b11529c00aa3a9b2880976bab60" translate="yes" xml:space="preserve">
          <source>Rails create &lt;code&gt;app/assets/stylesheets/application.css&lt;/code&gt; regardless of whether the --skip-sprockets option is used when creating a new Rails application. This is so you can easily add asset pipelining later if you like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76bbc4804336d423436a29396cb60960157b25d6" translate="yes" xml:space="preserve">
          <source>Rails creates a &lt;code&gt;test&lt;/code&gt; directory for you as soon as you create a Rails project using &lt;code&gt;rails new&lt;/code&gt;&lt;em&gt;application_name&lt;/em&gt;. If you list the contents of this directory then you shall see:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d54b408c849645e77b9eeb696fbacafe4f08c3" translate="yes" xml:space="preserve">
          <source>Rails creates this file for you inside the &lt;code&gt;/public&lt;/code&gt; folder. By default, it allows search engines to index all pages of your application. If you want to block indexing on all pages of your application, use this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd4a6195259907fbda1f6145544aa96b3c15704" translate="yes" xml:space="preserve">
          <source>Rails default exception handling displays a &quot;500 Server Error&quot; message for all exceptions. If the request was made locally, a nice traceback and some added information gets displayed so you can figure out what went wrong and deal with it. If the request was remote Rails will just display a simple &quot;500 Server Error&quot; message to the user, or a &quot;404 Not Found&quot; if there was a routing error or a record could not be found. Sometimes you might want to customize how these errors are caught and how they're displayed to the user. There are several levels of exception handling available in a Rails application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a2a80818d2361be3ca3e03702919cbc302d479" translate="yes" xml:space="preserve">
          <source>Rails default middleware uses the request's session to set a timestamp that informs the application when to read from a primary or read from a replica.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21de5a3c962e91a2d766c7db2a7149af8b78242d" translate="yes" xml:space="preserve">
          <source>Rails detects files have changed using an evented file monitor (default), or walking the autoload paths, depending on &lt;code&gt;config.file_watcher&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965f7ebfa9c4f0a202dc6d1fe01803b557367789" translate="yes" xml:space="preserve">
          <source>Rails determines the name of the partial to use by looking at the model name in the collection, &lt;code&gt;Product&lt;/code&gt; in this case. In fact, you can even render a collection made up of instances of different models using this shorthand, and Rails will choose the proper partial for each member of the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717d403f6e7be5dc4bdaa995f83111ede482d068" translate="yes" xml:space="preserve">
          <source>Rails determines the name of the partial to use by looking at the model name in the collection. In fact, you can even create a heterogeneous collection and render it this way, and Rails will choose the proper partial for each member of the collection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ab3ac59ec32a0eda1c01d4613fb30d8e496dd0" translate="yes" xml:space="preserve">
          <source>Rails discourages the use of functional tests in favor of integration tests (use &lt;a href=&quot;../actiondispatch/integrationtest&quot;&gt;ActionDispatch::IntegrationTest&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3e163c61ec440d5092447e49a15d9639b63bee" translate="yes" xml:space="preserve">
          <source>Rails does not require the value of autoloaded constants to be a class or module object. For example, if the file &lt;code&gt;app/models/max_clients.rb&lt;/code&gt; defines &lt;code&gt;MAX_CLIENTS = 100&lt;/code&gt; autoloading &lt;code&gt;MAX_CLIENTS&lt;/code&gt; works just fine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db6f2fd4838d1c341dc4672debae9cb5497eaf4" translate="yes" xml:space="preserve">
          <source>Rails encrypts cookies by default. The client cannot read or edit the contents of the cookie, without breaking encryption. If you take appropriate care of your secrets, you can consider your cookies to be generally secured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7122e57bdf21e1b70464c89bec009518c15b40e" translate="yes" xml:space="preserve">
          <source>Rails follows a shifted version of &lt;a href=&quot;http://semver.org/&quot;&gt;semver&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a50d162ddc0712d8dc22ca250fe32b3701b1de" translate="yes" xml:space="preserve">
          <source>Rails framework hooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c17eb223eaeb82c8ac6c859a7d50235e85adae8" translate="yes" xml:space="preserve">
          <source>Rails generally stays close to the latest released Ruby version when it's released:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca89554faf81c5505cbedea0ecd4b38b49925211" translate="yes" xml:space="preserve">
          <source>Rails generates weak ETags by default. Weak ETags allow semantically equivalent responses to have the same ETags, even if their bodies do not match exactly. This is useful when we don't want the page to be regenerated for minor changes in response body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7f59047a873fd19da58621d19cff3467f3817a" translate="yes" xml:space="preserve">
          <source>Rails generators are an essential tool if you plan to improve your workflow. With this guide you will learn how to create generators and customize existing ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a076ef74988be52b2a9a2009be140eb3f8cb1866" translate="yes" xml:space="preserve">
          <source>Rails generators can be easily modified to accept custom command line arguments. This functionality comes from &lt;a href=&quot;http://www.rubydoc.info/github/erikhuda/thor/master/Thor/Base/ClassMethods#class_option-instance_method&quot;&gt;Thor&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23568203378b53b027d89489fee3132dc3f00e29" translate="yes" xml:space="preserve">
          <source>Rails guarantees &quot;read your own write&quot; and will send your GET or HEAD request to the primary if it's within the &lt;code&gt;delay&lt;/code&gt; window. By default the delay is set to 2 seconds. You should change this based on your database infrastructure. Rails doesn't guarantee &quot;read a recent write&quot; for other users within the delay window and will send GET and HEAD requests to the replicas unless they wrote recently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4264c5deafdebabf42ce47d5d8e17637220ac90f" translate="yes" xml:space="preserve">
          <source>Rails has 5 initialization events which can be hooked into (listed in the order that they are run):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94594cbf4aa1a5d727752d6f5b2e5b444a8a45a" translate="yes" xml:space="preserve">
          <source>Rails has a handy command for inspecting the middleware stack in use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482293ef4fd5f5b33590296e5ab8ec805469a8d3" translate="yes" xml:space="preserve">
          <source>Rails has classes that act like &lt;code&gt;Date&lt;/code&gt; or &lt;code&gt;Time&lt;/code&gt; and follow this contract.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db264a3396eae7c4c0945b926882456b630bfc0" translate="yes" xml:space="preserve">
          <source>Rails has several initializers that run on startup that are all defined by using the &lt;code&gt;initializer&lt;/code&gt; method from &lt;code&gt;Rails::Railtie&lt;/code&gt;. Here's an example of the &lt;code&gt;set_helpers_path&lt;/code&gt; initializer from Action Controller:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae68dbdc95e9868a1fa409a6c460c3be6c2c8d6b" translate="yes" xml:space="preserve">
          <source>Rails has several security features that help you write secure applications, and you're running into one of them now. This one is called &lt;a href=&quot;action_controller_overview#strong-parameters&quot;&gt;strong parameters&lt;/a&gt;, which requires us to tell Rails exactly which parameters are allowed into our controller actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc81b8bf1e25d1e74d1ea062690308ff3c603644" translate="yes" xml:space="preserve">
          <source>Rails implements a convenient way to look up the locale inside &lt;em&gt;views&lt;/em&gt;. When you have the following dictionary:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719c78fea53dd7e60722fd5e73464f2f2c049b81" translate="yes" xml:space="preserve">
          <source>Rails includes methods to help you validate the data that you send to models. Open the &lt;code&gt;app/models/article.rb&lt;/code&gt; file and edit it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce2115826a1bf9bd110669003e0347a177a6717" translate="yes" xml:space="preserve">
          <source>Rails is a web application development framework written in the Ruby programming language. It is designed to make programming web applications easier by making assumptions about what every developer needs to get started. It allows you to write less code while accomplishing more than many other languages and frameworks. Experienced Rails developers also report that it makes web application development more fun.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81fd3536ee6ba65190bdbc5b258a1e7130ca987" translate="yes" xml:space="preserve">
          <source>Rails is a web application framework running on the Ruby programming language. If you have no prior experience with Ruby, you will find a very steep learning curve diving straight into Rails. There are several curated lists of online resources for learning Ruby:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c242b26cb375232e6a53aeb90a266542f91b08d" translate="yes" xml:space="preserve">
          <source>Rails is always able to autoload provided its environment is in place. For example the &lt;code&gt;runner&lt;/code&gt; command autoloads:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6eff8542057cd8591cb5c989def2c5ccfc53b93" translate="yes" xml:space="preserve">
          <source>Rails is not &quot;someone else's framework&quot;. This guide covers a variety of ways that you can get involved in the ongoing development of Rails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ad03276eee1dca46accdec685aa6efa5a33428" translate="yes" xml:space="preserve">
          <source>Rails is opinionated software. It makes the assumption that there is a &quot;best&quot; way to do things, and it's designed to encourage that way - and in some cases to discourage alternatives. If you learn &quot;The Rails Way&quot; you'll probably discover a tremendous increase in productivity. If you persist in bringing old habits from other languages to your Rails development, and trying to use patterns you learned elsewhere, you may have a less happy experience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c14b713aa25c8744efa5042a2ae4086fec4917df" translate="yes" xml:space="preserve">
          <source>Rails is smart enough to only execute the migrations that have not already been run against the current database, so in this case you will just see:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d5ed2e7a30ca98505b166ff88e27ccf75dbdf4" translate="yes" xml:space="preserve">
          <source>Rails is usually able to generate good descriptions if a generator is namespaced, as &lt;code&gt;ActiveRecord::Generators::ModelGenerator&lt;/code&gt;, but not in this particular case. We can solve this problem in two ways. The first one is calling &lt;code&gt;desc&lt;/code&gt; inside our generator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d639d6430d5cc51048a6bed870359565b96c4f4a" translate="yes" xml:space="preserve">
          <source>Rails keeps a log file for each environment in the &lt;code&gt;log&lt;/code&gt; folder. These are extremely useful when debugging what's actually going on in your application, but in a live application you may not want every bit of information to be stored in the log file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14261acf59803989a84296641a2c5da4731be805" translate="yes" xml:space="preserve">
          <source>Rails keeps track of which files have been committed to the database and provides rollback features. To actually create the table, you'd run &lt;code&gt;rails db:migrate&lt;/code&gt; and to roll it back, &lt;code&gt;rails db:rollback&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1796719290e55839f35752eb8c8571cf03f90f09" translate="yes" xml:space="preserve">
          <source>Rails knows that all these inputs should be part of the person hash because you called &lt;code&gt;fields_for&lt;/code&gt; on the first form builder. By specifying an &lt;code&gt;:index&lt;/code&gt; option you're telling Rails that instead of naming the inputs &lt;code&gt;person[address][city]&lt;/code&gt; it should insert that index surrounded by [] between the address and the city. This is often useful as it is then easy to locate which Address record should be modified. You can pass numbers with some other significance, strings or even &lt;code&gt;nil&lt;/code&gt; (which will result in an array parameter being created).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197f43a7b037bf70e22209cf61cd94c681fcd198" translate="yes" xml:space="preserve">
          <source>Rails knows that this view belongs to a different controller because of the embedded slash character in the string. If you want to be explicit, you can use the &lt;code&gt;:template&lt;/code&gt; option (which was required on Rails 2.2 and earlier):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774545637360aae92c4ebe065c016eb6f28c6b47" translate="yes" xml:space="preserve">
          <source>Rails makes changing the default settings for system tests very simple. All the setup is abstracted away so you can focus on writing your tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c44e8591a6157f00f4c5d50ee92b599200b3d875" translate="yes" xml:space="preserve">
          <source>Rails makes it super easy to write your tests. It starts by producing skeleton test code while you are creating your models and controllers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b354152daf748c738d04b480b28253fc45cf71" translate="yes" xml:space="preserve">
          <source>Rails makes this quite easy. First, let's generate the base Vehicle model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc4edad2ef5487dd74518beadce1b8b1d82b703" translate="yes" xml:space="preserve">
          <source>Rails makes use of the &lt;code&gt;ActiveSupport::Logger&lt;/code&gt; class to write log information. Other loggers, such as &lt;code&gt;Log4r&lt;/code&gt;, may also be substituted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23085bf9d87afb1123756ae1320b557a5bc3ef6a" translate="yes" xml:space="preserve">
          <source>Rails meets Minitest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516687cad0f785561b74fd86abdff587d7b65073" translate="yes" xml:space="preserve">
          <source>Rails model tests are stored under the &lt;code&gt;test/models&lt;/code&gt; directory. Rails provides a generator to create a model test skeleton for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1be49f4dd69ec8956c82dc124e9103dc67617cf" translate="yes" xml:space="preserve">
          <source>Rails now creates routes to the &lt;code&gt;CategoriesController&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545ce84ccc97f6afa573e0a15abdb51202ab5ff4" translate="yes" xml:space="preserve">
          <source>Rails offers facilities for inspecting and testing your routes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b44821151cda246c6f9d2923336cee4bf16128f" translate="yes" xml:space="preserve">
          <source>Rails offers four standard spots to place initialization code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22bb0fbe7bb313a1a1301cfba19d796e74b81c3f" translate="yes" xml:space="preserve">
          <source>Rails offers two different ways to declare a many-to-many relationship between models. The simpler way is to use &lt;code&gt;has_and_belongs_to_many&lt;/code&gt;, which allows you to make the association directly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc8267f86f12a15d7a5c0d4fc1b9b14390e4dd2" translate="yes" xml:space="preserve">
          <source>Rails on Rack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471071ee93a9ea3e27a142d138be76c3540a4997" translate="yes" xml:space="preserve">
          <source>Rails own generators are flexible enough to let you customize scaffolding. They can be configured in &lt;code&gt;config/application.rb&lt;/code&gt;, these are some defaults:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115c172f90b28d409a1f87b5018ed334c2609d2d" translate="yes" xml:space="preserve">
          <source>Rails passes the object being added or removed to the callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe63dae112f2043df9ccb47d655471e95a75348" translate="yes" xml:space="preserve">
          <source>Rails provides a &lt;code&gt;resources&lt;/code&gt; method which can be used to declare a standard REST resource. You need to add the &lt;em&gt;article resource&lt;/em&gt; to the &lt;code&gt;config/routes.rb&lt;/code&gt; so the file will look as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="accb8afadf1b75822c4bdf90b96fbf208b24f1f9" translate="yes" xml:space="preserve">
          <source>Rails provides a DSL that allows you to configure a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy&quot;&gt;Content Security Policy&lt;/a&gt; for your application. You can configure a global default policy and then override it on a per-resource basis and even use lambdas to inject per-request values into the header such as account subdomains in a multi-tenant application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9dfb090dfa02faf472fe0ec70a1d599ea7fcc6e" translate="yes" xml:space="preserve">
          <source>Rails provides a bunch of view helper methods written in Ruby to assist you in generating HTML. Sometimes, you want to add a little Ajax to those elements, and Rails has got your back in those cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fad7b6ef67fc88857c662b89306c2841113549f" translate="yes" xml:space="preserve">
          <source>Rails provides a domain-specific language for managing a database schema called migrations. Migrations are stored in files which are executed against any database that Active Record supports using &lt;code&gt;rake&lt;/code&gt;. Here's a migration that creates a table:</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
