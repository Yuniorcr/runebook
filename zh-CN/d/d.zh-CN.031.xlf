<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="d">
    <body>
      <group id="d">
        <trans-unit id="3b25dc46bc323e2fde9ea314cfcadb8b078de785" translate="yes" xml:space="preserve">
          <source>bool &lt;strong id=&quot;unloadLibrary&quot;&gt;unloadLibrary&lt;/strong&gt;()(void* p);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f99a461033938a5d0449f861fdb0a84f6e23846" translate="yes" xml:space="preserve">
          <source>bool &lt;strong id=&quot;unregister&quot;&gt;unregister&lt;/strong&gt;(string name);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f201046ec8e9ded9ba3d1465ec78e2d729b68748" translate="yes" xml:space="preserve">
          <source>bool &lt;strong id=&quot;useStaticInit&quot;&gt;useStaticInit&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c9bed02817724315d4ebd0b5823df8a8c271af" translate="yes" xml:space="preserve">
          <source>bool &lt;strong id=&quot;verifyHookExist&quot;&gt;verifyHookExist&lt;/strong&gt;(ref const Loc loc, ref Scope sc, Identifier id, string description, Identifier module_ = Id.object);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837d33f59c21a866c90ca94e85a41684bb1fec8f" translate="yes" xml:space="preserve">
          <source>bool &lt;strong id=&quot;wait&quot;&gt;wait&lt;/strong&gt;(Duration period);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92dec0594f8583643f2fabb7a81de84c61b97e4d" translate="yes" xml:space="preserve">
          <source>bool &lt;strong id=&quot;wait&quot;&gt;wait&lt;/strong&gt;(Duration val);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d9fe8c0dbf0997c6eaf9527523f4963494c99e" translate="yes" xml:space="preserve">
          <source>bool condition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54dcf7ac2ed6ab1feb4b90c32cb382e0f681aa57" translate="yes" xml:space="preserve">
          <source>bool function(Tid) &lt;code&gt;onCrowdingDoThis&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1d1bfdfc92f1f04bbe320f2dec25fea771f1da" translate="yes" xml:space="preserve">
          <source>bool[] &lt;code&gt;ba&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48647474b89fa8f56ed6bda0f8148a17b51b97bd" translate="yes" xml:space="preserve">
          <source>boolean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98fd50da2c88ae19c1e89583f9e4f7d0ca1a8c9" translate="yes" xml:space="preserve">
          <source>boolean value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30fe488a0d4a09b71d081ade71d98392e490fa3" translate="yes" xml:space="preserve">
          <source>both RECEIVE and SEND</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45af4cffb716ddd943aa1d57518b62649b038517" translate="yes" xml:space="preserve">
          <source>boundaries as defined in the aforementioned standard annex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f59dee357f13b37b47d1e8ca557573ba794a44f" translate="yes" xml:space="preserve">
          <source>boundary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29dca5f7d374cf839878dadb5281474498185fde" translate="yes" xml:space="preserve">
          <source>branches to the instruction following the jmp instruction. The &amp;amp;dollar; can only appear as the target of a jmp or call instruction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb25206229818f0ed8dd8ccd022f176f164106b0" translate="yes" xml:space="preserve">
          <source>buf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cae0d7f346064c32f2354fc11ad8c24f7dd67a3" translate="yes" xml:space="preserve">
          <source>buffer candidate for deallocation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7a66e1b0e0c442b86d37fc859538b46070af94" translate="yes" xml:space="preserve">
          <source>buffer containing input data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e7e7fb5f7e8ea18aa7750c9ab05f5b55fcca83" translate="yes" xml:space="preserve">
          <source>buffer containing the compressed data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96eb7695b8be6e7ac2e79b1841b13788a4d97bf6" translate="yes" xml:space="preserve">
          <source>buffer containing the data to compress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1612856b18f0a57b3a039088d0f56d51ac63c74a" translate="yes" xml:space="preserve">
          <source>buffer tested if owned by this allocator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f31cb5d8c1b2a008abd9d76e975fe999ba3325" translate="yes" xml:space="preserve">
          <source>buffer to write to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf138bc818362e6ab71f454519cff05a7f430702" translate="yes" xml:space="preserve">
          <source>build a debug info struct for variables captured by nested functions, but not in a closure. must be called after generating the function to fill stack offsets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf09b10fe4d27abdc431f3dc2dbf0111d61f88d" translate="yes" xml:space="preserve">
          <source>build a shim function around the compound dtor that translates a C++ destructor to a destructor with extern(D) calling convention</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d2208e0dc6df5ad890665ad8abf87fe0373019" translate="yes" xml:space="preserve">
          <source>buildClosure() inserts code just after the function prolog is complete. It allocates memory for the closure, allocates a local variable (sclosure) to point to it, inserts into it the link to the enclosing frame, and copies into it the parameters that are referred to in nested functions. In VarExp::toElem and SymOffExp::toElem, when referring to a variable that is in a closure, takes the offset from sclosure rather than from the frame pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d5d2e2f7b284c59b5d5524e253602d75965205" translate="yes" xml:space="preserve">
          <source>built with debug capabilities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c4073037f08a061c48d7c5e7c3733d13d15d80" translate="yes" xml:space="preserve">
          <source>built-in assignment binary operators, i.e. &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;+=&lt;/code&gt;, &lt;code&gt;*=&lt;/code&gt;, &lt;code&gt;/=&lt;/code&gt;, &lt;code&gt;%=&lt;/code&gt;, &lt;code&gt;&amp;amp;=&lt;/code&gt;, &lt;code&gt;|=&lt;/code&gt;, &lt;code&gt;^=&lt;/code&gt;, &lt;code&gt;~=&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;=&lt;/code&gt;, and &lt;code&gt;^^=&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73ddcab218beb31ead0f7f70c4cb66278461232" translate="yes" xml:space="preserve">
          <source>built-in indexing operator &lt;code&gt;[]&lt;/code&gt; (but not the slicing operator);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409bac4aa8d19888efd8ebac99b80e8ca6b3550f" translate="yes" xml:space="preserve">
          <source>built-in unary operators &lt;code&gt;+&lt;/code&gt; (when applied to an lvalue), &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;++&lt;/code&gt; (prefix only), &lt;code&gt;--&lt;/code&gt; (prefix only);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f30cbafb03438e7ec688ab5bae6913761afb9a" translate="yes" xml:space="preserve">
          <source>builtin.d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4baea6054651940e0c64a2c61cb785e6ce757f" translate="yes" xml:space="preserve">
          <source>by using a mutex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf1783fa99f62ca581f6fe8f3cd66b0f9ab9fc3" translate="yes" xml:space="preserve">
          <source>byte</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f5cea12707df522c62f8a1ed63b8843ed35e7f" translate="yes" xml:space="preserve">
          <source>byte16</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef2bd13ec8f614c928e9ef67386cba2c3364b08" translate="yes" xml:space="preserve">
          <source>byte32</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb10f8ad14781a03f16aa41a15cfac8999883182" translate="yes" xml:space="preserve">
          <source>byte[] &lt;strong id=&quot;_d_arrayappendcTX&quot;&gt;_d_arrayappendcTX&lt;/strong&gt;(const TypeInfo ti, ref byte[] px, size_t n);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49702813a8f491d1581c5c5e8109606997ad34d0" translate="yes" xml:space="preserve">
          <source>byte[] &lt;strong id=&quot;_d_arraycatT&quot;&gt;_d_arraycatT&lt;/strong&gt;(const TypeInfo ti, byte[] x, byte[] y);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ba81664a7afd135fdbb6a5d80e2296762161a7" translate="yes" xml:space="preserve">
          <source>byte[] &lt;strong id=&quot;m_init&quot;&gt;m_init&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eec28a5dd9dbedd0c4fa63f2635ac63d98f9b1e" translate="yes" xml:space="preserve">
          <source>bytes to allocate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a516841ba77a5b4648de2cd0dfcb30ea46dbb4" translate="yes" xml:space="preserve">
          <source>c</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6272a68439e3788609e5b87fc0b65b6432792078" translate="yes" xml:space="preserve">
          <source>c_long &lt;strong id=&quot;bufferlength&quot;&gt;bufferlength&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb84de0bad1ec45f8b92e05d00e06a2ac9dfc6b" translate="yes" xml:space="preserve">
          <source>c_long &lt;strong id=&quot;contentslength&quot;&gt;contentslength&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713f9f0c13808f4c9123b51f64d704c62503ae46" translate="yes" xml:space="preserve">
          <source>c_long &lt;strong id=&quot;flags&quot;&gt;flags&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314626d7459302295dca0c289a1d4e4c3e10473e" translate="yes" xml:space="preserve">
          <source>c_long &lt;strong id=&quot;hardlinks&quot;&gt;hardlinks&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22393e32a257ed49ac654c3d9c4662c534de64b6" translate="yes" xml:space="preserve">
          <source>c_long &lt;strong id=&quot;namelength&quot;&gt;namelength&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0726a3a65bc82246f2daa247dddfa660a1eb34a4" translate="yes" xml:space="preserve">
          <source>c_long &lt;strong id=&quot;ssl_version_num&quot;&gt;ssl_version_num&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9de78db8e448e3a32dcee428c25b690b7c952dc" translate="yes" xml:space="preserve">
          <source>c_long &lt;strong id=&quot;tm_gmtoff&quot;&gt;tm_gmtoff&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2facfda5a2fec6eb0399c95ed1a4dbf9be28775d" translate="yes" xml:space="preserve">
          <source>cache for the lookup of the block info</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c338f9f74f40a97e12a46c93697177392245c5" translate="yes" xml:space="preserve">
          <source>cached copy of the environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70aebcb2dff2ea8e7da015e21b565fa45410ef36" translate="yes" xml:space="preserve">
          <source>cached enclosing scope (mimics &lt;code&gt;static if&lt;/code&gt; declaration)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222b746a05a65522224ae0820c24c725c470d139" translate="yes" xml:space="preserve">
          <source>calculated hash value of &lt;code&gt;arg&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8bffc29a0d667a1c147aa460ec9a9ef68361b6d" translate="yes" xml:space="preserve">
          <source>calculations, as that is always &lt;code&gt;real&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750ddaa2082bed3f0ca80d7d53945657b6484943" translate="yes" xml:space="preserve">
          <source>callback function for curl_formget() The void *arg pointer will be the one passed as second argument to curl_formget(). The character buffer passed to it must not be freed. Should return the buffer length passed to it as the argument &quot;len&quot; on success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4afc39634cce3940494b14078884de49572dc331" translate="yes" xml:space="preserve">
          <source>callback function for setting socket options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41aba3063f7dc4fcca8440fd5c5bcd3d6704bd0c" translate="yes" xml:space="preserve">
          <source>callback type for wildcard downloading pattern matching. If the string matches the pattern, return CURL_FNMATCHFUNC_MATCH value, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb67d6b6be8d338da504c42300debe894a830f8" translate="yes" xml:space="preserve">
          <source>caller's EBP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076064ef450608649711a82ae46d104bef4a1511" translate="yes" xml:space="preserve">
          <source>calling the assert failure function in the corresponding C runtime library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9219a0599eae1d9601883f894b4fbe60870586" translate="yes" xml:space="preserve">
          <source>can</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b02495e417f57a4e7ba1dc5583ae0216887527" translate="yes" xml:space="preserve">
          <source>can accept.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68869fdb0df924d41a428cc3a0078646af0d81ae" translate="yes" xml:space="preserve">
          <source>can also assign arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af90cb582f59b97162d8138aaad26e24c3988116" translate="yes" xml:space="preserve">
          <source>can be a class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd274ffe447713d11eb59a8fd33645d815ddc05" translate="yes" xml:space="preserve">
          <source>can be any of &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;wchar&lt;/code&gt;, or &lt;code&gt;dchar&lt;/code&gt;. In this manner any UTF array can be decoded into any UTF type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5070d439aae848be8410b3d558a9114cbbd9976" translate="yes" xml:space="preserve">
          <source>can be any series of characters allowed on the current platform, e.g. generated by functions with C++ linkage or annotated with &lt;code&gt;pragma(mangle,...)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c47a533dec6dec3dc5f971e10d9bd8bb91ee58a" translate="yes" xml:space="preserve">
          <source>can be evaluated as (a + b) + c, a + (b + c), (a + c) + b, (c + b) + a, etc. Parentheses control operator precedence, parentheses do not control order of evaluation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4915f50d7cf90e225d5011ad718b6e1a3652be0" translate="yes" xml:space="preserve">
          <source>can be inferred from the type of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc7cd4eee5554e4d86cddbd450962259c68bab2" translate="yes" xml:space="preserve">
          <source>can be retrieved with the &lt;code&gt;.length&lt;/code&gt; property. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0456b03569127a77b537678cd12b541ff583283f" translate="yes" xml:space="preserve">
          <source>can be set on the command line by the &lt;code&gt;-version&lt;/code&gt; switch or in the module itself with a &lt;a href=&quot;#VersionSpecification&quot;&gt;&lt;i&gt;VersionSpecification&lt;/i&gt;&lt;/a&gt;, or they can be predefined by the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9746b8528bf6a3519fc2841336441cf8d100e37" translate="yes" xml:space="preserve">
          <source>can be supplied to the creation of an inner class instance by prefixing it to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab05f462d84c5cbd0ab531d52ca167f6a276e3d" translate="yes" xml:space="preserve">
          <source>can be used as an argument list to instantiate another template, or as the list of parameters for a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2928192737095368e2245e6ebec0f0d6b8879463" translate="yes" xml:space="preserve">
          <source>can be used to tweak the conversion behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d4032557fa5a60c171183f3308c6ada8fa7830" translate="yes" xml:space="preserve">
          <source>can be used to tweak the conversion behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab010ce78f188973909c849d8a90259ae7b7533b" translate="yes" xml:space="preserve">
          <source>can be written as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166deb11d5b805b50251600d05a548e5aceb1a9b" translate="yes" xml:space="preserve">
          <source>can have an optional &lt;a href=&quot;attribute#DeprecatedAttribute&quot;&gt;&lt;i&gt;DeprecatedAttribute&lt;/i&gt;&lt;/a&gt;. The compiler will produce a message when the deprecated module is imported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f650e59d2c75416c1c7e2ceaa467fcc12f8699ab" translate="yes" xml:space="preserve">
          <source>can have an optional &lt;a href=&quot;expression#AssignExpression&quot;&gt;&lt;i&gt;AssignExpression&lt;/i&gt;&lt;/a&gt; argument to provide a more expressive message. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba9f2ce71beb4b8e7a963b9afde6b98e21df3f1" translate="yes" xml:space="preserve">
          <source>can have different types. Those types are given by the first of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3085ec1095d18af3cb61dc31b6d6caa03555ea7b" translate="yes" xml:space="preserve">
          <source>can inline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4067319844aaab246c11008b75c6d656335c0249" translate="yes" xml:space="preserve">
          <source>can occur in declaration lists of modules, classes, structs, unions, and as a statement. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db44b604356b8a7e8c240e29350768d75f29248" translate="yes" xml:space="preserve">
          <source>can override an impure function, but cannot be overridden by an impure function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633c3210566f3d6be0fc4bc22fb4bdad5abb28c1" translate="yes" xml:space="preserve">
          <source>cannot be &lt;code&gt;ref&lt;/code&gt;. It is set to be the index of the array element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f19143581a3f8f4e6f39fa46fd391c128a114c" translate="yes" xml:space="preserve">
          <source>cannot be used to statically initialize anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f867935a352d62a9528da2838c0389056abb55" translate="yes" xml:space="preserve">
          <source>cannot call functions that are not pure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e788afbcdc2bad85455ceabe0bdef4c8630c46" translate="yes" xml:space="preserve">
          <source>cannot contain forward references (this restriction may be removed in the future). The implicitly inferred type is statically bound to the declaration at compile time, not run time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e23d07c4bc52a5079385abfd6e98b77fcd7bc37c" translate="yes" xml:space="preserve">
          <source>cannot inline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbdf3b767c8a037475a08f4ee4c12dafe64016cc" translate="yes" xml:space="preserve">
          <source>cannot perform I/O</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e13e112063b2e51cef02a6b330573c021f932bb" translate="yes" xml:space="preserve">
          <source>canthrow.d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a4ab1303488e94e97f7afc9d76901eb4497e0b" translate="yes" xml:space="preserve">
          <source>capitalized string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ae11acee675fc18c9118607733f3fbf7c8b356" translate="yes" xml:space="preserve">
          <source>case sensitivity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f9e28066556eaf512ec0fdce7e67493a7fac2a" translate="yes" xml:space="preserve">
          <source>cast away const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc4316be52cecedc06eb39c6af4b3c2c3da3f33" translate="yes" xml:space="preserve">
          <source>cast+mutate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d989e8d27dc9e0ec3389fc855f142c3d40f0c50" translate="yes" xml:space="preserve">
          <source>cat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaae9a4d50271bf297c6f4cee1b23105a97b9513" translate="yes" xml:space="preserve">
          <source>catch type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1181cc70c9da6e62a65c3745c932a9200e667df3" translate="yes" xml:space="preserve">
          <source>cbrt(x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9149cb38bcd8be8c1fef9f64d475c1e757fd06" translate="yes" xml:space="preserve">
          <source>cent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9468309da4a855385bdc6bfa1307a670aadb9545" translate="yes" xml:space="preserve">
          <source>certain alphabets like German and Greek have no 1:1 upper-lower mapping. Use overload of toLower which takes full string instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8316bfe80e4b0a70bb10ad12c771e2aaa38e8ece" translate="yes" xml:space="preserve">
          <source>cfloat, cdouble, creal are returned in ST1,ST0 where ST1 is the real part and ST0 is the imaginary part.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2cf0c69f1e4fea7de6772b2b62cce3ebfd47b5d" translate="yes" xml:space="preserve">
          <source>change reg field of x to r genorreg: OR t,f</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71fafc4e2fc1e47e234762a96b80512b6b5534c2" translate="yes" xml:space="preserve">
          <source>char</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab17a69c59e532e914c68d65aa1165428dea793" translate="yes" xml:space="preserve">
          <source>char (chars are unsigned in D)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5119e49d6e1de1faca5b3591ad217a9f01031f5c" translate="yes" xml:space="preserve">
          <source>char &lt;strong id=&quot;spec&quot;&gt;spec&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9d36f3aaa4cc75ba9a5d4bab7746f57be4bcc7" translate="yes" xml:space="preserve">
          <source>char wchar dchar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b0647ccbec861f7d1f9d32c96836a80f65d54a" translate="yes" xml:space="preserve">
          <source>char(8-bit)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063c7d90a06a6aabe90b2eef3f6e7e089c9fb848" translate="yes" xml:space="preserve">
          <source>char* &lt;code&gt;name&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73981587579e6095c4194703ed2c3052f58a390c" translate="yes" xml:space="preserve">
          <source>char* &lt;code&gt;s&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee586b9df597e4286cd4bec23bef374a0d3a0e60" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;b_data&quot;&gt;b_data&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb3442d84fd202337b52a9f71a7723886de8842" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;buffer&quot;&gt;buffer&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423550d9e3f76b19cccbc262aef977ff76fa206c" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;contents&quot;&gt;contents&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d752f9ed2108c258e999997b19514a934b669913" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;contenttype&quot;&gt;contenttype&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f919f098746813a735cc869a50216d38a550314d" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;curl_easy_escape&quot;&gt;curl_easy_escape&lt;/strong&gt;(CURL* handle, in const(char)* string, int length);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a474388161dbd1fa420eadce002660880e4ffbc8" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;curl_easy_unescape&quot;&gt;curl_easy_unescape&lt;/strong&gt;(CURL* handle, in const(char)* string, int length, int* outlength);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9012bbb9f32a1c4e609b5738f6fe457e9b0a1a" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;curl_escape&quot;&gt;curl_escape&lt;/strong&gt;(in const(char)* string, int length);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e1da3afc9cf2a4dee8f2cb313ba95ffc12aa8d" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;curl_getenv&quot;&gt;curl_getenv&lt;/strong&gt;(in const(char)* variable);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8aa558a4720da0ac5143372c14992d59418a27" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;curl_unescape&quot;&gt;curl_unescape&lt;/strong&gt;(in const(char)* string, int length);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb52e41074cb02fc7acef13d8313a3e152f4d32" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;curl_version&quot;&gt;curl_version&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f626238b0404e7c9960375f63f35b13d5a260e79" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;filename&quot;&gt;filename&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2855cf59f4787acca2dc6f1e339b51f08a4edb" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;group&quot;&gt;group&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a5c6dab693a149fdaafb11035c0ebbbcecfad6" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;idxStr&quot;&gt;idxStr&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8b482b946a7ed69ea9021dce1167ef8ed560ee" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;name&quot;&gt;name&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f69f616f1bf13df7c9f7d9b5034658a8b100ece" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;perm&quot;&gt;perm&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f48362a06874fca29fe5ac22ebae714607f38d" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;showfilename&quot;&gt;showfilename&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cafc11bd694fbff16d9ecaee4000e0b44d7bb4e6" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;sqlite3_data_directory&quot;&gt;sqlite3_data_directory&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4d3e76fd1f12cf65fe97c9c41e903355e7af19" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;sqlite3_temp_directory&quot;&gt;sqlite3_temp_directory&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5f7b283119d1c87faaf0ee5462109efce7febd" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;target&quot;&gt;target&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f99e2a14a47288566277f260fd40064c9fad5c" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;time&quot;&gt;time&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd5ade675dd4240984efd10c171eced9dee2cb9" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;tm_zone&quot;&gt;tm_zone&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b337af6f7ef214863e957b44880e760f420a6d2" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;toPtr&quot;&gt;toPtr&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb7cc72424e64269a49811bb555919067ffcd2d" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;user&quot;&gt;user&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="182451f3e2fba72915c21770a928625827229daf" translate="yes" xml:space="preserve">
          <source>char* &lt;strong id=&quot;zErrMsg&quot;&gt;zErrMsg&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce42745e8908f3ddd9b8ab22593f9acbab997ac" translate="yes" xml:space="preserve">
          <source>char** &lt;strong id=&quot;argv&quot;&gt;argv&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd4b7bd9f9e29ef0da88ecfc9d0ac61f220b1d08" translate="yes" xml:space="preserve">
          <source>char[4] &lt;strong id=&quot;soundexer&quot;&gt;soundexer&lt;/strong&gt;(Range)(Range str)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851beb9d21bc949df50a5f39c074b58c8093a4ca" translate="yes" xml:space="preserve">
          <source>char[4] &lt;strong id=&quot;soundexer&quot;&gt;soundexer&lt;/strong&gt;(Range)(auto ref Range str)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9291a06651875d4549a0f5e329b472d02d4f05" translate="yes" xml:space="preserve">
          <source>char[] &lt;code&gt;buffer&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ab48a6db68b019977c8120b9f1e7c3a7202f0a" translate="yes" xml:space="preserve">
          <source>char[] &lt;code&gt;dst&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02bcc4b9fa48775702d2b336b0235c6c22c33ae5" translate="yes" xml:space="preserve">
          <source>char[] &lt;code&gt;name&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ddd506b5120b9902b1b5cc37ba97a2c3b7c1f5" translate="yes" xml:space="preserve">
          <source>char[] &lt;code&gt;toRemove&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44859fa4a58fb8573589784bb7104410079a0843" translate="yes" xml:space="preserve">
          <source>char[] &lt;code&gt;workDir&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8a27c3a5777ea4ba1bcffe5e181a662178382d" translate="yes" xml:space="preserve">
          <source>char[] &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt;(R1, R2)(R1 source, R2 buffer)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75629e4184b70a48b842aac6a576963934234607" translate="yes" xml:space="preserve">
          <source>char[] &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt;(Range)(Range source)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e584bed7c0d11d96a08c607eb4ca4eb90047d1de" translate="yes" xml:space="preserve">
          <source>char[] &lt;strong id=&quot;sformat&quot;&gt;sformat&lt;/strong&gt;(Char, Args...)(return scope char[] buf, scope const(Char)[] fmt, Args args);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8303a45280b2d80b08da976b3786205b41aa76c" translate="yes" xml:space="preserve">
          <source>char[] &lt;strong id=&quot;sformat&quot;&gt;sformat&lt;/strong&gt;(alias fmt, Args...)(char[] buf, Args args)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf8c8200f35f90d5fcad13318b22fcd528944ee" translate="yes" xml:space="preserve">
          <source>char[][] &lt;code&gt;names&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148524b0df758e8e159dac12993953a8c62e22dc" translate="yes" xml:space="preserve">
          <source>char[digestLength!Hash * 2] &lt;strong id=&quot;hexDigest&quot;&gt;hexDigest&lt;/strong&gt;(Hash, Order order = Order.increasing, Range)(ref Range range)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba277413217949f25a7217a690de0058c916af8f" translate="yes" xml:space="preserve">
          <source>char[digestLength!Hash * 2] &lt;strong id=&quot;hexDigest&quot;&gt;hexDigest&lt;/strong&gt;(Hash, Order order = Order.increasing, T...)(scope const T data)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b86d3d1be90277af7ec9f445b17db5e1a81a514" translate="yes" xml:space="preserve">
          <source>char[num * 2] &lt;strong id=&quot;toHexString&quot;&gt;toHexString&lt;/strong&gt;(LetterCase letterCase, Order order = Order.increasing, size_t num)(in ubyte[num] digest);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea6cbcb847e4ad652cc5395148196f15c4f467a" translate="yes" xml:space="preserve">
          <source>char[num * 2] &lt;strong id=&quot;toHexString&quot;&gt;toHexString&lt;/strong&gt;(Order order = Order.increasing, size_t num, LetterCase letterCase = LetterCase.upper)(in ubyte[num] digest);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0db3fa401aea04b711d6f1f3630552eaaee8e59" translate="yes" xml:space="preserve">
          <source>character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58189fa389aa58dcc9c79933706581713cb0f96" translate="yes" xml:space="preserve">
          <source>character conversions supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124b56b1f038c299aab7265c0c6c4380549ef883" translate="yes" xml:space="preserve">
          <source>character gives a specific type to the string, rather than it being inferred from the context. The types corresponding to the postfix characters are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c3295977f8799329e4df384adf1c19e6d8e506" translate="yes" xml:space="preserve">
          <source>character number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493e2155b805726376d1e0d5047b41cc024177b6" translate="yes" xml:space="preserve">
          <source>character to search for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb64af104c9af68355d75ca8cc7c3904aa97c114" translate="yes" xml:space="preserve">
          <source>character type for output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20efd3a2b53bbecb951b9dacf597f0e6a16f8507" translate="yes" xml:space="preserve">
          <source>character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a91d6ce24fcc03ec2ecbb19e3012b5d5d40e2b" translate="yes" xml:space="preserve">
          <source>chars</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327c703e20bef6c3a5cb9943d266ae5c73df26eb" translate="yes" xml:space="preserve">
          <source>check e is exp.opDispatch!(tiargs) or not It's used to switch to UFCS the semantic analysis path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153eb44c474e3d514268dc6ebc3ed6151a695633" translate="yes" xml:space="preserve">
          <source>choices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04b72699c57d76caa523616edd1dfb9c0ccb51c" translate="yes" xml:space="preserve">
          <source>clang and gcc both return &lt;code&gt;0&lt;/code&gt; from &lt;code&gt;sizeof&lt;/code&gt; for empty structs. Using &lt;code&gt;extern &quot;C++&quot;&lt;/code&gt; in clang++ and g++ does not cause them to conform to the behavior of their respective C compilers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d767bf5b72373d12f0efd4406677e9ed076f592" translate="yes" xml:space="preserve">
          <source>class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b44ccba0b1298ac50ee4cf36c4775d6e26572e" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;AddAssignExp&quot;&gt;AddAssignExp&lt;/strong&gt;: dmd.expression.BinAssignExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b949eb0e3a3826c6e1159520b16b38790006926b" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;AddExp&quot;&gt;AddExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf92907b456ccba7e6c5835816241d6ca9a33af1" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;AddrExp&quot;&gt;AddrExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e089bf2703d9384d5d0588a8bee7c376b604e6" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;AddressException&quot;&gt;AddressException&lt;/strong&gt;: std.socket.SocketOSException;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c52436e5b04762b88e9aa38cf9918135a0fe1d2" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;AliasDeclaration&quot;&gt;AliasDeclaration&lt;/strong&gt;: dmd.declaration.Declaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a54eb898c709e9a761d9ef622cbab6638ff370" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;AliasThis&quot;&gt;AliasThis&lt;/strong&gt;: dmd.dsymbol.Dsymbol;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a9d3defadfb4b6a5f8b3b08342fa76d3603e76" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;AlignDeclaration&quot;&gt;AlignDeclaration&lt;/strong&gt;: dmd.attrib.AttribDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ea64106b812cf9cd31cde83e034ae1dca56ee3" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;AndAssignExp&quot;&gt;AndAssignExp&lt;/strong&gt;: dmd.expression.BinAssignExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9e05eebee5e7c246b4add23a650ba7f4884a8e" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;AndExp&quot;&gt;AndExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7bc43e480d68e28cf55aa3320d9368e3dd70e14" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;AnonDeclaration&quot;&gt;AnonDeclaration&lt;/strong&gt;: dmd.attrib.AttribDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f5d23a5c388fa90a58755a7f43d6566ef5edd86" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ArchiveMember&quot;&gt;ArchiveMember&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c16f465dad21130543a13a2c2bf6434efdaab1" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ArrayExp&quot;&gt;ArrayExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9e54d04fc7a121b2b759430a43a35cbfcdca71" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ArrayInitializer&quot;&gt;ArrayInitializer&lt;/strong&gt;: dmd.init.Initializer;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95a359272665168edcc09c470b23812170c1bff" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ArrayLengthExp&quot;&gt;ArrayLengthExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a5fd870330d72f7ce0de943056d072415b467c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ArrayLiteralExp&quot;&gt;ArrayLiteralExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27293a30768e9b7ece47736cd578d5269b9f5d1d" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ArrayScopeSymbol&quot;&gt;ArrayScopeSymbol&lt;/strong&gt;: dmd.dsymbol.ScopeDsymbol;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f4bbab58cd7083735f84b7faaeafc02b71dfed" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;AsmStatement&quot;&gt;AsmStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d48d2c2a27e09f88042b1b14c31b5e0e1ff5dba" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;AssertError&quot;&gt;AssertError&lt;/strong&gt;: object.Error;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f092a0729cd92b6d510fba6a80eec37b940758" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;AssertExp&quot;&gt;AssertExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2559aa58546f246b22a55f52922e784b191345d9" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;AssignExp&quot;&gt;AssignExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76637626e938478b84050836fcde47643b248cc1" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;AssocArrayLiteralExp&quot;&gt;AssocArrayLiteralExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f65333486dfd73f739fb8a93fb7666b6345cf29a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;AutoImplement&quot;&gt;AutoImplement&lt;/strong&gt;(Base, alias how, alias what = isAbstractFunction) if (!is(how == class)): Base;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55fa5bc4b4a2b7c40ec79a1273d96acfbf412a6b" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;AutoImplement&quot;&gt;AutoImplement&lt;/strong&gt;(Interface, BaseClass, alias how, alias what = isAbstractFunction) if (is(Interface == interface) &amp;amp;&amp;amp; is(BaseClass == class)): BaseClass, Interface;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d7192afb64a312cddaa7f195841abd0a55e0354" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Barrier&quot;&gt;Barrier&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f83f41c5b5032d17ae39dd199efa20a64babcc4" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Base64Exception&quot;&gt;Base64Exception&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f45573c3e1286a006ce22614ead848189d8fbf1" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;BinAssignExp&quot;&gt;BinAssignExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192e6f19eb9e69e68070d59f1cde4c76c862e0e1" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;BlitExp&quot;&gt;BlitExp&lt;/strong&gt;: dmd.expression.AssignExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b227e46f0fb09698edab33078b6e615d8d2797" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;BreakStatement&quot;&gt;BreakStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc766ebd8703c6ba769c952fd992e685a181679a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CAllocatorImpl&quot;&gt;CAllocatorImpl&lt;/strong&gt;(Allocator, Flag!&quot;indirect&quot; indirect = No.indirect): IAllocator;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ddc94df88e38ea9139ae57ef3ba40ce6642ab7" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CData&quot;&gt;CData&lt;/strong&gt;: std.xml.Item;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a47c4b40b6ec583a29a08f231a217b02d0601d" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CDataException&quot;&gt;CDataException&lt;/strong&gt;: std.xml.XMLException;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41cf731e078690c13d474822461fcf46a405ad3" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CPPMangleDeclaration&quot;&gt;CPPMangleDeclaration&lt;/strong&gt;: dmd.attrib.AttribDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f556817a04c37b2d1c0692d24c2bbf37a7298ad5" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CPPNamespaceDeclaration&quot;&gt;CPPNamespaceDeclaration&lt;/strong&gt;: dmd.attrib.AttribDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038bd20d46edf65aeec319d346fc23e7d23b0841" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CSVException&quot;&gt;CSVException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92524677cafdd2cd47015c7864e647d287955e33" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CSharedAllocatorImpl&quot;&gt;CSharedAllocatorImpl&lt;/strong&gt;(Allocator, Flag!&quot;indirect&quot; indirect = No.indirect): ISharedAllocator;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c82cbfdfad87a9f8a2c3af4ae330c7a110b5a4" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CTFEExp&quot;&gt;CTFEExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22bf16cbdd88356c42c1ed2e583a5cca12f535aa" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CallExp&quot;&gt;CallExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae81fa35b2344658c00b472b3560f7c606560587" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CaseRangeStatement&quot;&gt;CaseRangeStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb69d57db28e630a315c618e385ce803d6ee13a4" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CaseStatement&quot;&gt;CaseStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e988f0cf41a179099fb17146ee7eaf7b641b148" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CastExp&quot;&gt;CastExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c792befae220fdd75578bc8843e346c7307e96" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CatAssignExp&quot;&gt;CatAssignExp&lt;/strong&gt;: dmd.expression.BinAssignExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e8e9725a4f1333deeaa344f21487f74fd2c431" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CatDcharAssignExp&quot;&gt;CatDcharAssignExp&lt;/strong&gt;: dmd.expression.CatAssignExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="286be07dfb806dc85c3c47c5d4aee20c03c9a5e1" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CatElemAssignExp&quot;&gt;CatElemAssignExp&lt;/strong&gt;: dmd.expression.CatAssignExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b052e561af3ca48dc0c3f1c20f1d11bd347a8890" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CatExp&quot;&gt;CatExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49f60d3009443b5d0b89230a71d5fc5a6086b5a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Catch&quot;&gt;Catch&lt;/strong&gt;: dmd.root.rootobject.RootObject;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f972d76c88909d0a17e6809178b5c4b68fb894fd" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CheckException&quot;&gt;CheckException&lt;/strong&gt;: std.xml.XMLException;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207bf7d35a0b2163ec2a1ca51afd4dce445d6d06" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CheckFailure&quot;&gt;CheckFailure&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b3a6346851ac40923ea54ca7b096f5fefeca4a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ClassDeclaration&quot;&gt;ClassDeclaration&lt;/strong&gt;: dmd.aggregate.AggregateDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545f47a16eada82580506b145ecdef7c8f4ff33c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ClassReferenceExp&quot;&gt;ClassReferenceExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8092007abd4e76a4222d84caa00928a8c9ea3384" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Clock&quot;&gt;Clock&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f797eb53e04555a0186db700f742bfff990593" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CmpExp&quot;&gt;CmpExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8f605ef6354720dc034486db8219494467e5d13" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ComExp&quot;&gt;ComExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bdb0ba1ca294d165b4924119b63a7d6ede13bea" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CommaExp&quot;&gt;CommaExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8def00395af2c309249bcc34bda1d13b2608aaf" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Comment&quot;&gt;Comment&lt;/strong&gt;: std.xml.Item;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e58a123e54e105d3ea0754d4071c646d39374a2" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CommentException&quot;&gt;CommentException&lt;/strong&gt;: std.xml.XMLException;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f61a4da792768c2389c0d45b978a3e2c701ce5" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CompileDeclaration&quot;&gt;CompileDeclaration&lt;/strong&gt;: dmd.attrib.AttribDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d2bc373eb314dbc929221d04a326c5227bac44" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CompileExp&quot;&gt;CompileExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b81a94da47edd4c9522b419f614edb58329cc4" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CompileStatement&quot;&gt;CompileStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea57996f24ba418f827c7b0083c997ac158a9f2" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ComplexExp&quot;&gt;ComplexExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8369d3149962f493981aed2ce12dcbc4f3236d6c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CompoundAsmStatement&quot;&gt;CompoundAsmStatement&lt;/strong&gt;: dmd.statement.CompoundStatement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b3502c9ea389d73b52fa2f09086975532f3848" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CompoundDeclarationStatement&quot;&gt;CompoundDeclarationStatement&lt;/strong&gt;: dmd.statement.CompoundStatement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ffbe6cd9e4fdaeb23b7130737b07c03aca484b" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CompoundStatement&quot;&gt;CompoundStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a52eb6de09cb3d47c78d8248c48ae2449d57240" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Compress&quot;&gt;Compress&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e508b9767ae4c4e5f5b065e90a346e4803a0f410" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CondExp&quot;&gt;CondExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a277d5015367fb13045662650ccde33409daec8" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Condition&quot;&gt;Condition&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e2aeffee44ece907dcb2f9d2c996348321b41e" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ConditionalDeclaration&quot;&gt;ConditionalDeclaration&lt;/strong&gt;: dmd.attrib.AttribDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4201b9760e1701a041c992c043368796a539871" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ConditionalStatement&quot;&gt;ConditionalStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b020017e3b134fe6f068b08e10e361fd532dfa0" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ConstructExp&quot;&gt;ConstructExp&lt;/strong&gt;: dmd.expression.AssignExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125e2f4911ebda7e2479923e529eb9c736262614" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ContinueStatement&quot;&gt;ContinueStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4feb5f4b9ee4fcf23425659a677a2d986ddb272e" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ConvException&quot;&gt;ConvException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f0823138600856d810b7abaac86d04d59ed455" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ConvOverflowException&quot;&gt;ConvOverflowException&lt;/strong&gt;: std.conv.ConvException;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab5ab5e58c644ad95395af70883ff264794c37e" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CtorDeclaration&quot;&gt;CtorDeclaration&lt;/strong&gt;: dmd.func.FuncDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82172d4dac3bd6c93462609bdabaca4626c84875" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CurlException&quot;&gt;CurlException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33bbf9f0768c4e0b8478ca2d4129305c7011fa5" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;CurlTimeoutException&quot;&gt;CurlTimeoutException&lt;/strong&gt;: std.net.curl.CurlException;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5079acd58efd7e7b5a14972f406eb01e96050b82" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DebugCondition&quot;&gt;DebugCondition&lt;/strong&gt;: dmd.cond.DVCondition;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68ef562ae20f0308b908649097b3260efb1effc" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DebugStatement&quot;&gt;DebugStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf043193dedae5818ec75e9721a9a5d8cc6935c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DebugSymbol&quot;&gt;DebugSymbol&lt;/strong&gt;: dmd.dsymbol.Dsymbol;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405ed4b9edf9f5ea8c24a52adc051615e49852ce" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DeclarationExp&quot;&gt;DeclarationExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67cc9f731136c2c50d4f2a90e5dcf729469bb6a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DecodeException&quot;&gt;DecodeException&lt;/strong&gt;: std.xml.XMLException;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="909d36164d4adcaf92ea7205d9907329d412b19a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DefaultInitExp&quot;&gt;DefaultInitExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db097d657b6ce5055d2c59a8c586ea2d9195f11" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DefaultStatement&quot;&gt;DefaultStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c51b6f1d37b7837ca2d32c4647cef88391ba99" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DelegateExp&quot;&gt;DelegateExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20100b4f156e97783a174e207ebcb078eca9722d" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DelegateFuncptrExp&quot;&gt;DelegateFuncptrExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0002ef03dbb3d74000ac2bdd4103ff627cdf9c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DeleteDeclaration&quot;&gt;DeleteDeclaration&lt;/strong&gt;: dmd.func.FuncDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6bc04349ae4757caeab2d46766558872defef6" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DeleteExp&quot;&gt;DeleteExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d790766f735a8015c54b2d6a120bf9f42580ad1" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DeprecatedDeclaration&quot;&gt;DeprecatedDeclaration&lt;/strong&gt;: dmd.attrib.StorageClassDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b81c94d00f882af76aa39c7d2b9427ab66553a9b" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DivAssignExp&quot;&gt;DivAssignExp&lt;/strong&gt;: dmd.expression.BinAssignExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edcc20c44082b57ac32a17c588942505914e1456" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DivExp&quot;&gt;DivExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73571072a8d7c04c9203e427b4a2ec4850ff34d1" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DoStatement&quot;&gt;DoStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ffaa87e7775719909b805c01103d7acfb0a7e8" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Document&quot;&gt;Document&lt;/strong&gt;: std.xml.Element;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e4867686611716f82b801c1c99dcce71485ee6" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DocumentParser&quot;&gt;DocumentParser&lt;/strong&gt;: std.xml.ElementParser;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568370450b22fdae925c8c916ecb0f673df34a11" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DollarExp&quot;&gt;DollarExp&lt;/strong&gt;: dmd.expression.IdentifierExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6227adbb5945fd082ef04b4d2bdcb2b83a9ad5" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DotExp&quot;&gt;DotExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2fc23e9c4ded6e4e3e60f264b57b4deffe284c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DotIdExp&quot;&gt;DotIdExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5119a43ce148a3d3f81108e9e960e5b43fa19dd" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DotTemplateExp&quot;&gt;DotTemplateExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a7aefd2f14ec59b421cf0fc682a23296a84564" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DotTemplateInstanceExp&quot;&gt;DotTemplateInstanceExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f615e264676ac3dde57af5f2dca96cad9696ef95" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DotTypeExp&quot;&gt;DotTypeExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73488115ecbfbcf90948ed9542b53e11081255a9" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DotVarExp&quot;&gt;DotVarExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4763dcf8e0b4162a222565bd8fa47803f6ffd1e" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Dsymbol&quot;&gt;Dsymbol&lt;/strong&gt;: dmd.ast_node.ASTNode;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d1fe4cf797887d3b231780cad657e5c6e7a8e2" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DsymbolExp&quot;&gt;DsymbolExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451021c1eb90ec2ada14085eb138554ef63da423" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DsymbolTable&quot;&gt;DsymbolTable&lt;/strong&gt;: dmd.root.rootobject.RootObject;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae474a54df693c1d16c2710233934df467a45e98" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DtorDeclaration&quot;&gt;DtorDeclaration&lt;/strong&gt;: dmd.func.FuncDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1251de83bb7bba2f780864c3dee0ef0ea9a4f857" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;DtorExpStatement&quot;&gt;DtorExpStatement&lt;/strong&gt;: dmd.statement.ExpStatement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88fdf92adb303c7e6ecff50d4ce589bc1a9db48a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Element&quot;&gt;Element&lt;/strong&gt;: std.xml.Item;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4549c996c3cdfd5fb1092d96cde99df97dac11c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ElementParser&quot;&gt;ElementParser&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f739afb1410f0facfb7a67390f84365d18a5c1f" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;EncodingException&quot;&gt;EncodingException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b096a4257f26496ce97563dfef2ae818d88b72e" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;EncodingSchemeASCII&quot;&gt;EncodingSchemeASCII&lt;/strong&gt;: std.encoding.EncodingScheme;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e20d465c0e488b877f686e4cff669828e02cfa" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;EncodingSchemeLatin1&quot;&gt;EncodingSchemeLatin1&lt;/strong&gt;: std.encoding.EncodingScheme;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c1b492650723d7882a63f81f540a60afd9e705" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;EncodingSchemeLatin2&quot;&gt;EncodingSchemeLatin2&lt;/strong&gt;: std.encoding.EncodingScheme;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83b2c69c8e50c0adfed4e0007f560e1ca73842b" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;EncodingSchemeUtf16Native&quot;&gt;EncodingSchemeUtf16Native&lt;/strong&gt;: std.encoding.EncodingScheme;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ec4db17c7bff49aa777ec651740b82347f7f2d" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;EncodingSchemeUtf32Native&quot;&gt;EncodingSchemeUtf32Native&lt;/strong&gt;: std.encoding.EncodingScheme;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b485f547e11a9523c07eaa9f25d226fa330defa" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;EncodingSchemeUtf8&quot;&gt;EncodingSchemeUtf8&lt;/strong&gt;: std.encoding.EncodingScheme;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581bd98571fabecf0092f38f829eda7c6fa663f5" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;EncodingSchemeWindows1250&quot;&gt;EncodingSchemeWindows1250&lt;/strong&gt;: std.encoding.EncodingScheme;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd7f522333ab0f574ee4647c7c560c743a5ed5b" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;EncodingSchemeWindows1251&quot;&gt;EncodingSchemeWindows1251&lt;/strong&gt;: std.encoding.EncodingScheme;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07963015da6a991ee05971a320ce642b25d5843" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;EncodingSchemeWindows1252&quot;&gt;EncodingSchemeWindows1252&lt;/strong&gt;: std.encoding.EncodingScheme;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b07886d731e908b552e1b5e6656c6b41fb1a724" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;EnumDeclaration&quot;&gt;EnumDeclaration&lt;/strong&gt;: dmd.dsymbol.ScopeDsymbol;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0331acc728765874af52d2196856ba12a2579ed9" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;EnumMember&quot;&gt;EnumMember&lt;/strong&gt;: dmd.declaration.VarDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9a6f6ce3614696bd97f2276bbf252e3c7cd9b0" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;EqualExp&quot;&gt;EqualExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0687d9de8a6fd3cf8eb4cd6b48676cff4e2a6597" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ErrnoException&quot;&gt;ErrnoException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8643f6a4b25eb7943ba63c3dd088bae3349a7f34" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Error&quot;&gt;Error&lt;/strong&gt;: object.Throwable;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de81feff5723dcea9893db49b0a31d5f8d4764f7" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ErrorExp&quot;&gt;ErrorExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7a4a0280a42de0786bf4c01961ad16bbc1e474" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ErrorInitializer&quot;&gt;ErrorInitializer&lt;/strong&gt;: dmd.init.Initializer;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db64911554ab54ff93c8d0b31502e34b9e37b0e4" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ErrorStatement&quot;&gt;ErrorStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35daec3559a518a6da4ca7c586549bfaa6f75ca6" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Exception&quot;&gt;Exception&lt;/strong&gt;: object.Throwable;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc26633f684889f8f213e76f9ee4117c6a5f0612" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ExpInitializer&quot;&gt;ExpInitializer&lt;/strong&gt;: dmd.init.Initializer;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a2b2b587f87cb13f5884b22a8c60a5e6af3296" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ExpStatement&quot;&gt;ExpStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9873eda6a94bd56c665ea058bfe3c8d13e22b2" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ExpressionDsymbol&quot;&gt;ExpressionDsymbol&lt;/strong&gt;: dmd.dsymbol.Dsymbol;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2b946dfd1e62e0784af7da775b304a88247491" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Fft&quot;&gt;Fft&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9bc7b7898ee77a4daacbba383162c0c6044d13" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Fiber&quot;&gt;Fiber&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a728da33d1fec573c3ed0c32f737f2c9f0a56507" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;FiberScheduler&quot;&gt;FiberScheduler&lt;/strong&gt;: std.concurrency.Scheduler;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ed17293836d56385e78fc715731e00f9f7cbf2" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;FileAndLines&quot;&gt;FileAndLines&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fba72217db90246a5a6dbc05f79d70fee0c7986" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;FileException&quot;&gt;FileException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b71d3cd027e4ef64ccd7f6b5a70173a886617d5" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;FileInitExp&quot;&gt;FileInitExp&lt;/strong&gt;: dmd.expression.DefaultInitExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c74716ca7804584a5dfd0c95187abb3691e84df" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;FileLogger&quot;&gt;FileLogger&lt;/strong&gt;: std.experimental.logger.core.Logger;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d7c6205aa9c71e72daccbbdcd04064b4829fb3" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;FinalizeError&quot;&gt;FinalizeError&lt;/strong&gt;: object.Error;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46dba3f044db8552bd1e271f210a43ba965cba83" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ForStatement&quot;&gt;ForStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68fa93e004150ec953f87b7ab5cbebeef99afe9a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ForeachRangeStatement&quot;&gt;ForeachRangeStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d186661299006cfadc2c56fb3ff1459c9aa0b289" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ForeachStatement&quot;&gt;ForeachStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7476d0c74f35cb818b5748fd2f0afa33e92d13c3" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;FormatException&quot;&gt;FormatException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf8be399a616f197ed19e6efdd3fa66aca5d40a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ForwardingAttribDeclaration&quot;&gt;ForwardingAttribDeclaration&lt;/strong&gt;: dmd.attrib.AttribDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4ecd11fc90421aa9fde8cb203bc0b955c60916" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ForwardingScopeDsymbol&quot;&gt;ForwardingScopeDsymbol&lt;/strong&gt;: dmd.dsymbol.ScopeDsymbol;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0803dc10f5ed8ab1c41999002290b9c143761284" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ForwardingStatement&quot;&gt;ForwardingStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43650fc63fa555542380c3c687a3e4fcef33d103" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;FuncAliasDeclaration&quot;&gt;FuncAliasDeclaration&lt;/strong&gt;: dmd.func.FuncDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220bf93b3d0d46c8a99063a32e5baada18383ccc" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;FuncDeclaration&quot;&gt;FuncDeclaration&lt;/strong&gt;: dmd.declaration.Declaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2627e45275be7872b429cbb4f94571772af443" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;FuncExp&quot;&gt;FuncExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdb6aebc0c803d1df70a6382371597aed0a1625" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;FuncInitExp&quot;&gt;FuncInitExp&lt;/strong&gt;: dmd.expression.DefaultInitExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5e6e44764a11b3a8bdc355ccac461c929256d1" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;FuncLiteralDeclaration&quot;&gt;FuncLiteralDeclaration&lt;/strong&gt;: dmd.func.FuncDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577c56b086f2131a6e5375f77ddc29cbff86160f" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;GccAsmStatement&quot;&gt;GccAsmStatement&lt;/strong&gt;: dmd.statement.AsmStatement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0e4f57f34eb1b56e3439a59220f2072210a034" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Generator&quot;&gt;Generator&lt;/strong&gt;(T): Fiber, IsGenerator, InputRange!T;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96434478dbef3345086fec2a237e5451ccee4f67" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;GetOptException&quot;&gt;GetOptException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77bc3969014f1447053ad2e2d634f236aeac817" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;GotoCaseStatement&quot;&gt;GotoCaseStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f6114c3445f0f8e93f895d6c25805b077ee3ee" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;GotoDefaultStatement&quot;&gt;GotoDefaultStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0de4ba3c1911aa81ef30488e1b3920b1d6cae1" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;GotoStatement&quot;&gt;GotoStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7074c8de222da964aaff1853b6550ae1b7863f86" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;HTTPStatusException&quot;&gt;HTTPStatusException&lt;/strong&gt;: std.net.curl.CurlException;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb709734d741639a3545c5e3d27ef99f019e410c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;HaltExp&quot;&gt;HaltExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c876cfb398a0b035eab63db1255d29f4619f17d4" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;HeaderMismatchException&quot;&gt;HeaderMismatchException&lt;/strong&gt;: std.csv.CSVException;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93009630cd39ada7c5b9a9f34f5dc4d094ae5953" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;HostException&quot;&gt;HostException&lt;/strong&gt;: std.socket.SocketOSException;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb2c362581532684011bdb4602bfb455cfb33f8" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Identifier&quot;&gt;Identifier&lt;/strong&gt;: dmd.root.rootobject.RootObject;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218248fcc991d5df6257bb225b35c4f748cffb01" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;IdentifierExp&quot;&gt;IdentifierExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed9b04c832e2c1635cb0357e92e465d40d90fa5" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;IdentityExp&quot;&gt;IdentityExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe8683982b134eb9819f353052c5c5320c7e355" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;IfStatement&quot;&gt;IfStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a610d289fa1d092a8d8d902e7e009cb7f1d7cbb" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Import&quot;&gt;Import&lt;/strong&gt;: dmd.dsymbol.Dsymbol;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dacf6a7a2557e25e055a706bf34cab5d6abaab8e" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ImportExp&quot;&gt;ImportExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef221608e88c040a8c8aabd96a6e4d95e32d926" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ImportStatement&quot;&gt;ImportStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b1ff06cf5ee3c7df7bcddd17f1292f7329dbe1" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;InExp&quot;&gt;InExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8828915dd0f9d7ab5d246f6394dd53adfe4e32a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;IncompleteCellException&quot;&gt;IncompleteCellException&lt;/strong&gt;: std.csv.CSVException;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4d04a4d57e1fc2a25a84a11758ba18f623667e" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;IndexExp&quot;&gt;IndexExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64703e92d51cda77db27021809e9bd59ab52474a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Initializer&quot;&gt;Initializer&lt;/strong&gt;: dmd.ast_node.ASTNode;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdcc5a4ce046c16bc9ee4caec723456ce2c0d9d8" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;InlineAsmStatement&quot;&gt;InlineAsmStatement&lt;/strong&gt;: dmd.statement.AsmStatement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f36e5763e0725aab53c5ac19a0f41f4bcbfa79" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;IntegerExp&quot;&gt;IntegerExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e142d79c9c33d1d47688f0f3235401d44eb56708" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;InterfaceDeclaration&quot;&gt;InterfaceDeclaration&lt;/strong&gt;: dmd.dclass.ClassDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8f8265a4056f507d091bb0db85f6316d1e4c63" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Internet6Address&quot;&gt;Internet6Address&lt;/strong&gt;: std.socket.Address;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e80f376166799f0835944806e408b8f89b5c7a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;InternetAddress&quot;&gt;InternetAddress&lt;/strong&gt;: std.socket.Address;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16abc536d8958e8cbfec504974dd24ffe049c3e0" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;InternetHost&quot;&gt;InternetHost&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08609a973e12639b9b3704fbb181960414dbd30f" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;IntervalExp&quot;&gt;IntervalExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774e415624d5bf2c4d6f9effdcba596cb938754f" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;InvalidMemoryOperationError&quot;&gt;InvalidMemoryOperationError&lt;/strong&gt;: object.Error;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796b302cbb2c5b096bf3af1f448eb46fa06d631d" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;InvalidTypeException&quot;&gt;InvalidTypeException&lt;/strong&gt;: std.xml.XMLException;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3550049b19767db875206355c6a8e32dbc06ec6" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;InvariantDeclaration&quot;&gt;InvariantDeclaration&lt;/strong&gt;: dmd.func.FuncDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89fb038864c2d25f13e8c91ff15f85c6d9c15b2b" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;IsExp&quot;&gt;IsExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8072095b29db8ef8b6dc21a5c28492fb4715964" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;JSONException&quot;&gt;JSONException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56fbe9f4a48209d3d7c9daee0a969f38c3b1acae" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;LabelDsymbol&quot;&gt;LabelDsymbol&lt;/strong&gt;: dmd.dsymbol.Dsymbol;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1bbce473248e65f3147329bcf0e958b67a58762" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;LabelStatement&quot;&gt;LabelStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d954c2edcf334b2d236fd59cd3d3542fdc17b85" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Lexer&quot;&gt;Lexer&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b78800829b810f31ebcfcf5a06fbf7927f8e1f7" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;LineInitExp&quot;&gt;LineInitExp&lt;/strong&gt;: dmd.expression.DefaultInitExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20302a96054a4de41d3171040f5e1b2321c03358" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;LinkDeclaration&quot;&gt;LinkDeclaration&lt;/strong&gt;: dmd.attrib.AttribDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e8ab627b621b32e2f94a88e75588b43776b7af" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;LinkTerminated&quot;&gt;LinkTerminated&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361a2672e7dfa440b0f206dd8fdad66139be3197" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;LocalTime&quot;&gt;LocalTime&lt;/strong&gt;: std.datetime.timezone.TimeZone;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7604270fbe228d5fa1f8e7470521dfda82190ba" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;LogicalExp&quot;&gt;LogicalExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960342dff39eaaa34ad76393c9009e82aa55d2c9" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;MailboxFull&quot;&gt;MailboxFull&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67dc979fc705ef926c0d3ee1ccd365df9ff2a4b" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;MessageMismatch&quot;&gt;MessageMismatch&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3bd8aab4d9fb4b92326cf30eef1e7cc1d8dac13" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;MinAssignExp&quot;&gt;MinAssignExp&lt;/strong&gt;: dmd.expression.BinAssignExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8601c3d2e6ea359408ee28afc0e98cdf9450caf" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;MinExp&quot;&gt;MinExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46440e888ebe9059c8854f71c19af2cbf9435eef" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;MmFile&quot;&gt;MmFile&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3388631527b159509d63d5e9eb35f7b8ea31212c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ModAssignExp&quot;&gt;ModAssignExp&lt;/strong&gt;: dmd.expression.BinAssignExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41babb828873a390ecafab61598ddb5f042545e" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ModExp&quot;&gt;ModExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8919fb1ac67f687307818f92bf33ae7bb92fcab8" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Module&quot;&gt;Module&lt;/strong&gt;: dmd.dmodule.Package;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2e27b559243f78000e88d6e20b201d336a33d8" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ModuleInitExp&quot;&gt;ModuleInitExp&lt;/strong&gt;: dmd.expression.DefaultInitExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0601922b3da8afd6c3308d52efac26f1b49a2c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;MulAssignExp&quot;&gt;MulAssignExp&lt;/strong&gt;: dmd.expression.BinAssignExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c3576ebfaaa36e230dab4dc32a7e584de7379f5" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;MulExp&quot;&gt;MulExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29bc4e4cf6475cbb25d700f36b5d0a18b69f168c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;MultiLogger&quot;&gt;MultiLogger&lt;/strong&gt;: std.experimental.logger.core.Logger;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aecf5c8ed7a3a28f8415478f2198052540b9ea96" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Mutex&quot;&gt;Mutex&lt;/strong&gt;: object.Object.Monitor;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f37bb45e3bab48459827ebc37efe523444bd8d9" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;NOGCVisitor&quot;&gt;NOGCVisitor&lt;/strong&gt;: dmd.visitor.StoppableVisitor;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b114ab77c0fcd5d285b21d3e26f33dc293cd01a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;NegExp&quot;&gt;NegExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a266ddcec995d9fef7fa9e52766ef28e8cfd13d2" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;NewAnonClassExp&quot;&gt;NewAnonClassExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ec56c12c8449ab63277577ed5e11064b47fe14" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;NewDeclaration&quot;&gt;NewDeclaration&lt;/strong&gt;: dmd.func.FuncDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d9fdebe542aefb5e36221e32a9f596bed8ff35" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;NewExp&quot;&gt;NewExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa7a49e9c9cfb2e309f65daa22e20aedd7bb7af" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;NotExp&quot;&gt;NotExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e37512790916548228f5084a8332a2a203be285" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Nspace&quot;&gt;Nspace&lt;/strong&gt;: dmd.dsymbol.ScopeDsymbol;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d8391619d3313c98e381932bb9971985914e46" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;NullExp&quot;&gt;NullExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae438c2c06954f1e335e43e72928e195017c33f0" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;NullLogger&quot;&gt;NullLogger&lt;/strong&gt;: std.experimental.logger.core.Logger;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408dabef3000235961bc6888b168ead80dcb86e6" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ObjcClassReferenceExp&quot;&gt;ObjcClassReferenceExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2121b42297e4bb64004846d37caea72d900069d9" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Object&quot;&gt;Object&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36876c0579911181603fbbfe44ec3c2304e07e7f" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;OrAssignExp&quot;&gt;OrAssignExp&lt;/strong&gt;: dmd.expression.BinAssignExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c7fbd6a48c42b22eeae022f08a1ea7b148d1d3" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;OrExp&quot;&gt;OrExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036735f523714fdabfe6fbd46cfdc26f5ead0d08" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;OutBuffer&quot;&gt;OutBuffer&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa526cc63a60cfc68da12915c14fa3f3a2b2e15" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;OutOfMemoryError&quot;&gt;OutOfMemoryError&lt;/strong&gt;: object.Error;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb2bd5094edcb3c51bdc70fbf0c3c70a8a62230" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;OutputRangeObject&quot;&gt;OutputRangeObject&lt;/strong&gt;(R, E...): staticMap!(OutputRange, E);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115ef8d27b9dd521d50b92edc5f99b66b4ba375b" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;OverDeclaration&quot;&gt;OverDeclaration&lt;/strong&gt;: dmd.declaration.Declaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1748fd5b77a669216c4d82cb536fd9814d887185" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;OverExp&quot;&gt;OverExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3159025f5d9358bf8985cbd00c86f4eab208277" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;OverloadSet&quot;&gt;OverloadSet&lt;/strong&gt;: dmd.dsymbol.Dsymbol;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea5107ba50362fced3bc548ebc8bedb8e91745d" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;OwnerTerminated&quot;&gt;OwnerTerminated&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934eedddebb0086772c264298bc357467c2805de" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;PIException&quot;&gt;PIException&lt;/strong&gt;: std.xml.XMLException;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3cbd7877201107f8a93be0d77ded35cd9e2484" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Package&quot;&gt;Package&lt;/strong&gt;: dmd.dsymbol.ScopeDsymbol;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a52e9a118416a71e7dd518fb0abd9e483bba590" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Parameter&quot;&gt;Parameter&lt;/strong&gt;: dmd.ast_node.ASTNode;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d18d8368938956c2ace38dccab970afbb7e916" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ParseTimeTransitiveVisitor&quot;&gt;ParseTimeTransitiveVisitor&lt;/strong&gt;(AST): PermissiveVisitor!AST;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207a31514ac982390914d2a6e9aa078db915433e" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ParseTimeVisitor&quot;&gt;ParseTimeVisitor&lt;/strong&gt;(AST);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c97b6a1e8b33101fd763d1b25f68deec4b720e" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Parser&quot;&gt;Parser&lt;/strong&gt;(AST): Lexer;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9d10e92e134847f474c7f38c574cf1dd0f84b0" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;PeelStatement&quot;&gt;PeelStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e417daeb20b7b867e2576176dd3e3a72cbdf3881" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;PermissiveVisitor&quot;&gt;PermissiveVisitor&lt;/strong&gt;(AST): ParseTimeVisitor!AST;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb3c3d5fb133c7a017882811a027d51a39467ea" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Pid&quot;&gt;Pid&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67e43e8de11faf8397b4fa1e302129e21c13882" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;PosixTimeZone&quot;&gt;PosixTimeZone&lt;/strong&gt;: std.datetime.timezone.TimeZone;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b867c33616a10fac46b96a5752ab5523fddccf" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;PostBlitDeclaration&quot;&gt;PostBlitDeclaration&lt;/strong&gt;: dmd.func.FuncDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd28cb019da036815478fb89857e370c0b2b7c76" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;PostExp&quot;&gt;PostExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7678ed2fec61990bdc33b72ff53c875bbedc311" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;PostorderStatementVisitor&quot;&gt;PostorderStatementVisitor&lt;/strong&gt;: dmd.visitor.StoppableVisitor;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40e011ef7250a827c4f2df0596e31c4e2e64ef3" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;PowAssignExp&quot;&gt;PowAssignExp&lt;/strong&gt;: dmd.expression.BinAssignExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="560e2d0c2f289e07ea719ffc8ae8f4a2f6ed8d42" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;PowExp&quot;&gt;PowExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ccc18bbf5d39615c41a0c5c0383fa67f206473" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;PragmaDeclaration&quot;&gt;PragmaDeclaration&lt;/strong&gt;: dmd.attrib.AttribDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8178c9892446e411b6359e1b396f08f28ac07efa" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;PragmaStatement&quot;&gt;PragmaStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4b0bfefb0e3b494e19f8089de3de50efd14c2d" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;PreExp&quot;&gt;PreExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093b5a2c61f07551b27f50bb19585c38c7b7728b" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;PrettyFuncInitExp&quot;&gt;PrettyFuncInitExp&lt;/strong&gt;: dmd.expression.DefaultInitExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6a6345c030fa58fcf477ff5691d5e62b10d5e4" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;PriorityMessageException&quot;&gt;PriorityMessageException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab88f2529ca2f5e936bc26f3d8062272e6c7ecb" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ProcessException&quot;&gt;ProcessException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12920dc56529e2ba1af752ac607c78c65dd8f750" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ProcessingInstruction&quot;&gt;ProcessingInstruction&lt;/strong&gt;: std.xml.Item;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9d3357a1d00a445b51e5558aa9d6a9a8adae22" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ProtDeclaration&quot;&gt;ProtDeclaration&lt;/strong&gt;: dmd.attrib.AttribDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf628f1b552bed5c540d23a0ca74eada687381a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Protocol&quot;&gt;Protocol&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdd17df67102217c7a8dd64c6c896436baaead3" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;PtrExp&quot;&gt;PtrExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cf1c3f5b82ffe9bdddf3bea586d98265b06f20" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;RangeError&quot;&gt;RangeError&lt;/strong&gt;: object.Error;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f654571f672ca303d5290d6f09ada971d64c51f2" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ReadWriteMutex&quot;&gt;ReadWriteMutex&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36db4a7dc4edff46493593638f9e723d49196dd0" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Reader&quot;&gt;Reader&lt;/strong&gt;: object.Object.Monitor;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb7a3c96d05031b2d05f73f0703d9ec286ab24e3" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;RealExp&quot;&gt;RealExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7cb90c0a1090e62fac3580797a0d88cb93ace1e" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;RedBlackTree&quot;&gt;RedBlackTree&lt;/strong&gt;(T, alias less = &quot;a &amp;lt; b&quot;, bool allowDuplicates = false) if (is(typeof(binaryFun!less(T.init, T.init))));</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115671c4a351a37682c5807da1d44d68a6d2c62b" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;RemoveExp&quot;&gt;RemoveExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22fe5d1b9b72e71a5e8d6c16cc061d8db9c38009" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ReturnStatement&quot;&gt;ReturnStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb00d52dfd1ccee3f8b4ee882214cede71098ca6" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;RootObject&quot;&gt;RootObject&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ff2245cdf13c4052da423f8d2d1bd7374dd620" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ScopeDsymbol&quot;&gt;ScopeDsymbol&lt;/strong&gt;: dmd.dsymbol.Dsymbol;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee055c23b6f93dd66dd94efeb9dc4e92ab919864" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ScopeExp&quot;&gt;ScopeExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a65f70b29e112c7b9b8e4758ab8b9605e8a3a1" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ScopeGuardStatement&quot;&gt;ScopeGuardStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7acfdc5193d9188b78647eabfc782a4996a018fc" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ScopeStatement&quot;&gt;ScopeStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d410deaf461579b434dd8d617968be706416d7f4" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SemanticTimePermissiveVisitor&quot;&gt;SemanticTimePermissiveVisitor&lt;/strong&gt;: dmd.visitor.Visitor;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4278554e2b357dd7874d276696a8188549b37c89" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SemanticTimeTransitiveVisitor&quot;&gt;SemanticTimeTransitiveVisitor&lt;/strong&gt;: dmd.visitor.SemanticTimePermissiveVisitor;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff9831b8ae73841071a01a603af7702a638051d" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Semaphore&quot;&gt;Semaphore&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de84d9426c4f74f8aa51ee8227387db3cdaa544d" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Service&quot;&gt;Service&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a02cd6f599f10003723d8a836b8af71c4931d362" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SharedStaticCtorDeclaration&quot;&gt;SharedStaticCtorDeclaration&lt;/strong&gt;: dmd.func.StaticCtorDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4374b79f8a109efaeeb8da747b396cd591115f69" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SharedStaticDtorDeclaration&quot;&gt;SharedStaticDtorDeclaration&lt;/strong&gt;: dmd.func.StaticDtorDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6868afd72f14d146e4ac13adae7a00a89f79711" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ShlAssignExp&quot;&gt;ShlAssignExp&lt;/strong&gt;: dmd.expression.BinAssignExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea3b6c8a19d21453de96fd87d1d31a39519f643c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ShlExp&quot;&gt;ShlExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ce86e6846b0ee739600f2910ff81c408c361b7" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ShrAssignExp&quot;&gt;ShrAssignExp&lt;/strong&gt;: dmd.expression.BinAssignExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133a10d69ae5723813827ad1b2321e733f226062" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ShrExp&quot;&gt;ShrExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d96f987b4bb0ce914c3ec430c74ccc2b481fbd4" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SimpleTimeZone&quot;&gt;SimpleTimeZone&lt;/strong&gt;: std.datetime.timezone.TimeZone;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a44eba60d22026b31bcbe38600241bdca908783" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SliceExp&quot;&gt;SliceExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97714be75ce2a9910b4c8f14b116252d9f1035f5" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Socket&quot;&gt;Socket&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33dcb2586f13e1f3ee7d0a2dc80228fd46af47f" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SocketAcceptException&quot;&gt;SocketAcceptException&lt;/strong&gt;: std.socket.SocketOSException;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea6af15df3932e0c0e3cca3f7ccf21057893e9a6" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SocketException&quot;&gt;SocketException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777f46bb186c742e226a328ae3b19dcef71d8d63" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SocketFeatureException&quot;&gt;SocketFeatureException&lt;/strong&gt;: std.socket.SocketException;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918069a26ed88fbdfe9c5fa76a4223c691a27768" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SocketOSException&quot;&gt;SocketOSException&lt;/strong&gt;: std.socket.SocketException;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb1d2029a27f98462383334e27bf7bd55208943" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SocketParameterException&quot;&gt;SocketParameterException&lt;/strong&gt;: std.socket.SocketException;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1abe0bcb00ec893cc218b260ea3bcbb76d0063a0" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SocketSet&quot;&gt;SocketSet&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74b35e355cb04d65737f3f5a32a4019b1fe8ca0" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;StatementRewriteWalker&quot;&gt;StatementRewriteWalker&lt;/strong&gt;: dmd.visitor.SemanticTimePermissiveVisitor;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49ad53a5c636db30c56ac08587b1406b9e4c2f5" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;StaticAssert&quot;&gt;StaticAssert&lt;/strong&gt;: dmd.dsymbol.Dsymbol;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95ceab17af831ac9893a838866d5e5bc382a258" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;StaticAssertStatement&quot;&gt;StaticAssertStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da8dc1cdadf3cc0561d9d82146f76b36927d2f1" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;StaticCtorDeclaration&quot;&gt;StaticCtorDeclaration&lt;/strong&gt;: dmd.func.FuncDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377488b1394de604def8f0f50b3f39e2ad7e1019" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;StaticDtorDeclaration&quot;&gt;StaticDtorDeclaration&lt;/strong&gt;: dmd.func.FuncDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d61b2bb7e64ca43668707ffa94745b010593747" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;StaticForeach&quot;&gt;StaticForeach&lt;/strong&gt;: dmd.root.rootobject.RootObject;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f25c2efe4cca3c70652b614f9afe58e46ef55db" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;StaticForeachDeclaration&quot;&gt;StaticForeachDeclaration&lt;/strong&gt;: dmd.attrib.AttribDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd7a14d72b9dcbdd056b2434e055af6edf5ec58" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;StaticForeachStatement&quot;&gt;StaticForeachStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbdf8ce850214a000b8c0247d8de920ab5a1aa4" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;StaticIfCondition&quot;&gt;StaticIfCondition&lt;/strong&gt;: dmd.cond.Condition;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb3f88afceded7f38073a552f6fa73f28ffb4da" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;StaticIfDeclaration&quot;&gt;StaticIfDeclaration&lt;/strong&gt;: dmd.attrib.ConditionalDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d4b318543b578f6adf60104459c8041696888c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;StdForwardLogger&quot;&gt;StdForwardLogger&lt;/strong&gt;: std.experimental.logger.core.Logger;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a401342872d712a7552748ba3f0c43547b4bfa2" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;StderrDiagnosticReporter&quot;&gt;StderrDiagnosticReporter&lt;/strong&gt;: dmd.errors.DiagnosticReporter;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="673e65faab47c90927a01b23659291a9781acb3a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;StdioException&quot;&gt;StdioException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528bf24187ae79386d83450e1708378328db1c9a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;StorageClassDeclaration&quot;&gt;StorageClassDeclaration&lt;/strong&gt;: dmd.attrib.AttribDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae98280a68626fe9789e3dec859ad10d93d0ca08" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;StrictVisitor&quot;&gt;StrictVisitor&lt;/strong&gt;(AST): ParseTimeVisitor!AST;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c706c2e337366c5d21f6c1e53a062674e83881" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;StringException&quot;&gt;StringException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2229a3574f03ec7a62a902fb05b6f5975d3cb96e" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;StringExp&quot;&gt;StringExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81304ce78a6ebe74f3da9b646dbf0c0125884c1" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;StructDeclaration&quot;&gt;StructDeclaration&lt;/strong&gt;: dmd.aggregate.AggregateDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fcea66ca81945df452e888ca0bd38e0133b297c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;StructInitializer&quot;&gt;StructInitializer&lt;/strong&gt;: dmd.init.Initializer;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d2678ea1c5457703e54a8dfab45aa675a343ed" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;StructLiteralExp&quot;&gt;StructLiteralExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbdfbea7c5e15e89399db809c77671dcc21516f" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SuperExp&quot;&gt;SuperExp&lt;/strong&gt;: dmd.expression.ThisExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f9637fbc6d8348d343f87be3d7dea9d7c11bcf" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SwitchError&quot;&gt;SwitchError&lt;/strong&gt;: object.Error;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1368b1d2deb4af59409f5df245ae7a79d22fb2" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SwitchErrorStatement&quot;&gt;SwitchErrorStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96365ee0b0f5b425eeae79f3e5343184dae8e1f" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SwitchStatement&quot;&gt;SwitchStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a07d14801ac150719c5b4975c491262ac7cac6" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SymOffExp&quot;&gt;SymOffExp&lt;/strong&gt;: dmd.expression.SymbolExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e6e2b4db89b4a894cf7376fa4683327e520bb7" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SymbolDeclaration&quot;&gt;SymbolDeclaration&lt;/strong&gt;: dmd.declaration.Declaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de464aedd30a432114d446645bbec905b165520f" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SymbolExp&quot;&gt;SymbolExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4f38a1d36134cd97ed939f40dfe0e519134a51" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SyncError&quot;&gt;SyncError&lt;/strong&gt;: object.Error;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5813dc51ca3fee7de7fb9a9ba97fde00fe94661d" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;SynchronizedStatement&quot;&gt;SynchronizedStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45f6e2d1c629cbcc356990bcca6b2a5b80bede9" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Tag&quot;&gt;Tag&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a579fe33f3643c7b60e19558308b69b7dfc266bf" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TagException&quot;&gt;TagException&lt;/strong&gt;: std.xml.XMLException;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="709532ed13656cf3142f393ca51631d2a6255f9a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TaskPool&quot;&gt;TaskPool&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a85283a38205c8832dde10740d045ea7a0b184" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TcpSocket&quot;&gt;TcpSocket&lt;/strong&gt;: std.socket.Socket;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637f0b5010cd649e692c41b60479a180f3944ee2" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TemplateAliasParameter&quot;&gt;TemplateAliasParameter&lt;/strong&gt;: dmd.dtemplate.TemplateParameter;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f25cd616a4f9d386735cdc00b2d1fb09abcca6a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TemplateDeclaration&quot;&gt;TemplateDeclaration&lt;/strong&gt;: dmd.dsymbol.ScopeDsymbol;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6551d7b5a608a548e1a0e6599ee8130060750c7d" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TemplateExp&quot;&gt;TemplateExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a3638511de6f3e80215ae1edde29530ed1e96ef" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TemplateInstance&quot;&gt;TemplateInstance&lt;/strong&gt;: dmd.dsymbol.ScopeDsymbol;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54976855d4312fef1e9bd1d4af32fd034081d281" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TemplateMixin&quot;&gt;TemplateMixin&lt;/strong&gt;: dmd.dtemplate.TemplateInstance;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea39b5c6b5ef9f7c4ab637125650ffbeb34f3a3" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TemplateThisParameter&quot;&gt;TemplateThisParameter&lt;/strong&gt;: dmd.dtemplate.TemplateTypeParameter;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c8ff77c040bc79e1bb9a5be50fcd3de5a4d16f" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TemplateTupleParameter&quot;&gt;TemplateTupleParameter&lt;/strong&gt;: dmd.dtemplate.TemplateParameter;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb45a91f1e59ae536192818375f361608a04d00c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TemplateTypeParameter&quot;&gt;TemplateTypeParameter&lt;/strong&gt;: dmd.dtemplate.TemplateParameter;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9abaf55ca6a410dd55e421fcd8817f21367aac83" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TemplateValueParameter&quot;&gt;TemplateValueParameter&lt;/strong&gt;: dmd.dtemplate.TemplateParameter;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9269871f1718619ce06f4f9fdd9678be1d22ac4" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Text&quot;&gt;Text&lt;/strong&gt;: std.xml.Item;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d033ef1dd0932acd8f0c605f4bcf2206b487cc" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TextException&quot;&gt;TextException&lt;/strong&gt;: std.xml.XMLException;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee0696679f2f5688c1ab97246301a779c339e46" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ThisDeclaration&quot;&gt;ThisDeclaration&lt;/strong&gt;: dmd.declaration.VarDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6afd382377e0a4c992cc34479b8d7ba494ba7160" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ThisExp&quot;&gt;ThisExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ebf316259bfd994e8efeadfa2ecfef443e29e6" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Thread&quot;&gt;Thread&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6465658b9106813788a5a66b1c4a0e32327d3cc9" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ThreadError&quot;&gt;ThreadError&lt;/strong&gt;: object.Error;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d03d2f77cbadfb10a2e4562bbac7356751b960" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ThreadException&quot;&gt;ThreadException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99628550824405a9717c0207eae4c5c42c5f8600" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ThreadGroup&quot;&gt;ThreadGroup&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a38cdbaa5ad499068129acf2a27fcfd77863b69" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ThreadScheduler&quot;&gt;ThreadScheduler&lt;/strong&gt;: std.concurrency.Scheduler;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7037cad5039c7eed83d9844333980f0680c0b0" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ThrowStatement&quot;&gt;ThrowStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d32f89d58068692b17ec74f2faf028c5962b4c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Throwable&quot;&gt;Throwable&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026deb67226fd22ae5aa85e6a691f50d76231a1a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ThrownExceptionExp&quot;&gt;ThrownExceptionExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4787a402363b3256f8017132c56cce6d689c3c15" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TidMissingException&quot;&gt;TidMissingException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a623a7b1cf7ce2d0550484a7907689ea8b5a111d" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TimeException&quot;&gt;TimeException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3396a1e1b5332eb7d9370827d8ff7ab3c5c7d4a0" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TraitsExp&quot;&gt;TraitsExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe7e2f894f77c2571f549c35d915b997c0224ed" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TryCatchStatement&quot;&gt;TryCatchStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b975fc1ccab6f9cc83940b0f3a89ea0856e2dbc" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TryFinallyStatement&quot;&gt;TryFinallyStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5a15eb6c46d215ddb06b972d6b5d35ddad6db8" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TupleDeclaration&quot;&gt;TupleDeclaration&lt;/strong&gt;: dmd.declaration.Declaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a43bf6f37eec06ce86897bb87a1b962924dd4a0" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TupleExp&quot;&gt;TupleExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dbe08f2a661f2bfbc3ec54a5a3bacc2927a9a05" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeAArray&quot;&gt;TypeAArray&lt;/strong&gt;: dmd.mtype.TypeArray;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f835837530152dabaad19c535f08acfcf27fe6" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeBasic&quot;&gt;TypeBasic&lt;/strong&gt;: dmd.mtype.Type;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165307fe1f2d657c8128050c3d2579897a585430" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeClass&quot;&gt;TypeClass&lt;/strong&gt;: dmd.mtype.Type;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80030dd95652e088ac1684085e18d2b30e35271b" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeDArray&quot;&gt;TypeDArray&lt;/strong&gt;: dmd.mtype.TypeArray;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2e490933b5919c30460079b3e13209fc9f22db" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeDelegate&quot;&gt;TypeDelegate&lt;/strong&gt;: dmd.mtype.TypeNext;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f72d7764f3546e53957ba57f084462bd011a61" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeEnum&quot;&gt;TypeEnum&lt;/strong&gt;: dmd.mtype.Type;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ebee1b0c0a8e3d9c8b18dc307f1eda5978594f" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeError&quot;&gt;TypeError&lt;/strong&gt;: dmd.mtype.Type;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faaf487db21b816a203caccaa859edd949e392b1" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeExp&quot;&gt;TypeExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122f5d988451e2b37b563534c49dadfa0308d487" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeFunction&quot;&gt;TypeFunction&lt;/strong&gt;: dmd.mtype.TypeNext;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d6b59c72b7a75cdd66b183e821dbf9246c2fae" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeIdentifier&quot;&gt;TypeIdentifier&lt;/strong&gt;: dmd.mtype.TypeQualified;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825f9d2cf7bc424994efbe1ae68077aa98797455" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeInfoArrayDeclaration&quot;&gt;TypeInfoArrayDeclaration&lt;/strong&gt;: dmd.declaration.TypeInfoDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1a6563ba93c04fed639453f24210031bde6192" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeInfoAssociativeArrayDeclaration&quot;&gt;TypeInfoAssociativeArrayDeclaration&lt;/strong&gt;: dmd.declaration.TypeInfoDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72eff6cc9cb2c657f4f0b4de9115728b9c2acd28" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeInfoClassDeclaration&quot;&gt;TypeInfoClassDeclaration&lt;/strong&gt;: dmd.declaration.TypeInfoDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5afcf673c131c8b1cf8996b978613b88d4cf08" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeInfoConstDeclaration&quot;&gt;TypeInfoConstDeclaration&lt;/strong&gt;: dmd.declaration.TypeInfoDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a74804648615f3ce00020da0c172b5d97c694553" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeInfoDeclaration&quot;&gt;TypeInfoDeclaration&lt;/strong&gt;: dmd.declaration.VarDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4925941c6ee2aaa83b7b4d32e2a7aa2fe072d75" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeInfoDelegateDeclaration&quot;&gt;TypeInfoDelegateDeclaration&lt;/strong&gt;: dmd.declaration.TypeInfoDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d42e62cb1177ba8009e0f0c2cbbee342714385" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeInfoEnumDeclaration&quot;&gt;TypeInfoEnumDeclaration&lt;/strong&gt;: dmd.declaration.TypeInfoDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5759b84242b4d0b70b78c9dc1d2e5712db2cff3d" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeInfoFunctionDeclaration&quot;&gt;TypeInfoFunctionDeclaration&lt;/strong&gt;: dmd.declaration.TypeInfoDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737667244e9d989953c0ac66584e35c6f5cfacf5" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeInfoInterfaceDeclaration&quot;&gt;TypeInfoInterfaceDeclaration&lt;/strong&gt;: dmd.declaration.TypeInfoDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c79a94e45015bbb3bb3447afd51e16a8837c3c1" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeInfoInvariantDeclaration&quot;&gt;TypeInfoInvariantDeclaration&lt;/strong&gt;: dmd.declaration.TypeInfoDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dbc41bfcd6b786fc8cf7893681f6b25ddcddc7d" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeInfoPointerDeclaration&quot;&gt;TypeInfoPointerDeclaration&lt;/strong&gt;: dmd.declaration.TypeInfoDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5461f1339a7986910c5de9860506d3fbbe21334" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeInfoSharedDeclaration&quot;&gt;TypeInfoSharedDeclaration&lt;/strong&gt;: dmd.declaration.TypeInfoDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f907146cc2f8bda31247d26af7b19ea56f66b60a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeInfoStaticArrayDeclaration&quot;&gt;TypeInfoStaticArrayDeclaration&lt;/strong&gt;: dmd.declaration.TypeInfoDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9435bb99f2f5f9ab39fdf2a662ff8109754c08" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeInfoStructDeclaration&quot;&gt;TypeInfoStructDeclaration&lt;/strong&gt;: dmd.declaration.TypeInfoDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d4facf24dc8f739cd0007b10434fe79e302d61" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeInfoTupleDeclaration&quot;&gt;TypeInfoTupleDeclaration&lt;/strong&gt;: dmd.declaration.TypeInfoDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e76e4daae8a5a22c47c256b236fd1ae49cc873" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeInfoVectorDeclaration&quot;&gt;TypeInfoVectorDeclaration&lt;/strong&gt;: dmd.declaration.TypeInfoDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc00523b3de581f5fa1d371dbd42559322fcfea" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeInfoWildDeclaration&quot;&gt;TypeInfoWildDeclaration&lt;/strong&gt;: dmd.declaration.TypeInfoDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d97ad422032473f1f8df99c010a852c643b6e99b" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeInfo_Class&quot;&gt;TypeInfo_Class&lt;/strong&gt;: object.TypeInfo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91c992775290ffd045afa63307398991ca442b2" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeInstance&quot;&gt;TypeInstance&lt;/strong&gt;: dmd.mtype.TypeQualified;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c609449b925171175f104e9ebab4d665feedff" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeMixin&quot;&gt;TypeMixin&lt;/strong&gt;: dmd.mtype.Type;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d0c7869f353654e80140a785bc589167a72ef8" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeNull&quot;&gt;TypeNull&lt;/strong&gt;: dmd.mtype.Type;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad40dfae658507a25be1cf057b878ac63026c24a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypePointer&quot;&gt;TypePointer&lt;/strong&gt;: dmd.mtype.TypeNext;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d818d09b47c8a306217a254905df6ea49825e76f" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeReference&quot;&gt;TypeReference&lt;/strong&gt;: dmd.mtype.TypeNext;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09976e52503a2318732e91b103f45da9ddba3cd3" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeReturn&quot;&gt;TypeReturn&lt;/strong&gt;: dmd.mtype.TypeQualified;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27afdfa46a7ca38489e5f3343632af02051d123c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeSArray&quot;&gt;TypeSArray&lt;/strong&gt;: dmd.mtype.TypeArray;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d93fc0e2a5f91b72518e359e7734d35dac6fb7" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeSlice&quot;&gt;TypeSlice&lt;/strong&gt;: dmd.mtype.TypeNext;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca05f08f032f8fb9a658fd368eb92345c131726" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeStruct&quot;&gt;TypeStruct&lt;/strong&gt;: dmd.mtype.Type;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5432f1ba40267ca1a50fffa0d950c6ad5007c14a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeTraits&quot;&gt;TypeTraits&lt;/strong&gt;: dmd.mtype.Type;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b53a635073681c9433ec3e00d9edc4c26c0528" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeTuple&quot;&gt;TypeTuple&lt;/strong&gt;: dmd.mtype.Type;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced6b2a597a0430f02855d6c79584483befed1df" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeTypeof&quot;&gt;TypeTypeof&lt;/strong&gt;: dmd.mtype.TypeQualified;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b67d56a679025ad4e0dca8d3bf278b3423724f" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeVector&quot;&gt;TypeVector&lt;/strong&gt;: dmd.mtype.Type;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab057b53c6db308c68f2e632258fa44cf278092" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;TypeidExp&quot;&gt;TypeidExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f60849ceba7d9aa96cb9d4d2ecc977ce4279b01d" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;UAddExp&quot;&gt;UAddExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4fd03cc2b75260b4a726892d3e8c285163c100" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;URIException&quot;&gt;URIException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734e831a99a3725e2a306afdb104828b7f15b303" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;UTC&quot;&gt;UTC&lt;/strong&gt;: std.datetime.timezone.TimeZone;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff3c28338d69652c129e38f536e1720228dfd32" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;UTFException&quot;&gt;UTFException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9cfc215b764e226b18cf208e46684f3e0f860a" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;UUIDParsingException&quot;&gt;UUIDParsingException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749e4775bc71e825839d9a1b50c526476705a63c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;UdpSocket&quot;&gt;UdpSocket&lt;/strong&gt;: std.socket.Socket;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35b158462e1fca6ec01e670540b999d948d8674" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;UnCompress&quot;&gt;UnCompress&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8bb49dfc132fe6aa280722edf08e0d913bf9bfa" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;UnicodeException&quot;&gt;UnicodeException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc5b656f13f6ceae61d349cd3b04cbc9ba0e6f1" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;UnionDeclaration&quot;&gt;UnionDeclaration&lt;/strong&gt;: dmd.dstruct.StructDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4198b38f78aa4c1a70224cd785a5fb6ae105811c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;UnitTestDeclaration&quot;&gt;UnitTestDeclaration&lt;/strong&gt;: dmd.func.FuncDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a0a9da37a724d5df2f2ac51d478604e0cc83340" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;UnixAddress&quot;&gt;UnixAddress&lt;/strong&gt;: std.socket.Address;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46cf17ed437d5f1d9368d33dfeca6a2fdb0012aa" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;UnknownAddress&quot;&gt;UnknownAddress&lt;/strong&gt;: std.socket.Address;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7c38b158910e3feb78850b8b3681b69869a128" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;UnknownAddressReference&quot;&gt;UnknownAddressReference&lt;/strong&gt;: std.socket.Address;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664ecd64f0b72e97856478edac55ebdd3394129e" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;UnrolledLoopStatement&quot;&gt;UnrolledLoopStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab42014fc9a0c2263d6dea18ceb08e0113765dff" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;UserAttributeDeclaration&quot;&gt;UserAttributeDeclaration&lt;/strong&gt;: dmd.attrib.AttribDeclaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36747227c777bdbff0a881a50891441327028593" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;UshrAssignExp&quot;&gt;UshrAssignExp&lt;/strong&gt;: dmd.expression.BinAssignExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d481ea185adc981e1c7103211ad3f04b2fba7a84" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;UshrExp&quot;&gt;UshrExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5dd7cf8aa830383153f35e12523ff86ac5a9600" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;VarDeclaration&quot;&gt;VarDeclaration&lt;/strong&gt;: dmd.declaration.Declaration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85bf9ff7913022f3a9cbb64093cf73da33317cb" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;VarExp&quot;&gt;VarExp&lt;/strong&gt;: dmd.expression.SymbolExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7d0bf4610cb869f8c580c0a09f4fe8a8be6d7d" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;VariantException&quot;&gt;VariantException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21618e073e5a727d19daeabdefe9767f450ab73c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;VectorArrayExp&quot;&gt;VectorArrayExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e671a6ac07e286d5051154f8440d90119b7620e" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;VectorExp&quot;&gt;VectorExp&lt;/strong&gt;: dmd.expression.UnaExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bea06355d63c6e4e3347acd4d2fb3eb6ee6adf9" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;VersionCondition&quot;&gt;VersionCondition&lt;/strong&gt;: dmd.cond.DVCondition;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5cee10691414c695a7c56e2bcb2071daff21d8" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;VersionSymbol&quot;&gt;VersionSymbol&lt;/strong&gt;: dmd.dsymbol.Dsymbol;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b18545c49730af93b99ebf51f1b7a1e2218b992" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Visitor&quot;&gt;Visitor&lt;/strong&gt;: dmd.parsetimevisitor.ParseTimeVisitor!(ASTCodegen).ParseTimeVisitor;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5cc85514cca9018cfe49b364fc8900a99eec752" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;VoidInitExp&quot;&gt;VoidInitExp&lt;/strong&gt;: dmd.expression.Expression;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfcc891a18e19535a8443b2db18afc3a3e440d6d" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;VoidInitializer&quot;&gt;VoidInitializer&lt;/strong&gt;: dmd.init.Initializer;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb44336148004a91c05c6db2beb78fd79cfc0967" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;WhileStatement&quot;&gt;WhileStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97e46793182d1d0a12fbf90bc489808954d2c70" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;WindowsException&quot;&gt;WindowsException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbedb706b54218f0f0c3159f1eeb7bcf9f94231" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;WindowsTimeZone&quot;&gt;WindowsTimeZone&lt;/strong&gt;: std.datetime.timezone.TimeZone;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d729be1c97e5899d6ca6d31309a1fcb44a1ad0f7" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;WithScopeSymbol&quot;&gt;WithScopeSymbol&lt;/strong&gt;: dmd.dsymbol.ScopeDsymbol;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e0135f6556178565ed76e9c585bc23e771d8d9" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;WithStatement&quot;&gt;WithStatement&lt;/strong&gt;: dmd.statement.Statement;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3a30638f2bb287f3b2e2e0700dfbd39727db3d" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;WrapperDigest&quot;&gt;WrapperDigest&lt;/strong&gt;(T) if (isDigest!T): Digest;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a3ff1840f6f20778a7f966d8c23182457ad4655" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;Writer&quot;&gt;Writer&lt;/strong&gt;: object.Object.Monitor;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1145208f27ee5870338b9608b07f1ffca53305" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;XIException&quot;&gt;XIException&lt;/strong&gt;: std.xml.XMLException;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f809fed04f37fcfdf34d20f125b28ac0213df95d" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;XMLException&quot;&gt;XMLException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00bc8a0355f04d57f05b07934bce00ad5039a67c" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;XMLInstruction&quot;&gt;XMLInstruction&lt;/strong&gt;: std.xml.Item;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74efe8cc591cb15a658be69888dd8734ece90dd6" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;XorAssignExp&quot;&gt;XorAssignExp&lt;/strong&gt;: dmd.expression.BinAssignExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93654f21eba81845557eb03cd53fad56262ffcd1" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;XorExp&quot;&gt;XorExp&lt;/strong&gt;: dmd.expression.BinExp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e48591a2d4afe0d87201aa2eeeb4019ba5aeda" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ZipArchive&quot;&gt;ZipArchive&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853add6b2caf0c607cb2957ad3e355a770c869ae" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ZipException&quot;&gt;ZipException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2fc33ea07a59caeeb7b490649cbe88d1ca58f0e" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;ZlibException&quot;&gt;ZlibException&lt;/strong&gt;: object.Exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb56654999496b2734c06ae952a4bfad60bf6f94" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;bad_alloc&quot;&gt;bad_alloc&lt;/strong&gt;: core.stdcpp.exception.exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea14fd776b8dee8eab244c2642f767c820dfd4af" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;bad_exception&quot;&gt;bad_exception&lt;/strong&gt;: core.stdcpp.exception.exception;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5428562e9a43aad85560c6956d488fa7091c391e" translate="yes" xml:space="preserve">
          <source>class &lt;strong id=&quot;exception&quot;&gt;exception&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="439235ec46d25a5f6d77eea90af294d2e9a7b9da" translate="yes" xml:space="preserve">
          <source>class &lt;u&gt;Math&lt;/u&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0cb0e5b6b1ebf5f1f47b5f39bca77dd64a7264" translate="yes" xml:space="preserve">
          <source>class fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d76c34c79cf00add93e463054fe4592f63967161" translate="yes" xml:space="preserve">
          <source>class name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6676ff5719a7dee5b46e81b84799c394edc5062" translate="yes" xml:space="preserve">
          <source>class static initializer (init.length gives size in bytes of class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5eb1c942614cffb2d5b9ebdafa7666dae690c74" translate="yes" xml:space="preserve">
          <source>class type to look for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822fd2782b7a9e8982316ba5ca3c8275e1481ee2" translate="yes" xml:space="preserve">
          <source>class with C++ linkage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806522e48b4b8af1f79d6107edf384417eef272e" translate="yes" xml:space="preserve">
          <source>class. For local declarations, &lt;code&gt;scope&lt;/code&gt; implements the RAII (Resource Acquisition Is Initialization) protocol. This means that the destructor for an object is automatically called when the reference to it goes out of scope. The destructor is called even if the scope is exited via a thrown exception, thus &lt;code&gt;scope&lt;/code&gt; is used to guarantee cleanup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a38630cb7fc6f49e24ab44459e7e4fb115e5db84" translate="yes" xml:space="preserve">
          <source>classInstanceSize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab02b43d0522a3f2cfd6605340a787d4da2a139f" translate="yes" xml:space="preserve">
          <source>classes derived from &lt;b&gt;Object&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a47bfcd734022e9253265c97e12440d4fdf9da" translate="yes" xml:space="preserve">
          <source>classes need to pass a class object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c100731fdc0871fa3914cfba4298a30c351c7f45" translate="yes" xml:space="preserve">
          <source>classinfo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="879d1023fa7e872c5d85d360ebad8ee0e2ca2514" translate="yes" xml:space="preserve">
          <source>cleanup:none|collect|finalize - how to treat live objects when terminating</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a89fee7f673c5c3629a0e185d21a45620d20fd83" translate="yes" xml:space="preserve">
          <source>clear is disabled for immutable or const element types, due to the possibility that &lt;code&gt;Appender&lt;/code&gt; might overwrite immutable data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2df2634ca9c48195decab74e5fd77e3bc77f64" translate="yes" xml:space="preserve">
          <source>cli.d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6404ab5ec7b46e35f12865bb4d393d2d6bcb1676" translate="yes" xml:space="preserve">
          <source>clockType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74fdf211023020346842c6f220d8314e0243fad8" translate="yes" xml:space="preserve">
          <source>clone.d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea88fbaa99b73225752e2ef67593f775848160ad" translate="yes" xml:space="preserve">
          <source>closed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d091cefc7695f6aba9a1064d92fd838e1321dce0" translate="yes" xml:space="preserve">
          <source>closure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d6a3562a5a90e86d325ce6e9649da0213ef445" translate="yes" xml:space="preserve">
          <source>cmp = A template that returns a &lt;code&gt;bool&lt;/code&gt; (if its first argument is less than the second one) or an &lt;code&gt;int&lt;/code&gt; (-1 means less than, 0 means equal, 1 means greater than)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c9426b4768b447bebbc4dfbb68cc56b22f9658" translate="yes" xml:space="preserve">
          <source>code point to check</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874a20463607141637bf9da23d1b3fd4aca98157" translate="yes" xml:space="preserve">
          <source>code sample generated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1baea04ed094d2980046fd163fe55ff04e069474" translate="yes" xml:space="preserve">
          <source>code sample generated, even if it is empty or only includes comments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc40383203f2017f990983414d2d767cadcabcd" translate="yes" xml:space="preserve">
          <source>code to be run in the finally clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9249cec96220f653352ec17c2365e6f67123a8fb" translate="yes" xml:space="preserve">
          <source>code unit at index i</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11784d733581089f40f2045f2ccadef2833956e8" translate="yes" xml:space="preserve">
          <source>code unit to set it to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9002c73d672470b712cdbc619c957d1b9f772b2a" translate="yes" xml:space="preserve">
          <source>code unit type of the target encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38e0425072c11c5a798b7260500c6fb1ae54716" translate="yes" xml:space="preserve">
          <source>collect: run a collection (the default for backward compatibility)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429355363931418f096f40f4113a325c50c3eb98" translate="yes" xml:space="preserve">
          <source>column number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67ea4ce6a6d6f56b3f4e685bb4a6dbd272953b9" translate="yes" xml:space="preserve">
          <source>column number on the line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846d7961d4994f26bf4859620d8e3edfafac20a6" translate="yes" xml:space="preserve">
          <source>column spacing of tabs in firstindent[] and indent[]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a37cdffb92f552e30a67040d57777a2c451c23" translate="yes" xml:space="preserve">
          <source>comes in the following forms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7ca35e6cdfe89ecb8d4afa9d29300e57e4941d" translate="yes" xml:space="preserve">
          <source>command line arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5271706edae42bf60bc2182b797fdc5df07ec89" translate="yes" xml:space="preserve">
          <source>command was unknown to callback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccda990cc6d58581ffe4a2368eaa78a56b7b516" translate="yes" xml:space="preserve">
          <source>command-line arguments. (See &lt;a href=&quot;#spawnProcess&quot;&gt;&lt;code&gt;spawnProcess&lt;/code&gt;&lt;/a&gt; for details.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcbe1ce43df325378675e2d32c67c1466f88a095" translate="yes" xml:space="preserve">
          <source>comments become TOK.comment's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342b77686894b5b97fdc8d8015639043025ebee4" translate="yes" xml:space="preserve">
          <source>compares 2 AAs for equality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef9e44e84b2c4bf86620ffce81b11cded84af25" translate="yes" xml:space="preserve">
          <source>compiled regular expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5781aa2a14a70c8c0149bec7a8060f20ac271e8" translate="yes" xml:space="preserve">
          <source>compiled regular expression to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f52ffca97f24fb47a0a6228fcf04fcad9543b1d" translate="yes" xml:space="preserve">
          <source>compiler.d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90144cf5eee6f26dc53fa56ac2d3ab9ccc15655c" translate="yes" xml:space="preserve">
          <source>compiles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dca00c3ee34fe5c2907267d98cbf8c562b05d39" translate="yes" xml:space="preserve">
          <source>complex double</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a958d6fd9b4ba5cb0f327a9cb521c70da8a4801" translate="yes" xml:space="preserve">
          <source>complex real</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d34bf4c393e0a004517fb4abf6779f07271144" translate="yes" xml:space="preserve">
          <source>complex.d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0d468fda2817dbb49cedea7fe90473659c9def" translate="yes" xml:space="preserve">
          <source>composable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93600b82d70cf4a91d90c6437fd40679827c2dd" translate="yes" xml:space="preserve">
          <source>composition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7465dc17530f77cfbd53df0c77f10082509698e" translate="yes" xml:space="preserve">
          <source>compression level. Legal values are -1 .. 9, with -1 indicating the default level (6), 0 indicating no compression, 1 being the least compression and 9 being the most.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0020c7470efd99ed9465c12403ff9d09ff9392" translate="yes" xml:space="preserve">
          <source>compression level. Legal values are 1 .. 9, with 1 being the least compression and 9 being the most. The default value is 6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859b73e0ffc37c33b41478191452a9d77830f865" translate="yes" xml:space="preserve">
          <source>compute a hash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521d0219b6ff10e021bd1d89b112b14cf4c3fc64" translate="yes" xml:space="preserve">
          <source>concatenates arrays, producing a dynamic array with the result. The arrays must be arrays of the same element type. If one operand is an array and the other is of that array's element type, that element is converted to an array of length 1 of that element, and then the concatenation is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b3c21e895be55922fa8fbdd5f7a004769b4fca" translate="yes" xml:space="preserve">
          <source>cond</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1771c24d520592a336ef4db05dd42cbdd080c97" translate="yes" xml:space="preserve">
          <source>cond.d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc665e4cd709c1bc229e91a8df9434fa1bfba4cd" translate="yes" xml:space="preserve">
          <source>condition differs from an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4df40793d1c635b5dbd44eaa7ff36a66ccc622a" translate="yes" xml:space="preserve">
          <source>connection to use e.g. FTP or HTTP. The default AutoProtocol will guess connection type and create a new instance for this call only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a757824f1078a8e8826f2b8e1385dd7770367e09" translate="yes" xml:space="preserve">
          <source>connection to use e.g. FTP or HTTP. The default AutoProtocol will guess connection type and create a new instance for this call only.  The template parameter &lt;code&gt;T&lt;/code&gt; specifies the type to return. Possible values are &lt;code&gt;char&lt;/code&gt; and &lt;code&gt;ubyte&lt;/code&gt; to return &lt;code&gt;char[]&lt;/code&gt; or &lt;code&gt;ubyte[]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8abc56fc29d5443a3c9f960b2eb2d7005263abc9" translate="yes" xml:space="preserve">
          <source>connection to use e.g. FTP or HTTP. The default AutoProtocol will guess connection type and create a new instance for this call only.  The template parameter &lt;code&gt;T&lt;/code&gt; specifies the type to return. Possible values are &lt;code&gt;char&lt;/code&gt; and &lt;code&gt;ubyte&lt;/code&gt; to return &lt;code&gt;char[]&lt;/code&gt; or &lt;code&gt;ubyte[]&lt;/code&gt;. If asking for &lt;code&gt;char&lt;/code&gt;, content will be converted from the connection character set (specified in HTTP response headers or FTP connection properties, both ISO-8859-1 by default) to UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fa2a559984d153187d68d34924bffad479b5a5" translate="yes" xml:space="preserve">
          <source>consists entirely of compile time constants, and evaluates to false, it is a special case; it signifies that it is unreachable code. Compile Time Function Execution (CTFE) is not attempted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03f04cc47b04e9c7acc15e888faaf3e4607a9f1" translate="yes" xml:space="preserve">
          <source>console.d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3f8476a1dbde17f5a4fe9db977af69ed9bb1bf" translate="yes" xml:space="preserve">
          <source>const @nogc @safe TickDuration &lt;strong id=&quot;peek&quot;&gt;peek&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e284ce6c79f0202bd98b19f0a593b32401334cb9" translate="yes" xml:space="preserve">
          <source>const @property @safe SysTime &lt;strong id=&quot;timeCreated&quot;&gt;timeCreated&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b6fce1c4f0c3a17674b6b356b863ee7aca0d74" translate="yes" xml:space="preserve">
          <source>const @property @safe SysTime &lt;strong id=&quot;timeStatusChanged&quot;&gt;timeStatusChanged&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06726387dfe6db1ea053befa660c4ba2aa607ec8" translate="yes" xml:space="preserve">
          <source>const @property @safe string &lt;strong id=&quot;name&quot;&gt;name&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be262c3b87ca996484b1f80d2e4a49c4dcf9e017" translate="yes" xml:space="preserve">
          <source>const @property @safe string &lt;strong id=&quot;path&quot;&gt;path&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d38f53bf99f8f2583c22ad65d9c060bfa44fb88" translate="yes" xml:space="preserve">
          <source>const @property @trusted bool &lt;strong id=&quot;isAlive&quot;&gt;isAlive&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04263ae09a501d165de182c5bdda8a4c306003e7" translate="yes" xml:space="preserve">
          <source>const @property @trusted int &lt;strong id=&quot;fileno&quot;&gt;fileno&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73199c899de62c3b6ec02c2b53a9dbe8dc2548b9" translate="yes" xml:space="preserve">
          <source>const @property @trusted ulong &lt;strong id=&quot;tell&quot;&gt;tell&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2daaa2feb660e4beddf6c55ec03b290669991d12" translate="yes" xml:space="preserve">
          <source>const @property auto &lt;strong id=&quot;back&quot;&gt;back&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d5766714264b92954ec41432b10eb0755f546c" translate="yes" xml:space="preserve">
          <source>const @property auto &lt;strong id=&quot;front&quot;&gt;front&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fedd582f3ff8322ab31bef5ac76a6dec200fdcb" translate="yes" xml:space="preserve">
          <source>const @property auto &lt;strong id=&quot;length&quot;&gt;length&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af41f748315a2ab4b5683f45c179541b2389a5a9" translate="yes" xml:space="preserve">
          <source>const @property auto &lt;strong id=&quot;save&quot;&gt;save&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef4584ad48aa143ef5dad185b4808c382aaa68b" translate="yes" xml:space="preserve">
          <source>const @property bool &lt;strong id=&quot;convertsTo&quot;&gt;convertsTo&lt;/strong&gt;(T)();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4fba61ec0e8b83df7adb29301c4de06e71e3ef8" translate="yes" xml:space="preserve">
          <source>const @property bool &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7453eb6dd04d4d3bc6d47f09862626da3ff9a460" translate="yes" xml:space="preserve">
          <source>const @property bool &lt;strong id=&quot;isEmpty&quot;&gt;isEmpty&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b13860de9325678eb28b9a4b18ddd7dcb325ee" translate="yes" xml:space="preserve">
          <source>const @property bool &lt;strong id=&quot;isNull&quot;&gt;isNull&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c30e963b037ce992ece96fbc45707520bcf773" translate="yes" xml:space="preserve">
          <source>const @property bool &lt;strong id=&quot;stopped&quot;&gt;stopped&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c5975426c1ee4ad478611a8251ddb405303894b" translate="yes" xml:space="preserve">
          <source>const @property ref auto &lt;strong id=&quot;front&quot;&gt;front&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78640cba201f0240bacb0451bbe1b48b8beedc17" translate="yes" xml:space="preserve">
          <source>const @property scope @safe ushort &lt;strong id=&quot;yearBC&quot;&gt;yearBC&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40590db743df30acb52f63140575c3393cf6a79" translate="yes" xml:space="preserve">
          <source>const @property size_t &lt;strong id=&quot;capacity&quot;&gt;capacity&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbec41d71de7b3d18cdedfac6d9684d3c67ae8c5" translate="yes" xml:space="preserve">
          <source>const @property size_t &lt;strong id=&quot;length&quot;&gt;length&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e2038eff98b2ace88bb55e210e1bb5565dbb6cc" translate="yes" xml:space="preserve">
          <source>const @property size_t &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a8daf6290cb130f79bbea545868f71858578c3" translate="yes" xml:space="preserve">
          <source>const @property size_t &lt;strong id=&quot;min&quot;&gt;min&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84a40bb000829c13393ad9dadc0f8c9f8d4ed0c" translate="yes" xml:space="preserve">
          <source>const @property typeof(this) &lt;strong id=&quot;save&quot;&gt;save&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13af65adde3fe6c87a12b11d490ddc20165ffbad" translate="yes" xml:space="preserve">
          <source>const @property ulong &lt;strong id=&quot;length&quot;&gt;length&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842433e2dd3020cc55a11004802ab1807cbf9b16" translate="yes" xml:space="preserve">
          <source>const @safe auto &lt;strong id=&quot;opBinaryRight&quot;&gt;opBinaryRight&lt;/strong&gt;(string op : &quot;in&quot;)(string k);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e1dad20d14431a75e7da8a64c571845fe00ec2" translate="yes" xml:space="preserve">
          <source>const @safe bool &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b43e7f2969280c5a812dea82bb652f80aecfeff" translate="yes" xml:space="preserve">
          <source>const @safe bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;(Object o);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a15bf9da69e23eabb08b73539666ff59cf2faf4" translate="yes" xml:space="preserve">
          <source>const @safe const(T)* &lt;strong id=&quot;data&quot;&gt;data&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03cebb7948ed7701a5837be3f17e07b0da46dea" translate="yes" xml:space="preserve">
          <source>const @safe int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;(scope const Object o);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecbd6beda2f4971524514a89dd373af95b2d23ce" translate="yes" xml:space="preserve">
          <source>const @safe size_type &lt;strong id=&quot;max_size&quot;&gt;max_size&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda04fbe8fd5725fd7db74131e2d83a8089c4446" translate="yes" xml:space="preserve">
          <source>const @safe size_type &lt;strong id=&quot;size&quot;&gt;size&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebb1b8ae61d83189acead8d6dab9f512d11f922" translate="yes" xml:space="preserve">
          <source>const @safe string &lt;strong id=&quot;toAddrString&quot;&gt;toAddrString&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e61a6cf1ae6e9e3c747de579eb43bb1a514e644" translate="yes" xml:space="preserve">
          <source>const @safe string &lt;strong id=&quot;toHostNameString&quot;&gt;toHostNameString&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e071cd208d7fa81e6fd3b4a1ecdddb420d1d717" translate="yes" xml:space="preserve">
          <source>const @safe string &lt;strong id=&quot;toPortString&quot;&gt;toPortString&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef016daf09343991d740d1125c3fe5b93483c39" translate="yes" xml:space="preserve">
          <source>const @safe string &lt;strong id=&quot;toPrettyString&quot;&gt;toPrettyString&lt;/strong&gt;(in JSONOptions options = JSONOptions.none);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cfc5eb73f44057890917558cb1c2c27b206a73e" translate="yes" xml:space="preserve">
          <source>const @safe string &lt;strong id=&quot;toServiceNameString&quot;&gt;toServiceNameString&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbedfb27a4a64aa9ff637e1b8398eafc4ed358c7" translate="yes" xml:space="preserve">
          <source>const @safe string &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e64f6835e33edf127dbe8ebe2cd82e9ee01d58" translate="yes" xml:space="preserve">
          <source>const @safe string &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;(in JSONOptions options = JSONOptions.none);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449ae445e9c6e9d724a142a8aa8c1c7799d33366" translate="yes" xml:space="preserve">
          <source>const @trusted const(T)[] &lt;strong id=&quot;as_array&quot;&gt;as_array&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0892b0061cf764b1661eaec8f827e257d81f19a8" translate="yes" xml:space="preserve">
          <source>const @trusted string &lt;strong id=&quot;toAddrString&quot;&gt;toAddrString&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be7298185c99254b50bae08c277d7ca1c18d613" translate="yes" xml:space="preserve">
          <source>const @trusted ubyte[] &lt;strong id=&quot;peek&quot;&gt;peek&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9b035e2cdcad579a27b1dd075dc9c41661d1b6" translate="yes" xml:space="preserve">
          <source>const @trusted ubyte[] &lt;strong id=&quot;peek&quot;&gt;peek&lt;/strong&gt;(ubyte[] buf);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f24d194b871e76de9151504ae4f5668e3f5587" translate="yes" xml:space="preserve">
          <source>const Complex!F[] &lt;strong id=&quot;fft&quot;&gt;fft&lt;/strong&gt;(F = double, R)(R range)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313cb8702ec80013181e701a794baad3e32f918e" translate="yes" xml:space="preserve">
          <source>const Complex!F[] &lt;strong id=&quot;inverseFft&quot;&gt;inverseFft&lt;/strong&gt;(F = double, R)(R range)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca28fdae5e35766af611afd55f16fc8286831759" translate="yes" xml:space="preserve">
          <source>const ConstRange &lt;strong id=&quot;lowerBound&quot;&gt;lowerBound&lt;/strong&gt;(Elem e);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e0a3b81fbfef585d84c32d61f99d7fb2788688" translate="yes" xml:space="preserve">
          <source>const ConstRange &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc1cee9448140dca39be6b39e1cb0351942d279" translate="yes" xml:space="preserve">
          <source>const ConstRange &lt;strong id=&quot;upperBound&quot;&gt;upperBound&lt;/strong&gt;(Elem e);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f98c24c51a7abdef726c08f01adfd3f9634765b" translate="yes" xml:space="preserve">
          <source>const Interval &lt;strong id=&quot;intersection&quot;&gt;intersection&lt;/strong&gt;(scope const Interval interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ffcd9c3af4c5728324cdc005dd5edcd35d01c2" translate="yes" xml:space="preserve">
          <source>const Interval &lt;strong id=&quot;intersection&quot;&gt;intersection&lt;/strong&gt;(scope const NegInfInterval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ee5e11029d856aa74569f03ea3a0beaaec8958" translate="yes" xml:space="preserve">
          <source>const Interval &lt;strong id=&quot;intersection&quot;&gt;intersection&lt;/strong&gt;(scope const PosInfInterval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316c4ab5e760abff3677f0cdfd16e58864c4c1e0" translate="yes" xml:space="preserve">
          <source>const Interval &lt;strong id=&quot;merge&quot;&gt;merge&lt;/strong&gt;(scope const Interval interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6049106d07b4363a544f1206f8b43035ba87f526" translate="yes" xml:space="preserve">
          <source>const Interval!TP &lt;strong id=&quot;intersection&quot;&gt;intersection&lt;/strong&gt;(scope const Interval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27fa4911e2469149ab0320060157e9cd70e640a" translate="yes" xml:space="preserve">
          <source>const Interval!TP &lt;strong id=&quot;intersection&quot;&gt;intersection&lt;/strong&gt;(scope const NegInfInterval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c861c64ff31dedaeb4e5a6b1eac2b403c087d75" translate="yes" xml:space="preserve">
          <source>const Interval!TP &lt;strong id=&quot;intersection&quot;&gt;intersection&lt;/strong&gt;(scope const PosInfInterval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dbcaf3202b569494e86a01f84ab488ce42cea49" translate="yes" xml:space="preserve">
          <source>const IntervalRange!(TP, Direction.bwd) &lt;strong id=&quot;bwdRange&quot;&gt;bwdRange&lt;/strong&gt;(TP delegate(scope const TP) func, PopFirst popFirst = PopFirst.no);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c499e6c5949ff4a6d60546a5289056cc4e694408" translate="yes" xml:space="preserve">
          <source>const IntervalRange!(TP, Direction.fwd) &lt;strong id=&quot;fwdRange&quot;&gt;fwdRange&lt;/strong&gt;(TP delegate(scope const TP) func, PopFirst popFirst = PopFirst.no);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e68ee221338ba95d709100b4d3c8d5b249d52ab5" translate="yes" xml:space="preserve">
          <source>const NegInfInterval &lt;strong id=&quot;merge&quot;&gt;merge&lt;/strong&gt;(scope const Interval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ec94cc31d7753bf49adac6c87db024572192bd" translate="yes" xml:space="preserve">
          <source>const NegInfInterval!TP &lt;strong id=&quot;merge&quot;&gt;merge&lt;/strong&gt;(scope const NegInfInterval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8869c9e82b808916dc9a518770ca7bf7b45b07" translate="yes" xml:space="preserve">
          <source>const NegInfIntervalRange!TP &lt;strong id=&quot;bwdRange&quot;&gt;bwdRange&lt;/strong&gt;(TP delegate(scope const TP) func, PopFirst popFirst = PopFirst.no);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b87c73ea9e144f731be3f76bc7ba972c94625f7" translate="yes" xml:space="preserve">
          <source>const Object &lt;strong id=&quot;create&quot;&gt;create&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d63ca21e9b18870c591abfad743bf40620465cd" translate="yes" xml:space="preserve">
          <source>const PosInfInterval &lt;strong id=&quot;merge&quot;&gt;merge&lt;/strong&gt;(scope const Interval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36208e57c6e2a70d47acff1ef1ec050cce635dfc" translate="yes" xml:space="preserve">
          <source>const PosInfInterval!TP &lt;strong id=&quot;merge&quot;&gt;merge&lt;/strong&gt;(scope const PosInfInterval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d88b3cf755b1d75a7404bb86846afcdda6851d9" translate="yes" xml:space="preserve">
          <source>const PosInfIntervalRange!TP &lt;strong id=&quot;fwdRange&quot;&gt;fwdRange&lt;/strong&gt;(TP delegate(scope const TP) func, PopFirst popFirst = PopFirst.no);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92dfa1772dea11e448d26783857a059412d1879f" translate="yes" xml:space="preserve">
          <source>const T &lt;strong id=&quot;getDigit&quot;&gt;getDigit&lt;/strong&gt;(T = ulong)(size_t n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ea49e7694d61fe7c96f2ebbc56f9c82383c336" translate="yes" xml:space="preserve">
          <source>const auto &lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;(string op, Rhs)(const Rhs rhs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea118c3fa962337b07ca1f0bce8b3272bd056ad9" translate="yes" xml:space="preserve">
          <source>const auto &lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;(string op, U, Hook1)(Checked!(U, Hook1) rhs);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f3f8731218588fdf70fc68f7ebc9d99a4a6cce" translate="yes" xml:space="preserve">
          <source>const auto &lt;strong id=&quot;opBinaryRight&quot;&gt;opBinaryRight&lt;/strong&gt;(string op, Lhs)(const Lhs lhs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f60fbcfa706c384fc715cf7ce1f26f306184053" translate="yes" xml:space="preserve">
          <source>const auto &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225816b5be9720b37acc7f104f6cc349938c4144" translate="yes" xml:space="preserve">
          <source>const auto &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;(IndexType1, IndexType2)(IndexType1 begin, IndexType2 end);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59546bec75264ef716e0c340d029d6592adcf366" translate="yes" xml:space="preserve">
          <source>const bool &lt;strong id=&quot;equals&quot;&gt;equals&lt;/strong&gt;(in void* p1, in void* p2);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6486eeec52cb130d7593ffeee1f2e1e0ebd98a" translate="yes" xml:space="preserve">
          <source>const bool &lt;strong id=&quot;isGenerated&quot;&gt;isGenerated&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056e31e10dde07df69d46dffe4605ca9c2f3d45b" translate="yes" xml:space="preserve">
          <source>const bool &lt;strong id=&quot;isNested&quot;&gt;isNested&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76736eb5c31d08ca2a9e432b340b335bcda3a73f" translate="yes" xml:space="preserve">
          <source>const bool &lt;strong id=&quot;isOverloadable&quot;&gt;isOverloadable&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9770e0df04864caf98e614afc4cea0f2bee162" translate="yes" xml:space="preserve">
          <source>const bool &lt;strong id=&quot;opBinaryRight&quot;&gt;opBinaryRight&lt;/strong&gt;(string op : &quot;in&quot;, U)(U ch)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94f0ad3ff13b9dcf746b23e8317cec385cc49fc" translate="yes" xml:space="preserve">
          <source>const bool &lt;strong id=&quot;opBinaryRight&quot;&gt;opBinaryRight&lt;/strong&gt;(string op)(Elem e)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c3614ce1b9be395e7bab26e20076a4277209bb" translate="yes" xml:space="preserve">
          <source>const bool &lt;strong id=&quot;opCast&quot;&gt;opCast&lt;/strong&gt;(T : bool)();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461506c3cb88034eb8fcfbb8455089f6a7e87de0" translate="yes" xml:space="preserve">
          <source>const bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;()(auto ref const(typeof(this)) rhs);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae08447efc2ff26222f16247c4340d6f8375d3b" translate="yes" xml:space="preserve">
          <source>const bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;()(ref const DList rhs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8b534761e02b1634ad06c7a79c5739dd0d7f5f" translate="yes" xml:space="preserve">
          <source>const bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;(R)(R rhs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1536b1cb622a24834500929feaa03d7209b9689" translate="yes" xml:space="preserve">
          <source>const bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;(T)(auto ref T rhs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cee5af0c99f9bedcbf954a79e904afb88bee68" translate="yes" xml:space="preserve">
          <source>const bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;(U)(auto ref const(U) rhs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb740932c4513d3dc3d7bd9238e53c1a67dc9ef" translate="yes" xml:space="preserve">
          <source>const bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;(const Array rhs);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4636dc078b5c7fab6de0dcf25a223596cf667efc" translate="yes" xml:space="preserve">
          <source>const bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;(const SList rhs);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398b13bf88a9275d56b5b4427c46caaabb6cc9f8" translate="yes" xml:space="preserve">
          <source>const bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;(ref const Array rhs);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f801ee6778c8a01695bebbbe9da89514a103e8f6" translate="yes" xml:space="preserve">
          <source>const bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;(ref const SList rhs);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669742191e1e575545b392b81e1a8e8a476c6d5e" translate="yes" xml:space="preserve">
          <source>const bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;(scope Object o);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed233f61a99577394df849b6212d54a5e61ea139" translate="yes" xml:space="preserve">
          <source>const bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;(scope const Object o);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73a7526e8853ec10beddfaa58b1f2c76b9934a7" translate="yes" xml:space="preserve">
          <source>const bool &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt;(uint val);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80793a6e25d89ba3679bb9bc53ac9a5ce454a2a" translate="yes" xml:space="preserve">
          <source>const char*</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807ba85e26835ef2ec7bee28dde0b5299bf62e93" translate="yes" xml:space="preserve">
          <source>const const(OffsetTypeInfo)[] &lt;strong id=&quot;offTi&quot;&gt;offTi&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac891bab98d744afb003334d1d3fbca815d73749" translate="yes" xml:space="preserve">
          <source>const const(char)* &lt;strong id=&quot;kind&quot;&gt;kind&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902e838a59f76ba3e798990595b4a7f2d404328c" translate="yes" xml:space="preserve">
          <source>const const(char)[] &lt;strong id=&quot;message&quot;&gt;message&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8b6353ea9efa1f65a9f81eef1154a91d5b0b9c" translate="yes" xml:space="preserve">
          <source>const const(char)[] &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8170a78d977a6522bf0d85cc231c05f1669b851a" translate="yes" xml:space="preserve">
          <source>const const(char)[] &lt;strong id=&quot;toStringz&quot;&gt;toStringz&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc7685f133140c243423e9863f851f3662e3892" translate="yes" xml:space="preserve">
          <source>const int &lt;strong id=&quot;compare&quot;&gt;compare&lt;/strong&gt;(in void* p1, in void* p2);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9a9aec696da29505f54ad17cc54b00462bbc7b" translate="yes" xml:space="preserve">
          <source>const int &lt;strong id=&quot;hasWild&quot;&gt;hasWild&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46072f6754900d9af4d405c75fcb78c2c8b4b92" translate="yes" xml:space="preserve">
          <source>const int &lt;strong id=&quot;opApply&quot;&gt;opApply&lt;/strong&gt;(scope int delegate(bool) dg);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155a1a20a7bbbf4d0b1f6490ff5cab3620fa889c" translate="yes" xml:space="preserve">
          <source>const int &lt;strong id=&quot;opApply&quot;&gt;opApply&lt;/strong&gt;(scope int delegate(size_t, bool) dg);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c7252914d0b89edcba1b6f422ae5ccb92a6ff0" translate="yes" xml:space="preserve">
          <source>const int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;(Object o);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="930b52a284d640bca3a07b8e4c355fd0821d1156" translate="yes" xml:space="preserve">
          <source>const int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;(R)(R rhs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7741ab0c423d395523ca070dd61d767ce7f5191" translate="yes" xml:space="preserve">
          <source>const int &lt;strong id=&quot;vtblOffset&quot;&gt;vtblOffset&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef12b90a578a83b93d9c575cbc8985a7b11327d5" translate="yes" xml:space="preserve">
          <source>const notation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb950c42f7ad59870fb5bf217becc74f80c4a86" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc @property @safe bool &lt;strong id=&quot;divByZero&quot;&gt;divByZero&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d032fa7989d2f2e03491532946f3224df031f27" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc @property @safe bool &lt;strong id=&quot;inexact&quot;&gt;inexact&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903590382f718c0de9c92189963415ba70b2da34" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc @property @safe bool &lt;strong id=&quot;invalid&quot;&gt;invalid&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f796b7593b165ce547cccfe17588e3cf29207c4f" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc @property @safe bool &lt;strong id=&quot;overflow&quot;&gt;overflow&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c79eef30804c3ae547d36feb9b593ac1bb06ee9" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc @property @safe bool &lt;strong id=&quot;underflow&quot;&gt;underflow&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4bccebe579fdcc4dfb442c2616b0d37110e67c" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc @property @trusted bool &lt;strong id=&quot;blocking&quot;&gt;blocking&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb959495fecc958b59413aa545855e2478038028" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc @property long &lt;strong id=&quot;total&quot;&gt;total&lt;/strong&gt;(string units)()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e8707bf81c15a4200b2d470812e415b96dd8e0" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc @property uint &lt;strong id=&quot;fileAttributes&quot;&gt;fileAttributes&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04926aa28b98bf834e6450efaa36d3667a774e1e" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc @safe Duration &lt;strong id=&quot;peek&quot;&gt;peek&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9c5081c07ec103abbcb4774bbddf46f7301bee" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc Duration &lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;(string op)(long value)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04befef8b459dd71e6ea2903568d91dbba3b019c" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc Duration &lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;(string op, D)(D rhs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c283fb14cf09bbb6319b2d9b78628acbbfff8010" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc Duration &lt;strong id=&quot;opBinaryRight&quot;&gt;opBinaryRight&lt;/strong&gt;(string op)(long value)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9944038059685496fec92d8accd882ca24e4ae0" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc Duration &lt;strong id=&quot;opBinaryRight&quot;&gt;opBinaryRight&lt;/strong&gt;(string op, D)(D lhs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021d64b6915cb91e522d297b54d977c27805451d" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc Duration &lt;strong id=&quot;opUnary&quot;&gt;opUnary&lt;/strong&gt;(string op)()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e2c9a252dd5b1b5c4d0d75a6cad7f6ca738cc4" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc TickDuration &lt;strong id=&quot;opCast&quot;&gt;opCast&lt;/strong&gt;(T)()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ff9ecb6bdd4d8bb1e50ac8b737c2be45626792" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc auto &lt;strong id=&quot;split&quot;&gt;split&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79511f3b44644682e527bd775c61ddd92ca2d9f4" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc bool &lt;strong id=&quot;isSpecial&quot;&gt;isSpecial&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97ad5d45f1dbc71f9c430a4d7bb1c6f6419023a" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc bool &lt;strong id=&quot;opCast&quot;&gt;opCast&lt;/strong&gt;(T : bool)();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d624dd85dacd4bff18f6dda8324eca632710627" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc const(char)* &lt;strong id=&quot;what&quot;&gt;what&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3891b70328364e460e2941f9452e7f1e8c12f3" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc long &lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;(string op)(Duration rhs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65bfbbcfa63c196122365bebc8c57dbf63771c17" translate="yes" xml:space="preserve">
          <source>const nothrow @nogc void &lt;strong id=&quot;split&quot;&gt;split&lt;/strong&gt;(Args...)(out Args args)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e42526592f4dfe9dd27da7c1eb9fd7e294be149" translate="yes" xml:space="preserve">
          <source>const nothrow @property @safe bool &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee2e316d26824153eec549cf28b01981acdfa54" translate="yes" xml:space="preserve">
          <source>const nothrow @property @safe bool &lt;strong id=&quot;hasDST&quot;&gt;hasDST&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ca203955d7df43d2f829599db65c1e2cf56a00" translate="yes" xml:space="preserve">
          <source>const nothrow @property @safe int &lt;strong id=&quot;whichPattern&quot;&gt;whichPattern&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c8687bd3326cfad1d7e877186adb1961ea0d671" translate="yes" xml:space="preserve">
          <source>const nothrow @property @safe size_t &lt;strong id=&quot;workerIndex&quot;&gt;workerIndex&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39107b1ca7410159c86d8f49d086997a68db3d3" translate="yes" xml:space="preserve">
          <source>const nothrow @property @safe string &lt;strong id=&quot;dstName&quot;&gt;dstName&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d925554695d0ab7c111b0ffb0e7fe34977e8f64" translate="yes" xml:space="preserve">
          <source>const nothrow @property @safe string &lt;strong id=&quot;name&quot;&gt;name&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6257cfa06963663183cea47231242985e4720a90" translate="yes" xml:space="preserve">
          <source>const nothrow @property @safe string &lt;strong id=&quot;stdName&quot;&gt;stdName&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9223ce9f9668c19d7124da4088fee521fbf2e125" translate="yes" xml:space="preserve">
          <source>const nothrow @property @trusted TypeInfo &lt;strong id=&quot;type&quot;&gt;type&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc2c1d8f69e89eed05d4dc327cc647a5cbe659d" translate="yes" xml:space="preserve">
          <source>const nothrow @property @trusted bool &lt;strong id=&quot;hasDST&quot;&gt;hasDST&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2559ea3f6e4f359ab6996c4d6f92a6d685c12e68" translate="yes" xml:space="preserve">
          <source>const nothrow @property @trusted string &lt;strong id=&quot;dstName&quot;&gt;dstName&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b9b8f3f48ae8188685e0c8426c9e68ae8da4cd" translate="yes" xml:space="preserve">
          <source>const nothrow @property @trusted string &lt;strong id=&quot;stdName&quot;&gt;stdName&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ccd0de69ff1e4e03ca376a3e8e84948b85bf77" translate="yes" xml:space="preserve">
          <source>const nothrow @property auto &lt;strong id=&quot;bitsSet&quot;&gt;bitsSet&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f367b938ac44359c62e79d0eef508d153f84578" translate="yes" xml:space="preserve">
          <source>const nothrow @property bool &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be26b4dc2ac7733efa7e55f49284033e695b3e69" translate="yes" xml:space="preserve">
          <source>const nothrow @property scope @safe DayOfWeek &lt;strong id=&quot;dayOfWeek&quot;&gt;dayOfWeek&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f0e5ea74422a6b1144e857ba81849d3c17160b" translate="yes" xml:space="preserve">
          <source>const nothrow @property scope @safe Duration &lt;strong id=&quot;fracSecs&quot;&gt;fracSecs&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f26a04e8fada9e85d82cac832f30a83dd444a5" translate="yes" xml:space="preserve">
          <source>const nothrow @property scope @safe Duration &lt;strong id=&quot;utcOffset&quot;&gt;utcOffset&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405598f745f35fd5ac3fd6d6b7a32b8bbfd88bcf" translate="yes" xml:space="preserve">
          <source>const nothrow @property scope @safe Month &lt;strong id=&quot;month&quot;&gt;month&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f730d758c0af182661d0f6238c099e3c2fb70b" translate="yes" xml:space="preserve">
          <source>const nothrow @property scope @safe SysTime &lt;strong id=&quot;endOfMonth&quot;&gt;endOfMonth&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4640c607514c9af4b246155cd0bbd43daf477e50" translate="yes" xml:space="preserve">
          <source>const nothrow @property scope @safe bool &lt;strong id=&quot;dstInEffect&quot;&gt;dstInEffect&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b538fa6df7fc51e2d004a54c86c62da99714857f" translate="yes" xml:space="preserve">
          <source>const nothrow @property scope @safe bool &lt;strong id=&quot;isAD&quot;&gt;isAD&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196194f33761d10da587dc9060bde31e47625909" translate="yes" xml:space="preserve">
          <source>const nothrow @property scope @safe bool &lt;strong id=&quot;isLeapYear&quot;&gt;isLeapYear&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa7e0ef8a43e7a75207c5d30c371be9b9540e9bd" translate="yes" xml:space="preserve">
          <source>const nothrow @property scope @safe int &lt;strong id=&quot;dayOfGregorianCal&quot;&gt;dayOfGregorianCal&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b09449133b377a08bccbe3e446f8b49417daf67" translate="yes" xml:space="preserve">
          <source>const nothrow @property scope @safe long &lt;strong id=&quot;julianDay&quot;&gt;julianDay&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3737a6275f8ef2dd046791b0fb6c085f0e6e86" translate="yes" xml:space="preserve">
          <source>const nothrow @property scope @safe long &lt;strong id=&quot;modJulianDay&quot;&gt;modJulianDay&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8160818945a5da287b045f4b286b96eb2461d1f2" translate="yes" xml:space="preserve">
          <source>const nothrow @property scope @safe short &lt;strong id=&quot;year&quot;&gt;year&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e111ab607557ae0abb632fc5932818c748a130df" translate="yes" xml:space="preserve">
          <source>const nothrow @property scope @safe ubyte &lt;strong id=&quot;day&quot;&gt;day&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c1dfd96406292147267c2df9381d82b47ca4e5" translate="yes" xml:space="preserve">
          <source>const nothrow @property scope @safe ubyte &lt;strong id=&quot;daysInMonth&quot;&gt;daysInMonth&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49caa5527976293a8f1747638cafebd8c320244" translate="yes" xml:space="preserve">
          <source>const nothrow @property scope @safe ubyte &lt;strong id=&quot;hour&quot;&gt;hour&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="defbda980132777c291c84d57059be6b3b345626" translate="yes" xml:space="preserve">
          <source>const nothrow @property scope @safe ubyte &lt;strong id=&quot;isoWeek&quot;&gt;isoWeek&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b71384aab30a68d4d9338af3afd0099ecd9f48c" translate="yes" xml:space="preserve">
          <source>const nothrow @property scope @safe ubyte &lt;strong id=&quot;minute&quot;&gt;minute&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6c47ddf8bdba4e2584f39608946fc79658afb8" translate="yes" xml:space="preserve">
          <source>const nothrow @property scope @safe ubyte &lt;strong id=&quot;second&quot;&gt;second&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738c0444ff9628a7b39084009e1bf376818b77c8" translate="yes" xml:space="preserve">
          <source>const nothrow @property scope @safe ushort &lt;strong id=&quot;dayOfYear&quot;&gt;dayOfYear&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452aea73f8044ccfcb1dffbb65286beec81ea6a5" translate="yes" xml:space="preserve">
          <source>const nothrow @safe Duration &lt;strong id=&quot;utcOffsetAt&quot;&gt;utcOffsetAt&lt;/strong&gt;(long stdTime);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9eb5f0b4806d6c72701df5bb15f9321d9975be" translate="yes" xml:space="preserve">
          <source>const nothrow @safe bool &lt;strong id=&quot;dstInEffect&quot;&gt;dstInEffect&lt;/strong&gt;(long stdTime);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff474203c67acaf49816e98f9aaf2e82648b5e82" translate="yes" xml:space="preserve">
          <source>const nothrow @safe bool &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c06c7c35d0781b31cab827cd739b5bb487f1c3" translate="yes" xml:space="preserve">
          <source>const nothrow @safe bool &lt;strong id=&quot;opCast&quot;&gt;opCast&lt;/strong&gt;(T : bool)();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec4a6fe20a681d01cccc431d4ebb2e304b6dce1" translate="yes" xml:space="preserve">
          <source>const nothrow @safe const(T)* &lt;strong id=&quot;c_str&quot;&gt;c_str&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7fe2b1bf185a40d62f1fa837108dc8c26ceb72b" translate="yes" xml:space="preserve">
          <source>const nothrow @safe long &lt;strong id=&quot;tzToUTC&quot;&gt;tzToUTC&lt;/strong&gt;(long adjTime);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ace74e4033d10e50ab8a1a868a502cde119d049" translate="yes" xml:space="preserve">
          <source>const nothrow @safe long &lt;strong id=&quot;utcToTZ&quot;&gt;utcToTZ&lt;/strong&gt;(long stdTime);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914422df6722c1fc38e46a17b04855b84eec0ffc" translate="yes" xml:space="preserve">
          <source>const nothrow @safe size_t &lt;strong id=&quot;toHash&quot;&gt;toHash&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6fbb64a0f12c1081aa58a0e344a20ac3fd4b19" translate="yes" xml:space="preserve">
          <source>const nothrow @safe size_type &lt;strong id=&quot;capacity&quot;&gt;capacity&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066633a6d8e690cc8fac9f61b1e2d873bc2ae689" translate="yes" xml:space="preserve">
          <source>const nothrow @safe size_type &lt;strong id=&quot;max_size&quot;&gt;max_size&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4025fc3f2e516e628c6ac9f2b55f9d924418ee2" translate="yes" xml:space="preserve">
          <source>const nothrow @safe size_type &lt;strong id=&quot;size&quot;&gt;size&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a182abc9ae3683bb753ad02c62db95236c7765f" translate="yes" xml:space="preserve">
          <source>const nothrow @safe string &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3f25f7362ee7ca3a7a85a4127d0f4498d45532" translate="yes" xml:space="preserve">
          <source>const nothrow @trusted bool &lt;strong id=&quot;dstInEffect&quot;&gt;dstInEffect&lt;/strong&gt;(long stdTime);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af44e91aa2db643d9e9588e9f45325d5c6f249b4" translate="yes" xml:space="preserve">
          <source>const nothrow @trusted long &lt;strong id=&quot;tzToUTC&quot;&gt;tzToUTC&lt;/strong&gt;(long adjTime);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4898ab1b3fb3518534c21ebce16f0f3000e1425" translate="yes" xml:space="preserve">
          <source>const nothrow @trusted long &lt;strong id=&quot;utcToTZ&quot;&gt;utcToTZ&lt;/strong&gt;(long stdTime);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b728dc328c52c0001dc73b09da1ff4fe46171b" translate="yes" xml:space="preserve">
          <source>const nothrow @trusted size_t &lt;strong id=&quot;getHash&quot;&gt;getHash&lt;/strong&gt;(scope const void* p);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0930b78a884d4df6f0cfd635205a9a3eaa11d8d" translate="yes" xml:space="preserve">
          <source>const nothrow NegInfInterval &lt;strong id=&quot;intersection&quot;&gt;intersection&lt;/strong&gt;(scope const NegInfInterval interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e675f7e130ccb228ccaeef13bb0d307568d3dfa8" translate="yes" xml:space="preserve">
          <source>const nothrow scope @safe Date &lt;strong id=&quot;opCast&quot;&gt;opCast&lt;/strong&gt;(T)()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a117a0093a136a670fa15d5c5977c6bf1948be53" translate="yes" xml:space="preserve">
          <source>const nothrow scope @safe DateTime &lt;strong id=&quot;opCast&quot;&gt;opCast&lt;/strong&gt;(T)()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82009a04ac37f68c081db6a12228cbea80e7c5ce" translate="yes" xml:space="preserve">
          <source>const nothrow scope @safe TimeOfDay &lt;strong id=&quot;opCast&quot;&gt;opCast&lt;/strong&gt;(T)()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e206fa499b3ea5f60c60ad024264634f36c7e5" translate="yes" xml:space="preserve">
          <source>const nothrow scope @safe int &lt;strong id=&quot;diffMonths&quot;&gt;diffMonths&lt;/strong&gt;(scope SysTime rhs);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a3e2e358f7b2775f49d46987777951ed8d5b6c" translate="yes" xml:space="preserve">
          <source>const nothrow scope @safe string &lt;strong id=&quot;toISOExtString&quot;&gt;toISOExtString&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5d5b690c44e1083eb7232df333deb3f31ceb4d" translate="yes" xml:space="preserve">
          <source>const nothrow scope @safe string &lt;strong id=&quot;toISOString&quot;&gt;toISOString&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4ce8242cd6b6c52531915953f663296b2885fd" translate="yes" xml:space="preserve">
          <source>const nothrow scope @safe string &lt;strong id=&quot;toSimpleString&quot;&gt;toSimpleString&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d1648b9a7815daf48897090a7df638349fcae5" translate="yes" xml:space="preserve">
          <source>const nothrow scope @safe string &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d7f1e62aac506f95222290afb92d719b82f40d" translate="yes" xml:space="preserve">
          <source>const nothrow scope @safe tm &lt;strong id=&quot;toTM&quot;&gt;toTM&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f68efc7de5973532b9d8cf7d670af99c80bb90e" translate="yes" xml:space="preserve">
          <source>const nothrow scope size_t &lt;strong id=&quot;toHash&quot;&gt;toHash&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9cd32cdbe8e9ab26a86608953411af83af5b4a" translate="yes" xml:space="preserve">
          <source>const nothrow string &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfbaf0402e3d7e9e2839885f3a7318cd56c76e3d" translate="yes" xml:space="preserve">
          <source>const pure @nogc bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;()(auto ref const BigInt y);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9874c05176f979652358b3481d4d7ce1029022d1" translate="yes" xml:space="preserve">
          <source>const pure @property @safe bool &lt;strong id=&quot;boolean&quot;&gt;boolean&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5984e40c55188ef3b93273d4f9ef2ad12d705e" translate="yes" xml:space="preserve">
          <source>const pure @property @safe double &lt;strong id=&quot;floating&quot;&gt;floating&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f55a39f11714fb3ab4de3505b187f40fb34960f" translate="yes" xml:space="preserve">
          <source>const pure @property @safe long &lt;strong id=&quot;integer&quot;&gt;integer&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc061f980606717de4975161c9c1822c1826ba33" translate="yes" xml:space="preserve">
          <source>const pure @property @safe short &lt;strong id=&quot;yearBC&quot;&gt;yearBC&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4599dfe9af8c4fd1add5f6d5be61605bda0d6767" translate="yes" xml:space="preserve">
          <source>const pure @property @safe ulong &lt;strong id=&quot;uinteger&quot;&gt;uinteger&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1896ea7eeeebdf534a14a00917afd14268c7d5c8" translate="yes" xml:space="preserve">
          <source>const pure @property @safe ushort &lt;strong id=&quot;yearBC&quot;&gt;yearBC&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0065394e7c4fd9d55062ee7be0500ab025c7e228" translate="yes" xml:space="preserve">
          <source>const pure @property @trusted bool &lt;strong id=&quot;eof&quot;&gt;eof&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a066130d905650704fe0c3de7d7438608cdeab" translate="yes" xml:space="preserve">
          <source>const pure @property @trusted string &lt;strong id=&quot;str&quot;&gt;str&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27ba113d0e99ca3f03d66d0ed39c4993132a8a0" translate="yes" xml:space="preserve">
          <source>const pure @property TP &lt;strong id=&quot;front&quot;&gt;front&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae9f88cf11e280574e14cc7358608ef8c899a973" translate="yes" xml:space="preserve">
          <source>const pure @safe TickDuration &lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;(string op, T)(T value)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf50e92edbea4f5843f32b7070500fb1a7c24b34" translate="yes" xml:space="preserve">
          <source>const pure @safe string &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838c576f8ab51edf0c1d8ea4dfd16efc050b548e" translate="yes" xml:space="preserve">
          <source>const pure Interval &lt;strong id=&quot;span&quot;&gt;span&lt;/strong&gt;(scope const Interval interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b11d99b8165e59f3c7234d11445edee910d36147" translate="yes" xml:space="preserve">
          <source>const pure NegInfInterval &lt;strong id=&quot;span&quot;&gt;span&lt;/strong&gt;(scope const Interval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b9388b6dbf66412648ac79effd78fb22bde90d" translate="yes" xml:space="preserve">
          <source>const pure NegInfInterval!TP &lt;strong id=&quot;span&quot;&gt;span&lt;/strong&gt;(scope const NegInfInterval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a38c4bf01ff467a8b9856e85845d41011650903" translate="yes" xml:space="preserve">
          <source>const pure PosInfInterval &lt;strong id=&quot;span&quot;&gt;span&lt;/strong&gt;(scope const Interval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c1e76d27ee6153501b355a85b347d15f93a92e" translate="yes" xml:space="preserve">
          <source>const pure PosInfInterval!TP &lt;strong id=&quot;span&quot;&gt;span&lt;/strong&gt;(scope const PosInfInterval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a128a091aec6dccf993cdcaf5aed84bde704c2c" translate="yes" xml:space="preserve">
          <source>const pure T &lt;strong id=&quot;opCast&quot;&gt;opCast&lt;/strong&gt;(T : ulong)();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b955c432629ffe093c7c37545f52cbc6a76f8910" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;contains&quot;&gt;contains&lt;/strong&gt;(scope const Interval interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8dd3ac70c537b7f2fcb6a09cddf2d2c11dff40a" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;contains&quot;&gt;contains&lt;/strong&gt;(scope const Interval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd477a6d0e1cd32602dfeb7da17cf1ca58b27f07" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;contains&quot;&gt;contains&lt;/strong&gt;(scope const NegInfInterval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54db1d12d1e9e8b2758b3ce970d72f9e00623c1f" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;contains&quot;&gt;contains&lt;/strong&gt;(scope const PosInfInterval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72bbed6ac1508a1de24f4d6c0aa47c3a22abc237" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;contains&quot;&gt;contains&lt;/strong&gt;(scope const TP timePoint);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d706eeeb21ae6e74cd75355eb5c10b3554ebd52" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;intersects&quot;&gt;intersects&lt;/strong&gt;(scope const Interval interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7babad1e01dda32251882fb0c86c6ee2402606f9" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;intersects&quot;&gt;intersects&lt;/strong&gt;(scope const Interval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caeb51a02c4f19d4b6732041cfca411bda5790ff" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;intersects&quot;&gt;intersects&lt;/strong&gt;(scope const NegInfInterval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582439f1da0952b66f0cb9163019e3aaaead5e22" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;intersects&quot;&gt;intersects&lt;/strong&gt;(scope const PosInfInterval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e614d6af273e21ab440130f9cb9e3d1a4084d721" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;isAdjacent&quot;&gt;isAdjacent&lt;/strong&gt;(scope const Interval interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e4ce22cc7c10e3de1477ef0f934946975e36b8" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;isAdjacent&quot;&gt;isAdjacent&lt;/strong&gt;(scope const Interval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce44ae7dd0faaa567bbb02f5f5a6400f737d3fe" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;isAdjacent&quot;&gt;isAdjacent&lt;/strong&gt;(scope const NegInfInterval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80c47e02ab49b60dffd6f5b793b225dc4518a7f" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;isAdjacent&quot;&gt;isAdjacent&lt;/strong&gt;(scope const PosInfInterval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e02d048d4f59795cd04410aa1683608362a7cb3" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;isAfter&quot;&gt;isAfter&lt;/strong&gt;(scope const Interval interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be152626dac94fa0352531194adf6cc47c80752" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;isAfter&quot;&gt;isAfter&lt;/strong&gt;(scope const Interval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d97b5a75f134f00a1eb03549305007758c2df35" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;isAfter&quot;&gt;isAfter&lt;/strong&gt;(scope const NegInfInterval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afde0313241618a625cdef112de8a1444f0e2ce0" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;isAfter&quot;&gt;isAfter&lt;/strong&gt;(scope const PosInfInterval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe0731529f512cb6194395f626cc278f5641a9c" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;isAfter&quot;&gt;isAfter&lt;/strong&gt;(scope const TP timePoint);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fbbef7c48d468e963c74edbd5276bd8f8d4565b" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;isBefore&quot;&gt;isBefore&lt;/strong&gt;(scope const Interval interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e74c8d7d77bcee687295c482d1e6a294c2a93a6" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;isBefore&quot;&gt;isBefore&lt;/strong&gt;(scope const Interval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f66201a32eece02d4da4578f7b4d1d8983b1fe" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;isBefore&quot;&gt;isBefore&lt;/strong&gt;(scope const NegInfInterval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4cb72e9323d95c14d9ef3da88a3a041c52e042" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;isBefore&quot;&gt;isBefore&lt;/strong&gt;(scope const PosInfInterval!TP interval);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899721dda8d1f83288e3a64707894d1b6d7de5d6" translate="yes" xml:space="preserve">
          <source>const pure bool &lt;strong id=&quot;isBefore&quot;&gt;isBefore&lt;/strong&gt;(scope const TP timePoint);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee144abab8a49cf112654d2a053b9506d1a570ef" translate="yes" xml:space="preserve">
          <source>const pure dchar &lt;strong id=&quot;getCodeUnit&quot;&gt;getCodeUnit&lt;/strong&gt;(size_t i);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264de55aab6a48aff48977c0d617a63f4d9e0c55" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe AddressFamily &lt;strong id=&quot;addressFamily&quot;&gt;addressFamily&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42e5498ecf4f6be10e45befb7e8323af3097882" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe CompressionMethod &lt;strong id=&quot;compressionMethod&quot;&gt;compressionMethod&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b4474dfbd0fc3a4ed04d363813feaa01351495" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe Date &lt;strong id=&quot;date&quot;&gt;date&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d39ee7f063012bb4eb6211742d774b275aafa6e" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe DayOfWeek &lt;strong id=&quot;dayOfWeek&quot;&gt;dayOfWeek&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079f3eca60b3808ffecbfcad582e1745c6f9962f" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe DosFileTime &lt;strong id=&quot;time&quot;&gt;time&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0226d720919e185f8fb4b32a576b3a6f245f2dfc" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe EmailStatusCode &lt;strong id=&quot;statusCode&quot;&gt;statusCode&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61227776179958aa9fd53049979815dde71313d8" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe JSONType &lt;strong id=&quot;type&quot;&gt;type&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01420f35fa5a2d44398a4de436b3596544b2611" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe Month &lt;strong id=&quot;month&quot;&gt;month&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7430761d92b0c5fc2dca6b03310a5a2a51493d09" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe TimeOfDay &lt;strong id=&quot;timeOfDay&quot;&gt;timeOfDay&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf669a6fc8f50b8709a8469782649dbb27d4c70" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe UIntType &lt;strong id=&quot;front&quot;&gt;front&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a914e3e428bd6f6adf337a60b9f52cc73ee2fea" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe Variant &lt;strong id=&quot;variant&quot;&gt;variant&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58378e9806f3c9079ab3da2120275f057b9086f" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe Version &lt;strong id=&quot;uuidVersion&quot;&gt;uuidVersion&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c65f5cfb317102ddefbc0f5bcd947ec99ba842" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe bool &lt;strong id=&quot;isAD&quot;&gt;isAD&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b7642d3277e2b0f70498565681f4bb40bfe970" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe bool &lt;strong id=&quot;isEmpty&quot;&gt;isEmpty&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807d9f6b3b59a104038f9d39969a09a82e8148e9" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe bool &lt;strong id=&quot;isEnd&quot;&gt;isEnd&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f22e181be6950edb1dac3eae154ed65d81bf86" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe bool &lt;strong id=&quot;isInitialized&quot;&gt;isInitialized&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37439954c52882137783d9f0a84a5148cb03e63e" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe bool &lt;strong id=&quot;isLeapYear&quot;&gt;isLeapYear&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d6e1f008a7c790fde9908fdbd0d620c2caf588" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe bool &lt;strong id=&quot;isNegative&quot;&gt;isNegative&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0fe1be6e916cdf4007e73e7d4fc92716cf0811" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe bool &lt;strong id=&quot;isNull&quot;&gt;isNull&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7ad5483c11a8f5f2a0ce3a140dd97d39766af6" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe bool &lt;strong id=&quot;isStart&quot;&gt;isStart&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90a672dd39a1e1146ef823f7c956623729ed23f" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe bool &lt;strong id=&quot;isZip64&quot;&gt;isZip64&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f295e8fa522f75860fabe8eac7dd6c3956ef58b1" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe bool &lt;strong id=&quot;running&quot;&gt;running&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5b16b0da918ca498aec32e70ba6daec7a8a9ff" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe bool &lt;strong id=&quot;valid&quot;&gt;valid&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396b76062cc3840da60940d344f4b4ccdf44845b" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe const(Tag) &lt;strong id=&quot;tag&quot;&gt;tag&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340778e2f3420c3fc9a32609beefdb8f860a64ed" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe immutable(void)* &lt;strong id=&quot;rtInfo&quot;&gt;rtInfo&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781f4bd9a9819eece20e4035242fae65a4ad0958" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe int &lt;strong id=&quot;dayOfGregorianCal&quot;&gt;dayOfGregorianCal&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd4e309b8002a944050e1072f391396c1bc63f5" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe long &lt;strong id=&quot;hnsecs&quot;&gt;hnsecs&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cebdb0c8d206ce4ffef4cbbc020ba0befaee0a8d" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe long &lt;strong id=&quot;julianDay&quot;&gt;julianDay&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21aa06e4b0b90fb18c472c01be229555bf8f1da9" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe long &lt;strong id=&quot;modJulianDay&quot;&gt;modJulianDay&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d664646c09638d2c9e8560059089675eaf82f892" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe long &lt;strong id=&quot;msecs&quot;&gt;msecs&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6200fe7e4c0ce412cd300d7419d04d029f0932d" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe long &lt;strong id=&quot;nsecs&quot;&gt;nsecs&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b12edd7f3a60bc863b08b8e98cbf7e39f565a155" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe long &lt;strong id=&quot;seconds&quot;&gt;seconds&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5971672013c93aa83757dca7d13565ddf4c1a4" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe long &lt;strong id=&quot;usecs&quot;&gt;usecs&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9021e3dc4751347fc53537449761f2ece56090" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe short &lt;strong id=&quot;year&quot;&gt;year&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed43f149f91d9dc5a0e35e9156857a187e99ca4" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe size_t &lt;strong id=&quot;dim&quot;&gt;dim&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="708f68d8d31ed086199008d80ce62117fb164f7d" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe size_t &lt;strong id=&quot;length&quot;&gt;length&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6710dc09239c543d5eff3706ab2b946086e850d0" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe size_t &lt;strong id=&quot;refCount&quot;&gt;refCount&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f22ac3214ebfc89de60f38bdbbf5ca6b38c34b3" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe size_t &lt;strong id=&quot;talign&quot;&gt;talign&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf3e76fd13da0785e8dd0ae0465ce6bcfa9d3bc" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe size_t &lt;strong id=&quot;tsize&quot;&gt;tsize&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace8d8691e078cda663ec05adacc74bbd7d6e8ba" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe size_t &lt;strong id=&quot;uintLength&quot;&gt;uintLength&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c52494d766cb2f9b0fee132458be01d515a0692" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe size_t &lt;strong id=&quot;ulongLength&quot;&gt;ulongLength&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5aae51c1385f4b2ab032f751bc3e592efd61e57" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe socket_t &lt;strong id=&quot;handle&quot;&gt;handle&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568fde5c9a16bc31017ba276c66c74ecbd0fbf16" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe string &lt;strong id=&quot;domainPart&quot;&gt;domainPart&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232b3627afc91574dcc54ccf7d45353be290acd8" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe string &lt;strong id=&quot;localPart&quot;&gt;localPart&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e89e906f3b81c28a7dd7ac4a2b25a2de2ab78f" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe string &lt;strong id=&quot;status&quot;&gt;status&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0028c5a34418bc801192dc838bdbd5f3ea6a9ebb" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe typeof(this) &lt;strong id=&quot;save&quot;&gt;save&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08571ed76588d8fe7a0cb2c7e825d7630ff14d1" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe ubyte &lt;strong id=&quot;day&quot;&gt;day&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36af26ecb5c3b75da24b839f4d323d70bae79aba" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe ubyte &lt;strong id=&quot;daysInMonth&quot;&gt;daysInMonth&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cacb448864072779971c8f426aa1282a4fd907c3" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe ubyte &lt;strong id=&quot;hour&quot;&gt;hour&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0feb2c0d3a3a3378ed62ad2242a1b2d34c9c9251" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe ubyte &lt;strong id=&quot;minute&quot;&gt;minute&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f4297ff9a0a407d5ac26770559022a76817ba4" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe ubyte &lt;strong id=&quot;second&quot;&gt;second&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2521d9b8fbf22a0c52e1639772f2f7be64b4b2" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe ubyte[16] &lt;strong id=&quot;addr&quot;&gt;addr&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f309a773329eca0de91df661e8d40fecae29f83" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe uint &lt;strong id=&quot;addr&quot;&gt;addr&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c984872817788a31ac9e1311abbeb283b5a3f70" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe uint &lt;strong id=&quot;compressedSize&quot;&gt;compressedSize&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c2b40621edc40483c59eafe74f725847f1f86e7" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe uint &lt;strong id=&quot;crc32&quot;&gt;crc32&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1887e47e60a45d92f3d1ffb560d9b21295b3d11" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe uint &lt;strong id=&quot;diskNumber&quot;&gt;diskNumber&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd8b5a6311c87db6df29d0dbca602d8cf1a62bb" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe uint &lt;strong id=&quot;diskStartDir&quot;&gt;diskStartDir&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc65f725cbbd5f7315e8d9741d0618d3568db81" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe uint &lt;strong id=&quot;expandedSize&quot;&gt;expandedSize&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32dccea47468d0391c745109c7a8b12efb2125c" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe uint &lt;strong id=&quot;flags&quot;&gt;flags&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daab59bec37cecda6a58bfbec77545daeba1b3e7" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe uint &lt;strong id=&quot;index&quot;&gt;index&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c85f74ce74282f85980c3df582fecff0cb2718" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe uint &lt;strong id=&quot;max&quot;&gt;max&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfcdcae1cf7c512e26f1aeb586af75b769d1c9cc" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe uint &lt;strong id=&quot;numEntries&quot;&gt;numEntries&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971aa049f6b6035715703446c48cc2e621906dc1" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe uint &lt;strong id=&quot;totalEntries&quot;&gt;totalEntries&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408788f887df1edb601e4f1934eb98caf7fec308" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe ushort &lt;strong id=&quot;dayOfYear&quot;&gt;dayOfYear&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7c05aa93f5c27cecb8f0a1d19b490a036968210" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe ushort &lt;strong id=&quot;diskNumber&quot;&gt;diskNumber&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e021ed34d9214cdfd72458c14f8a3b7cdce492b9" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe ushort &lt;strong id=&quot;extractVersion&quot;&gt;extractVersion&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd38e631cd8e6c401b0f9376c12b94909b70328c" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @safe ushort &lt;strong id=&quot;port&quot;&gt;port&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ad569e16f4a5e782be8cc75abbfc3cc5b15213" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a60be394189b00d5b29dc03e1c2c2433d9fdb8e" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property TypeInfo_Class[] &lt;strong id=&quot;localClasses&quot;&gt;localClasses&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c101c0e50f41d45b60ad39eb0a9626409982c1e" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property immutable(ModuleInfo*)[] &lt;strong id=&quot;importedModules&quot;&gt;importedModules&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7fa1297dab5cd8151d218140227602c6e28aa53" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property long &lt;strong id=&quot;ticks&quot;&gt;ticks&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54288a63194722598b616dc56a48b06651e740e8" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property scope @safe bool &lt;strong id=&quot;isEmptyXML&quot;&gt;isEmptyXML&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05dd732fe5a3880cc297fc06d66bef7a1cf4c96c" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property string &lt;strong id=&quot;name&quot;&gt;name&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa2ce36b144f707209cf10dfe62b1d8d7f16976" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property void function() &lt;strong id=&quot;ctor&quot;&gt;ctor&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1d7818ef5d593fce3b8890e35162e8bbf048e0" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property void function() &lt;strong id=&quot;dtor&quot;&gt;dtor&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ff73ea61d48490e0c358cdf980aeca8235695f" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property void function() &lt;strong id=&quot;ictor&quot;&gt;ictor&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54e5d4ff4129d237ac3ffcb57090553f23544ed" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property void function() &lt;strong id=&quot;tlsctor&quot;&gt;tlsctor&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6300185e96fc856c40638af7906a702b8a47b2" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property void function() &lt;strong id=&quot;tlsdtor&quot;&gt;tlsdtor&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9d4024b99fc9b8f80f3493da23d59114f24f0d" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property void function() &lt;strong id=&quot;unitTest&quot;&gt;unitTest&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74e3b4b9a864e65ec85c6b47b0108b99e67a8a93" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @property void* &lt;strong id=&quot;xgetMembers&quot;&gt;xgetMembers&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f023a89369c133a8b2f3f1832753e690f472c55" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe Date &lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;(string op)(Duration duration)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb9cad1f499dadfcc5c8eec389b132c1bed1fa0" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe DateTime &lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;(string op)(Duration duration)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceba9bddd444f1ba8c13afc0c4a0878213e31ac1" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe Duration &lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;(string op)(Date rhs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e551f6baa34c012207b451fd9c2183d705dcd96" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe Duration &lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;(string op)(DateTime rhs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ad2fad7d92b5733f6158ab38d708801c5eafd5" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe Duration &lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;(string op)(TimeOfDay rhs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3da63300682c93737d5fcb12326ffc72c684b7" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe Duration &lt;strong id=&quot;opCast&quot;&gt;opCast&lt;/strong&gt;(T)()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b77544077cdc30ea569f8a310eeac44f7bafdb" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe R &lt;strong id=&quot;peek&quot;&gt;peek&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0099a69d3c71c2f62d5a1567f96eb51d4587f5" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe Ternary &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40740ee2bced663295c643b67593b6081ea1c111" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe TickDuration &lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;(string op)(TickDuration rhs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4922a8023ece29c419d5edec44b0968ccdd2aa" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe TickDuration &lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;(string op, T)(T value)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7c2eaa5a37d97f75c4f547eac4e2907e3b44ba" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe TickDuration &lt;strong id=&quot;opUnary&quot;&gt;opUnary&lt;/strong&gt;(string op)()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0bddb133a43a53ddbdbf3a64486a550d77708a" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe TimeOfDay &lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;(string op)(Duration duration)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdac66e4b0058bb97c02dea5c682392cd3932a03" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe bool &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108c1d4466265fc04764dea6133e6185a8b538c1" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe bool &lt;strong id=&quot;isCovariant&quot;&gt;isCovariant&lt;/strong&gt;(bool returnByRef, const Parameter p);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c667caee7632805355897657894768a5ba2bf5" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;(const StopWatch rhs);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32c961e86d4f4345e12a7c618e34adabc0921f0" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;(in UUID s);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07075a4f90d7df828f2e7c865592f95dae2db2e7" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;(ref UUID s);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a373b07ef4701ab7da6614596acdcd0f2a215d" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;(ref const StopWatch rhs);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4588411dea486d368119a4d76c6f6d76996e2291" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe int &lt;strong id=&quot;diffMonths&quot;&gt;diffMonths&lt;/strong&gt;(Date rhs);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d7ae77560ae71faa0a3d029e96c3ca860b69de" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe int &lt;strong id=&quot;diffMonths&quot;&gt;diffMonths&lt;/strong&gt;(DateTime rhs);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d052cc253843ba2f441df4066b26efd1ef40500" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe int &lt;strong id=&quot;isSet&quot;&gt;isSet&lt;/strong&gt;(Socket s);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe240a53fe4b20a46c476c1bb48ab19d3f98030" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;(Date rhs);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="904e89bd439aa7cb3f41f018e0e118bc81ab6436" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;(DateTime rhs);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170e3fd61db91589459993dcf64edbdd59b0e74b" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;(Duration rhs);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c7a19239e2ddc71381328410c13d852619f644" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;(TickDuration rhs);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a80b39ae20c2be1b0edfaa13b15beb596d98bf43" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;(TimeOfDay rhs);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d039e699bbd9c98a7cb086c580f3172ee010078a" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;(in UUID s);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88990c18b2cb90d0032ded852b4889777d567a74" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;(ref UUID s);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9e0d3c59dbc2b8a9c4a073b1af918ea54a3ab2" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe int &lt;strong id=&quot;toInt&quot;&gt;toInt&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d210614082e42fa23ec42665696a35e5d834d61b" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe long &lt;strong id=&quot;toLong&quot;&gt;toLong&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5669767baf0fd3a270c70ea585a4287590d3ac" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe size_t &lt;strong id=&quot;available&quot;&gt;available&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25fbd03d83df4979c7ea8bd11772df99345b921" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt;(size_t bytes);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56faef805f5c978fc8fd7e962899ae3bb360646e" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe size_t &lt;strong id=&quot;goodAllocSize&quot;&gt;goodAllocSize&lt;/strong&gt;(size_t n);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ad06bebe8d444c4a0bca5581cb90b82d4cec9e" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe size_t &lt;strong id=&quot;toHash&quot;&gt;toHash&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42fe381c3cd09c6dc10cec547c5538856a793333" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe size_t[2] &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;(size_t dim : 0)(size_t start, size_t end);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0bad0cfd115e25afd8200766f40bf20088e9da" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @safe string &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf1213ab3383caddbb6afcb1b368f691a22f53e" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @trusted Ternary &lt;strong id=&quot;owns&quot;&gt;owns&lt;/strong&gt;(const void[] b);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e5c2eaa027397b5280fa7a456468f65bb64b097" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc @trusted dchar &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt;(size_t index);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8525b01a68058fb89a0ed6fff395ae58f7b8d220" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc Duration &lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;(string op)(MonoTimeImpl rhs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deccd5ec448600f04911643033f8176f5ec809ee" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc MonoTimeImpl &lt;strong id=&quot;opBinary&quot;&gt;opBinary&lt;/strong&gt;(string op)(Duration rhs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5785cd59c80f3b6d32a99060ce6664a652b82d0" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc T &lt;strong id=&quot;opCast&quot;&gt;opCast&lt;/strong&gt;(T : bool)();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d17e7720df47c5f6211f13a9338343ea620be0" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc T &lt;strong id=&quot;opCast&quot;&gt;opCast&lt;/strong&gt;(T)()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd389d0988c21672777f22e2f972ba532b629c0" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc bool &lt;strong id=&quot;equalsExt&quot;&gt;equalsExt&lt;/strong&gt;(const(char)* ext);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0443ff85234b72aafc56308615ad9589e273ce3" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;(T)(T y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a296aa6bd172dbd93286b73f47a7b1abdbd755" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc bool &lt;strong id=&quot;opEquals&quot;&gt;opEquals&lt;/strong&gt;(ref const BitArray a2);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b4bf26cb69fd42fa5753950c69e87169b9db9e" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc bool &lt;strong id=&quot;opIndex&quot;&gt;opIndex&lt;/strong&gt;(size_t i);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1888a14458d384da1293a5248f9e31f1be37bc2b" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;(BitArray a2);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3077583716e7e255936a1bb817e5c2ffedcbdf60" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;(MonoTimeImpl rhs);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061c415653e405373f76d3034ca4d4f549a4ed0d" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;(T : BigInt)(const T y);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf150203998e96a072168d258be058982d66c02" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;(T)(T y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c560ea7eca023e5fc1dd8decdb986582b0334ee3" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc int &lt;strong id=&quot;opCmp&quot;&gt;opCmp&lt;/strong&gt;(ref const BigInt y);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4493dd37424b6b59dbb07052cc6f796f5e4334f4" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc scope @safe size_t &lt;strong id=&quot;toHash&quot;&gt;toHash&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b345bae21d17aa829d9b74aec3affbdfe87249" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc scope @safe string &lt;strong id=&quot;toString&quot;&gt;toString&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829477aa9420c50a51b63da66672acb6d0bf8d3f" translate="yes" xml:space="preserve">
          <source>const pure nothrow @nogc size_t &lt;strong id=&quot;toHash&quot;&gt;toHash&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24108e6d4e8898487baf3f42ba176c5e92341f06" translate="yes" xml:space="preserve">
          <source>const pure nothrow @property @safe Date &lt;strong id=&quot;endOfMonth&quot;&gt;endOfMonth&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb3045e2d1ab28603b7ccbd4f31a26abe542b69a" translate="yes" xml:space="preserve">
          <source>const pure nothrow @property @safe DateTime &lt;strong id=&quot;endOfMonth&quot;&gt;endOfMonth&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724a6949d942bc56a7e5eb6f7e51fa0042c9846d" translate="yes" xml:space="preserve">
          <source>const pure nothrow @property @safe Duration &lt;strong id=&quot;utcOffset&quot;&gt;utcOffset&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
