<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="elixir">
    <body>
      <group id="elixir">
        <trans-unit id="40cefae6593efa840e186678493160fb62881787" translate="yes" xml:space="preserve">
          <source>size(hash_set)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e3ffa361f4b0087619665afd4383935b69de66" translate="yes" xml:space="preserve">
          <source>size(map_set)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26be53d5499250ab0e1b73ae6bfb043f320e629" translate="yes" xml:space="preserve">
          <source>size(set)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="debc2a67f2ee488d09e596294266d5c905d1297d" translate="yes" xml:space="preserve">
          <source>sleep(timeout)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be448b2d97fe1d2571a682c290129bc69910b526" translate="yes" xml:space="preserve">
          <source>slice(enumerable)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6375f97d13b91301ebcea10e2e2aa94e5e3fbd75" translate="yes" xml:space="preserve">
          <source>slice(enumerable, index_range)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1dff732914de0a85508865e1c3562471486798a" translate="yes" xml:space="preserve">
          <source>slice(enumerable, start_index, amount)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac5d0571f125d4a5783c5480a813acae9046ca5" translate="yes" xml:space="preserve">
          <source>slice(string, range)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079729cb53d8ffc5e2763cb99c23f1c0b18d659a" translate="yes" xml:space="preserve">
          <source>slice(string, start, len)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc242f1dcf6691e88999e79db0d6985361ba366" translate="yes" xml:space="preserve">
          <source>slicing_fun()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ac38d10652fbd360b09f34a605876d0b70dcce" translate="yes" xml:space="preserve">
          <source>sort(enumerable)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5976af7aaf2ded1b9262b3c799a4a766c853dd7" translate="yes" xml:space="preserve">
          <source>sort(enumerable, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b190ea92618b30eb89bd318e00a748b4b0b201b7" translate="yes" xml:space="preserve">
          <source>sort_by(enumerable, mapper, sorter \\ &amp;amp;&amp;lt;=/2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140904d280d5df5d2fca2673d1d0eb7098ef05d6" translate="yes" xml:space="preserve">
          <source>source(regex)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a6355117ad5079819198517e652436d3bc2f07" translate="yes" xml:space="preserve">
          <source>space - Whitespace (the same as \s from PCRE 8.34)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529b8b87ad0e81d8c3a72556d116b8c405f53fcc" translate="yes" xml:space="preserve">
          <source>space(doc1, doc2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6227120ab7544133388a6529a55e3c3aa773b62a" translate="yes" xml:space="preserve">
          <source>spawn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed1f5990fa10869c24a4084d5f069edd82fbf80" translate="yes" xml:space="preserve">
          <source>spawn (1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17e4ff1e9b6955aafbef0d29b7f4d2c6bcc7dc4" translate="yes" xml:space="preserve">
          <source>spawn (3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a53d59d81a53bb66fafe5034245987add455f0" translate="yes" xml:space="preserve">
          <source>spawn(fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6798729fd0b20109c68d4f09b7fd5e37fe9e101" translate="yes" xml:space="preserve">
          <source>spawn(fun, opts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eadc1a3fd47dd8f89b8e7186ca3b8e4df8e0e115" translate="yes" xml:space="preserve">
          <source>spawn(mod, fun, args, opts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e1e32d54e634bed6fe88e29670c75576b4a3b5c" translate="yes" xml:space="preserve">
          <source>spawn(module, fun, args)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3995fcc145e762211e1e89d4a4f8bbb31f0fe74a" translate="yes" xml:space="preserve">
          <source>spawn(node, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974ca041f0eafe59bc895bcdcd955519dd57f4cf" translate="yes" xml:space="preserve">
          <source>spawn(node, fun, opts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2968df7d6058d3e0abca0de702de459c286d0e9" translate="yes" xml:space="preserve">
          <source>spawn(node, module, fun, args)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1a0d00578e8bac78d1d4a8b4df1e88665fbd21" translate="yes" xml:space="preserve">
          <source>spawn(node, module, fun, args, opts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c5d298b9d179765f0cfce2fa9affdc973a8c01" translate="yes" xml:space="preserve">
          <source>spawn_executable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29665145c2b249dd2f44a6f66335abae21f554b0" translate="yes" xml:space="preserve">
          <source>spawn_link (1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4128e5ddf1c94a7ea9ddcf47e97f6e48367c7ca1" translate="yes" xml:space="preserve">
          <source>spawn_link (3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416590810f85451d7cc55cd2f8abd290c124fef8" translate="yes" xml:space="preserve">
          <source>spawn_link(fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66bb891221d5abfcf06b1d44d41016225ccf0d07" translate="yes" xml:space="preserve">
          <source>spawn_link(module, fun, args)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb794f701e10c70d77254badb029f4c1a1f2b623" translate="yes" xml:space="preserve">
          <source>spawn_link(node, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69337aa081ba4284b869514e5875e6193ecb61de" translate="yes" xml:space="preserve">
          <source>spawn_link(node, module, fun, args)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb138f52998ac509077fd2bb1097f5247c6ca273" translate="yes" xml:space="preserve">
          <source>spawn_monitor (1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c4c15eb8204a59377df6775d421ceadca1b175" translate="yes" xml:space="preserve">
          <source>spawn_monitor (3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6615d7734c430d63d134a7c6d3b74ecd5db92de1" translate="yes" xml:space="preserve">
          <source>spawn_monitor(fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c28aa7f4bab493756dacac5c702e39af0c65a9" translate="yes" xml:space="preserve">
          <source>spawn_monitor(module, fun, args)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfa78ee3bb0236e9b25f5f6d189d2e1cc31def8" translate="yes" xml:space="preserve">
          <source>spawn_opt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8307c17bbd5b8c1aff838c300773f1dbf1c7c7bc" translate="yes" xml:space="preserve">
          <source>spawn_opts()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d7e9c0406f2e8903172757ce954411bf89332b0" translate="yes" xml:space="preserve">
          <source>spec()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9f2a49b66b1244fe5b5d5e0fbffcdaccee3a86" translate="yes" xml:space="preserve">
          <source>spec(app)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4d77a125e4cb84a4c4fb57a666b244716b7936" translate="yes" xml:space="preserve">
          <source>spec(app, key)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6084f6129c1905d324dfd84233f701953670c78c" translate="yes" xml:space="preserve">
          <source>spec_to_callback(module, definition)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330a1a25db6764406479b91a6cfb5f3391e70631" translate="yes" xml:space="preserve">
          <source>special_form?(name, arity)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6267611dc84b99904865b8ba1339be343c0558a" translate="yes" xml:space="preserve">
          <source>split(binary)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ab6ff8ed87b96d3fb89a9135e2cb059114c027" translate="yes" xml:space="preserve">
          <source>split(dict, keys)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fbd0384b65e6f105cc6bced627e8ff19b436243" translate="yes" xml:space="preserve">
          <source>split(enumerable, count)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e1631404b4f96b467eb6d3187af4e7c817b97a" translate="yes" xml:space="preserve">
          <source>split(keywords, keys)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5c1d32327032e7338e256336e35490cadf60f5" translate="yes" xml:space="preserve">
          <source>split(map, keys)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8727444f343ff7548777ecb17087aa277bc21b2" translate="yes" xml:space="preserve">
          <source>split(module)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a945d7a6a2d9e54db4a1656335950f7633e37c2" translate="yes" xml:space="preserve">
          <source>split(path)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc685148ef665a1ca58f063dc3aa435f299369f" translate="yes" xml:space="preserve">
          <source>split(regex, string, options \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c787e819468d88843bd56e1d796afbb185865cb" translate="yes" xml:space="preserve">
          <source>split(string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e12ee94bd858d3f556e8d85f010570238147621b" translate="yes" xml:space="preserve">
          <source>split(string, pattern, options \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b9655599bee5a08704bc80bdfa68b56640f855" translate="yes" xml:space="preserve">
          <source>split_at(string, position)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf60e8c75692aa943b2ef6f5650c5b05f77b27f" translate="yes" xml:space="preserve">
          <source>split_while(enumerable, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49cf2c5b0458ac68a6bd433c29b57eabdc3b746c" translate="yes" xml:space="preserve">
          <source>split_with(enumerable, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62960402dc96daf8de2532370d225c65e523810a" translate="yes" xml:space="preserve">
          <source>splitter(string, pattern, options \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae31950df8db0551b2e4a0648d57bc0be1ad27b" translate="yes" xml:space="preserve">
          <source>stacktrace()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528b02252aecee3df852f85922d6776a8697addd" translate="yes" xml:space="preserve">
          <source>stacktrace(env)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992fc48a7f269ed4eee3005a4c643f0b9b1f709f" translate="yes" xml:space="preserve">
          <source>stacktrace_entry()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62642c4a4c28db3c0850135ab14b44b6e90fa5c3" translate="yes" xml:space="preserve">
          <source>start(app, type \\ :temporary)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ae709b465acb597234613d2a3f409f42c55223" translate="yes" xml:space="preserve">
          <source>start(fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490a125bbf81c63ae994bad622fd13bcc9fce3eb" translate="yes" xml:space="preserve">
          <source>start(fun, options \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72b54cecfa71ddcd8270f0b959e75a35af5c401" translate="yes" xml:space="preserve">
          <source>start(module, fun, args, options \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8d7b238b706bb7527ed2ec7a846a5bd5217993" translate="yes" xml:space="preserve">
          <source>start(module, function_name, args)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b3262ac38e2915421fdf432edcd9427c9008d1" translate="yes" xml:space="preserve">
          <source>start(module, init_arg, options \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6953c30b7e597669d73f75767368ea5d85cfb715" translate="yes" xml:space="preserve">
          <source>start(name, type \\ :longnames, tick_time \\ 15000)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efec4630f6cba718554be0c51615e72a1f9d07f9" translate="yes" xml:space="preserve">
          <source>start(options \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef40e32e4a69f7f5f4e615281516cacf026f5f0c" translate="yes" xml:space="preserve">
          <source>start(start_type, start_args)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="892cff7381167a3343490daa9bab6d4e4ebe00c2" translate="yes" xml:space="preserve">
          <source>start_child(supervisor, child_spec)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d88bf3ce30cf586dc3e7700b3d8efc2c5e9c37" translate="yes" xml:space="preserve">
          <source>start_child(supervisor, fun, options \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2377950af7b40ab4cab49453ab876b7902f4ca6" translate="yes" xml:space="preserve">
          <source>start_child(supervisor, module, fun, args, options \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9a23b5c9b73b0cef58822e87a1c60e25e6b66e" translate="yes" xml:space="preserve">
          <source>start_link(children, options)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be02cf02e50d86759bf0ccf0a14c1d6a035d41a" translate="yes" xml:space="preserve">
          <source>start_link(fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8346c5edf2a505280facd7bc0163f6361ac4694" translate="yes" xml:space="preserve">
          <source>start_link(fun, options \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85196700567bbd61084ac7b6b72870f2a1cd7bf4" translate="yes" xml:space="preserve">
          <source>start_link(mod, init_arg, opts \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f473ab5f53142ecb631cc2d831a0c815e3f9b92" translate="yes" xml:space="preserve">
          <source>start_link(module, fun, args, options \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd74cfab1431ca634d9c51ee9b756a20036f520f" translate="yes" xml:space="preserve">
          <source>start_link(module, function_name, args)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ceccc17fc425826992e2c29d9d86bb0080cb627" translate="yes" xml:space="preserve">
          <source>start_link(module, init_arg, options \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="742ddf127ee26440ffa841a9fe598e297ab6544e" translate="yes" xml:space="preserve">
          <source>start_link(options \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f4381ac374961e017b6bef6091fde9147b8f3f" translate="yes" xml:space="preserve">
          <source>start_link(options)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc74f5ef07f3bf6360280f6d0bb79d1d844ba12" translate="yes" xml:space="preserve">
          <source>start_phase(phase, start_type, phase_args)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348650fdfba91f17f5e086a317c8b07b9e7f45bc" translate="yes" xml:space="preserve">
          <source>start_supervised!(child_spec_or_module, opts \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c4709a3ba7996f83026b2886cffa036a81f117" translate="yes" xml:space="preserve">
          <source>start_supervised(child_spec_or_module, opts \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f808bf602b2528dff9cdb9b8e20196643f8295d0" translate="yes" xml:space="preserve">
          <source>start_type()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53810d6c1fd8599f07349060a88ae9c68cf6767" translate="yes" xml:space="preserve">
          <source>started?()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcf89e592f74015f4aa1ea424104fdc043c2e52" translate="yes" xml:space="preserve">
          <source>started_applications(timeout \\ 5000)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df9cd81b1a026cca9ee58240841c463b5f92775" translate="yes" xml:space="preserve">
          <source>starts_with?(list, prefix)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0360bbae5ecaaa43715aab70419163eb33f407" translate="yes" xml:space="preserve">
          <source>starts_with?(string, prefix)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee167861f2c7fbcf065c3ab4daedd1983ba99e76" translate="yes" xml:space="preserve">
          <source>stat!(path, opts \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7c237012f86180a4c6b9371e3f66dc73310c7f" translate="yes" xml:space="preserve">
          <source>stat(path, opts \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e854983ae82498bf39f01577be31904f5d988200" translate="yes" xml:space="preserve">
          <source>stat_options()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc98d73ec8a63262f6fcf2bbc31e2f5f33f69510" translate="yes" xml:space="preserve">
          <source>state()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102cc0e17a844e434ccf94c45be2ac0a83377c70" translate="yes" xml:space="preserve">
          <source>std_offset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2391ebebb2e141a6296591ac99a4157e9c94c126" translate="yes" xml:space="preserve">
          <source>stop()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7cc3ccaac0474e517b8187f16171df47ba9858f" translate="yes" xml:space="preserve">
          <source>stop(agent, reason \\ :normal, timeout \\ :infinity)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993ef6be7b29135c640f89ad215fe2005db6dc0b" translate="yes" xml:space="preserve">
          <source>stop(app)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794d6f3006645101c7da0411c48f35506f20136e" translate="yes" xml:space="preserve">
          <source>stop(server, reason \\ :normal, timeout \\ :infinity)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0058dfcecdbe0c946529ea6795e4f12b678719b3" translate="yes" xml:space="preserve">
          <source>stop(state)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19238e01e03dc515129de030b870b0707832df89" translate="yes" xml:space="preserve">
          <source>stop(status \\ 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf66f5526903723cfbd41b8568d24c48c8367823" translate="yes" xml:space="preserve">
          <source>stop(supervisor, reason \\ :normal, timeout \\ :infinity)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e13c418657c6b58cf6fc23a315176f9a3755195" translate="yes" xml:space="preserve">
          <source>stop_supervised(id)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2151b0e4795f4f9997e365450e346d3326a754" translate="yes" xml:space="preserve">
          <source>strategy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbffaf66d55d114b54fad3c824c8cac0479277e3" translate="yes" xml:space="preserve">
          <source>stream!(path, modes \\ [], line_or_bytes \\ :line)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d083956a47a8426c9f5d0db800803c799a2ab7" translate="yes" xml:space="preserve">
          <source>stream(device, line_or_codepoints)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908a391e4047a6788c7b41f0a2f95b5e3a1abc60" translate="yes" xml:space="preserve">
          <source>stream_mode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59c5a8f4feef7f1842bac45ae9b348a4087d864" translate="yes" xml:space="preserve">
          <source>strictly boolean operators (&lt;a href=&quot;kernel#and/2&quot;&gt;&lt;code&gt;and&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel#or/2&quot;&gt;&lt;code&gt;or&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel#not/1&quot;&gt;&lt;code&gt;not&lt;/code&gt;&lt;/a&gt;). Note &lt;a href=&quot;kernel#&amp;amp;&amp;amp;/2&quot;&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel#%257C%257C/2&quot;&gt;&lt;code&gt;||&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;kernel#!/1&quot;&gt;&lt;code&gt;!&lt;/code&gt;&lt;/a&gt; sibling operators are &lt;strong&gt;not allowed&lt;/strong&gt; as they're not &lt;em&gt;strictly&lt;/em&gt; boolean - meaning they don't require arguments to be booleans</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76bd6627b39746aa892e95df2695f047468b38a3" translate="yes" xml:space="preserve">
          <source>string(string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e2e49d4e8cbfbc239d14a6339e00cbe1714d8ce" translate="yes" xml:space="preserve">
          <source>string_to_quoted!(string, opts \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bac971f0eaf70a8b7191dd5fa16152bed8561df" translate="yes" xml:space="preserve">
          <source>string_to_quoted(string, opts \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1877f3cb6e58176272997a08bddfe4f401299ac3" translate="yes" xml:space="preserve">
          <source>strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897d77694f8894f7649b22af1790ba14ebd8d0c0" translate="yes" xml:space="preserve">
          <source>strings - such as &lt;code&gt;&quot;hello&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2935072f2cacf14387a0213797b181108227a1f" translate="yes" xml:space="preserve">
          <source>struct (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3e8dabd6e5559350217ba796108f3cb1657b68" translate="yes" xml:space="preserve">
          <source>struct! (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b12b654f44c3888bffdf9203b94faee281f7a3" translate="yes" xml:space="preserve">
          <source>struct!(module, env)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13969a43107bff6f965ae4ec7c415ff2a8605ba9" translate="yes" xml:space="preserve">
          <source>struct!(struct, fields \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4bf96a87134cfbe2069e423195918209a3a3da" translate="yes" xml:space="preserve">
          <source>struct(struct, fields \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1bafc8bed458227cf42d2712755f23da5bb8e4e" translate="yes" xml:space="preserve">
          <source>subset?(map_set1, map_set2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a28f1de9d3b90802050ae1e68ec32ac1406b6c8d" translate="yes" xml:space="preserve">
          <source>subset?(set1, set2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf29b1b1d491c957f0f392fefd8b7e06fa5e06d4" translate="yes" xml:space="preserve">
          <source>suite_result()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd79c422d902b1fc505e9546780bd77eebe5aac3" translate="yes" xml:space="preserve">
          <source>sum(enumerable)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbbaacac966cf4a2292c88d21c9e152e717f1b5" translate="yes" xml:space="preserve">
          <source>sup_flags()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e009620c26bbd595baf5af3fd7c89aa91b026eeb" translate="yes" xml:space="preserve">
          <source>super (1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073a3f2ea3820a84e2dd1a8f1622e8304ad5f68b" translate="yes" xml:space="preserve">
          <source>super(args)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454643cb73607a2fd30dc3421956094cf025ee23" translate="yes" xml:space="preserve">
          <source>supervise(children, options)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e49cb29e53bc27831503c07090b79ca36ad41f" translate="yes" xml:space="preserve">
          <source>supervisor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c8dfe50468da67910ae72bdcfe8e6ed63b833c" translate="yes" xml:space="preserve">
          <source>supervisor(module, args, options \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9da87dd0f7570837d0c21d5955eebdaed583d36" translate="yes" xml:space="preserve">
          <source>syntax keywords (&lt;code&gt;fn&lt;/code&gt;, &lt;code&gt;do&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, and so on)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245fa08ad12742ab7fad26e8e1397d295fdc241d" translate="yes" xml:space="preserve">
          <source>system_time()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76528019bde266090bd7e7c1f878beeaa719b8ca" translate="yes" xml:space="preserve">
          <source>system_time(unit)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07b64e28d21d4aa70de08e7957b1ab64d477733" translate="yes" xml:space="preserve">
          <source>t()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6f3caf5bb6062ab323ba58149990b9aabfda62" translate="yes" xml:space="preserve">
          <source>t(first, last)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3984eac15d5fd57c8abfe49529a121c060a5eb6" translate="yes" xml:space="preserve">
          <source>t(term)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341c2a727a3c66e69a51ec18c975e289c6950bd0" translate="yes" xml:space="preserve">
          <source>t(value)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b1eb3a9fab109bf2f4840f0fbe6f250d5819fe3" translate="yes" xml:space="preserve">
          <source>tables and linked processes, there is no need to close the socket. Once the test process exits, the socket is automatically closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4230fbca468fc5cd0794fc5eda871de7d8ffcb" translate="yes" xml:space="preserve">
          <source>take(dict, keys)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e06ea7b0611716e9ebafe58476e441e8e190b2" translate="yes" xml:space="preserve">
          <source>take(enum, count)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf2f2d8990b4df3178a75d09f8307606db8c686" translate="yes" xml:space="preserve">
          <source>take(enumerable, amount)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff8291e8b998e68318e39d368461d73b69188e43" translate="yes" xml:space="preserve">
          <source>take(keywords, keys)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6042d7581cbc06d9c8c93afcc364347731e0635" translate="yes" xml:space="preserve">
          <source>take(map, keys)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da0afc28dcf89de604faf3cd4e7c82bbc16477c" translate="yes" xml:space="preserve">
          <source>take_every(enum, nth)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c7c8a46b7a8e25ad3b4ffc6ff6f5388b765685" translate="yes" xml:space="preserve">
          <source>take_every(enumerable, nth)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0d6bcfcfc74291556005e9e71716014bd7ef1b" translate="yes" xml:space="preserve">
          <source>take_random(enumerable, count)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee6ef999b42bfdf9889b14a11b73bebffbc8a44" translate="yes" xml:space="preserve">
          <source>take_while(enum, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99e6a948ea6cf48b2434b891ab58b571fbb7684" translate="yes" xml:space="preserve">
          <source>take_while(enumerable, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a8ff8a85e131e7f3c3553ba2ebb3d572bcf8c81" translate="yes" xml:space="preserve">
          <source>taking over the evaluator process when using &lt;a href=&quot;iex#pry/0&quot;&gt;&lt;code&gt;IEx.pry/0&lt;/code&gt;&lt;/a&gt; or setting up breakpoints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39bee0b5657cd23bd50a92f6bb5ff1c59907f2a8" translate="yes" xml:space="preserve">
          <source>target()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7e86d93714dd4e66089576aab4324d02b80006" translate="yes" xml:space="preserve">
          <source>target(target)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cbe413a8fa86f600e4c6aae30614eaca7fce293" translate="yes" xml:space="preserve">
          <source>task?(module)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7833f58537b2938c5bcf5c700514adcc02e717" translate="yes" xml:space="preserve">
          <source>task_module()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a117d3d9a6a9bae12c74112c9b783f145aedc086" translate="yes" xml:space="preserve">
          <source>task_name()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e6b6d58da5740a3e9ee58bf1a13f37b5e5f410" translate="yes" xml:space="preserve">
          <source>task_name(module)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d10bdd64eed6cf6aefd8318894131610bc8a85" translate="yes" xml:space="preserve">
          <source>terminate(reason, state)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e832e07fa587435751e78f499abb5e941125994e" translate="yes" xml:space="preserve">
          <source>terminate_child(supervisor, child_id)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa41a07bd0cfb7008082d382267e9751684a351" translate="yes" xml:space="preserve">
          <source>terminate_child(supervisor, pid)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc6b0965d446c469208562421dcfedb9a72ec78" translate="yes" xml:space="preserve">
          <source>test - contains tests (usually &lt;code&gt;.exs&lt;/code&gt; files)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b36d58b2dd919c4558dfd94c308ac002cc545608" translate="yes" xml:space="preserve">
          <source>test(message)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2476b73a6aa0237337e3c6b722181f5005e15e3c" translate="yes" xml:space="preserve">
          <source>test(message, var \\ quote do _ end, contents)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224db56848ad200bda180ea66dea671105234ad5" translate="yes" xml:space="preserve">
          <source>that does exactly that: the application environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14be09a22d682a87997164ae3a329414163e1ec3" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; terminates abnormally and logs an error; in such cases, &lt;code&gt;reason&lt;/code&gt; is &lt;code&gt;:terminate&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe13a09a4039a1d610724ce20e54401afe10a07" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; traps exits (using &lt;a href=&quot;process#flag/2&quot;&gt;&lt;code&gt;Process.flag/2&lt;/code&gt;&lt;/a&gt;) &lt;em&gt;and&lt;/em&gt; the parent process sends an exit signal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518d456a6a85f6d38f8decee7082fe9e480f61b7" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;__using__/1&lt;/code&gt; macro from the &lt;code&gt;MyModule&lt;/code&gt; module is invoked with the second argument passed to &lt;code&gt;use&lt;/code&gt; as its argument. Since &lt;code&gt;__using__/1&lt;/code&gt; is a macro, all the usual macro rules apply, and its return value should be quoted code that is then inserted where &lt;a href=&quot;#use/2&quot;&gt;&lt;code&gt;use/2&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b12cabea389fb27d425a15a9f9d9fd9af806c8f9" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;pid_or_port&lt;/code&gt; is already registered under a different &lt;code&gt;name&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8818b2a071c7d6250ea87daf7d97f8ea66944a5f" translate="yes" xml:space="preserve">
          <source>the &lt;em&gt;expected&lt;/em&gt; type of the callback return value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7792b8483025e563269b98dc9179579cf18998c9" translate="yes" xml:space="preserve">
          <source>the PID/Port is not existing locally and alive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f7a684eaa3503fb65df2a8044e54d5235f33a52" translate="yes" xml:space="preserve">
          <source>the arguments that the callback must accept (&lt;code&gt;arg :: any&lt;/code&gt; in the example)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d01cbdf9b6ccf52cab0db43181cdc333381c67" translate="yes" xml:space="preserve">
          <source>the binary contents of the module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236c3b082ff35eaa4c142cfe2fcfcc28a01f9078" translate="yes" xml:space="preserve">
          <source>the callback name (&lt;code&gt;my_fun&lt;/code&gt; or &lt;code&gt;my_macro&lt;/code&gt; in the example)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7abc28b5186b8e81ea00aefc7b0ef51b43d612c" translate="yes" xml:space="preserve">
          <source>the caller is trapping exits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf0bd2f18515ad0edb8a8a6a3be0667c5133394a" translate="yes" xml:space="preserve">
          <source>the current timestamp: a term of type &lt;a href=&quot;logger.formatter#t:time/0&quot;&gt;&lt;code&gt;Logger.Formatter.time/0&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7600eb0570861a422a6f5231a6fc1c070f55bc8" translate="yes" xml:space="preserve">
          <source>the data to be accessed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57babc3c618e3b112a51f12674860a65b01bbf8e" translate="yes" xml:space="preserve">
          <source>the directory named by the TEMP environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d939c026d17f203801bf9bb273de9e6edb1bebc" translate="yes" xml:space="preserve">
          <source>the directory named by the TMP environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b541d8ec98c7696e0315211607ecfde227dbd288" translate="yes" xml:space="preserve">
          <source>the directory named by the TMPDIR environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb7deed16b751dcb0d7f8cfa51078b42c8ee724" translate="yes" xml:space="preserve">
          <source>the first element is always the atom &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb12c3bb5af61c0f644802c7564c8e3333c86cc" translate="yes" xml:space="preserve">
          <source>the first element is an atom (or another tuple), the second element is a list of two-element tuples with metadata (such as line numbers) and the third is a list of arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e4e34555f3d631989cc3426775d6de0cc927cf" translate="yes" xml:space="preserve">
          <source>the function/macro name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c37a25c8e7c5b75e2894e5d8a2cb2bd348e19b9" translate="yes" xml:space="preserve">
          <source>the kind of the function/macro: &lt;code&gt;:def&lt;/code&gt;, &lt;code&gt;:defp&lt;/code&gt;, &lt;code&gt;:defmacro&lt;/code&gt;, or &lt;code&gt;:defmacrop&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c8216c5d571b79780c378b2bacac6638049373" translate="yes" xml:space="preserve">
          <source>the list of quoted arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c465eaec63920c84c57a0c7c037dc7621e8598c9" translate="yes" xml:space="preserve">
          <source>the list of quoted guards</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad291b23cb30ba6a9dfcdb0e036cd948136638c" translate="yes" xml:space="preserve">
          <source>the log level: an atom</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c969c24d9b4622a963bdea0cc5ef71ef01f1439b" translate="yes" xml:space="preserve">
          <source>the message: this is usually chardata, but in some cases it may not be. Since the formatting function should &lt;em&gt;never&lt;/em&gt; fail, you need to prepare for the message being anything (and do something like the &lt;code&gt;rescue&lt;/code&gt; in the example above)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c03966001e80a768fe56dce2e13797f4c97068e" translate="yes" xml:space="preserve">
          <source>the metadata: a keyword list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297d2ca2619a06ff99434c24319775ee73c450b4" translate="yes" xml:space="preserve">
          <source>the module environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cccd02a0a892ade10e42b5590405e52dd2461d7c" translate="yes" xml:space="preserve">
          <source>the module name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f72de61d1ff9c4a2521fcf9de4f55c3e898ded0" translate="yes" xml:space="preserve">
          <source>the name is already registered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da4949af6c7c860619e49a4f7534d4b4c0009b6" translate="yes" xml:space="preserve">
          <source>the operation (&lt;code&gt;:get&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12445ffea79f09d0356080ca803c6d40d9bd596" translate="yes" xml:space="preserve">
          <source>the operation (&lt;code&gt;:get_and_update&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5b451cb9320668639a26822aad2751804a83fe" translate="yes" xml:space="preserve">
          <source>the quoted function body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74acbb6209f741705f7abf87bb3706a7c336a732" translate="yes" xml:space="preserve">
          <source>the result of evaluating the contents block</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c3df772e2b96662f8825e2be9be77d4cc4259de" translate="yes" xml:space="preserve">
          <source>the task process exited with the reason &lt;code&gt;:normal&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd7a370046539aece1d5b28ee04822fca8cc976e" translate="yes" xml:space="preserve">
          <source>the test file is an Elixir script file (&lt;code&gt;.exs&lt;/code&gt;). This is convenient because we don&amp;rsquo;t need to compile test files before running them;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe56a99eacacc6540db7af1883270f3c853e58a" translate="yes" xml:space="preserve">
          <source>the test process exits with reason &lt;code&gt;:shutdown&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3713eac45f30297d84d0093481f7bd989e70a106" translate="yes" xml:space="preserve">
          <source>the test process is spawned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7014683129c9e4d4bae54777286a923dbd26502" translate="yes" xml:space="preserve">
          <source>they provide documentation (for example, tools such as &lt;a href=&quot;https://github.com/elixir-lang/ex_doc&quot;&gt;ExDoc&lt;/a&gt; show type specifications in the documentation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98db453bbb897b34aaa1996709efe7c079140498" translate="yes" xml:space="preserve">
          <source>they're used by tools such as &lt;a href=&quot;http://www.erlang.org/doc/man/dialyzer.html&quot;&gt;Dialyzer&lt;/a&gt;, that can analyze code with typespec to find type inconsistencies and possible bugs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08afbcb278abb50e7d230f938d268d71521e2d83" translate="yes" xml:space="preserve">
          <source>though not entirely equivalent because &lt;code&gt;codepoint&lt;/code&gt; comes as an integer, and the pattern won't match invalid UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d867d882b2664ee3b902c09f3b89afe9842168f" translate="yes" xml:space="preserve">
          <source>throw (1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46dcf55b620c7c6acfb337497c59d6039dc666f4" translate="yes" xml:space="preserve">
          <source>throw(term)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3cccff4051e52633d7b16c77ed060943ae92fa5" translate="yes" xml:space="preserve">
          <source>time()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66caf652058377231d26627ed573667d4439f911" translate="yes" xml:space="preserve">
          <source>time_from_day_fraction(arg)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad0254b2658c7ec03cd517e3cbec75c6c8a32c37" translate="yes" xml:space="preserve">
          <source>time_from_day_fraction(day_fraction)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29f4c3e90f0cbba679f1a2f69c5b846f4e3be96" translate="yes" xml:space="preserve">
          <source>time_offset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f156eccdc4aed2b826a0656eb5e21bcd694777" translate="yes" xml:space="preserve">
          <source>time_offset(unit)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f2dab47ad490878961b6e27bb85b3ef5b88ed91" translate="yes" xml:space="preserve">
          <source>time_to_day_fraction(hour, minute, second, arg)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a8323f6a93bd8badb390fb7ea108a0b2c42178" translate="yes" xml:space="preserve">
          <source>time_to_day_fraction(hour, minute, second, microsecond)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db35609c5b05cc30858c730b96233cd2774e42a" translate="yes" xml:space="preserve">
          <source>time_to_string(hour, minute, second, microsecond)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89aad22f4fe2c8c79f709a3c14281ac2ddb1e6e8" translate="yes" xml:space="preserve">
          <source>time_to_string(hour, minute, second, microsecond, format \\ :extended)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c42c8996fa8ad6ad2f8ac3a3c7928dbcf32a38b" translate="yes" xml:space="preserve">
          <source>time_unit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ad9a3d721f24ad87255a1d51f527e45f62a7b9" translate="yes" xml:space="preserve">
          <source>time_zone()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95dab93ce315e937f0ba87be5af726c93827ac36" translate="yes" xml:space="preserve">
          <source>time_zone_database()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34e3dc793c56afbff525f31286cbedb66bbddab" translate="yes" xml:space="preserve">
          <source>time_zone_period()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15eaeade6b1a33661978cff846e66c90b9348b3" translate="yes" xml:space="preserve">
          <source>time_zone_period_from_utc_iso_days(arg1, arg2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb8451bf30614ea3ad3c19804aeeb84f939dc54" translate="yes" xml:space="preserve">
          <source>time_zone_period_limit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aea28a07be52aea6e5c62afda1cf1ae9a27b2d8" translate="yes" xml:space="preserve">
          <source>time_zone_periods_from_wall_datetime(arg1, arg2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5690deeb5be1fdd878d1b9725cca872802a5839" translate="yes" xml:space="preserve">
          <source>timer(n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d13c734196ed3ca4b75617c3e3fae4bf49ca9450" translate="yes" xml:space="preserve">
          <source>tl (1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95870ff208acb054ac0fd6a0a3c450d03223909b" translate="yes" xml:space="preserve">
          <source>tl(list)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7686cae76141d8d7a6100a53583635eb60053a" translate="yes" xml:space="preserve">
          <source>tmp_dir!()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb8c9ccd3aa65ba067f79151221be996e2d5f41" translate="yes" xml:space="preserve">
          <source>tmp_dir()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaadc730cd349c5165f352d1845dcf50170e010e" translate="yes" xml:space="preserve">
          <source>to also use &lt;code&gt;Task.start_link/1&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38580b9366eaad31abfd08fc470965c616c32dcd" translate="yes" xml:space="preserve">
          <source>to check if a module has been updated or not. If no version is specified, the version is set to the MD5 checksum of the module functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f3f438e3fd042abfc84177e4d9de2799f3a44d" translate="yes" xml:space="preserve">
          <source>to interface with Erlang records</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9546deb52daaa7cd3f907690cb49446d6ea77657" translate="yes" xml:space="preserve">
          <source>to work with short, internal data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="169ccc5eba09e4f213ee2c04236b2829673c4498" translate="yes" xml:space="preserve">
          <source>to_argv(enum, options \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872e1045bce7a247af9f12a16cb7f2c54c4fa484" translate="yes" xml:space="preserve">
          <source>to_atom(charlist)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10fd3757cfe46cb366aa4a15c5051043c196a5b9" translate="yes" xml:space="preserve">
          <source>to_atom(string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df3ee6b5d8aef840e4d5dce1d1e9d82951d27f8" translate="yes" xml:space="preserve">
          <source>to_charlist (1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e59244b7e82b46a3d716efe432d85ce8005cc9" translate="yes" xml:space="preserve">
          <source>to_charlist(atom)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db31aeb1b7eadd90c0e60a76202fb85c52805cdc" translate="yes" xml:space="preserve">
          <source>to_charlist(float)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21774a3cdb3f14d241f58214fc380a5d42cfccc0" translate="yes" xml:space="preserve">
          <source>to_charlist(integer)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51f7ca3c15a6c2b1b90a772f8b075b77a710e7d" translate="yes" xml:space="preserve">
          <source>to_charlist(integer, base)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3fadd3d6f4006f6e8644cbf0f6efe230bafc1f" translate="yes" xml:space="preserve">
          <source>to_charlist(list)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25619f491b4b20ef445f9c153f2e99d4ce950eb4" translate="yes" xml:space="preserve">
          <source>to_charlist(string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d35e76f4d20880d0d266300fcd017662d46a4f" translate="yes" xml:space="preserve">
          <source>to_charlist(term)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f351e11ded21cd293bcf16510e03125b53a3ddc7" translate="yes" xml:space="preserve">
          <source>to_date(map)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349d16d4436cc01568da97a8e5e655ad208c88d5" translate="yes" xml:space="preserve">
          <source>to_doc(term, opts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a529175d43208c535c60f92054c8d189fc05cb25" translate="yes" xml:space="preserve">
          <source>to_erl(date)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393ab8397e8c7daded592c3fdcdb07aed3ec5628" translate="yes" xml:space="preserve">
          <source>to_erl(naive_datetime)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ac324d28d5319abb83820d994c8e49b32a4150" translate="yes" xml:space="preserve">
          <source>to_erl(time)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b363fcf9127a1ed45f435f53c73bfb76110525" translate="yes" xml:space="preserve">
          <source>to_existing_atom(charlist)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf4777bb8229fc74d0b8cc442d6f9c120489afb" translate="yes" xml:space="preserve">
          <source>to_existing_atom(string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ebbeedb2bd372c69efd40bb4101ff0ccc7c15f" translate="yes" xml:space="preserve">
          <source>to_float(charlist)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63399f373042b5828bc4b99e808a195b3a1b8d61" translate="yes" xml:space="preserve">
          <source>to_float(string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aef388dc1c31278f5aeefbb68b600a09323d381" translate="yes" xml:space="preserve">
          <source>to_integer(charlist)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c107ae6d97420b0526737d50c03e6b54c0a91bb" translate="yes" xml:space="preserve">
          <source>to_integer(charlist, base)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d152c4f7f4502819ba8c6ad7e7f15211be63f1" translate="yes" xml:space="preserve">
          <source>to_integer(string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59f468ea34b759621299c701f6cceda80774bb7" translate="yes" xml:space="preserve">
          <source>to_integer(string, base)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e233e9ab8e4d0333ef89b49e901cda1c30915e8e" translate="yes" xml:space="preserve">
          <source>to_iso8601(date, format \\ :extended)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f36e42bcadf9ae62078c9d8071a6feced783a62" translate="yes" xml:space="preserve">
          <source>to_iso8601(datetime, format \\ :extended)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82cb04d18b84b89f2f01b6518fbd5666cc896670" translate="yes" xml:space="preserve">
          <source>to_iso8601(naive_datetime, format \\ :extended)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644308c0d43ab50a647404512e0e830ae365521e" translate="yes" xml:space="preserve">
          <source>to_iso8601(time, format \\ :extended)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e27092ee3406a1e09f513bee50789f503dfac90" translate="yes" xml:space="preserve">
          <source>to_list(dict)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edcb034f40ee7c307d3dfccaca11d65cd952ab4" translate="yes" xml:space="preserve">
          <source>to_list(enumerable)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9a412391aea91da4d7db7ac49bb214eb025542" translate="yes" xml:space="preserve">
          <source>to_list(keyword)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e055c2f17e6e9138e22494de9d7e494b3a66fe9" translate="yes" xml:space="preserve">
          <source>to_list(map)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b55fde12aae07871b5c846833432f556b1f74e8" translate="yes" xml:space="preserve">
          <source>to_list(map_set)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219580e845dd3da1b0f795c51af17ba47f3138f8" translate="yes" xml:space="preserve">
          <source>to_list(set)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c681dc032b3d6db596b64a76abfb89b67484deec" translate="yes" xml:space="preserve">
          <source>to_list(tuple)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae173ecb3848c6acd9d93f92ad7bd4089d0c5aea" translate="yes" xml:space="preserve">
          <source>to_match(env)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d7a6bc84aa9ede8759fc48be18c6a82cbca737" translate="yes" xml:space="preserve">
          <source>to_naive(map)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e125254c84145ec80c69de790820f510a37c85" translate="yes" xml:space="preserve">
          <source>to_record(stat)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2a3e3592a3a5e2d9bb0e8d3578762e3b0b72ea" translate="yes" xml:space="preserve">
          <source>to_string (1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2f8601d96b663a2a3f5a1afa5a380b3a89c731" translate="yes" xml:space="preserve">
          <source>to_string(atom)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9e148e1a78cc41604dc9736d600407105f9268" translate="yes" xml:space="preserve">
          <source>to_string(date)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4820fac5db3d8c647fd31faf7be2953e7aa05a4" translate="yes" xml:space="preserve">
          <source>to_string(datetime)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c02a5013e391c1da10220fb5cc5ef1db379e6ea" translate="yes" xml:space="preserve">
          <source>to_string(float)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad224eaf4323beff3a04e13c8122c71ab586b237" translate="yes" xml:space="preserve">
          <source>to_string(integer)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d214038c67dcdb7558f87db4e54cc654fc719c" translate="yes" xml:space="preserve">
          <source>to_string(integer, base)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a4bf7591fe0a19b3c445fd6e4e2a203a782cb6" translate="yes" xml:space="preserve">
          <source>to_string(list)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ffd0aaab56a5be139259c342dd3f3b0ec4e4d8a" translate="yes" xml:space="preserve">
          <source>to_string(naive_datetime)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca54f876b8240bf37e0d9dba73581e4e8891938" translate="yes" xml:space="preserve">
          <source>to_string(term)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7517c05c80b1fb8b9733dd07cecf34431dab6201" translate="yes" xml:space="preserve">
          <source>to_string(time)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03eca0a45e37bfb373df5ac8e496e495cd5f6717" translate="yes" xml:space="preserve">
          <source>to_string(tree, fun \\ fn _ast, string -&amp;gt; string end)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ae057eb718aae783ccfdbbbf450502d930c443" translate="yes" xml:space="preserve">
          <source>to_string(uri)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a3bf605f0de346c863683c13224c7b634ea0d0" translate="yes" xml:space="preserve">
          <source>to_time(map)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f6d6dd50460bde0218b8589c0cabcbeaec2c43" translate="yes" xml:space="preserve">
          <source>to_tuple(list)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0869a3364192154b5bb1aafa409f37cb3c733a4" translate="yes" xml:space="preserve">
          <source>to_unix(datetime, unit \\ :second)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57bf8f4c9018cdb8d1e2ce1504df2010c784212" translate="yes" xml:space="preserve">
          <source>touch!(path, time \\ System.os_time(:second))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fea089bb75810c8b39f641639d599ed2d0f9674" translate="yes" xml:space="preserve">
          <source>touch(path, time \\ System.os_time(:second))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec15b9cdb9a57a806d036dd1828f5e886dbea934" translate="yes" xml:space="preserve">
          <source>transform(enum, acc, reducer)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f6e8844baac96b9ed4d963261b50dcf071ccfbb" translate="yes" xml:space="preserve">
          <source>transform(enum, start_fun, reducer, after_fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4429635806a666f3e0be730ad3152a47128a86d8" translate="yes" xml:space="preserve">
          <source>translate(min_level, level, kind, message)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47a5dfc5f905f158f1570d543d0f8bc0b806ed6" translate="yes" xml:space="preserve">
          <source>translates to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adacaed958aa513a6316d7e1b1008928c427f947" translate="yes" xml:space="preserve">
          <source>traverse(ast, acc, pre, post)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a87fca17a83126717f879b6bdf610e3d58d6d67" translate="yes" xml:space="preserve">
          <source>trim(string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91972caac62a8e6caef2a649e149b2aa8de9b1a0" translate="yes" xml:space="preserve">
          <source>trim(string, to_trim)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f086c81926915a7151c6495ea42c03261a182ab6" translate="yes" xml:space="preserve">
          <source>trim_leading(string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807cd7841bdc0e2dc9e8038a0699f994942b963b" translate="yes" xml:space="preserve">
          <source>trim_leading(string, to_trim)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0f8247d3a1d5e476726ce4f8c6f5431c5420ff" translate="yes" xml:space="preserve">
          <source>trim_trailing(string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fda0b15636b1d4f7a691c15d447976feb445de" translate="yes" xml:space="preserve">
          <source>trim_trailing(string, to_trim)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f53838f9e9763b0501055e22a5678ecc03cad993" translate="yes" xml:space="preserve">
          <source>trunc (1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40feef05225e53b56470b538dcbbee0daffd6c86" translate="yes" xml:space="preserve">
          <source>trunc(number)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6461c6aa19c12a1d6aa8aca570a3c89cb1e92953" translate="yes" xml:space="preserve">
          <source>truncate(datetime, precision)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="439194360263c44285b35fe57a9f180a61299637" translate="yes" xml:space="preserve">
          <source>truncate(microsecond_tuple, atom)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aacb57b8a002248e90ff9f1624622c6c5213c3f9" translate="yes" xml:space="preserve">
          <source>truncate(naive_datetime, precision)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df4419535f8bf6f15cba4297dd5684bf4379ef0b" translate="yes" xml:space="preserve">
          <source>truncate(time, precision)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6644a7b07e26100c75e349c9bf753544370e1895" translate="yes" xml:space="preserve">
          <source>try (1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0773c9ea506431334a66a907fc1f02901f111522" translate="yes" xml:space="preserve">
          <source>try(args)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec6cdf24a7e99c40b7d116de329def57c2b3e71" translate="yes" xml:space="preserve">
          <source>try, catch, and rescue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4b03ce96ed431585c67e104006528536ee6a07" translate="yes" xml:space="preserve">
          <source>tuple_size (1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb88de2dab355882e48f6aeb69fe568a4465193" translate="yes" xml:space="preserve">
          <source>tuple_size(tuple)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9286a11d66a9675b110b12546c29b325e9101f5f" translate="yes" xml:space="preserve">
          <source>tuples with three elements, representing calls or variables, as explained next</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e81289ec59d95aa448a93ced6927d8669a45112" translate="yes" xml:space="preserve">
          <source>tuples with two elements - such as &lt;code&gt;{&quot;hello&quot;, :world}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457e7b38b1d61f692e2be814625ff9a6001692fd" translate="yes" xml:space="preserve">
          <source>type(name)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="120647a59a461670f2f6cb3f877fcd2ae335804b" translate="yes" xml:space="preserve">
          <source>umbrella?(config \\ config())</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d152eaca131b151509f311c50b3f1b2285d41a" translate="yes" xml:space="preserve">
          <source>underline()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5713c1a34420b21fa56dd2e16660e00e3e491ab5" translate="yes" xml:space="preserve">
          <source>underscore(atom)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68dee983429764741755b5ec593339a7d49df9b4" translate="yes" xml:space="preserve">
          <source>undigits(digits, base \\ 10)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae47c987fa1fbe9793d7f990178dc415b50cd685" translate="yes" xml:space="preserve">
          <source>unescape_string(chars)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35daacbbeda74d99a31377fb6f94fa9cabf1e4cc" translate="yes" xml:space="preserve">
          <source>unescape_string(chars, map)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfaa5f6359855f74f2033189aadcba5086676c4b" translate="yes" xml:space="preserve">
          <source>unfold(next_acc, next_fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4e34f6dc5d441446fd9288c592bc70787ffe93" translate="yes" xml:space="preserve">
          <source>union(map_set1, map_set2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be11fd508798f99c10557ef07e07e0c7c88cce1" translate="yes" xml:space="preserve">
          <source>union(set1, set2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600e5702913905967daccb1090b9720c743267e5" translate="yes" xml:space="preserve">
          <source>uniq(enum)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5111af7ca86c1c3501fef4bb6ec4fe759c2a7734" translate="yes" xml:space="preserve">
          <source>uniq(enumerable)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a241060935ffd068d6b49622419add940b4ee7" translate="yes" xml:space="preserve">
          <source>uniq_by(enum, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a77148b6f4d87d1c3a884da8dca9df8e34353f" translate="yes" xml:space="preserve">
          <source>uniq_by(enumerable, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c919105e251cbb7bc7924bd78d52343579756b" translate="yes" xml:space="preserve">
          <source>unique_integer(modifiers \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b1353cc37f5842997c3c8674e201fc42b10555" translate="yes" xml:space="preserve">
          <source>unless (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a47062b4dafd1e272bc9e019d2060a4961b44cc" translate="yes" xml:space="preserve">
          <source>unless(condition, clauses)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="433dedb0e4a447fb9c9bd3fcd92717a6557d422e" translate="yes" xml:space="preserve">
          <source>unlink(pid_or_port)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e290ae2e09da20aa51cba469c581ee7928dcd5" translate="yes" xml:space="preserve">
          <source>unload(app)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2cf843a7386eac10d8b91c615475c3e3b1fe44" translate="yes" xml:space="preserve">
          <source>unpipe(expr)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad866ae292b083b7fa2c056d9740e27a5b48d41c" translate="yes" xml:space="preserve">
          <source>unquote (1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcae03c6496ded179889b7f49e4f9f7a69b97915" translate="yes" xml:space="preserve">
          <source>unquote(expr)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb0660e1e25110e4b1c20c35e727a4485f74ec6" translate="yes" xml:space="preserve">
          <source>unquote_splicing (1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520fc7a848784fd15810ff40058e18a2176b0e8b" translate="yes" xml:space="preserve">
          <source>unquote_splicing(expr)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408e9edfd6912aae297c39da08db127ea40a4bfc" translate="yes" xml:space="preserve">
          <source>unreachable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac8b493b78e73a243810e2606938c631557b357" translate="yes" xml:space="preserve">
          <source>unregister(name)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb813a2a75f7a58640be23ada77d3b546923b6c" translate="yes" xml:space="preserve">
          <source>unregister(registry, key)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eedb8a6534ce8d1be8188ef20eb370003ad24344" translate="yes" xml:space="preserve">
          <source>unregister_match(registry, key, pattern, guards \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876e5e19af226999e22616bd3e59e42f99fab591" translate="yes" xml:space="preserve">
          <source>unrequire_files(files)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce6f15fd12cc9d91d07ea3049e02e1ac84d9c2c" translate="yes" xml:space="preserve">
          <source>unzip(enumerable)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca5678abfe46b7c0d71ec00f4dd9ea960ad0c48" translate="yes" xml:space="preserve">
          <source>upcase(string, mode \\ :default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ebf1149fa386c384d699f32c00812757e9d9ed" translate="yes" xml:space="preserve">
          <source>update!(dict, key, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223568dbb922bcb8c19a470d12c2722420b5047c" translate="yes" xml:space="preserve">
          <source>update!(keywords, key, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a51b6e7473e309702ac4d2055dc1bb7cb1316ec" translate="yes" xml:space="preserve">
          <source>update!(map, key, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841aa0e4a75cf0f5e6bf454a5bbb044c12a31751" translate="yes" xml:space="preserve">
          <source>update(agent, fun, timeout \\ 5000)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e622950fb56fc50d7b7706f6bcc8e78d6572984" translate="yes" xml:space="preserve">
          <source>update(agent, module, fun, args, timeout \\ 5000)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb70cae3e40947d34355dd7d21fbbf532035422b" translate="yes" xml:space="preserve">
          <source>update(dict, key, initial, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04bbaf3d24bbf592a4e14c0089a0bf529a4371c" translate="yes" xml:space="preserve">
          <source>update(keywords, key, initial, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0292acc8e44b7dc4991af0798a9ea3bf149012ab" translate="yes" xml:space="preserve">
          <source>update(map, key, initial, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6cd16cb7762cf80cb426c068ab902fbc52e03e6" translate="yes" xml:space="preserve">
          <source>update_at(list, index, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa94e298bebade8a56818a5c8da0aab12f11ba9" translate="yes" xml:space="preserve">
          <source>update_in (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b3bb1ac1e3b508f95da3c3b27de82d5f30f8de" translate="yes" xml:space="preserve">
          <source>update_in (3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dbbf9da69786616dd33e8938e8d63cf72ce381e" translate="yes" xml:space="preserve">
          <source>update_in(data, keys, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d466123095ef602a82662c77edb7add6b57ad8" translate="yes" xml:space="preserve">
          <source>update_in(path, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20b0a187878618cb85b23e8c1212841770e23c2" translate="yes" xml:space="preserve">
          <source>update_meta(quoted, fun)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4c48cd417ba18d55109fd4e7c88d56ddd4d0ba" translate="yes" xml:space="preserve">
          <source>update_value(registry, key, callback)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf36f0262fde9431e83212e96aba326e34e73301" translate="yes" xml:space="preserve">
          <source>upper - Uppercase letters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c2393895155716dcc549b3103c847981bfd722" translate="yes" xml:space="preserve">
          <source>url_decode64!(string, opts \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b928c8a9868d595f50fc432ca17abde9b998697" translate="yes" xml:space="preserve">
          <source>url_decode64(string, opts \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbe0bfeb0268e5a7885631fa0b75d6604d1eca6" translate="yes" xml:space="preserve">
          <source>url_encode64(data, opts \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04489a12bbaa6aebffb61ed2f524424ba8e1147e" translate="yes" xml:space="preserve">
          <source>use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9964c045dfb6080981a06e97bba6c569f628a88" translate="yes" xml:space="preserve">
          <source>use (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21029274f14b431e033ba96d6e83f8a664027ca" translate="yes" xml:space="preserve">
          <source>use(module, opts \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c05613a98381751651ced82554059d8dc9e3d27" translate="yes" xml:space="preserve">
          <source>use_if_available(quoted_module, opts \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb57d4e57a463e75be40773b5ea6754d5d6edbe" translate="yes" xml:space="preserve">
          <source>user_home!()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66b716e29b07c765a73dbff4d05a1fde7913e0c" translate="yes" xml:space="preserve">
          <source>user_home()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191da2c675f2d05d4b02698be5f755ec84352785" translate="yes" xml:space="preserve">
          <source>uses processes for the underlying IO mechanisms and how to use &lt;code&gt;chardata&lt;/code&gt; and &lt;code&gt;iodata&lt;/code&gt; for IO operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c780bb4cac56fece9ce9b6bce1978eed803e96f" translate="yes" xml:space="preserve">
          <source>using(var \\ quote do _ end, list)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075421ae2bb9a30d5cfd2a8b09597e9145460d66" translate="yes" xml:space="preserve">
          <source>utc_now(calendar \\ Calendar.ISO)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05ee7cdb81a11c8847fcb80402a34423bb1919e" translate="yes" xml:space="preserve">
          <source>utc_offset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02f31fdecb474785b5c3f9e0c2508987b194728" translate="yes" xml:space="preserve">
          <source>utc_today(calendar \\ Calendar.ISO)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dace8ac858036f35ce6034dc93cceab641b366fa" translate="yes" xml:space="preserve">
          <source>v(n \\ -1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5327f2352ef7b1f1b876f346c5bbb680a4c2d5" translate="yes" xml:space="preserve">
          <source>v1.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae7a8903617f56e80c7ef7dda42dc111e829a7a" translate="yes" xml:space="preserve">
          <source>v1.2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d9706c09e2c643e3825d48258486a5ad90227f" translate="yes" xml:space="preserve">
          <source>v1.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a7998fe1e6d3248b44ef3381eac3b3861ec281" translate="yes" xml:space="preserve">
          <source>v1.4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ec5ee229adcd0897abc563edbb12ea7c44168d" translate="yes" xml:space="preserve">
          <source>v1.5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563f14cc70587402afbb8cd2f6a5c586298fb2f9" translate="yes" xml:space="preserve">
          <source>v1.6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8d286ec496ea3c9d7a7b249c8ce398a92cddc8" translate="yes" xml:space="preserve">
          <source>v1.7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a533698da735b08cb93688a1bd5cd1b86f71de" translate="yes" xml:space="preserve">
          <source>v1.8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb4b0054c756b78b6125e09ce200bdb59d4cb64" translate="yes" xml:space="preserve">
          <source>v1.9</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b40a3523e7647454dc2674cb0245c12f26fb0f" translate="yes" xml:space="preserve">
          <source>valid?(string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4792a393dbd3f388a8b492c2d74e4b2e71fcbbce" translate="yes" xml:space="preserve">
          <source>valid_date?(year, month, day)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="820a5846e3b914d85adc1412b56ce0b9dcae6c57" translate="yes" xml:space="preserve">
          <source>valid_time?(hour, minute, second, arg)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3064633c7a9bdd39220f997f42bf84d4f33220ee" translate="yes" xml:space="preserve">
          <source>valid_time?(hour, minute, second, microsecond)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8053fc55bddd97018815a6882dd70772ac17aad8" translate="yes" xml:space="preserve">
          <source>validate(expr)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe713c4a023ed03dbff041c7b9dd2f900c0b091d" translate="yes" xml:space="preserve">
          <source>validate_config_path!(path)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9fd72002ad5b4a643baa734e160c4a751c7119" translate="yes" xml:space="preserve">
          <source>value()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28357700f15fb0774e5a47c6c8abe8eac68b036" translate="yes" xml:space="preserve">
          <source>values()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5395bb21790cee937b08eb07fcacf40c57325578" translate="yes" xml:space="preserve">
          <source>values(dict)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e2ac925dca5466933eee9096a545806a59ae268" translate="yes" xml:space="preserve">
          <source>values(keywords)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69559d7ee9b792d0561e23ed1ada5db64cf852f" translate="yes" xml:space="preserve">
          <source>values(map)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee4379ecbef8a20d8f26ab426f774eb42033e24" translate="yes" xml:space="preserve">
          <source>var! (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9950e89e810f9d8161af776d79a341a616a2f9" translate="yes" xml:space="preserve">
          <source>var!(var, context \\ nil)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c151335eb6c00a735a2d2488abf941bbd4e53fc3" translate="yes" xml:space="preserve">
          <source>var(var, context)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5051aec27735f903d8a36c4f3233c11fe7469c7" translate="yes" xml:space="preserve">
          <source>variable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79048e9e9bee4e6998be23ba8cc4e4c21d1f0427" translate="yes" xml:space="preserve">
          <source>vars(env)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487013207ed7c3cb3a7f74a3b17b3e253c524781" translate="yes" xml:space="preserve">
          <source>version()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd9dc4b74fc34859ab37b86e048683cb7c31234" translate="yes" xml:space="preserve">
          <source>via the &lt;code&gt;BREAK&lt;/code&gt; menu (available via &lt;code&gt;Ctrl+C&lt;/code&gt;) by typing &lt;code&gt;q&lt;/code&gt;, pressing enter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33743cc3682313072d97cf4222f11bc5f2e4261f" translate="yes" xml:space="preserve">
          <source>warn(chardata_or_fun, metadata \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e14ce0b24935ce50196f1e8fee9668371cec64d" translate="yes" xml:space="preserve">
          <source>warn(message)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7d766f93698f215a6f03572a23565438eeeb11" translate="yes" xml:space="preserve">
          <source>warn(message, stacktrace)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cce440624ea0b04bbb0262a7dd3c553e8ca6260" translate="yes" xml:space="preserve">
          <source>we declare a new type (&lt;code&gt;word()&lt;/code&gt;) that is equivalent to the string type (&lt;code&gt;String.t()&lt;/code&gt;);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071eb10b49bcf9b97b29878cd60f58e19c66b0fc" translate="yes" xml:space="preserve">
          <source>we define a test module named &lt;code&gt;KVTest&lt;/code&gt;, in which we &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html&quot;&gt;&lt;code&gt;use ExUnit.Case&lt;/code&gt;&lt;/a&gt; to inject the testing API;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75725ee0cba276a7c210f6d07ec955552af8705e" translate="yes" xml:space="preserve">
          <source>we specify that the &lt;code&gt;long_word?/1&lt;/code&gt; function takes an argument of type &lt;code&gt;word()&lt;/code&gt; and returns a boolean (&lt;code&gt;boolean()&lt;/code&gt;), that is, either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571e30635f4220b2eaa4f983d568430294f3b212" translate="yes" xml:space="preserve">
          <source>we use one of the injected macros, &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.DocTest.html#doctest/2&quot;&gt;&lt;code&gt;doctest/1&lt;/code&gt;&lt;/a&gt;, to indicate that the &lt;code&gt;KV&lt;/code&gt; module contains doctests (we will discuss those in a later chapter);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53aec48f8fd2cff113451d6f47ea2c9e21035311" translate="yes" xml:space="preserve">
          <source>we use the &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html#test/3&quot;&gt;&lt;code&gt;test/2&lt;/code&gt;&lt;/a&gt; macro to define a simple test;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8377af978b89b02940b5d984b86165517507f7" translate="yes" xml:space="preserve">
          <source>week()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd98e416e9120f7021d74f3e3ba1aff7692ff58" translate="yes" xml:space="preserve">
          <source>when building a struct, as in &lt;code&gt;struct!(SomeStruct, key: :value)&lt;/code&gt;, it is equivalent to &lt;code&gt;%SomeStruct{key: :value}&lt;/code&gt; and therefore this function will check if every given key-value belongs to the struct. If the struct is enforcing any key via &lt;code&gt;@enforce_keys&lt;/code&gt;, those will be enforced as well;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86cd1965ed482054643e9b3741ea8a6396ecfcd7" translate="yes" xml:space="preserve">
          <source>when updating a struct, as in &lt;code&gt;struct!(%SomeStruct{}, key: :value)&lt;/code&gt;, it is equivalent to &lt;code&gt;%SomeStruct{struct | key: :value}&lt;/code&gt; and therefore this function will check if every given key-value belongs to the struct. However, updating structs does not enforce keys, as keys are enforced only when building;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb397325065f6a32e72cf335b675d35af9711f9" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&amp;lt;Start&amp;gt;&lt;/code&gt; uses the same categories as the spec but restricts them to the NFC form (see R6):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0284893af5a415da4ce6034713c40dbaf7b915e7" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;options&lt;/code&gt; is a keyword list. The result of the call is the result returned by &lt;a href=&quot;#configure_backend/2&quot;&gt;&lt;code&gt;configure_backend/2&lt;/code&gt;&lt;/a&gt;. The recommended return value for successful configuration is &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365862a50c0682caa8baa6f30edca76e3e5f81ed" translate="yes" xml:space="preserve">
          <source>where:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79cac6df858e2fe93fde45895cdae468bd5de4c" translate="yes" xml:space="preserve">
          <source>whereami(radius \\ 2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61243bd6e75dde3a3437b36dcdd08f584cfb1b6c" translate="yes" xml:space="preserve">
          <source>whereis(name)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2fca9f95b281d01822c4eb5725d5d99be3a5739" translate="yes" xml:space="preserve">
          <source>whereis(server)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6a77717450c45a012e2042917d7c90499f6574" translate="yes" xml:space="preserve">
          <source>which in turn is the same as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8898533c2e6648f2fc1320068ec98800bddfaab3" translate="yes" xml:space="preserve">
          <source>which in turn will register the process with the given name. The &lt;code&gt;:name&lt;/code&gt; option expects an atom for locally named processes (locally named means it is available to this machine - there are other options, which we won&amp;rsquo;t discuss here). Since module identifiers are atoms (try &lt;code&gt;i(KV.Registry)&lt;/code&gt; in IEx), we can name a process after the module that implements it, provided there is only one process for that name. This helps when debugging and introspecting the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d335ba65d2004778b168de5c139094cae5baaaf7" translate="yes" xml:space="preserve">
          <source>which is represented as a tuple with three elements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5bd3d90f4def8feaae8b379b7da60ae5491d35d" translate="yes" xml:space="preserve">
          <source>which leads to an undefined function error because that invocation passes two arguments, and &lt;code&gt;is_number/2&lt;/code&gt; does not exist. The &lt;code&gt;if true&lt;/code&gt; expression is invalid in itself because it needs the block, but since the arity of &lt;code&gt;is_number/2&lt;/code&gt; does not match, Elixir does not even reach its evaluation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d272922395ba86c02af51ceb4c1c39fc00cd7486" translate="yes" xml:space="preserve">
          <source>which results in an error as the &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; protocol is not defined for binaries. Adding explicit parentheses resolves the ambiguity:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e286799e1772364126b826ae5245419a3da10c7c" translate="yes" xml:space="preserve">
          <source>which we have explored in the previous section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7a598e30b61164f2c235dd1673349347413dc3" translate="yes" xml:space="preserve">
          <source>which_children(supervisor)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3850b257af705031ca4b9c7b084839c1cd399b" translate="yes" xml:space="preserve">
          <source>white()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9690cc4f25d3bc07018d15e3d565ce600d61a5ef" translate="yes" xml:space="preserve">
          <source>white_background()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94cd4d96796776452e1dee273e08022ccd7e076" translate="yes" xml:space="preserve">
          <source>width()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d82f2b5f380cc44af41a835ea304cadc32496be" translate="yes" xml:space="preserve">
          <source>wildcard expansion will not happen (unless &lt;a href=&quot;path#wildcard/2&quot;&gt;&lt;code&gt;Path.wildcard/2&lt;/code&gt;&lt;/a&gt; is used explicitly)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25302edb2b91a04ffcf694363f1e255c47ac336c" translate="yes" xml:space="preserve">
          <source>wildcard(glob, opts \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f07534f99832bb93bc55107047f17741d7c37eb" translate="yes" xml:space="preserve">
          <source>will be able to deliver the message in both cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6336bbdd691ff755a10a7062d50a757d0a778329" translate="yes" xml:space="preserve">
          <source>will be formatted as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779a28a0ecd5c180950ae736a646160d7438a338" translate="yes" xml:space="preserve">
          <source>will be rewritten to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e8aecbfb892a70b9b988d48b23a73ae546a637" translate="yes" xml:space="preserve">
          <source>will fail with the message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59fc6f56bd190ad6057982bf7721b107e9bb3a6e" translate="yes" xml:space="preserve">
          <source>will have a final configuration for &lt;code&gt;:logger&lt;/code&gt; of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd18708af8ec7f4e50cb4dfaa03ca92b006257fa" translate="yes" xml:space="preserve">
          <source>will have a final value of the configuration for the &lt;code&gt;Repo&lt;/code&gt; key in the &lt;code&gt;:ecto&lt;/code&gt; application of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fcd25a39d2037183044a8897e9a5333d727fded" translate="yes" xml:space="preserve">
          <source>with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf041959e94d68a4aca238e247406e1a710c641" translate="yes" xml:space="preserve">
          <source>with (1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c25b77e71bfc68243cf6dd7bffba91be4e32762" translate="yes" xml:space="preserve">
          <source>with a name. The name can be short (when in the same network) or long (requires the full computer address). Let&amp;rsquo;s start a new IEx session:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8dc81db4ad318f044f8bfed7ba571dfa7eb99eb" translate="yes" xml:space="preserve">
          <source>with(args)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d17e9f38b5406c962246c562fb1dc59260da09f" translate="yes" xml:space="preserve">
          <source>with_index(enum, offset \\ 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd689337473b76a914717179a797af20033d6d6" translate="yes" xml:space="preserve">
          <source>with_index(enumerable, offset \\ 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adcd10388937114e92607ad98f77566c842c4fb2" translate="yes" xml:space="preserve">
          <source>word - &quot;Word&quot; characters (same as \w)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1438ebc99106d30701ae402b7151ca2ff4a61902" translate="yes" xml:space="preserve">
          <source>worker()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1717131e9d35837a4433d5cfe5593d7d98c86d87" translate="yes" xml:space="preserve">
          <source>worker(module, args, options \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baff0a4a6aadfe71b5d00e9f09d94ded77cf5a8f" translate="yes" xml:space="preserve">
          <source>wrap(term)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65245e93809d0a88c02a8338a495130fb5fcc66a" translate="yes" xml:space="preserve">
          <source>write!(path, content, modes \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d748985f2578ab14f7c3b2ac297e456d1f9b0a78" translate="yes" xml:space="preserve">
          <source>write(device \\ :stdio, chardata)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83ff0f662ae1e9485af9391626cc9a95999ef90" translate="yes" xml:space="preserve">
          <source>write(path, content, modes \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d315100533bb5f7c68bc558b72b8a3a82faa73" translate="yes" xml:space="preserve">
          <source>write:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82733dc952d91cae095fadd304d019d5fdaa9073" translate="yes" xml:space="preserve">
          <source>write_stat!(path, stat, opts \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2744a650a3a05d74b754f6687fc9a91a5b6c90d" translate="yes" xml:space="preserve">
          <source>write_stat(path, stat, opts \\ [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702cd5104a4496821280ca7338dfa5f743366e22" translate="yes" xml:space="preserve">
          <source>xdigit - Hexadecimal digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85f5a793ebbc0c419f81600ff29db79cfb52551" translate="yes" xml:space="preserve">
          <source>year()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d655d50c7f81901afc54ec9512adf66ba7ce41bc" translate="yes" xml:space="preserve">
          <source>year_of_era(date)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6760b1a1ced128fd39c7706c42c683de1b3f08a7" translate="yes" xml:space="preserve">
          <source>year_of_era(year)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6691848d464c0dcf4e9ac159b0e0353337c379b" translate="yes" xml:space="preserve">
          <source>yellow()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10bee1b4faf3ad7398cf4e50356ec9beb13c432e" translate="yes" xml:space="preserve">
          <source>yellow_background()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e505e8bee079fe5629bacd3cccb8e9e8b09b4860" translate="yes" xml:space="preserve">
          <source>yes?(message)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395077dbce68e1e49c3a88a8d10412cb87366ff7" translate="yes" xml:space="preserve">
          <source>yield(task, timeout \\ 5000)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="427d9a38b318d6646eeeea4171d31a2c4243f3f1" translate="yes" xml:space="preserve">
          <source>yield_many(tasks, timeout \\ 5000)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb13784ce4151dc610ffd727317392419aab2b01" translate="yes" xml:space="preserve">
          <source>you should prefer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6ea798b5bc41c58587fbb2d6d759e35b5967a2" translate="yes" xml:space="preserve">
          <source>you'll see:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd06ef5c02fcb56a22b27ba0559b9514c598117" translate="yes" xml:space="preserve">
          <source>zip(enumerable1, enumerable2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b5a32c7b1ad3590eb6f37636ce7e831e99d2ba" translate="yes" xml:space="preserve">
          <source>zip(enumerables)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5cd3ba668bbc60cdd0be8ccf1e45ce29313180" translate="yes" xml:space="preserve">
          <source>zip(left, right)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9750813de1da7dd3729781caf461a9ce1772ce" translate="yes" xml:space="preserve">
          <source>zip(list_of_lists)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a778ad38a42d08dc9fc0ab38ed7c1d9e5c962a5" translate="yes" xml:space="preserve">
          <source>zone_abbr()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bee90cfe99ac9475b1607daa4878603af658531" translate="yes" xml:space="preserve">
          <source>{args}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8b43ff964355f1a2d23840cf4523f45d094f98" translate="yes" xml:space="preserve">
          <source>{args} (1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa704eec3ddaf30d59f523bd0bf446f387b3d0a" translate="yes" xml:space="preserve">
          <source>|&amp;gt; (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad74abec6c316aa318335b0a4d4ac5310522c6f" translate="yes" xml:space="preserve">
          <source>|| (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2fc979b65b7aef5e7b7874910c7a7c67e2de682" translate="yes" xml:space="preserve">
          <source>~C (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3355cea089e92173b80ee3ef53120d6167cf233" translate="yes" xml:space="preserve">
          <source>~D (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3af7a4bf089cb657531cee7a288e967b1d7dd69" translate="yes" xml:space="preserve">
          <source>~N (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6736eba4679ef93cdc1168d04290824767896ea5" translate="yes" xml:space="preserve">
          <source>~R (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a366dd560c9ffa551dfa30022addd91641a0d31" translate="yes" xml:space="preserve">
          <source>~S (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f045ee7513ef4409e8f90b6c2b0490be6bf339" translate="yes" xml:space="preserve">
          <source>~T (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c922d2a16008a11f9edd5b2a4ea2db3242cac0" translate="yes" xml:space="preserve">
          <source>~U (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75383b9e2260163ba18df26cfb7b4540863bc9b6" translate="yes" xml:space="preserve">
          <source>~W (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01f95e67473b0f46efa00f4f7cb3034c956c192" translate="yes" xml:space="preserve">
          <source>~c (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc176d40adb04a2d80f094afa23d091b3eec86e2" translate="yes" xml:space="preserve">
          <source>~r (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a84abe1ed04369c98e082208c3d5e9bfcfb3b6" translate="yes" xml:space="preserve">
          <source>~s (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aaae83a8a36476bf1d70e7a8a88c6329052767f" translate="yes" xml:space="preserve">
          <source>~w (2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db47bb5c8a33e8bc58287bb61bdf613a50c6f243" translate="yes" xml:space="preserve">
          <source>~~~expr</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
