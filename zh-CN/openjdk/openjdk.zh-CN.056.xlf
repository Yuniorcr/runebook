<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="4b3422cf8ec343c08ce12bad3169b6a9792fd20e" translate="yes" xml:space="preserve">
          <source>Reference.getFactoryClassLocation()</source>
          <target state="translated">Reference.getFactoryClassLocation()</target>
        </trans-unit>
        <trans-unit id="147f4acf2b443c1a4a2ed0103e17140704d360ab" translate="yes" xml:space="preserve">
          <source>Reference.getFactoryClassName()</source>
          <target state="translated">Reference.getFactoryClassName()</target>
        </trans-unit>
        <trans-unit id="dc5ea3235ac515c4d33050d6e5f8e7c06b480e0e" translate="yes" xml:space="preserve">
          <source>Reference.hashCode()</source>
          <target state="translated">Reference.hashCode()</target>
        </trans-unit>
        <trans-unit id="6e1b7028e63e5bd5c84b544e220253579398022d" translate="yes" xml:space="preserve">
          <source>Reference.isEnqueued()</source>
          <target state="translated">Reference.isEnqueued()</target>
        </trans-unit>
        <trans-unit id="65bd3f901c557b9fccab5a36b624f38c04c69665" translate="yes" xml:space="preserve">
          <source>Reference.remove()</source>
          <target state="translated">Reference.remove()</target>
        </trans-unit>
        <trans-unit id="ab996076d3e5d897e13bfebecc2ae575bc5b9fdf" translate="yes" xml:space="preserve">
          <source>Reference.size()</source>
          <target state="translated">Reference.size()</target>
        </trans-unit>
        <trans-unit id="c032cafae6c2baadde5f3245f1c931f324be4a5e" translate="yes" xml:space="preserve">
          <source>Reference.toString()</source>
          <target state="translated">Reference.toString()</target>
        </trans-unit>
        <trans-unit id="377956a396361e87a02f9d962a742cbcf117c832" translate="yes" xml:space="preserve">
          <source>ReferenceQueue</source>
          <target state="translated">ReferenceQueue</target>
        </trans-unit>
        <trans-unit id="aff650803d90fa0e11d744edb2d86a49d291af0e" translate="yes" xml:space="preserve">
          <source>ReferenceQueue.poll()</source>
          <target state="translated">ReferenceQueue.poll()</target>
        </trans-unit>
        <trans-unit id="f1cde3bde698441ec76dc937027bf217703a7b90" translate="yes" xml:space="preserve">
          <source>ReferenceQueue.remove()</source>
          <target state="translated">ReferenceQueue.remove()</target>
        </trans-unit>
        <trans-unit id="b6e0fcaafa4b2c747369b35bdb36faf327626269" translate="yes" xml:space="preserve">
          <source>ReferenceType</source>
          <target state="translated">ReferenceType</target>
        </trans-unit>
        <trans-unit id="1f8e7e914b1319018bec3feafd08bb4324f24041" translate="yes" xml:space="preserve">
          <source>ReferenceUriSchemesSupported</source>
          <target state="translated">ReferenceUriSchemesSupported</target>
        </trans-unit>
        <trans-unit id="a2b0ccea295474e348e016c1b009fc0e8da585cb" translate="yes" xml:space="preserve">
          <source>ReferenceUriSchemesSupported.getCategory()</source>
          <target state="translated">ReferenceUriSchemesSupported.getCategory()</target>
        </trans-unit>
        <trans-unit id="67f5e34532d2ab1b565c70604ff313ed646e4641" translate="yes" xml:space="preserve">
          <source>ReferenceUriSchemesSupported.getEnumValueTable()</source>
          <target state="translated">ReferenceUriSchemesSupported.getEnumValueTable()</target>
        </trans-unit>
        <trans-unit id="10823b0fa48f73c7586fca895165e00a881c3e68" translate="yes" xml:space="preserve">
          <source>ReferenceUriSchemesSupported.getName()</source>
          <target state="translated">ReferenceUriSchemesSupported.getName()</target>
        </trans-unit>
        <trans-unit id="2340b24cafb2cc99d1b83695d3e349260dd9f02a" translate="yes" xml:space="preserve">
          <source>ReferenceUriSchemesSupported.getStringTable()</source>
          <target state="translated">ReferenceUriSchemesSupported.getStringTable()</target>
        </trans-unit>
        <trans-unit id="12d0d6c8c7995931e5bafbc525aa2399a11ca62e" translate="yes" xml:space="preserve">
          <source>Referenceable</source>
          <target state="translated">Referenceable</target>
        </trans-unit>
        <trans-unit id="db47e1444cd2a4fc8ee8db83ceb5c933bc595030" translate="yes" xml:space="preserve">
          <source>Referenceable.getReference()</source>
          <target state="translated">Referenceable.getReference()</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="dad592ad4033faca9562a469e6b0d6203b82cc05" translate="yes" xml:space="preserve">
          <source>ReferralException</source>
          <target state="translated">ReferralException</target>
        </trans-unit>
        <trans-unit id="d6662ddfbe2d0329da548a7a9aaa298813fcde37" translate="yes" xml:space="preserve">
          <source>ReferralException.getReferralContext()</source>
          <target state="translated">ReferralException.getReferralContext()</target>
        </trans-unit>
        <trans-unit id="a98588338eea2db52c662fa4da623d3d3dbb7b59" translate="yes" xml:space="preserve">
          <source>ReferralException.getReferralInfo()</source>
          <target state="translated">ReferralException.getReferralInfo()</target>
        </trans-unit>
        <trans-unit id="fa52d45b708ff1fe67a04bd14cab85bca4976f89" translate="yes" xml:space="preserve">
          <source>ReferralException.retryReferral()</source>
          <target state="translated">ReferralException.retryReferral()</target>
        </trans-unit>
        <trans-unit id="b33fdbb587fb9a7127ff7d8713d83ce2ac61a017" translate="yes" xml:space="preserve">
          <source>ReferralException.skipReferral()</source>
          <target state="translated">ReferralException.skipReferral()</target>
        </trans-unit>
        <trans-unit id="75095181d5c7edf560bf781fa3d15bc4c6a39b57" translate="yes" xml:space="preserve">
          <source>RefinedVersion:</source>
          <target state="translated">RefinedVersion:</target>
        </trans-unit>
        <trans-unit id="d6cb5a375bf0cd75c0a69fc9ba88a97fb799f54e" translate="yes" xml:space="preserve">
          <source>ReflectPermission</source>
          <target state="translated">ReflectPermission</target>
        </trans-unit>
        <trans-unit id="2d01027bfc5d4a71a86396cb3f67e6bec0222c0c" translate="yes" xml:space="preserve">
          <source>ReflectionException</source>
          <target state="translated">ReflectionException</target>
        </trans-unit>
        <trans-unit id="f5db310463187f5e04e3108723679134a7901217" translate="yes" xml:space="preserve">
          <source>ReflectionException.getCause()</source>
          <target state="translated">ReflectionException.getCause()</target>
        </trans-unit>
        <trans-unit id="a859fcc5112eca66b30da9a9f01edd3a5d9f88d6" translate="yes" xml:space="preserve">
          <source>ReflectionException.getTargetException()</source>
          <target state="translated">ReflectionException.getTargetException()</target>
        </trans-unit>
        <trans-unit id="2b8590e50a6b2d7ad3516751190b2774d4874fde" translate="yes" xml:space="preserve">
          <source>ReflectiveOperationException</source>
          <target state="translated">ReflectiveOperationException</target>
        </trans-unit>
        <trans-unit id="be66ea5f9b80c846830ebdf4fa6896e57eaebabf" translate="yes" xml:space="preserve">
          <source>Reflects the underlying member as a method, constructor, or field object. If the underlying member is public, it is reflected as if by &lt;code&gt;getMethod&lt;/code&gt;, &lt;code&gt;getConstructor&lt;/code&gt;, or &lt;code&gt;getField&lt;/code&gt;. Otherwise, it is reflected as if by &lt;code&gt;getDeclaredMethod&lt;/code&gt;, &lt;code&gt;getDeclaredConstructor&lt;/code&gt;, or &lt;code&gt;getDeclaredField&lt;/code&gt;. The underlying member must be accessible to the given lookup object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a8ea3e10dcc9bc5da174c48b67e23ef0fb03d6" translate="yes" xml:space="preserve">
          <source>Refresh and reload the Configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fea83b7275c1e523d080f1f867f3beb4ba8011d" translate="yes" xml:space="preserve">
          <source>Refresh and reload the Policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8dfbfba556c3eecb62da9451b70d3b162d6fc1" translate="yes" xml:space="preserve">
          <source>RefreshFailedException</source>
          <target state="translated">RefreshFailedException</target>
        </trans-unit>
        <trans-unit id="b6ace5b1acf297e0701e541d23c48d23ae24b42b" translate="yes" xml:space="preserve">
          <source>Refreshable</source>
          <target state="translated">Refreshable</target>
        </trans-unit>
        <trans-unit id="a511d6f3bf25c78b7c3361a0ac60616bdefd6303" translate="yes" xml:space="preserve">
          <source>Refreshable.isCurrent()</source>
          <target state="translated">Refreshable.isCurrent()</target>
        </trans-unit>
        <trans-unit id="a85500f2fcc1a281203b187172f86cc0a6f8fb2c" translate="yes" xml:space="preserve">
          <source>Refreshable.refresh()</source>
          <target state="translated">Refreshable.refresh()</target>
        </trans-unit>
        <trans-unit id="6f274ce639bcfca5aa15defce8e371e96cfc7431" translate="yes" xml:space="preserve">
          <source>Refreshes the rules from the underlying data provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2218799162d91ccc31d29d19ecc3e9aab1cf0504" translate="yes" xml:space="preserve">
          <source>Refreshes/reloads the policy configuration. The behavior of this method depends on the implementation. For example, calling &lt;code&gt;refresh&lt;/code&gt; on a file-based policy will cause the file to be re-read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4584effcf6d678e18290fbfa654e54f20634876" translate="yes" xml:space="preserve">
          <source>Regardless of pending count, invokes &lt;a href=&quot;countedcompleter#onCompletion-java.util.concurrent.CountedCompleter-&quot;&gt;&lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt;&lt;/a&gt;, marks this task as complete and further triggers &lt;a href=&quot;countedcompleter#tryComplete--&quot;&gt;&lt;code&gt;tryComplete()&lt;/code&gt;&lt;/a&gt; on this task's completer, if one exists. The given rawResult is used as an argument to &lt;a href=&quot;countedcompleter#setRawResult-T-&quot;&gt;&lt;code&gt;setRawResult(T)&lt;/code&gt;&lt;/a&gt; before invoking &lt;a href=&quot;countedcompleter#onCompletion-java.util.concurrent.CountedCompleter-&quot;&gt;&lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt;&lt;/a&gt; or marking this task as complete; its value is meaningful only for classes overriding &lt;code&gt;setRawResult&lt;/code&gt;. This method does not modify the pending count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cab244dc039c6c2e146d036c9ef4d1f6cb5e155" translate="yes" xml:space="preserve">
          <source>Regardless of whether these additional &lt;code&gt;PKIXCertPathChecker&lt;/code&gt;s are set, a PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; or &lt;code&gt;CertPathBuilder&lt;/code&gt; must perform all of the required PKIX checks on each certificate. The one exception to this rule is if the RevocationEnabled flag is set to false (see the &lt;a href=&quot;pkixparameters#setRevocationEnabled-boolean-&quot;&gt;&lt;code&gt;setRevocationEnabled&lt;/code&gt;&lt;/a&gt; method).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e681935761236016678d2656c1d667f0fe6fdac" translate="yes" xml:space="preserve">
          <source>Regex</source>
          <target state="translated">Regex</target>
        </trans-unit>
        <trans-unit id="cfb1e7701fe6e96e60b597a97e291b190e76e3e8" translate="yes" xml:space="preserve">
          <source>Register a listener for the PropertyChange event. The customizer should fire a PropertyChange event whenever it changes the target bean in a way that might require the displayed properties to be refreshed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33fe55718264ec16d92fd202ba908a2885d63144" translate="yes" xml:space="preserve">
          <source>Register an object to be validated before the graph is returned. While similar to resolveObject these validations are called after the entire graph has been reconstituted. Typically, a readObject method will register the object with the stream so that when all of the objects are restored a final set of validations can be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99cfe9d7acb44fbe2081fa81038f88c7ac14b1c3" translate="yes" xml:space="preserve">
          <source>Register for notifications from the given MBeans that match the given filters. The remote client can subsequently retrieve the notifications using the &lt;a href=&quot;rmiconnection#fetchNotifications-long-int-long-&quot;&gt;&lt;code&gt;fetchNotifications&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c14bb2f17a52fb40b961ab225a7a6db64189e458" translate="yes" xml:space="preserve">
          <source>Register with the context using one of the &lt;code&gt;addNamingListener()&lt;/code&gt; methods from &lt;code&gt;EventContext&lt;/code&gt; or &lt;code&gt;EventDirContext&lt;/code&gt;. Only the &lt;code&gt;NamingListener&lt;/code&gt; argument of these methods are applicable; the rest are ignored for a &lt;code&gt;UnsolicitedNotificationListener&lt;/code&gt;. (These arguments might be applicable to the listener if it implements other listener interfaces).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1958b037adf8b138f9d7fee7b687c76a792ed70e" translate="yes" xml:space="preserve">
          <source>Register with the source using the source's &lt;code&gt;addNamingListener()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b53f7a128ec79c5a4d06bb7251d1dc77e06b51b" translate="yes" xml:space="preserve">
          <source>RegisterableService</source>
          <target state="translated">RegisterableService</target>
        </trans-unit>
        <trans-unit id="8756df1ff92b161263db4a955a202dd8033eb890" translate="yes" xml:space="preserve">
          <source>RegisterableService.onDeregistration()</source>
          <target state="translated">RegisterableService.onDeregistration()</target>
        </trans-unit>
        <trans-unit id="f9cc747b1d09ee1ecbd9f0185d71ce46d43930e5" translate="yes" xml:space="preserve">
          <source>RegisterableService.onRegistration()</source>
          <target state="translated">RegisterableService.onRegistration()</target>
        </trans-unit>
        <trans-unit id="62b1f4952dfdcbd07f21eb5f3af9e3efa985fa83" translate="yes" xml:space="preserve">
          <source>Registering the MBean in the MBean Server works in the same way in both cases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553033effa87cb0d8420c318fc581653e045cb36" translate="yes" xml:space="preserve">
          <source>Registers a &lt;code&gt;ScriptEngineFactory&lt;/code&gt; to handle a language name. Overrides any such association found using the Discovery mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c7da8da0e8bd9cb8fbf4a7e8699f103fb7fbd2" translate="yes" xml:space="preserve">
          <source>Registers a &lt;code&gt;ScriptEngineFactory&lt;/code&gt; to handle a mime type. Overrides any such association found using the Discovery mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a142f5de960597314c2039e05284bb2e3729c651" translate="yes" xml:space="preserve">
          <source>Registers a &lt;code&gt;ScriptEngineFactory&lt;/code&gt; to handle an extension. Overrides any such association found using the Discovery mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7d17d0c7697cb0f4df44f10f310c8f24e8a50d" translate="yes" xml:space="preserve">
          <source>Registers a controller event listener to receive notification whenever the sequencer processes a control-change event of the requested type or types. The types are specified by the &lt;code&gt;controllers&lt;/code&gt; argument, which should contain an array of MIDI controller numbers. (Each number should be between 0 and 127, inclusive. See the MIDI 1.0 Specification for the numbers that correspond to various types of controllers.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab2482a15c08684cba55ab078ae6bad7899f8df" translate="yes" xml:space="preserve">
          <source>Registers a listener for PropertyChange events on the properties map. This is typically used by applications to update a progress bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc720b70d17df29f63b0d8e8e2225664d4c64a31" translate="yes" xml:space="preserve">
          <source>Registers a listener for changes in the specified attributes. If listener is null, no exception is thrown and no action is performed. To determine the attribute updates that may be reported by this job, a client can call &lt;code&gt;getAttributes()&lt;/code&gt; and identify the subset that are interesting and likely to be reported to the listener. Clients expecting to be updated about changes in a specific job attribute should verify it is in that set, but updates about an attribute will be made only if it changes and this is detected by the job. Also updates may be subject to batching by the job. To minimize overhead in print job processing it is recommended to listen on only that subset of attributes which are likely to change. If the specified set is empty no attribute updates will be reported to the listener. If the attribute set is null, then this means to listen on all dynamic attributes that the job supports. This may result in no update notifications if a job can not report any attribute updates. If listener is already registered, it will be registered again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e2627177eb32a155792446b143af6745c69ac2f" translate="yes" xml:space="preserve">
          <source>Registers a listener for event occurring during this print job. If listener is null, no exception is thrown and no action is performed. If listener is already registered, it will be registered again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa1a0452b333d8c78fd4f4da861c5e1ca66f4ee" translate="yes" xml:space="preserve">
          <source>Registers a listener for events on this PrintService.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee93e17d4082d84b6ad756c9ec870ab54edc211a" translate="yes" xml:space="preserve">
          <source>Registers a meta-event listener to receive notification whenever a meta-event is encountered in the sequence and processed by the sequencer. This method can fail if, for instance,this class of sequencer does not support meta-event notification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de0550b4c503083a5cd00a2fd56d4f39c307b68" translate="yes" xml:space="preserve">
          <source>Registers a new virtual-machine shutdown hook.</source>
          <target state="translated">注册一个新的虚拟机关机钩。</target>
        </trans-unit>
        <trans-unit id="ca0ff2de895be98e326f66b7e224476823b343c4" translate="yes" xml:space="preserve">
          <source>Registers a pre-existing object as an MBean with the MBean server. If the object name given is null, the MBean must provide its own name by implementing the &lt;a href=&quot;mbeanregistration&quot;&gt;&lt;code&gt;MBeanRegistration&lt;/code&gt;&lt;/a&gt; interface and returning the name from the &lt;a href=&quot;mbeanregistration#preRegister-javax.management.MBeanServer-javax.management.ObjectName-&quot;&gt;&lt;code&gt;preRegister&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7d4c42fa2c99f61ea3dfbc061f2c062d801c90" translate="yes" xml:space="preserve">
          <source>Registers a zone rules provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e71cfda5b9affba2429dbc5ce8a475b97db1ce4" translate="yes" xml:space="preserve">
          <source>Registers all available service providers found on the application class path, using the default &lt;code&gt;ClassLoader&lt;/code&gt;. This method is typically invoked by the &lt;code&gt;ImageIO.scanForPlugins&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a02532a3721f2f9d41a25eca055cb10d337169e" translate="yes" xml:space="preserve">
          <source>Registers an editor class to edit values of the given target class. If the editor class is &lt;code&gt;null&lt;/code&gt;, then any existing definition will be removed. Thus this method can be used to cancel the registration. The registration is canceled automatically if either the target or editor class is unloaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67f5ec43e5f26853528d74ea2c41e46c604c68f" translate="yes" xml:space="preserve">
          <source>Registers an event listener to receive notifications that an SSL handshake has completed on this connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995d054ef85bb8c6aea1733328630d60f315ef72" translate="yes" xml:space="preserve">
          <source>Registers an object which implements the NotificationListener interface as a listener. This object's 'handleNotification()' method will be invoked when any attributeChangeNotification is issued through or by the ModelMBean. This does not include other Notifications. They must be registered for independently. An AttributeChangeNotification will be generated for this attributeName.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42adbf525d93f9a5a302a1f620172337cd2f21fa" translate="yes" xml:space="preserve">
          <source>Registers an object which implements the NotificationListener interface as a listener. This object's 'handleNotification()' method will be invoked when any notification is issued through or by the ModelMBean. This does not include attributeChangeNotifications. They must be registered for independently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37175ac7bb8a0deed7cba30b0128f0d39329aaae" translate="yes" xml:space="preserve">
          <source>Registers an object with a watch service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93eb9e16f552eabaf7915d7c00ad65a95af4f22d" translate="yes" xml:space="preserve">
          <source>Registers the caller as parallel capable. The registration succeeds if and only if all of the following conditions are met:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee1e7088f699fca2e54dc27e25002296f69e8cc" translate="yes" xml:space="preserve">
          <source>Registers the file located by this path with a watch service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3deccc3a406b6507c106cb260affc329adf4b482" translate="yes" xml:space="preserve">
          <source>Registers the given channel with this selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d34764ffe2186bfcea2141c626219c4736caee" translate="yes" xml:space="preserve">
          <source>Registers the specified listener to receive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0d1356096504db99f22517122c6700894206eb" translate="yes" xml:space="preserve">
          <source>Registers the supplied transformer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c389cd68491f780c8b3a75050c9159569147634" translate="yes" xml:space="preserve">
          <source>Registers the supplied transformer. All future class definitions will be seen by the transformer, except definitions of classes upon which any registered transformer is dependent. The transformer is called when classes are loaded, when they are &lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt;redefined&lt;/a&gt;. and if &lt;code&gt;canRetransform&lt;/code&gt; is true, when they are &lt;a href=&quot;instrumentation#retransformClasses-java.lang.Class...-&quot;&gt;retransformed&lt;/a&gt;. See &lt;a href=&quot;classfiletransformer#transform-java.lang.ClassLoader-java.lang.String-java.lang.Class-java.security.ProtectionDomain-byte:A-&quot;&gt;&lt;code&gt;ClassFileTransformer.transform&lt;/code&gt;&lt;/a&gt; for the order of transform calls. If a transformer throws an exception during execution, the JVM will still call the other registered transformers in order. The same transformer may be added more than once, but it is strongly discouraged -- avoid this by creating a new instance of transformer class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d7692db45412c4235cac92f1a763103237825f" translate="yes" xml:space="preserve">
          <source>Registers this channel with the given selector, returning a selection key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="646ebb8d5189a5647f1e1f1c8633de50ea1622e0" translate="yes" xml:space="preserve">
          <source>Registration and cancellation of virtual-machine shutdown hooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf0a6618b7078be95a3db09b499eff69a056e4f" translate="yes" xml:space="preserve">
          <source>Registration with a watch service is cancelled by invoking the key's &lt;a href=&quot;watchkey#cancel--&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method. A key that is queued at the time that it is cancelled remains in the queue until it is retrieved. Depending on the object, a key may be cancelled automatically. For example, suppose a directory is watched and the watch service detects that it has been deleted or its file system is no longer accessible. When a key is cancelled in this manner it is signalled and queued, if not currently signalled. To ensure that the consumer is notified the return value from the &lt;code&gt;reset&lt;/code&gt; method indicates if the key is valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d345869d1bbcdf5e950e655545529a4c950c7bec" translate="yes" xml:space="preserve">
          <source>Rehandshaking - Either side may request a renegotiation of the session at any time during the Application Data phase. New handshaking data can be intermixed among the application data. Before starting the rehandshake phase, the application may reset the SSL/TLS communication parameters such as the list of enabled ciphersuites and whether to use client authentication, but can not change between client/server modes. As before, once handshaking has begun, any new &lt;code&gt;SSLEngine&lt;/code&gt; configuration settings will not be used until the next handshake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12286707c490ff3194d7a0b198abc874c71f7236" translate="yes" xml:space="preserve">
          <source>Reinitialize the logging properties and reread the logging configuration from the given stream, which should be in java.util.Properties format. A PropertyChangeEvent will be fired after the properties are read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f2948c6c51a0e2211a0eb6ce8c9a4a66463b2c" translate="yes" xml:space="preserve">
          <source>Reinitialize the logging properties and reread the logging configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73837e5fd74d04a73860ffda0d8276d514b16c2f" translate="yes" xml:space="preserve">
          <source>Rejected tasks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4fc742493c65476056c4a4bb671f630bdc20758" translate="yes" xml:space="preserve">
          <source>RejectedExecutionException</source>
          <target state="translated">RejectedExecutionException</target>
        </trans-unit>
        <trans-unit id="cca6f791ea026fad663dee88d744c09e2eab2079" translate="yes" xml:space="preserve">
          <source>RejectedExecutionHandler</source>
          <target state="translated">RejectedExecutionHandler</target>
        </trans-unit>
        <trans-unit id="f27c0ba64a208a5ccb6fcec74303f6aa0784fe80" translate="yes" xml:space="preserve">
          <source>RejectedExecutionHandler.rejectedExecution()</source>
          <target state="translated">RejectedExecutionHandler.rejectedExecution()</target>
        </trans-unit>
        <trans-unit id="9ae0e624f51d3cc740e8e03fb210a51223173edd" translate="yes" xml:space="preserve">
          <source>Related Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da31fbaed2f89f94da67be50841d714014a504ad" translate="yes" xml:space="preserve">
          <source>Related constructions may be used to await particular phase numbers in contexts where you are sure that the phase will never wrap around &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a5a7571bf686aab9c742d3d618a2dde6a4506e" translate="yes" xml:space="preserve">
          <source>Relation</source>
          <target state="translated">Relation</target>
        </trans-unit>
        <trans-unit id="1527aae397c3cc08b0b01356f362356b1cbcaeae" translate="yes" xml:space="preserve">
          <source>Relation.getAllRoles()</source>
          <target state="translated">Relation.getAllRoles()</target>
        </trans-unit>
        <trans-unit id="5537879a533d634b2baa4092e537ab2e8241602a" translate="yes" xml:space="preserve">
          <source>Relation.getReferencedMBeans()</source>
          <target state="translated">Relation.getReferencedMBeans()</target>
        </trans-unit>
        <trans-unit id="c9c889fbb5d4fa5d7f25084464ae045f89aa3d4a" translate="yes" xml:space="preserve">
          <source>Relation.getRelationId()</source>
          <target state="translated">Relation.getRelationId()</target>
        </trans-unit>
        <trans-unit id="2befdd1b90ba9668f2ee3fe12ea336091fdd6e67" translate="yes" xml:space="preserve">
          <source>Relation.getRelationServiceName()</source>
          <target state="translated">Relation.getRelationServiceName()</target>
        </trans-unit>
        <trans-unit id="2e4633dbc8fda766978968e7a8da3a29375cf1db" translate="yes" xml:space="preserve">
          <source>Relation.getRelationTypeName()</source>
          <target state="translated">Relation.getRelationTypeName()</target>
        </trans-unit>
        <trans-unit id="a10a9eac16afe11ed79659463f8ae3c5f1b4b527" translate="yes" xml:space="preserve">
          <source>Relation.getRole()</source>
          <target state="translated">Relation.getRole()</target>
        </trans-unit>
        <trans-unit id="9b12e961e6c3c7c43741a3d480dfd13302d48780" translate="yes" xml:space="preserve">
          <source>Relation.getRoleCardinality()</source>
          <target state="translated">Relation.getRoleCardinality()</target>
        </trans-unit>
        <trans-unit id="1d153cda5b256ef5dec8ed5431b44d0a28f65dfe" translate="yes" xml:space="preserve">
          <source>Relation.getRoles()</source>
          <target state="translated">Relation.getRoles()</target>
        </trans-unit>
        <trans-unit id="f004a2bdfc42a1c11070315605ddcaabbcb67be3" translate="yes" xml:space="preserve">
          <source>Relation.handleMBeanUnregistration()</source>
          <target state="translated">Relation.handleMBeanUnregistration()</target>
        </trans-unit>
        <trans-unit id="2fa022fe02b86e03ba2858a6891ac1b0801e2f78" translate="yes" xml:space="preserve">
          <source>Relation.retrieveAllRoles()</source>
          <target state="translated">Relation.retrieveAllRoles()</target>
        </trans-unit>
        <trans-unit id="10efa0dcd75efdaae22ca854c0069cb6154df98c" translate="yes" xml:space="preserve">
          <source>Relation.setRole()</source>
          <target state="translated">Relation.setRole()</target>
        </trans-unit>
        <trans-unit id="756c61761b4e2290cc5812b78355108cea31ecc2" translate="yes" xml:space="preserve">
          <source>Relation.setRoles()</source>
          <target state="translated">Relation.setRoles()</target>
        </trans-unit>
        <trans-unit id="2298dede4c2138e33a211972e50a7712bb5ef8f6" translate="yes" xml:space="preserve">
          <source>RelationException</source>
          <target state="translated">RelationException</target>
        </trans-unit>
        <trans-unit id="ac14345337bedeb5c0b2faa9ce857d23740caf5a" translate="yes" xml:space="preserve">
          <source>RelationNotFoundException</source>
          <target state="translated">RelationNotFoundException</target>
        </trans-unit>
        <trans-unit id="0cbaa2ef94ea5aa9940c3af3bdb4d1cd69933d9b" translate="yes" xml:space="preserve">
          <source>RelationNotification</source>
          <target state="translated">RelationNotification</target>
        </trans-unit>
        <trans-unit id="a1c15024873bb7277658ee7eaad5d4b1f093827e" translate="yes" xml:space="preserve">
          <source>RelationNotification.getMBeansToUnregister()</source>
          <target state="translated">RelationNotification.getMBeansToUnregister()</target>
        </trans-unit>
        <trans-unit id="a3119f0680df95b3d33de6b6476823b711022628" translate="yes" xml:space="preserve">
          <source>RelationNotification.getNewRoleValue()</source>
          <target state="translated">RelationNotification.getNewRoleValue()</target>
        </trans-unit>
        <trans-unit id="657720ecd80092ae5d71671285ed48c72503b8f9" translate="yes" xml:space="preserve">
          <source>RelationNotification.getObjectName()</source>
          <target state="translated">RelationNotification.getObjectName()</target>
        </trans-unit>
        <trans-unit id="e4e7d5a5dee7cb31504df46dd4936f49699e2ace" translate="yes" xml:space="preserve">
          <source>RelationNotification.getOldRoleValue()</source>
          <target state="translated">RelationNotification.getOldRoleValue()</target>
        </trans-unit>
        <trans-unit id="bddfaaf289580240d47ef4270006eadf14b6d95c" translate="yes" xml:space="preserve">
          <source>RelationNotification.getRelationId()</source>
          <target state="translated">RelationNotification.getRelationId()</target>
        </trans-unit>
        <trans-unit id="d740b71f7e94b065fa6b83eb4921ce0e7878b9ba" translate="yes" xml:space="preserve">
          <source>RelationNotification.getRelationTypeName()</source>
          <target state="translated">RelationNotification.getRelationTypeName()</target>
        </trans-unit>
        <trans-unit id="ae2b5606943f774f9acd5eccd63a6febae46ce83" translate="yes" xml:space="preserve">
          <source>RelationNotification.getRoleName()</source>
          <target state="translated">RelationNotification.getRoleName()</target>
        </trans-unit>
        <trans-unit id="04206f587043b0fa8786a3bd786720996e3f0d21" translate="yes" xml:space="preserve">
          <source>RelationService</source>
          <target state="translated">RelationService</target>
        </trans-unit>
        <trans-unit id="bab6f6bcfc026eb1308851931cff077898c3d5d7" translate="yes" xml:space="preserve">
          <source>RelationService.addRelation()</source>
          <target state="translated">RelationService.addRelation()</target>
        </trans-unit>
        <trans-unit id="e96e0d59e502e52f8ebd9de7a811d2d3f0dc94a9" translate="yes" xml:space="preserve">
          <source>RelationService.addRelationType()</source>
          <target state="translated">RelationService.addRelationType()</target>
        </trans-unit>
        <trans-unit id="900fb8934132a753c00ddc6c07a87d2483c636ca" translate="yes" xml:space="preserve">
          <source>RelationService.checkRoleReading()</source>
          <target state="translated">RelationService.checkRoleReading()</target>
        </trans-unit>
        <trans-unit id="f8a9edbab908320966563afd4829080072a5579b" translate="yes" xml:space="preserve">
          <source>RelationService.checkRoleWriting()</source>
          <target state="translated">RelationService.checkRoleWriting()</target>
        </trans-unit>
        <trans-unit id="2a9043e1dbb29ff25bd96caf86a1c175b410a75b" translate="yes" xml:space="preserve">
          <source>RelationService.createRelation()</source>
          <target state="translated">RelationService.createRelation()</target>
        </trans-unit>
        <trans-unit id="d35cc2af83a925d73959041bf76e43a94ec00897" translate="yes" xml:space="preserve">
          <source>RelationService.createRelationType()</source>
          <target state="translated">RelationService.createRelationType()</target>
        </trans-unit>
        <trans-unit id="902a47ddbf9d34b04f0925e05de3b0065f80e023" translate="yes" xml:space="preserve">
          <source>RelationService.findAssociatedMBeans()</source>
          <target state="translated">RelationService.findAssociatedMBeans()</target>
        </trans-unit>
        <trans-unit id="6b9cf4149cc41d0e3868fb288ee990cbe72f8923" translate="yes" xml:space="preserve">
          <source>RelationService.findReferencingRelations()</source>
          <target state="translated">RelationService.findReferencingRelations()</target>
        </trans-unit>
        <trans-unit id="6bf8343c981c591a001dc2e5a1090be5de040bed" translate="yes" xml:space="preserve">
          <source>RelationService.findRelationsOfType()</source>
          <target state="translated">RelationService.findRelationsOfType()</target>
        </trans-unit>
        <trans-unit id="d48adb9c10d23356745041707cd2d29b22b99a70" translate="yes" xml:space="preserve">
          <source>RelationService.getAllRelationIds()</source>
          <target state="translated">RelationService.getAllRelationIds()</target>
        </trans-unit>
        <trans-unit id="9e276a543db52ca174fb67ad78d9689e8b2cfb71" translate="yes" xml:space="preserve">
          <source>RelationService.getAllRelationTypeNames()</source>
          <target state="translated">RelationService.getAllRelationTypeNames()</target>
        </trans-unit>
        <trans-unit id="42d41edae51c983bdfb5ef90192a68e9cd9f0cfe" translate="yes" xml:space="preserve">
          <source>RelationService.getAllRoles()</source>
          <target state="translated">RelationService.getAllRoles()</target>
        </trans-unit>
        <trans-unit id="e806ddcb1c870e5384406ceb1d6ac5b3e46c974f" translate="yes" xml:space="preserve">
          <source>RelationService.getNotificationInfo()</source>
          <target state="translated">RelationService.getNotificationInfo()</target>
        </trans-unit>
        <trans-unit id="2d7661181a613d21652283bfef03371f7b492091" translate="yes" xml:space="preserve">
          <source>RelationService.getPurgeFlag()</source>
          <target state="translated">RelationService.getPurgeFlag()</target>
        </trans-unit>
        <trans-unit id="23a901b0d9d53de73783c931534a4c07f96cb645" translate="yes" xml:space="preserve">
          <source>RelationService.getReferencedMBeans()</source>
          <target state="translated">RelationService.getReferencedMBeans()</target>
        </trans-unit>
        <trans-unit id="ab45e0be890ad0a6c1956b439f17325d90887e37" translate="yes" xml:space="preserve">
          <source>RelationService.getRelationTypeName()</source>
          <target state="translated">RelationService.getRelationTypeName()</target>
        </trans-unit>
        <trans-unit id="0fcaf664758318d0add2afc05ab332d537d97d92" translate="yes" xml:space="preserve">
          <source>RelationService.getRole()</source>
          <target state="translated">RelationService.getRole()</target>
        </trans-unit>
        <trans-unit id="61c9403c19ff4fb0d2ebd08f98599a3f1e83017d" translate="yes" xml:space="preserve">
          <source>RelationService.getRoleCardinality()</source>
          <target state="translated">RelationService.getRoleCardinality()</target>
        </trans-unit>
        <trans-unit id="7db55da03276e345ec5e8a6d34666cd9c99ef49c" translate="yes" xml:space="preserve">
          <source>RelationService.getRoleInfo()</source>
          <target state="translated">RelationService.getRoleInfo()</target>
        </trans-unit>
        <trans-unit id="589f2f26f4a094556fc4410c43ed5ce91291b24c" translate="yes" xml:space="preserve">
          <source>RelationService.getRoleInfos()</source>
          <target state="translated">RelationService.getRoleInfos()</target>
        </trans-unit>
        <trans-unit id="d81ad4ef50eeb36174de7617273dcdef72d6785d" translate="yes" xml:space="preserve">
          <source>RelationService.getRoles()</source>
          <target state="translated">RelationService.getRoles()</target>
        </trans-unit>
        <trans-unit id="9210ab0ee58c12e7afcc5cb11e77b7f02c00258f" translate="yes" xml:space="preserve">
          <source>RelationService.handleNotification()</source>
          <target state="translated">RelationService.handleNotification()</target>
        </trans-unit>
        <trans-unit id="3d8ecd11d6b797a38f638d3fdc47e1e24252824f" translate="yes" xml:space="preserve">
          <source>RelationService.hasRelation()</source>
          <target state="translated">RelationService.hasRelation()</target>
        </trans-unit>
        <trans-unit id="ab569b14227582c4a3428ec838dda0ec3292a3d8" translate="yes" xml:space="preserve">
          <source>RelationService.isActive()</source>
          <target state="translated">RelationService.isActive()</target>
        </trans-unit>
        <trans-unit id="1bae8d293d6c57056553b23e17ae2333296989db" translate="yes" xml:space="preserve">
          <source>RelationService.isRelation()</source>
          <target state="translated">RelationService.isRelation()</target>
        </trans-unit>
        <trans-unit id="7c0eb472661e7f929d79bce3a7a7d5738599b940" translate="yes" xml:space="preserve">
          <source>RelationService.isRelationMBean()</source>
          <target state="translated">RelationService.isRelationMBean()</target>
        </trans-unit>
        <trans-unit id="360a7de013eb7102881d775e5f34f9ab6bebc594" translate="yes" xml:space="preserve">
          <source>RelationService.postDeregister()</source>
          <target state="translated">RelationService.postDeregister()</target>
        </trans-unit>
        <trans-unit id="ec7989aded9397291d4113e4a9f3337b0140072e" translate="yes" xml:space="preserve">
          <source>RelationService.postRegister()</source>
          <target state="translated">RelationService.postRegister()</target>
        </trans-unit>
        <trans-unit id="1203e41fab1edf500ce63da8cb9f5a9fdbaaf413" translate="yes" xml:space="preserve">
          <source>RelationService.preDeregister()</source>
          <target state="translated">RelationService.preDeregister()</target>
        </trans-unit>
        <trans-unit id="a0843c3ca0ef39d36209498ffe967d3148fd7d67" translate="yes" xml:space="preserve">
          <source>RelationService.preRegister()</source>
          <target state="translated">RelationService.preRegister()</target>
        </trans-unit>
        <trans-unit id="d8a6070a0df18e5441ba1c07d7a797d33352f89e" translate="yes" xml:space="preserve">
          <source>RelationService.purgeRelations()</source>
          <target state="translated">RelationService.purgeRelations()</target>
        </trans-unit>
        <trans-unit id="f0a788363e7ea37e4bf43027196f8d13b68be157" translate="yes" xml:space="preserve">
          <source>RelationService.removeRelation()</source>
          <target state="translated">RelationService.removeRelation()</target>
        </trans-unit>
        <trans-unit id="4a821fd51f8c893c3c3fe4b61e0ea1e50d7bfefb" translate="yes" xml:space="preserve">
          <source>RelationService.removeRelationType()</source>
          <target state="translated">RelationService.removeRelationType()</target>
        </trans-unit>
        <trans-unit id="0b95e36970a1e8cb66600daf83d48b20780995c5" translate="yes" xml:space="preserve">
          <source>RelationService.sendRelationCreationNotification()</source>
          <target state="translated">RelationService.sendRelationCreationNotification()</target>
        </trans-unit>
        <trans-unit id="3d36bc974ef08eddf0ef59fd505c42c0f5fbba3b" translate="yes" xml:space="preserve">
          <source>RelationService.sendRelationRemovalNotification()</source>
          <target state="translated">RelationService.sendRelationRemovalNotification()</target>
        </trans-unit>
        <trans-unit id="35eb3ec3b34075a8c97bb47e956a9ed2c6a70f0e" translate="yes" xml:space="preserve">
          <source>RelationService.sendRoleUpdateNotification()</source>
          <target state="translated">RelationService.sendRoleUpdateNotification()</target>
        </trans-unit>
        <trans-unit id="36ab5f65aaa381cf67953c036509fe791e82acfa" translate="yes" xml:space="preserve">
          <source>RelationService.setPurgeFlag()</source>
          <target state="translated">RelationService.setPurgeFlag()</target>
        </trans-unit>
        <trans-unit id="95b1c6b532c24a2700ece38ddf5b8b1c867c969b" translate="yes" xml:space="preserve">
          <source>RelationService.setRole()</source>
          <target state="translated">RelationService.setRole()</target>
        </trans-unit>
        <trans-unit id="3ee6701d74e6fd347c55c0ce6f0fcf959966d3f3" translate="yes" xml:space="preserve">
          <source>RelationService.setRoles()</source>
          <target state="translated">RelationService.setRoles()</target>
        </trans-unit>
        <trans-unit id="561c3e1daa0c88070f05c05bfa3f8659e9675ed0" translate="yes" xml:space="preserve">
          <source>RelationService.updateRoleMap()</source>
          <target state="translated">RelationService.updateRoleMap()</target>
        </trans-unit>
        <trans-unit id="79e6fa7c814eb01ce421ced0950ceb36ce2686fe" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean</source>
          <target state="translated">RelationServiceMBean</target>
        </trans-unit>
        <trans-unit id="779afb94478eb3e170e3bef908cf75c29e76863a" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.addRelation()</source>
          <target state="translated">RelationServiceMBean.addRelation()</target>
        </trans-unit>
        <trans-unit id="51ca273232fb07828ceffb028a6f6a4d09f3a07f" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.addRelationType()</source>
          <target state="translated">RelationServiceMBean.addRelationType()</target>
        </trans-unit>
        <trans-unit id="290a9038c4a69f6d9494d5747f39199c9df57d98" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.checkRoleReading()</source>
          <target state="translated">RelationServiceMBean.checkRoleReading()</target>
        </trans-unit>
        <trans-unit id="71af7f39ebdf8617f08d135b9aac6f1f339ff447" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.checkRoleWriting()</source>
          <target state="translated">RelationServiceMBean.checkRoleWriting()</target>
        </trans-unit>
        <trans-unit id="3deea458ed7ff9b8f70ff98b792a0ab507e228b5" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.createRelation()</source>
          <target state="translated">RelationServiceMBean.createRelation()</target>
        </trans-unit>
        <trans-unit id="48b729c0f13288c2369ebaa30a5c91899efc0146" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.createRelationType()</source>
          <target state="translated">RelationServiceMBean.createRelationType()</target>
        </trans-unit>
        <trans-unit id="947187a0c108fa47692c7d43ab9b1d46aa7135e8" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.findAssociatedMBeans()</source>
          <target state="translated">RelationServiceMBean.findAssociatedMBeans()</target>
        </trans-unit>
        <trans-unit id="f3e204a8d9424d4924f26e3ba47eef5f74cb2387" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.findReferencingRelations()</source>
          <target state="translated">RelationServiceMBean.findReferencingRelations()</target>
        </trans-unit>
        <trans-unit id="fdd74e23520bf28940e06a5248531e6b6613cf5f" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.findRelationsOfType()</source>
          <target state="translated">RelationServiceMBean.findRelationsOfType()</target>
        </trans-unit>
        <trans-unit id="1796f43ec4e023225ea979390d9c538af83568fc" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.getAllRelationIds()</source>
          <target state="translated">RelationServiceMBean.getAllRelationIds()</target>
        </trans-unit>
        <trans-unit id="d3b72df28ab9cae26fbb2d5c57f08ec9fd5abcfa" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.getAllRelationTypeNames()</source>
          <target state="translated">RelationServiceMBean.getAllRelationTypeNames()</target>
        </trans-unit>
        <trans-unit id="dff0b38f7117f048a9e7d621e0e8fcf1a12a21f5" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.getAllRoles()</source>
          <target state="translated">RelationServiceMBean.getAllRoles()</target>
        </trans-unit>
        <trans-unit id="2a0115680ce22eeafd5a9e1fc9b1ee33dc8b82ce" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.getPurgeFlag()</source>
          <target state="translated">RelationServiceMBean.getPurgeFlag()</target>
        </trans-unit>
        <trans-unit id="ad81bbfeb84fd489ace60eb634a7f09c7ecf3cc7" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.getReferencedMBeans()</source>
          <target state="translated">RelationServiceMBean.getReferencedMBeans()</target>
        </trans-unit>
        <trans-unit id="27e29ad6a626d59366c0c5a5a8a50d92268baf8b" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.getRelationTypeName()</source>
          <target state="translated">RelationServiceMBean.getRelationTypeName()</target>
        </trans-unit>
        <trans-unit id="4e3970cbe2008cb3dc5b70909587c39846b63b3e" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.getRole()</source>
          <target state="translated">RelationServiceMBean.getRole()</target>
        </trans-unit>
        <trans-unit id="865f2727e59655699188afe6c64c454c656d14a2" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.getRoleCardinality()</source>
          <target state="translated">RelationServiceMBean.getRoleCardinality()</target>
        </trans-unit>
        <trans-unit id="aaa7ced4f90f37a8c5f6a729a08c1cd47bfe432f" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.getRoleInfo()</source>
          <target state="translated">RelationServiceMBean.getRoleInfo()</target>
        </trans-unit>
        <trans-unit id="e7cafca477ae559eba548845fb60a035995c4429" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.getRoleInfos()</source>
          <target state="translated">RelationServiceMBean.getRoleInfos()</target>
        </trans-unit>
        <trans-unit id="83b95ebcc8aefaf3e0c1ed460f63873fa7146d8c" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.getRoles()</source>
          <target state="translated">RelationServiceMBean.getRoles()</target>
        </trans-unit>
        <trans-unit id="2ec5682c74cfea24ee2333042a3598e3b75dd9d0" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.hasRelation()</source>
          <target state="translated">RelationServiceMBean.hasRelation()</target>
        </trans-unit>
        <trans-unit id="ede0ec0f0ebec6db35292302024fb853128d9a9b" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.isActive()</source>
          <target state="translated">RelationServiceMBean.isActive()</target>
        </trans-unit>
        <trans-unit id="6d4c5d50faa1a6a38ea931bed03aa9d5a72ba282" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.isRelation()</source>
          <target state="translated">RelationServiceMBean.isRelation()</target>
        </trans-unit>
        <trans-unit id="2827602c3c7c78cee4414b2ffdfa05dfc3050ec8" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.isRelationMBean()</source>
          <target state="translated">RelationServiceMBean.isRelationMBean()</target>
        </trans-unit>
        <trans-unit id="d8b828bfae420e84574de1d32a71cb36ea26835b" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.purgeRelations()</source>
          <target state="translated">RelationServiceMBean.purgeRelations()</target>
        </trans-unit>
        <trans-unit id="ba7924bc1dac709c0f41048e0fc0f1d10b4bf134" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.removeRelation()</source>
          <target state="translated">RelationServiceMBean.removeRelation()</target>
        </trans-unit>
        <trans-unit id="4e14480783d3ee07f508ee671fb1da91c4d1af68" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.removeRelationType()</source>
          <target state="translated">RelationServiceMBean.removeRelationType()</target>
        </trans-unit>
        <trans-unit id="cde90dd92d933f8311cd0fd3fc78cd947191d15e" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.sendRelationCreationNotification()</source>
          <target state="translated">RelationServiceMBean.sendRelationCreationNotification()</target>
        </trans-unit>
        <trans-unit id="8809c091037eb3b934fedfd99f7521e3b5cb225e" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.sendRelationRemovalNotification()</source>
          <target state="translated">RelationServiceMBean.sendRelationRemovalNotification()</target>
        </trans-unit>
        <trans-unit id="a6aca1659d314583389830870e5dd3c74b941e40" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.sendRoleUpdateNotification()</source>
          <target state="translated">RelationServiceMBean.sendRoleUpdateNotification()</target>
        </trans-unit>
        <trans-unit id="32b2221abca19c86e7f48be3f5d0a5cf0fb407c7" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.setPurgeFlag()</source>
          <target state="translated">RelationServiceMBean.setPurgeFlag()</target>
        </trans-unit>
        <trans-unit id="a433c8af97d09b63299177636471d344aaf83d81" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.setRole()</source>
          <target state="translated">RelationServiceMBean.setRole()</target>
        </trans-unit>
        <trans-unit id="df7fc4c8c60a379f424e27117be33f40fa346f40" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.setRoles()</source>
          <target state="translated">RelationServiceMBean.setRoles()</target>
        </trans-unit>
        <trans-unit id="42f6c4b916617c7f57f5481c9e5b147cc151bcf0" translate="yes" xml:space="preserve">
          <source>RelationServiceMBean.updateRoleMap()</source>
          <target state="translated">RelationServiceMBean.updateRoleMap()</target>
        </trans-unit>
        <trans-unit id="3192ab98ef2b887c112066bfb4428e6009070461" translate="yes" xml:space="preserve">
          <source>RelationServiceNotRegisteredException</source>
          <target state="translated">RelationServiceNotRegisteredException</target>
        </trans-unit>
        <trans-unit id="97c70ff5f658dcd54481d7410a01c0e0261a49a3" translate="yes" xml:space="preserve">
          <source>RelationSupport</source>
          <target state="translated">RelationSupport</target>
        </trans-unit>
        <trans-unit id="629ca5f1866abef105f0d4f2f4689e11cf216c19" translate="yes" xml:space="preserve">
          <source>RelationSupport class conforms to the design patterns of standard MBean. So the user can decide to instantiate a RelationSupport object himself as a MBean (as it follows the MBean design patterns), to register it in the MBean Server, and then to add it in the Relation Service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7762c5e684695d167094063e3dacf44cd47f9211" translate="yes" xml:space="preserve">
          <source>RelationSupport implements the Relation interface (to be handled by the Relation Service).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc69ef569f5e26b284f984c694cbaf415fc9c67" translate="yes" xml:space="preserve">
          <source>RelationSupport.getAllRoles()</source>
          <target state="translated">RelationSupport.getAllRoles()</target>
        </trans-unit>
        <trans-unit id="593eb9ebc9c6b836d00cdf1a610d4ba685062627" translate="yes" xml:space="preserve">
          <source>RelationSupport.getReferencedMBeans()</source>
          <target state="translated">RelationSupport.getReferencedMBeans()</target>
        </trans-unit>
        <trans-unit id="125567570b3590082196ca2dcd295f0922dca494" translate="yes" xml:space="preserve">
          <source>RelationSupport.getRelationId()</source>
          <target state="translated">RelationSupport.getRelationId()</target>
        </trans-unit>
        <trans-unit id="81bf595916c1d32dc5a57e1f0214dd96a36f42fb" translate="yes" xml:space="preserve">
          <source>RelationSupport.getRelationServiceName()</source>
          <target state="translated">RelationSupport.getRelationServiceName()</target>
        </trans-unit>
        <trans-unit id="c8173e3f12c9b57f60d94effe8a458b76eaede04" translate="yes" xml:space="preserve">
          <source>RelationSupport.getRelationTypeName()</source>
          <target state="translated">RelationSupport.getRelationTypeName()</target>
        </trans-unit>
        <trans-unit id="5f64e9cc4143ba4379403f30d2083a637a3f3366" translate="yes" xml:space="preserve">
          <source>RelationSupport.getRole()</source>
          <target state="translated">RelationSupport.getRole()</target>
        </trans-unit>
        <trans-unit id="5fca00a717910bcaa1492fcdbc91c250306f308e" translate="yes" xml:space="preserve">
          <source>RelationSupport.getRoleCardinality()</source>
          <target state="translated">RelationSupport.getRoleCardinality()</target>
        </trans-unit>
        <trans-unit id="737852a09f7cf50f011490998df897f0c85230cb" translate="yes" xml:space="preserve">
          <source>RelationSupport.getRoles()</source>
          <target state="translated">RelationSupport.getRoles()</target>
        </trans-unit>
        <trans-unit id="46f411756b6e6758b899a8962e023c1fb728b672" translate="yes" xml:space="preserve">
          <source>RelationSupport.handleMBeanUnregistration()</source>
          <target state="translated">RelationSupport.handleMBeanUnregistration()</target>
        </trans-unit>
        <trans-unit id="714edc909d124448a6f5246863d37dba025ab864" translate="yes" xml:space="preserve">
          <source>RelationSupport.isInRelationService()</source>
          <target state="translated">RelationSupport.isInRelationService()</target>
        </trans-unit>
        <trans-unit id="423e01400aa8da74c6583980b4876b3e5853150e" translate="yes" xml:space="preserve">
          <source>RelationSupport.postDeregister()</source>
          <target state="translated">RelationSupport.postDeregister()</target>
        </trans-unit>
        <trans-unit id="2bd0c29b2350862e9a48730a593f2971c337a34c" translate="yes" xml:space="preserve">
          <source>RelationSupport.postRegister()</source>
          <target state="translated">RelationSupport.postRegister()</target>
        </trans-unit>
        <trans-unit id="cff301ac9fa09ed89c9d976c09d1014ae2507909" translate="yes" xml:space="preserve">
          <source>RelationSupport.preDeregister()</source>
          <target state="translated">RelationSupport.preDeregister()</target>
        </trans-unit>
        <trans-unit id="3d0de8f859ed83c8136c17de45dae226cdf07e97" translate="yes" xml:space="preserve">
          <source>RelationSupport.preRegister()</source>
          <target state="translated">RelationSupport.preRegister()</target>
        </trans-unit>
        <trans-unit id="1482778d647a1583b256e942f5c02f771e257e99" translate="yes" xml:space="preserve">
          <source>RelationSupport.retrieveAllRoles()</source>
          <target state="translated">RelationSupport.retrieveAllRoles()</target>
        </trans-unit>
        <trans-unit id="cf49830051922b3bea3ecf65046918f01cf5cf14" translate="yes" xml:space="preserve">
          <source>RelationSupport.setRelationServiceManagementFlag()</source>
          <target state="translated">RelationSupport.setRelationServiceManagementFlag()</target>
        </trans-unit>
        <trans-unit id="ab0ca0d50c6b4591fa87987e9ddbe711f9d8e78d" translate="yes" xml:space="preserve">
          <source>RelationSupport.setRole()</source>
          <target state="translated">RelationSupport.setRole()</target>
        </trans-unit>
        <trans-unit id="aadc1ece18475446c249cf0acba0d6fa6b662993" translate="yes" xml:space="preserve">
          <source>RelationSupport.setRoles()</source>
          <target state="translated">RelationSupport.setRoles()</target>
        </trans-unit>
        <trans-unit id="7408dd11f0791423167d6814c607b2ae9e09acfb" translate="yes" xml:space="preserve">
          <source>RelationSupportMBean</source>
          <target state="translated">RelationSupportMBean</target>
        </trans-unit>
        <trans-unit id="ec185eec87c8d07a7781e7eab631c75d9b6dc94a" translate="yes" xml:space="preserve">
          <source>RelationSupportMBean.isInRelationService()</source>
          <target state="translated">RelationSupportMBean.isInRelationService()</target>
        </trans-unit>
        <trans-unit id="da83ba0b3e54ea7648cc7dd695764129eb79025b" translate="yes" xml:space="preserve">
          <source>RelationSupportMBean.setRelationServiceManagementFlag()</source>
          <target state="translated">RelationSupportMBean.setRelationServiceManagementFlag()</target>
        </trans-unit>
        <trans-unit id="385760c92c9479a71538856e66645b531adc7b80" translate="yes" xml:space="preserve">
          <source>RelationType</source>
          <target state="translated">RelationType</target>
        </trans-unit>
        <trans-unit id="3834e47f3d0a28a0f29b6a7379d7f38b961ba3d7" translate="yes" xml:space="preserve">
          <source>RelationType.getRelationTypeName()</source>
          <target state="translated">RelationType.getRelationTypeName()</target>
        </trans-unit>
        <trans-unit id="d67ae0d48c9da10832fb13819fee49fbacfb92fc" translate="yes" xml:space="preserve">
          <source>RelationType.getRoleInfo()</source>
          <target state="translated">RelationType.getRoleInfo()</target>
        </trans-unit>
        <trans-unit id="1f1c95e9f71e3cd43e58676fae6e8ce5b83f5d08" translate="yes" xml:space="preserve">
          <source>RelationType.getRoleInfos()</source>
          <target state="translated">RelationType.getRoleInfos()</target>
        </trans-unit>
        <trans-unit id="d91f02ab9713b132b12bd053801ae8a1b6096fb7" translate="yes" xml:space="preserve">
          <source>RelationTypeNotFoundException</source>
          <target state="translated">RelationTypeNotFoundException</target>
        </trans-unit>
        <trans-unit id="cb5af99c65c623de4bb7b396b9370846faef3f56" translate="yes" xml:space="preserve">
          <source>RelationTypeSupport</source>
          <target state="translated">RelationTypeSupport</target>
        </trans-unit>
        <trans-unit id="603e5817893d8547f92ff1b1a7c461b4338d9ca2" translate="yes" xml:space="preserve">
          <source>RelationTypeSupport.addRoleInfo()</source>
          <target state="translated">RelationTypeSupport.addRoleInfo()</target>
        </trans-unit>
        <trans-unit id="8429835c9f295fe656efbc89cafa69654a1b5654" translate="yes" xml:space="preserve">
          <source>RelationTypeSupport.getRelationTypeName()</source>
          <target state="translated">RelationTypeSupport.getRelationTypeName()</target>
        </trans-unit>
        <trans-unit id="f46fa0d41fa3f08adf72253cf38b202c138df191" translate="yes" xml:space="preserve">
          <source>RelationTypeSupport.getRoleInfo()</source>
          <target state="translated">RelationTypeSupport.getRoleInfo()</target>
        </trans-unit>
        <trans-unit id="da2cc62c84f5042c608350089f86893cefecdd65" translate="yes" xml:space="preserve">
          <source>RelationTypeSupport.getRoleInfos()</source>
          <target state="translated">RelationTypeSupport.getRoleInfos()</target>
        </trans-unit>
        <trans-unit id="979b63354f43dac53577a66d5b5f7d9f123bb841" translate="yes" xml:space="preserve">
          <source>Relative</source>
          <target state="translated">Relative</target>
        </trans-unit>
        <trans-unit id="60e033c5a41af412083cd484d7169429f0a32ac7" translate="yes" xml:space="preserve">
          <source>Relative &lt;a href=&quot;bytebuffer#get-byte:A-&quot;&gt;&lt;code&gt;&lt;i&gt;bulk get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that transfer contiguous sequences of bytes from this buffer into an array;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fffd1a8e88eabc0615442db62a21f59756211673" translate="yes" xml:space="preserve">
          <source>Relative &lt;a href=&quot;bytebuffer#put-byte:A-&quot;&gt;&lt;code&gt;&lt;i&gt;bulk put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that transfer contiguous sequences of bytes from a byte array or some other byte buffer into this buffer;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393be4a734933bef30a47ad5202c72e1b9b2927e" translate="yes" xml:space="preserve">
          <source>Relative &lt;a href=&quot;charbuffer#get-char:A-&quot;&gt;&lt;code&gt;&lt;i&gt;bulk get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that transfer contiguous sequences of chars from this buffer into an array; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99808e8c2580cbd3b1ff06d3799ac84dcad86e98" translate="yes" xml:space="preserve">
          <source>Relative &lt;a href=&quot;charbuffer#put-char:A-&quot;&gt;&lt;code&gt;&lt;i&gt;bulk put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that transfer contiguous sequences of chars from a char array, a string, or some other char buffer into this buffer; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf2c6efc0e6f502fe68d457d805bfd51e273869" translate="yes" xml:space="preserve">
          <source>Relative &lt;a href=&quot;doublebuffer#get-double:A-&quot;&gt;&lt;code&gt;&lt;i&gt;bulk get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that transfer contiguous sequences of doubles from this buffer into an array; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81548c3cb1b296f8f98233ad82362a09a8a4deea" translate="yes" xml:space="preserve">
          <source>Relative &lt;a href=&quot;doublebuffer#put-double:A-&quot;&gt;&lt;code&gt;&lt;i&gt;bulk put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that transfer contiguous sequences of doubles from a double array or some other double buffer into this buffer; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4b9112bb417bd17d820ec91fbf8918f7ada15b" translate="yes" xml:space="preserve">
          <source>Relative &lt;a href=&quot;floatbuffer#get-float:A-&quot;&gt;&lt;code&gt;&lt;i&gt;bulk get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that transfer contiguous sequences of floats from this buffer into an array; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba34a1cba6e397f1c130096a8fd15957ded1f3b" translate="yes" xml:space="preserve">
          <source>Relative &lt;a href=&quot;floatbuffer#put-float:A-&quot;&gt;&lt;code&gt;&lt;i&gt;bulk put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that transfer contiguous sequences of floats from a float array or some other float buffer into this buffer; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf5f807495dde5c25556c2e8fadadcae43c3dfd" translate="yes" xml:space="preserve">
          <source>Relative &lt;a href=&quot;intbuffer#get-int:A-&quot;&gt;&lt;code&gt;&lt;i&gt;bulk get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that transfer contiguous sequences of ints from this buffer into an array; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de5b93fb63596103e2ff7681c1bc68eb436d674" translate="yes" xml:space="preserve">
          <source>Relative &lt;a href=&quot;intbuffer#put-int:A-&quot;&gt;&lt;code&gt;&lt;i&gt;bulk put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that transfer contiguous sequences of ints from an int array or some other int buffer into this buffer; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e451044400d3475c1f3a52b35073f7dd72cc65" translate="yes" xml:space="preserve">
          <source>Relative &lt;a href=&quot;longbuffer#get-long:A-&quot;&gt;&lt;code&gt;&lt;i&gt;bulk get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that transfer contiguous sequences of longs from this buffer into an array; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c473c905098ecd1f1885c83876884cf0749314a" translate="yes" xml:space="preserve">
          <source>Relative &lt;a href=&quot;longbuffer#put-long:A-&quot;&gt;&lt;code&gt;&lt;i&gt;bulk put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that transfer contiguous sequences of longs from a long array or some other long buffer into this buffer; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb0de7a22b502358f63f3e3643e2e00b7fd12ae" translate="yes" xml:space="preserve">
          <source>Relative &lt;a href=&quot;shortbuffer#get-short:A-&quot;&gt;&lt;code&gt;&lt;i&gt;bulk get&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that transfer contiguous sequences of shorts from this buffer into an array; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d78e2f79e8cabbd6a776323d44d3a2e0b8b28d3" translate="yes" xml:space="preserve">
          <source>Relative &lt;a href=&quot;shortbuffer#put-short:A-&quot;&gt;&lt;code&gt;&lt;i&gt;bulk put&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; methods that transfer contiguous sequences of shorts from a short array or some other short buffer into this buffer; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40121df010add75f3d452630f888bd1026af01f3" translate="yes" xml:space="preserve">
          <source>Relative Distinguished Names containing more than one Attribute Value Assertion (AVA) are output in the following order: an alphabetical ordering of AVAs containing standard keywords, followed by a numeric ordering of AVAs containing OID keywords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a19af59b0f33ecb6d1fe88afde30cb2a77c2a83" translate="yes" xml:space="preserve">
          <source>Relative bulk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde76cebf10b929664792b5af68969acc396722b" translate="yes" xml:space="preserve">
          <source>Relative indexing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f85b9f186ad875c5812ba2167ea7b659b033ad8" translate="yes" xml:space="preserve">
          <source>Relative to UTC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a145df51967bbec11c0e19258f0dc9f309fa10e" translate="yes" xml:space="preserve">
          <source>Relative to the standard offset in force</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84afe81680de74336b2b3cd9e43110acb440e3ad" translate="yes" xml:space="preserve">
          <source>Relative to the wall offset (what you would see on a clock on the wall)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6b9ac08a271338c33131db8e3e48e7013d065f" translate="yes" xml:space="preserve">
          <source>Relativization</source>
          <target state="translated">Relativization</target>
        </trans-unit>
        <trans-unit id="e7fcac143644cfb42c59aaa303fe4cc399a896a3" translate="yes" xml:space="preserve">
          <source>Relativization is the inverse of &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt;&lt;code&gt;resolution&lt;/code&gt;&lt;/a&gt;. This method attempts to construct a &lt;a href=&quot;path#isAbsolute--&quot;&gt;&lt;code&gt;relative&lt;/code&gt;&lt;/a&gt; path that when &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt;&lt;code&gt;resolved&lt;/code&gt;&lt;/a&gt; against this path, yields a path that locates the same file as the given path. For example, on UNIX, if this path is &lt;code&gt;&quot;/a/b&quot;&lt;/code&gt; and the given path is &lt;code&gt;&quot;/a/b/c/d&quot;&lt;/code&gt; then the resulting relative path would be &lt;code&gt;&quot;c/d&quot;&lt;/code&gt;. Where this path and the given path do not have a &lt;a href=&quot;path#getRoot--&quot;&gt;&lt;code&gt;root&lt;/code&gt;&lt;/a&gt; component, then a relative path can be constructed. A relative path cannot be constructed if only one of the paths have a root component. Where both paths have a root component then it is implementation dependent if a relative path can be constructed. If this path and the given path are &lt;a href=&quot;path#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equal&lt;/code&gt;&lt;/a&gt; then an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b351083734fc4f12b74ce313e4e60e0553994d" translate="yes" xml:space="preserve">
          <source>Relativizes the given URI against this URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed65ce5d375b3751d9322f209075e42b40f3120" translate="yes" xml:space="preserve">
          <source>Releases a &lt;code&gt;BeanContextChild&lt;/code&gt;'s (or any arbitrary object associated with a BeanContextChild) reference to the specified service by calling releaseService() on the underlying &lt;code&gt;BeanContextServiceProvider&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0ec562ea377045ff1ca28f8f395f4941fcc8ea" translate="yes" xml:space="preserve">
          <source>Releases a permit, increasing the number of available permits by one. If any threads are trying to acquire a permit, then one is selected and given the permit that was just released. That thread is (re)enabled for thread scheduling purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae51d27cdedb4aae7a19d510a91604c05c876546" translate="yes" xml:space="preserve">
          <source>Releases a permit, returning it to the semaphore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c731d3a5d8bff1ddbaeded12bfd723ab65877579" translate="yes" xml:space="preserve">
          <source>Releases any resources opened by this file manager directly or indirectly. This might render this file manager useless and the effect of subsequent calls to methods on this object or any objects obtained through this object is undefined unless explicitly allowed. However, closing a file manager which has already been closed has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f142fa7c2360e469794111804f899fb5acedae3f" translate="yes" xml:space="preserve">
          <source>Releases in exclusive mode. Implemented by unblocking one or more threads if &lt;a href=&quot;abstractqueuedlongsynchronizer#tryRelease-long-&quot;&gt;&lt;code&gt;tryRelease(long)&lt;/code&gt;&lt;/a&gt; returns true. This method can be used to implement method &lt;a href=&quot;lock#unlock--&quot;&gt;&lt;code&gt;Lock.unlock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae27baf0f3646046a33005b4b0d18f26d6f48094" translate="yes" xml:space="preserve">
          <source>Releases in exclusive mode. Implemented by unblocking one or more threads if &lt;a href=&quot;abstractqueuedsynchronizer#tryRelease-int-&quot;&gt;&lt;code&gt;tryRelease(int)&lt;/code&gt;&lt;/a&gt; returns true. This method can be used to implement method &lt;a href=&quot;lock#unlock--&quot;&gt;&lt;code&gt;Lock.unlock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e812a604b3a4452320fba59f6587f79dd1f9174" translate="yes" xml:space="preserve">
          <source>Releases in shared mode. Implemented by unblocking one or more threads if &lt;a href=&quot;abstractqueuedlongsynchronizer#tryReleaseShared-long-&quot;&gt;&lt;code&gt;tryReleaseShared(long)&lt;/code&gt;&lt;/a&gt; returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7555e39d552bcb26cab6a48a3d13e96b31a6af4" translate="yes" xml:space="preserve">
          <source>Releases in shared mode. Implemented by unblocking one or more threads if &lt;a href=&quot;abstractqueuedsynchronizer#tryReleaseShared-int-&quot;&gt;&lt;code&gt;tryReleaseShared(int)&lt;/code&gt;&lt;/a&gt; returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac131937959d5fbd3579a4e2ec4e2c7b1261d9fa" translate="yes" xml:space="preserve">
          <source>Releases one hold of the read lock if it is held, without requiring a stamp value. This method may be useful for recovery after errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e45417605a3bb3f614c1184b9b101cec276d6b6" translate="yes" xml:space="preserve">
          <source>Releases synchronization for the specified lines. The array must be identical to one for which synchronization has already been established; otherwise an exception may be thrown. However, &lt;code&gt;null&lt;/code&gt; may be specified, in which case all currently synchronized lines that belong to this mixer are unsynchronized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c8ddc539f7ee1c2537e414313ec67dc606e3a0" translate="yes" xml:space="preserve">
          <source>Releases the given number of permits, increasing the number of available permits by that amount. If any threads are trying to acquire permits, then one is selected and given the permits that were just released. If the number of available permits satisfies that thread's request then that thread is (re)enabled for thread scheduling purposes; otherwise the thread will wait until sufficient permits are available. If there are still permits available after this thread's request has been satisfied, then those permits are assigned in turn to other threads trying to acquire permits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413cb8f0e2195df2030d58a687a7a027b35eb150" translate="yes" xml:space="preserve">
          <source>Releases the given number of permits, returning them to the semaphore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11d0ae907f644e54ae2a23d4335af7ef93d2c45" translate="yes" xml:space="preserve">
          <source>Releases the lock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf78f864f54001c8fb0abe43347fd6d22bcd77c" translate="yes" xml:space="preserve">
          <source>Releases the write lock if it is held, without requiring a stamp value. This method may be useful for recovery after errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93707abc3b1081359ac0dd23097c5e909584392" translate="yes" xml:space="preserve">
          <source>Releases this lock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32840a6604e9a3194350e721c2d44276010f1fb6" translate="yes" xml:space="preserve">
          <source>Reluctant quantifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460d13028f1deee3768bfb432559dedc12c4b996" translate="yes" xml:space="preserve">
          <source>Remaining Name. Portion of name that has not been resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12f2638074509b1d3ecd3eb9ce21a2cba2686a3" translate="yes" xml:space="preserve">
          <source>Remaps an instrument. Instrument &lt;code&gt;to&lt;/code&gt; takes the place of instrument &lt;code&gt;from&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93f6536dcfbeeee0b339acc7d769bf64450e761" translate="yes" xml:space="preserve">
          <source>Remote</source>
          <target state="translated">Remote</target>
        </trans-unit>
        <trans-unit id="8ed8c7e1839c51c9019e3113d1b1f59929d8dffa" translate="yes" xml:space="preserve">
          <source>Remote Access to MBeans</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10b575e9dada432fec4fcf82ec262578ea3dc64" translate="yes" xml:space="preserve">
          <source>Remote listeners added using the JMX Remote API (see JMXConnector) are not usually called synchronously. That is, when sendNotification returns, it is not guaranteed that any remote listeners have yet received the notification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d76a6078aa70588cbda37dc5b3841ee67945d52" translate="yes" xml:space="preserve">
          <source>Removal of a certificate for an Identity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76874b187990d6e90dd7ec11a4a464af1e1e5c2c" translate="yes" xml:space="preserve">
          <source>Removal of interior elements in circular array based queues is an intrinsically slow and disruptive operation, so should be undertaken only in exceptional circumstances, ideally only when the queue is known not to be accessible by other threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50618939d6e89817b257696b2707d8c6db19a842" translate="yes" xml:space="preserve">
          <source>Removal of properties from the specified Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db7f2898f812912eef73a88776eff7c8c605f62" translate="yes" xml:space="preserve">
          <source>Removal of the specified provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a68b417b0bd9301f51aba8dea8c835f714f37df" translate="yes" xml:space="preserve">
          <source>Remove a PropertyChangeListener for a specific property. If &lt;code&gt;listener&lt;/code&gt; was added more than once to the same event source for the specified property, it will be notified one less time after being removed. If &lt;code&gt;propertyName&lt;/code&gt; is null, no exception is thrown and no action is taken. If &lt;code&gt;listener&lt;/code&gt; is null, or was never added for the specified property, no exception is thrown and no action is taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6504d885f16d949cf5276786837827fe106fa932" translate="yes" xml:space="preserve">
          <source>Remove a PropertyChangeListener for a specific property. If &lt;code&gt;pcl&lt;/code&gt; was added more than once to the same event source for the specified property, it will be notified one less time after being removed. If &lt;code&gt;name&lt;/code&gt; is null, no exception is thrown and no action is taken. If &lt;code&gt;pcl&lt;/code&gt; is null, or was never added for the specified property, no exception is thrown and no action is taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="decc5faa12f3cee9c26775c41dc515b0fa69927a" translate="yes" xml:space="preserve">
          <source>Remove a PropertyChangeListener from the listener list. This removes a PropertyChangeListener that was registered for all properties. If &lt;code&gt;listener&lt;/code&gt; was added more than once to the same event source, it will be notified one less time after being removed. If &lt;code&gt;listener&lt;/code&gt; is null, or was never added, no exception is thrown and no action is taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b99c92956cee9f9d6ad3532e7c8320b3ffbc543" translate="yes" xml:space="preserve">
          <source>Remove a VetoableChangeListener for a specific property. If &lt;code&gt;listener&lt;/code&gt; was added more than once to the same event source for the specified property, it will be notified one less time after being removed. If &lt;code&gt;propertyName&lt;/code&gt; is null, no exception is thrown and no action is taken. If &lt;code&gt;listener&lt;/code&gt; is null, or was never added for the specified property, no exception is thrown and no action is taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69bfb3d4720a5f7dba0977692fa05065aa70491e" translate="yes" xml:space="preserve">
          <source>Remove a VetoableChangeListener from the listener list. This removes a VetoableChangeListener that was registered for all properties. If &lt;code&gt;listener&lt;/code&gt; was added more than once to the same event source, it will be notified one less time after being removed. If &lt;code&gt;listener&lt;/code&gt; is null, or was never added, no exception is thrown and no action is taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0610844771476e82cb4dadf658a0ff119a42d1a5" translate="yes" xml:space="preserve">
          <source>Remove a cookie from store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d0df1a4801b79c3a2fa747d34cf5026ea8aade" translate="yes" xml:space="preserve">
          <source>Remove a listener for PropertyChange events, added by the &lt;a href=&quot;pack200.packer#addPropertyChangeListener-java.beans.PropertyChangeListener-&quot;&gt;&lt;code&gt;addPropertyChangeListener(java.beans.PropertyChangeListener)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce65abab8e9d5bef168f5b214fff188cdecdbd0" translate="yes" xml:space="preserve">
          <source>Remove a listener for PropertyChange events, added by the &lt;a href=&quot;pack200.unpacker#addPropertyChangeListener-java.beans.PropertyChangeListener-&quot;&gt;&lt;code&gt;addPropertyChangeListener(java.beans.PropertyChangeListener)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1937271aab4a0e52707f2c3422794297ce5059e" translate="yes" xml:space="preserve">
          <source>Remove a listener for the PropertyChange event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc92d3a470582eeac03bac43e0ed90008e55c594" translate="yes" xml:space="preserve">
          <source>Remove a log Handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5197be265e2f9848258cb8b7580585ae523500" translate="yes" xml:space="preserve">
          <source>Remove a service previously added using &lt;a href=&quot;provider#putService-java.security.Provider.Service-&quot;&gt;&lt;code&gt;putService()&lt;/code&gt;&lt;/a&gt;. The specified service is removed from this provider. It will no longer be returned by &lt;a href=&quot;provider#getService-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;getService()&lt;/code&gt;&lt;/a&gt; and its information will be removed from this provider's Hashtable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db11f24214d2bb5c06bef53ec7c1f079ab4ca740" translate="yes" xml:space="preserve">
          <source>Remove all cookies in this cookie store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48381626517af9cb3c6f76afba2ba43394a61b1e" translate="yes" xml:space="preserve">
          <source>Remove an attribute in a given scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eeb4356c225c6d5e72955f8107eb9f9d2054a0f" translate="yes" xml:space="preserve">
          <source>Remove internal MBeanServerFactory references to a created MBeanServer. This allows the garbage collector to remove the MBeanServer object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d1f15fa08b484b5506cf6be7ff13cf0b30430b" translate="yes" xml:space="preserve">
          <source>Remove the MBeanServerFactory's reference to an MBeanServer, using the method &lt;a href=&quot;mbeanserverfactory#releaseMBeanServer-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;MBeanServerFactory.releaseMBeanServer(javax.management.MBeanServer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8de311b91099c6a6e9f7b2d2101529bfd927ae9" translate="yes" xml:space="preserve">
          <source>Remove the association (if any) for the specified key at this preference node. It is guaranteed that &lt;code&gt;key&lt;/code&gt; is non-null. Also, it is guaranteed that this node has not been removed. (The implementor needn't check for either of these things.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b82444e86afa5e686ddd5ec6e131bb964c48ea" translate="yes" xml:space="preserve">
          <source>Removes a &lt;code&gt;BeanContextServicesListener&lt;/code&gt; from this &lt;code&gt;BeanContext&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9eb72b3bd054dc2c64941737945d813d0ae11dc" translate="yes" xml:space="preserve">
          <source>Removes a &lt;code&gt;PropertyChangeListener&lt;/code&gt; from this &lt;code&gt;BeanContextChild&lt;/code&gt; so that it no longer receives &lt;code&gt;PropertyChangeEvents&lt;/code&gt; when the specified property is changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="019313959e84baad8a014a0dfb34fddd04b2982a" translate="yes" xml:space="preserve">
          <source>Removes a &lt;code&gt;VetoableChangeListener&lt;/code&gt; from this &lt;code&gt;BeanContextChild&lt;/code&gt; so that it no longer receives events when the specified property changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73420b0d4fc89a7141fec3bae52e5e603c555907" translate="yes" xml:space="preserve">
          <source>Removes a &lt;code&gt;VetoableChangeListener&lt;/code&gt;. If &lt;code&gt;pcl&lt;/code&gt; was added more than once to the same event source for the specified property, it will be notified one less time after being removed. If &lt;code&gt;name&lt;/code&gt; is null, no exception is thrown and no action is taken. If &lt;code&gt;vcl&lt;/code&gt; is null, or was never added for the specified property, no exception is thrown and no action is taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5b49b6de63b4290d2ff747968bc0b1d7d8547f" translate="yes" xml:space="preserve">
          <source>Removes a BeanContextMembershipListener</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f130ae474aa8eb53903cf56331a4e43b41388c40" translate="yes" xml:space="preserve">
          <source>Removes a certificate from this identity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66cd354af80fe17bbadd80c8bac34ef7f32fe1f6" translate="yes" xml:space="preserve">
          <source>Removes a child from this BeanContext. If the child object is not for adding then this method throws an IllegalStateException.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac51a843a9d824afd538354c497c0f2320bf359" translate="yes" xml:space="preserve">
          <source>Removes a component from this LDAP name. The component of this name at the specified position is removed. Components with indexes greater than this position (if any) are shifted down (toward index 0) by one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e05de0b9711ab81933e516ef366c265ad7e3ef" translate="yes" xml:space="preserve">
          <source>Removes a component from this name. The component of this name at the specified position is removed. Components with indexes greater than this position are shifted down (toward index 0) by one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a70550f86179e5f21f8f3413aacd2eb43436524" translate="yes" xml:space="preserve">
          <source>Removes a controller event listener's interest in one or more types of controller event. The &lt;code&gt;controllers&lt;/code&gt; argument is an array of MIDI numbers corresponding to the controllers for which the listener should no longer receive change notifications. To completely remove this listener from the list of registered listeners, pass in &lt;code&gt;null&lt;/code&gt; for &lt;code&gt;controllers&lt;/code&gt;. The returned array contains the MIDI controller numbers for which the listener will now receive events. The array has a length of 0 if the listener will not receive change notifications for any controllers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f081edc4f678e09c5a7bf55ca6862f9cc6b0f3" translate="yes" xml:space="preserve">
          <source>Removes a field from the descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134418c00636ab9472b9a88a3168f8a7a89fbf48" translate="yes" xml:space="preserve">
          <source>Removes a listener for Notifications from the RequiredModelMBean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef53d975127525f1193a8cd8663a74d58fda28d" translate="yes" xml:space="preserve">
          <source>Removes a listener for attributeChangeNotifications from the RequiredModelMBean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69df52aae37827d54a57b45eec3586ed3e883336" translate="yes" xml:space="preserve">
          <source>Removes a listener for the value change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186821b74a013cde97b841b823a3edd417f0b81e" translate="yes" xml:space="preserve">
          <source>Removes a listener from a registered MBean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd99c7e0801b6e6a815ace921411a27bd5fcd76" translate="yes" xml:space="preserve">
          <source>Removes a listener from receiving naming events fired by this &lt;code&gt;EventContext&lt;/code&gt;. The listener may have registered more than once with this &lt;code&gt;EventContext&lt;/code&gt;, perhaps with different target/scope arguments. After this method is invoked, the listener will no longer receive events with this &lt;code&gt;EventContext&lt;/code&gt; instance as the event source (except for those events already in the process of being dispatched). If the listener was not, or is no longer, registered with this &lt;code&gt;EventContext&lt;/code&gt; instance, this method does not do anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da63a99ad4990e88c8a41b122f1697f2e86e7966" translate="yes" xml:space="preserve">
          <source>Removes a listener from the list to be informed of changes in status. The listener must previously have been added with the same three parameters. If there is more than one matching listener, only one is removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d8dfd88df9721176fa7255779065e227eb7e61" translate="yes" xml:space="preserve">
          <source>Removes a listener from the list to be informed of changes in status. The listener must previously have been added. If there is more than one matching listener, all are removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5acc79c38d4b8c151cfec1763b7df402cadc09aa" translate="yes" xml:space="preserve">
          <source>Removes a listener from this MBean. If the listener has been registered with different handback objects or notification filters, all entries corresponding to the listener will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461e31f12930b0a79fa08b10a5c76975db312111" translate="yes" xml:space="preserve">
          <source>Removes a listener from this MBean. The MBean must have a listener that exactly matches the given &lt;code&gt;listener&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, and &lt;code&gt;handback&lt;/code&gt; parameters. If there is more than one such listener, only one is removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c315f39f534842c9d730a4d299ccb46994bb70f6" translate="yes" xml:space="preserve">
          <source>Removes a listener from this print job. This method performs no function, nor does it throw an exception, if the listener specified by the argument was not previously added to this component. If listener is null, no exception is thrown and no action is performed. If a listener was registered more than once only one of the registrations will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded46a40121c55c1ec4f175e707ffb7d2455c4fc" translate="yes" xml:space="preserve">
          <source>Removes a previously registered handshake completion listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83120c59614afcea2cdf8c45e42388d867dcfcc" translate="yes" xml:space="preserve">
          <source>Removes a service provider object from all categories that contain it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b027219b5459ff34b374373ddc78318591484889" translate="yes" xml:space="preserve">
          <source>Removes a service provider object from the given category. If the provider was not previously registered, nothing happens and &lt;code&gt;false&lt;/code&gt; is returned. Otherwise, &lt;code&gt;true&lt;/code&gt; is returned. If an object of the same class as &lt;code&gt;provider&lt;/code&gt; but not equal (using &lt;code&gt;==&lt;/code&gt;) to &lt;code&gt;provider&lt;/code&gt; is registered, it will not be deregistered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd163603f293d5f7bd541e7f28bb5908c082d38c" translate="yes" xml:space="preserve">
          <source>Removes a single instance of the specified element from this collection, if it is present (optional operation). More formally, removes an element &lt;code&gt;e&lt;/code&gt; such that &lt;code&gt;(o==null ? e==null : o.equals(e))&lt;/code&gt;, if this collection contains one or more such elements. Returns &lt;code&gt;true&lt;/code&gt; if this collection contained the specified element (or equivalently, if this collection changed as a result of the call).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188bf2e9bb3554a56f0e6ccaf745dcca21ec582a" translate="yes" xml:space="preserve">
          <source>Removes a single instance of the specified element from this deque. If the deque does not contain the element, it is unchanged. More formally, removes the first element &lt;code&gt;e&lt;/code&gt; such that &lt;code&gt;o.equals(e)&lt;/code&gt; (if such an element exists). Returns &lt;code&gt;true&lt;/code&gt; if this deque contained the specified element (or equivalently, if this deque changed as a result of the call).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8486cc1ce97e6a4ca15385f03c6d77be1635eea4" translate="yes" xml:space="preserve">
          <source>Removes a single instance of the specified element from this queue, if it is present, whether or not it has expired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8554cd04767c683710b02f6728a464cec94bb0" translate="yes" xml:space="preserve">
          <source>Removes a single instance of the specified element from this queue, if it is present. More formally, removes an element &lt;code&gt;e&lt;/code&gt; such that &lt;code&gt;o.equals(e)&lt;/code&gt;, if this queue contains one or more such elements. Returns &lt;code&gt;true&lt;/code&gt; if and only if this queue contained the specified element (or equivalently, if this queue changed as a result of the call).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4412e2c24da71acc234439ee797adc7d7c4cb8ac" translate="yes" xml:space="preserve">
          <source>Removes a single instance of the specified element from this queue, if it is present. More formally, removes an element &lt;code&gt;e&lt;/code&gt; such that &lt;code&gt;o.equals(e)&lt;/code&gt;, if this queue contains one or more such elements. Returns &lt;code&gt;true&lt;/code&gt; if this queue contained the specified element (or equivalently, if this queue changed as a result of the call).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c387fff56b31fd4ae61bb179771fe49f165894bc" translate="yes" xml:space="preserve">
          <source>Removes a specified value from the attribute. If &lt;code&gt;attrval&lt;/code&gt; is not in the attribute, this method does nothing. If the attribute values are ordered, the first occurrence of &lt;code&gt;attrVal&lt;/code&gt; is removed and attribute values at indices greater than the removed value are shifted up towards the head of the list (and their indices decremented by one).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545a55207c5d6d0509c29fcf8d6a11fd9d42f21b" translate="yes" xml:space="preserve">
          <source>Removes a specified value from this attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7516ff436c1ef3a51779d1c399ecef0028998a21" translate="yes" xml:space="preserve">
          <source>Removes a unicode locale attribute, if present, otherwise has no effect. The attribute must not be null and must be &lt;a href=&quot;locale#def_locale_extension&quot;&gt;well-formed&lt;/a&gt; or an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1822f29f2bd0bfa685638880f007da86daa3935d" translate="yes" xml:space="preserve">
          <source>Removes all &lt;code&gt;CompositeData&lt;/code&gt; values (ie rows) from this &lt;code&gt;TabularData&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4f631e74627a66b2f61128cc5b3b289a16a606" translate="yes" xml:space="preserve">
          <source>Removes all attributes from this Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccbe5ee26d24cab844d733d80d6bdc07ea089bfc" translate="yes" xml:space="preserve">
          <source>Removes all attributes from this attribute set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8772c9b4b052c1533fa0bfd752c692b2eb09b51" translate="yes" xml:space="preserve">
          <source>Removes all available elements from this queue and adds them to the given collection. This operation may be more efficient than repeatedly polling this queue. A failure encountered while attempting to add elements to collection &lt;code&gt;c&lt;/code&gt; may result in elements being in neither, either or both collections when the associated exception is thrown. Attempts to drain a queue to itself result in &lt;code&gt;IllegalArgumentException&lt;/code&gt;. Further, the behavior of this operation is undefined if the specified collection is modified while the operation is in progress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67219ac3d3c7b3187308b70fa96d0ab24c81ed3" translate="yes" xml:space="preserve">
          <source>Removes all available unexecuted submitted and forked tasks from scheduling queues and adds them to the given collection, without altering their execution status. These may include artificially generated or wrapped tasks. This method is designed to be invoked only when the pool is known to be quiescent. Invocations at other times may not remove all tasks. A failure encountered while attempting to add elements to collection &lt;code&gt;c&lt;/code&gt; may result in elements being in neither, either or both collections when the associated exception is thrown. The behavior of this operation is undefined if the specified collection is modified while the operation is in progress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6659859292010be73ca6365e6c00da105c825b" translate="yes" xml:space="preserve">
          <source>Removes all cancelled tasks from this timer's task queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b652f6f1b682baf2e7db74710361a70fef7f45b" translate="yes" xml:space="preserve">
          <source>Removes all components from this vector and sets its size to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cd91a8f81c2a9380854ccdebdb286623e7b5b2" translate="yes" xml:space="preserve">
          <source>Removes all currently registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2a1c5b522d36c368a7ff2bfdd7f56f7ceff136" translate="yes" xml:space="preserve">
          <source>Removes all currently registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796612ce6aea1c93f539c8ed1e65be7cb222df09" translate="yes" xml:space="preserve">
          <source>Removes all currently registered &lt;code&gt;IIOReadWarningListener&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666d6c806b68685c005280411d466e68e28820ff" translate="yes" xml:space="preserve">
          <source>Removes all currently registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4943f80bfe432da0ef1ec72f3aa7cf31a7153f4" translate="yes" xml:space="preserve">
          <source>Removes all currently registered &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41dcf2d910ad2c1e34f916eba01440e71ebfda7a" translate="yes" xml:space="preserve">
          <source>Removes all mappings from this map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5e7eac2df80a7be8b26c714d094bb52867c89d" translate="yes" xml:space="preserve">
          <source>Removes all objects from the set of observed objects, and then adds the specified object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bfc4133fcdf9465815c7750708f45d111ce89f9" translate="yes" xml:space="preserve">
          <source>Removes all of the elements from this Vector. The Vector will be empty after this call returns (unless it throws an exception).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca30d2de0a8fa69f394f1b87a3d3f1a8f106c88" translate="yes" xml:space="preserve">
          <source>Removes all of the elements from this collection (optional operation). The collection will be empty after this method returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4671f992addadfae55528c6e4cdfe9974a54abba" translate="yes" xml:space="preserve">
          <source>Removes all of the elements from this deque.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="015038bf88156dea614b30ceb3867709883c8389" translate="yes" xml:space="preserve">
          <source>Removes all of the elements from this deque. The deque will be empty after this call returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ff13112927a0bd319ce8603fc9530dcfa01f16" translate="yes" xml:space="preserve">
          <source>Removes all of the elements from this list (optional operation). The list will be empty after this call returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54dd422fb1893cdf810bc2eac620b8b8d177aa0f" translate="yes" xml:space="preserve">
          <source>Removes all of the elements from this list. The list will be empty after this call returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977d437b95b48c7fa815fa444e240186af2e340b" translate="yes" xml:space="preserve">
          <source>Removes all of the elements from this priority queue. The queue will be empty after this call returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a3abba3b274119267ce525f2fef60636a44bbe" translate="yes" xml:space="preserve">
          <source>Removes all of the elements from this queue. The queue will be empty after this call returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57cc6f8052a0ca5b1bd88491ceb6fd9d102c177a" translate="yes" xml:space="preserve">
          <source>Removes all of the elements from this set (optional operation). The set will be empty after this call returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882423189001ca9f061841f923c2ae22e590cf43" translate="yes" xml:space="preserve">
          <source>Removes all of the elements from this set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ba35e4e0de78af17c4411b9ee78eb4759c07d0" translate="yes" xml:space="preserve">
          <source>Removes all of the elements from this set. The set will be empty after this call returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a59ad6fc32044bc614cc0c39e8446d6bd07164" translate="yes" xml:space="preserve">
          <source>Removes all of the elements from this view, by removing all the mappings from the map backing this view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae70624841d3e54e7739e0acf3f14804192da81" translate="yes" xml:space="preserve">
          <source>Removes all of the elements of this collection that satisfy the given predicate. Errors or runtime exceptions thrown during iteration or by the predicate are relayed to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d334174dae998cf07c1a151522bb6829b53f45" translate="yes" xml:space="preserve">
          <source>Removes all of the mappings from this map (optional operation). The map will be empty after this call returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe3d15b762fdc3ecd645e65d6390837382132ed" translate="yes" xml:space="preserve">
          <source>Removes all of the mappings from this map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63572e051722f7b30ab5b603569dcd1cfda5037e" translate="yes" xml:space="preserve">
          <source>Removes all of the mappings from this map. The map will be empty after this call returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc86967bc678cc473daab33f6e731504cd4f24a3" translate="yes" xml:space="preserve">
          <source>Removes all of the preferences (key-value associations) in this preference node. This call has no effect on any descendants of this node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d87706fa5528b99f8fd297a023f0d81d305c16" translate="yes" xml:space="preserve">
          <source>Removes all of this collection's elements that are also contained in the specified collection (optional operation). After this call returns, this collection will contain no elements in common with the specified collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e770a4322db9cc17bc06b15d67ce2d1d112404" translate="yes" xml:space="preserve">
          <source>Removes all resource bundles from the cache that have been loaded using the caller's class loader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1d311c64329922a3fb2cbd056a0800de363d28" translate="yes" xml:space="preserve">
          <source>Removes all resource bundles from the cache that have been loaded using the given class loader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938a6b501bcb3696536aba4ed686b6baa271c30b" translate="yes" xml:space="preserve">
          <source>Removes all rows from this &lt;code&gt;TabularDataSupport&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08b1d3cfb39a1e28454fbf30eb9cd6f17c250f5" translate="yes" xml:space="preserve">
          <source>Removes all the timer notifications corresponding to the specified type from the list of notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65cbc5e85a31b242db5421d05485ab1a3ebdcaac" translate="yes" xml:space="preserve">
          <source>Removes all the timer notifications from the list of notifications and resets the counter used to update the timer notification identifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44cb28206679486729a8a4698bc09b9c9b162a35" translate="yes" xml:space="preserve">
          <source>Removes all values from this attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c90e39b14879a76aec5baa98ef5229e872f0fe4" translate="yes" xml:space="preserve">
          <source>Removes an &lt;code&gt;IIOReadProgressListener&lt;/code&gt; from the list of registered progress listeners. If the listener was not previously registered, or if &lt;code&gt;listener&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception will be thrown and no action will be taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8555b82011243bb5e9cf557ba64d4fe6ccface20" translate="yes" xml:space="preserve">
          <source>Removes an &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; from the list of registered update listeners. If the listener was not previously registered, or if &lt;code&gt;listener&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception will be thrown and no action will be taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f6ea11b33b83e1570e0265669855333a6f0b83" translate="yes" xml:space="preserve">
          <source>Removes an &lt;code&gt;IIOReadWarningListener&lt;/code&gt; from the list of registered error listeners. If the listener was not previously registered, or if &lt;code&gt;listener&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception will be thrown and no action will be taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0085ba16775f511911cfcfdb224d01a46e8d08" translate="yes" xml:space="preserve">
          <source>Removes an &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; from the list of registered progress listeners. If the listener was not previously registered, or if &lt;code&gt;listener&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception will be thrown and no action will be taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a16b9e610c4834437d437338a83d0b54ffc20a1e" translate="yes" xml:space="preserve">
          <source>Removes an &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; from the list of registered warning listeners. If the listener was not previously registered, or if &lt;code&gt;listener&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception will be thrown and no action will be taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed79b590334eeb0cc599f657bab33b076dad6362" translate="yes" xml:space="preserve">
          <source>Removes an ACL entry from this ACL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0deac4b8145a0917160406dc54bc6b75d1fb51b" translate="yes" xml:space="preserve">
          <source>Removes an attribute by name. If a default value for the removed attribute is defined in the DTD, a new attribute immediately appears with the default value as well as the corresponding namespace URI, local name, and prefix when applicable. The implementation may handle default values from other schemas similarly but applications should use &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; to guarantee this information is up-to-date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab4bd0b4682538777b5572e8ebff2c83311ae0d" translate="yes" xml:space="preserve">
          <source>Removes an attribute from a previously defined element. If no attribute with the given name was present in the given element, nothing happens and no exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b24b39be84fc470c71723467c4637515b92dfc" translate="yes" xml:space="preserve">
          <source>Removes an attribute listener from this print job. This method performs no function, nor does it throw an exception, if the listener specified by the argument was not previously added to this component. If the listener is null, no exception is thrown and no action is performed. If a listener is registered more than once, even for a different set of attributes, no guarantee is made which listener is removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2dd8ff29da5dfaafdffabdb2d892aaaa97e1348" translate="yes" xml:space="preserve">
          <source>Removes an attribute value from the ordered list of attribute values. This method removes the value at the &lt;code&gt;ix&lt;/code&gt; index of the list of attribute values. If the attribute values are unordered, this method removes the value that happens to be at that index. Values located at indices greater than &lt;code&gt;ix&lt;/code&gt; are shifted up towards the front of the list (and their indices decremented by one).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fccb7d2aa1df7b9b44c4ce5465eb02802c766bfc" translate="yes" xml:space="preserve">
          <source>Removes an element from the format. If no element with the given name was present, nothing happens and no exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c783c648bc6d8fa73a33cbc8d854789a63137c7" translate="yes" xml:space="preserve">
          <source>Removes an environment property from the environment of this context. See class description for more details on environment properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d22056bbb30a3515adf99f5d904cc328dee8c6" translate="yes" xml:space="preserve">
          <source>Removes an event listener for property change events. If the same listener instance has been added to the listener table through multiple invocations of &lt;code&gt;addPropertyChangeListener&lt;/code&gt;, then an equivalent number of &lt;code&gt;removePropertyChangeListener&lt;/code&gt; invocations are required to remove all instances of that listener from the listener table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d480b4f696bf701d9f453853a351298ab758c710" translate="yes" xml:space="preserve">
          <source>Removes an identity from this identity scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020ad9a993ff6cb21660aa7ae445ace4e58065ed" translate="yes" xml:space="preserve">
          <source>Removes an image from the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa05a2ada0576da8e78d645e8c278bfb8eaa267" translate="yes" xml:space="preserve">
          <source>Removes and returns a key-value mapping associated with the greatest key in this map, or &lt;code&gt;null&lt;/code&gt; if the map is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c956a76347c68b2801e86711dc3ce8155b5af8a" translate="yes" xml:space="preserve">
          <source>Removes and returns a key-value mapping associated with the greatest key in this map, or &lt;code&gt;null&lt;/code&gt; if the map is empty. The returned entry does &lt;em&gt;not&lt;/em&gt; support the &lt;code&gt;Entry.setValue&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c8419fdc534fcd0459b9fd7465a337c1200d66" translate="yes" xml:space="preserve">
          <source>Removes and returns a key-value mapping associated with the least key in this map, or &lt;code&gt;null&lt;/code&gt; if the map is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b118ccbcede54ce5b09877091e00b0d4387470" translate="yes" xml:space="preserve">
          <source>Removes and returns a key-value mapping associated with the least key in this map, or &lt;code&gt;null&lt;/code&gt; if the map is empty. The returned entry does &lt;em&gt;not&lt;/em&gt; support the &lt;code&gt;Entry.setValue&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e4efe4f3901fcdca525d63d0ee1299ce99f866" translate="yes" xml:space="preserve">
          <source>Removes and returns the first element from this list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecff7c98a419358df592c87752df70f9032ba91a" translate="yes" xml:space="preserve">
          <source>Removes and returns the last element from this list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6ff0126e7d689e3c287b4ba110729a44d4e121" translate="yes" xml:space="preserve">
          <source>Removes and returns the next unexecuted submission if one is available. This method may be useful in extensions to this class that re-assign work in systems with multiple pools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc5fd6eaea919067b90215e8bc787f2e57524ae" translate="yes" xml:space="preserve">
          <source>Removes any attribute for this category from this attribute set if present. If &lt;code&gt;category&lt;/code&gt; is null, then &lt;code&gt;remove()&lt;/code&gt; does nothing and returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073aa39cf1cfaaff65a9fd0b02736ecba39b0bff" translate="yes" xml:space="preserve">
          <source>Removes any previous compression quality setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d61f7f1ec33758be5b6ca32023fc0bd8ffdead" translate="yes" xml:space="preserve">
          <source>Removes any previous compression type and quality settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a758912a31385a405d7efb504018d48b3084bd" translate="yes" xml:space="preserve">
          <source>Removes any previous tile grid parameters specified by calls to &lt;code&gt;setTiling&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd33bac47c6185ad18ad847232f5d264227fb6b1" translate="yes" xml:space="preserve">
          <source>Removes any quantization and Huffman tables that are currently set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddcf5668dfaf723af85676fbc53b5ddd1671ad2c" translate="yes" xml:space="preserve">
          <source>Removes at most the given number of available elements from this queue and adds them to the given collection. A failure encountered while attempting to add elements to collection &lt;code&gt;c&lt;/code&gt; may result in elements being in neither, either or both collections when the associated exception is thrown. Attempts to drain a queue to itself result in &lt;code&gt;IllegalArgumentException&lt;/code&gt;. Further, the behavior of this operation is undefined if the specified collection is modified while the operation is in progress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb768390d00b4838820c4531f30d3a4bc241d8cb" translate="yes" xml:space="preserve">
          <source>Removes from the list the last element that was returned by &lt;a href=&quot;listiterator#next--&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;listiterator#previous--&quot;&gt;&lt;code&gt;previous()&lt;/code&gt;&lt;/a&gt; (optional operation). This call can only be made once per call to &lt;code&gt;next&lt;/code&gt; or &lt;code&gt;previous&lt;/code&gt;. It can be made only if &lt;a href=&quot;listiterator#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt; has not been called after the last call to &lt;code&gt;next&lt;/code&gt; or &lt;code&gt;previous&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5135781457d7d6de26b355d245b93703e618759c" translate="yes" xml:space="preserve">
          <source>Removes from the underlying collection the last element returned by this iterator (optional operation). This method can be called only once per call to &lt;a href=&quot;../../util/iterator#next--&quot;&gt;&lt;code&gt;Iterator.next()&lt;/code&gt;&lt;/a&gt;. The behavior of an iterator is unspecified if the underlying collection is modified while the iteration is in progress in any way other than by calling this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12145bbe28f3c68ce2f659ea90a7e73290b99718" translate="yes" xml:space="preserve">
          <source>Removes from the underlying collection the last element returned by this iterator (optional operation). This method can be called only once per call to &lt;a href=&quot;iterator#next--&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt;. The behavior of an iterator is unspecified if the underlying collection is modified while the iteration is in progress in any way other than by calling this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761f897b3796eb3452c2f0c323c6267b90558cf5" translate="yes" xml:space="preserve">
          <source>Removes from this Vector all of its elements that are contained in the specified Collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330c88a6824729041d70ae905fa9c1df818a9f28" translate="yes" xml:space="preserve">
          <source>Removes from this list all of its elements that are contained in the specified collection (optional operation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57ab71adf41a139e424bf6dd47a0bebbb97dbbc" translate="yes" xml:space="preserve">
          <source>Removes from this list all of its elements that are contained in the specified collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d299e7bee30809d022381363f24fdebf318cccd" translate="yes" xml:space="preserve">
          <source>Removes from this list all of its elements that are contained in the specified collection. This is a particularly expensive operation in this class because of the need for an internal temporary array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7684efa285cb13cae7450ff8b7d35f1c4721ba68" translate="yes" xml:space="preserve">
          <source>Removes from this list all of the elements whose index is between &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, and &lt;code&gt;toIndex&lt;/code&gt;, exclusive. Shifts any succeeding elements to the left (reduces their index). This call shortens the list by &lt;code&gt;(toIndex - fromIndex)&lt;/code&gt; elements. (If &lt;code&gt;toIndex==fromIndex&lt;/code&gt;, this operation has no effect.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdccf4e7e18bfd177b9b24f8dbd52fa70174fb88" translate="yes" xml:space="preserve">
          <source>Removes from this set all of its elements that are contained in the specified collection (optional operation). If the specified collection is also a set, this operation effectively modifies this set so that its value is the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd5060f9df53e726823849f3bfd3d4c91ecf402" translate="yes" xml:space="preserve">
          <source>Removes from this set all of its elements that are contained in the specified collection. If the specified collection is also a set, this operation effectively modifies this set so that its value is the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736b21f12bf0b14e09124001b1b83afda2ffc235" translate="yes" xml:space="preserve">
          <source>Removes given relation from the Relation Service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a6de1936bfea36f9adc53cb77173fbd1f93cb9" translate="yes" xml:space="preserve">
          <source>Removes given relation type from Relation Service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea904a698188af98a7467761597f891e407808b" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;CompositeData&lt;/code&gt; value whose index is &lt;var&gt;key&lt;/var&gt; from this &lt;code&gt;TabularData&lt;/code&gt; instance, and returns the removed value, or returns &lt;code&gt;null&lt;/code&gt; if there is no value whose index is &lt;var&gt;key&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03222d0b5db3cf7a653223e4f8026c59c6508eea" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;char&lt;/code&gt; at the specified position in this sequence. This sequence is shortened by one &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a652e24ea5884e791050431471cc52864fc1bff7" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;key&lt;/code&gt; (and its corresponding &lt;code&gt;value&lt;/code&gt;) from this dictionary. This method does nothing if the &lt;code&gt;key&lt;/code&gt; is not in this dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4eee9cef1953ebb8fd482704b3d1a4a3caee2ef" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;key&lt;/code&gt; property (and its corresponding &lt;code&gt;value&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc0229662ce42bb3021dbcc9627998b31955f7d" translate="yes" xml:space="preserve">
          <source>Removes the associated value for the given class. If this value is subsequently &lt;a href=&quot;classvalue#get-java.lang.Class-&quot;&gt;read&lt;/a&gt; for the same class, its value will be reinitialized by invoking its &lt;a href=&quot;classvalue#computeValue-java.lang.Class-&quot;&gt;&lt;code&gt;computeValue&lt;/code&gt;&lt;/a&gt; method. This may result in an additional invocation of the &lt;code&gt;computeValue&lt;/code&gt; method for the given class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f427985a08c1ed2f4b145cbb0ef97515fe96ac6b" translate="yes" xml:space="preserve">
          <source>Removes the attribute with the attribute id 'attrID' from the attribute set. If the attribute does not exist, ignore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc3878ee059065411c578380c9438209bf7099d" translate="yes" xml:space="preserve">
          <source>Removes the attribute with the specified name (key) from this Map. Returns the previous attribute value, or null if none.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebce505cba7910e3ee4b87c840e888ec52c0856" translate="yes" xml:space="preserve">
          <source>Removes the characters in a substring of this sequence. The substring begins at the specified &lt;code&gt;start&lt;/code&gt; and extends to the character at index &lt;code&gt;end - 1&lt;/code&gt; or to the end of the sequence if no such character exists. If &lt;code&gt;start&lt;/code&gt; is equal to &lt;code&gt;end&lt;/code&gt;, no changes are made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea98ca68efa98c2122daacf8ecd527527e525c03" translate="yes" xml:space="preserve">
          <source>Removes the child node indicated by &lt;code&gt;oldChild&lt;/code&gt; from the list of children, and returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24bc2609892c1fe4e80aca86f7d3623eb014744" translate="yes" xml:space="preserve">
          <source>Removes the current thread's value for this thread-local variable. If this thread-local variable is subsequently &lt;a href=&quot;threadlocal#get--&quot;&gt;read&lt;/a&gt; by the current thread, its value will be reinitialized by invoking its &lt;a href=&quot;threadlocal#initialValue--&quot;&gt;&lt;code&gt;initialValue()&lt;/code&gt;&lt;/a&gt; method, unless its value is &lt;a href=&quot;threadlocal#set-T-&quot;&gt;set&lt;/a&gt; by the current thread in the interim. This may result in multiple invocations of the &lt;code&gt;initialValue&lt;/code&gt; method in the current thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faad2be7e4d683667c10e4df8e7045323e14b1ab" translate="yes" xml:space="preserve">
          <source>Removes the element at the specified position in this Vector. Shifts any subsequent elements to the left (subtracts one from their indices). Returns the element that was removed from the Vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e834ab37dfb5585f81089ee2559e8f8ed8c81e78" translate="yes" xml:space="preserve">
          <source>Removes the element at the specified position in this list (optional operation). Shifts any subsequent elements to the left (subtracts one from their indices). Returns the element that was removed from the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd46bbd9be00787ad65091fdc504cadc9134639b" translate="yes" xml:space="preserve">
          <source>Removes the element at the specified position in this list. Shifts any subsequent elements to the left (subtracts one from their indices).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9388dcaf1ed3a5469f5d3a2d8db393f75848d2a" translate="yes" xml:space="preserve">
          <source>Removes the element at the specified position in this list. Shifts any subsequent elements to the left (subtracts one from their indices). Returns the element that was removed from the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38be15466f16599fc12c8e7d46b350c467f8f3eb" translate="yes" xml:space="preserve">
          <source>Removes the entry for a key only if currently mapped to a given value. This is equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b3504816f7bc92c2e664529d2906288aee7bf4b" translate="yes" xml:space="preserve">
          <source>Removes the entry for the specified key only if it is currently mapped to the specified value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6fb22c22a720d39f57c4eb1e4a345c5c6874a7" translate="yes" xml:space="preserve">
          <source>Removes the entry for this instance, returning the old entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613bed2f81cacf86a9038a3d943447081e14c3ec" translate="yes" xml:space="preserve">
          <source>Removes the first (lowest-indexed) occurrence of the argument from this vector. If the object is found in this vector, each component in the vector with an index greater or equal to the object's index is shifted downward to have an index one smaller than the value it had previously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e7b7f721a99ba31051f87f8d68b251db5ec1c0" translate="yes" xml:space="preserve">
          <source>Removes the first element &lt;code&gt;e&lt;/code&gt; such that &lt;code&gt;o.equals(e)&lt;/code&gt;, if such an element exists in this deque. If the deque does not contain the element, it is unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe078bef37bd6ba9913b5b61fbf8edcf1016c64" translate="yes" xml:space="preserve">
          <source>Removes the first occurrence of the specified element from this deque. If the deque does not contain the element, it is unchanged. More formally, removes the first element &lt;code&gt;e&lt;/code&gt; such that &lt;code&gt;(o==null ? e==null : o.equals(e))&lt;/code&gt; (if such an element exists). Returns &lt;code&gt;true&lt;/code&gt; if this deque contained the specified element (or equivalently, if this deque changed as a result of the call).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f2653ec67a1714dae0c645119eecc123f5d14c" translate="yes" xml:space="preserve">
          <source>Removes the first occurrence of the specified element from this deque. If the deque does not contain the element, it is unchanged. More formally, removes the first element &lt;code&gt;e&lt;/code&gt; such that &lt;code&gt;o.equals(e)&lt;/code&gt; (if such an element exists). Returns &lt;code&gt;true&lt;/code&gt; if this deque contained the specified element (or equivalently, if this deque changed as a result of the call).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c21119430296aea49d3ab426c260d14bf4d491da" translate="yes" xml:space="preserve">
          <source>Removes the first occurrence of the specified element from this list, if it is present (optional operation). If this list does not contain the element, it is unchanged. More formally, removes the element with the lowest index &lt;code&gt;i&lt;/code&gt; such that &lt;code&gt;(o==null ? get(i)==null : o.equals(get(i)))&lt;/code&gt; (if such an element exists). Returns &lt;code&gt;true&lt;/code&gt; if this list contained the specified element (or equivalently, if this list changed as a result of the call).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7731856211cef2954ddf9e3b2c7aea8139c6d24" translate="yes" xml:space="preserve">
          <source>Removes the first occurrence of the specified element from this list, if it is present. If the list does not contain the element, it is unchanged. More formally, removes the element with the lowest index &lt;code&gt;i&lt;/code&gt; such that &lt;code&gt;(o==null ? get(i)==null : o.equals(get(i)))&lt;/code&gt; (if such an element exists). Returns &lt;code&gt;true&lt;/code&gt; if this list contained the specified element (or equivalently, if this list changed as a result of the call).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486a73efc57aba3341b73a0711847b5ea05f581a" translate="yes" xml:space="preserve">
          <source>Removes the first occurrence of the specified element from this list, if it is present. If this list does not contain the element, it is unchanged. More formally, removes the element with the lowest index &lt;code&gt;i&lt;/code&gt; such that &lt;code&gt;(o==null ? get(i)==null : o.equals(get(i)))&lt;/code&gt; (if such an element exists). Returns &lt;code&gt;true&lt;/code&gt; if this list contained the specified element (or equivalently, if this list changed as a result of the call).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b3e69668bc6dea25249ae15533728be80a750f" translate="yes" xml:space="preserve">
          <source>Removes the first occurrence of the specified element in this Vector If the Vector does not contain the element, it is unchanged. More formally, removes the element with the lowest index i such that &lt;code&gt;(o==null ? get(i)==null : o.equals(get(i)))&lt;/code&gt; (if such an element exists).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1ef4cce6aa34ef8ef208e178bc1a6a86d3070a" translate="yes" xml:space="preserve">
          <source>Removes the first occurrence of the specified element in this deque (when traversing the deque from head to tail). If the deque does not contain the element, it is unchanged. More formally, removes the first element &lt;code&gt;e&lt;/code&gt; such that &lt;code&gt;o.equals(e)&lt;/code&gt; (if such an element exists). Returns &lt;code&gt;true&lt;/code&gt; if this deque contained the specified element (or equivalently, if this deque changed as a result of the call).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa3a9cda11643bbd048036dfd60adcc1fd88482" translate="yes" xml:space="preserve">
          <source>Removes the first occurrence of the specified element in this list (when traversing the list from head to tail). If the list does not contain the element, it is unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874fb561584ea22e7e9affa96d631e8564da748a" translate="yes" xml:space="preserve">
          <source>Removes the given key from its channel's key set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84d1577f4b7737a9443ceeae2228116edcacd24" translate="yes" xml:space="preserve">
          <source>Removes the given prefix from the prefix list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e667057bdb7d0bb0d0e0014377eb553420bfc8" translate="yes" xml:space="preserve">
          <source>Removes the key (and its corresponding value) from this hashtable. This method does nothing if the key is not in the hashtable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb80d93f6c40d2217262c749a4778bf45c03eb59" translate="yes" xml:space="preserve">
          <source>Removes the key (and its corresponding value) from this map. This method does nothing if the key is not in the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1f410c404ef6498bf6695980074d3c26dfbd9b" translate="yes" xml:space="preserve">
          <source>Removes the key from this map view, by removing the key (and its corresponding value) from the backing map. This method does nothing if the key is not in the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138eb721f568995479f02dd88bd311a53934153e" translate="yes" xml:space="preserve">
          <source>Removes the last element &lt;code&gt;e&lt;/code&gt; such that &lt;code&gt;o.equals(e)&lt;/code&gt;, if such an element exists in this deque. If the deque does not contain the element, it is unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="776bb5943bfcb5f85ca9164544ac4de9d8ffb62c" translate="yes" xml:space="preserve">
          <source>Removes the last occurrence of the specified element from this deque. If the deque does not contain the element, it is unchanged. More formally, removes the last element &lt;code&gt;e&lt;/code&gt; such that &lt;code&gt;(o==null ? e==null : o.equals(e))&lt;/code&gt; (if such an element exists). Returns &lt;code&gt;true&lt;/code&gt; if this deque contained the specified element (or equivalently, if this deque changed as a result of the call).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127ad9d05c9647318c9d0aa23f195281e6f95bce" translate="yes" xml:space="preserve">
          <source>Removes the last occurrence of the specified element from this deque. If the deque does not contain the element, it is unchanged. More formally, removes the last element &lt;code&gt;e&lt;/code&gt; such that &lt;code&gt;o.equals(e)&lt;/code&gt; (if such an element exists). Returns &lt;code&gt;true&lt;/code&gt; if this deque contained the specified element (or equivalently, if this deque changed as a result of the call).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290be8ecada64a020c5eec65085c86b303e972ad" translate="yes" xml:space="preserve">
          <source>Removes the last occurrence of the specified element in this deque (when traversing the deque from head to tail). If the deque does not contain the element, it is unchanged. More formally, removes the last element &lt;code&gt;e&lt;/code&gt; such that &lt;code&gt;o.equals(e)&lt;/code&gt; (if such an element exists). Returns &lt;code&gt;true&lt;/code&gt; if this deque contained the specified element (or equivalently, if this deque changed as a result of the call).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352ab9af9c436b0050a2b4811a5693a8115c747a" translate="yes" xml:space="preserve">
          <source>Removes the last occurrence of the specified element in this list (when traversing the list from head to tail). If the list does not contain the element, it is unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b70948d7618924c6b41ba2c170514b7755cd5f0" translate="yes" xml:space="preserve">
          <source>Removes the mapping for a key from this map if it is present (optional operation). More formally, if this map contains a mapping from key &lt;code&gt;k&lt;/code&gt; to value &lt;code&gt;v&lt;/code&gt; such that &lt;code&gt;(key==null ?  k==null : key.equals(k))&lt;/code&gt;, that mapping is removed. (The map can contain at most one such mapping.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd8297a3ef02e4b2124eeba7a78a656ce61707d" translate="yes" xml:space="preserve">
          <source>Removes the mapping for a key from this weak hash map if it is present. More formally, if this map contains a mapping from key &lt;code&gt;k&lt;/code&gt; to value &lt;code&gt;v&lt;/code&gt; such that &lt;code&gt;(key==null ?  k==null :
 key.equals(k))&lt;/code&gt;, that mapping is removed. (The map can contain at most one such mapping.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b836a552941c7bef4f5af809d9583c3f4e3071" translate="yes" xml:space="preserve">
          <source>Removes the mapping for the specified key from this map if present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9851c296400cd98de2bcc326a0226360e5ae48f6" translate="yes" xml:space="preserve">
          <source>Removes the mapping for this key from this TreeMap if present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce674745624b835110abecb8eb5a743c42fd320" translate="yes" xml:space="preserve">
          <source>Removes the mapping for this key from this map if it is present (optional operation). More formally, if this map contains a mapping from key &lt;code&gt;k&lt;/code&gt; to value &lt;code&gt;v&lt;/code&gt; such that &lt;code&gt;(key==null ?  k==null : key.equals(k))&lt;/code&gt;, that mapping is removed. (The map can contain at most one such mapping.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c8c56a73c45786bc7e81f455297b870d9b90d17" translate="yes" xml:space="preserve">
          <source>Removes the mapping for this key from this map if present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7b7c497c76adc9f98b170587bc1c44971fb427" translate="yes" xml:space="preserve">
          <source>Removes the next reference object in this queue, blocking until either one becomes available or the given timeout period expires.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800df41020d49eeefc358c9ecfdab2e051aa062d" translate="yes" xml:space="preserve">
          <source>Removes the next reference object in this queue, blocking until one becomes available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524aca40447874a564a4ff3e3f127146be8b0083" translate="yes" xml:space="preserve">
          <source>Removes the object at the top of this stack and returns that object as the value of this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8b14ba17e317faa379e0c483103b55e384748c" translate="yes" xml:space="preserve">
          <source>Removes the object bound to the given name in the session's application layer data. Does nothing if there is no object bound to the given name. If the bound existing object implements the &lt;code&gt;SessionBindingListener&lt;/code&gt; interface, it is notified appropriately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573b0dcafcb305198662fa539f342034db004887" translate="yes" xml:space="preserve">
          <source>Removes the print-service listener from this print service. This means the listener is no longer interested in &lt;code&gt;PrintService&lt;/code&gt; events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa53116ff77eaf6d5697de51eddc3c3dacab3ac" translate="yes" xml:space="preserve">
          <source>Removes the provider with the specified name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbeddc58258d76297f4f090644bc6af115d9e4fd" translate="yes" xml:space="preserve">
          <source>Removes the specified &lt;code&gt;BeanContextMembershipListener&lt;/code&gt; so that it no longer receives &lt;code&gt;BeanContextMembershipEvent&lt;/code&gt;s when the child &lt;code&gt;Component&lt;/code&gt;(s) are added or removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c628a62090178d8fa3577fba9e68375a73673237" translate="yes" xml:space="preserve">
          <source>Removes the specified &lt;code&gt;NodeChangeListener&lt;/code&gt;, so it no longer receives change events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fafb03610f17c4547e1384f9ac808a56e332ab5" translate="yes" xml:space="preserve">
          <source>Removes the specified attribute from this attribute set if present. If &lt;code&gt;attribute&lt;/code&gt; is null, then &lt;code&gt;remove()&lt;/code&gt; does nothing and returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493d062c43fc801005727be9064272abb5d3499f" translate="yes" xml:space="preserve">
          <source>Removes the specified attribute node. If a default value for the removed &lt;code&gt;Attr&lt;/code&gt; node is defined in the DTD, a new node immediately appears with the default value as well as the corresponding namespace URI, local name, and prefix when applicable. The implementation may handle default values from other schemas similarly but applications should use &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; to guarantee this information is up-to-date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10def7413de57e7d39b4cff3bbde8a9f4b836a9e" translate="yes" xml:space="preserve">
          <source>Removes the specified element from this set if it is present (optional operation). More formally, removes an element &lt;code&gt;e&lt;/code&gt; such that &lt;code&gt;(o==null ? e==null : o.equals(e))&lt;/code&gt;, if this set contains such an element. Returns &lt;code&gt;true&lt;/code&gt; if this set contained the element (or equivalently, if this set changed as a result of the call). (This set will not contain the element once the call returns.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460dbdaf15e833ac520276cce01f0d1573ebf5a8" translate="yes" xml:space="preserve">
          <source>Removes the specified element from this set if it is present. More formally, removes an element &lt;code&gt;e&lt;/code&gt; such that &lt;code&gt;(o==null ? e==null : o.equals(e))&lt;/code&gt;, if this set contains such an element. Returns &lt;code&gt;true&lt;/code&gt; if this set contained the element (or equivalently, if this set changed as a result of the call). (This set will not contain the element once the call returns.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0257b19daca07b27da48146d557777d06b5940bd" translate="yes" xml:space="preserve">
          <source>Removes the specified element from this set if it is present. More formally, removes an element &lt;code&gt;e&lt;/code&gt; such that &lt;code&gt;o.equals(e)&lt;/code&gt;, if this set contains such an element. Returns &lt;code&gt;true&lt;/code&gt; if this set contained the element (or equivalently, if this set changed as a result of the call). (This set will not contain the element once the call returns.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f4166227e6a195fa29ee28bde28697872f481f" translate="yes" xml:space="preserve">
          <source>Removes the specified event from the track.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e25001b860d4a218961e3e920abdb56a290ca4a" translate="yes" xml:space="preserve">
          <source>Removes the specified listener from this line's list of listeners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd1fa0a4f5d9a5ea41f99d07e8eb354f36459e1" translate="yes" xml:space="preserve">
          <source>Removes the specified member from the group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83fe051629b3686b15ea0d3e232ca0792cfe013" translate="yes" xml:space="preserve">
          <source>Removes the specified meta-event listener from this sequencer's list of registered listeners, if in fact the listener is registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00bb7c8de587c47c2fef75169ae1fcdb4334808" translate="yes" xml:space="preserve">
          <source>Removes the specified object from the set of observed MBeans.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090dee3ae48daadf6575c4fe6b311e2b5dc0f234" translate="yes" xml:space="preserve">
          <source>Removes the specified permission from this ACL entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29da2bb477e33ee3e5670362d1f27fd902bde182" translate="yes" xml:space="preserve">
          <source>Removes the specified preference change listener, so it no longer receives preference change events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0220168ed0927561567452485df22f6d1bf2dfa5" translate="yes" xml:space="preserve">
          <source>Removes the specified track from the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0768f0f19759771cadc41d33f3150061024bde4" translate="yes" xml:space="preserve">
          <source>Removes the system property indicated by the specified key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9556e00c4e6cdbb8a71a25bb66e0573bc7c9cbbb" translate="yes" xml:space="preserve">
          <source>Removes the timer notification corresponding to the specified identifier from the list of notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ec6e34b65ebcbb210b980cb5800c59779341b9" translate="yes" xml:space="preserve">
          <source>Removes the value associated with the specified key in this preference node, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="432c58e02067411167d190cf23a118187ca383c4" translate="yes" xml:space="preserve">
          <source>Removes this preference node and all of its descendants, invalidating any preferences contained in the removed nodes. Once a node has been removed, attempting any method other than &lt;a href=&quot;preferences#name--&quot;&gt;&lt;code&gt;name()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;preferences#absolutePath--&quot;&gt;&lt;code&gt;absolutePath()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;preferences#isUserNode--&quot;&gt;&lt;code&gt;isUserNode()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;preferences#flush--&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;preferences#node-java.lang.String-&quot;&gt;&lt;code&gt;nodeExists(&quot;&quot;)&lt;/code&gt;&lt;/a&gt; on the corresponding &lt;code&gt;Preferences&lt;/code&gt; instance will fail with an &lt;code&gt;IllegalStateException&lt;/code&gt;. (The methods defined on &lt;a href=&quot;../../lang/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; can still be invoked on a node after it has been removed; they will not throw &lt;code&gt;IllegalStateException&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2962e4a08fd5f70c5ef804961dc2284ae9ba05" translate="yes" xml:space="preserve">
          <source>Removes this preference node, invalidating it and any preferences that it contains. The named child will have no descendants at the time this invocation is made (i.e., the &lt;a href=&quot;preferences#removeNode--&quot;&gt;&lt;code&gt;Preferences.removeNode()&lt;/code&gt;&lt;/a&gt; method invokes this method repeatedly in a bottom-up fashion, removing each of a node's descendants before removing the node itself).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d11942271cb97a8e60ba28636ae7aee8b959ecd" translate="yes" xml:space="preserve">
          <source>Removes this task from the executor's internal queue if it is present, thus causing it not to be run if it has not already started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c38e9f5590f4e57de12d1a021fc783ea5c931c2" translate="yes" xml:space="preserve">
          <source>Renames the file denoted by this abstract pathname.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bfb936828b89eba9aab378946733a8e3ff4ef54" translate="yes" xml:space="preserve">
          <source>Renderable image object -- The client supplies an object that implements interface &lt;a href=&quot;/openjdk~8_gui/java/awt/image/renderable/renderableimage&quot;&gt;&lt;code&gt;RenderableImage&lt;/code&gt;&lt;/a&gt;. The printer calls methods in that interface to obtain the image to be printed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b982dc465bc1408b041cc57f797407f1c6cf0361" translate="yes" xml:space="preserve">
          <source>Renderable image objects. Specifically, the following doc flavor is recommended to be supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e8006ec4224c5ce91501f75a6cd32493e137ee5" translate="yes" xml:space="preserve">
          <source>Reorder the objects in the array into visual order based on their levels. This is a utility function to use when you have a collection of objects representing runs of text in logical order, each run containing text at a single level. The elements at &lt;code&gt;index&lt;/code&gt; from &lt;code&gt;objectStart&lt;/code&gt; up to &lt;code&gt;objectStart + count&lt;/code&gt; in the objects array will be reordered into visual order assuming each run of text has the level indicated by the corresponding element in the levels array (at &lt;code&gt;index - objectStart + levelStart&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca942f9d8520d97a92ce51a25bf146a4a1588cf4" translate="yes" xml:space="preserve">
          <source>Repeat the call once more bytes are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45705488b9cc4533793d35b6854dfb29e4c28273" translate="yes" xml:space="preserve">
          <source>Repeatable</source>
          <target state="translated">Repeatable</target>
        </trans-unit>
        <trans-unit id="cd0f164e94ac29791266b65d0d21999a1f8e4c7f" translate="yes" xml:space="preserve">
          <source>Repeatable.value</source>
          <target state="translated">Repeatable.value</target>
        </trans-unit>
        <trans-unit id="b34e4146a6b8c09731c84255f228ed350ff92e91" translate="yes" xml:space="preserve">
          <source>Replace an existing file if it exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24705af8aa30896593b481ae993b4c8a222a15ee" translate="yes" xml:space="preserve">
          <source>Replace an object read from an &lt;a href=&quot;../../../java/io/objectinputstream&quot;&gt;&lt;code&gt;ObjectInputStream&lt;/code&gt;&lt;/a&gt; with the unique instance for that value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ec802edebf83e837d7ef906eb015be236f1cd4" translate="yes" xml:space="preserve">
          <source>Replace the Certificate to be serialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b197b61aa2e72c0cced83cdfa2965ecd2a72a9d" translate="yes" xml:space="preserve">
          <source>Replace the implementation object wrapped in this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10746358d0b442bd9b301ae207d803c8d0085c60" translate="yes" xml:space="preserve">
          <source>Replaces a portion of an image already present in the output with a portion of the given &lt;code&gt;Raster&lt;/code&gt;. The image data must match, or be convertible to, the image layout of the existing image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9458638bafec96ea26b375eecd3c3e7dbdbcbca" translate="yes" xml:space="preserve">
          <source>Replaces a portion of an image already present in the output with a portion of the given image. The image data must match, or be convertible to, the image layout of the existing image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c13bba6c14235351ffa4a7f221101b058d8d88" translate="yes" xml:space="preserve">
          <source>Replaces all occurrences of one specified value in a list with another. More formally, replaces with &lt;code&gt;newVal&lt;/code&gt; each element &lt;code&gt;e&lt;/code&gt; in &lt;code&gt;list&lt;/code&gt; such that &lt;code&gt;(oldVal==null ? e==null : oldVal.equals(e))&lt;/code&gt;. (This method has no effect on the size of the list.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9109ceac03a689063f16a3b7f01d46dafb4d256a" translate="yes" xml:space="preserve">
          <source>Replaces all of the elements of the specified list with the specified element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0ef16dd91819882c284edb5cf46fe7a04e5321" translate="yes" xml:space="preserve">
          <source>Replaces each element of this list with the result of applying the operator to that element. Errors or runtime exceptions thrown by the operator are relayed to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd3c632673c68b0ff5d30e5dce1af0bedf4266a" translate="yes" xml:space="preserve">
          <source>Replaces each entry's value with the result of invoking the given function on that entry until all entries have been processed or the function throws an exception. Exceptions thrown by the function are relayed to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e79927f6240a2a13f7c9a2e1ee18560142a9cc" translate="yes" xml:space="preserve">
          <source>Replaces each entry's value with the result of invoking the given function on that entry, in the order entries are returned by an entry set iterator, until all entries have been processed or the function throws an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d701f077a2a66b00b8fbdf0d9cebdc61c3d941" translate="yes" xml:space="preserve">
          <source>Replaces each substring of this string that matches the given &lt;a href=&quot;../util/regex/pattern#sum&quot;&gt;regular expression&lt;/a&gt; with the given replacement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb37c9253889a0f3fb32c4c1d707d6e2aa500774" translate="yes" xml:space="preserve">
          <source>Replaces each substring of this string that matches the literal target sequence with the specified literal replacement sequence. The replacement proceeds from the beginning of the string to the end, for example, replacing &quot;aa&quot; with &quot;b&quot; in the string &quot;aaa&quot; will result in &quot;ba&quot; rather than &quot;ab&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba37458a486b4935097ae1ad078518b4484b82d" translate="yes" xml:space="preserve">
          <source>Replaces every subsequence of the input sequence that matches the pattern with the given replacement string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0efa260e0dc31bf99946974d0e47a8f85d7c4c" translate="yes" xml:space="preserve">
          <source>Replaces the &lt;code&gt;CertPath&lt;/code&gt; to be serialized with a &lt;code&gt;CertPathRep&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="450a7502b30b2c245bd8f39ae99fdfe30f35a3da" translate="yes" xml:space="preserve">
          <source>Replaces the characters in a substring of this sequence with characters in the specified &lt;code&gt;String&lt;/code&gt;. The substring begins at the specified &lt;code&gt;start&lt;/code&gt; and extends to the character at index &lt;code&gt;end - 1&lt;/code&gt; or to the end of the sequence if no such character exists. First the characters in the substring are removed and then the specified &lt;code&gt;String&lt;/code&gt; is inserted at &lt;code&gt;start&lt;/code&gt;. (This sequence will be lengthened to accommodate the specified String if necessary.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b2c45af2328eac15e4934824b957c6dbf1aaa0" translate="yes" xml:space="preserve">
          <source>Replaces the child node &lt;code&gt;oldChild&lt;/code&gt; with &lt;code&gt;newChild&lt;/code&gt; in the list of children, and returns the &lt;code&gt;oldChild&lt;/code&gt; node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998f6d1c8f8295e85c71d5b9a83d51a1f685c4c3" translate="yes" xml:space="preserve">
          <source>Replaces the element at the specified position in this Vector with the specified element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52155283bd7ddb42701e07a94317e911308c91d1" translate="yes" xml:space="preserve">
          <source>Replaces the element at the specified position in this list with the specified element (optional operation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18267f30554d72a3c43c71dffdfa0db2fe7f568" translate="yes" xml:space="preserve">
          <source>Replaces the element at the specified position in this list with the specified element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c8f846ad9449424186e961a0598376f5e49032" translate="yes" xml:space="preserve">
          <source>Replaces the entry for a key only if currently mapped to a given value. This is equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c38dcdd82a476826835c159cce1d1dcf2e3c7a" translate="yes" xml:space="preserve">
          <source>Replaces the entry for a key only if currently mapped to some value. This is equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66389c1b6487a1256366ae0563b6de9e3f2b05ed" translate="yes" xml:space="preserve">
          <source>Replaces the entry for the specified key only if currently mapped to the specified value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372c584551d0db7b21b7873720c48e8dcde30c98" translate="yes" xml:space="preserve">
          <source>Replaces the entry for the specified key only if it is currently mapped to some value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5917c8b771e447a3d585f17cc4e965412fbb0319" translate="yes" xml:space="preserve">
          <source>Replaces the first subsequence of the input sequence that matches the pattern with the given replacement string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eedf365d0d62b8e7a467abd575e65d16b0896199" translate="yes" xml:space="preserve">
          <source>Replaces the first substring of this string that matches the given &lt;a href=&quot;../util/regex/pattern#sum&quot;&gt;regular expression&lt;/a&gt; with the given replacement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b63cc8377f6ccd61b403578960111ed4bb6b0ad" translate="yes" xml:space="preserve">
          <source>Replaces the image metadata associated with an existing image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccf522fdb90926370f0d6e345d5b4717fae3299" translate="yes" xml:space="preserve">
          <source>Replaces the last element returned by &lt;a href=&quot;listiterator#next--&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;listiterator#previous--&quot;&gt;&lt;code&gt;previous()&lt;/code&gt;&lt;/a&gt; with the specified element (optional operation). This call can be made only if neither &lt;a href=&quot;listiterator#remove--&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; nor &lt;a href=&quot;listiterator#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt; have been called after the last call to &lt;code&gt;next&lt;/code&gt; or &lt;code&gt;previous&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e671294baaea659c22f3a2cec337f832aa964a4" translate="yes" xml:space="preserve">
          <source>Replaces the stream metadata in the output with new information. If the output is an &lt;code&gt;ImageOutputStream&lt;/code&gt;, the prior contents of the stream are examined and possibly edited to make room for the new data. All of the prior contents of the output must be available for reading and writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e0540b9befb58759f003c5363358c37773010e" translate="yes" xml:space="preserve">
          <source>Replaces the value corresponding to this entry with the specified value (optional operation). (Writes through to the map.) The behavior of this call is undefined if the mapping has already been removed from the map (by the iterator's &lt;code&gt;remove&lt;/code&gt; operation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640a8f686cafceb67d00c9dc1fd9dccd62103379" translate="yes" xml:space="preserve">
          <source>Replaces the value corresponding to this entry with the specified value (optional operation). This implementation simply throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;, as this class implements an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9df6081bfeb5aa41d1024805d5722c33c62ba96" translate="yes" xml:space="preserve">
          <source>Replaces the value corresponding to this entry with the specified value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb4f01a942a1628c1d9ca65eff2b859913e20f3" translate="yes" xml:space="preserve">
          <source>Report a bound property update to any registered listeners. No event is fired if old and new are equal and non-null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc0678a0e6cc6d704581bf431f739cb3a3fb12f" translate="yes" xml:space="preserve">
          <source>Report a vetoable property update to any registered listeners. If anyone vetos the change, then fire a new event reverting everyone to the old value and then rethrow the PropertyVetoException.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb1daba3c00866d3833c528ee3a4e2ae799ea40" translate="yes" xml:space="preserve">
          <source>Report an InvalidClassException for the reason specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f530c2a2ed6236cb68e87187a35b80c9797d4b6b" translate="yes" xml:space="preserve">
          <source>Report that we have been modified to any interested listeners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9de285d28b3abb776ea997b9d740aa1d112995a" translate="yes" xml:space="preserve">
          <source>Reports a bad SSL key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0256fa2cbad8cfcc7da3cf4b55eb49833e51c66b" translate="yes" xml:space="preserve">
          <source>Reports a bad SSL key. Normally, this indicates misconfiguration of the server or client SSL certificate and private key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f390a238882ce1054f4bb5ef314c102ed3741d68" translate="yes" xml:space="preserve">
          <source>Reports a boolean bound indexed property update to listeners that have been registered to track updates of all properties or a property with the specified name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eedf2dd562183ce56096012200c7bdb66ba6f21" translate="yes" xml:space="preserve">
          <source>Reports a boolean bound property update to listeners that have been registered to track updates of all properties or a property with the specified name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa733de24d91382e709cef1069a301bde6e1cce" translate="yes" xml:space="preserve">
          <source>Reports a boolean constrained property update to listeners that have been registered to track updates of all properties or a property with the specified name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a56943c3696f74ce8d27a897ecbeef60fe8115d" translate="yes" xml:space="preserve">
          <source>Reports a bound indexed property update to listeners that have been registered to track updates of all properties or a property with the specified name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5182228770e1804f40e3c86f5e1de6a871036d4" translate="yes" xml:space="preserve">
          <source>Reports a bound property update to listeners that have been registered to track updates of all properties or a property with the specified name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9c9f8ea2942294c5a87edbca5c60d04c93f9c2" translate="yes" xml:space="preserve">
          <source>Reports a change to this decoder's malformed-input action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fee4a5d887311b1bfb0be2e563a0be6ca7d94dc" translate="yes" xml:space="preserve">
          <source>Reports a change to this decoder's replacement value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df13a2b9d3c7105eeec10b0625b9dd07996b27c0" translate="yes" xml:space="preserve">
          <source>Reports a change to this decoder's unmappable-character action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202bbdf77b42f3259e3f3c9bdb0a1d714bc2df26" translate="yes" xml:space="preserve">
          <source>Reports a change to this encoder's malformed-input action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b759a89abbc51b6e77c0c34f91b352d582431d6" translate="yes" xml:space="preserve">
          <source>Reports a change to this encoder's replacement value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ad70004dad17892eb548f0072f7e80cb4167c4" translate="yes" xml:space="preserve">
          <source>Reports a change to this encoder's unmappable-character action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c08f0b220985441345256cfd653c4eb245d4196" translate="yes" xml:space="preserve">
          <source>Reports a constrained property update to listeners that have been registered to track updates of all properties or a property with the specified name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5c206f3d92db6eb152c8b0542e198dfde748d6" translate="yes" xml:space="preserve">
          <source>Reports an error in the operation of the SSL protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed642290092e382335fc34469aae9b9381094385" translate="yes" xml:space="preserve">
          <source>Reports an error in the operation of the SSL protocol. Normally this indicates a flaw in one of the protocol implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f35bacf4ba933c9373e8d6ff2608c5b626bffc" translate="yes" xml:space="preserve">
          <source>Reports an integer bound indexed property update to listeners that have been registered to track updates of all properties or a property with the specified name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc64ab6389fbc280c5ef9d8a62ba1ca23b25e9c" translate="yes" xml:space="preserve">
          <source>Reports an integer bound property update to listeners that have been registered to track updates of all properties or a property with the specified name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa08e8f1c547788a2948a50c40d16d1ca0f851d0" translate="yes" xml:space="preserve">
          <source>Reports an integer constrained property update to listeners that have been registered to track updates of all properties or a property with the specified name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed69075aef9982e2eb415f01906ad922c28fd473" translate="yes" xml:space="preserve">
          <source>Reports how many bytes had been transferred as part of the I/O operation before it was interrupted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5002d1da10a2ad747d482e8c19aacb274aa666b" translate="yes" xml:space="preserve">
          <source>Reports if an event set is in the &quot;default&quot; set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ff22252d64e5045ddca938dfe7029b758b966b" translate="yes" xml:space="preserve">
          <source>Reports if the current service is being forcibly revoked, in which case the references are now invalidated and unusable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8855d7adaea16a2fe56f3c9940974b63f666881c" translate="yes" xml:space="preserve">
          <source>Reports if this type contains a primitive argument or return value. The return type &lt;code&gt;void&lt;/code&gt; counts as a primitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e02deaa3fbc14db3835b1c2f1bcbb497558f05" translate="yes" xml:space="preserve">
          <source>Reports if this type contains a wrapper argument or return value. Wrappers are types which box primitive values, such as &lt;a href=&quot;../integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;. The reference type &lt;code&gt;java.lang.Void&lt;/code&gt; counts as a wrapper, if it occurs as a return type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab5bdf7bc92286db32d37faf5823b2dd39787fe" translate="yes" xml:space="preserve">
          <source>Reports that a given region of a thumbnail image has been updated. The application might choose to redisplay the specified area, for example, in order to provide a progressive display effect, or perform other incremental processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fbd83ceb741e2d4cf0f67bd65b3ebca40b9a160" translate="yes" xml:space="preserve">
          <source>Reports that a given region of the image has been updated. The application might choose to redisplay the specified area, for example, in order to provide a progressive display effect, or perform other incremental processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9bf3150da85f3026f4bc94a6a915b382d8605b7" translate="yes" xml:space="preserve">
          <source>Reports that a read has been aborted via the reader's &lt;code&gt;abort&lt;/code&gt; method. No further notifications will be given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4952474dd1275a26c893054316fdebb031aaee9c" translate="yes" xml:space="preserve">
          <source>Reports that a sequence of read operations has completed. &lt;code&gt;ImageReader&lt;/code&gt; implementations are required to call this method exactly once from their &lt;code&gt;readAll(Iterator)&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b9418326af034da6e22a132ebe2901f1316ae9" translate="yes" xml:space="preserve">
          <source>Reports that a sequence of read operations is beginning. &lt;code&gt;ImageReader&lt;/code&gt; implementations are required to call this method exactly once from their &lt;code&gt;readAll(Iterator)&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929d5b863124faaad3410d51009b4866a6a520a8" translate="yes" xml:space="preserve">
          <source>Reports that a thumbnail read operation has completed. All &lt;code&gt;ImageReader&lt;/code&gt; implementations are required to call this method exactly once upon completion of each thumbnail read operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481bec5a8a43b9525f40328b3e5fe43b271b2234" translate="yes" xml:space="preserve">
          <source>Reports that a thumbnail read operation is beginning. All &lt;code&gt;ImageReader&lt;/code&gt; implementations are required to call this method exactly once when beginning a thumbnail read operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b9874a4c141ac592cdb15f27505c7c18fb0d21" translate="yes" xml:space="preserve">
          <source>Reports that a thumbnail write operation has completed. All &lt;code&gt;ImageWriter&lt;/code&gt; implementations are required to call this method exactly once upon completion of each thumbnail write operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21c72a4486523d104930cf2a88f8dccf0165ed6" translate="yes" xml:space="preserve">
          <source>Reports that a thumbnail write operation is beginning. All &lt;code&gt;ImageWriter&lt;/code&gt; implementations are required to call this method exactly once when beginning a thumbnail write operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a8b035e3e753b4fe9c7b1576218d86054fb4eb4" translate="yes" xml:space="preserve">
          <source>Reports that a write has been aborted via the writer's &lt;code&gt;abort&lt;/code&gt; method. No further notifications will be given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19923a5dda91660b76834fc08c9082187c3bb32" translate="yes" xml:space="preserve">
          <source>Reports that an image read operation is beginning. All &lt;code&gt;ImageReader&lt;/code&gt; implementations are required to call this method exactly once when beginning an image read operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3889f2a9769a8fe6333fd3368fba334a048dc99" translate="yes" xml:space="preserve">
          <source>Reports that an image write operation is beginning. All &lt;code&gt;ImageWriter&lt;/code&gt; implementations are required to call this method exactly once when beginning an image write operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deade3652464059117785abc5b8d0699472df59b" translate="yes" xml:space="preserve">
          <source>Reports that the current image read operation has completed. All &lt;code&gt;ImageReader&lt;/code&gt; implementations are required to call this method exactly once upon completion of each image read operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50da8f575698cb5fa1b8037661edf0fbb27d73fb" translate="yes" xml:space="preserve">
          <source>Reports that the current read operation has completed a progressive pass. Readers of formats that support progressive encoding should use this to notify clients when each pass is completed when reading a progressively encoded image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e634f87f156137542e6cdc9291b2f31cff94910" translate="yes" xml:space="preserve">
          <source>Reports that the current read operation is about to begin a progressive pass. Readers of formats that support progressive encoding should use this to notify clients when each pass is completed when reading a progressively encoded image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ebc191cefd2d9f586a51e69bc4ca151acf3a3f" translate="yes" xml:space="preserve">
          <source>Reports that the current thumbnail read operation has completed a progressive pass. Readers of formats that support progressive encoding should use this to notify clients when each pass is completed when reading a progressively encoded thumbnail image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a995684c31260b63a5512a75e8c836d9d692be1a" translate="yes" xml:space="preserve">
          <source>Reports that the current thumbnail read operation is about to begin a progressive pass. Readers of formats that support progressive encoding should use this to notify clients when each pass is completed when reading a progressively encoded thumbnail image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622705bf21814689bd833d8524e1749eb4c29b36" translate="yes" xml:space="preserve">
          <source>Reports that the image write operation has completed. All &lt;code&gt;ImageWriter&lt;/code&gt; implementations are required to call this method exactly once upon completion of each image write operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51bc8e500eb7d8c91df2d457b5ddbdd4a16c7e46" translate="yes" xml:space="preserve">
          <source>Reports the approximate degree of completion of the current &lt;code&gt;getThumbnail&lt;/code&gt; call within the associated &lt;code&gt;ImageReader&lt;/code&gt;. The semantics are identical to those of &lt;code&gt;imageProgress&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35f62e72e89a475139e6996acde76bf83db047e" translate="yes" xml:space="preserve">
          <source>Reports the approximate degree of completion of the current &lt;code&gt;read&lt;/code&gt; call of the associated &lt;code&gt;ImageReader&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e28a1663981e4496a6ca6f8ca56f8d53f6f474c" translate="yes" xml:space="preserve">
          <source>Reports the approximate degree of completion of the current &lt;code&gt;write&lt;/code&gt; call within the associated &lt;code&gt;ImageWriter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48422c73c142814a31726774f77231cf2e218404" translate="yes" xml:space="preserve">
          <source>Reports the approximate degree of completion of the current thumbnail write within the associated &lt;code&gt;ImageWriter&lt;/code&gt;. The semantics are identical to those of &lt;code&gt;imageProgress&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d4902cd7749f62abdc440c506d2b8e609934e3" translate="yes" xml:space="preserve">
          <source>Reports the authorization ID in effect for the client of this session. This method can only be called if isComplete() returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec88b9d1357977541910496febec3a2f1a782d83" translate="yes" xml:space="preserve">
          <source>Reports the end index (exclusive) of this matcher's region. The searches this matcher conducts are limited to finding matches within &lt;a href=&quot;matcher#regionStart--&quot;&gt;&lt;code&gt;regionStart&lt;/code&gt;&lt;/a&gt; (inclusive) and &lt;a href=&quot;matcher#regionEnd--&quot;&gt;&lt;code&gt;regionEnd&lt;/code&gt;&lt;/a&gt; (exclusive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622f8361977abcfd4f70c11f1d3db9d4d5a373d4" translate="yes" xml:space="preserve">
          <source>Reports the occurrence of a non-fatal error in decoding. Decoding will continue following the call to this method. The application may choose to display a dialog, print the warning to the console, ignore the warning, or take any other action it chooses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b302109f93b54396dba49180cc30cc4fd35774" translate="yes" xml:space="preserve">
          <source>Reports the occurrence of a non-fatal error in encoding. Encoding will continue following the call to this method. The application may choose to display a dialog, print the warning to the console, ignore the warning, or take any other action it chooses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f328a711cfd79144390b80e53afff34d1fb6cab" translate="yes" xml:space="preserve">
          <source>Reports the start index of this matcher's region. The searches this matcher conducts are limited to finding matches within &lt;a href=&quot;matcher#regionStart--&quot;&gt;&lt;code&gt;regionStart&lt;/code&gt;&lt;/a&gt; (inclusive) and &lt;a href=&quot;matcher#regionEnd--&quot;&gt;&lt;code&gt;regionEnd&lt;/code&gt;&lt;/a&gt; (exclusive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0897eab53afe716cec9fc9a1dedc842961dd59df" translate="yes" xml:space="preserve">
          <source>Reports the type of this method handle. Every invocation of this method handle via &lt;code&gt;invokeExact&lt;/code&gt; must exactly match this type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aec252316b4279a56fa2b5c1a2fb37958621ab6" translate="yes" xml:space="preserve">
          <source>Reports whether or not a given service is currently available from this context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b70d154472aad8fdbaf282c5ec7316689bc52f0" translate="yes" xml:space="preserve">
          <source>Reports whether or not this &lt;code&gt;BeanContext&lt;/code&gt; is empty. A &lt;code&gt;BeanContext&lt;/code&gt; is considered empty when it contains zero nested children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3eb3762262af14232fe0fed26f5165ca49e3d33" translate="yes" xml:space="preserve">
          <source>Reports whether or not this class is a delegate of another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b4b42c1169050f89479784053b9d2f8a150e66" translate="yes" xml:space="preserve">
          <source>Reports whether or not this event is propagated from some other &lt;code&gt;BeanContext&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce849eab93698d00d847b65a46aace56d08652f3" translate="yes" xml:space="preserve">
          <source>Reports whether or not this object is in currently in design time mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f579923782d693a09d932685a967f0f7658bcb8d" translate="yes" xml:space="preserve">
          <source>Reports whether the device is open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2f1a2db6d5258650a3e7d703cfd6e1ac98cb1a" translate="yes" xml:space="preserve">
          <source>Reports whether this HTTP cookie has expired or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9f6607e89b7e4eb25189a2889605fdc13d540f" translate="yes" xml:space="preserve">
          <source>Reports whether this mixer supports synchronization of the specified set of lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828eeb21e7dc274d821e761203906355669da89a" translate="yes" xml:space="preserve">
          <source>Reports whether two objects are equal. Returns &lt;code&gt;true&lt;/code&gt; if the objects are identical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ecc8672df106b9d628184791885c727c6c8835" translate="yes" xml:space="preserve">
          <source>Repositions this audio input stream to the position it had at the time its &lt;code&gt;mark&lt;/code&gt; method was last invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17689e17556ed3db73c28fc0e7fb7b9d1221ed2c" translate="yes" xml:space="preserve">
          <source>Repositions this stream to the position at the time the &lt;code&gt;mark&lt;/code&gt; method was last called on this input stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb0920c08780e5c216e0c4a25be9eba358a5455" translate="yes" xml:space="preserve">
          <source>Represent channels for retrieving resources from the ResponseCache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e379c36aaf3e0d41d701bd63dbec6ed0c9a5535b" translate="yes" xml:space="preserve">
          <source>Represent channels for retrieving resources from the ResponseCache. Instances of such a class provide an InputStream that returns the entity body, and also a getHeaders() method which returns the associated response headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b5972ddc0741d3056b5e3d5d1843afa2a4da88" translate="yes" xml:space="preserve">
          <source>Representation Class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d38630075586c96b22338bf08fa90b128d179d" translate="yes" xml:space="preserve">
          <source>Represents &quot;user defined&quot; exceptions thrown by MBean methods in the agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea96fb462c107e7c2ad94fa02c8ddebe986ebad" translate="yes" xml:space="preserve">
          <source>Represents &quot;user defined&quot; exceptions thrown by MBean methods in the agent. It &quot;wraps&quot; the actual &quot;user defined&quot; exception thrown. This exception will be built by the MBeanServer when a call to an MBean method results in an unknown exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199f42435630414b7c88a9dd9c3253ddb9d62844" translate="yes" xml:space="preserve">
          <source>Represents a SOCKS (V4 or V5) proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6923398e32be8cc7116a009cb15528bd2786df43" translate="yes" xml:space="preserve">
          <source>Represents a Uniform Resource Identifier (URI) reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805d47fc4640c9ad0ee55b25e64cd80540818dad" translate="yes" xml:space="preserve">
          <source>Represents a cache response originally retrieved through secure means, such as TLS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954b28a86171c7840f55cc39fbcee4e7e67e8754" translate="yes" xml:space="preserve">
          <source>Represents a class or interface program element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9485382bcbe699e8b30a553c07559e6be378c1e3" translate="yes" xml:space="preserve">
          <source>Represents a class or interface program element. Provides access to information about the type and its members. Note that an enum type is a kind of class and an annotation type is a kind of interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19de2d66704ad04f15f00bef33ab9b37812e00da" translate="yes" xml:space="preserve">
          <source>Represents a class or interface type that cannot be properly modeled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052e6f47531b48c3607d8ddcf06a43c48f4c20ba" translate="yes" xml:space="preserve">
          <source>Represents a class or interface type that cannot be properly modeled. This may be the result of a processing error, such as a missing class file or erroneous source code. Most queries for information derived from such a type (such as its members or its supertype) will not, in general, return meaningful results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c173f035c5a48107facf410ddd5e2e1a26c7fc7" translate="yes" xml:space="preserve">
          <source>Represents a construct that can be annotated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e1c16563d06f974b7e1c7b8af89c18e8f39b69" translate="yes" xml:space="preserve">
          <source>Represents a construct that can be annotated. A construct is either an &lt;a href=&quot;element/element&quot;&gt;element&lt;/a&gt; or a &lt;a href=&quot;type/typemirror&quot;&gt;type&lt;/a&gt;. Annotations on an element are on a &lt;em&gt;declaration&lt;/em&gt;, whereas annotations on a type are on a specific &lt;em&gt;use&lt;/em&gt; of a type name. The terms &lt;em&gt;directly present&lt;/em&gt;, &lt;em&gt;present&lt;/em&gt;, &lt;em&gt;indirectly present&lt;/em&gt;, and &lt;em&gt;associated &lt;/em&gt; are used throughout this interface to describe precisely which annotations are returned by the methods defined herein.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9d13a5fd92bbe644cb3fe79b17c615b50505d1" translate="yes" xml:space="preserve">
          <source>Represents a control for the auxiliary return gain on a line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45818cc9d1987c85bc4186acc2819f44744e5949" translate="yes" xml:space="preserve">
          <source>Represents a control for the auxiliary send gain on a line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e267c80b12805e3b18369cdbcb34b3c60a5d6bf" translate="yes" xml:space="preserve">
          <source>Represents a control for the mute status of a line. Note that mute status does not affect gain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7e2c5b68f5249f9b4f851e7fe8c324b7c2310f" translate="yes" xml:space="preserve">
          <source>Represents a control for the overall gain on a line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae69c9a10bb95d39f0d7f5a50c503fda147172b" translate="yes" xml:space="preserve">
          <source>Represents a control for the post-reverb gain on a line. This control may be used to control the relative amplitude of the signal returned from an internal reverberation unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf5834aee3286aaa1c18ae6dae7e57127c3748f" translate="yes" xml:space="preserve">
          <source>Represents a control for the pre-reverb gain on a line. This control may be used to affect how much of a line's signal is directed to a mixer's internal reverberation unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0df5bb091edf0a32e2b645a6b5d512287005ad5" translate="yes" xml:space="preserve">
          <source>Represents a control for the relative balance of a stereo signal between two stereo speakers. The valid range of values is -1.0 (left channel only) to 1.0 (right channel only). The default is 0.0 (centered).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e88d648f1368e5a04247eaf599076b17c67c9d" translate="yes" xml:space="preserve">
          <source>Represents a control for the relative pan (left-right positioning) of the signal. The signal may be mono; the pan setting affects how it is distributed by the mixer in a stereo mix. The valid range of values is -1.0 (left channel only) to 1.0 (right channel only). The default is 0.0 (centered).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31dfca70e9404dab199822704ae1f18499f5e65" translate="yes" xml:space="preserve">
          <source>Represents a control for the volume on a line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e44f0c6fa33aa2f52d3e498f5c9cb5c3570d43" translate="yes" xml:space="preserve">
          <source>Represents a control for whether reverberation is applied to a line. Note that the status of this control not affect the reverberation settings for a line, but does affect whether these settings are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae83fb005ab4bd650e2a57e1b9772c98db0e864c" translate="yes" xml:space="preserve">
          <source>Represents a control over a set of possible reverberation settings. Each reverberation setting is described by an instance of the &lt;a href=&quot;reverbtype&quot;&gt;&lt;code&gt;ReverbType&lt;/code&gt;&lt;/a&gt; class. (To access these settings, invoke &lt;code&gt;&lt;a href=&quot;enumcontrol#getValues--&quot;&gt;&lt;code&gt;EnumControl.getValues()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; on an enumerated control of type &lt;code&gt;REVERB&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856357315754138b1844e7c88bc766a1bfd8f48b" translate="yes" xml:space="preserve">
          <source>Represents a control that changes the sample rate of audio playback. The net effect of changing the sample rate depends on the relationship between the media's natural rate and the rate that is set via this control. The natural rate is the sample rate that is specified in the data line's &lt;code&gt;AudioFormat&lt;/code&gt; object. For example, if the natural rate of the media is 11025 samples per second and the sample rate is set to 22050 samples per second, the media will play back at twice the normal speed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4093272660f6e2a3371612aef9bc2f82cbe65e50" translate="yes" xml:space="preserve">
          <source>Represents a currency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46155dec18f216e9290f2fe2926c70ab4febaac9" translate="yes" xml:space="preserve">
          <source>Represents a currency. Currencies are identified by their ISO 4217 currency codes. Visit the &lt;a href=&quot;http://www.iso.org/iso/home/standards/currency_codes.htm&quot;&gt; ISO web site&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7118182acf041c88848af32a9bd52277dc374c" translate="yes" xml:space="preserve">
          <source>Represents a declared type, either a class type or an interface type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93adaea55badf7689f61834f6aaa2a820b1a4a1" translate="yes" xml:space="preserve">
          <source>Represents a declared type, either a class type or an interface type. This includes parameterized types such as &lt;code&gt;java.util.Set&amp;lt;String&amp;gt;&lt;/code&gt; as well as raw types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5146a81abe0d03caf111e742e6aa7df25ad66787" translate="yes" xml:space="preserve">
          <source>Represents a direct connection, or the absence of a proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6a6e52f637c86a89cccc4283f2111b7f78547f" translate="yes" xml:space="preserve">
          <source>Represents a family of communication protocols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad97ba53a7adba1058f5b71125c3d13f9c13a5da" translate="yes" xml:space="preserve">
          <source>Represents a field, &lt;code&gt;enum&lt;/code&gt; constant, method or constructor parameter, local variable, resource variable, or exception parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2cd4f589eeb69a675178cb0627475796c8b812" translate="yes" xml:space="preserve">
          <source>Represents a formal type parameter of a generic class, interface, method, or constructor element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4fb29b9deb49a8af5d30b52a7e875c8b45dc8d" translate="yes" xml:space="preserve">
          <source>Represents a formal type parameter of a generic class, interface, method, or constructor element. A type parameter declares a &lt;a href=&quot;../type/typevariable&quot;&gt;&lt;code&gt;TypeVariable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe32a7ec0b993d4d0c6959b18f1d2bcc3dc3deef" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts a double-valued argument and produces a long-valued result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7448eff4b9afbe94b918ed3973bd5b79c8d35f96" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts a double-valued argument and produces a long-valued result. This is the &lt;code&gt;double&lt;/code&gt;-to-&lt;code&gt;long&lt;/code&gt; primitive specialization for &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d740312ea4510708a474a68503d7b6aa3680cc1" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts a double-valued argument and produces a result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b5825edbcec343a2bc571e974e3941de5259ca" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts a double-valued argument and produces a result. This is the &lt;code&gt;double&lt;/code&gt;-consuming primitive specialization for &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="206a99615c3683b7e67bbb4f22d3e48fe49e926b" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts a double-valued argument and produces an int-valued result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8bb5239c12fbb2323ea88fd120476a95c9f2b3" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts a double-valued argument and produces an int-valued result. This is the &lt;code&gt;double&lt;/code&gt;-to-&lt;code&gt;int&lt;/code&gt; primitive specialization for &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746843b1ef1d1dec9d0325c69c3a0ff4bca42389" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts a long-valued argument and produces a double-valued result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c7527286f808b48cf9e4659843e164081be2ec" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts a long-valued argument and produces a double-valued result. This is the &lt;code&gt;long&lt;/code&gt;-to-&lt;code&gt;double&lt;/code&gt; primitive specialization for &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45846c907a44ba1898e463a822bc9e4ee7dbaac" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts a long-valued argument and produces a result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eabcd1ce4c3be5095000de91fa63f7447a3c77b" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts a long-valued argument and produces a result. This is the &lt;code&gt;long&lt;/code&gt;-consuming primitive specialization for &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f182416b66907134b58d089331055c7963e3398b" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts a long-valued argument and produces an int-valued result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832fd9732d13616d6c23c780863adfc2cee50392" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts a long-valued argument and produces an int-valued result. This is the &lt;code&gt;long&lt;/code&gt;-to-&lt;code&gt;int&lt;/code&gt; primitive specialization for &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fcbac9f9708b52650405f138700b0187b71219a" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts an int-valued argument and produces a double-valued result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="014c7eb7a212f055f41aade3f1acae445b14bdf7" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts an int-valued argument and produces a double-valued result. This is the &lt;code&gt;int&lt;/code&gt;-to-&lt;code&gt;double&lt;/code&gt; primitive specialization for &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb00b349924be163eb8698463869216d642fb397" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts an int-valued argument and produces a long-valued result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd05ea89f8a846cdf0a3be42cc5d949fc8834e7a" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts an int-valued argument and produces a long-valued result. This is the &lt;code&gt;int&lt;/code&gt;-to-&lt;code&gt;long&lt;/code&gt; primitive specialization for &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8562257c6cbc53785b89c25968b009b998b4d12f" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts an int-valued argument and produces a result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6898b53e11bbdded4d583cc685a9c97616b84b19" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts an int-valued argument and produces a result. This is the &lt;code&gt;int&lt;/code&gt;-consuming primitive specialization for &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d985338e59f21c9787bff0e9486a8a28b8f3720" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts one argument and produces a result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece6d2a90345a0f664eaf64ce8a74e37ffa29ea4" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts two arguments and produces a double-valued result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3848cace1c4ad13378629c103da55f6ee0938b" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts two arguments and produces a double-valued result. This is the &lt;code&gt;double&lt;/code&gt;-producing primitive specialization for &lt;a href=&quot;bifunction&quot;&gt;&lt;code&gt;BiFunction&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4ad30fc3939f5d82c27a28d30466b2aa51f6e8" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts two arguments and produces a long-valued result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43897a08624a08438faae91f559e975f21ad5263" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts two arguments and produces a long-valued result. This is the &lt;code&gt;long&lt;/code&gt;-producing primitive specialization for &lt;a href=&quot;bifunction&quot;&gt;&lt;code&gt;BiFunction&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93505bd62bc109f24e9180232911c534deb5a1c" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts two arguments and produces a result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5778d3241d21f41181347469a4a13e616c9d13" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts two arguments and produces a result. This is the two-arity specialization of &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c2a5b1aad8407d124967fcfab2f320ff2415279" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts two arguments and produces an int-valued result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ef85f6777940f8b74a08380d39a90ab1e6a060" translate="yes" xml:space="preserve">
          <source>Represents a function that accepts two arguments and produces an int-valued result. This is the &lt;code&gt;int&lt;/code&gt;-producing primitive specialization for &lt;a href=&quot;bifunction&quot;&gt;&lt;code&gt;BiFunction&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b524dafe852baf271df575d38efe44fec5c9fc" translate="yes" xml:space="preserve">
          <source>Represents a function that produces a double-valued result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4664af28000bb4ce429305214a6fe74e22e68d" translate="yes" xml:space="preserve">
          <source>Represents a function that produces a double-valued result. This is the &lt;code&gt;double&lt;/code&gt;-producing primitive specialization for &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bdca1cd0f6b5ce546187f22ffb2858732bf3e94" translate="yes" xml:space="preserve">
          <source>Represents a function that produces a long-valued result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d55729ba0c1509ac6fc022bf8e90084854532184" translate="yes" xml:space="preserve">
          <source>Represents a function that produces a long-valued result. This is the &lt;code&gt;long&lt;/code&gt;-producing primitive specialization for &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8867e51bd5033cb5234108fc5e9f8625b3417cf8" translate="yes" xml:space="preserve">
          <source>Represents a function that produces an int-valued result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbdbf415f6dabefe7b723fad217e0e43fa6ed24a" translate="yes" xml:space="preserve">
          <source>Represents a function that produces an int-valued result. This is the &lt;code&gt;int&lt;/code&gt;-producing primitive specialization for &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174de8b5c91c8785806616c1b96d900013d83770" translate="yes" xml:space="preserve">
          <source>Represents a list of values for attributes of an MBean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c17b3ca1df83215b02df48e7def0d8fafbea497" translate="yes" xml:space="preserve">
          <source>Represents a list of values for attributes of an MBean. See the &lt;a href=&quot;mbeanserverconnection#getAttributes-javax.management.ObjectName-java.lang.String:A-&quot;&gt;&lt;code&gt;getAttributes&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mbeanserverconnection#setAttributes-javax.management.ObjectName-javax.management.AttributeList-&quot;&gt;&lt;code&gt;setAttributes&lt;/code&gt;&lt;/a&gt; methods of &lt;a href=&quot;mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mbeanserverconnection&quot;&gt;&lt;code&gt;MBeanServerConnection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7781b20c92cb7828bc7194b3645cf9e74830e423" translate="yes" xml:space="preserve">
          <source>Represents a method, constructor, or initializer (static or instance) of a class or interface, including annotation type elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9745eff2b7d95bb89a953c5b0d77cc39ae167957" translate="yes" xml:space="preserve">
          <source>Represents a modifier on a program element such as a class, method, or field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7514bcf858041835c74129afc57c9aef0d23fd4a" translate="yes" xml:space="preserve">
          <source>Represents a notification emitted by the MBean Server through the MBeanServerDelegate MBean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="360c84b1e98440a99c105468705cb9caf13f97b9" translate="yes" xml:space="preserve">
          <source>Represents a notification emitted by the MBean Server through the MBeanServerDelegate MBean. The MBean Server emits the following types of notifications: MBean registration, MBean unregistration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f87f22a1b8296db19f686e929cb895194c99c7" translate="yes" xml:space="preserve">
          <source>Represents a package program element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce5559fba661d82244876eb98942c73745c4a36b" translate="yes" xml:space="preserve">
          <source>Represents a package program element. Provides access to information about the package and its members.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b6b77358bdbf611c6f7b33c858501069a68988" translate="yes" xml:space="preserve">
          <source>Represents a predicate (boolean-valued function) of one &lt;code&gt;double&lt;/code&gt;-valued argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669c2354f0998568393e8dae86d3c9961faab2ee" translate="yes" xml:space="preserve">
          <source>Represents a predicate (boolean-valued function) of one &lt;code&gt;double&lt;/code&gt;-valued argument. This is the &lt;code&gt;double&lt;/code&gt;-consuming primitive type specialization of &lt;a href=&quot;predicate&quot;&gt;&lt;code&gt;Predicate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee81254b091ad7e72d754de4cab5f499d414d24" translate="yes" xml:space="preserve">
          <source>Represents a predicate (boolean-valued function) of one &lt;code&gt;int&lt;/code&gt;-valued argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93998d391a243d990d57a42bc694c88244b39fbd" translate="yes" xml:space="preserve">
          <source>Represents a predicate (boolean-valued function) of one &lt;code&gt;int&lt;/code&gt;-valued argument. This is the &lt;code&gt;int&lt;/code&gt;-consuming primitive type specialization of &lt;a href=&quot;predicate&quot;&gt;&lt;code&gt;Predicate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b12a0eb1326c678f13ad4283763647a38fbc878" translate="yes" xml:space="preserve">
          <source>Represents a predicate (boolean-valued function) of one &lt;code&gt;long&lt;/code&gt;-valued argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d911874acd95c4681d9fc9ec07acdcc426eee2" translate="yes" xml:space="preserve">
          <source>Represents a predicate (boolean-valued function) of one &lt;code&gt;long&lt;/code&gt;-valued argument. This is the &lt;code&gt;long&lt;/code&gt;-consuming primitive type specialization of &lt;a href=&quot;predicate&quot;&gt;&lt;code&gt;Predicate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e08ef08177e3bc1bd5dcb04d8b588ef2844b984" translate="yes" xml:space="preserve">
          <source>Represents a predicate (boolean-valued function) of one argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056f1f9c93820cd2ece022a15201bd1fb09b24ac" translate="yes" xml:space="preserve">
          <source>Represents a predicate (boolean-valued function) of two arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b45a5237fe61501e7a0b0eb3145d7b1e901446" translate="yes" xml:space="preserve">
          <source>Represents a predicate (boolean-valued function) of two arguments. This is the two-arity specialization of &lt;a href=&quot;predicate&quot;&gt;&lt;code&gt;Predicate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5ff3559e74ba303c2aa48f0c211e677964bb50" translate="yes" xml:space="preserve">
          <source>Represents a primitive type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25de4a5f4df1482ffcdfd52168ad25b37f61766" translate="yes" xml:space="preserve">
          <source>Represents a primitive type. These include &lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, and &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302972fdaa9ffc739ed5d416b5fe1ddb179f0448" translate="yes" xml:space="preserve">
          <source>Represents a program element such as a package, class, or method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="247f16947b843c7ba5a5dd1fb9db7baeacad0488" translate="yes" xml:space="preserve">
          <source>Represents a program element such as a package, class, or method. Each element represents a static, language-level construct (and not, for example, a runtime construct of the virtual machine).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4110204db6be9e82bf69d7654d3fbc0a9ef1271e" translate="yes" xml:space="preserve">
          <source>Represents a reference type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8123d719417af5d0614e43697e7bde397e582f26" translate="yes" xml:space="preserve">
          <source>Represents a reference type. These include class and interface types, array types, type variables, and the null type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998eb40a9e9f1492bf1e42755a31706fc7af63c0" translate="yes" xml:space="preserve">
          <source>Represents a role: includes a role name and referenced MBeans (via their ObjectNames).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b2b06e345633e7d2ec9f8de8fb1b3b78632f1e" translate="yes" xml:space="preserve">
          <source>Represents a role: includes a role name and referenced MBeans (via their ObjectNames). The role value is always represented as an ArrayList collection (of ObjectNames) to homogenize the access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0364719a3d35bf4936efc99626c4eb1a6eb4ea79" translate="yes" xml:space="preserve">
          <source>Represents a source of subprocess input or a destination of subprocess output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ffba3ae456c80c9657a9c701fe6bcd9e94eff8" translate="yes" xml:space="preserve">
          <source>Represents a source of subprocess input or a destination of subprocess output. Each &lt;code&gt;Redirect&lt;/code&gt; instance is one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e971b9180b6985ee9ef36325b1f6676ff03aff43" translate="yes" xml:space="preserve">
          <source>Represents a supplier of &lt;code&gt;boolean&lt;/code&gt;-valued results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c0792cc67c8ff16b68794c3d5734ed9a898eb6" translate="yes" xml:space="preserve">
          <source>Represents a supplier of &lt;code&gt;boolean&lt;/code&gt;-valued results. This is the &lt;code&gt;boolean&lt;/code&gt;-producing primitive specialization of &lt;a href=&quot;supplier&quot;&gt;&lt;code&gt;Supplier&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a1990c6311e09bba052eae2a9c334485ce0811" translate="yes" xml:space="preserve">
          <source>Represents a supplier of &lt;code&gt;double&lt;/code&gt;-valued results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa2ba8a9bb25c3c9b3f369c949b739d7746faf1" translate="yes" xml:space="preserve">
          <source>Represents a supplier of &lt;code&gt;double&lt;/code&gt;-valued results. This is the &lt;code&gt;double&lt;/code&gt;-producing primitive specialization of &lt;a href=&quot;supplier&quot;&gt;&lt;code&gt;Supplier&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d546f4f79c6280ab0c6dc00ed477293faaaa90e" translate="yes" xml:space="preserve">
          <source>Represents a supplier of &lt;code&gt;int&lt;/code&gt;-valued results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d094ca9cdc9888afe4c9489de9e5540dcb8e7749" translate="yes" xml:space="preserve">
          <source>Represents a supplier of &lt;code&gt;int&lt;/code&gt;-valued results. This is the &lt;code&gt;int&lt;/code&gt;-producing primitive specialization of &lt;a href=&quot;supplier&quot;&gt;&lt;code&gt;Supplier&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf5bc55d0fb258e92458f524270b1deb9b93164" translate="yes" xml:space="preserve">
          <source>Represents a supplier of &lt;code&gt;long&lt;/code&gt;-valued results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac1f33bf695c67523a197140626ffeb4ba704b0" translate="yes" xml:space="preserve">
          <source>Represents a supplier of &lt;code&gt;long&lt;/code&gt;-valued results. This is the &lt;code&gt;long&lt;/code&gt;-producing primitive specialization of &lt;a href=&quot;supplier&quot;&gt;&lt;code&gt;Supplier&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d99726026f1d0e00c1530f65a8957cc1e701a9" translate="yes" xml:space="preserve">
          <source>Represents a supplier of results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc66cd6ba6b4d47c098c51c829c777166549c65c" translate="yes" xml:space="preserve">
          <source>Represents a type in the Java programming language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84eb17dc7297e6d4cd02b0f23ef925bf8d44d06e" translate="yes" xml:space="preserve">
          <source>Represents a type in the Java programming language. Types include primitive types, declared types (class and interface types), array types, type variables, and the null type. Also represented are wildcard type arguments, the signature and return types of executables, and pseudo-types corresponding to packages and to the keyword &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88bb4a86e0ef5a75ea334cf04ac5c4d1e9a0a40f" translate="yes" xml:space="preserve">
          <source>Represents a type variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e15e416d39aab6bb19071f6387ea36467aa4bba9" translate="yes" xml:space="preserve">
          <source>Represents a type variable. A type variable may be explicitly declared by a &lt;a href=&quot;../element/typeparameterelement&quot;&gt;type parameter&lt;/a&gt; of a type, method, or constructor. A type variable may also be declared implicitly, as by the capture conversion of a wildcard type argument (see chapter 5 of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd3c9824de8f4b183549decd8576d85c3423b63" translate="yes" xml:space="preserve">
          <source>Represents a union type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9333b6da39d97202d96379b6f26de92a98942394" translate="yes" xml:space="preserve">
          <source>Represents a union type. As of the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version, union types can appear as the type of a multi-catch exception parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb2ac756cdea8b65905360c616e291afae2f8a9" translate="yes" xml:space="preserve">
          <source>Represents a value of an annotation type element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4abbcec3291a0d671e3bd3d4f257320340cdb9" translate="yes" xml:space="preserve">
          <source>Represents a value of an annotation type element. A value is of one of the following types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be40cf5ce1ef90fe2d6b8eda1f1e316dea63173a" translate="yes" xml:space="preserve">
          <source>Represents a wildcard type argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c6105897f8aac0cf6582ea7437b78d14a814da" translate="yes" xml:space="preserve">
          <source>Represents a wildcard type argument. Examples include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4210c13c5974f5470b2f71b7cff61aff25615716" translate="yes" xml:space="preserve">
          <source>Represents an MBean attribute by associating its name with its value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ef3b3103e558c78b02ba166dd33f137d3f00b4" translate="yes" xml:space="preserve">
          <source>Represents an MBean attribute by associating its name with its value. The MBean server and other objects use this class to get and set attributes values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb5b4e48eb61497baed13af65ba0493873a00c1" translate="yes" xml:space="preserve">
          <source>Represents an annotated element of the program currently running in this VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3007100548d49f83b1185ea7027e2dec3c1c7d8" translate="yes" xml:space="preserve">
          <source>Represents an annotated element of the program currently running in this VM. This interface allows annotations to be read reflectively. All annotations returned by methods in this interface are immutable and serializable. The arrays returned by methods of this interface may be modified by callers without affecting the arrays returned to other callers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a46a59df5de6b5805996ea54526799ab4a45fc" translate="yes" xml:space="preserve">
          <source>Represents an annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01dfb6f382e219d7f75fae6e3c734751351c08e0" translate="yes" xml:space="preserve">
          <source>Represents an annotation. An annotation associates a value with each element of an annotation type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d1bc0504199eb370a8e8e2a1e0b9b5b698210a" translate="yes" xml:space="preserve">
          <source>Represents an array type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8700f1fd0eda3d4fad7dc130c4511430c03be8b4" translate="yes" xml:space="preserve">
          <source>Represents an array type. A multidimensional array type is represented as an array type whose component type is also an array type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3f2d4eab9b7f200a408c85732997d48411f0fd" translate="yes" xml:space="preserve">
          <source>Represents an intersection type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0b760474e8ee487a04b6165614b781382b8530" translate="yes" xml:space="preserve">
          <source>Represents an operation on a single &lt;code&gt;double&lt;/code&gt;-valued operand that produces a &lt;code&gt;double&lt;/code&gt;-valued result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acac5628012c9edb7ba94230b277270798d63e9e" translate="yes" xml:space="preserve">
          <source>Represents an operation on a single &lt;code&gt;double&lt;/code&gt;-valued operand that produces a &lt;code&gt;double&lt;/code&gt;-valued result. This is the primitive type specialization of &lt;a href=&quot;unaryoperator&quot;&gt;&lt;code&gt;UnaryOperator&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b00b2423ec54ae35cafb170808998f0c80f572" translate="yes" xml:space="preserve">
          <source>Represents an operation on a single &lt;code&gt;int&lt;/code&gt;-valued operand that produces an &lt;code&gt;int&lt;/code&gt;-valued result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="120864982b6e6d74190b6b917e81edb9353ab7d3" translate="yes" xml:space="preserve">
          <source>Represents an operation on a single &lt;code&gt;int&lt;/code&gt;-valued operand that produces an &lt;code&gt;int&lt;/code&gt;-valued result. This is the primitive type specialization of &lt;a href=&quot;unaryoperator&quot;&gt;&lt;code&gt;UnaryOperator&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3d7f4e65ae7f4d19d823f5f33c6cb5470c41e6" translate="yes" xml:space="preserve">
          <source>Represents an operation on a single &lt;code&gt;long&lt;/code&gt;-valued operand that produces a &lt;code&gt;long&lt;/code&gt;-valued result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03be2f80df604cb9bade3e5c8a99b844ea4228bb" translate="yes" xml:space="preserve">
          <source>Represents an operation on a single &lt;code&gt;long&lt;/code&gt;-valued operand that produces a &lt;code&gt;long&lt;/code&gt;-valued result. This is the primitive type specialization of &lt;a href=&quot;unaryoperator&quot;&gt;&lt;code&gt;UnaryOperator&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76db0ab2d9ca3e7880cfb1e36281e8cc57519967" translate="yes" xml:space="preserve">
          <source>Represents an operation on a single operand that produces a result of the same type as its operand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b411da897e108f04506db20afb688c637934f3e6" translate="yes" xml:space="preserve">
          <source>Represents an operation on a single operand that produces a result of the same type as its operand. This is a specialization of &lt;code&gt;Function&lt;/code&gt; for the case where the operand and result are of the same type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df8f53d5a33f03355d1e7c162ac0bcc18e8dcaf" translate="yes" xml:space="preserve">
          <source>Represents an operation that accepts a single &lt;code&gt;double&lt;/code&gt;-valued argument and returns no result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8694b8f51a806d5cd8ab45fca2dab3c51d6d0df" translate="yes" xml:space="preserve">
          <source>Represents an operation that accepts a single &lt;code&gt;double&lt;/code&gt;-valued argument and returns no result. This is the primitive type specialization of &lt;a href=&quot;consumer&quot;&gt;&lt;code&gt;Consumer&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;double&lt;/code&gt;. Unlike most other functional interfaces, &lt;code&gt;DoubleConsumer&lt;/code&gt; is expected to operate via side-effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b172a7a49f25e4efdad7fcb5aa07f122469923b" translate="yes" xml:space="preserve">
          <source>Represents an operation that accepts a single &lt;code&gt;int&lt;/code&gt;-valued argument and returns no result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="287b381d9a91279b074923d0d836642bb864d90d" translate="yes" xml:space="preserve">
          <source>Represents an operation that accepts a single &lt;code&gt;int&lt;/code&gt;-valued argument and returns no result. This is the primitive type specialization of &lt;a href=&quot;consumer&quot;&gt;&lt;code&gt;Consumer&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;int&lt;/code&gt;. Unlike most other functional interfaces, &lt;code&gt;IntConsumer&lt;/code&gt; is expected to operate via side-effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e06fb1a56f38c4c9170485e580492d668965d7" translate="yes" xml:space="preserve">
          <source>Represents an operation that accepts a single &lt;code&gt;long&lt;/code&gt;-valued argument and returns no result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764c553961b833d0bef8730e72a3c0042e1fee58" translate="yes" xml:space="preserve">
          <source>Represents an operation that accepts a single &lt;code&gt;long&lt;/code&gt;-valued argument and returns no result. This is the primitive type specialization of &lt;a href=&quot;consumer&quot;&gt;&lt;code&gt;Consumer&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;long&lt;/code&gt;. Unlike most other functional interfaces, &lt;code&gt;LongConsumer&lt;/code&gt; is expected to operate via side-effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37dfc4d58ba4a671dc1eab44fcf1bb0dd3550117" translate="yes" xml:space="preserve">
          <source>Represents an operation that accepts a single input argument and returns no result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a5cba9819b624380acee0dc7fb8a53a9ebbacd" translate="yes" xml:space="preserve">
          <source>Represents an operation that accepts a single input argument and returns no result. Unlike most other functional interfaces, &lt;code&gt;Consumer&lt;/code&gt; is expected to operate via side-effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903a2e3697ea9de37557793801557998f944f7e1" translate="yes" xml:space="preserve">
          <source>Represents an operation that accepts an object-valued and a &lt;code&gt;double&lt;/code&gt;-valued argument, and returns no result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24941a1df30be3989d848cbe2cd0c6d331b3e1b0" translate="yes" xml:space="preserve">
          <source>Represents an operation that accepts an object-valued and a &lt;code&gt;double&lt;/code&gt;-valued argument, and returns no result. This is the &lt;code&gt;(reference, double)&lt;/code&gt; specialization of &lt;a href=&quot;biconsumer&quot;&gt;&lt;code&gt;BiConsumer&lt;/code&gt;&lt;/a&gt;. Unlike most other functional interfaces, &lt;code&gt;ObjDoubleConsumer&lt;/code&gt; is expected to operate via side-effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce3d1da3daf324a7b716c3ad5e723c8b7ca9c89" translate="yes" xml:space="preserve">
          <source>Represents an operation that accepts an object-valued and a &lt;code&gt;int&lt;/code&gt;-valued argument, and returns no result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edf41cd9f3713ace6b56cea1cc7d74ef7195405" translate="yes" xml:space="preserve">
          <source>Represents an operation that accepts an object-valued and a &lt;code&gt;int&lt;/code&gt;-valued argument, and returns no result. This is the &lt;code&gt;(reference, int)&lt;/code&gt; specialization of &lt;a href=&quot;biconsumer&quot;&gt;&lt;code&gt;BiConsumer&lt;/code&gt;&lt;/a&gt;. Unlike most other functional interfaces, &lt;code&gt;ObjIntConsumer&lt;/code&gt; is expected to operate via side-effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4eb4e030fba5b027c64a3efb7ca0e880d1f2a8c" translate="yes" xml:space="preserve">
          <source>Represents an operation that accepts an object-valued and a &lt;code&gt;long&lt;/code&gt;-valued argument, and returns no result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e55a8ed0270a7353e2062f8ee32901a7c1fab31" translate="yes" xml:space="preserve">
          <source>Represents an operation that accepts an object-valued and a &lt;code&gt;long&lt;/code&gt;-valued argument, and returns no result. This is the &lt;code&gt;(reference, long)&lt;/code&gt; specialization of &lt;a href=&quot;biconsumer&quot;&gt;&lt;code&gt;BiConsumer&lt;/code&gt;&lt;/a&gt;. Unlike most other functional interfaces, &lt;code&gt;ObjLongConsumer&lt;/code&gt; is expected to operate via side-effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41cf9bbf337be99eb39d4f7e3769ae480d93d2c0" translate="yes" xml:space="preserve">
          <source>Represents an operation that accepts two input arguments and returns no result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="495f370ee70df004fd1bcf997960e01aa1087bfe" translate="yes" xml:space="preserve">
          <source>Represents an operation that accepts two input arguments and returns no result. This is the two-arity specialization of &lt;a href=&quot;consumer&quot;&gt;&lt;code&gt;Consumer&lt;/code&gt;&lt;/a&gt;. Unlike most other functional interfaces, &lt;code&gt;BiConsumer&lt;/code&gt; is expected to operate via side-effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd7a43b23d43cb96ee0e3e13a580d3187b80c6f" translate="yes" xml:space="preserve">
          <source>Represents an operation upon two &lt;code&gt;double&lt;/code&gt;-valued operands and producing a &lt;code&gt;double&lt;/code&gt;-valued result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf268c38050f1f8166d2ba28b8f8edc60d728e88" translate="yes" xml:space="preserve">
          <source>Represents an operation upon two &lt;code&gt;double&lt;/code&gt;-valued operands and producing a &lt;code&gt;double&lt;/code&gt;-valued result. This is the primitive type specialization of &lt;a href=&quot;binaryoperator&quot;&gt;&lt;code&gt;BinaryOperator&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fca69b3794f471814471b019e4f0f78519dc19a" translate="yes" xml:space="preserve">
          <source>Represents an operation upon two &lt;code&gt;int&lt;/code&gt;-valued operands and producing an &lt;code&gt;int&lt;/code&gt;-valued result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b49663a0c7eabccf77546d731ff1aeb4fa39f7" translate="yes" xml:space="preserve">
          <source>Represents an operation upon two &lt;code&gt;int&lt;/code&gt;-valued operands and producing an &lt;code&gt;int&lt;/code&gt;-valued result. This is the primitive type specialization of &lt;a href=&quot;binaryoperator&quot;&gt;&lt;code&gt;BinaryOperator&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918ff4e9f1ba64a031cec4863f4a626767ef8e55" translate="yes" xml:space="preserve">
          <source>Represents an operation upon two &lt;code&gt;long&lt;/code&gt;-valued operands and producing a &lt;code&gt;long&lt;/code&gt;-valued result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3febc956e5e392f06bdbe69fe3dfbc673c0fa588" translate="yes" xml:space="preserve">
          <source>Represents an operation upon two &lt;code&gt;long&lt;/code&gt;-valued operands and producing a &lt;code&gt;long&lt;/code&gt;-valued result. This is the primitive type specialization of &lt;a href=&quot;binaryoperator&quot;&gt;&lt;code&gt;BinaryOperator&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf25ac00ea2f12d06ebde5416e8fc2051f3ac56c" translate="yes" xml:space="preserve">
          <source>Represents an operation upon two operands of the same type, producing a result of the same type as the operands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f279d5de5799f38c17f6b8b3973e74bf5c8bd847" translate="yes" xml:space="preserve">
          <source>Represents an operation upon two operands of the same type, producing a result of the same type as the operands. This is a specialization of &lt;a href=&quot;bifunction&quot;&gt;&lt;code&gt;BiFunction&lt;/code&gt;&lt;/a&gt; for the case where the operands and the result are all of the same type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471c4ea2e37a86e8a3e804c0562334afcef5d538" translate="yes" xml:space="preserve">
          <source>Represents an unresolved role: a role not retrieved from a relation due to a problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb22a19ad000013a6e856a9dc2b25a7a3db6598" translate="yes" xml:space="preserve">
          <source>Represents an unresolved role: a role not retrieved from a relation due to a problem. It provides the role name, value (if problem when trying to set the role) and an integer defining the problem (constants defined in RoleStatus).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ffb2beec6cb44ae2bb10e14fc69eda58791aa5b" translate="yes" xml:space="preserve">
          <source>Represents attributes used as arguments to relational constraints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038db85140a00bde13766c9ffe379bcf3e16e8a9" translate="yes" xml:space="preserve">
          <source>Represents attributes used as arguments to relational constraints. Instances of this class are usually obtained using &lt;a href=&quot;query#attr-java.lang.String-&quot;&gt;&lt;code&gt;Query.attr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d27a74f2623159f789d28270e5f8b6d009f10a" translate="yes" xml:space="preserve">
          <source>Represents channels for storing resources in the ResponseCache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be1ee01f42bd44326b1ac892724532b747a3d15" translate="yes" xml:space="preserve">
          <source>Represents channels for storing resources in the ResponseCache. Instances of such a class provide an OutputStream object which is called by protocol handlers to store the resource data into the cache, and also an abort() method which allows a cache store operation to be interrupted and abandoned. If an IOException is encountered while reading the response or writing to the cache, the current cache store operation will be aborted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b471c4b1735f69fed6d7587ffd70f2239c9499c0" translate="yes" xml:space="preserve">
          <source>Represents exceptions raised when a requested service is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ed3b56fb80f42bf79817d007c85c06eae0fe62" translate="yes" xml:space="preserve">
          <source>Represents exceptions thrown in the MBean server when performing operations on MBeans.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc06f48d114b3dfda3cc8a13d8db4706aa8642f" translate="yes" xml:space="preserve">
          <source>Represents exceptions thrown in the MBean server when using the java.lang.reflect classes to invoke methods on MBeans.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36bd416f0d00921a46d5dc43018d563cd349608" translate="yes" xml:space="preserve">
          <source>Represents exceptions thrown in the MBean server when using the java.lang.reflect classes to invoke methods on MBeans. It &quot;wraps&quot; the actual java.lang.Exception thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e88a3d5c690af643d339cd2590fca6935a16b35" translate="yes" xml:space="preserve">
          <source>Represents implementations of URLConnection caches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5b2ca259a8a7162239899e1956eb3dcbe4ab8e" translate="yes" xml:space="preserve">
          <source>Represents implementations of URLConnection caches. An instance of such a class can be registered with the system by doing ResponseCache.setDefault(ResponseCache), and the system will call this object in order to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c6a9812b3daf900085d5021068211515261b7e" translate="yes" xml:space="preserve">
          <source>Represents permission to access a resource or set of resources defined by a given url, and for a given set of user-settable request methods and request headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90de0dd4f0c0415bea24bfe39df1cb07b843354f" translate="yes" xml:space="preserve">
          <source>Represents permission to access a resource or set of resources defined by a given url, and for a given set of user-settable request methods and request headers. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2432955691d603672de2ca63bd56429d1b5fc892" translate="yes" xml:space="preserve">
          <source>Represents proxy for high level protocols such as HTTP or FTP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83bc04a807cc98d67c4be4a2a0fea57e900e9d77" translate="yes" xml:space="preserve">
          <source>Represents relational constraints similar to database query &quot;where clauses&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa498b50d6978749fa81563ffb4b02a0a8d474a" translate="yes" xml:space="preserve">
          <source>Represents relational constraints similar to database query &quot;where clauses&quot;. Instances of QueryExp are returned by the static methods of the &lt;a href=&quot;query&quot;&gt;&lt;code&gt;Query&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0798d8dd97eaa602d026c7a32b409d83c40eae" translate="yes" xml:space="preserve">
          <source>Represents runtime exceptions thrown by MBean methods in the agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73ab85f95725f24778e4dfa63cb9336b43ce642" translate="yes" xml:space="preserve">
          <source>Represents runtime exceptions thrown by MBean methods in the agent. It &quot;wraps&quot; the actual &lt;code&gt;java.lang.RuntimeException&lt;/code&gt; exception thrown. This exception will be built by the MBeanServer when a call to an MBean method throws a runtime exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5267ec68f84a591fc971775c8ec4ca414bbbc174" translate="yes" xml:space="preserve">
          <source>Represents runtime exceptions thrown in the agent when performing operations on MBeans.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d07f73cb476378a2d5e2840bfe0668f6f61e3e8" translate="yes" xml:space="preserve">
          <source>Represents runtime exceptions thrown in the agent when performing operations on MBeans. It wraps the actual &lt;code&gt;java.lang.RuntimeException&lt;/code&gt; thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219d7b3e83e2f97465b8ce92d462b227492777a5" translate="yes" xml:space="preserve">
          <source>Represents strings that are arguments to relational constraints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94cc9891d51caa2750f657af63e70e187f5fce7d" translate="yes" xml:space="preserve">
          <source>Represents strings that are arguments to relational constraints. A &lt;code&gt;StringValueExp&lt;/code&gt; may be used anywhere a &lt;code&gt;ValueExp&lt;/code&gt; is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8e7f6da72bb9a6fe451226af257c32ef3732d5" translate="yes" xml:space="preserve">
          <source>Represents the MBean server from the management point of view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383060f82178b6bf5c9d896297a5b0b717a842e7" translate="yes" xml:space="preserve">
          <source>Represents the MBean server from the management point of view. The MBeanServerDelegate MBean emits the MBeanServerNotifications when an MBean is registered/unregistered in the MBean server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011f6226d8b03dc848a111840c9240198ea26c5b" translate="yes" xml:space="preserve">
          <source>Represents the invocation of a single method on an object. Includes a set of arguments to the method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad06046eeea0b0a2fcc612bb03a40686a3c73959" translate="yes" xml:space="preserve">
          <source>Represents the null type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872f4872194e9803446d39b57890f7615e8d1678" translate="yes" xml:space="preserve">
          <source>Represents the null type. This is the type of the expression &lt;code&gt;null&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0bd0172a1f7412dde9a7fc1bacc7e131e044a1" translate="yes" xml:space="preserve">
          <source>Represents the object name of an MBean, or a pattern that can match the names of several MBeans.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca100efb053b415194adcf9cd24176519e2ad20" translate="yes" xml:space="preserve">
          <source>Represents the object name of an MBean, or a pattern that can match the names of several MBeans. Instances of this class are immutable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e9e8c831b687c5918527b3aba800c977905cdd" translate="yes" xml:space="preserve">
          <source>Represents the permission required to get access to the java.util.prefs.Preferences implementations user or system root which in turn allows retrieval or update operations within the Preferences persistent backing store.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ba8cccee299cd9f951d0f5173aa43a409563ac" translate="yes" xml:space="preserve">
          <source>Represents the proxy type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9cfd0339c7a5a344b3295ed23070e92c2aaa43" translate="yes" xml:space="preserve">
          <source>Represents the result of a multiple access to several roles of a relation (either for reading or writing).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d451eb04daa5c4002eadecc169b419f04cbc73b" translate="yes" xml:space="preserve">
          <source>Represents the type of an executable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361729bb32921473ee8d7ffe3f8e601d4f5d8140" translate="yes" xml:space="preserve">
          <source>Represents the type of an executable. An</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407192c963a7331b18e9e40963c089c842c034b4" translate="yes" xml:space="preserve">
          <source>Represents the value of a file's time stamp attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9dc583c9725e679cb4e4bc28f283480a922ae0" translate="yes" xml:space="preserve">
          <source>Represents the value of a file's time stamp attribute. For example, it may represent the time that the file was last &lt;a href=&quot;basicfileattributes#lastModifiedTime--&quot;&gt;&lt;code&gt;modified&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;basicfileattributes#lastAccessTime--&quot;&gt;&lt;code&gt;accessed&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;basicfileattributes#creationTime--&quot;&gt;&lt;code&gt;created&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392d6eb41b8ee951276d408852930f2e56a035ac" translate="yes" xml:space="preserve">
          <source>Represents unknown length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e260a096f5f3e10b09a2275f36f80b0f2c6d0e45" translate="yes" xml:space="preserve">
          <source>Represents values that can be passed as arguments to relational expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91df1c33cfa54c42bb2395d28fbaa81ac5650791" translate="yes" xml:space="preserve">
          <source>Represents values that can be passed as arguments to relational expressions. Strings, numbers, attributes are valid values and should be represented by implementations of &lt;code&gt;ValueExp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aed03cac49d5e43da4e855a967286931a4d621a" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="translated">Request</target>
        </trans-unit>
        <trans-unit id="0b9d0742a9dad64a418134db63ac6e6c843f4b23" translate="yes" xml:space="preserve">
          <source>Request Controls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df87c171c2f80395d1f0dc5465f2a13559e50994" translate="yes" xml:space="preserve">
          <source>Request controls that affect context methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140544e42e988a8d04f274f3a06a21669c918e00" translate="yes" xml:space="preserve">
          <source>Request controls that affect how a connection is created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8379a0e8893ef77e8967f9f35f17203327230a" translate="yes" xml:space="preserve">
          <source>Requested &lt;code&gt;Locale&lt;/code&gt;: &lt;a href=&quot;locale#ITALY&quot;&gt;&lt;code&gt;Locale.ITALY&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce83fd50dfa172e53ac146bb45ff376e9bde49cb" translate="yes" xml:space="preserve">
          <source>RequestingUserName</source>
          <target state="translated">RequestingUserName</target>
        </trans-unit>
        <trans-unit id="3e79b5a23c1dac4d5181efda42e0b1e81b4a6ccf" translate="yes" xml:space="preserve">
          <source>RequestingUserName.equals()</source>
          <target state="translated">RequestingUserName.equals()</target>
        </trans-unit>
        <trans-unit id="a44c7666ec248f103c5c117292f82d6489f34d58" translate="yes" xml:space="preserve">
          <source>RequestingUserName.getCategory()</source>
          <target state="translated">RequestingUserName.getCategory()</target>
        </trans-unit>
        <trans-unit id="1535bd625372552b4f1aa94f3373f312a99aa341" translate="yes" xml:space="preserve">
          <source>RequestingUserName.getName()</source>
          <target state="translated">RequestingUserName.getName()</target>
        </trans-unit>
        <trans-unit id="686295d13ba22b2de2565b7accfdc2b99a53c790" translate="yes" xml:space="preserve">
          <source>Requests that any current read operation be aborted. The contents of the image following the abort will be undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2543cb7da27b830ca61590862c3708874627b1c" translate="yes" xml:space="preserve">
          <source>Requests that any current write operation be aborted. The contents of the output following the abort will be undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe7ba7741afdc5bade6bac68ea2b4a0d3976164d" translate="yes" xml:space="preserve">
          <source>Requests that referral and other special LDAP objects be manipulated as normal LDAP objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ace6b5a964abe90a0210c8936a36224ef28d9f9" translate="yes" xml:space="preserve">
          <source>Requests that referral and other special LDAP objects be manipulated as normal LDAP objects. It enables the requestor to interrogate or update such objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6fb6b653bd219707d615d723bfffbadf621720" translate="yes" xml:space="preserve">
          <source>Requests that the file or directory denoted by this abstract pathname be deleted when the virtual machine terminates. Files (or directories) are deleted in the reverse order that they are registered. Invoking this method to delete a file or directory that is already registered for deletion has no effect. Deletion will be attempted only for normal termination of the virtual machine, as defined by the Java Language Specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af85151a9479305e02d66b95464c55c721f76e90" translate="yes" xml:space="preserve">
          <source>Requests that the registration of this key's channel with its selector be cancelled. Upon return the key will be invalid and will have been added to its selector's cancelled-key set. The key will be removed from all of the selector's key sets during the next selection operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58c9de19b2299a7250c1fc6f8d8a04273974200" translate="yes" xml:space="preserve">
          <source>Requests that the results of a search operation be returned by the LDAP server in batches of a specified size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca53b81b52225dab1c9d69956682ca30587bebe6" translate="yes" xml:space="preserve">
          <source>Requests that the results of a search operation be returned by the LDAP server in batches of a specified size. The requestor controls the rate at which batches are returned by the rate at which it invokes search operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7123286e27ec56a161375cb1a2bd2a1d37864f2" translate="yes" xml:space="preserve">
          <source>Requests that the results of a search operation be sorted by the LDAP server before being returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4419358f7315ef46f79cf1102de5f1e2f62f932a" translate="yes" xml:space="preserve">
          <source>Requests that the results of a search operation be sorted by the LDAP server before being returned. The sort criteria are specified using an ordered list of one or more sort keys, with associated sort parameters. Search results are sorted at the LDAP server according to the parameters supplied in the sort control and then returned to the requestor. If sorting is not supported at the server (and the sort control is marked as critical) then the search operation is not performed and an error is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed6bfb41051ed5b74447340f3c2e29d11e99a7c" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="translated">Required</target>
        </trans-unit>
        <trans-unit id="a48507e9a4d33df66a53969317db58ccaeb495bd" translate="yes" xml:space="preserve">
          <source>Required &lt;code&gt;LoginModule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52737e9474174687e101be0272acc26bbab2b2cf" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean</source>
          <target state="translated">RequiredModelMBean</target>
        </trans-unit>
        <trans-unit id="dda6d18284f07d27cd62e59629638484c1613bff" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean may always send also two additional notifications:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7a9448932f2a5c041264ba82934424d2e64689" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.addAttributeChangeNotificationListener()</source>
          <target state="translated">RequiredModelMBean.addAttributeChangeNotificationListener()</target>
        </trans-unit>
        <trans-unit id="ef5f34947f0a55cdec3183fff6e40d505be79913" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.addNotificationListener()</source>
          <target state="translated">RequiredModelMBean.addNotificationListener()</target>
        </trans-unit>
        <trans-unit id="8897030ab589855ecad8245ead4e1190ab5d49c8" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.getAttribute()</source>
          <target state="translated">RequiredModelMBean.getAttribute()</target>
        </trans-unit>
        <trans-unit id="bc8827d3434b1b717220bb0db20cbcaba16992f8" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.getAttributes()</source>
          <target state="translated">RequiredModelMBean.getAttributes()</target>
        </trans-unit>
        <trans-unit id="34077d59bc33154c31da7e331401fcc4177e33a0" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.getClassLoaderRepository()</source>
          <target state="translated">RequiredModelMBean.getClassLoaderRepository()</target>
        </trans-unit>
        <trans-unit id="214b7723143069e9f897b32fc0199079e0787488" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.getMBeanInfo()</source>
          <target state="translated">RequiredModelMBean.getMBeanInfo()</target>
        </trans-unit>
        <trans-unit id="26b33106f8eae4ddc9a3a63b43ecc2279df7d65c" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.getNotificationInfo()</source>
          <target state="translated">RequiredModelMBean.getNotificationInfo()</target>
        </trans-unit>
        <trans-unit id="aea7dd23f07415d8c61fb8590b1819b80bd75149" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.invoke()</source>
          <target state="translated">RequiredModelMBean.invoke()</target>
        </trans-unit>
        <trans-unit id="1bd38ec533db1e2755496bc62a74d6d6decf222c" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.load()</source>
          <target state="translated">RequiredModelMBean.load()</target>
        </trans-unit>
        <trans-unit id="c15cb61149b32c94373858df9ce1facaaa53f02a" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.postDeregister()</source>
          <target state="translated">RequiredModelMBean.postDeregister()</target>
        </trans-unit>
        <trans-unit id="509aa0ecb276eafb9402a6fcbb13c2bcc02e27cf" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.postRegister()</source>
          <target state="translated">RequiredModelMBean.postRegister()</target>
        </trans-unit>
        <trans-unit id="f88133caffa725fd5568cc9300112b9b2b3638cc" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.preDeregister()</source>
          <target state="translated">RequiredModelMBean.preDeregister()</target>
        </trans-unit>
        <trans-unit id="56f15ffd3c7d0ab5e9ca5590434b59ae458325fa" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.preRegister()</source>
          <target state="translated">RequiredModelMBean.preRegister()</target>
        </trans-unit>
        <trans-unit id="aeafea1f9b46ccc44c476f67c19e09b935798722" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.removeAttributeChangeNotificationListener()</source>
          <target state="translated">RequiredModelMBean.removeAttributeChangeNotificationListener()</target>
        </trans-unit>
        <trans-unit id="b54aeb03b0c9b8a97aa4a447df2bac74e36f356e" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.removeNotificationListener()</source>
          <target state="translated">RequiredModelMBean.removeNotificationListener()</target>
        </trans-unit>
        <trans-unit id="4307a7174958c79585f977408de1ad020b85a9a8" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.sendAttributeChangeNotification()</source>
          <target state="translated">RequiredModelMBean.sendAttributeChangeNotification()</target>
        </trans-unit>
        <trans-unit id="fa3350b01bacc78a3e1796075bfc545ae5796c06" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.sendNotification()</source>
          <target state="translated">RequiredModelMBean.sendNotification()</target>
        </trans-unit>
        <trans-unit id="c8c2fca0539d792aa36daf741d5967fdae8c10d7" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.setAttribute()</source>
          <target state="translated">RequiredModelMBean.setAttribute()</target>
        </trans-unit>
        <trans-unit id="c7e30626b49adaaa5cc4285e7042bb3ee2c9d8b8" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.setAttributes()</source>
          <target state="translated">RequiredModelMBean.setAttributes()</target>
        </trans-unit>
        <trans-unit id="b36540c8f9b77a78bfe960e26799575cd286fe61" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.setManagedResource()</source>
          <target state="translated">RequiredModelMBean.setManagedResource()</target>
        </trans-unit>
        <trans-unit id="b808d949b25edcf659332781236d9f0bbdae4f08" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.setModelMBeanInfo()</source>
          <target state="translated">RequiredModelMBean.setModelMBeanInfo()</target>
        </trans-unit>
        <trans-unit id="1f47c98ac5ed13db833ff96b4c9ce80d434eb087" translate="yes" xml:space="preserve">
          <source>RequiredModelMBean.store()</source>
          <target state="translated">RequiredModelMBean.store()</target>
        </trans-unit>
        <trans-unit id="18f068a7945694a28ef0201c85ba53158e01a2f7" translate="yes" xml:space="preserve">
          <source>Requires null completion value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff3bfd68df14e28a49c746eaeae034780b5401f" translate="yes" xml:space="preserve">
          <source>Requires that every update to the file's content be written synchronously to the underlying storage device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c73c1a869603696ce9da6f63c5bc1d1b5a9f87b" translate="yes" xml:space="preserve">
          <source>Requires that every update to the file's content be written synchronously to the underlying storage device. (see &lt;a href=&quot;../file/package-summary#integrity&quot;&gt; Synchronized I/O file integrity&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7e4bb82cd493d6df4c9bb985031e2f3632f58b" translate="yes" xml:space="preserve">
          <source>Requires that every update to the file's content be written synchronously to the underlying storage device. (see &lt;a href=&quot;package-summary#integrity&quot;&gt; Synchronized I/O file integrity&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52eacaf7fc6b953f9f9a029b2bf11cecfe9ab91b" translate="yes" xml:space="preserve">
          <source>Requires that every update to the file's content or metadata be written synchronously to the underlying storage device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095d1d9686a583d886a62aae164fec0c6b43be30" translate="yes" xml:space="preserve">
          <source>Requires that every update to the file's content or metadata be written synchronously to the underlying storage device. (see &lt;a href=&quot;../file/package-summary#integrity&quot;&gt; Synchronized I/O file integrity&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22238260be1f28268174e0cfc8bdf15079f23fb6" translate="yes" xml:space="preserve">
          <source>Requires that every update to the file's content or metadata be written synchronously to the underlying storage device. (see &lt;a href=&quot;package-summary#integrity&quot;&gt; Synchronized I/O file integrity&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250563301ee2361ea9e1fc1eea8c9b6e1bc80f08" translate="yes" xml:space="preserve">
          <source>Requires the output to be formatted as a decimal integer. The &lt;a href=&quot;#L10nAlgorithm&quot;&gt;localization algorithm&lt;/a&gt; is applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e015cf0bd12279c893a3ac53756ad94ab6a527" translate="yes" xml:space="preserve">
          <source>Requires the output to be formatted as an integer in base eight. No localization is applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9348701298311502d4c91df2153e9147d81ccec4" translate="yes" xml:space="preserve">
          <source>Requires the output to be formatted as an integer in base sixteen. No localization is applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f6e69a0598546a8628d360fe6aaa290f992650" translate="yes" xml:space="preserve">
          <source>Requires the output to be formatted in general scientific notation as described below. The &lt;a href=&quot;#L10nAlgorithm&quot;&gt;localization algorithm&lt;/a&gt; is applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1521d8838e791a318c454912d2513c6cafc95315" translate="yes" xml:space="preserve">
          <source>Requires the output to be formatted in hexadecimal exponential form. No localization is applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ed72e663d7f363eecababb1eb5c5b2aafcdfdc" translate="yes" xml:space="preserve">
          <source>Requires the output to be formatted using &lt;a name=&quot;bdecimal&quot;&gt;decimal format&lt;/a&gt;. The &lt;a href=&quot;#L10nAlgorithm&quot;&gt;localization algorithm&lt;/a&gt; is applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82bdf28147b143b0859203dda19321b683d80a6b" translate="yes" xml:space="preserve">
          <source>Requires the output to be formatted using &lt;a name=&quot;bscientific&quot;&gt;computerized scientific notation&lt;/a&gt;. The &lt;a href=&quot;#L10nAlgorithm&quot;&gt;localization algorithm&lt;/a&gt; is applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98afddf00f24d682c3c84197af31ca8c5cc18971" translate="yes" xml:space="preserve">
          <source>Requires the output to be formatted using &lt;a name=&quot;decimal&quot;&gt;decimal format&lt;/a&gt;. The &lt;a href=&quot;#L10nAlgorithm&quot;&gt;localization algorithm&lt;/a&gt; is applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74849538912454314cad289acf87d899f72f2336" translate="yes" xml:space="preserve">
          <source>Requires the output to be formatted using &lt;a name=&quot;scientific&quot;&gt;computerized scientific notation&lt;/a&gt;. The &lt;a href=&quot;#L10nAlgorithm&quot;&gt;localization algorithm&lt;/a&gt; is applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842977d2dac4665dfc66c1f0aa6efd1dd02b0a0e" translate="yes" xml:space="preserve">
          <source>Requires the output to be padded with leading &lt;a href=&quot;../text/decimalformatsymbols#getZeroDigit--&quot;&gt;zeros&lt;/a&gt; to the minimum field width following any sign or radix indicator except when converting NaN or infinity. If the width is not provided, then a &lt;a href=&quot;missingformatwidthexception&quot;&gt;&lt;code&gt;MissingFormatWidthException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6adfa65cf51eda9cc4d18a9df6960e7737ee9f" translate="yes" xml:space="preserve">
          <source>Requires the output to include a positive sign for all positive numbers. If this flag is not given then only negative values will include a sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a01c6604aedf861e4711b7d5655138a8394ce8" translate="yes" xml:space="preserve">
          <source>Requires the output to include a single extra space (&lt;code&gt;'\u0020'&lt;/code&gt;) for non-negative values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42e9c136b625136f53892f7ceb41b994a0c68d9" translate="yes" xml:space="preserve">
          <source>Requires the output to include the locale-specific &lt;a href=&quot;../text/decimalformatsymbols#getGroupingSeparator--&quot;&gt;group separators&lt;/a&gt; as described in the &lt;a href=&quot;#L10nGroup&quot;&gt;&quot;group&quot; section&lt;/a&gt; of the localization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c009a348995ccab456655bd9e5d3185341c7e845" translate="yes" xml:space="preserve">
          <source>Requires the output to prepend a &lt;code&gt;'('&lt;/code&gt; (&lt;code&gt;'\u0028'&lt;/code&gt;) and append a &lt;code&gt;')'&lt;/code&gt; (&lt;code&gt;'\u0029'&lt;/code&gt;) to negative values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c86c73ca0508cbf0553be9b175c0cc2f22e3a67" translate="yes" xml:space="preserve">
          <source>Requires the output to use an alternate form. The definition of the form is specified by the &lt;code&gt;Formattable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b68f303b375240ff4b214528a01b38d42794d5" translate="yes" xml:space="preserve">
          <source>Requires the output use an alternate form. The definition of the form is specified by the conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1b463ea2fed0b8cf39c1d92eb1e8fff09797c2" translate="yes" xml:space="preserve">
          <source>Requiring &lt;code&gt;CertPath&lt;/code&gt; objects to be immutable and thread-safe allows them to be passed around to various pieces of code without worrying about coordinating access. Providing this thread-safety is generally not difficult, since the &lt;code&gt;CertPath&lt;/code&gt; and &lt;code&gt;List&lt;/code&gt; objects in question are immutable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9490f7fbbf3f83164ea38527a40710f8c00ee3c7" translate="yes" xml:space="preserve">
          <source>Requisite</source>
          <target state="translated">Requisite</target>
        </trans-unit>
        <trans-unit id="b12dc66bbcc699501cdd9b1929ab843f7ee98564" translate="yes" xml:space="preserve">
          <source>Requisite &lt;code&gt;LoginModule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7201d4044b3c333bc6c2ffed8dae1c022f8ec78b" translate="yes" xml:space="preserve">
          <source>Reseeds this random object, using the eight bytes contained in the given &lt;code&gt;long seed&lt;/code&gt;. The given seed supplements, rather than replaces, the existing seed. Thus, repeated calls are guaranteed never to reduce randomness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5717853002b4b72223cb7d5cdfaf625db0826a9e" translate="yes" xml:space="preserve">
          <source>Reseeds this random object. The given seed supplements, rather than replaces, the existing seed. Thus, repeated calls are guaranteed never to reduce randomness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae79d8a90881b6dbce2bd378e617c813765b223e" translate="yes" xml:space="preserve">
          <source>Reserved key for a named value that identifies the short name of the scripting language. The name is used by the &lt;code&gt;ScriptEngineManager&lt;/code&gt; to locate a &lt;code&gt;ScriptEngine&lt;/code&gt; with a given name in the &lt;code&gt;getEngineByName&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65fcc1a2f82b9d11f7a8fcb385ecec0bb2bf75b" translate="yes" xml:space="preserve">
          <source>Reserved key for a named value that identifies the version of the &lt;code&gt;ScriptEngine&lt;/code&gt; implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe2a03902364666b84a4cdd5969a11ee80a292e" translate="yes" xml:space="preserve">
          <source>Reserved key for a named value that is the full name of Scripting Language supported by the implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22822a68e7c4f6a7e1685718bf09d391816d13c2" translate="yes" xml:space="preserve">
          <source>Reserved key for a named value that is the name of the &lt;code&gt;ScriptEngine&lt;/code&gt; implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839c7bff5ffc3859260b189f6ec2d289a1ee8758" translate="yes" xml:space="preserve">
          <source>Reserved key for a named value that is the name of the file being executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e15cded1fbaeae30f9a97f78cde552e9efc0de" translate="yes" xml:space="preserve">
          <source>Reserved key for a named value that passes an array of positional arguments to a script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0575ee13e5cc4a2d03cc4b05b5569602fce32da1" translate="yes" xml:space="preserve">
          <source>Reserved key for the named value that identifies the version of the scripting language supported by the implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126de12c1de03865c476f6de66caf61dc986a75e" translate="yes" xml:space="preserve">
          <source>Reset stream context. All handles written into stream are reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34401788472e387d3b9590c68dfe92a331500312" translate="yes" xml:space="preserve">
          <source>Reset the decoder via the &lt;a href=&quot;charsetdecoder#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; method, unless it has not been used before;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dad718cded9687e32297e0cc2bc638729202549" translate="yes" xml:space="preserve">
          <source>Reset the encoder via the &lt;a href=&quot;charsetencoder#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; method, unless it has not been used before;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1f458958e7903ef934e87c15f8ca0a2b9450a5" translate="yes" xml:space="preserve">
          <source>Reset the logging configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12106792897db818361b2ac01fdff5ec0a20f928" translate="yes" xml:space="preserve">
          <source>Reset the stream to the most recent mark.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f598e6cf2f33a51f5ead633bec0b4031948093" translate="yes" xml:space="preserve">
          <source>Reset this iterator to point to a new string. This package-visible method is used by other java.text classes that want to avoid allocating new StringCharacterIterator objects every time their setText method is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edee498ad43990edc7346ee6cf92a0d81c791998" translate="yes" xml:space="preserve">
          <source>Reset will disregard the state of any objects already written to the stream. The state is reset to be the same as a new ObjectOutputStream. The current point in the stream is marked as reset so the corresponding ObjectInputStream will be reset at the same point. Objects previously written to the stream will not be referred to as already being in the stream. They will be written to the stream again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f872898be42632c104056ea832c62e38a79c3e" translate="yes" xml:space="preserve">
          <source>Resets CRC-32 to initial value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3fb5276f082848bbe8c97c3cac9a2639b036593" translate="yes" xml:space="preserve">
          <source>Resets all the data stored in this object to default values, usually to the state this object was in immediately after construction, though the precise semantics are plug-in specific. Note that there are many possible default values, depending on how the object was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294022db2b8080eba10b71689ce3c6e4e57a0ad8" translate="yes" xml:space="preserve">
          <source>Resets all the implemented controllers to their default values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6a6f64b58c93b909005a42adc58ea22718ab0c" translate="yes" xml:space="preserve">
          <source>Resets deflater so that a new set of input data can be processed. Keeps current compression level and strategy settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421a8574367db97e47b5d9f993145add3b93bb04" translate="yes" xml:space="preserve">
          <source>Resets inflater so that a new set of input data can be processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6d74ebcf2be1b56c3ded98081b05651fc2bba7" translate="yes" xml:space="preserve">
          <source>Resets the &lt;code&gt;Builder&lt;/code&gt; to match the provided &lt;code&gt;locale&lt;/code&gt;. Existing state is discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314ce4594b681d5ec0ab4841e8bfc2c8233d325b" translate="yes" xml:space="preserve">
          <source>Resets the &lt;code&gt;count&lt;/code&gt; field of this byte array output stream to zero, so that all currently accumulated output in the output stream is discarded. The output stream can be used again, reusing the already allocated buffer space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87bdbcc6e42645379b512e9e9dd6c6735c1dc292" translate="yes" xml:space="preserve">
          <source>Resets the Builder to match the provided IETF BCP 47 language tag. Discards the existing state. Null and the empty string cause the builder to be reset, like &lt;a href=&quot;locale.builder#clear--&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt;. Grandfathered tags (see &lt;a href=&quot;locale#forLanguageTag-java.lang.String-&quot;&gt;&lt;code&gt;Locale.forLanguageTag(java.lang.String)&lt;/code&gt;&lt;/a&gt;) are converted to their canonical form before being processed. Otherwise, the language tag must be well-formed (see &lt;a href=&quot;locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt;) or an exception is thrown (unlike &lt;code&gt;Locale.forLanguageTag&lt;/code&gt;, which just discards ill-formed and following portions of the tag).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19bb685aacc24179aacbc2f9b1c1a6c0d6e96d7b" translate="yes" xml:space="preserve">
          <source>Resets the MAC for further use, maintaining the secret key that the MAC was initialized with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38efc78c60b97114b1dec7453e7128963af53213" translate="yes" xml:space="preserve">
          <source>Resets the barrier to its initial state. If any parties are currently waiting at the barrier, they will return with a &lt;a href=&quot;brokenbarrierexception&quot;&gt;&lt;code&gt;BrokenBarrierException&lt;/code&gt;&lt;/a&gt;. Note that resets &lt;em&gt;after&lt;/em&gt; a breakage has occurred for other reasons can be complicated to carry out; threads need to re-synchronize in some other way, and choose one to perform the reset. It may be preferable to instead create a new barrier for subsequent use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55b0ceb5acd87525149f50699ad73e0ca80858f" translate="yes" xml:space="preserve">
          <source>Resets the buffer so that you can use it again without throwing away the already allocated buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a836435e87cc62df1321256e4041233dc942d29" translate="yes" xml:space="preserve">
          <source>Resets the buffer to the marked position. The marked position is 0 unless another position was marked or an offset was specified in the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af737c56b5a3c075d3ae593df7350cd2ea3da01" translate="yes" xml:space="preserve">
          <source>Resets the builder to its initial, empty state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0fffa8cd83c2a9c0bde6c9b548b74f185b563c1" translate="yes" xml:space="preserve">
          <source>Resets the checksum to initial value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5d5ebee4c7ed9c103870b8772079c3c8ced26a" translate="yes" xml:space="preserve">
          <source>Resets the checksum to its initial value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c5faed907bc6aecd24fbb8a6ca470447309f41" translate="yes" xml:space="preserve">
          <source>Resets the current stream byte and bit positions from the stack of marked positions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb59c401c6804ca0501a0d7b72ec10e6afd0d05" translate="yes" xml:space="preserve">
          <source>Resets the cursor to the beginning of the string. The next call to next() will return the first collation element in the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81362c3706522f475fd2355e877635b9bc993002" translate="yes" xml:space="preserve">
          <source>Resets the digest for further use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7567d9733090f66183d8fb0da4d7998dbab1d8" translate="yes" xml:space="preserve">
          <source>Resets the extensions to their initial, empty state. Language, script, region and variant are unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cdadff06c5dc62ec3381b6014d7f590b4004b01" translate="yes" xml:space="preserve">
          <source>Resets the input stream to begin reading from the first character of this input stream's underlying buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6402265dc6937fbe763ae5b5e8c9befdd5be9d78" translate="yes" xml:space="preserve">
          <source>Resets the internal bookkeeping state of this task, allowing a subsequent &lt;code&gt;fork&lt;/code&gt;. This method allows repeated reuse of this task, but only if reuse occurs when this task has either never been forked, or has been forked, then completed and all outstanding joins of this task have also completed. Effects under any other usage conditions are not guaranteed. This method may be useful when executing pre-constructed trees of subtasks in loops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86a1c693ebd4fb73599acd4cbf1f2e58c4cc65a" translate="yes" xml:space="preserve">
          <source>Resets the peak memory usage statistic of this memory pool to the current memory usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80b133b55707885a93fa6be82794ec63b481080" translate="yes" xml:space="preserve">
          <source>Resets the peak thread count to the current number of live threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9001fd550f2c93abf32b636fd147a45061dbb9fd" translate="yes" xml:space="preserve">
          <source>Resets the stream to the most recent mark, or to the beginning if it has never been marked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167966bdc2b1425b61b64f051a86b56f2c180d32" translate="yes" xml:space="preserve">
          <source>Resets the stream to the most recent mark, or to the beginning of the string if it has never been marked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa6279a950f792f8ddc33928b418b5b52e15a50" translate="yes" xml:space="preserve">
          <source>Resets the stream to the most recent mark.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f30e476a1315301121da9e42f258018ac34ce4" translate="yes" xml:space="preserve">
          <source>Resets the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d75f8a351d884f92f2fbf80df10dcd507aa6677" translate="yes" xml:space="preserve">
          <source>Resets the stream. If the stream has been marked, then attempt to reposition it at the mark. If the stream has not been marked, then attempt to reset it in some way appropriate to the particular stream, for example by repositioning it to its starting point. Not all character-input streams support the reset() operation, and some support reset() without supporting mark().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a9cde846d86b6afa88d3a7057cd556653a4158" translate="yes" xml:space="preserve">
          <source>Resets the stream. The &lt;code&gt;reset&lt;/code&gt; method of &lt;code&gt;PushbackReader&lt;/code&gt; always throws an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca8ce58928a518c539a845decd9a1b5ac4ea4ec" translate="yes" xml:space="preserve">
          <source>Resets this &lt;code&gt;Mac&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0837bf471be030fdb0d112bac97f00532420fda1" translate="yes" xml:space="preserve">
          <source>Resets this buffer's position to the previously-marked position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eac2fdcc698bd57ec61cd43de301ddf8c29634b" translate="yes" xml:space="preserve">
          <source>Resets this decoder, clearing any charset-specific internal state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037f6401b8694c60a8c069adeb3456bc39c51613" translate="yes" xml:space="preserve">
          <source>Resets this decoder, clearing any internal state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b934eace059209b5fcb38c2b3ba02ed0556458" translate="yes" xml:space="preserve">
          <source>Resets this encoder, clearing any charset-specific internal state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29f2d120cd08f6d1396229b1e691df9931016a0" translate="yes" xml:space="preserve">
          <source>Resets this encoder, clearing any internal state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e9e3a21fa93b0331415a7b3f6e1b55fd3bdc9d" translate="yes" xml:space="preserve">
          <source>Resets this matcher and then attempts to find the next subsequence of the input sequence that matches the pattern, starting at the specified index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fcc028a37a34754b1981935c30c2f80910f6f67" translate="yes" xml:space="preserve">
          <source>Resets this matcher with a new input sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8d5642b667a8321bee8de1f5fb604d5636fdc2" translate="yes" xml:space="preserve">
          <source>Resets this matcher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444eca1149f2fc1f389f130d276cf6397e4d0156" translate="yes" xml:space="preserve">
          <source>Resets this scanner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5252c90ee59e7a031f0a4ae2ee5cdcf236c103ac" translate="yes" xml:space="preserve">
          <source>Resets this tokenizer's syntax table so that all characters are &quot;ordinary.&quot; See the &lt;code&gt;ordinaryChar&lt;/code&gt; method for more information on a character being ordinary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b60ca0b7d43dc02539e101c87834834fc58a8ec" translate="yes" xml:space="preserve">
          <source>Resets this watch key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a624433e47a230b5618ba4dc299f36107963f79" translate="yes" xml:space="preserve">
          <source>Resets variables maintaining the sum to zero. This method may be a useful alternative to creating a new adder, but is only effective if there are no concurrent updates. Because this method is intrinsically racy, it should only be used when it is known that no threads are concurrently updating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391ddfc405153134348165d282ecbf43db61f68d" translate="yes" xml:space="preserve">
          <source>Resets variables maintaining updates to the identity value. This method may be a useful alternative to creating a new updater, but is only effective if there are no concurrent updates. Because this method is intrinsically racy, it should only be used when it is known that no threads are concurrently updating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05c6991f2f943d2521dffc1caa75317130a7b7c" translate="yes" xml:space="preserve">
          <source>Resetting a matcher discards all of its explicit state information and sets its append position to zero. The matcher's region is set to the default region, which is its entire character sequence. The anchoring and transparency of this matcher's region boundaries are unaffected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07cd82a5890e2c9f2253a762be2010c6310ac1ba" translate="yes" xml:space="preserve">
          <source>Resetting a scanner discards all of its explicit state information which may have been changed by invocations of &lt;a href=&quot;scanner#useDelimiter-java.util.regex.Pattern-&quot;&gt;&lt;code&gt;useDelimiter(java.util.regex.Pattern)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;scanner#useLocale-java.util.Locale-&quot;&gt;&lt;code&gt;useLocale(java.util.Locale)&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;scanner#useRadix-int-&quot;&gt;&lt;code&gt;useRadix(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac8e577ef66b30cd55d8d80b17e268e61b359ce" translate="yes" xml:space="preserve">
          <source>Resizable-array implementation of the &lt;a href=&quot;deque&quot;&gt;&lt;code&gt;Deque&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eab1a32a09f64097fb85dc02b1fea9c3e25da67" translate="yes" xml:space="preserve">
          <source>Resizable-array implementation of the &lt;a href=&quot;deque&quot;&gt;&lt;code&gt;Deque&lt;/code&gt;&lt;/a&gt; interface. Array deques have no capacity restrictions; they grow as necessary to support usage. They are not thread-safe; in the absence of external synchronization, they do not support concurrent access by multiple threads. Null elements are prohibited. This class is likely to be faster than &lt;a href=&quot;stack&quot;&gt;&lt;code&gt;Stack&lt;/code&gt;&lt;/a&gt; when used as a stack, and faster than &lt;a href=&quot;linkedlist&quot;&gt;&lt;code&gt;LinkedList&lt;/code&gt;&lt;/a&gt; when used as a queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98907afd5abcddc024e9e8c6733a12e2ad27b72" translate="yes" xml:space="preserve">
          <source>Resizable-array implementation of the &lt;code&gt;List&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9699f5e8c6edb52d05a3c5ce68cdc34fae94d7" translate="yes" xml:space="preserve">
          <source>Resizable-array implementation of the &lt;code&gt;List&lt;/code&gt; interface. Implements all optional list operations, and permits all elements, including &lt;code&gt;null&lt;/code&gt;. In addition to implementing the &lt;code&gt;List&lt;/code&gt; interface, this class provides methods to manipulate the size of the array that is used internally to store the list. (This class is roughly equivalent to &lt;code&gt;Vector&lt;/code&gt;, except that it is unsynchronized.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516aae52959dcf5398a9985414a78b8c24a4f0e5" translate="yes" xml:space="preserve">
          <source>Resolution</source>
          <target state="translated">Resolution</target>
        </trans-unit>
        <trans-unit id="116c1b91a6fd85bd9f90c6ea46b958d9b633f5b8" translate="yes" xml:space="preserve">
          <source>Resolution of both absolute and relative URIs, and of both absolute and relative paths in the case of hierarchical URIs, is supported. Resolving the URI &lt;code&gt;file:///~calendar&lt;/code&gt; against any other URI simply yields the original URI, since it is absolute. Resolving the relative URI (2) above against the relative base URI (1) yields the normalized, but still relative, URI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac48d43a60d9c864b6cee49a74e3a09509363e38" translate="yes" xml:space="preserve">
          <source>ResolutionSyntax</source>
          <target state="translated">ResolutionSyntax</target>
        </trans-unit>
        <trans-unit id="f6ce53144097e5a4620be5294d27a3d1c60e60ff" translate="yes" xml:space="preserve">
          <source>ResolutionSyntax.equals()</source>
          <target state="translated">ResolutionSyntax.equals()</target>
        </trans-unit>
        <trans-unit id="76ccb24399cb7d401c7397621302c55759572567" translate="yes" xml:space="preserve">
          <source>ResolutionSyntax.getCrossFeedResolution()</source>
          <target state="translated">ResolutionSyntax.getCrossFeedResolution()</target>
        </trans-unit>
        <trans-unit id="e14036d19549a804406c844dd3610f1634936497" translate="yes" xml:space="preserve">
          <source>ResolutionSyntax.getCrossFeedResolutionDphi()</source>
          <target state="translated">ResolutionSyntax.getCrossFeedResolutionDphi()</target>
        </trans-unit>
        <trans-unit id="e874aa82def4295cf15e7b1ebef3b21319fa30cb" translate="yes" xml:space="preserve">
          <source>ResolutionSyntax.getFeedResolution()</source>
          <target state="translated">ResolutionSyntax.getFeedResolution()</target>
        </trans-unit>
        <trans-unit id="27fa6defd6064c339bfbf8e0474654689716e045" translate="yes" xml:space="preserve">
          <source>ResolutionSyntax.getFeedResolutionDphi()</source>
          <target state="translated">ResolutionSyntax.getFeedResolutionDphi()</target>
        </trans-unit>
        <trans-unit id="c1b6b39add1a64bd273730e354d9f975924b8ff1" translate="yes" xml:space="preserve">
          <source>ResolutionSyntax.getResolution()</source>
          <target state="translated">ResolutionSyntax.getResolution()</target>
        </trans-unit>
        <trans-unit id="2d7379d3fe1ef5b0016079a50fd765441a9e5c97" translate="yes" xml:space="preserve">
          <source>ResolutionSyntax.hashCode()</source>
          <target state="translated">ResolutionSyntax.hashCode()</target>
        </trans-unit>
        <trans-unit id="d911f18a93bbb8e1beaab35309aa2454c55d8665" translate="yes" xml:space="preserve">
          <source>ResolutionSyntax.lessThanOrEquals()</source>
          <target state="translated">ResolutionSyntax.lessThanOrEquals()</target>
        </trans-unit>
        <trans-unit id="d65301f2d71b80c90d3caafe64dc71f314aab0e1" translate="yes" xml:space="preserve">
          <source>ResolutionSyntax.toString()</source>
          <target state="translated">ResolutionSyntax.toString()</target>
        </trans-unit>
        <trans-unit id="bf7163d076f082c82574b189ff9be2b1b4bf8bf8" translate="yes" xml:space="preserve">
          <source>Resolve the Certificate Object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54fb80382410f91381ac0eac891b753cfe01e41f" translate="yes" xml:space="preserve">
          <source>Resolve the Key object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61ecba414d14bdcc258eb7682a3b59b25caba39" translate="yes" xml:space="preserve">
          <source>Resolve the given path against this path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b747aac91c28e9d690cc9c8c6ae336c260d38b88" translate="yes" xml:space="preserve">
          <source>ResolveResult</source>
          <target state="translated">ResolveResult</target>
        </trans-unit>
        <trans-unit id="5f0f46157e004fc83cc34f01fd4f36e08f73b210" translate="yes" xml:space="preserve">
          <source>ResolveResult.appendRemainingComponent()</source>
          <target state="translated">ResolveResult.appendRemainingComponent()</target>
        </trans-unit>
        <trans-unit id="118e47cb77032318994a95e9974adb5841f2d1ee" translate="yes" xml:space="preserve">
          <source>ResolveResult.appendRemainingName()</source>
          <target state="translated">ResolveResult.appendRemainingName()</target>
        </trans-unit>
        <trans-unit id="90b23378dfc826814660800bf29f69484f889289" translate="yes" xml:space="preserve">
          <source>ResolveResult.getRemainingName()</source>
          <target state="translated">ResolveResult.getRemainingName()</target>
        </trans-unit>
        <trans-unit id="8ebc0c8df8310d5251315b67d236608939d04ffe" translate="yes" xml:space="preserve">
          <source>ResolveResult.getResolvedObj()</source>
          <target state="translated">ResolveResult.getResolvedObj()</target>
        </trans-unit>
        <trans-unit id="25f48f10575e5928f0306dd193f919824f9c209a" translate="yes" xml:space="preserve">
          <source>ResolveResult.setRemainingName()</source>
          <target state="translated">ResolveResult.setRemainingName()</target>
        </trans-unit>
        <trans-unit id="c55be2e5ff5322a473353b88b8d2e060d070805a" translate="yes" xml:space="preserve">
          <source>ResolveResult.setResolvedObj()</source>
          <target state="translated">ResolveResult.setResolvedObj()</target>
        </trans-unit>
        <trans-unit id="9f3e9f9eb06ba542607155b81adb535fe2ee7d9c" translate="yes" xml:space="preserve">
          <source>Resolved Name. Portion of name that has been resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a3672e121a334f6792061686bfda3a6eb0cc5a" translate="yes" xml:space="preserve">
          <source>Resolved Object. Object to which resolution of name proceeded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3628ac7243a378772817563f2b412ee4e6c5a440" translate="yes" xml:space="preserve">
          <source>Resolver</source>
          <target state="translated">Resolver</target>
        </trans-unit>
        <trans-unit id="fb240d8ecd063fc6f0aec37001987d9a5734477c" translate="yes" xml:space="preserve">
          <source>Resolver.resolveToClass()</source>
          <target state="translated">Resolver.resolveToClass()</target>
        </trans-unit>
        <trans-unit id="278a19581e7f95eb1dc4153befa088c520f35cd5" translate="yes" xml:space="preserve">
          <source>ResolverStyle</source>
          <target state="translated">ResolverStyle</target>
        </trans-unit>
        <trans-unit id="80b8a25f9733dedf4a4f9c2b2e3692751ce8b1fb" translate="yes" xml:space="preserve">
          <source>ResolverStyle.valueOf()</source>
          <target state="translated">ResolverStyle.valueOf()</target>
        </trans-unit>
        <trans-unit id="6109fa85a43d5213e50833befd893d6207d31428" translate="yes" xml:space="preserve">
          <source>ResolverStyle.values()</source>
          <target state="translated">ResolverStyle.values()</target>
        </trans-unit>
        <trans-unit id="36976ed7a3dd300a2d8bbd095ff0f1da0379da44" translate="yes" xml:space="preserve">
          <source>Resolves instances being deserialized to the predefined constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16eaed7fabd4ebcd54217aaf8f9dd30e58250f27" translate="yes" xml:space="preserve">
          <source>Resolves parsed &lt;code&gt;ChronoField&lt;/code&gt; values into a date during parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76580b9751f3334eb86e526902965057bfa11cda" translate="yes" xml:space="preserve">
          <source>Resolves the given URI against this URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78d306359b03f9412ca62edc19b6286ede2c77c" translate="yes" xml:space="preserve">
          <source>Resolves the given path against this path's &lt;a href=&quot;path#getParent--&quot;&gt;&lt;code&gt;parent&lt;/code&gt;&lt;/a&gt; path. This is useful where a file name needs to be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ccc573e05cd5cf8c40f55bff8553868e342ef7" translate="yes" xml:space="preserve">
          <source>Resolves this field to provide a simpler alternative or a date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0496ee3fee946976397fbaaafbfe520ed9cd2a64" translate="yes" xml:space="preserve">
          <source>Resolving</source>
          <target state="translated">Resolving</target>
        </trans-unit>
        <trans-unit id="d7c0cc457c0f75c623c915a03613b3c046eaef1c" translate="yes" xml:space="preserve">
          <source>Resolving a field will consist of looking at the value of this field, and potentially other fields, and either updating the map with a simpler value, such as a &lt;code&gt;ChronoField&lt;/code&gt;, or returning a complete &lt;code&gt;ChronoLocalDate&lt;/code&gt;. If a resolve is successful, the code must remove all the fields that were resolved from the map, including this field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447a2e085a8c4f5504e912977b82ce1d1fda1db6" translate="yes" xml:space="preserve">
          <source>Resolving separate fields to form a complete date and time is a complex process with behaviour distributed across a number of classes. It follows these steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44a6859239f8741d619c2343594c5198db57e71" translate="yes" xml:space="preserve">
          <source>Resolving the relative URI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021493f340d35ce0d744f7a3a9e53445394e86a6" translate="yes" xml:space="preserve">
          <source>Resource</source>
          <target state="translated">Resource</target>
        </trans-unit>
        <trans-unit id="27d393b52fc5d611df71e5717c3e4d69585875d0" translate="yes" xml:space="preserve">
          <source>Resource Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d17d3eedc4b48e20c74ecd282699cb01365539" translate="yes" xml:space="preserve">
          <source>Resource bundle instances created by the &lt;code&gt;getBundle&lt;/code&gt; factory methods are cached by default, and the factory methods return the same resource bundle instance multiple times if it has been cached. &lt;code&gt;getBundle&lt;/code&gt; clients may clear the cache, manage the lifetime of cached resource bundle instances using time-to-live values, or specify not to cache resource bundle instances. Refer to the descriptions of the &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt;&lt;code&gt;getBundle&lt;/code&gt; factory method&lt;/a&gt;, &lt;a href=&quot;resourcebundle#clearCache-java.lang.ClassLoader-&quot;&gt;&lt;code&gt;clearCache&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;resourcebundle.control#getTimeToLive-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;ResourceBundle.Control.getTimeToLive&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;resourcebundle.control#needsReload-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-java.util.ResourceBundle-long-&quot;&gt;&lt;code&gt;ResourceBundle.Control.needsReload&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c1db1de9ab2a368c680de5f0a27fc152b0e885" translate="yes" xml:space="preserve">
          <source>Resource bundles belong to families whose members share a common base name, but whose names also have additional components that identify their locales. For example, the base name of a family of resource bundles might be &quot;MyResources&quot;. The family should have a default resource bundle which simply has the same name as its family - &quot;MyResources&quot; - and will be used as the bundle of last resort if a specific locale is not supported. The family can then provide as many locale-specific members as needed, for example a German one named &quot;MyResources_de&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d913752055992be5e555e089b3844a2fc83c87" translate="yes" xml:space="preserve">
          <source>Resource bundles contain key/value pairs. The keys uniquely identify a locale-specific object in the bundle. Here's an example of a &lt;code&gt;ListResourceBundle&lt;/code&gt; that contains two key/value pairs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb6d5a9ed8fe1f7b3b00de19df1a302435fc31d" translate="yes" xml:space="preserve">
          <source>Resource bundles contain locale-specific objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af99710bbb3c10a82314d772cd5dfc70743ae76a" translate="yes" xml:space="preserve">
          <source>Resource bundles contain locale-specific objects. When your program needs a locale-specific resource, a &lt;code&gt;String&lt;/code&gt; for example, your program can load it from the resource bundle that is appropriate for the current user's locale. In this way, you can write program code that is largely independent of the user's locale isolating most, if not all, of the locale-specific information in resource bundles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db56d133ff26f7ef1cbed5583edaf642f5d54248" translate="yes" xml:space="preserve">
          <source>Resource.AuthenticationType</source>
          <target state="translated">Resource.AuthenticationType</target>
        </trans-unit>
        <trans-unit id="d653ed7249e62d61812efd6754b00a5b2a788b6b" translate="yes" xml:space="preserve">
          <source>Resource.AuthenticationType.valueOf()</source>
          <target state="translated">Resource.AuthenticationType.valueOf()</target>
        </trans-unit>
        <trans-unit id="b6eab6ac7bc9a845dcc79b8330ee80fdf7f8029d" translate="yes" xml:space="preserve">
          <source>Resource.AuthenticationType.values()</source>
          <target state="translated">Resource.AuthenticationType.values()</target>
        </trans-unit>
        <trans-unit id="924266d8b0bc05db37e62b22f9e6f9ea13985ae5" translate="yes" xml:space="preserve">
          <source>Resource.authenticationType</source>
          <target state="translated">Resource.authenticationType</target>
        </trans-unit>
        <trans-unit id="eda3cf11b989c9ed0061b73a7d50bb16033fe79d" translate="yes" xml:space="preserve">
          <source>Resource.description</source>
          <target state="translated">Resource.description</target>
        </trans-unit>
        <trans-unit id="13d3e6a7b1c6f6568a3046b326a25c9a6832d51f" translate="yes" xml:space="preserve">
          <source>Resource.lookup</source>
          <target state="translated">Resource.lookup</target>
        </trans-unit>
        <trans-unit id="4bb603250e3ec3728047088e24048113e88ab408" translate="yes" xml:space="preserve">
          <source>Resource.mappedName</source>
          <target state="translated">Resource.mappedName</target>
        </trans-unit>
        <trans-unit id="fc011c9329cbf66f136fad1d7178202f99420054" translate="yes" xml:space="preserve">
          <source>Resource.name</source>
          <target state="translated">Resource.name</target>
        </trans-unit>
        <trans-unit id="a61cf0058b40969ac7108dfa220b68750468bbec" translate="yes" xml:space="preserve">
          <source>Resource.shareable</source>
          <target state="translated">Resource.shareable</target>
        </trans-unit>
        <trans-unit id="e6626cf895f5676843e473912098da53ce0dc52d" translate="yes" xml:space="preserve">
          <source>Resource.type</source>
          <target state="translated">Resource.type</target>
        </trans-unit>
        <trans-unit id="10b01f212aa41ce46479a28b486d1c0c6a2b9922" translate="yes" xml:space="preserve">
          <source>ResourceBundle</source>
          <target state="translated">ResourceBundle</target>
        </trans-unit>
        <trans-unit id="a0decb16a087e15412137082459c4ecdf7c4ceb8" translate="yes" xml:space="preserve">
          <source>ResourceBundle.Control</source>
          <target state="translated">ResourceBundle.Control</target>
        </trans-unit>
        <trans-unit id="76fae5e97097b045358f05e57ae0721f13268e63" translate="yes" xml:space="preserve">
          <source>ResourceBundle.Control.getCandidateLocales()</source>
          <target state="translated">ResourceBundle.Control.getCandidateLocales()</target>
        </trans-unit>
        <trans-unit id="70f61f7a559e4e2a43865a2532c42b869b381ea1" translate="yes" xml:space="preserve">
          <source>ResourceBundle.Control.getControl()</source>
          <target state="translated">ResourceBundle.Control.getControl()</target>
        </trans-unit>
        <trans-unit id="4147b14b89d48b6c59f6a494a2cfc55753298850" translate="yes" xml:space="preserve">
          <source>ResourceBundle.Control.getFallbackLocale()</source>
          <target state="translated">ResourceBundle.Control.getFallbackLocale()</target>
        </trans-unit>
        <trans-unit id="d97a057b109cf4a5982d76176314a69f80fd39b7" translate="yes" xml:space="preserve">
          <source>ResourceBundle.Control.getFormats()</source>
          <target state="translated">ResourceBundle.Control.getFormats()</target>
        </trans-unit>
        <trans-unit id="35b4564fdf39412329c502824f0faa6ec85deda8" translate="yes" xml:space="preserve">
          <source>ResourceBundle.Control.getNoFallbackControl()</source>
          <target state="translated">ResourceBundle.Control.getNoFallbackControl()</target>
        </trans-unit>
        <trans-unit id="8210e951637b1d1573bf875110843f4a398f0e4f" translate="yes" xml:space="preserve">
          <source>ResourceBundle.Control.getTimeToLive()</source>
          <target state="translated">ResourceBundle.Control.getTimeToLive()</target>
        </trans-unit>
        <trans-unit id="3767b12fa07f82cb78987e11d24c480f3536eb4b" translate="yes" xml:space="preserve">
          <source>ResourceBundle.Control.needsReload()</source>
          <target state="translated">ResourceBundle.Control.needsReload()</target>
        </trans-unit>
        <trans-unit id="4ec122354b6541f5354432d2f10df852b3480c39" translate="yes" xml:space="preserve">
          <source>ResourceBundle.Control.newBundle()</source>
          <target state="translated">ResourceBundle.Control.newBundle()</target>
        </trans-unit>
        <trans-unit id="c09158566acc03e2351c97b5ddb52a3124eea7f0" translate="yes" xml:space="preserve">
          <source>ResourceBundle.Control.toBundleName()</source>
          <target state="translated">ResourceBundle.Control.toBundleName()</target>
        </trans-unit>
        <trans-unit id="3deb333ac1eff89c2148052957205260412a04c2" translate="yes" xml:space="preserve">
          <source>ResourceBundle.Control.toResourceName()</source>
          <target state="translated">ResourceBundle.Control.toResourceName()</target>
        </trans-unit>
        <trans-unit id="684157a96d57f87dd107c68a497b3cac02054a92" translate="yes" xml:space="preserve">
          <source>ResourceBundle.clearCache()</source>
          <target state="translated">ResourceBundle.clearCache()</target>
        </trans-unit>
        <trans-unit id="8baaa105d9467ede3b159222e2901c52b6ce38f2" translate="yes" xml:space="preserve">
          <source>ResourceBundle.containsKey()</source>
          <target state="translated">ResourceBundle.containsKey()</target>
        </trans-unit>
        <trans-unit id="cd57e7d79d6d77c969b5b300cad70ec4d5791160" translate="yes" xml:space="preserve">
          <source>ResourceBundle.getBaseBundleName()</source>
          <target state="translated">ResourceBundle.getBaseBundleName()</target>
        </trans-unit>
        <trans-unit id="5f4dfd5bd38624e62f73f61fb9a347c8770ec791" translate="yes" xml:space="preserve">
          <source>ResourceBundle.getBundle()</source>
          <target state="translated">ResourceBundle.getBundle()</target>
        </trans-unit>
        <trans-unit id="d97cbf982f736ada86e20a45a4087952adf7dc93" translate="yes" xml:space="preserve">
          <source>ResourceBundle.getKeys()</source>
          <target state="translated">ResourceBundle.getKeys()</target>
        </trans-unit>
        <trans-unit id="de72c73cd17766bcb6f22e53d65d627be4bb71d6" translate="yes" xml:space="preserve">
          <source>ResourceBundle.getLocale()</source>
          <target state="translated">ResourceBundle.getLocale()</target>
        </trans-unit>
        <trans-unit id="606e08c9e1dfa6826285fc656c4c9e8276f784b8" translate="yes" xml:space="preserve">
          <source>ResourceBundle.getObject()</source>
          <target state="translated">ResourceBundle.getObject()</target>
        </trans-unit>
        <trans-unit id="af8a9736c822c0578d87663d4223aa873d1e705e" translate="yes" xml:space="preserve">
          <source>ResourceBundle.getString()</source>
          <target state="translated">ResourceBundle.getString()</target>
        </trans-unit>
        <trans-unit id="caca9fa8710812ddd378af578f7f6d9a852c5af7" translate="yes" xml:space="preserve">
          <source>ResourceBundle.getStringArray()</source>
          <target state="translated">ResourceBundle.getStringArray()</target>
        </trans-unit>
        <trans-unit id="99d3b491715c2340cce91abdccfa5c0e847f66c6" translate="yes" xml:space="preserve">
          <source>ResourceBundle.handleGetObject()</source>
          <target state="translated">ResourceBundle.handleGetObject()</target>
        </trans-unit>
        <trans-unit id="eb6bb48604ecec2df71772ac261558abdc6a6623" translate="yes" xml:space="preserve">
          <source>ResourceBundle.handleKeySet()</source>
          <target state="translated">ResourceBundle.handleKeySet()</target>
        </trans-unit>
        <trans-unit id="d584e863557a2ba4676e1aaa590eb419b518e93c" translate="yes" xml:space="preserve">
          <source>ResourceBundle.keySet()</source>
          <target state="translated">ResourceBundle.keySet()</target>
        </trans-unit>
        <trans-unit id="5bbb070b3a5eef0936d7bb1a16299256e54f30ef" translate="yes" xml:space="preserve">
          <source>ResourceBundle.setParent()</source>
          <target state="translated">ResourceBundle.setParent()</target>
        </trans-unit>
        <trans-unit id="fd9744370e800fece646d58a975e275098e809ea" translate="yes" xml:space="preserve">
          <source>ResourceBundleControlProvider</source>
          <target state="translated">ResourceBundleControlProvider</target>
        </trans-unit>
        <trans-unit id="4a28366c0cf2f4a22150441a3838e77fe42fbf1a" translate="yes" xml:space="preserve">
          <source>ResourceBundleControlProvider.getControl()</source>
          <target state="translated">ResourceBundleControlProvider.getControl()</target>
        </trans-unit>
        <trans-unit id="87df60de337fb58864343e396696d74611e0d403" translate="yes" xml:space="preserve">
          <source>Resources</source>
          <target state="translated">Resources</target>
        </trans-unit>
        <trans-unit id="c12ee2e653537559de82180049b13ab2df56ecf6" translate="yes" xml:space="preserve">
          <source>Resources.value</source>
          <target state="translated">Resources.value</target>
        </trans-unit>
        <trans-unit id="5dcafc2f1a100376a5ab7942196c39d17355b30a" translate="yes" xml:space="preserve">
          <source>Response Controls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d94a1df23459864f73a65d25432fb43c58142d1" translate="yes" xml:space="preserve">
          <source>ResponseCache</source>
          <target state="translated">ResponseCache</target>
        </trans-unit>
        <trans-unit id="afdd50f06795ae83d8fc7db184747c68abbe6f6c" translate="yes" xml:space="preserve">
          <source>ResponseCache.get()</source>
          <target state="translated">ResponseCache.get()</target>
        </trans-unit>
        <trans-unit id="e8ad1145f3a1274b0aa727d2972f5c9e9156133a" translate="yes" xml:space="preserve">
          <source>ResponseCache.getDefault()</source>
          <target state="translated">ResponseCache.getDefault()</target>
        </trans-unit>
        <trans-unit id="e8aac22812c5397a6599629cc10210859fd71d3a" translate="yes" xml:space="preserve">
          <source>ResponseCache.put()</source>
          <target state="translated">ResponseCache.put()</target>
        </trans-unit>
        <trans-unit id="882df7588842e40fde98f084164197e6b7171b21" translate="yes" xml:space="preserve">
          <source>ResponseCache.setDefault()</source>
          <target state="translated">ResponseCache.setDefault()</target>
        </trans-unit>
        <trans-unit id="a4ed92c516f34f483efd6c93d8be64ce21147a63" translate="yes" xml:space="preserve">
          <source>Restart Markers in JPEG), and random access will likely be reasonably efficient on tiles. See &lt;a href=&quot;imagereader#isImageTiled-int-&quot;&gt;&lt;code&gt;isImageTiled&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c10586e67093e28e0ddaa6c078e72f050051d700" translate="yes" xml:space="preserve">
          <source>Restore this MLet's contents from the given &lt;a href=&quot;../../../java/io/objectinput&quot;&gt;&lt;code&gt;ObjectInput&lt;/code&gt;&lt;/a&gt;. Not all implementations support this method. Those that do not throw &lt;a href=&quot;../../../java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;. A subclass may override this method to support it or to change the format of the read data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87885f008a929b8adb61ff794c63e262e2a8d7cc" translate="yes" xml:space="preserve">
          <source>Restores the &lt;code&gt;ImageReader&lt;/code&gt; to its initial state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6960fe0586240a7a91236c83db5f882101e620eb" translate="yes" xml:space="preserve">
          <source>Restores the &lt;code&gt;ImageWriter&lt;/code&gt; to its initial state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c48cc09d0201ae4df0b4d5d563037f2eaf6e76a" translate="yes" xml:space="preserve">
          <source>Restrictions on Cracking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5faa59d4bc3756040b8ce9e673c09f929e6ee9ba" translate="yes" xml:space="preserve">
          <source>Result</source>
          <target state="translated">Result</target>
        </trans-unit>
        <trans-unit id="bd97aa6b682647c96730d4572d85eec5fe6d12e1" translate="yes" xml:space="preserve">
          <source>Result object indicating overflow, meaning that there is insufficient room in the output buffer.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
