<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="587e50baf61d774b4d47b89fa7e30cbac108c6e4" translate="yes" xml:space="preserve">
          <source>Calendar.hashCode()</source>
          <target state="translated">Calendar.hashCode()</target>
        </trans-unit>
        <trans-unit id="2d68a34c9eef3cc1cb57316fab81fbaae96c6b7e" translate="yes" xml:space="preserve">
          <source>Calendar.internalGet()</source>
          <target state="translated">Calendar.internalGet()</target>
        </trans-unit>
        <trans-unit id="35bc271cae55addcfa2fbab575eab06fc953bb75" translate="yes" xml:space="preserve">
          <source>Calendar.isLenient()</source>
          <target state="translated">Calendar.isLenient()</target>
        </trans-unit>
        <trans-unit id="5fe80bc93524223f6f3dacdf1eb1365d786cc2cf" translate="yes" xml:space="preserve">
          <source>Calendar.isSet()</source>
          <target state="translated">Calendar.isSet()</target>
        </trans-unit>
        <trans-unit id="6a48b3bb068ae9717c7340dbef4bbabb5408e965" translate="yes" xml:space="preserve">
          <source>Calendar.isWeekDateSupported()</source>
          <target state="translated">Calendar.isWeekDateSupported()</target>
        </trans-unit>
        <trans-unit id="9e2d857ea8730912e1c6aa66838465ea1df58aca" translate="yes" xml:space="preserve">
          <source>Calendar.roll()</source>
          <target state="translated">Calendar.roll()</target>
        </trans-unit>
        <trans-unit id="2e933ec6aaaddb9e927404670e83afa6e7f43e9e" translate="yes" xml:space="preserve">
          <source>Calendar.set()</source>
          <target state="translated">Calendar.set()</target>
        </trans-unit>
        <trans-unit id="c5e01ecbf6ac8bac81dba59be31388426f42e096" translate="yes" xml:space="preserve">
          <source>Calendar.setFirstDayOfWeek()</source>
          <target state="translated">Calendar.setFirstDayOfWeek()</target>
        </trans-unit>
        <trans-unit id="d79d08c289922c4100fbfc203104a403026d6d46" translate="yes" xml:space="preserve">
          <source>Calendar.setLenient()</source>
          <target state="translated">Calendar.setLenient()</target>
        </trans-unit>
        <trans-unit id="9ad218b7af49cc5fd403629e729c58ffe262b798" translate="yes" xml:space="preserve">
          <source>Calendar.setMinimalDaysInFirstWeek()</source>
          <target state="translated">Calendar.setMinimalDaysInFirstWeek()</target>
        </trans-unit>
        <trans-unit id="ed9127d0180f4d69b4eb2de833ec80005295365b" translate="yes" xml:space="preserve">
          <source>Calendar.setTime()</source>
          <target state="translated">Calendar.setTime()</target>
        </trans-unit>
        <trans-unit id="fd54da60317c7995b48d46f48e5a8822e0485aa4" translate="yes" xml:space="preserve">
          <source>Calendar.setTimeInMillis()</source>
          <target state="translated">Calendar.setTimeInMillis()</target>
        </trans-unit>
        <trans-unit id="b141d460f2a350b40244c90258fe18d075bb87bc" translate="yes" xml:space="preserve">
          <source>Calendar.setTimeZone()</source>
          <target state="translated">Calendar.setTimeZone()</target>
        </trans-unit>
        <trans-unit id="f9eb63cca39a34eafbfba0b9777b7bbb03c24788" translate="yes" xml:space="preserve">
          <source>Calendar.setWeekDate()</source>
          <target state="translated">Calendar.setWeekDate()</target>
        </trans-unit>
        <trans-unit id="e0a60d835822ed60df064d05a47dfb4aa4f10914" translate="yes" xml:space="preserve">
          <source>Calendar.toInstant()</source>
          <target state="translated">Calendar.toInstant()</target>
        </trans-unit>
        <trans-unit id="ea98d5423b417841e7b9c98a7ca49fdb79ee3174" translate="yes" xml:space="preserve">
          <source>Calendar.toString()</source>
          <target state="translated">Calendar.toString()</target>
        </trans-unit>
        <trans-unit id="3883c30bba9d5fec58f88eae7d87f94227b6c7bb" translate="yes" xml:space="preserve">
          <source>CalendarDataProvider</source>
          <target state="translated">CalendarDataProvider</target>
        </trans-unit>
        <trans-unit id="804d607e32e615ed2c1cc3cb60459f9ee932794f" translate="yes" xml:space="preserve">
          <source>CalendarDataProvider.getFirstDayOfWeek()</source>
          <target state="translated">CalendarDataProvider.getFirstDayOfWeek()</target>
        </trans-unit>
        <trans-unit id="4006a8a3a7d712a32b6f9a08529e4c79e53d9a84" translate="yes" xml:space="preserve">
          <source>CalendarDataProvider.getMinimalDaysInFirstWeek()</source>
          <target state="translated">CalendarDataProvider.getMinimalDaysInFirstWeek()</target>
        </trans-unit>
        <trans-unit id="ef0041bd7f7ad864d490fdde98ba14a6acabf26d" translate="yes" xml:space="preserve">
          <source>CalendarNameProvider</source>
          <target state="translated">CalendarNameProvider</target>
        </trans-unit>
        <trans-unit id="65175269d7794ea965897d4564c0ec254ac99ab2" translate="yes" xml:space="preserve">
          <source>CalendarNameProvider.getDisplayName()</source>
          <target state="translated">CalendarNameProvider.getDisplayName()</target>
        </trans-unit>
        <trans-unit id="465038a9a6d996b4b233cf2e1fe2132654a04dc5" translate="yes" xml:space="preserve">
          <source>CalendarNameProvider.getDisplayNames()</source>
          <target state="translated">CalendarNameProvider.getDisplayNames()</target>
        </trans-unit>
        <trans-unit id="7620c3dc530a9afe0caca356dd2c3b1cdcd36aed" translate="yes" xml:space="preserve">
          <source>CallSite</source>
          <target state="translated">CallSite</target>
        </trans-unit>
        <trans-unit id="796e9b1ebe7bf2ec33fdab54c94d83c9a947c684" translate="yes" xml:space="preserve">
          <source>CallSite.dynamicInvoker()</source>
          <target state="translated">CallSite.dynamicInvoker()</target>
        </trans-unit>
        <trans-unit id="42f8056c4ab779b23cbe98efd27b12e90f2fb119" translate="yes" xml:space="preserve">
          <source>CallSite.getTarget()</source>
          <target state="translated">CallSite.getTarget()</target>
        </trans-unit>
        <trans-unit id="e3068f30a75710e20976373b79718b58837c846d" translate="yes" xml:space="preserve">
          <source>CallSite.setTarget()</source>
          <target state="translated">CallSite.setTarget()</target>
        </trans-unit>
        <trans-unit id="30352b05254a4aa18aded8b78664524656f65eda" translate="yes" xml:space="preserve">
          <source>CallSite.type()</source>
          <target state="translated">CallSite.type()</target>
        </trans-unit>
        <trans-unit id="3b55289fd0c473d42c2d6be6391e6a9f53a24056" translate="yes" xml:space="preserve">
          <source>Callable</source>
          <target state="translated">Callable</target>
        </trans-unit>
        <trans-unit id="78e94d07272382fa0d2e5c89b63444c2bec38fc0" translate="yes" xml:space="preserve">
          <source>Callable.call()</source>
          <target state="translated">Callable.call()</target>
        </trans-unit>
        <trans-unit id="42fb639b7313463881ed7d9bae34cc709237f03b" translate="yes" xml:space="preserve">
          <source>Callback</source>
          <target state="translated">Callback</target>
        </trans-unit>
        <trans-unit id="9b624caa0a3919131f2310a696960a8cfbb6398e" translate="yes" xml:space="preserve">
          <source>Callback interface to allow validation of objects within a graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c05569aedf2690cfca4cc591469141a87fb8df" translate="yes" xml:space="preserve">
          <source>Callback interface to allow validation of objects within a graph. Allows an object to be called when a complete graph of objects has been deserialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47755b404a0980d472e030eea4d4a57d56b3449c" translate="yes" xml:space="preserve">
          <source>Callback used by the Relation Service when a MBean referenced in a role is unregistered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a602fadecc1727fba31fdcc5e64185d9f008af" translate="yes" xml:space="preserve">
          <source>CallbackHandler</source>
          <target state="translated">CallbackHandler</target>
        </trans-unit>
        <trans-unit id="dd72d36e035b24ba7cfd7f9ca45c6746b7882a88" translate="yes" xml:space="preserve">
          <source>CallbackHandler.handle()</source>
          <target state="translated">CallbackHandler.handle()</target>
        </trans-unit>
        <trans-unit id="88b2365e5ed372e2d87179e971a41ec28f54348c" translate="yes" xml:space="preserve">
          <source>CallbackHandlerProtection</source>
          <target state="translated">CallbackHandlerProtection</target>
        </trans-unit>
        <trans-unit id="e92e66d604bd117df01b1991b538df9bb8df6ca5" translate="yes" xml:space="preserve">
          <source>CallbackHandlers are implemented in an application-dependent fashion. For example, implementations for an application with a graphical user interface (GUI) may pop up windows to prompt for requested information or to display error messages. An implementation may also choose to obtain requested information from an alternate source without asking the end user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e71fdead4d40923506c884eda9c72203594702c" translate="yes" xml:space="preserve">
          <source>Called by &lt;a href=&quot;rmiserverimpl#close--&quot;&gt;&lt;code&gt;RMIServerImpl.close()&lt;/code&gt;&lt;/a&gt; to close the connector server by unexporting this object. After returning from this method, the connector server must not accept any new connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3bb92d5d7e480d3d68161cc32444a6bfba76d17" translate="yes" xml:space="preserve">
          <source>Called by &lt;a href=&quot;rmiserverimpl#close--&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; to close the connector server. After returning from this method, the connector server must not accept any new connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b68b06532d4c63673157e2d0d281bb2be03d9e" translate="yes" xml:space="preserve">
          <source>Called by a subclass when a client connection fails. Removes &lt;code&gt;connectionId&lt;/code&gt; from the list returned by &lt;a href=&quot;../jmxconnectorserver#getConnectionIds--&quot;&gt;&lt;code&gt;JMXConnectorServer.getConnectionIds()&lt;/code&gt;&lt;/a&gt;, then emits a &lt;a href=&quot;../jmxconnectionnotification&quot;&gt;&lt;code&gt;JMXConnectionNotification&lt;/code&gt;&lt;/a&gt; with type &lt;a href=&quot;../jmxconnectionnotification#FAILED&quot;&gt;&lt;code&gt;JMXConnectionNotification.FAILED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7bdb6bb3ab0a7edbb34358ff95acc40884d2e87" translate="yes" xml:space="preserve">
          <source>Called by a subclass when a client connection fails. Removes &lt;code&gt;connectionId&lt;/code&gt; from the list returned by &lt;a href=&quot;jmxconnectorserver#getConnectionIds--&quot;&gt;&lt;code&gt;getConnectionIds()&lt;/code&gt;&lt;/a&gt;, then emits a &lt;a href=&quot;jmxconnectionnotification&quot;&gt;&lt;code&gt;JMXConnectionNotification&lt;/code&gt;&lt;/a&gt; with type &lt;a href=&quot;jmxconnectionnotification#FAILED&quot;&gt;&lt;code&gt;JMXConnectionNotification.FAILED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405cb0e788e50e05acb3f6d582c18ec88d9bbd10" translate="yes" xml:space="preserve">
          <source>Called by a subclass when a client connection is closed normally. Removes &lt;code&gt;connectionId&lt;/code&gt; from the list returned by &lt;a href=&quot;../jmxconnectorserver#getConnectionIds--&quot;&gt;&lt;code&gt;JMXConnectorServer.getConnectionIds()&lt;/code&gt;&lt;/a&gt;, then emits a &lt;a href=&quot;../jmxconnectionnotification&quot;&gt;&lt;code&gt;JMXConnectionNotification&lt;/code&gt;&lt;/a&gt; with type &lt;a href=&quot;../jmxconnectionnotification#CLOSED&quot;&gt;&lt;code&gt;JMXConnectionNotification.CLOSED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22eccd378b952ff07ce60eea2ec76baf1d99ac9" translate="yes" xml:space="preserve">
          <source>Called by a subclass when a client connection is closed normally. Removes &lt;code&gt;connectionId&lt;/code&gt; from the list returned by &lt;a href=&quot;jmxconnectorserver#getConnectionIds--&quot;&gt;&lt;code&gt;getConnectionIds()&lt;/code&gt;&lt;/a&gt;, then emits a &lt;a href=&quot;jmxconnectionnotification&quot;&gt;&lt;code&gt;JMXConnectionNotification&lt;/code&gt;&lt;/a&gt; with type &lt;a href=&quot;jmxconnectionnotification#CLOSED&quot;&gt;&lt;code&gt;JMXConnectionNotification.CLOSED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22e34093da8857fb608d223c418a727edf60b02" translate="yes" xml:space="preserve">
          <source>Called by a subclass when a new client connection is opened. Adds &lt;code&gt;connectionId&lt;/code&gt; to the list returned by &lt;a href=&quot;../jmxconnectorserver#getConnectionIds--&quot;&gt;&lt;code&gt;JMXConnectorServer.getConnectionIds()&lt;/code&gt;&lt;/a&gt;, then emits a &lt;a href=&quot;../jmxconnectionnotification&quot;&gt;&lt;code&gt;JMXConnectionNotification&lt;/code&gt;&lt;/a&gt; with type &lt;a href=&quot;../jmxconnectionnotification#OPENED&quot;&gt;&lt;code&gt;JMXConnectionNotification.OPENED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac354f6d93cb3bb8409dc9aa38267f96803bf32c" translate="yes" xml:space="preserve">
          <source>Called by a subclass when a new client connection is opened. Adds &lt;code&gt;connectionId&lt;/code&gt; to the list returned by &lt;a href=&quot;jmxconnectorserver#getConnectionIds--&quot;&gt;&lt;code&gt;getConnectionIds()&lt;/code&gt;&lt;/a&gt;, then emits a &lt;a href=&quot;jmxconnectionnotification&quot;&gt;&lt;code&gt;JMXConnectionNotification&lt;/code&gt;&lt;/a&gt; with type &lt;a href=&quot;jmxconnectionnotification#OPENED&quot;&gt;&lt;code&gt;JMXConnectionNotification.OPENED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6daf4866e4492461c2f89542cf5c9e98c36eed76" translate="yes" xml:space="preserve">
          <source>Called by an MBean server when this connector server is registered in that MBean server. This connector server becomes attached to the MBean server and its &lt;a href=&quot;jmxconnectorserver#getMBeanServer--&quot;&gt;&lt;code&gt;getMBeanServer()&lt;/code&gt;&lt;/a&gt; method will return &lt;code&gt;mbs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111cdb723c08a70ae9f2fc5ff081a7d5db7f938b" translate="yes" xml:space="preserve">
          <source>Called by an MBean server when this connector server is unregistered from that MBean server. If this connector server was attached to that MBean server by being registered in it, and if the connector server is still active, then unregistering it will call the &lt;a href=&quot;jmxconnectorservermbean#stop--&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method. If the &lt;code&gt;stop&lt;/code&gt; method throws an exception, the unregistration attempt will fail. It is recommended to call the &lt;code&gt;stop&lt;/code&gt; method explicitly before unregistering the MBean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4fa1071b0778a2dc6178f6fea9c285c33cf3e9" translate="yes" xml:space="preserve">
          <source>Called by readObject with the newly deserialized child and BCSChild.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654b5c9561a2baa437cde7371a0c2fb6265f0409" translate="yes" xml:space="preserve">
          <source>Called by the Java Virtual Machine when a thread in this thread group stops because of an uncaught exception, and the thread does not have a specific &lt;a href=&quot;thread.uncaughtexceptionhandler&quot;&gt;&lt;code&gt;Thread.UncaughtExceptionHandler&lt;/code&gt;&lt;/a&gt; installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10345e32ead5f701dfadd1b94952ee8840bb23e0" translate="yes" xml:space="preserve">
          <source>Called by the RMI runtime sometime after the runtime determines that the reference list, the list of clients referencing the remote object, becomes empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059ecd9c8b7d1bb220efc7f3a5aeec9a90a5c075" translate="yes" xml:space="preserve">
          <source>Called by the garbage collector on an object when garbage collection determines that there are no more references to the object. A subclass overrides the &lt;code&gt;finalize&lt;/code&gt; method to dispose of system resources or to perform other cleanup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5a3a79f4820e31be9829fbdfec94a8a54bb2d6" translate="yes" xml:space="preserve">
          <source>Called from setBeanContext to validate (or otherwise) the pending change in the nesting BeanContext property value. Returning false will cause setBeanContext to throw PropertyVetoException.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862c0e882e07a0c8cc4a5b9e8aff8b86cfb72de0" translate="yes" xml:space="preserve">
          <source>Called to indicate that a connection could not be established to a proxy/socks server. An implementation of this method can temporarily remove the proxies or reorder the sequence of proxies returned by &lt;a href=&quot;proxyselector#select-java.net.URI-&quot;&gt;&lt;code&gt;select(URI)&lt;/code&gt;&lt;/a&gt;, using the address and the IOException caught when trying to connect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce670b52ba12e2f7fe0b6dc81e298706a871551" translate="yes" xml:space="preserve">
          <source>Called to notify a listener of an event in the print service. The service will call this method on an event notification thread. The client should not perform lengthy processing in this callback or subsequent event notifications may be blocked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe3e3882279baeaa130375d71d0a8d74b93fb10" translate="yes" xml:space="preserve">
          <source>Called to notify the client that an error has occurred that the user might be able to fix. One example of an error that can generate this event is when the printer runs out of paper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c7bd8619281169d235a0e8660ae57a506aa5629" translate="yes" xml:space="preserve">
          <source>Called to notify the client that data has been successfully transferred to the print service, and the client may free local resources allocated for that data. The client should not assume that the data has been completely printed after receiving this event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82152d63e357d0922c1276adb2fac5e2a9c8d10" translate="yes" xml:space="preserve">
          <source>Called to notify the client that data has been successfully transferred to the print service, and the client may free local resources allocated for that data. The client should not assume that the data has been completely printed after receiving this event. If this event is not received the client should wait for a terminal event (completed/canceled/failed) before freeing the resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3521e0e2cb1c185004f06628678c9425e0befa" translate="yes" xml:space="preserve">
          <source>Called to notify the client that no more events will be delivered. One cause of this event being generated is if the job has successfully completed, but the printing system is limited in capability and cannot verify this. This event is required to be delivered if none of the other terminal events (completed/failed/canceled) are delivered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82a732028dafbe0b6e83e27e74d60c09d71f16b" translate="yes" xml:space="preserve">
          <source>Called to notify the client that some possibly user rectifiable problem occurs (eg printer out of paper).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77296f006b634cadcbfb015121f353be831de547" translate="yes" xml:space="preserve">
          <source>Called to notify the client that the job completed successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85eebb6f444b526103aecf0edcab436b4266b539" translate="yes" xml:space="preserve">
          <source>Called to notify the client that the job failed to complete successfully and will have to be resubmitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0549f081baa950ce1b6a684d36db0aa39048d70d" translate="yes" xml:space="preserve">
          <source>Called to notify the client that the job was canceled by a user or a program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45cba39931e1776c32bb07834ec7e117851d2e1" translate="yes" xml:space="preserve">
          <source>Called to notify the client that the job was canceled by user or program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f7c616deae7052efbdb9f261b22cb7eeb89e25" translate="yes" xml:space="preserve">
          <source>Called when a child or list of children is added to a &lt;code&gt;BeanContext&lt;/code&gt; that this listener is registered with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e75f4298d8698bfd0117b25395c472f89c7cc6" translate="yes" xml:space="preserve">
          <source>Called when a child or list of children is removed from a &lt;code&gt;BeanContext&lt;/code&gt; that this listener is registered with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14d1bedb5dd849677bed08a9f3ef39f2f68edfa" translate="yes" xml:space="preserve">
          <source>Called when a naming exception is thrown while attempting to fire a &lt;code&gt;NamingEvent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d48c547ceabe20e3ca7c485b5ee27744a1cdc670" translate="yes" xml:space="preserve">
          <source>Called when an object has been added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf23d86942f19bb14c9dfc72a1bdef0dd3ff834" translate="yes" xml:space="preserve">
          <source>Called when an object has been changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be02ffacc3c90da2b7fc43a961c7b3df1ca62e4f" translate="yes" xml:space="preserve">
          <source>Called when an object has been removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9941df764415cdf654368ab17d08a0f4408340c" translate="yes" xml:space="preserve">
          <source>Called when an object has been renamed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b8058edb9216bf4eecf296d665e2f0654a0a3b" translate="yes" xml:space="preserve">
          <source>Called when an object implementing this interface is added to the given &lt;code&gt;category&lt;/code&gt; of the given &lt;code&gt;registry&lt;/code&gt;. The object may already be registered under another category or categories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c01e587db25f7cef46e4bcaab3f70a8265ff51" translate="yes" xml:space="preserve">
          <source>Called when an object implementing this interface is removed from the given &lt;code&gt;category&lt;/code&gt; of the given &lt;code&gt;registry&lt;/code&gt;. The object may still be registered under another category or categories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097f72e00d8fcf4e702c59d3c920485ad26b7af1" translate="yes" xml:space="preserve">
          <source>Called when an unsolicited notification has been received.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76aa52a8a3935fba235269f6de38dd1acfe7538" translate="yes" xml:space="preserve">
          <source>Called when password authorization is needed. Subclasses should override the default implementation, which returns null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e5b1132ca4544fc66e3ce324dc5e89f0b97299" translate="yes" xml:space="preserve">
          <source>Caller sensitive methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef6dc78c24c584c947462e94f5bbf0886086ad0" translate="yes" xml:space="preserve">
          <source>CallerRunsPolicy</source>
          <target state="translated">CallerRunsPolicy</target>
        </trans-unit>
        <trans-unit id="b7727e57fa1b44156afcf800c17ba2b8dbce8671" translate="yes" xml:space="preserve">
          <source>Callers may also invoke the &lt;code&gt;generateSeed&lt;/code&gt; method to generate a given number of seed bytes (to seed other random number generators, for example):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc5131d93fa4308d58de5072b1caa6e4b94b417" translate="yes" xml:space="preserve">
          <source>Callers may use the &lt;code&gt;Number&lt;/code&gt; methods &lt;code&gt;doubleValue&lt;/code&gt;, &lt;code&gt;longValue&lt;/code&gt;, etc., to obtain the type they want.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc01568d9064985d864c47b9d2067a280f1c0aa" translate="yes" xml:space="preserve">
          <source>Callers of this interface shall examine the return type in order to obtain a particular subinterface of BeanContextChild as follows: &lt;code&gt;
 BeanContextChild bcc = o.getBeanContextProxy();

 if (bcc instanceof BeanContext) {
      // ...
 }
 &lt;/code&gt; or &lt;code&gt;
 BeanContextChild bcc = o.getBeanContextProxy();
 BeanContext      bc  = null;

 try {
     bc = (BeanContext)bcc;
 } catch (ClassCastException cce) {
     // cast failed, bcc is not an instanceof BeanContext
 }
 &lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04fa161c03d8f873d4cc4ba3cd8966c4906b51a4" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;asVarargsCollector&lt;/code&gt; on a method handle which is already of variable arity will produce a method handle with the same type and behavior. It may (or may not) return the original variable arity method handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ee09b39e330ae93e549e7a8fbb5c5b2665afd3" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;flushBefore&lt;/code&gt; may allow classes implementing this interface to free up resources such as memory or disk space that are being used to store data from the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a46d581f2ffaa994bed890288d7eab65aaf3763" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;getBundle&lt;/code&gt; with the locale arguments below will instantiate resource bundles as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c36dd581b998f97b0f71640221e6d5b62d1fec4" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;japaneseDate.get(ERA)&lt;/code&gt; will return 2, corresponding to &lt;code&gt;JapaneseChronology.ERA_HEISEI&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058b48dd46a63c401b343f61d2bfbf459fd48556" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;japaneseDate.get(YEAR)&lt;/code&gt; will return 2012.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a507905b42dc3d2813ecbf5ad114ab748d810619" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;japaneseDate.get(YEAR_OF_ERA)&lt;/code&gt; will return 24.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd3d362cd61b522b90f2978876c5c39e671d289" translate="yes" xml:space="preserve">
          <source>Calling the &lt;code&gt;gc&lt;/code&gt; method suggests that the Java Virtual Machine expend effort toward recycling unused objects in order to make the memory they currently occupy available for quick reuse. When control returns from the method call, the Java Virtual Machine has made a best effort to reclaim space from all discarded objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b760c60d971f57b8c1e7ecdfb80c460f606d442" translate="yes" xml:space="preserve">
          <source>Calling the instance method of a &lt;code&gt;null&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757222a1154af528696afe588f7d634480fce4ba" translate="yes" xml:space="preserve">
          <source>Calling this constructor is equivalent to calling the no-args constructor followed by &lt;code&gt;setCipherSuites(cipherSuites); setProtocols(protocols);&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215d79411e39eb29aedd412e7afac362306c8ac2" translate="yes" xml:space="preserve">
          <source>Calling this constructor is equivalent to calling the no-args constructor followed by &lt;code&gt;setCipherSuites(cipherSuites);&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edbb1d9220e1336924037351542c2b30219a6587" translate="yes" xml:space="preserve">
          <source>Calling this method changes the state of the builder such that all subsequent builder method calls will parse text in case insensitive mode. See &lt;a href=&quot;datetimeformatterbuilder#parseCaseSensitive--&quot;&gt;&lt;code&gt;parseCaseSensitive()&lt;/code&gt;&lt;/a&gt; for the opposite setting. The parse case sensitive/insensitive methods may be called at any point in the builder, thus the parser can swap between case parsing modes multiple times during the parse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a416060ba889bbef6118fb2569f7c5b47437550" translate="yes" xml:space="preserve">
          <source>Calling this method changes the state of the builder such that all subsequent builder method calls will parse text in case sensitive mode. See &lt;a href=&quot;datetimeformatterbuilder#parseCaseInsensitive--&quot;&gt;&lt;code&gt;parseCaseInsensitive()&lt;/code&gt;&lt;/a&gt; for the opposite setting. The parse case sensitive/insensitive methods may be called at any point in the builder, thus the parser can swap between case parsing modes multiple times during the parse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4adb21821177677898d2d6dbfed1098d78eabfca" translate="yes" xml:space="preserve">
          <source>Calling this method has no effect on the behavior of the timer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfad2a8fa7db7d2be2ac7b3e7b99325068a76f0f" translate="yes" xml:space="preserve">
          <source>Calling this method is equivalent to calling &lt;a href=&quot;../jmxconnector#getMBeanServerConnection-javax.security.auth.Subject-&quot;&gt;&lt;code&gt;getMBeanServerConnection(null)&lt;/code&gt;&lt;/a&gt; meaning that no delegation subject is specified and that all the operations called on the &lt;code&gt;MBeanServerConnection&lt;/code&gt; must use the authenticated subject, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89be4cc94ddc37a70cd7b34c23b06f59aa711111" translate="yes" xml:space="preserve">
          <source>Calling this method is equivalent to calling &lt;a href=&quot;jmxconnector#getMBeanServerConnection-javax.security.auth.Subject-&quot;&gt;&lt;code&gt;getMBeanServerConnection(null)&lt;/code&gt;&lt;/a&gt; meaning that no delegation subject is specified and that all the operations called on the &lt;code&gt;MBeanServerConnection&lt;/code&gt; must use the authenticated subject, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53172790e05ff248cec0400037646b1ddeedae56" translate="yes" xml:space="preserve">
          <source>Calling this method overrides any previous setting made by this method or &lt;a href=&quot;sslengine#setNeedClientAuth-boolean-&quot;&gt;&lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5fe5944062b3d97c666fefe4aabcb0618045b78" translate="yes" xml:space="preserve">
          <source>Calling this method overrides any previous setting made by this method or &lt;a href=&quot;sslengine#setWantClientAuth-boolean-&quot;&gt;&lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8af9de183bb1ebd617c270434d61edc74e05dc1" translate="yes" xml:space="preserve">
          <source>Calling this method overrides any previous setting made by this method or &lt;a href=&quot;sslserversocket#setNeedClientAuth-boolean-&quot;&gt;&lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29155c39dcc7b299419cabe4bef36ead771df89" translate="yes" xml:space="preserve">
          <source>Calling this method overrides any previous setting made by this method or &lt;a href=&quot;sslserversocket#setWantClientAuth-boolean-&quot;&gt;&lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5370f75f61b6c4457961c420284548d1343dfdd9" translate="yes" xml:space="preserve">
          <source>Calling this method overrides any previous setting made by this method or &lt;a href=&quot;sslsocket#setNeedClientAuth-boolean-&quot;&gt;&lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df6e5819fa3e52757c2f828eb0864318791b3c8" translate="yes" xml:space="preserve">
          <source>Calling this method overrides any previous setting made by this method or &lt;a href=&quot;sslsocket#setWantClientAuth-boolean-&quot;&gt;&lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b5bcb33ee77e052f572dc8eb602b267ec299d2" translate="yes" xml:space="preserve">
          <source>Calling this method suggests that the Java Virtual Machine expend effort toward running the &lt;code&gt;finalize&lt;/code&gt; methods of objects that have been found to be discarded but whose &lt;code&gt;finalize&lt;/code&gt; methods have not yet been run. When control returns from the method call, the Java Virtual Machine has made a best effort to complete all outstanding finalizations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f8837073711aeaa353639afa60ea7b3dfb7417" translate="yes" xml:space="preserve">
          <source>Calling this method twice with the same parameters may return the same object or two equal but not identical objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16af319530e6efbd1c38d12b93a109ebc26be9a2" translate="yes" xml:space="preserve">
          <source>Calling this method when the connector server has already been stopped has no effect. Calling this method when the connector server has not yet been started will disable the connector server object permanently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cce80e22b48ae711b08b7e5b9a94c9c392edbfd" translate="yes" xml:space="preserve">
          <source>Calling this method will end any open optional sections by repeatedly calling &lt;a href=&quot;datetimeformatterbuilder#optionalEnd--&quot;&gt;&lt;code&gt;optionalEnd()&lt;/code&gt;&lt;/a&gt; before creating the formatter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f270011679fffeca63749f5a36f5285b95592d1" translate="yes" xml:space="preserve">
          <source>Calling this method with argument false suggests that the virtual machine cease emitting per-call debugging information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4a0dc677b0ba0be260cdfa3204e1e942be9fb1" translate="yes" xml:space="preserve">
          <source>Calling this method without having previously called &lt;code&gt;optionalStart&lt;/code&gt; will throw an exception. Calling this method immediately after calling &lt;code&gt;optionalStart&lt;/code&gt; has no effect on the formatter other than ending the (empty) optional section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467eb3fafc5c38d65ae1ac2a18eab8dff48adf56" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;standardmbean#StandardMBean-T-java.lang.Class-&quot;&gt;&lt;code&gt;this(this,mbeanInterface)&lt;/code&gt;&lt;/a&gt;. This constructor is reserved to subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1509772b17a87f4a83378a78d0926830e17c601" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;standardmbean#StandardMBean-T-java.lang.Class-boolean-&quot;&gt;&lt;code&gt;this(this, mbeanInterface, isMXBean)&lt;/code&gt;&lt;/a&gt;. This constructor is reserved to subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666f2d2bf71d6ecf405e3e16c4a35d194a7c59b4" translate="yes" xml:space="preserve">
          <source>Calls a method on a script object compiled during a previous script execution, which is retained in the state of the &lt;code&gt;ScriptEngine&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711aa7633c76edce8069aaf608ce7c7f8e11dbfe" translate="yes" xml:space="preserve">
          <source>Calls the &lt;code&gt;Hashtable&lt;/code&gt; method &lt;code&gt;put&lt;/code&gt;. Provided for parallelism with the &lt;code&gt;getProperty&lt;/code&gt; method. Enforces use of strings for property keys and values. The value returned is the result of the &lt;code&gt;Hashtable&lt;/code&gt; call to &lt;code&gt;put&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38cd974b658520d4e4e64a4f6b67d4ccb9f2a170" translate="yes" xml:space="preserve">
          <source>Calls the &lt;code&gt;store(OutputStream out, String comments)&lt;/code&gt; method and suppresses IOExceptions that were thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac9b13841d62a9ffa4128d18592148f28a51df5" translate="yes" xml:space="preserve">
          <source>Calls the print method of the print job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67790aed86c07e44753d166892d7524a191c4049" translate="yes" xml:space="preserve">
          <source>Calls to &lt;a href=&quot;keystore.builder#getProtectionParameter-java.lang.String-&quot;&gt;&lt;code&gt;getProtectionParameter()&lt;/code&gt;&lt;/a&gt; will return &lt;code&gt;protection&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d92387073726e639468d38742bc1a4c037c3a17" translate="yes" xml:space="preserve">
          <source>Calls to &lt;a href=&quot;keystore.builder#getProtectionParameter-java.lang.String-&quot;&gt;&lt;code&gt;getProtectionParameter()&lt;/code&gt;&lt;/a&gt; will return a &lt;a href=&quot;keystore.passwordprotection&quot;&gt;&lt;code&gt;PasswordProtection&lt;/code&gt;&lt;/a&gt; object encapsulating the password that was used to invoke the &lt;code&gt;load&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50507418201fe2f2a2117f24ede269b1f838983f" translate="yes" xml:space="preserve">
          <source>Calls to &lt;code&gt;reset&lt;/code&gt; without a corresponding call to &lt;code&gt;mark&lt;/code&gt; have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5992b100f5d707bef08537939bc8c34834c173e6" translate="yes" xml:space="preserve">
          <source>Calls to &lt;code&gt;wrap()&lt;/code&gt; and &lt;code&gt;unwrap()&lt;/code&gt; return an &lt;code&gt;SSLEngineResult&lt;/code&gt; which indicates the status of the operation, and (optionally) how to interact with the engine to make progress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e46809b313da54be4c2b0128f84c9b369f6a801" translate="yes" xml:space="preserve">
          <source>Calls to this method provide AAD to the cipher when operating in modes such as AEAD (GCM/CCM). If this cipher is operating in either GCM or CCM mode, all AAD must be supplied before beginning operations on the ciphertext (via the &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;doFinal&lt;/code&gt; methods).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6541bf145409299849d62488fb7ecf02b1df4c2" translate="yes" xml:space="preserve">
          <source>Can be implemented by an MBean in order to carry out operations before and after being registered or unregistered from the MBean Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b6743b140bd37380eec01e58239f30687adbfa" translate="yes" xml:space="preserve">
          <source>Can be implemented by an MBean in order to carry out operations before and after being registered or unregistered from the MBean Server. An MBean can also implement this interface in order to get a reference to the MBean Server and/or its name within that MBean Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0589cf4b0e323d082ead7de56ab1636447f2b8" translate="yes" xml:space="preserve">
          <source>Can be placed on a directory and indicates that the ACL entry should be added to each new directory created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb92f208ce2bbb1ea33ee0ea02770f6b297f8328" translate="yes" xml:space="preserve">
          <source>Can be placed on a directory and indicates that the ACL entry should be added to each new non-directory file created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8098e92113f85c5bc4bc99590680bab23b06231d" translate="yes" xml:space="preserve">
          <source>Can be placed on a directory but does not apply to the directory, only to newly created files/directories as specified by the &lt;a href=&quot;aclentryflag#FILE_INHERIT&quot;&gt;&lt;code&gt;FILE_INHERIT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;aclentryflag#DIRECTORY_INHERIT&quot;&gt;&lt;code&gt;DIRECTORY_INHERIT&lt;/code&gt;&lt;/a&gt; flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f88632e86be57feaa27d7b3c741050ae236487" translate="yes" xml:space="preserve">
          <source>Can be placed on a directory to indicate that the ACL entry should not be placed on the newly created directory which is inheritable by subdirectories of the created directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53003e3f37a565f74dacad9a1806ee7b62420953" translate="yes" xml:space="preserve">
          <source>Can be: &quot;ObjectReference&quot;, &quot;Handle&quot;, &quot;IOR&quot;, &quot;EJBHandle&quot;, or &quot;RMIReference&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8f2f2ad457bbeb74ecffb2d9e1449f76692ae3" translate="yes" xml:space="preserve">
          <source>Can join Internet Protocol (IP) multicast groups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9230bdcb9d7d0a30b4f902dcae152527b547bae3" translate="yes" xml:space="preserve">
          <source>Can read and write bytes asynchronously</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f5e9c406de458d9a962b1cbdbb433bc4112e85" translate="yes" xml:space="preserve">
          <source>Can read into a buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8efcd7cb4b069165d01ab3ea7bfb4ef06eb175c0" translate="yes" xml:space="preserve">
          <source>Can read into a sequence of buffers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a1f9040fbb53ba5f9aab571d63dd4814a1b386" translate="yes" xml:space="preserve">
          <source>Can read or update Access Control Lists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc491d115e495d5f00e45b53f893be52141a05f" translate="yes" xml:space="preserve">
          <source>Can read or update FAT file attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e363b764248eae86a4f0e9cd62ea15d21da529ae" translate="yes" xml:space="preserve">
          <source>Can read or update POSIX defined file attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33df77ca9dae47ed265861e9218c1d85b961714" translate="yes" xml:space="preserve">
          <source>Can read or update a basic set of file attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f105347dc2caa57aeaf6c151beb271ad9d83311" translate="yes" xml:space="preserve">
          <source>Can read or update file attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41016c1602e66b04a502d883c6c3c6654b49cdf5" translate="yes" xml:space="preserve">
          <source>Can read or update file system attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b10ad7209f739ac7b8e1fad4870aeaeae707f3" translate="yes" xml:space="preserve">
          <source>Can read or update non-opaque values associated with objects in a file system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80cb27db2b54130668d3b3bf9112ae97d7c62985" translate="yes" xml:space="preserve">
          <source>Can read or update the owner of a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d80981936581a7b31b52d301d9a981ec8f37c6f" translate="yes" xml:space="preserve">
          <source>Can read or update user-defined file attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f78f4b8c82d6b6590ac06c9000b5c02e3082a3" translate="yes" xml:space="preserve">
          <source>Can read/write to/from a buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ac42bd7ee95a487f8a2ec955ff646df5951c57" translate="yes" xml:space="preserve">
          <source>Can the write lock be downgraded to a read lock without allowing an intervening writer? Can a read lock be upgraded to a write lock, in preference to other waiting readers or writers?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a82d483c05a357f919f5fc9a24e99db2a17ca8d" translate="yes" xml:space="preserve">
          <source>Can write from a buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01328c57b3d7fc64318bc374d4aee8537d4b3a59" translate="yes" xml:space="preserve">
          <source>Can write from a sequence of buffers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168489a2f7ae28de228e9a679ef10f376d1968f2" translate="yes" xml:space="preserve">
          <source>CancelablePrintJob</source>
          <target state="translated">CancelablePrintJob</target>
        </trans-unit>
        <trans-unit id="abe09af7590203d416eaf28a9316ad27c5a3f7fe" translate="yes" xml:space="preserve">
          <source>CancelablePrintJob.cancel()</source>
          <target state="translated">CancelablePrintJob.cancel()</target>
        </trans-unit>
        <trans-unit id="319aaae4dec46a75861fd10bcf8d182f4a77298d" translate="yes" xml:space="preserve">
          <source>Cancellation</source>
          <target state="translated">Cancellation</target>
        </trans-unit>
        <trans-unit id="54be4d05d8cd804a65ab9fcd6cf56521062b24ee" translate="yes" xml:space="preserve">
          <source>Cancellation in some services may be a lengthy process, involving requests to a server and processing of its print queue. Clients may wish to execute cancel in a thread which does not affect application execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe9cb2f4c068f9a53d28beb7e018a9bdfa65f1f" translate="yes" xml:space="preserve">
          <source>CancellationException</source>
          <target state="translated">CancellationException</target>
        </trans-unit>
        <trans-unit id="d2dc95de7fcf2a4189f7d5a797ea1a285834d824" translate="yes" xml:space="preserve">
          <source>Cancelled implicitly, because the object is no longer accessible, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782855a83fd188069c780acc7fda56a9fd71b0e5" translate="yes" xml:space="preserve">
          <source>CancelledKeyException</source>
          <target state="translated">CancelledKeyException</target>
        </trans-unit>
        <trans-unit id="ed3239f8e1780e1cc5b1ec56ddb0aa33e1519e92" translate="yes" xml:space="preserve">
          <source>Cancels the registration with the watch service. Upon return the watch key will be invalid. If the watch key is enqueued, waiting to be retrieved from the watch service, then it will remain in the queue until it is removed. Pending events, if any, remain pending and may be retrieved by invoking the &lt;a href=&quot;watchkey#pollEvents--&quot;&gt;&lt;code&gt;pollEvents&lt;/code&gt;&lt;/a&gt; method after the key is cancelled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb93f50ae7b8a1be1492e3879071ebbe9c8ea780" translate="yes" xml:space="preserve">
          <source>Cancels this key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59757d60545722ab992747f90ed3c3cc8eb74396" translate="yes" xml:space="preserve">
          <source>Cancels this timer task. If the task has been scheduled for one-time execution and has not yet run, or has not yet been scheduled, it will never run. If the task has been scheduled for repeated execution, it will never run again. (If the task is running when this call occurs, the task will run to completion, but will never run again.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc2f6781fcf9be326b4f47679819cc9d7a4e24c" translate="yes" xml:space="preserve">
          <source>Candidate bundle names where the final component is an empty string are omitted, along with the underscore. For example, if country is an empty string, the second and the fifth candidate bundle names above would be omitted. Also, if script is an empty string, the candidate names including script are omitted. For example, a locale with language &quot;de&quot; and variant &quot;JAVA&quot; will produce candidate names with base name &quot;MyResource&quot; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff15d117617d47a8270efd8cc4791eb9d357ef0e" translate="yes" xml:space="preserve">
          <source>CannotProceedException</source>
          <target state="translated">CannotProceedException</target>
        </trans-unit>
        <trans-unit id="ec6061279c57c95555ee44109ad43b68ebec495c" translate="yes" xml:space="preserve">
          <source>CannotProceedException.getAltName()</source>
          <target state="translated">CannotProceedException.getAltName()</target>
        </trans-unit>
        <trans-unit id="49e3216c03781106fb096c9e43cc6c0896d736e4" translate="yes" xml:space="preserve">
          <source>CannotProceedException.getAltNameCtx()</source>
          <target state="translated">CannotProceedException.getAltNameCtx()</target>
        </trans-unit>
        <trans-unit id="37b7d0fa17a5d12888a87c5536734bd8bf1266ff" translate="yes" xml:space="preserve">
          <source>CannotProceedException.getEnvironment()</source>
          <target state="translated">CannotProceedException.getEnvironment()</target>
        </trans-unit>
        <trans-unit id="bf02ccdf9f5027c426e70ca0712768db60d48278" translate="yes" xml:space="preserve">
          <source>CannotProceedException.getRemainingNewName()</source>
          <target state="translated">CannotProceedException.getRemainingNewName()</target>
        </trans-unit>
        <trans-unit id="f7c9623146033708c4faaa25925bac621d323c49" translate="yes" xml:space="preserve">
          <source>CannotProceedException.setAltName()</source>
          <target state="translated">CannotProceedException.setAltName()</target>
        </trans-unit>
        <trans-unit id="e45ec9c27362949f5ebc9dc38499145da1e1d1f3" translate="yes" xml:space="preserve">
          <source>CannotProceedException.setAltNameCtx()</source>
          <target state="translated">CannotProceedException.setAltNameCtx()</target>
        </trans-unit>
        <trans-unit id="f5ef226396a6a591ddabbb59cdd7d8b4e2773ea7" translate="yes" xml:space="preserve">
          <source>CannotProceedException.setEnvironment()</source>
          <target state="translated">CannotProceedException.setEnvironment()</target>
        </trans-unit>
        <trans-unit id="320bc7e81fc02eea9a8e8d701a0c374ec8d8c365" translate="yes" xml:space="preserve">
          <source>CannotProceedException.setRemainingNewName()</source>
          <target state="translated">CannotProceedException.setRemainingNewName()</target>
        </trans-unit>
        <trans-unit id="48d00a84d26813f8c087c3276fda9aab42fda222" translate="yes" xml:space="preserve">
          <source>Canonical String format of Distinguished Names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10316f9b7b66c9723f3fc774ada93d08db83e825" translate="yes" xml:space="preserve">
          <source>Canonical block names as defined by the Unicode Standard. For example, the standard defines a &quot;Basic Latin&quot; block. Therefore, this method accepts &quot;Basic Latin&quot; as a valid block name. The documentation of each UnicodeBlock provides the canonical name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c5e448e4e3ba84497188b40292338560845d688" translate="yes" xml:space="preserve">
          <source>Canonical block names with all spaces removed. For example, &quot;BasicLatin&quot; is a valid block name for the &quot;Basic Latin&quot; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23e578f453e085aea288db8af120a3b913d1f43" translate="yes" xml:space="preserve">
          <source>Canonical decomposition, followed by canonical composition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ff714efaabf2382b9a14b9f2269548dbf5245f" translate="yes" xml:space="preserve">
          <source>Canonical decomposition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eddb75415e4a6828042e9ba3b6a91b4aff21b45" translate="yes" xml:space="preserve">
          <source>Captures the current state of this MBean instance and writes it out to the persistent store. The state stored could include attribute and operation values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484df534cdef4ebf75133fdb68378b3415ee1e4d" translate="yes" xml:space="preserve">
          <source>Captures the current state of this MBean instance and writes it out to the persistent store. The state stored could include attribute and operation values. If one of these methods of persistence is not supported a &quot;serviceNotFound&quot; exception will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f99131d8f26d73ddf398914377998b8ff7b974d" translate="yes" xml:space="preserve">
          <source>Capturing groups are numbered by counting their opening parentheses from left to right. In the expression &lt;code&gt;((A)(B(C)))&lt;/code&gt;, for example, there are four such groups:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7bfb0888dc6344b59dd2d029c7fdea4c9becd4" translate="yes" xml:space="preserve">
          <source>Capturing groups are so named because, during a match, each subsequence of the input sequence that matches such a group is saved. The captured subsequence may be used later in the expression, via a back reference, and may also be retrieved from the matcher once the match operation is complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae333e134e3d26f7e2b7e560a7b209011dc62bf" translate="yes" xml:space="preserve">
          <source>Care must also be exercised when using collections that have restrictions on the elements that they may contain. Collection implementations are allowed to throw exceptions for any operation involving elements they deem ineligible. For absolute safety the specified collections should contain only elements which are eligible elements for both collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e271e77bb6456e192d1e4d6bb782cfcb78872d53" translate="yes" xml:space="preserve">
          <source>Care must be exercised if this method is used on collections that do not comply with the general contract for &lt;code&gt;Collection&lt;/code&gt;. Implementations may elect to iterate over either collection and test for containment in the other collection (or to perform any equivalent computation). If either collection uses a nonstandard equality test (as does a &lt;a href=&quot;sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; whose ordering is not &lt;em&gt;compatible with equals&lt;/em&gt;, or the key set of an &lt;a href=&quot;identityhashmap&quot;&gt;&lt;code&gt;IdentityHashMap&lt;/code&gt;&lt;/a&gt;), both collections must use the same nonstandard equality test, or the result of this method is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4757eeaf4c543dfa82e62f8c81c30e2a72f103b6" translate="yes" xml:space="preserve">
          <source>Care must be taken when multiple threads are accessing the same &lt;code&gt;EventContext&lt;/code&gt; concurrently. See the &lt;a href=&quot;package-summary#THREADING&quot;&gt;package description&lt;/a&gt; for more information on threading issues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9933ebfca70ad50e9ac00a9de917a65ce29f03" translate="yes" xml:space="preserve">
          <source>Care should be taken before granting code permission to access certain system properties. For example, granting permission to access the &quot;java.home&quot; system property gives potentially malevolent code sensitive information about the system environment (the Java installation directory). Also, granting permission to access the &quot;user.name&quot; and &quot;user.home&quot; system properties gives potentially malevolent code sensitive information about the user environment (the user's account name and home directory).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1860643e3e4f90e059ac4929fca0350c1fee9c" translate="yes" xml:space="preserve">
          <source>Care should be taken when configuring the executor service. It should support &lt;em&gt;direct handoff&lt;/em&gt; or &lt;em&gt;unbounded queuing&lt;/em&gt; of submitted tasks, and the thread that invokes the &lt;a href=&quot;../../util/concurrent/executor#execute-java.lang.Runnable-&quot;&gt;&lt;code&gt;execute&lt;/code&gt;&lt;/a&gt; method should never invoke the task directly. An implementation may mandate additional constraints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4777552ad27209e66b6aae06b3a4603eaf692f3f" translate="yes" xml:space="preserve">
          <source>Case is normalized except for variant tags, which are left unchanged. Language is normalized to lower case, script to title case, country to upper case, and extensions to lower case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7945904e4b0297310f19e4ba8b84ac99d17c44" translate="yes" xml:space="preserve">
          <source>Case is not significant in the initial &lt;code&gt;service:jmx:&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; string or in the host part of the address. Depending on the protocol, case can be significant in the &lt;code&gt;&lt;em&gt;url-path&lt;/em&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8fdd4650bb321f55a20a48b3e35729a0ad7e254" translate="yes" xml:space="preserve">
          <source>Case-insensitive matching can also be enabled via the embedded flag expression &lt;code&gt;(?i)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c548aed9d95a9b03525f47024eb2d90e24306b42" translate="yes" xml:space="preserve">
          <source>Cases where the close operation may fail require careful attention by implementers. It is strongly advised to relinquish the underlying resources and to internally &lt;em&gt;mark&lt;/em&gt; the resource as closed, prior to throwing the exception. The &lt;code&gt;close&lt;/code&gt; method is unlikely to be invoked more than once and so this ensures that the resources are released in a timely manner. Furthermore it reduces problems that could arise when the resource wraps, or is wrapped, by another resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b7e215932052054836592b4663428025418e5c" translate="yes" xml:space="preserve">
          <source>Cast from Q to S</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a3ccee6eb3ee7c9b622c28c24d76df46183a21" translate="yes" xml:space="preserve">
          <source>Cast from Wrapper(Q) to S</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f710b81a7097facc7f40abf5ae11b3b52b7e365d" translate="yes" xml:space="preserve">
          <source>Casts an object to the class or interface represented by this &lt;code&gt;Class&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381497cf544e7e3446c330d10ca90c47bc074564" translate="yes" xml:space="preserve">
          <source>Casts this &lt;code&gt;Class&lt;/code&gt; object to represent a subclass of the class represented by the specified class object. Checks that the cast is valid, and throws a &lt;code&gt;ClassCastException&lt;/code&gt; if it is not. If this method succeeds, it always returns a reference to this class object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e4f91c42b4691002ace573f665eb106bf6922d" translate="yes" xml:space="preserve">
          <source>Category used to represent the default locale for displaying user interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13cea1cfe88ffb91572b5da3711b54a8649b1a44" translate="yes" xml:space="preserve">
          <source>Category used to represent the default locale for formatting dates, numbers, and/or currencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e0a75e85b4b29a1ef52d9d7f34f23219af7ec9" translate="yes" xml:space="preserve">
          <source>Cause the Compiler to cease operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869b4cfffe2bec791d1b0232276aa81ba1f6de0a" translate="yes" xml:space="preserve">
          <source>Cause the Compiler to resume operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d750e92f728bc7d2e7a2c2abb2911816c362e0" translate="yes" xml:space="preserve">
          <source>Causes a flush on the target &lt;code&gt;Handler&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1261bc4ca7b7074c68e86276bb9da8b866cd671b" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until another thread invokes the &lt;a href=&quot;object#notify--&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; method or the &lt;a href=&quot;object#notifyAll--&quot;&gt;&lt;code&gt;notifyAll()&lt;/code&gt;&lt;/a&gt; method for this object, or some other thread interrupts the current thread, or a certain amount of real time has elapsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c204cb8bff344243812cafebf4a4b1f92bc4d6" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until another thread invokes the &lt;a href=&quot;object#notify--&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; method or the &lt;a href=&quot;object#notifyAll--&quot;&gt;&lt;code&gt;notifyAll()&lt;/code&gt;&lt;/a&gt; method for this object. In other words, this method behaves exactly as if it simply performs the call &lt;code&gt;wait(0)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a344653a37a0a035d505a296f200cd99532e73b3" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until either another thread invokes the &lt;a href=&quot;object#notify--&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; method or the &lt;a href=&quot;object#notifyAll--&quot;&gt;&lt;code&gt;notifyAll()&lt;/code&gt;&lt;/a&gt; method for this object, or a specified amount of time has elapsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9855ca7e76847bb045ee7d2f851ade37e50f9e5d" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until it is signalled or &lt;a href=&quot;../../../lang/thread#interrupt--&quot;&gt;interrupted&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9822e820581e8fe12f1b9b226e2cccb429b12dc5" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until it is signalled or interrupted, or the specified deadline elapses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440d6ccaa8d3cc3468a5cf37a5138295fb1aae80" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until it is signalled or interrupted, or the specified waiting time elapses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4579924c44f0ee980dcde455a78615c60919e475" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until it is signalled or interrupted, or the specified waiting time elapses. This method is behaviorally equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0fd4891a7a68553ed1384cf689d6f36fbb4e470" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until it is signalled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b5e6710b0b0371978d5806fac16319f76c0331" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until the latch has counted down to zero, unless the thread is &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;interrupted&lt;/a&gt;, or the specified waiting time elapses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e88fe865939b2e19b2765b34e3579a1355d02ce" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait until the latch has counted down to zero, unless the thread is &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;interrupted&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0e2085d8f57bee364482a02042a4f1a145a954" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait, if necessary, until the process represented by this &lt;code&gt;Process&lt;/code&gt; object has terminated. This method returns immediately if the subprocess has already terminated. If the subprocess has not yet terminated, the calling thread will be blocked until the subprocess exits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1da9146001b01245664d3c3aa725e30c7535f74" translate="yes" xml:space="preserve">
          <source>Causes the current thread to wait, if necessary, until the subprocess represented by this &lt;code&gt;Process&lt;/code&gt; object has terminated, or the specified waiting time elapses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a276acde29279f2bcece8323bf0479003267a4a5" translate="yes" xml:space="preserve">
          <source>Causes the currently executing thread to sleep (temporarily cease execution) for the specified number of milliseconds plus the specified number of nanoseconds, subject to the precision and accuracy of system timers and schedulers. The thread does not lose ownership of any monitors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962ae4b68afb04561124d97d7de93a49c692093f" translate="yes" xml:space="preserve">
          <source>Causes the currently executing thread to sleep (temporarily cease execution) for the specified number of milliseconds, subject to the precision and accuracy of system timers and schedulers. The thread does not lose ownership of any monitors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="135151ded146cae815d8012ae78991aa1cf1fbd7" translate="yes" xml:space="preserve">
          <source>Causes the first selection operation that has not yet returned to return immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e027e8530c17ef2aefe513d5d9b730ebf838c21b" translate="yes" xml:space="preserve">
          <source>Causes the immediate execution of the script whose source is the String passed as the first argument. The script may be reparsed or recompiled before execution. State left in the engine from previous executions, including variable values and compiled procedures may be visible during this execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351a26ab7a7296c94543eb7397f62dd035fc300c" translate="yes" xml:space="preserve">
          <source>Causes the next added printer/parser to pad to a fixed width using a space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41f860fd918d4185e9c931faaa252f1190dc946" translate="yes" xml:space="preserve">
          <source>Causes the next added printer/parser to pad to a fixed width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5936bab39659e68f245c32cd244a38041790c9f" translate="yes" xml:space="preserve">
          <source>Causes the next call to the &lt;code&gt;nextToken&lt;/code&gt; method of this tokenizer to return the current value in the &lt;code&gt;ttype&lt;/code&gt; field, and not to modify the value in the &lt;code&gt;nval&lt;/code&gt; or &lt;code&gt;sval&lt;/code&gt; field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c7fa7b3b80db777ffea1c98ae5735865f3fbd54" translate="yes" xml:space="preserve">
          <source>Causes this character sequence to be replaced by the reverse of the sequence. If there are any surrogate pairs included in the sequence, these are treated as single characters for the reverse operation. Thus, the order of the high-low surrogates is never reversed. Let</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd204e1163586b81f69e53d542a4eeadd5efce63" translate="yes" xml:space="preserve">
          <source>Causes this future to report an &lt;a href=&quot;executionexception&quot;&gt;&lt;code&gt;ExecutionException&lt;/code&gt;&lt;/a&gt; with the given throwable as its cause, unless this future has already been set or has been cancelled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f1a8fa2620fce725900e976a4904a068be827b" translate="yes" xml:space="preserve">
          <source>Causes this piped input stream to be connected to the piped output stream &lt;code&gt;src&lt;/code&gt;. If this object is already connected to some other piped output stream, an &lt;code&gt;IOException&lt;/code&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d9a421fc82a1950a5a1b09004eb7dc509b3f85" translate="yes" xml:space="preserve">
          <source>Causes this piped reader to be connected to the piped writer &lt;code&gt;src&lt;/code&gt;. If this object is already connected to some other piped writer, an &lt;code&gt;IOException&lt;/code&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c38f796c338580b8fb6fd0fcb1dc1b7ae8ca5b" translate="yes" xml:space="preserve">
          <source>Causes this thread to begin execution; the Java Virtual Machine calls the &lt;code&gt;run&lt;/code&gt; method of this thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b927c77460197fb95dc32ea97ff8451281d1cf8" translate="yes" xml:space="preserve">
          <source>Caution should be exercised when using a comparator capable of imposing an ordering inconsistent with equals to order a sorted set (or sorted map). Suppose a sorted set (or sorted map) with an explicit comparator &lt;code&gt;c&lt;/code&gt; is used with elements (or keys) drawn from a set &lt;code&gt;S&lt;/code&gt;. If the ordering imposed by &lt;code&gt;c&lt;/code&gt; on &lt;code&gt;S&lt;/code&gt; is inconsistent with equals, the sorted set (or sorted map) will behave &quot;strangely.&quot; In particular the sorted set (or sorted map) will violate the general contract for set (or map), which is defined in terms of &lt;code&gt;equals&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e107d31a715665178e69d6e27470d6035d6725" translate="yes" xml:space="preserve">
          <source>Caution should be used when evaluating the expression as it may throw exceptions. In particular, code generators must ensure that generated code will compile in the presence of an expression that can throw checked exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e73ee8625d53703f55eba0083ab106989d86d80" translate="yes" xml:space="preserve">
          <source>Caveat: if either of the arguments to this method represents a wildcard, this method will return false. As a consequence, a wildcard is not the same type as itself. This might be surprising at first, but makes sense once you consider that an example like this must be rejected by the compiler:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960083a420a7225910a22e06ca44b67acb11f6b4" translate="yes" xml:space="preserve">
          <source>Caveats: The parse may fail in a number of circumstances. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c237674e2c587f4dc56e4e0cf8fd67a653f21272" translate="yes" xml:space="preserve">
          <source>Cavern</source>
          <target state="translated">Cavern</target>
        </trans-unit>
        <trans-unit id="d78fa16e6ad36fa797a370826c6d159b5f995886" translate="yes" xml:space="preserve">
          <source>CertPath</source>
          <target state="translated">CertPath</target>
        </trans-unit>
        <trans-unit id="77519ffa871df4f746c46787288bc411c9c1cf65" translate="yes" xml:space="preserve">
          <source>CertPath.CertPathRep</source>
          <target state="translated">CertPath.CertPathRep</target>
        </trans-unit>
        <trans-unit id="e9d457028651f42611e16d393856769c7a98fe86" translate="yes" xml:space="preserve">
          <source>CertPath.CertPathRep.readResolve()</source>
          <target state="translated">CertPath.CertPathRep.readResolve()</target>
        </trans-unit>
        <trans-unit id="c05662fd0abcd261f4d3e8630a74174aa3ce1570" translate="yes" xml:space="preserve">
          <source>CertPath.equals()</source>
          <target state="translated">CertPath.equals()</target>
        </trans-unit>
        <trans-unit id="8f2a444b203e4af1d49cfede75894be1712f8f0c" translate="yes" xml:space="preserve">
          <source>CertPath.getCertificates()</source>
          <target state="translated">CertPath.getCertificates()</target>
        </trans-unit>
        <trans-unit id="80c89e2f650ded7b898f6fa0c76e3c1aa0b23a47" translate="yes" xml:space="preserve">
          <source>CertPath.getEncoded()</source>
          <target state="translated">CertPath.getEncoded()</target>
        </trans-unit>
        <trans-unit id="ae5172f89d0d814978e5023245b992bcb111d8e6" translate="yes" xml:space="preserve">
          <source>CertPath.getEncodings()</source>
          <target state="translated">CertPath.getEncodings()</target>
        </trans-unit>
        <trans-unit id="b0de815727aa2e2bcfba2c17e422174074bf8b55" translate="yes" xml:space="preserve">
          <source>CertPath.getType()</source>
          <target state="translated">CertPath.getType()</target>
        </trans-unit>
        <trans-unit id="5b8d8cfb1112a9dbc9c02049f3c7762fce4db04a" translate="yes" xml:space="preserve">
          <source>CertPath.hashCode()</source>
          <target state="translated">CertPath.hashCode()</target>
        </trans-unit>
        <trans-unit id="c463a0f79e7f86ca0216d8176192870147e51e8e" translate="yes" xml:space="preserve">
          <source>CertPath.toString()</source>
          <target state="translated">CertPath.toString()</target>
        </trans-unit>
        <trans-unit id="f2ca1154c78e06174ca70b022dbc3d80bc2374ec" translate="yes" xml:space="preserve">
          <source>CertPath.writeReplace()</source>
          <target state="translated">CertPath.writeReplace()</target>
        </trans-unit>
        <trans-unit id="a9ae39fad77954556f940b218bf7ad637f85ea32" translate="yes" xml:space="preserve">
          <source>CertPathBuilder</source>
          <target state="translated">CertPathBuilder</target>
        </trans-unit>
        <trans-unit id="cbf9dfffb57be947829d703ae46ce049fde6819d" translate="yes" xml:space="preserve">
          <source>CertPathBuilder.build()</source>
          <target state="translated">CertPathBuilder.build()</target>
        </trans-unit>
        <trans-unit id="03f3dba2a2f64aeed200335a16cc1f1da951e624" translate="yes" xml:space="preserve">
          <source>CertPathBuilder.getAlgorithm()</source>
          <target state="translated">CertPathBuilder.getAlgorithm()</target>
        </trans-unit>
        <trans-unit id="ff3213827737222fd5c77dfe652d5a139d36a030" translate="yes" xml:space="preserve">
          <source>CertPathBuilder.getDefaultType()</source>
          <target state="translated">CertPathBuilder.getDefaultType()</target>
        </trans-unit>
        <trans-unit id="8285eab8cb5f52e5c6c64761e62cf951ced29265" translate="yes" xml:space="preserve">
          <source>CertPathBuilder.getInstance()</source>
          <target state="translated">CertPathBuilder.getInstance()</target>
        </trans-unit>
        <trans-unit id="82957ab08333b76351e8a4a412f96c0019668b76" translate="yes" xml:space="preserve">
          <source>CertPathBuilder.getProvider()</source>
          <target state="translated">CertPathBuilder.getProvider()</target>
        </trans-unit>
        <trans-unit id="3d6654b7e2d5c36b73e55734432447978031d435" translate="yes" xml:space="preserve">
          <source>CertPathBuilder.getRevocationChecker()</source>
          <target state="translated">CertPathBuilder.getRevocationChecker()</target>
        </trans-unit>
        <trans-unit id="f06fe066ce6c252611aa6f52300d1d249c851bf4" translate="yes" xml:space="preserve">
          <source>CertPathBuilderException</source>
          <target state="translated">CertPathBuilderException</target>
        </trans-unit>
        <trans-unit id="568074a0b0b1ada3e921c8e34e951742cb620266" translate="yes" xml:space="preserve">
          <source>CertPathBuilderResult</source>
          <target state="translated">CertPathBuilderResult</target>
        </trans-unit>
        <trans-unit id="4cd2f5074e3e9efcedddf385e187ea5bfc10b869" translate="yes" xml:space="preserve">
          <source>CertPathBuilderResult.clone()</source>
          <target state="translated">CertPathBuilderResult.clone()</target>
        </trans-unit>
        <trans-unit id="a29b63f09bc188ba83de7de1079894caf913131c" translate="yes" xml:space="preserve">
          <source>CertPathBuilderResult.getCertPath()</source>
          <target state="translated">CertPathBuilderResult.getCertPath()</target>
        </trans-unit>
        <trans-unit id="ed552ace282b6941fcd16887b33c56eed0ae95dd" translate="yes" xml:space="preserve">
          <source>CertPathBuilderSpi</source>
          <target state="translated">CertPathBuilderSpi</target>
        </trans-unit>
        <trans-unit id="aa545cc2edfd43e86f8e2de24bdc3b951ff26bbd" translate="yes" xml:space="preserve">
          <source>CertPathBuilderSpi.engineBuild()</source>
          <target state="translated">CertPathBuilderSpi.engineBuild()</target>
        </trans-unit>
        <trans-unit id="6dc191d1716e5dc56dc1c166e68cf5cd26821df2" translate="yes" xml:space="preserve">
          <source>CertPathBuilderSpi.engineGetRevocationChecker()</source>
          <target state="translated">CertPathBuilderSpi.engineGetRevocationChecker()</target>
        </trans-unit>
        <trans-unit id="fec2402782f0d5d1b5384d285e7854c4a5a5406a" translate="yes" xml:space="preserve">
          <source>CertPathChecker</source>
          <target state="translated">CertPathChecker</target>
        </trans-unit>
        <trans-unit id="f2a02a459a3ed9451f6006c29c3b620273049644" translate="yes" xml:space="preserve">
          <source>CertPathChecker.check()</source>
          <target state="translated">CertPathChecker.check()</target>
        </trans-unit>
        <trans-unit id="7f9cea2b106f84df130d70e829db8cdb2b3d9dec" translate="yes" xml:space="preserve">
          <source>CertPathChecker.init()</source>
          <target state="translated">CertPathChecker.init()</target>
        </trans-unit>
        <trans-unit id="37f15f43654acb97365f9d2c2fa03bdefbe38331" translate="yes" xml:space="preserve">
          <source>CertPathChecker.isForwardCheckingSupported()</source>
          <target state="translated">CertPathChecker.isForwardCheckingSupported()</target>
        </trans-unit>
        <trans-unit id="9047dec7e268bf3dafa7fd044966663b37803a1f" translate="yes" xml:space="preserve">
          <source>CertPathParameters</source>
          <target state="translated">CertPathParameters</target>
        </trans-unit>
        <trans-unit id="3ac5bfb513d28db1b19aa4d329b5268b9e1332bf" translate="yes" xml:space="preserve">
          <source>CertPathParameters.clone()</source>
          <target state="translated">CertPathParameters.clone()</target>
        </trans-unit>
        <trans-unit id="af35c842ad136fef6210e3448425b7493202735e" translate="yes" xml:space="preserve">
          <source>CertPathRep</source>
          <target state="translated">CertPathRep</target>
        </trans-unit>
        <trans-unit id="6e1db0d23fd63b08de4c4dd7390ea19fa83f8b1e" translate="yes" xml:space="preserve">
          <source>CertPathTrustManagerParameters</source>
          <target state="translated">CertPathTrustManagerParameters</target>
        </trans-unit>
        <trans-unit id="25cae755e50416ad7dbbc2784ba25e987fb1a64c" translate="yes" xml:space="preserve">
          <source>CertPathTrustManagerParameters.getParameters()</source>
          <target state="translated">CertPathTrustManagerParameters.getParameters()</target>
        </trans-unit>
        <trans-unit id="01d56bf6e79656b68b312e3da2806671ceea2be7" translate="yes" xml:space="preserve">
          <source>CertPathValidator</source>
          <target state="translated">CertPathValidator</target>
        </trans-unit>
        <trans-unit id="751a919342818e715e9050972600ba472b753c84" translate="yes" xml:space="preserve">
          <source>CertPathValidator.getAlgorithm()</source>
          <target state="translated">CertPathValidator.getAlgorithm()</target>
        </trans-unit>
        <trans-unit id="860bc4642f43a48b5caf509f8e6447b983a20f16" translate="yes" xml:space="preserve">
          <source>CertPathValidator.getDefaultType()</source>
          <target state="translated">CertPathValidator.getDefaultType()</target>
        </trans-unit>
        <trans-unit id="8c88cdee19d8323d7afa497131f287adc9eeb1e3" translate="yes" xml:space="preserve">
          <source>CertPathValidator.getInstance()</source>
          <target state="translated">CertPathValidator.getInstance()</target>
        </trans-unit>
        <trans-unit id="a03381d2921229adb474d017ee1708796e234e0e" translate="yes" xml:space="preserve">
          <source>CertPathValidator.getProvider()</source>
          <target state="translated">CertPathValidator.getProvider()</target>
        </trans-unit>
        <trans-unit id="bdd2219ed38d396fc36fba4714ace72ea8c8a567" translate="yes" xml:space="preserve">
          <source>CertPathValidator.getRevocationChecker()</source>
          <target state="translated">CertPathValidator.getRevocationChecker()</target>
        </trans-unit>
        <trans-unit id="d39eccf4cbfa5cf3a063ef221bfd11be5ab7e6a7" translate="yes" xml:space="preserve">
          <source>CertPathValidator.validate()</source>
          <target state="translated">CertPathValidator.validate()</target>
        </trans-unit>
        <trans-unit id="bf77983a6f1f69ec61fd99bcfdba2d69d1d652fe" translate="yes" xml:space="preserve">
          <source>CertPathValidatorException</source>
          <target state="translated">CertPathValidatorException</target>
        </trans-unit>
        <trans-unit id="2397eb67e789315abd8da285111c70c38315b16a" translate="yes" xml:space="preserve">
          <source>CertPathValidatorException.BasicReason</source>
          <target state="translated">CertPathValidatorException.BasicReason</target>
        </trans-unit>
        <trans-unit id="58c832c1eb4341e370dbd80971e84e69d9f21c9a" translate="yes" xml:space="preserve">
          <source>CertPathValidatorException.BasicReason.valueOf()</source>
          <target state="translated">CertPathValidatorException.BasicReason.valueOf()</target>
        </trans-unit>
        <trans-unit id="4142686f37f5cfd12ede4e7094f4040a1f51efa4" translate="yes" xml:space="preserve">
          <source>CertPathValidatorException.BasicReason.values()</source>
          <target state="translated">CertPathValidatorException.BasicReason.values()</target>
        </trans-unit>
        <trans-unit id="b96a402c3002e8709674d5fb3726519c2653d6e7" translate="yes" xml:space="preserve">
          <source>CertPathValidatorException.Reason</source>
          <target state="translated">CertPathValidatorException.Reason</target>
        </trans-unit>
        <trans-unit id="078a088afac901e856a54cb24cd1e3be4f693275" translate="yes" xml:space="preserve">
          <source>CertPathValidatorException.getCertPath()</source>
          <target state="translated">CertPathValidatorException.getCertPath()</target>
        </trans-unit>
        <trans-unit id="5c7c42e726495d55ade7e83032fb121fe1d59f8e" translate="yes" xml:space="preserve">
          <source>CertPathValidatorException.getIndex()</source>
          <target state="translated">CertPathValidatorException.getIndex()</target>
        </trans-unit>
        <trans-unit id="f494ad449ca0c86e515bc366c560b928dcf3a76a" translate="yes" xml:space="preserve">
          <source>CertPathValidatorException.getReason()</source>
          <target state="translated">CertPathValidatorException.getReason()</target>
        </trans-unit>
        <trans-unit id="534b3a3c111490fe70d35c9ccc3a180ce59a0e6e" translate="yes" xml:space="preserve">
          <source>CertPathValidatorResult</source>
          <target state="translated">CertPathValidatorResult</target>
        </trans-unit>
        <trans-unit id="d77f699d5106a7fd005db7dd4227c80e197e9d71" translate="yes" xml:space="preserve">
          <source>CertPathValidatorResult.clone()</source>
          <target state="translated">CertPathValidatorResult.clone()</target>
        </trans-unit>
        <trans-unit id="21fdb6fca7c8b7daaddece46e7931640e937c47d" translate="yes" xml:space="preserve">
          <source>CertPathValidatorSpi</source>
          <target state="translated">CertPathValidatorSpi</target>
        </trans-unit>
        <trans-unit id="91ae50c986138f19f8e54de9a5165c554212d019" translate="yes" xml:space="preserve">
          <source>CertPathValidatorSpi.engineGetRevocationChecker()</source>
          <target state="translated">CertPathValidatorSpi.engineGetRevocationChecker()</target>
        </trans-unit>
        <trans-unit id="24e5fa2e7042e706c8d9a965f6590a910a8c2c36" translate="yes" xml:space="preserve">
          <source>CertPathValidatorSpi.engineValidate()</source>
          <target state="translated">CertPathValidatorSpi.engineValidate()</target>
        </trans-unit>
        <trans-unit id="d13ef378ffa092ded28435577fe27e678d04f346" translate="yes" xml:space="preserve">
          <source>CertSelector</source>
          <target state="translated">CertSelector</target>
        </trans-unit>
        <trans-unit id="cc046ac5ab50aab58d87538b5045c6ba99025397" translate="yes" xml:space="preserve">
          <source>CertSelector.clone()</source>
          <target state="translated">CertSelector.clone()</target>
        </trans-unit>
        <trans-unit id="5bfbab907ddac18eca722a8acd1fdca56b4ea9e9" translate="yes" xml:space="preserve">
          <source>CertSelector.match()</source>
          <target state="translated">CertSelector.match()</target>
        </trans-unit>
        <trans-unit id="be1f17dddbba97e34275d78c46e14d1dae7180b3" translate="yes" xml:space="preserve">
          <source>CertStore</source>
          <target state="translated">CertStore</target>
        </trans-unit>
        <trans-unit id="77948ce2f86e887f6ec8e67044f0a2904b18d992" translate="yes" xml:space="preserve">
          <source>CertStore.getCRLs()</source>
          <target state="translated">CertStore.getCRLs()</target>
        </trans-unit>
        <trans-unit id="4336bf845d10e69c81b5b92a9b814861d3897f28" translate="yes" xml:space="preserve">
          <source>CertStore.getCertStoreParameters()</source>
          <target state="translated">CertStore.getCertStoreParameters()</target>
        </trans-unit>
        <trans-unit id="126addf4ad888258c4079417d006513bc7cb7eb3" translate="yes" xml:space="preserve">
          <source>CertStore.getCertificates()</source>
          <target state="translated">CertStore.getCertificates()</target>
        </trans-unit>
        <trans-unit id="93c14e99d67a60ce7b44150057881a86c2a858d5" translate="yes" xml:space="preserve">
          <source>CertStore.getDefaultType()</source>
          <target state="translated">CertStore.getDefaultType()</target>
        </trans-unit>
        <trans-unit id="57d299b1fe88d0f3848b4bb407ac0cc9f6431efe" translate="yes" xml:space="preserve">
          <source>CertStore.getInstance()</source>
          <target state="translated">CertStore.getInstance()</target>
        </trans-unit>
        <trans-unit id="baec6331851afcdc24420cb52309833961173cff" translate="yes" xml:space="preserve">
          <source>CertStore.getProvider()</source>
          <target state="translated">CertStore.getProvider()</target>
        </trans-unit>
        <trans-unit id="1fb3efc9cd43f4670679f92d2f1277509457ee2f" translate="yes" xml:space="preserve">
          <source>CertStore.getType()</source>
          <target state="translated">CertStore.getType()</target>
        </trans-unit>
        <trans-unit id="3a4fb7f15072d6b3d99630ccc6cf960ac5582fbf" translate="yes" xml:space="preserve">
          <source>CertStoreException</source>
          <target state="translated">CertStoreException</target>
        </trans-unit>
        <trans-unit id="e8da3f2b2d7a5e747a193f43631c7f582e00b825" translate="yes" xml:space="preserve">
          <source>CertStoreParameters</source>
          <target state="translated">CertStoreParameters</target>
        </trans-unit>
        <trans-unit id="2e952e279e429819518d20d7c1794e3c025a5efb" translate="yes" xml:space="preserve">
          <source>CertStoreParameters.clone()</source>
          <target state="translated">CertStoreParameters.clone()</target>
        </trans-unit>
        <trans-unit id="b4e7f40a334c38ace08429a3da141cbb9a6793f9" translate="yes" xml:space="preserve">
          <source>CertStoreSpi</source>
          <target state="translated">CertStoreSpi</target>
        </trans-unit>
        <trans-unit id="2124d532065fea34b64152b067fed8d2d429702a" translate="yes" xml:space="preserve">
          <source>CertStoreSpi.engineGetCRLs()</source>
          <target state="translated">CertStoreSpi.engineGetCRLs()</target>
        </trans-unit>
        <trans-unit id="7928a4eea85e376cac7c91070b0c0e06ff48564e" translate="yes" xml:space="preserve">
          <source>CertStoreSpi.engineGetCertificates()</source>
          <target state="translated">CertStoreSpi.engineGetCertificates()</target>
        </trans-unit>
        <trans-unit id="802d4a8e1234b6b6ea752cfd816ac7dadd1742fd" translate="yes" xml:space="preserve">
          <source>Certain fields are used by the JMX implementation. This means either that the presence of the field may change the behavior of the JMX API or that the field may be set in descriptors returned by the JMX API. These fields appear in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e3ba2971ed37eee956c0f3795237158f056624" translate="yes" xml:space="preserve">
          <source>Certain header fields are accessed frequently. The methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca5ef36bf54accd99b3b314e0a9609f77e3a973a" translate="yes" xml:space="preserve">
          <source>Certain line operations, such as open and close, can generate security exceptions if invoked by unprivileged code when the line is a shared audio resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce5f3197e06dc2857596fb6e5a01d80786373e4e" translate="yes" xml:space="preserve">
          <source>Certain methods in the JNDI class library make use of the standard JNDI properties that specify lists of JNDI factories:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a175c3c373a5ca690a0ceceaf70480088049d95" translate="yes" xml:space="preserve">
          <source>Certain other fields have conventional meanings described in the table below but they are not required to be understood or set by the JMX implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11edb49abe1e88d8cb43d6d083f96d6ec5f2f22" translate="yes" xml:space="preserve">
          <source>Certain query elements perform operations on the MBean server. If the caller does not have the required permissions for a given MBean, that MBean will not be included in the result of the query. The standard query elements that are affected are &lt;a href=&quot;query#attr-java.lang.String-&quot;&gt;&lt;code&gt;Query.attr(String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;query#attr-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;Query.attr(String,String)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;query#classattr--&quot;&gt;&lt;code&gt;Query.classattr()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10de46b3b341b6f837cf6d72972b9bf2b3f6e491" translate="yes" xml:space="preserve">
          <source>Certificate</source>
          <target state="translated">Certificate</target>
        </trans-unit>
        <trans-unit id="8dd8962593a0949f9936407c780366eb31cc98aa" translate="yes" xml:space="preserve">
          <source>Certificate Encoding Exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d38409587e28eeb3a2ca2809a3a342f7ee4787" translate="yes" xml:space="preserve">
          <source>Certificate Encoding Exception. This is thrown whenever an error occurs while attempting to encode a certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b1dab8b9baf7910529a3fd45e95e6b9b7d4a6e" translate="yes" xml:space="preserve">
          <source>Certificate Encoding Exception. This is thrown whenever an error occurs whilst attempting to encode a certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38cf460a3088bc14eeb3697e1d5eccafa2ad1ee9" translate="yes" xml:space="preserve">
          <source>Certificate Expired Exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1f076c99aae4d8cee457dbb125e72686eb0878" translate="yes" xml:space="preserve">
          <source>Certificate Expired Exception. This is thrown whenever the current &lt;code&gt;Date&lt;/code&gt; or the specified &lt;code&gt;Date&lt;/code&gt; is after the &lt;code&gt;notAfter&lt;/code&gt; date/time specified in the validity period of the certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0932febb6307177b54aa9fd577899caa17629250" translate="yes" xml:space="preserve">
          <source>Certificate Parsing Exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3919f2f735739ba2a50d3fccc663cc00af0b952d" translate="yes" xml:space="preserve">
          <source>Certificate Parsing Exception. This is thrown whenever an invalid DER-encoded certificate is parsed or unsupported DER features are found in the Certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7befe7749bc8e31f4a5a8a060998ffc91bd1ef7" translate="yes" xml:space="preserve">
          <source>Certificate Parsing Exception. This is thrown whenever invalid DER encoded certificate is parsed or unsupported DER features are found in the Certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d29a5fdb83415b06133ce088d0dab9397f07030a" translate="yes" xml:space="preserve">
          <source>Certificate factories are used to generate certificate, certification path (&lt;code&gt;CertPath&lt;/code&gt;) and certificate revocation list (CRL) objects from their encodings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948fa0455702e8c9fb34e32affb3e5b3f61df03e" translate="yes" xml:space="preserve">
          <source>Certificate is not yet valid exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc26bc3a7c1b28c23d8ce4ce97d0442b7fed7e2b" translate="yes" xml:space="preserve">
          <source>Certificate is not yet valid exception. This is thrown whenever the current &lt;code&gt;Date&lt;/code&gt; or the specified &lt;code&gt;Date&lt;/code&gt; is before the &lt;code&gt;notBefore&lt;/code&gt; date/time in the Certificate validity period.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23fa66489d132dec64c5f0662173e4940b3c43bd" translate="yes" xml:space="preserve">
          <source>Certificate.CertificateRep</source>
          <target state="translated">Certificate.CertificateRep</target>
        </trans-unit>
        <trans-unit id="d91b7ae3f17e9de199c1e4a0767e386175e8d605" translate="yes" xml:space="preserve">
          <source>Certificate.CertificateRep.readResolve()</source>
          <target state="translated">Certificate.CertificateRep.readResolve()</target>
        </trans-unit>
        <trans-unit id="d5e032dcb7ffa9cb918dedfc6b4fff12073afad1" translate="yes" xml:space="preserve">
          <source>Certificate.decode()</source>
          <target state="translated">Certificate.decode()</target>
        </trans-unit>
        <trans-unit id="e0a041d776ce9cadebb60d1762481aa05d7dbebc" translate="yes" xml:space="preserve">
          <source>Certificate.encode()</source>
          <target state="translated">Certificate.encode()</target>
        </trans-unit>
        <trans-unit id="64b6ee38f6f78a40c765ba5fb65d10bd6a8ec0c2" translate="yes" xml:space="preserve">
          <source>Certificate.equals()</source>
          <target state="translated">Certificate.equals()</target>
        </trans-unit>
        <trans-unit id="d7d136b9a8f2c96522eb1a2c753b84f59f4d1120" translate="yes" xml:space="preserve">
          <source>Certificate.getEncoded()</source>
          <target state="translated">Certificate.getEncoded()</target>
        </trans-unit>
        <trans-unit id="a5da2aa418f2e21e392c54dba29e7d60e6ec9766" translate="yes" xml:space="preserve">
          <source>Certificate.getFormat()</source>
          <target state="translated">Certificate.getFormat()</target>
        </trans-unit>
        <trans-unit id="f77305e03de8b1412c116490ee833c88a17e8e3c" translate="yes" xml:space="preserve">
          <source>Certificate.getGuarantor()</source>
          <target state="translated">Certificate.getGuarantor()</target>
        </trans-unit>
        <trans-unit id="4c005b55b56ea6b113ccae2780771e64a9f2d55c" translate="yes" xml:space="preserve">
          <source>Certificate.getPrincipal()</source>
          <target state="translated">Certificate.getPrincipal()</target>
        </trans-unit>
        <trans-unit id="d8b07b034178d2143fbede0ae3078ce829ed8b9c" translate="yes" xml:space="preserve">
          <source>Certificate.getPublicKey()</source>
          <target state="translated">Certificate.getPublicKey()</target>
        </trans-unit>
        <trans-unit id="04949d8a98efeacc9d360dd2817337cf7a46b0e1" translate="yes" xml:space="preserve">
          <source>Certificate.getType()</source>
          <target state="translated">Certificate.getType()</target>
        </trans-unit>
        <trans-unit id="34452ef683ea759436110220dc72e73ebc47b309" translate="yes" xml:space="preserve">
          <source>Certificate.hashCode()</source>
          <target state="translated">Certificate.hashCode()</target>
        </trans-unit>
        <trans-unit id="014c903b4a19c025b8e455094c6f5bd0d0ca1cae" translate="yes" xml:space="preserve">
          <source>Certificate.toString()</source>
          <target state="translated">Certificate.toString()</target>
        </trans-unit>
        <trans-unit id="416726f81407062dbb4e7a54c1fee414ad12c05d" translate="yes" xml:space="preserve">
          <source>Certificate.verify()</source>
          <target state="translated">Certificate.verify()</target>
        </trans-unit>
        <trans-unit id="41e69a477fca4bad07c68280c57ce68a57692e8e" translate="yes" xml:space="preserve">
          <source>Certificate.writeReplace()</source>
          <target state="translated">Certificate.writeReplace()</target>
        </trans-unit>
        <trans-unit id="a5a98ddfaed8d295b9b6bc6b75530e13e9bf17d2" translate="yes" xml:space="preserve">
          <source>CertificateEncodingException</source>
          <target state="translated">CertificateEncodingException</target>
        </trans-unit>
        <trans-unit id="d6985760bbeb584eac86a7fa30d274bac6b2e45e" translate="yes" xml:space="preserve">
          <source>CertificateException</source>
          <target state="translated">CertificateException</target>
        </trans-unit>
        <trans-unit id="6b6d299261959b456d3b8a32fdc0e1a983d97158" translate="yes" xml:space="preserve">
          <source>CertificateExpiredException</source>
          <target state="translated">CertificateExpiredException</target>
        </trans-unit>
        <trans-unit id="65f16c9035af4a5624aa5908448c8e13c335d841" translate="yes" xml:space="preserve">
          <source>CertificateFactory</source>
          <target state="translated">CertificateFactory</target>
        </trans-unit>
        <trans-unit id="2694de62f5494d87fe6c9c352e62bcef004084c0" translate="yes" xml:space="preserve">
          <source>CertificateFactory.generateCRL()</source>
          <target state="translated">CertificateFactory.generateCRL()</target>
        </trans-unit>
        <trans-unit id="3bf8a307ac09561f2d2ba0bc492c3c4224d546e5" translate="yes" xml:space="preserve">
          <source>CertificateFactory.generateCRLs()</source>
          <target state="translated">CertificateFactory.generateCRLs()</target>
        </trans-unit>
        <trans-unit id="75218b725b6504daff8788978942604c139299b3" translate="yes" xml:space="preserve">
          <source>CertificateFactory.generateCertPath()</source>
          <target state="translated">CertificateFactory.generateCertPath()</target>
        </trans-unit>
        <trans-unit id="b11689763017b92321c7d30de5f07c11a47bb25c" translate="yes" xml:space="preserve">
          <source>CertificateFactory.generateCertificate()</source>
          <target state="translated">CertificateFactory.generateCertificate()</target>
        </trans-unit>
        <trans-unit id="ae2e77dc33f25c9d6a9f33132d15377e381206cb" translate="yes" xml:space="preserve">
          <source>CertificateFactory.generateCertificates()</source>
          <target state="translated">CertificateFactory.generateCertificates()</target>
        </trans-unit>
        <trans-unit id="6c6c55923ecc549826e5aeaa86aadeb280f30f1d" translate="yes" xml:space="preserve">
          <source>CertificateFactory.getCertPathEncodings()</source>
          <target state="translated">CertificateFactory.getCertPathEncodings()</target>
        </trans-unit>
        <trans-unit id="4a6ba39795b024dfac9f4d428d6a934a0742db75" translate="yes" xml:space="preserve">
          <source>CertificateFactory.getInstance()</source>
          <target state="translated">CertificateFactory.getInstance()</target>
        </trans-unit>
        <trans-unit id="fcd8a992300182a0522eff3ec63658b04511e9d4" translate="yes" xml:space="preserve">
          <source>CertificateFactory.getProvider()</source>
          <target state="translated">CertificateFactory.getProvider()</target>
        </trans-unit>
        <trans-unit id="4c94a3ee97ea19f1ceccb1a21beaac9d60c8c9f9" translate="yes" xml:space="preserve">
          <source>CertificateFactory.getType()</source>
          <target state="translated">CertificateFactory.getType()</target>
        </trans-unit>
        <trans-unit id="0fb72df91e7dc2538e40a19adb9c0306e660204a" translate="yes" xml:space="preserve">
          <source>CertificateFactorySpi</source>
          <target state="translated">CertificateFactorySpi</target>
        </trans-unit>
        <trans-unit id="fc2ac8c77c7e2ceacc9da92817275512a4e04784" translate="yes" xml:space="preserve">
          <source>CertificateFactorySpi.engineGenerateCRL()</source>
          <target state="translated">CertificateFactorySpi.engineGenerateCRL()</target>
        </trans-unit>
        <trans-unit id="6ae996621289093ac762d2c3efb9b602246e5493" translate="yes" xml:space="preserve">
          <source>CertificateFactorySpi.engineGenerateCRLs()</source>
          <target state="translated">CertificateFactorySpi.engineGenerateCRLs()</target>
        </trans-unit>
        <trans-unit id="f8489ec6c8399e1868e4995ea83735466e6ff9df" translate="yes" xml:space="preserve">
          <source>CertificateFactorySpi.engineGenerateCertPath()</source>
          <target state="translated">CertificateFactorySpi.engineGenerateCertPath()</target>
        </trans-unit>
        <trans-unit id="363e5db18c2f75a2622fde8e37af4ca1c0a51c8c" translate="yes" xml:space="preserve">
          <source>CertificateFactorySpi.engineGenerateCertificate()</source>
          <target state="translated">CertificateFactorySpi.engineGenerateCertificate()</target>
        </trans-unit>
        <trans-unit id="cfb2cb14be5da0650bc43a90c0a8c07ab623117c" translate="yes" xml:space="preserve">
          <source>CertificateFactorySpi.engineGenerateCertificates()</source>
          <target state="translated">CertificateFactorySpi.engineGenerateCertificates()</target>
        </trans-unit>
        <trans-unit id="3022d99bdc2c9a43c6bb92d56d878f7cd646ea41" translate="yes" xml:space="preserve">
          <source>CertificateFactorySpi.engineGetCertPathEncodings()</source>
          <target state="translated">CertificateFactorySpi.engineGetCertPathEncodings()</target>
        </trans-unit>
        <trans-unit id="3c955f63c13faea7b2156ec6b2fef65d83fbc838" translate="yes" xml:space="preserve">
          <source>CertificateNotYetValidException</source>
          <target state="translated">CertificateNotYetValidException</target>
        </trans-unit>
        <trans-unit id="2038377bc2d002232de7b2348157777e62a9e003" translate="yes" xml:space="preserve">
          <source>CertificateParsingException</source>
          <target state="translated">CertificateParsingException</target>
        </trans-unit>
        <trans-unit id="e64fbe2024396544c96b61a383846f00e1614759" translate="yes" xml:space="preserve">
          <source>CertificateRep</source>
          <target state="translated">CertificateRep</target>
        </trans-unit>
        <trans-unit id="672ab8db11f0f8b003e4fe9300c3a2d3d79f704e" translate="yes" xml:space="preserve">
          <source>CertificateRevokedException</source>
          <target state="translated">CertificateRevokedException</target>
        </trans-unit>
        <trans-unit id="c139f462fd8ec0d19a9a514a9be6000f11a2b142" translate="yes" xml:space="preserve">
          <source>CertificateRevokedException.getAuthorityName()</source>
          <target state="translated">CertificateRevokedException.getAuthorityName()</target>
        </trans-unit>
        <trans-unit id="8c4a566d4b7f7aefff4af1a2aa69601945ddfb70" translate="yes" xml:space="preserve">
          <source>CertificateRevokedException.getExtensions()</source>
          <target state="translated">CertificateRevokedException.getExtensions()</target>
        </trans-unit>
        <trans-unit id="a0450a53bedc4b4de180a90daafcee64dc1303ac" translate="yes" xml:space="preserve">
          <source>CertificateRevokedException.getInvalidityDate()</source>
          <target state="translated">CertificateRevokedException.getInvalidityDate()</target>
        </trans-unit>
        <trans-unit id="64fd74552bd69c1184d494ea5a364ababc9f379b" translate="yes" xml:space="preserve">
          <source>CertificateRevokedException.getMessage()</source>
          <target state="translated">CertificateRevokedException.getMessage()</target>
        </trans-unit>
        <trans-unit id="2deefa963ce914914f3cc81cbe03a0e2248b5cdb" translate="yes" xml:space="preserve">
          <source>CertificateRevokedException.getRevocationDate()</source>
          <target state="translated">CertificateRevokedException.getRevocationDate()</target>
        </trans-unit>
        <trans-unit id="81e039c0b32f964ad4ff5c3a2857cd5d87f82bc0" translate="yes" xml:space="preserve">
          <source>CertificateRevokedException.getRevocationReason()</source>
          <target state="translated">CertificateRevokedException.getRevocationReason()</target>
        </trans-unit>
        <trans-unit id="fc39978474b0832c36565a7c051a7b2166cbdd07" translate="yes" xml:space="preserve">
          <source>Certificates are instantiated using a certificate factory. The following is an example of how to instantiate an X.509 certificate:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447d205fa15b71fc20d8c9cfde03ef002930c5b6" translate="yes" xml:space="preserve">
          <source>Change information: information about the change that triggered this event; usually service provider-specific or server-specific information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93dfa5cd554db83f91a697748597f4122e839540" translate="yes" xml:space="preserve">
          <source>Change the list of package names that will be used for finding BeanInfo classes. The behaviour of this method is undefined if parameter path is null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6125136ee10bd52242faf08d37c63db586a7c0e0" translate="yes" xml:space="preserve">
          <source>Change the list of package names that will be used for finding property editors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b1c558e800bdac0bd1af2cea862e35a0891bd1" translate="yes" xml:space="preserve">
          <source>Change the output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02fa033026e70dbf1ef00102ae51c0ee5cba45e" translate="yes" xml:space="preserve">
          <source>Changes a program (patch). This selects a specific instrument from the currently selected bank of instruments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aae3de3befcf11f0e6783217091698c3aa8bf17" translate="yes" xml:space="preserve">
          <source>Changes made to the interest sets of a selector's keys while a selection operation is in progress have no effect upon that operation; they will be seen by the next selection operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85bb27e952cab98b885735d1afdaa7f577e22716" translate="yes" xml:space="preserve">
          <source>Changes made to the resulting buffer will eventually be propagated to the file; they may or may not be made visible to other programs that have mapped the same file. (&lt;a href=&quot;filechannel.mapmode#READ_WRITE&quot;&gt;&lt;code&gt;MapMode.READ_WRITE&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf72cbfeb7c590eee3df0f0b9adb249415a8b549" translate="yes" xml:space="preserve">
          <source>Changes made to the resulting buffer will not be propagated to the file and will not be visible to other programs that have mapped the same file; instead, they will cause private copies of the modified portions of the buffer to be created. (&lt;a href=&quot;filechannel.mapmode#PRIVATE&quot;&gt;&lt;code&gt;MapMode.PRIVATE&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd4d58a08130396cda61b1a29dfc9b0b550b1ce1" translate="yes" xml:space="preserve">
          <source>Changes the &lt;code&gt;Pattern&lt;/code&gt; that this &lt;code&gt;Matcher&lt;/code&gt; uses to find matches with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebece60cc6ab19c8dbbcdd735bbd4f30d21a027" translate="yes" xml:space="preserve">
          <source>Changes the control value from the initial value to the final value linearly over the specified time period, specified in microseconds. This method returns without blocking; it does not wait for the shift to complete. An implementation should complete the operation within the time specified. The default implementation simply changes the value to the final value immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ad35a9e1563f6511e132b27671482101573cf7" translate="yes" xml:space="preserve">
          <source>Changes the daemon status of this thread group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91fa0f3e99835f72be1a55df890a06aab6faf0b7" translate="yes" xml:space="preserve">
          <source>Changes the name of this thread to be equal to the argument &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcbbe3b231a5779b21d34e8c69850b50d06da738" translate="yes" xml:space="preserve">
          <source>Changes the parse style to be case insensitive for the remainder of the formatter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2cd270794084366bb0611d322d5ae70a613ca2f" translate="yes" xml:space="preserve">
          <source>Changes the parse style to be case sensitive for the remainder of the formatter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53efbc6203a46c4bafe80db0f95945e01574c036" translate="yes" xml:space="preserve">
          <source>Changes the parse style to be lenient for the remainder of the formatter. Note that case sensitivity is set separately to this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106198a990a6f87f7db808bbeabd3f18d347fbb5" translate="yes" xml:space="preserve">
          <source>Changes the parse style to be strict for the remainder of the formatter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f101498d800824aee75f5a6ad9aa1805befedf" translate="yes" xml:space="preserve">
          <source>Changes the pitch offset for all notes on this channel. This affects all currently sounding notes as well as subsequent ones. (For pitch bend to cease, the value needs to be reset to the center position.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c28d9a5514f1fe34b3edfe3b5e10a7865208c90" translate="yes" xml:space="preserve">
          <source>Changes the priority of this thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd2133c691d60da586992eb89d51cba556dce88" translate="yes" xml:space="preserve">
          <source>Changes the program using bank and program (patch) numbers. It is possible that the underlying synthesizer does not support a specific bank, or program. In order to verify that a call to &lt;code&gt;programChange&lt;/code&gt; was successful, use &lt;code&gt;getProgram&lt;/code&gt; and &lt;code&gt;getController&lt;/code&gt;. Since banks are changed by way of control changes, you can verify the current bank with the following statement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bddf865673b0ea0947733f1e656a23eb5939b188" translate="yes" xml:space="preserve">
          <source>Changes this decoder's action for malformed-input errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d99c3f09d91aab10b9ddc8b05ddc847c200105" translate="yes" xml:space="preserve">
          <source>Changes this decoder's action for unmappable-character errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="014bcc4656370b3c80891b053d9683ff91eb0998" translate="yes" xml:space="preserve">
          <source>Changes this decoder's replacement value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c45a5622d62d99efa4aa8efc920ed1ea5a0ead5" translate="yes" xml:space="preserve">
          <source>Changes this encoder's action for malformed-input errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3705f2adeccecfea2d7255e338e5830161a6c91" translate="yes" xml:space="preserve">
          <source>Changes this encoder's action for unmappable-character errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8858d20de303fda69d8b2f9004e6b51902e87d8" translate="yes" xml:space="preserve">
          <source>Changes this encoder's replacement value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f4895787d69fc67b732fb81097677bb9ccf8e2" translate="yes" xml:space="preserve">
          <source>Changing the resolver fields only has an effect during parsing. Parsing a text string occurs in two phases. Phase 1 is a basic text parse according to the fields added to the builder. Phase 2 resolves the parsed field-value pairs into date and/or time objects. The resolver fields are used to filter the field-value pairs between phase 1 and 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f583a3cf14c92d4377914e6be69dbd67112acef" translate="yes" xml:space="preserve">
          <source>Changing the resolver style only has an effect during parsing. Parsing a text string occurs in two phases. Phase 1 is a basic text parse according to the fields added to the builder. Phase 2 resolves the parsed field-value pairs into date and/or time objects. The resolver style is used to control how phase 2, resolving, happens. See &lt;code&gt;ResolverStyle&lt;/code&gt; for more information on the options available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de149cd8606f45b32ce16e7b91f4588b906ab39" translate="yes" xml:space="preserve">
          <source>Changing the sample rate with this control does not affect the data line's audio format. Also note that whenever you change a sound's sample rate, a change in the sound's pitch results. For example, doubling the sample rate has the effect of doubling the frequencies in the sound's spectrum, which raises the pitch by an octave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="879f0b1bef59eeebf78cfd3a22f6f8077810cecf" translate="yes" xml:space="preserve">
          <source>Channel</source>
          <target state="translated">Channel</target>
        </trans-unit>
        <trans-unit id="516a1e12d69ea2aff88ea1a0ba5d388e0d9e662d" translate="yes" xml:space="preserve">
          <source>Channel.close()</source>
          <target state="translated">Channel.close()</target>
        </trans-unit>
        <trans-unit id="9e0825fb9b73d9ba913238784cf3b52a6eb1252b" translate="yes" xml:space="preserve">
          <source>Channel.isOpen()</source>
          <target state="translated">Channel.isOpen()</target>
        </trans-unit>
        <trans-unit id="18e03e2a37ba37df713f9665ef752fb8b40fc1e8" translate="yes" xml:space="preserve">
          <source>Channels</source>
          <target state="translated">Channels</target>
        </trans-unit>
        <trans-unit id="6655b722f78ae8628f9dbd0d8556f40b0e47047c" translate="yes" xml:space="preserve">
          <source>Channels are, in general, intended to be safe for multithreaded access as described in the specifications of the interfaces and classes that extend and implement this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6afb86ac2031960a02606d58ff261328b35c7c74" translate="yes" xml:space="preserve">
          <source>Channels of this type are safe for use by multiple concurrent threads though at most one accept operation can be outstanding at any time. If a thread initiates an accept operation before a previous accept operation has completed then an &lt;a href=&quot;acceptpendingexception&quot;&gt;&lt;code&gt;AcceptPendingException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fbb332f33b10fc3f1eedfcd04e74aa927a19a86" translate="yes" xml:space="preserve">
          <source>Channels of this type are safe for use by multiple concurrent threads. The &lt;a href=&quot;channel#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method may be invoked at any time, as specified by the &lt;a href=&quot;channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; interface. This causes all outstanding asynchronous operations on the channel to complete with the exception &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt;. Multiple read and write operations may be outstanding at the same time. When multiple read and write operations are outstanding then the ordering of the I/O operations, and the order that the completion handlers are invoked, is not specified; they are not, in particular, guaranteed to execute in the order that the operations were initiated. The &lt;a href=&quot;../bytebuffer&quot;&gt;&lt;code&gt;ByteBuffers&lt;/code&gt;&lt;/a&gt; used when reading or writing are not safe for use by multiple concurrent I/O operations. Furthermore, after an I/O operation is initiated then care should be taken to ensure that the buffer is not accessed until after the operation has completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39afa9c6ba24d9fd3efa9738f75d1bde68faa3d4" translate="yes" xml:space="preserve">
          <source>Channels of this type are safe for use by multiple concurrent threads. They support concurrent reading and writing, though at most one read operation and one write operation can be outstanding at any time. If a thread initiates a read operation before a previous read operation has completed then a &lt;a href=&quot;readpendingexception&quot;&gt;&lt;code&gt;ReadPendingException&lt;/code&gt;&lt;/a&gt; will be thrown. Similarly, an attempt to initiate a write operation before a previous write has completed will throw a &lt;a href=&quot;writependingexception&quot;&gt;&lt;code&gt;WritePendingException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d7fe820bf78db1277110719a888a0ff13080f5" translate="yes" xml:space="preserve">
          <source>Channels.newChannel()</source>
          <target state="translated">Channels.newChannel()</target>
        </trans-unit>
        <trans-unit id="ffa800b3cc81bc474ff2db87bee0b381c47d272f" translate="yes" xml:space="preserve">
          <source>Channels.newInputStream()</source>
          <target state="translated">Channels.newInputStream()</target>
        </trans-unit>
        <trans-unit id="4822c642139de52df189437f708996c7e94de568" translate="yes" xml:space="preserve">
          <source>Channels.newOutputStream()</source>
          <target state="translated">Channels.newOutputStream()</target>
        </trans-unit>
        <trans-unit id="69a924dc2735b59f4bc24727de63c9976a529882" translate="yes" xml:space="preserve">
          <source>Channels.newReader()</source>
          <target state="translated">Channels.newReader()</target>
        </trans-unit>
        <trans-unit id="e30f0e2bfcad9499595cef5011f6b40bbbcb3a86" translate="yes" xml:space="preserve">
          <source>Channels.newWriter()</source>
          <target state="translated">Channels.newWriter()</target>
        </trans-unit>
        <trans-unit id="6e16d34fe8e77c1e41d989233fd812a94fe21be4" translate="yes" xml:space="preserve">
          <source>Char buffers can be created either by &lt;a href=&quot;charbuffer#allocate-int-&quot;&gt;&lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, which allocates space for the buffer's content, by &lt;a href=&quot;charbuffer#wrap-char:A-&quot;&gt;&lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; an existing char array or string into a buffer, or by creating a &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;view&lt;/i&gt;&lt;/a&gt; of an existing byte buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2b9cbc21c35998b154bee432e74d1d0b796d5f" translate="yes" xml:space="preserve">
          <source>CharArrayReader</source>
          <target state="translated">CharArrayReader</target>
        </trans-unit>
        <trans-unit id="1ba9c3867e41d5e0a53e786545b5a222d704a033" translate="yes" xml:space="preserve">
          <source>CharArrayReader.close()</source>
          <target state="translated">CharArrayReader.close()</target>
        </trans-unit>
        <trans-unit id="a40af102b607744857dd2048459bcc966c93f785" translate="yes" xml:space="preserve">
          <source>CharArrayReader.mark()</source>
          <target state="translated">CharArrayReader.mark()</target>
        </trans-unit>
        <trans-unit id="a0d5a198e0bc392798fe3d2d38b8161a5b266283" translate="yes" xml:space="preserve">
          <source>CharArrayReader.markSupported()</source>
          <target state="translated">CharArrayReader.markSupported()</target>
        </trans-unit>
        <trans-unit id="845c531c795d72625f22572a6cdea51b04b533a0" translate="yes" xml:space="preserve">
          <source>CharArrayReader.read()</source>
          <target state="translated">CharArrayReader.read()</target>
        </trans-unit>
        <trans-unit id="3fc169d708e21dc2a2ad11bbbfb2be980e05b89c" translate="yes" xml:space="preserve">
          <source>CharArrayReader.ready()</source>
          <target state="translated">CharArrayReader.ready()</target>
        </trans-unit>
        <trans-unit id="75ea81c5d733661d2391937e119c74c8341b24ce" translate="yes" xml:space="preserve">
          <source>CharArrayReader.reset()</source>
          <target state="translated">CharArrayReader.reset()</target>
        </trans-unit>
        <trans-unit id="7e0c7c21850667d0091943e2ff647a614a1d54cb" translate="yes" xml:space="preserve">
          <source>CharArrayReader.skip()</source>
          <target state="translated">CharArrayReader.skip()</target>
        </trans-unit>
        <trans-unit id="d00162bf11b2b776f9e4a102a373af23aad77788" translate="yes" xml:space="preserve">
          <source>CharArrayWriter</source>
          <target state="translated">CharArrayWriter</target>
        </trans-unit>
        <trans-unit id="4b43993335e51a05ccda1f5a37aa036e4127ddee" translate="yes" xml:space="preserve">
          <source>CharArrayWriter.append()</source>
          <target state="translated">CharArrayWriter.append()</target>
        </trans-unit>
        <trans-unit id="3c1e29383dafe2f0c17e94991b37aa5fabc82aeb" translate="yes" xml:space="preserve">
          <source>CharArrayWriter.close()</source>
          <target state="translated">CharArrayWriter.close()</target>
        </trans-unit>
        <trans-unit id="472c1dfd9cda6d032da8bb71e0b8113ab10c02a5" translate="yes" xml:space="preserve">
          <source>CharArrayWriter.flush()</source>
          <target state="translated">CharArrayWriter.flush()</target>
        </trans-unit>
        <trans-unit id="3ac0563cb511a08aa9d5e989dfd8a2f099bc1b70" translate="yes" xml:space="preserve">
          <source>CharArrayWriter.reset()</source>
          <target state="translated">CharArrayWriter.reset()</target>
        </trans-unit>
        <trans-unit id="f15e69cecbc6f7ea173cfe8105bb462c17e474c5" translate="yes" xml:space="preserve">
          <source>CharArrayWriter.size()</source>
          <target state="translated">CharArrayWriter.size()</target>
        </trans-unit>
        <trans-unit id="e2cecb90e0e8467f792a84876b410f8c6cfdc1e9" translate="yes" xml:space="preserve">
          <source>CharArrayWriter.toCharArray()</source>
          <target state="translated">CharArrayWriter.toCharArray()</target>
        </trans-unit>
        <trans-unit id="e7a12e54e52f0d1792caadc1245a434bdb0f609f" translate="yes" xml:space="preserve">
          <source>CharArrayWriter.toString()</source>
          <target state="translated">CharArrayWriter.toString()</target>
        </trans-unit>
        <trans-unit id="e6903c4620ba7fd67d317e89934faa25a458e4b7" translate="yes" xml:space="preserve">
          <source>CharArrayWriter.write()</source>
          <target state="translated">CharArrayWriter.write()</target>
        </trans-unit>
        <trans-unit id="bbceefcda5ca2a3439e7eb5f02062eb7746189bb" translate="yes" xml:space="preserve">
          <source>CharArrayWriter.writeTo()</source>
          <target state="translated">CharArrayWriter.writeTo()</target>
        </trans-unit>
        <trans-unit id="1029d1073715d0c2874bb05515b41e266c15b911" translate="yes" xml:space="preserve">
          <source>CharBuffer</source>
          <target state="translated">CharBuffer</target>
        </trans-unit>
        <trans-unit id="00903cac7338ab7836bbecc061311b497a2c83d2" translate="yes" xml:space="preserve">
          <source>CharBuffer.allocate()</source>
          <target state="translated">CharBuffer.allocate()</target>
        </trans-unit>
        <trans-unit id="903fd20471007981f3adba83f8d7c33e013d5c35" translate="yes" xml:space="preserve">
          <source>CharBuffer.append()</source>
          <target state="translated">CharBuffer.append()</target>
        </trans-unit>
        <trans-unit id="da24f204de3b762b8560d48d387ab284d560b399" translate="yes" xml:space="preserve">
          <source>CharBuffer.array()</source>
          <target state="translated">CharBuffer.array()</target>
        </trans-unit>
        <trans-unit id="944c4e6e1a6f24dcf88c3c6d18b07a23b26f7729" translate="yes" xml:space="preserve">
          <source>CharBuffer.arrayOffset()</source>
          <target state="translated">CharBuffer.arrayOffset()</target>
        </trans-unit>
        <trans-unit id="afbd2c74d3362fac9862de26b69e0155bbe4fa3b" translate="yes" xml:space="preserve">
          <source>CharBuffer.asReadOnlyBuffer()</source>
          <target state="translated">CharBuffer.asReadOnlyBuffer()</target>
        </trans-unit>
        <trans-unit id="563b5912512d3985732d914e3f0c2d2fd71ffd76" translate="yes" xml:space="preserve">
          <source>CharBuffer.charAt()</source>
          <target state="translated">CharBuffer.charAt()</target>
        </trans-unit>
        <trans-unit id="d64ec2ae3c258a7e7cfdbaf42b5f74ad56b8d06e" translate="yes" xml:space="preserve">
          <source>CharBuffer.chars()</source>
          <target state="translated">CharBuffer.chars()</target>
        </trans-unit>
        <trans-unit id="c981c236c2af6c68c0a9097eac9bae2eaa9291fd" translate="yes" xml:space="preserve">
          <source>CharBuffer.compact()</source>
          <target state="translated">CharBuffer.compact()</target>
        </trans-unit>
        <trans-unit id="a8b98bc53ff44786c4aa5fcbb90a806a5bf38241" translate="yes" xml:space="preserve">
          <source>CharBuffer.compareTo()</source>
          <target state="translated">CharBuffer.compareTo()</target>
        </trans-unit>
        <trans-unit id="e2f4e69651f71b5a23fa7e32c48632aff81474b0" translate="yes" xml:space="preserve">
          <source>CharBuffer.duplicate()</source>
          <target state="translated">CharBuffer.duplicate()</target>
        </trans-unit>
        <trans-unit id="478540c7bfff4ca7e98c4c0e748d83bebd5fa315" translate="yes" xml:space="preserve">
          <source>CharBuffer.equals()</source>
          <target state="translated">CharBuffer.equals()</target>
        </trans-unit>
        <trans-unit id="2649ede2de09701522ccb19f30497508b2ff2854" translate="yes" xml:space="preserve">
          <source>CharBuffer.get()</source>
          <target state="translated">CharBuffer.get()</target>
        </trans-unit>
        <trans-unit id="d05c3323edab8e40c2bc12bb77ea9d1fb9fd8c80" translate="yes" xml:space="preserve">
          <source>CharBuffer.hasArray()</source>
          <target state="translated">CharBuffer.hasArray()</target>
        </trans-unit>
        <trans-unit id="9d8f370ab21afa0c1742e848042234e2b82e3e14" translate="yes" xml:space="preserve">
          <source>CharBuffer.hashCode()</source>
          <target state="translated">CharBuffer.hashCode()</target>
        </trans-unit>
        <trans-unit id="aa473f1b266f7699318d325f5957c67f73ffaf6a" translate="yes" xml:space="preserve">
          <source>CharBuffer.isDirect()</source>
          <target state="translated">CharBuffer.isDirect()</target>
        </trans-unit>
        <trans-unit id="a2a2bafa5676944d755d6f0f1a952e1a74b67a3b" translate="yes" xml:space="preserve">
          <source>CharBuffer.length()</source>
          <target state="translated">CharBuffer.length()</target>
        </trans-unit>
        <trans-unit id="6d860a340f8f9f338f5191ca952c8f52c150961e" translate="yes" xml:space="preserve">
          <source>CharBuffer.order()</source>
          <target state="translated">CharBuffer.order()</target>
        </trans-unit>
        <trans-unit id="95660430c7eb23292cff4c29baa635a893fc5c39" translate="yes" xml:space="preserve">
          <source>CharBuffer.put()</source>
          <target state="translated">CharBuffer.put()</target>
        </trans-unit>
        <trans-unit id="16dd9992ede531b2c7a2ba0ff094f0db11b75fbd" translate="yes" xml:space="preserve">
          <source>CharBuffer.read()</source>
          <target state="translated">CharBuffer.read()</target>
        </trans-unit>
        <trans-unit id="8183aaaafcf33361acfda19b47609f8f1715b476" translate="yes" xml:space="preserve">
          <source>CharBuffer.slice()</source>
          <target state="translated">CharBuffer.slice()</target>
        </trans-unit>
        <trans-unit id="8747ef7a21bd36ff8bd7e25a2c51a60aa1a57d7f" translate="yes" xml:space="preserve">
          <source>CharBuffer.subSequence()</source>
          <target state="translated">CharBuffer.subSequence()</target>
        </trans-unit>
        <trans-unit id="dcc1b3b0a0a5b9e9996cf9c254283ca6b182e667" translate="yes" xml:space="preserve">
          <source>CharBuffer.toString()</source>
          <target state="translated">CharBuffer.toString()</target>
        </trans-unit>
        <trans-unit id="01817ca98fd9d3d39cc6bff0c1981eec5ce4f4d9" translate="yes" xml:space="preserve">
          <source>CharBuffer.wrap()</source>
          <target state="translated">CharBuffer.wrap()</target>
        </trans-unit>
        <trans-unit id="24e38ec54657df7ec1808f381d4274b84c2e66e5" translate="yes" xml:space="preserve">
          <source>CharConversionException</source>
          <target state="translated">CharConversionException</target>
        </trans-unit>
        <trans-unit id="ee352e16ffeb4d6a086bccab16f296b15acb8cc9" translate="yes" xml:space="preserve">
          <source>CharSequence</source>
          <target state="translated">CharSequence</target>
        </trans-unit>
        <trans-unit id="87f7924c21220b33effe73bc82773f6382abb38b" translate="yes" xml:space="preserve">
          <source>CharSequence.charAt()</source>
          <target state="translated">CharSequence.charAt()</target>
        </trans-unit>
        <trans-unit id="034421c79ef112c149ee6d8e71bac2b12f3ddbe2" translate="yes" xml:space="preserve">
          <source>CharSequence.chars()</source>
          <target state="translated">CharSequence.chars()</target>
        </trans-unit>
        <trans-unit id="2188f1aecddb5b5bf731ce9e31e0cd9af9ea4f72" translate="yes" xml:space="preserve">
          <source>CharSequence.codePoints()</source>
          <target state="translated">CharSequence.codePoints()</target>
        </trans-unit>
        <trans-unit id="e3b9fa5c8799cfcbeaae2e1645cb1a9f73a83884" translate="yes" xml:space="preserve">
          <source>CharSequence.length()</source>
          <target state="translated">CharSequence.length()</target>
        </trans-unit>
        <trans-unit id="edb8f4e51c504aafb99230bfbb32727cd432145b" translate="yes" xml:space="preserve">
          <source>CharSequence.subSequence()</source>
          <target state="translated">CharSequence.subSequence()</target>
        </trans-unit>
        <trans-unit id="562834ae27f414b69a4579fc26c07fe1d8f2cce9" translate="yes" xml:space="preserve">
          <source>CharSequence.toString()</source>
          <target state="translated">CharSequence.toString()</target>
        </trans-unit>
        <trans-unit id="ee9946c82d4a077c5be79e3015a3d2479d9fcaf2" translate="yes" xml:space="preserve">
          <source>Character</source>
          <target state="translated">Character</target>
        </trans-unit>
        <trans-unit id="89a0d26064c88761be4481b9b52065531e5e024c" translate="yes" xml:space="preserve">
          <source>Character Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f67a848f6294b1692cf5231f1d0f0b0180be08" translate="yes" xml:space="preserve">
          <source>Character Encodings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b7d0281fb028bb82d6618817f12d97dead35bf" translate="yes" xml:space="preserve">
          <source>Character array (&lt;code&gt;char[]&lt;/code&gt;) -- The print data consists of the Unicode characters in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468d926a2b9e29636ce21d2050d35c0d7a3e921f" translate="yes" xml:space="preserve">
          <source>Character boundary analysis allows users to interact with characters as they expect to, for example, when moving the cursor through a text string. Character boundary analysis provides correct navigation through character strings, regardless of how the character is stored. The boundaries returned may be those of supplementary characters, combining character sequences, or ligature clusters. For example, an accented character might be stored as a base character and a diacritical mark. What users consider to be a character can differ between languages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52bddd7651325b5723210ba240eadba189ac5bd" translate="yes" xml:space="preserve">
          <source>Character case is ignored for all of the valid script names. The en_US locale's case mapping rules are used to provide case-insensitive string comparisons for script name validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e18862c91bf659118e5879bedb7b3202a782dcd" translate="yes" xml:space="preserve">
          <source>Character categories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf238be65bb5e7ebb05fdca2c63f71cc0a076a1a" translate="yes" xml:space="preserve">
          <source>Character classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5010441e10adb951ba98a20af867641166eeb19" translate="yes" xml:space="preserve">
          <source>Character classes may appear within other character classes, and may be composed by the union operator (implicit) and the intersection operator (&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;). The union operator denotes a class that contains every character that is in at least one of its operand classes. The intersection operator denotes a class that contains every character that is in both of its operand classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9842809ccaf3354a0b83f6dce95956a05ad52e" translate="yes" xml:space="preserve">
          <source>Character information is based on the Unicode Standard, version 6.2.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6776e9a8ee58b2629f90927c75825281f8b251f8" translate="yes" xml:space="preserve">
          <source>Character stream (&lt;a href=&quot;../../java/io/reader&quot;&gt;&lt;code&gt;java.io.Reader&lt;/code&gt;&lt;/a&gt;) -- The print data consists of the Unicode characters read from the stream up to the end-of-stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2487d50a62e90c48565915aa4264a193d33e90" translate="yes" xml:space="preserve">
          <source>Character-class union and intersection as described &lt;a href=&quot;#cc&quot;&gt;above&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfc785e0ec11292400ee4fb66a0ff2c814be3f8" translate="yes" xml:space="preserve">
          <source>Character.Subset</source>
          <target state="translated">Character.Subset</target>
        </trans-unit>
        <trans-unit id="06ba78ebd376020a85a7f40ea13ab9d6d275d858" translate="yes" xml:space="preserve">
          <source>Character.Subset.equals()</source>
          <target state="translated">Character.Subset.equals()</target>
        </trans-unit>
        <trans-unit id="f5f4f2d784b6dde7123a306249d8a3c4096c18fc" translate="yes" xml:space="preserve">
          <source>Character.Subset.hashCode()</source>
          <target state="translated">Character.Subset.hashCode()</target>
        </trans-unit>
        <trans-unit id="2e969b7424212d8ed969ac5c6ddb1e46baa3e27d" translate="yes" xml:space="preserve">
          <source>Character.Subset.toString()</source>
          <target state="translated">Character.Subset.toString()</target>
        </trans-unit>
        <trans-unit id="20e6f16b08830b3e30ba9ed5d1cb75923d70318b" translate="yes" xml:space="preserve">
          <source>Character.UnicodeBlock</source>
          <target state="translated">Character.UnicodeBlock</target>
        </trans-unit>
        <trans-unit id="c8f0f6a15254511113ae4f83b94922948809f76e" translate="yes" xml:space="preserve">
          <source>Character.UnicodeBlock.forName()</source>
          <target state="translated">Character.UnicodeBlock.forName()</target>
        </trans-unit>
        <trans-unit id="a2ae0680ae8a524edd81d1ebde8fe9089735699d" translate="yes" xml:space="preserve">
          <source>Character.UnicodeBlock.of()</source>
          <target state="translated">Character.UnicodeBlock.of()</target>
        </trans-unit>
        <trans-unit id="c0443618787091762b1febd8f3e838003073a2d9" translate="yes" xml:space="preserve">
          <source>Character.UnicodeScript</source>
          <target state="translated">Character.UnicodeScript</target>
        </trans-unit>
        <trans-unit id="998279b9d3e29a565ce76f2ef208af25e7dfbd8f" translate="yes" xml:space="preserve">
          <source>Character.UnicodeScript.forName()</source>
          <target state="translated">Character.UnicodeScript.forName()</target>
        </trans-unit>
        <trans-unit id="b51174ca17fb27e666567a1a9e510b60243660ee" translate="yes" xml:space="preserve">
          <source>Character.UnicodeScript.of()</source>
          <target state="translated">Character.UnicodeScript.of()</target>
        </trans-unit>
        <trans-unit id="07a77be2ba1c745c420b7ec0f99e7a05e957e063" translate="yes" xml:space="preserve">
          <source>Character.UnicodeScript.valueOf()</source>
          <target state="translated">Character.UnicodeScript.valueOf()</target>
        </trans-unit>
        <trans-unit id="7c4c69da3c47ee8983b52c8c3f003b059c03d02c" translate="yes" xml:space="preserve">
          <source>Character.UnicodeScript.values()</source>
          <target state="translated">Character.UnicodeScript.values()</target>
        </trans-unit>
        <trans-unit id="949998819a4522b74474bbcec1a22589f0c1a5b8" translate="yes" xml:space="preserve">
          <source>Character.charCount()</source>
          <target state="translated">Character.charCount()</target>
        </trans-unit>
        <trans-unit id="745ea961dd09cc2fa365f2ca4a0c995411b4eea5" translate="yes" xml:space="preserve">
          <source>Character.charValue()</source>
          <target state="translated">Character.charValue()</target>
        </trans-unit>
        <trans-unit id="d310d24d3064def2e10671c64950ea8fe49ce4db" translate="yes" xml:space="preserve">
          <source>Character.codePointAt()</source>
          <target state="translated">Character.codePointAt()</target>
        </trans-unit>
        <trans-unit id="208a81760c01c48282aeb5cf25569d7b8ee744df" translate="yes" xml:space="preserve">
          <source>Character.codePointBefore()</source>
          <target state="translated">Character.codePointBefore()</target>
        </trans-unit>
        <trans-unit id="26f6acd289e4220bcc361b6278f233c7aa8ee982" translate="yes" xml:space="preserve">
          <source>Character.codePointCount()</source>
          <target state="translated">Character.codePointCount()</target>
        </trans-unit>
        <trans-unit id="53db6ee24c4f70c8553f1f60cd4b5c5381196dd6" translate="yes" xml:space="preserve">
          <source>Character.compare()</source>
          <target state="translated">Character.compare()</target>
        </trans-unit>
        <trans-unit id="fda932f59f1a755b376fa4c119000387d947c644" translate="yes" xml:space="preserve">
          <source>Character.compareTo()</source>
          <target state="translated">Character.compareTo()</target>
        </trans-unit>
        <trans-unit id="dca0a7a6f866f0715a0606e59b3295027f2a2273" translate="yes" xml:space="preserve">
          <source>Character.digit()</source>
          <target state="translated">Character.digit()</target>
        </trans-unit>
        <trans-unit id="67121e44f79b7275abd38670134f372d540118b4" translate="yes" xml:space="preserve">
          <source>Character.equals()</source>
          <target state="translated">Character.equals()</target>
        </trans-unit>
        <trans-unit id="82d52c42541f1527043fc545e3daa14292250b49" translate="yes" xml:space="preserve">
          <source>Character.forDigit()</source>
          <target state="translated">Character.forDigit()</target>
        </trans-unit>
        <trans-unit id="b321019ee8ef7fca10538ec5e85041ffdb90a4d0" translate="yes" xml:space="preserve">
          <source>Character.getDirectionality()</source>
          <target state="translated">Character.getDirectionality()</target>
        </trans-unit>
        <trans-unit id="cbe11dc3f7101c27812a2216ede15e9b3e31aee7" translate="yes" xml:space="preserve">
          <source>Character.getName()</source>
          <target state="translated">Character.getName()</target>
        </trans-unit>
        <trans-unit id="21b5a14df7b51bd991e09d0629ec19b3cc738d65" translate="yes" xml:space="preserve">
          <source>Character.getNumericValue()</source>
          <target state="translated">Character.getNumericValue()</target>
        </trans-unit>
        <trans-unit id="d1c3464290431d4e6e374d19c5e6005cb645e13b" translate="yes" xml:space="preserve">
          <source>Character.getType()</source>
          <target state="translated">Character.getType()</target>
        </trans-unit>
        <trans-unit id="d77f08cd2d50ba52184a5f5c5b87fe008cb5c0da" translate="yes" xml:space="preserve">
          <source>Character.hashCode()</source>
          <target state="translated">Character.hashCode()</target>
        </trans-unit>
        <trans-unit id="f03c5fe5059967199100aa3b02803fd5943bbd55" translate="yes" xml:space="preserve">
          <source>Character.highSurrogate()</source>
          <target state="translated">Character.highSurrogate()</target>
        </trans-unit>
        <trans-unit id="c91b539b2baad332c0228cac81387f064edeacc2" translate="yes" xml:space="preserve">
          <source>Character.isAlphabetic()</source>
          <target state="translated">Character.isAlphabetic()</target>
        </trans-unit>
        <trans-unit id="11bd208916d1594beb454bd8b7cc8198c8c2fa25" translate="yes" xml:space="preserve">
          <source>Character.isBmpCodePoint()</source>
          <target state="translated">Character.isBmpCodePoint()</target>
        </trans-unit>
        <trans-unit id="d1e6f7877831abc77986ef81e7975bcc667331a5" translate="yes" xml:space="preserve">
          <source>Character.isDefined()</source>
          <target state="translated">Character.isDefined()</target>
        </trans-unit>
        <trans-unit id="8b2b379ba6a65791821f20dd68a231920776f974" translate="yes" xml:space="preserve">
          <source>Character.isDigit()</source>
          <target state="translated">Character.isDigit()</target>
        </trans-unit>
        <trans-unit id="62e14452093baf0c2e79c0a770e3f236705801c1" translate="yes" xml:space="preserve">
          <source>Character.isHighSurrogate()</source>
          <target state="translated">Character.isHighSurrogate()</target>
        </trans-unit>
        <trans-unit id="ed4409aa736bbf9af69c74650ca42f87494593dc" translate="yes" xml:space="preserve">
          <source>Character.isISOControl()</source>
          <target state="translated">Character.isISOControl()</target>
        </trans-unit>
        <trans-unit id="1a9dc86bac860db740e2a0a97f1a322efb81486c" translate="yes" xml:space="preserve">
          <source>Character.isIdentifierIgnorable()</source>
          <target state="translated">Character.isIdentifierIgnorable()</target>
        </trans-unit>
        <trans-unit id="2b622dd96f5b08e08cccd9016753f93b3e917df3" translate="yes" xml:space="preserve">
          <source>Character.isIdeographic()</source>
          <target state="translated">Character.isIdeographic()</target>
        </trans-unit>
        <trans-unit id="1d7558d7390d105db07f33cb0b98e5c80749b533" translate="yes" xml:space="preserve">
          <source>Character.isJavaIdentifierPart()</source>
          <target state="translated">Character.isJavaIdentifierPart()</target>
        </trans-unit>
        <trans-unit id="90f61937ebc8e3d6e7b1ec31cda50e062eb5854b" translate="yes" xml:space="preserve">
          <source>Character.isJavaIdentifierStart()</source>
          <target state="translated">Character.isJavaIdentifierStart()</target>
        </trans-unit>
        <trans-unit id="6e849c142d2861efc43088a1a70b8af286e44fff" translate="yes" xml:space="preserve">
          <source>Character.isJavaLetter()</source>
          <target state="translated">Character.isJavaLetter()</target>
        </trans-unit>
        <trans-unit id="e501814cb4f18cbd1cd2b7e7656e571316384101" translate="yes" xml:space="preserve">
          <source>Character.isJavaLetterOrDigit()</source>
          <target state="translated">Character.isJavaLetterOrDigit()</target>
        </trans-unit>
        <trans-unit id="d2e93c98bf3f76fe779fa26ac32b28a239db97db" translate="yes" xml:space="preserve">
          <source>Character.isLetter()</source>
          <target state="translated">Character.isLetter()</target>
        </trans-unit>
        <trans-unit id="aeaa60ba8d3438fa8176943004641dfe08241385" translate="yes" xml:space="preserve">
          <source>Character.isLetterOrDigit()</source>
          <target state="translated">Character.isLetterOrDigit()</target>
        </trans-unit>
        <trans-unit id="5ebed19a5df22f34c169dd8b8f060ce9841a5119" translate="yes" xml:space="preserve">
          <source>Character.isLowSurrogate()</source>
          <target state="translated">Character.isLowSurrogate()</target>
        </trans-unit>
        <trans-unit id="8d737c80b384449e1a2bececfc04c881c02cc58e" translate="yes" xml:space="preserve">
          <source>Character.isLowerCase()</source>
          <target state="translated">Character.isLowerCase()</target>
        </trans-unit>
        <trans-unit id="ba6d1418b0a60239c794d8fcf9b4c38929374945" translate="yes" xml:space="preserve">
          <source>Character.isMirrored()</source>
          <target state="translated">Character.isMirrored()</target>
        </trans-unit>
        <trans-unit id="b489ba7c800dd0b825fbee37ca52ebf90d817246" translate="yes" xml:space="preserve">
          <source>Character.isSpace()</source>
          <target state="translated">Character.isSpace()</target>
        </trans-unit>
        <trans-unit id="b4b820a59aad5d9de9520cb53892a9d80f4a1793" translate="yes" xml:space="preserve">
          <source>Character.isSpaceChar()</source>
          <target state="translated">Character.isSpaceChar()</target>
        </trans-unit>
        <trans-unit id="77b49752a38743d091e6d6a7f733266c3d3b26b9" translate="yes" xml:space="preserve">
          <source>Character.isSupplementaryCodePoint()</source>
          <target state="translated">Character.isSupplementaryCodePoint()</target>
        </trans-unit>
        <trans-unit id="de3d7ce400d466566e1130b94133af18dcce150e" translate="yes" xml:space="preserve">
          <source>Character.isSurrogate()</source>
          <target state="translated">Character.isSurrogate()</target>
        </trans-unit>
        <trans-unit id="4580fc650298b0b9707ada3aa8357ca2c2ff221e" translate="yes" xml:space="preserve">
          <source>Character.isSurrogatePair()</source>
          <target state="translated">Character.isSurrogatePair()</target>
        </trans-unit>
        <trans-unit id="82e805c8295a7f91349ab39663a9e8fae42063b7" translate="yes" xml:space="preserve">
          <source>Character.isTitleCase()</source>
          <target state="translated">Character.isTitleCase()</target>
        </trans-unit>
        <trans-unit id="35516346e057e0482b21d2d44f6ac488ae4b5147" translate="yes" xml:space="preserve">
          <source>Character.isUnicodeIdentifierPart()</source>
          <target state="translated">Character.isUnicodeIdentifierPart()</target>
        </trans-unit>
        <trans-unit id="e2a3b2fb303a85fe624c6283995424995d2e9a55" translate="yes" xml:space="preserve">
          <source>Character.isUnicodeIdentifierStart()</source>
          <target state="translated">Character.isUnicodeIdentifierStart()</target>
        </trans-unit>
        <trans-unit id="11f1a602a99087b82c4f84dc2cedbb7e020cd790" translate="yes" xml:space="preserve">
          <source>Character.isUpperCase()</source>
          <target state="translated">Character.isUpperCase()</target>
        </trans-unit>
        <trans-unit id="38146be7c1b0afa7fc3acc360ae0b5efbca50a50" translate="yes" xml:space="preserve">
          <source>Character.isValidCodePoint()</source>
          <target state="translated">Character.isValidCodePoint()</target>
        </trans-unit>
        <trans-unit id="a73fc0dd330e2572b6cef9fb363efbdb8328ccdb" translate="yes" xml:space="preserve">
          <source>Character.isWhitespace()</source>
          <target state="translated">Character.isWhitespace()</target>
        </trans-unit>
        <trans-unit id="274d10e5afd5e46aae73eb903cbd3d20da163492" translate="yes" xml:space="preserve">
          <source>Character.lowSurrogate()</source>
          <target state="translated">Character.lowSurrogate()</target>
        </trans-unit>
        <trans-unit id="4f3707059ab494acc28ed65d5536e1157bff06ff" translate="yes" xml:space="preserve">
          <source>Character.offsetByCodePoints()</source>
          <target state="translated">Character.offsetByCodePoints()</target>
        </trans-unit>
        <trans-unit id="1f75b5d40c17acf44431417109b3b121b02517b5" translate="yes" xml:space="preserve">
          <source>Character.reverseBytes()</source>
          <target state="translated">Character.reverseBytes()</target>
        </trans-unit>
        <trans-unit id="a9dc6cb3f42a2f822174f8810b1d41bb3864a8e3" translate="yes" xml:space="preserve">
          <source>Character.toChars()</source>
          <target state="translated">Character.toChars()</target>
        </trans-unit>
        <trans-unit id="49c7d9228af641116b6230c3e2b9a0217f854e92" translate="yes" xml:space="preserve">
          <source>Character.toCodePoint()</source>
          <target state="translated">Character.toCodePoint()</target>
        </trans-unit>
        <trans-unit id="36a06bc84e6239a64410bf988f18753b05edaf7c" translate="yes" xml:space="preserve">
          <source>Character.toLowerCase()</source>
          <target state="translated">Character.toLowerCase()</target>
        </trans-unit>
        <trans-unit id="841350dd5396a85c90d6a6fbd0fb9f93660ce9fd" translate="yes" xml:space="preserve">
          <source>Character.toString()</source>
          <target state="translated">Character.toString()</target>
        </trans-unit>
        <trans-unit id="1061539577aab0c45c67a1fb83a0fc354ea3cf92" translate="yes" xml:space="preserve">
          <source>Character.toTitleCase()</source>
          <target state="translated">Character.toTitleCase()</target>
        </trans-unit>
        <trans-unit id="a160711dd59a6fd4d0ccbf083fd207541ef13c48" translate="yes" xml:space="preserve">
          <source>Character.toUpperCase()</source>
          <target state="translated">Character.toUpperCase()</target>
        </trans-unit>
        <trans-unit id="9eb6b1e7920ec0d50d3b6820bb0544d118b85147" translate="yes" xml:space="preserve">
          <source>Character.valueOf()</source>
          <target state="translated">Character.valueOf()</target>
        </trans-unit>
        <trans-unit id="fadd9e5c9325f42cc90e4dcfd5e60c57c2fbe46a" translate="yes" xml:space="preserve">
          <source>CharacterCodingException</source>
          <target state="translated">CharacterCodingException</target>
        </trans-unit>
        <trans-unit id="252662b081a120efecd52d0319a5729533957d98" translate="yes" xml:space="preserve">
          <source>CharacterIterator</source>
          <target state="translated">CharacterIterator</target>
        </trans-unit>
        <trans-unit id="757f04859c2a7de8944b3184a28edbf51c5c0d2a" translate="yes" xml:space="preserve">
          <source>CharacterIterator.clone()</source>
          <target state="translated">CharacterIterator.clone()</target>
        </trans-unit>
        <trans-unit id="ca08301fd03186c897a6069a145980001630b810" translate="yes" xml:space="preserve">
          <source>CharacterIterator.current()</source>
          <target state="translated">CharacterIterator.current()</target>
        </trans-unit>
        <trans-unit id="e5ada2b11ae5be078defc0cd4b13c28dd8a71f37" translate="yes" xml:space="preserve">
          <source>CharacterIterator.first()</source>
          <target state="translated">CharacterIterator.first()</target>
        </trans-unit>
        <trans-unit id="fbc61a749d1a79cbf50557db1049c8248907e939" translate="yes" xml:space="preserve">
          <source>CharacterIterator.getBeginIndex()</source>
          <target state="translated">CharacterIterator.getBeginIndex()</target>
        </trans-unit>
        <trans-unit id="dab98b73a6cc01c6e979d51025611671bd6c6a9a" translate="yes" xml:space="preserve">
          <source>CharacterIterator.getEndIndex()</source>
          <target state="translated">CharacterIterator.getEndIndex()</target>
        </trans-unit>
        <trans-unit id="16e12dbd4471b9b9bff3621a2ad52240fd6ac6bf" translate="yes" xml:space="preserve">
          <source>CharacterIterator.getIndex()</source>
          <target state="translated">CharacterIterator.getIndex()</target>
        </trans-unit>
        <trans-unit id="b7cf2b36bb35822df3be6e5dc58e1a84bec1d92e" translate="yes" xml:space="preserve">
          <source>CharacterIterator.last()</source>
          <target state="translated">CharacterIterator.last()</target>
        </trans-unit>
        <trans-unit id="fe5bac90ae6b32cf6f1e33b6e107a789851df9ad" translate="yes" xml:space="preserve">
          <source>CharacterIterator.next()</source>
          <target state="translated">CharacterIterator.next()</target>
        </trans-unit>
        <trans-unit id="7254477e7d427bafba2056880c2bf6ac661cf120" translate="yes" xml:space="preserve">
          <source>CharacterIterator.previous()</source>
          <target state="translated">CharacterIterator.previous()</target>
        </trans-unit>
        <trans-unit id="4c230650245f950e445e29a3741fb526e7a90c5c" translate="yes" xml:space="preserve">
          <source>CharacterIterator.setIndex()</source>
          <target state="translated">CharacterIterator.setIndex()</target>
        </trans-unit>
        <trans-unit id="25647b7c41399582c80791af3e9bbd57fa51e588" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that all Spliterators resulting from &lt;code&gt;trySplit()&lt;/code&gt; will be both &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;SUBSIZED&lt;/code&gt;&lt;/a&gt;. (This means that all child Spliterators, whether direct or indirect, will be &lt;code&gt;SIZED&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9e5dc497e3ef6af851d1751d4b0c181d724492" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that an encounter order is defined for elements. If so, this Spliterator guarantees that method &lt;a href=&quot;spliterator#trySplit--&quot;&gt;&lt;code&gt;trySplit()&lt;/code&gt;&lt;/a&gt; splits a strict prefix of elements, that method &lt;a href=&quot;spliterator#tryAdvance-java.util.function.Consumer-&quot;&gt;&lt;code&gt;tryAdvance(java.util.function.Consumer&amp;lt;? super T&amp;gt;)&lt;/code&gt;&lt;/a&gt; steps by one element in prefix order, and that &lt;a href=&quot;spliterator#forEachRemaining-java.util.function.Consumer-&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.Consumer&amp;lt;? super T&amp;gt;)&lt;/code&gt;&lt;/a&gt; performs actions in encounter order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5771be6523f46100f6ba74d36bfcc4d6790f259e" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that encounter order follows a defined sort order. If so, method &lt;a href=&quot;spliterator#getComparator--&quot;&gt;&lt;code&gt;getComparator()&lt;/code&gt;&lt;/a&gt; returns the associated Comparator, or &lt;code&gt;null&lt;/code&gt; if all elements are &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; and are sorted by their natural ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa188682ff2c5dbac61691da79bc2cd97eb32087" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that the element source cannot be structurally modified; that is, elements cannot be added, replaced, or removed, so such changes cannot occur during traversal. A Spliterator that does not report &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt; is expected to have a documented policy (for example throwing &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;) concerning structural interference detected during traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac64860caac07766daea65ae06ea0b7cd87edd9b" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that the element source may be safely concurrently modified (allowing additions, replacements, and/or removals) by multiple threads without external synchronization. If so, the Spliterator is expected to have a documented policy concerning the impact of modifications during traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84876701be5ee1769215e78fba2feadf7782ce4a" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that the source guarantees that encountered elements will not be &lt;code&gt;null&lt;/code&gt;. (This applies, for example, to most concurrent collections, queues, and maps.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4104a6b88ef74bedc2fe7bad391ef6cbe52798d0" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that the value returned from &lt;code&gt;estimateSize()&lt;/code&gt; prior to traversal or splitting represents a finite size that, in the absence of structural source modification, represents an exact count of the number of elements that would be encountered by a complete traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc273c120f69a86de8aa8c0daa424100b8da1f7d" translate="yes" xml:space="preserve">
          <source>Characteristic value signifying that, for each pair of encountered elements &lt;code&gt;x, y&lt;/code&gt;, &lt;code&gt;!x.equals(y)&lt;/code&gt;. This applies for example, to a Spliterator based on a &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda4243e0e0c0967d73b2f664f0af156da9b7533" translate="yes" xml:space="preserve">
          <source>Characteristics indicating properties of a &lt;code&gt;Collector&lt;/code&gt;, which can be used to optimize reduction implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f59f08fd6d58c6725e21a9ec24e068148ec586" translate="yes" xml:space="preserve">
          <source>Characters</source>
          <target state="translated">Characters</target>
        </trans-unit>
        <trans-unit id="dbc755f354a8260e3da63cec7887ecb096c4a939" translate="yes" xml:space="preserve">
          <source>Characters are copied from this sequence into the destination character array &lt;code&gt;dst&lt;/code&gt;. The first character to be copied is at index &lt;code&gt;srcBegin&lt;/code&gt;; the last character to be copied is at index &lt;code&gt;srcEnd-1&lt;/code&gt;. The total number of characters to be copied is &lt;code&gt;srcEnd-srcBegin&lt;/code&gt;. The characters are copied into the subarray of &lt;code&gt;dst&lt;/code&gt; starting at index &lt;code&gt;dstBegin&lt;/code&gt; and ending at index:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9354d883896705d15434f66f5d8532c6228fcce9" translate="yes" xml:space="preserve">
          <source>Characters are written to the given &lt;a href=&quot;../io/printstream&quot;&gt;&lt;code&gt;PrintStream&lt;/code&gt;&lt;/a&gt; object and are therefore encoded using that object's charset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3672f146676b6243d4167b223ecb2a40e0bd3ecb" translate="yes" xml:space="preserve">
          <source>Characters in keys and elements can be represented in escape sequences similar to those used for character and string literals (see sections 3.3 and 3.10.6 of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f0620d3b93671d6d38cac8bfe80bf22090d5ebe" translate="yes" xml:space="preserve">
          <source>Characters in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02171ce14aa6f44955e09179662e7608383f9326" translate="yes" xml:space="preserve">
          <source>Characters less than &lt;code&gt;\u0020&lt;/code&gt; and characters greater than &lt;code&gt;\u007E&lt;/code&gt; in property keys or values are written as &lt;code&gt;\u&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dcff6aac66c719bc4af7e1a6c2ad257f7cfe164" translate="yes" xml:space="preserve">
          <source>Characters not in Latin-1 in the comments are written as &lt;code&gt;\u&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7081da46fa152b3710e044fdf730673e2c5b73a" translate="yes" xml:space="preserve">
          <source>Characters of the &lt;code&gt;char&lt;/code&gt; array &lt;code&gt;str&lt;/code&gt;, starting at index &lt;code&gt;offset&lt;/code&gt;, are appended, in order, to the contents of this sequence. The length of this sequence increases by the value of &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c83b8f1869865c515af01f63d9e14a4f124d2610" translate="yes" xml:space="preserve">
          <source>Characters of the argument &lt;code&gt;s&lt;/code&gt;, starting at index &lt;code&gt;start&lt;/code&gt;, are appended, in order, to the contents of this sequence up to the (exclusive) index &lt;code&gt;end&lt;/code&gt;. The length of this sequence is increased by the value of &lt;code&gt;end - start&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522c2cae2e3928825702b5cc9c812d0488fe6cae" translate="yes" xml:space="preserve">
          <source>Characters with accents or other adornments can be encoded in several different ways in Unicode. For example, take the character A-acute. In Unicode, this can be encoded as a single character (the &quot;composed&quot; form):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805b8364dd741b70184f3241017dba0068056c09" translate="yes" xml:space="preserve">
          <source>Charset</source>
          <target state="translated">Charset</target>
        </trans-unit>
        <trans-unit id="9389dacdf9fed5a879e79f03f32c21485ca39a20" translate="yes" xml:space="preserve">
          <source>Charset names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16dd215c19dead6f1ea1f3ee099eea1a1b40968a" translate="yes" xml:space="preserve">
          <source>Charset service-provider class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcee137707d5f153490bc73043d327ab1c509db7" translate="yes" xml:space="preserve">
          <source>Charset.aliases()</source>
          <target state="translated">Charset.aliases()</target>
        </trans-unit>
        <trans-unit id="5e150d5eeedac63520fbc8a1fe5e2267a8b088fc" translate="yes" xml:space="preserve">
          <source>Charset.availableCharsets()</source>
          <target state="translated">Charset.availableCharsets()</target>
        </trans-unit>
        <trans-unit id="cd00d8d060c86dcaf139f70f3f8ee1388be0cb78" translate="yes" xml:space="preserve">
          <source>Charset.canEncode()</source>
          <target state="translated">Charset.canEncode()</target>
        </trans-unit>
        <trans-unit id="9485e33832ca721fb1b2617d2731a199a22f161d" translate="yes" xml:space="preserve">
          <source>Charset.compareTo()</source>
          <target state="translated">Charset.compareTo()</target>
        </trans-unit>
        <trans-unit id="6a8e063f846bada0188141af9abca7466e1e49b7" translate="yes" xml:space="preserve">
          <source>Charset.contains()</source>
          <target state="translated">Charset.contains()</target>
        </trans-unit>
        <trans-unit id="073b9b578b21c32f4ce1edb9886d8e3019e0febf" translate="yes" xml:space="preserve">
          <source>Charset.decode()</source>
          <target state="translated">Charset.decode()</target>
        </trans-unit>
        <trans-unit id="c7408a9c93312a5d63301f1dd65932f96c08e6a2" translate="yes" xml:space="preserve">
          <source>Charset.defaultCharset()</source>
          <target state="translated">Charset.defaultCharset()</target>
        </trans-unit>
        <trans-unit id="f62858d493ad3dfdc9cad3536a8bbfa99d452e1b" translate="yes" xml:space="preserve">
          <source>Charset.displayName()</source>
          <target state="translated">Charset.displayName()</target>
        </trans-unit>
        <trans-unit id="b50d88c0e3f66ddcb5123e30a7749487cf06abf5" translate="yes" xml:space="preserve">
          <source>Charset.encode()</source>
          <target state="translated">Charset.encode()</target>
        </trans-unit>
        <trans-unit id="f430f68f1c32bca451900641936596ed831822ba" translate="yes" xml:space="preserve">
          <source>Charset.equals()</source>
          <target state="translated">Charset.equals()</target>
        </trans-unit>
        <trans-unit id="b64faa012d6e565c455d7a8cf08722d68463af7e" translate="yes" xml:space="preserve">
          <source>Charset.forName()</source>
          <target state="translated">Charset.forName()</target>
        </trans-unit>
        <trans-unit id="b5b45fa2666c3f6743bb545b641dd175e5edf085" translate="yes" xml:space="preserve">
          <source>Charset.hashCode()</source>
          <target state="translated">Charset.hashCode()</target>
        </trans-unit>
        <trans-unit id="10335333fc87c00b473224c67500522086d8918e" translate="yes" xml:space="preserve">
          <source>Charset.isRegistered()</source>
          <target state="translated">Charset.isRegistered()</target>
        </trans-unit>
        <trans-unit id="d3c2ae17c346d4d1f12b629ddb9b391a03f71b90" translate="yes" xml:space="preserve">
          <source>Charset.isSupported()</source>
          <target state="translated">Charset.isSupported()</target>
        </trans-unit>
        <trans-unit id="7b54e2ea0bcf54ad0c079c9ede5bd122ea49518d" translate="yes" xml:space="preserve">
          <source>Charset.name()</source>
          <target state="translated">Charset.name()</target>
        </trans-unit>
        <trans-unit id="e35be5e27f060e5df4b81997f3b2fc9f76e0a643" translate="yes" xml:space="preserve">
          <source>Charset.newDecoder()</source>
          <target state="translated">Charset.newDecoder()</target>
        </trans-unit>
        <trans-unit id="4249e4d0ec231c46d2f1b685dc91aba780b525fe" translate="yes" xml:space="preserve">
          <source>Charset.newEncoder()</source>
          <target state="translated">Charset.newEncoder()</target>
        </trans-unit>
        <trans-unit id="96b4183084eb38b82c8ded25f5ec70540213129e" translate="yes" xml:space="preserve">
          <source>Charset.toString()</source>
          <target state="translated">Charset.toString()</target>
        </trans-unit>
        <trans-unit id="171cfe7cd3ff226babbec57d4c9c24bdef5a534e" translate="yes" xml:space="preserve">
          <source>CharsetDecoder</source>
          <target state="translated">CharsetDecoder</target>
        </trans-unit>
        <trans-unit id="2dc8a39e9a3bd9429f444a472c003917599df31f" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.averageCharsPerByte()</source>
          <target state="translated">CharsetDecoder.averageCharsPerByte()</target>
        </trans-unit>
        <trans-unit id="2650f32d309d9734dd00a2091d548f2d775e6edb" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.charset()</source>
          <target state="translated">CharsetDecoder.charset()</target>
        </trans-unit>
        <trans-unit id="dd88dd8304caaeacde200bc44fff938670f9e735" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.decode()</source>
          <target state="translated">CharsetDecoder.decode()</target>
        </trans-unit>
        <trans-unit id="9783abaea4e9bb2b6fea7b386939bca9766cfa0e" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.decodeLoop()</source>
          <target state="translated">CharsetDecoder.decodeLoop()</target>
        </trans-unit>
        <trans-unit id="eb121a4d768c9c8ff1358b1c4a7c0e568927d623" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.detectedCharset()</source>
          <target state="translated">CharsetDecoder.detectedCharset()</target>
        </trans-unit>
        <trans-unit id="054ffa4778f60a7aa7f2f0636d7b502dcac0b6a4" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.flush()</source>
          <target state="translated">CharsetDecoder.flush()</target>
        </trans-unit>
        <trans-unit id="ee417fd98de78920157a083c41beed90f4e0195a" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.implFlush()</source>
          <target state="translated">CharsetDecoder.implFlush()</target>
        </trans-unit>
        <trans-unit id="417fc5e25feb5eb759395ffdb81226757f14d7d4" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.implOnMalformedInput()</source>
          <target state="translated">CharsetDecoder.implOnMalformedInput()</target>
        </trans-unit>
        <trans-unit id="e191f87e1bf17b151b3d4fa2bf035137fd12aa82" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.implOnUnmappableCharacter()</source>
          <target state="translated">CharsetDecoder.implOnUnmappableCharacter()</target>
        </trans-unit>
        <trans-unit id="ac4fea4ff06bb48969c7c5fc0f3582db2a728499" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.implReplaceWith()</source>
          <target state="translated">CharsetDecoder.implReplaceWith()</target>
        </trans-unit>
        <trans-unit id="717171677a81b2c980c57c8835262fe9b690a8d4" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.implReset()</source>
          <target state="translated">CharsetDecoder.implReset()</target>
        </trans-unit>
        <trans-unit id="e71e523d7e95911c5e63dd19a0ddbfa76b305fcb" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.isAutoDetecting()</source>
          <target state="translated">CharsetDecoder.isAutoDetecting()</target>
        </trans-unit>
        <trans-unit id="7ca2bdb3e43a31168f353b90c295ae0cda5e9478" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.isCharsetDetected()</source>
          <target state="translated">CharsetDecoder.isCharsetDetected()</target>
        </trans-unit>
        <trans-unit id="6d89a2d0c9b87b1ef3421a19718ce7aefde5f295" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.malformedInputAction()</source>
          <target state="translated">CharsetDecoder.malformedInputAction()</target>
        </trans-unit>
        <trans-unit id="b8001396b2655bcdbb34a54c91893789a8a5252f" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.maxCharsPerByte()</source>
          <target state="translated">CharsetDecoder.maxCharsPerByte()</target>
        </trans-unit>
        <trans-unit id="ca86cc2190b0e8a35759fcf1c059b5e446ababc7" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.onMalformedInput()</source>
          <target state="translated">CharsetDecoder.onMalformedInput()</target>
        </trans-unit>
        <trans-unit id="54661957e4019c86f0a61e85ed42813559a1b490" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.onUnmappableCharacter()</source>
          <target state="translated">CharsetDecoder.onUnmappableCharacter()</target>
        </trans-unit>
        <trans-unit id="2791137f6f7472ec02e5a4648f8ed6983be65df5" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.replaceWith()</source>
          <target state="translated">CharsetDecoder.replaceWith()</target>
        </trans-unit>
        <trans-unit id="24b7d83ad627adbbb00db643cc0b7e85869e9bf8" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.replacement()</source>
          <target state="translated">CharsetDecoder.replacement()</target>
        </trans-unit>
        <trans-unit id="25f7b88cb7cda1a6c6e22418b2d6b5e1eb0c509d" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.reset()</source>
          <target state="translated">CharsetDecoder.reset()</target>
        </trans-unit>
        <trans-unit id="590c06385012ccdc153034b1066ef1ad3d89babb" translate="yes" xml:space="preserve">
          <source>CharsetDecoder.unmappableCharacterAction()</source>
          <target state="translated">CharsetDecoder.unmappableCharacterAction()</target>
        </trans-unit>
        <trans-unit id="fbf9afb19862f107ac41c32517866a04e9b99f37" translate="yes" xml:space="preserve">
          <source>CharsetEncoder</source>
          <target state="translated">CharsetEncoder</target>
        </trans-unit>
        <trans-unit id="025f0fc2440998dab5106ed978dbc5f823de9d25" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.averageBytesPerChar()</source>
          <target state="translated">CharsetEncoder.averageBytesPerChar()</target>
        </trans-unit>
        <trans-unit id="eacf5b988b9e968d247ea67c7d81d9095e6ed940" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.canEncode()</source>
          <target state="translated">CharsetEncoder.canEncode()</target>
        </trans-unit>
        <trans-unit id="5f802bc778f8a36ced284eab7b4afc195ae6c150" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.charset()</source>
          <target state="translated">CharsetEncoder.charset()</target>
        </trans-unit>
        <trans-unit id="1dce37be83a96a6b2995382d42d06152bacf2dac" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.encode()</source>
          <target state="translated">CharsetEncoder.encode()</target>
        </trans-unit>
        <trans-unit id="0158a4d2257dbfc390770ae1fb8071841b8f0cb3" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.encodeLoop()</source>
          <target state="translated">CharsetEncoder.encodeLoop()</target>
        </trans-unit>
        <trans-unit id="7c0a62eb28d41288941cc02caa8a33cc9acccdf4" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.flush()</source>
          <target state="translated">CharsetEncoder.flush()</target>
        </trans-unit>
        <trans-unit id="14570a50cb011fe40570b879349fab5852caa061" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.implFlush()</source>
          <target state="translated">CharsetEncoder.implFlush()</target>
        </trans-unit>
        <trans-unit id="f71b895d9e37f9e99b88cd827110f7948ce33f98" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.implOnMalformedInput()</source>
          <target state="translated">CharsetEncoder.implOnMalformedInput()</target>
        </trans-unit>
        <trans-unit id="c6a3d2f192c4ef663e5ff3f9e083cbc39f4094db" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.implOnUnmappableCharacter()</source>
          <target state="translated">CharsetEncoder.implOnUnmappableCharacter()</target>
        </trans-unit>
        <trans-unit id="5b312f3cc27a0881f52561b8aeb6cdde6b23df6e" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.implReplaceWith()</source>
          <target state="translated">CharsetEncoder.implReplaceWith()</target>
        </trans-unit>
        <trans-unit id="4640dccc81ba1926b5b207ba520f9017dda40aa7" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.implReset()</source>
          <target state="translated">CharsetEncoder.implReset()</target>
        </trans-unit>
        <trans-unit id="e5a66cd69d422e495e1c30ce9f141cb543d3c90c" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.isLegalReplacement()</source>
          <target state="translated">CharsetEncoder.isLegalReplacement()</target>
        </trans-unit>
        <trans-unit id="45e59e7564acf78eb5553e13949b9cacefa95d64" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.malformedInputAction()</source>
          <target state="translated">CharsetEncoder.malformedInputAction()</target>
        </trans-unit>
        <trans-unit id="6dbb05a47bbdd92b90ebfd6b12b78cc4afdd4963" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.maxBytesPerChar()</source>
          <target state="translated">CharsetEncoder.maxBytesPerChar()</target>
        </trans-unit>
        <trans-unit id="1018ee0f8e5884ee0e8462b5851afb44c434cb45" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.onMalformedInput()</source>
          <target state="translated">CharsetEncoder.onMalformedInput()</target>
        </trans-unit>
        <trans-unit id="502791984ce02cace28ee3eeca726e8bae9d25e8" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.onUnmappableCharacter()</source>
          <target state="translated">CharsetEncoder.onUnmappableCharacter()</target>
        </trans-unit>
        <trans-unit id="1f295ff924b4f1d10a084ec8bf688d719e69b014" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.replaceWith()</source>
          <target state="translated">CharsetEncoder.replaceWith()</target>
        </trans-unit>
        <trans-unit id="ed1b3c0a0ed9be0c4b94f79a4db43fa4ed88404d" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.replacement()</source>
          <target state="translated">CharsetEncoder.replacement()</target>
        </trans-unit>
        <trans-unit id="49d6cb0f69eaab699844913bc1421cee9cfa0a09" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.reset()</source>
          <target state="translated">CharsetEncoder.reset()</target>
        </trans-unit>
        <trans-unit id="3004b3d26bb054eb5839aeff1f48591e13b0d14f" translate="yes" xml:space="preserve">
          <source>CharsetEncoder.unmappableCharacterAction()</source>
          <target state="translated">CharsetEncoder.unmappableCharacterAction()</target>
        </trans-unit>
        <trans-unit id="221504020e31b8568bf3e537e988ae4235d51eab" translate="yes" xml:space="preserve">
          <source>CharsetProvider</source>
          <target state="translated">CharsetProvider</target>
        </trans-unit>
        <trans-unit id="b9f786110cb125aa3ecf237ae979616c9070580e" translate="yes" xml:space="preserve">
          <source>CharsetProvider.charsetForName()</source>
          <target state="translated">CharsetProvider.charsetForName()</target>
        </trans-unit>
        <trans-unit id="3934724ac7fb002960fea99b78f00423428cdab8" translate="yes" xml:space="preserve">
          <source>CharsetProvider.charsets()</source>
          <target state="translated">CharsetProvider.charsets()</target>
        </trans-unit>
        <trans-unit id="590f305e155e62f9cbb24456a476cfbf994fc471" translate="yes" xml:space="preserve">
          <source>Charsets are named by strings composed of the following characters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ed602df25b8efb956d422d140b138184022247" translate="yes" xml:space="preserve">
          <source>Charsets are ordered by their canonical names, without regard to case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf24bbeae901ad17a90519ca858493458ebc86cb" translate="yes" xml:space="preserve">
          <source>Check and see if this ProtectionDomain implies the permissions expressed in the Permission object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30942a5df4db75a7d4617e8c675ddf10908cc29a" translate="yes" xml:space="preserve">
          <source>Check if a bean can be viewed as a given target type. The result will be true if the Beans.getInstanceof method can be used on the given bean to obtain an object that represents the specified targetType type view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3811d68f7d3956818ebdd8aa7d9072b9bcad5a0" translate="yes" xml:space="preserve">
          <source>Check if a given log record should be published.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69706016f50d80ba711ec3eb48764fc0a8c88871" translate="yes" xml:space="preserve">
          <source>Check if a message of the given level would actually be logged by this logger. This check is based on the Loggers effective level, which may be inherited from its parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c4762a8e875a8943f62c2536b7040de68ff8f5" translate="yes" xml:space="preserve">
          <source>Check if the provider has registered a subclass of &lt;code&gt;CipherSpi&lt;/code&gt; for the specified &quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="089d13aa6531548823209d421cb5337034717874" translate="yes" xml:space="preserve">
          <source>Check if the provider has registered a subclass of &lt;code&gt;CipherSpi&lt;/code&gt; for the sub-transformation &quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff886570f63bbe19dfd997aa4174445aa4c4e8ba" translate="yes" xml:space="preserve">
          <source>Check if the resulting date would be invalid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a81abc788036001a665137cdf7d3fc3d9d5131" translate="yes" xml:space="preserve">
          <source>Check if there are any listeners for a specific property, including those registered on all properties. If &lt;code&gt;propertyName&lt;/code&gt; is null, only check for listeners registered on all properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c33ee855e755187b11d2ca03ad012e5e748dc3a" translate="yes" xml:space="preserve">
          <source>Check if there is a critical extension that is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15559f306688d60f1415fe98e70dfb1267f7fa7" translate="yes" xml:space="preserve">
          <source>Check if this &lt;code&gt;Handler&lt;/code&gt; would actually log a given &lt;code&gt;LogRecord&lt;/code&gt; into its internal buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4c6367f7e2bf3e4dc4e18b85dd1f13daeaf615" translate="yes" xml:space="preserve">
          <source>Check if this &lt;code&gt;Handler&lt;/code&gt; would actually log a given &lt;code&gt;LogRecord&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785c158c6c9ee30fc6e9264ae7cfbccf41560529" translate="yes" xml:space="preserve">
          <source>Check that the current context is trusted to modify the logging configuration. This requires LoggingPermission(&quot;control&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05422dca40ce78eae16d85fa51ef9d831c68ea42" translate="yes" xml:space="preserve">
          <source>Check whether the policy has granted a Permission to a ProtectionDomain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6c65ef9ddf23943ec5317c6abbec54f2b52c27" translate="yes" xml:space="preserve">
          <source>Checked exception received by a thread when a timeout elapses before an asynchronous operation completes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3929dbd3d6145ec0c9fc4731a5703b7d12a77710" translate="yes" xml:space="preserve">
          <source>Checked exception received by a thread when another thread closes the channel or the part of the channel upon which it is blocked in an I/O operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f701f6fdb4057869748b41cf260ad065df0a22" translate="yes" xml:space="preserve">
          <source>Checked exception received by a thread when another thread interrupts it while it is blocked in an I/O operation upon a channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5875cab04449b6921e8151312e29e6d0e7bfb4be" translate="yes" xml:space="preserve">
          <source>Checked exception received by a thread when another thread interrupts it while it is blocked in an I/O operation upon a channel. Before this exception is thrown the channel will have been closed and the interrupt status of the previously-blocked thread will have been set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4027b36d6b85feed45021f4275ea79d95ef6fe0" translate="yes" xml:space="preserve">
          <source>Checked exception received by a thread when another thread interrupts it while it is waiting to acquire a file lock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="effa3ac879776952df840ed5992c6af8a746d3e3" translate="yes" xml:space="preserve">
          <source>Checked exception received by a thread when another thread interrupts it while it is waiting to acquire a file lock. Before this exception is thrown the interrupt status of the previously-blocked thread will have been set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f981ecf30effcb682756d51b0560e49881df5385" translate="yes" xml:space="preserve">
          <source>Checked exception thrown to indicate that a string could not be parsed as a URI reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f17471db43a3fe8eec060a96a45aa8c9071c22" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when a character encoding or decoding error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470a3e04a903b1a55671beec841a585f58350150" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when a file cannot be moved as an atomic file system operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83bf91b87442253aad1888e9a9dd1bf3a8f419fd" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when a file system loop, or cycle, is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508d4e4576cc28471ae6cc72a274b46cbec45fa0" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when a file system operation fails because a directory is not empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b1e32835ed0c05a474ccb6c0869b8383a8c169" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when a file system operation fails because a file is not a symbolic link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0a216572136d2ec85d338db3cfab22fd927365" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when a file system operation is denied, typically due to a file permission or other access check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54072c524538d9763592f36a07472a75c1ff1b35" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when a file system operation, intended for a directory, fails because the file is not a directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d0316d0a2fda2120902f1de007cc39e3d94bb9" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when a lookup of &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; fails because the principal does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec7a44ccbee208ece8555336b9ef693fa874ec1" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when an attempt is made to access a file that does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b2cb7a347815d7495161babaf8d1f94d4b17e7" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when an attempt is made to create a file or directory and a file of that name already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0096009ce8ed2ac4c947a274e6d6044399bf706" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when an attempt is made to invoke or complete an I/O operation upon channel that is closed, or at least closed to that operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6993671ba9fa0ab6725c6904e84a75b1aeda2e90" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when an attempt is made to invoke or complete an I/O operation upon channel that is closed, or at least closed to that operation. That this exception is thrown does not necessarily imply that the channel is completely closed. A socket channel whose write half has been shut down, for example, may still be open for reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9d22aa6d6a319c721a2b10afbef3b22568fc67" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when an input byte sequence is not legal for given charset, or an input character sequence is not a legal sixteen-bit Unicode sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c17fc2d8aab6dd4dfab8223a2b64c058ffb80fc" translate="yes" xml:space="preserve">
          <source>Checked exception thrown when an input character (or byte) sequence is valid but cannot be mapped to an output byte (or character) sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1fa945ff3387d749a4fbfc54f988de8e99b2aec" translate="yes" xml:space="preserve">
          <source>CheckedInputStream</source>
          <target state="translated">CheckedInputStream</target>
        </trans-unit>
        <trans-unit id="3ba713638c26e087ee1d3f7f7ffcdc97c5bb6f12" translate="yes" xml:space="preserve">
          <source>CheckedInputStream.getChecksum()</source>
          <target state="translated">CheckedInputStream.getChecksum()</target>
        </trans-unit>
        <trans-unit id="2970e27624f09eacee793e19f0496f4570cde8b6" translate="yes" xml:space="preserve">
          <source>CheckedInputStream.read()</source>
          <target state="translated">CheckedInputStream.read()</target>
        </trans-unit>
        <trans-unit id="47e852a8011eed9c0b265591d3ad0c4013a5ffa1" translate="yes" xml:space="preserve">
          <source>CheckedInputStream.skip()</source>
          <target state="translated">CheckedInputStream.skip()</target>
        </trans-unit>
        <trans-unit id="cb9fc506ed77e5844ad7fdfb2fae00c33aeec12d" translate="yes" xml:space="preserve">
          <source>CheckedOutputStream</source>
          <target state="translated">CheckedOutputStream</target>
        </trans-unit>
        <trans-unit id="69b72ec69e845a6dfc6ea42d212238ed668219e4" translate="yes" xml:space="preserve">
          <source>CheckedOutputStream.getChecksum()</source>
          <target state="translated">CheckedOutputStream.getChecksum()</target>
        </trans-unit>
        <trans-unit id="31882f385190b61162179220d20c8740c10d1e8f" translate="yes" xml:space="preserve">
          <source>CheckedOutputStream.write()</source>
          <target state="translated">CheckedOutputStream.write()</target>
        </trans-unit>
        <trans-unit id="5a47fea39b86b73d6f439bf1c2e48ea5d813c1e6" translate="yes" xml:space="preserve">
          <source>Checks for each role if it exists and is readable according to the relation type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91ca8b561f737a22a38bab01782860cc4219be2" translate="yes" xml:space="preserve">
          <source>Checks if all the supported units of this period are zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb2e20012265c9bb6bcc99aac850d5c9ce67e05" translate="yes" xml:space="preserve">
          <source>Checks if all three units of this period are zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f31de8d2c0483e4b841555a618e7394b4148969" translate="yes" xml:space="preserve">
          <source>Checks if all values in the range fit in an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858eb68d9fafefc9f2972d83cd7768e84ef25d1f" translate="yes" xml:space="preserve">
          <source>Checks if any of the supported units of this period are negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e3e4203f8e50ea3c0514d567fc1993b9dac91b" translate="yes" xml:space="preserve">
          <source>Checks if any of the three units of this period are negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec50496be54abb45927c8a4b8d7713911e06cec" translate="yes" xml:space="preserve">
          <source>Checks if explicit policy is required. If this flag is true, an acceptable policy needs to be explicitly identified in every certificate. By default, the ExplicitPolicyRequired flag is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3bee1e17378a52f3de8e141fb60b0e1ae8ceab" translate="yes" xml:space="preserve">
          <source>Checks if given Role can be read in a relation of the given type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a32742a0b30cb54de80ef9f2cfc850cd0bb8618" translate="yes" xml:space="preserve">
          <source>Checks if given Role can be set in a relation of given type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4e3da474b0ac75c946d6dd266cd2938e63206f" translate="yes" xml:space="preserve">
          <source>Checks if policy mapping is inhibited. If this flag is true, policy mapping is inhibited. By default, policy mapping is not inhibited (the flag is false).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d6f503b308f1a6eb4426543993f3db66a00b1d" translate="yes" xml:space="preserve">
          <source>Checks if the Relation Service is active. Current condition is that the Relation Service must be registered in the MBean Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30f8ba679584355bc8124815231e63b9b0cee57" translate="yes" xml:space="preserve">
          <source>Checks if the day-of-month is valid for this year-month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf0db20a7250f1658f7af4abab2ac45868b5959" translate="yes" xml:space="preserve">
          <source>Checks if the duration of the unit is an estimate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1ab757f90c11225993b00f3bee1e93d2a8c5e6" translate="yes" xml:space="preserve">
          <source>Checks if the given DES key material is weak or semi-weak.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d11d3a6bd67ef68ac95678bfc80baf6574bd59" translate="yes" xml:space="preserve">
          <source>Checks if the given DES key material, starting at &lt;code&gt;offset&lt;/code&gt; inclusive, is parity-adjusted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be31a0158f60616cb7fdec8ba2453fa64bf1c7b" translate="yes" xml:space="preserve">
          <source>Checks if the given DES-EDE key, starting at &lt;code&gt;offset&lt;/code&gt; inclusive, is parity-adjusted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be7201c545c5a4f86049a0865c1152fecca56ea" translate="yes" xml:space="preserve">
          <source>Checks if the given alias exists in this keystore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d1388dbe8680009284a3c9373c786883954061e" translate="yes" xml:space="preserve">
          <source>Checks if the instant of this &lt;code&gt;OffsetTime&lt;/code&gt; is after that of the specified time applying both times to a common date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1fa7fb50346a3d18b4f44db4b39b661618d062a" translate="yes" xml:space="preserve">
          <source>Checks if the instant of this &lt;code&gt;OffsetTime&lt;/code&gt; is before that of the specified time applying both times to a common date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0fbbdb1b0bc18e50ac6e3f1491052c15a733ab" translate="yes" xml:space="preserve">
          <source>Checks if the instant of this &lt;code&gt;OffsetTime&lt;/code&gt; is equal to that of the specified time applying both times to a common date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66976ec6e7c26a4fe47cfea20c76d7a1097dc4cc" translate="yes" xml:space="preserve">
          <source>Checks if the instant of this date-time is after that of the specified date-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9224c37b530e7f3545acd9aa9db37de966b8b768" translate="yes" xml:space="preserve">
          <source>Checks if the instant of this date-time is before that of the specified date-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a748f49998aedcebe67d310ec146ce7daccdf0b3" translate="yes" xml:space="preserve">
          <source>Checks if the instant of this date-time is equal to that of the specified date-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3667784fd76972557ace2decb5580745f20135" translate="yes" xml:space="preserve">
          <source>Checks if the keytab file exists. Implementation of this method should make sure that the result matches the latest status of the keytab file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5210361760dc76cf31948d70361efdca3733c7fe" translate="yes" xml:space="preserve">
          <source>Checks if the month-day is valid for this year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969e187ad9e8018b49875afd9e0903cfee16f97a" translate="yes" xml:space="preserve">
          <source>Checks if the offset date-time is valid for these rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031036bdbf20ba0eded0e068f64e7ace769e062a" translate="yes" xml:space="preserve">
          <source>Checks if the role exists and is readable according to the relation type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbc63f353de8c6fe3bca2b5a3cdbce71bc1b539" translate="yes" xml:space="preserve">
          <source>Checks if the specified field is supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64602ef0290d45145c0967fe6ac06d46fa0b9a56" translate="yes" xml:space="preserve">
          <source>Checks if the specified instant is in daylight savings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abeb21283f9c822a2ba0627487e9684414a94e0a" translate="yes" xml:space="preserve">
          <source>Checks if the specified offset is valid during this transition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166555f25f7da74ae4a43718c9937670bd128b35" translate="yes" xml:space="preserve">
          <source>Checks if the specified permission is &quot;implied&quot; by this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1ad307258cc17b095f6d9ec232d169bae83929" translate="yes" xml:space="preserve">
          <source>Checks if the specified permission is &quot;implied&quot; by this object. This method always returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c359a771ea4896d282c5b43681a0516ec8202a1" translate="yes" xml:space="preserve">
          <source>Checks if the specified permission is part of the permission set in this entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d23ad043b8f738240b844682b9caa9f94b214ff1" translate="yes" xml:space="preserve">
          <source>Checks if the specified permission's actions are &quot;implied by&quot; this object's actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6882fb9b6a8a95b6235e687917ca95d581db7f31" translate="yes" xml:space="preserve">
          <source>Checks if the specified unit is supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479a9580343413c1f22bd06f4593b79fb04b0a75" translate="yes" xml:space="preserve">
          <source>Checks if the specified year is a leap year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63a1c720744f034ba35843469e4949e713fdc36" translate="yes" xml:space="preserve">
          <source>Checks if the value is within the valid range and that all values in the range fit in an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b181456390f181075ddcad0dd3e284b0c3396ea" translate="yes" xml:space="preserve">
          <source>Checks if the value is within the valid range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf21df3a5095b8b7ebba6444044d9156c11513a8" translate="yes" xml:space="preserve">
          <source>Checks if the year is a leap year, according to the Hijrah calendar system rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8585b1d99007489d4905bb8558918add9258caee" translate="yes" xml:space="preserve">
          <source>Checks if the year is a leap year, according to the ISO proleptic calendar system rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044099f604fa3d615b8ab97bcca15cb40a35a006" translate="yes" xml:space="preserve">
          <source>Checks if the year is a leap year, as defined by the calendar system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6ab9bc76cca441c3705a796a6881318a590569" translate="yes" xml:space="preserve">
          <source>Checks if the year is valid for this month-day.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ce415d45abda1d8ad2986bf9a51f07d1871417" translate="yes" xml:space="preserve">
          <source>Checks if there is a relation identified in Relation Service with given relation id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90dab0dfc234c02070acd978cbe576499a333084" translate="yes" xml:space="preserve">
          <source>Checks if this &lt;code&gt;PrivateCredentialPermission&lt;/code&gt; implies the specified &lt;code&gt;Permission&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a4440a540cf0a2761e349e263787c000d0e5d2c" translate="yes" xml:space="preserve">
          <source>Checks if this &lt;code&gt;WeekFields&lt;/code&gt; is equal to the specified object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15d137870496eb072823b9a40c5b9dac8e235b9" translate="yes" xml:space="preserve">
          <source>Checks if this DecimalStyle is equal to another DecimalStyle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8189ab268c34070741e03f2aa685e0fb812a356" translate="yes" xml:space="preserve">
          <source>Checks if this FilePermission object &quot;implies&quot; the specified permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ecaa72c077d7de5831ee0a026e22d96ea6cbce" translate="yes" xml:space="preserve">
          <source>Checks if this Kerberos delegation permission object &quot;implies&quot; the specified permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43af8a03d80336af70ac9be612302bc7736a78d" translate="yes" xml:space="preserve">
          <source>Checks if this Kerberos service permission object &quot;implies&quot; the specified permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4346b4f5cc4b240f116f47e101362b9c3f30e6fb" translate="yes" xml:space="preserve">
          <source>Checks if this MBeanPermission object &quot;implies&quot; the specified permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d760f9ce8b051312e7aa44ce0eb83e43280c4a27" translate="yes" xml:space="preserve">
          <source>Checks if this MBeanServerPermission object &quot;implies&quot; the specified permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98788b69d7c663a7a23d98766f3b34fb5bf1a408" translate="yes" xml:space="preserve">
          <source>Checks if this PropertyPermission object &quot;implies&quot; the specified permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe75980fa031d7664936ce7fd18c63559fecad8" translate="yes" xml:space="preserve">
          <source>Checks if this URLPermission implies the given permission. Specifically, the following checks are done as if in the following sequence:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a10aa5ba23211d17e85c8c72b51e0d9da9b4632" translate="yes" xml:space="preserve">
          <source>Checks if this chronology is equal to another chronology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff443cfb42ff11c107e2aa544c671ace227295c1" translate="yes" xml:space="preserve">
          <source>Checks if this clock is equal to another clock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d0b75e7c15e1e2f948880b67a22923c173ef5d" translate="yes" xml:space="preserve">
          <source>Checks if this date is after the specified date ignoring the chronology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24b0859fe18961e35e7d05013ad0f1bc1383245" translate="yes" xml:space="preserve">
          <source>Checks if this date is after the specified date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6827cf9b8f15899749e5a3d628a51b533569d23" translate="yes" xml:space="preserve">
          <source>Checks if this date is before the specified date ignoring the chronology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e26dcd7b95cf42fc4ebdc28e8cdd790265b42f5" translate="yes" xml:space="preserve">
          <source>Checks if this date is before the specified date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02397cc1262ffbc02a830b7b25f2ecffb5df2023" translate="yes" xml:space="preserve">
          <source>Checks if this date is equal to another date, including the chronology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b811e8864174a2c0f2284548c94b711ece78e0" translate="yes" xml:space="preserve">
          <source>Checks if this date is equal to another date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca1ab08be13c810f956e0b41b2dc51c6db2a86d" translate="yes" xml:space="preserve">
          <source>Checks if this date is equal to the specified date ignoring the chronology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9768efdc66250608967297a5ff1eacef14bfd8e" translate="yes" xml:space="preserve">
          <source>Checks if this date is equal to the specified date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd317beb6ad3209e41866f8aa5a3cf5ad9376da" translate="yes" xml:space="preserve">
          <source>Checks if this date-time is after the specified date-time ignoring the chronology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61733161e08f4b14af60888665caeef84d2cc79" translate="yes" xml:space="preserve">
          <source>Checks if this date-time is after the specified date-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1193945769a729562d6028675507c799bfd4c67e" translate="yes" xml:space="preserve">
          <source>Checks if this date-time is before the specified date-time ignoring the chronology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16deeb1a25a67d0950fa94bfe65fd6899d10a20b" translate="yes" xml:space="preserve">
          <source>Checks if this date-time is before the specified date-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c894ee9b94065c030d7c6ca9b8301309e42915" translate="yes" xml:space="preserve">
          <source>Checks if this date-time is equal to another date-time, including the chronology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c291406197131d01416ec673a078f52ed1eee52" translate="yes" xml:space="preserve">
          <source>Checks if this date-time is equal to another date-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82aba0081d938821c945210401e22fbe204ea4b" translate="yes" xml:space="preserve">
          <source>Checks if this date-time is equal to the specified date-time ignoring the chronology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c1cb1f9df8409258692aa178318be9ac431d18" translate="yes" xml:space="preserve">
          <source>Checks if this date-time is equal to the specified date-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d58e56ccc4fe0d158335a41837f29e95a5d2329" translate="yes" xml:space="preserve">
          <source>Checks if this duration is equal to the specified &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c16587a2fa0162c053f5323d9412bae6e62219c" translate="yes" xml:space="preserve">
          <source>Checks if this duration is negative, excluding zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282015526f2f51ae36084345599c365a842b744f" translate="yes" xml:space="preserve">
          <source>Checks if this duration is zero length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b25553359f49634facaf7bef9a6fdc07941f0b6" translate="yes" xml:space="preserve">
          <source>Checks if this field is supported by the temporal object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b3b745708ce1d90a20e2ffce3439907dfc7e45" translate="yes" xml:space="preserve">
          <source>Checks if this field represents a component of a date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bf5ccd5fe6023ea795f9f017613a363ba0123f" translate="yes" xml:space="preserve">
          <source>Checks if this field represents a component of a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb6ed8e3241ff1088c5dea07a41f3d0073b53a9" translate="yes" xml:space="preserve">
          <source>Checks if this file object is compatible with the specified simple name and kind. A simple name is a single identifier (not qualified) as defined in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2238d3188aff38f57b7af634b48cf4006b866fac" translate="yes" xml:space="preserve">
          <source>Checks if this instant is after the specified instant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51dd35f6c92b3965b0de0d477857f172a850fc94" translate="yes" xml:space="preserve">
          <source>Checks if this instant is before the specified instant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d91dc589788d364538da1f9babbdd7a435bb481" translate="yes" xml:space="preserve">
          <source>Checks if this instant is equal to the specified instant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69856a98eae93c7e99aa4697b108b3794d967898" translate="yes" xml:space="preserve">
          <source>Checks if this month-day is after the specified month-day.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c230fa2732d7e6d59c257d33d36cdf36061e00a" translate="yes" xml:space="preserve">
          <source>Checks if this month-day is before the specified month-day.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356a5816f913e24c6654e6cf239177a0f3c5cd9e" translate="yes" xml:space="preserve">
          <source>Checks if this month-day is equal to another month-day.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ba788599f64e540da8f77b702847dfbda81bc4" translate="yes" xml:space="preserve">
          <source>Checks if this object equals another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1a048b7c6e7bc47299dd7f14a85ef92cfc7670" translate="yes" xml:space="preserve">
          <source>Checks if this offset is equal to another offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ddf53da84901d01c279cc624271920f3183f71b" translate="yes" xml:space="preserve">
          <source>Checks if this period is equal to another period, including the chronology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03db344a0045c79b1931e6e7198d06a0eecbe31f" translate="yes" xml:space="preserve">
          <source>Checks if this period is equal to another period.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b737a446e3f751e12abf06d34b5a65f49f98cf" translate="yes" xml:space="preserve">
          <source>Checks if this range is equal to another range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a7470d470f704c70e7b516580c6735fe699e3e" translate="yes" xml:space="preserve">
          <source>Checks if this set of rules equals another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e4c12e68ef8ff6586e39693b219c6a6e025d75" translate="yes" xml:space="preserve">
          <source>Checks if this socket permission object &quot;implies&quot; the specified permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5550048e4a185ab3a5dfb8d0b9ba55e8596c46" translate="yes" xml:space="preserve">
          <source>Checks if this time is after the specified time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7c4c504588fa709f31bd5d13a29e35a3d40a01" translate="yes" xml:space="preserve">
          <source>Checks if this time is before the specified time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821002b818d4e44e795112e2288729e8884dbf90" translate="yes" xml:space="preserve">
          <source>Checks if this time is equal to another time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75977341170b1ad17a900d099c1f2de0b3cd0cf" translate="yes" xml:space="preserve">
          <source>Checks if this time-zone ID is equal to another time-zone ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691397d1d72e7b7e4beae824bfa38be3b288b423" translate="yes" xml:space="preserve">
          <source>Checks if this unit is a date unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92332e29c5bcc4a00d486bb2f0681bf5d870dc61" translate="yes" xml:space="preserve">
          <source>Checks if this unit is a time unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52081d953244e54b6072b4c3dfe845cfc97f239e" translate="yes" xml:space="preserve">
          <source>Checks if this unit is supported by the specified temporal object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c24712a540a9a80c364f8d918320d51b721dcb4" translate="yes" xml:space="preserve">
          <source>Checks if this unit represents a component of a date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be3bf39585c94ef92f32f7a8fef48b62de6d89d" translate="yes" xml:space="preserve">
          <source>Checks if this unit represents a component of a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3339718a6306e23f01ee0626d71a6ed2e2c37606" translate="yes" xml:space="preserve">
          <source>Checks if this year is after the specified year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a00ab225a04c2affa3d7a4bca9913d1d502ec7c" translate="yes" xml:space="preserve">
          <source>Checks if this year is before the specified year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb39dce29b101cbccaba89c06e27056f5211c29" translate="yes" xml:space="preserve">
          <source>Checks if this year is equal to another year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5c76bc8439b7d99ec74043b6d1ec832f99fa11" translate="yes" xml:space="preserve">
          <source>Checks if this year-month is after the specified year-month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86cdb68156ddbb3ebb84af178ad59e7e7d0466b0" translate="yes" xml:space="preserve">
          <source>Checks if this year-month is before the specified year-month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec797931ba8fba2ede8de5689999bd0a3b92ed00" translate="yes" xml:space="preserve">
          <source>Checks if this year-month is equal to another year-month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b3d3147e05bf710b6e0f8649ad82fb5ee8a975" translate="yes" xml:space="preserve">
          <source>Checks of the zone rules are fixed, such that the offset never varies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75bcfc3b584b63df1329610d4008a6ab713b5ae" translate="yes" xml:space="preserve">
          <source>Checks that the certificate is currently valid. It is if the current date and time are within the validity period given in the certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2ab9a7c7d9b23af70ec3b4425d62f7a87f121f" translate="yes" xml:space="preserve">
          <source>Checks that the file exists and that the Java virtual machine has permission to &lt;a href=&quot;../../../lang/runtime#exec-java.lang.String-&quot;&gt;&lt;code&gt;execute&lt;/code&gt;&lt;/a&gt; the file. The semantics may differ when checking access to a directory. For example, on UNIX systems, checking for &lt;code&gt;EXECUTE&lt;/code&gt; access checks that the Java virtual machine has permission to search the directory in order to access file or subdirectories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5cd1aade40c5461f44c283d4f952e6397e9c1b0" translate="yes" xml:space="preserve">
          <source>Checks that the file exists and that the Java virtual machine has permission to read the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184681328a29c581372a46c4b55101a2734c8369" translate="yes" xml:space="preserve">
          <source>Checks that the file exists and that the Java virtual machine has permission to write to the file,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3f3a2953e604d549bc470e34f0d5df446449f1" translate="yes" xml:space="preserve">
          <source>Checks that the given date is within the certificate's validity period. In other words, this determines whether the certificate would be valid at the given date/time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="334c5902c236ff955468fcd09cb20b4dc5762654" translate="yes" xml:space="preserve">
          <source>Checks that the specified date is within the certificate's validity period. In other words, this determines whether the certificate would be valid at the specified date/time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503d643050c3e3f9948bf22405dde2e146faca77" translate="yes" xml:space="preserve">
          <source>Checks that the specified object reference is not &lt;code&gt;null&lt;/code&gt; and throws a customized &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; if it is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d718586ed0e95cb987057b835ce53aec7e914fe0" translate="yes" xml:space="preserve">
          <source>Checks that the specified object reference is not &lt;code&gt;null&lt;/code&gt; and throws a customized &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; if it is. This method is designed primarily for doing parameter validation in methods and constructors with multiple parameters, as demonstrated below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed548551778c43e7137a8cff6b76710eff3bd4f9" translate="yes" xml:space="preserve">
          <source>Checks that the specified object reference is not &lt;code&gt;null&lt;/code&gt;. This method is designed primarily for doing parameter validation in methods and constructors, as demonstrated below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be14c4bbc9de59abe5312c09bacde68930c3a10a" translate="yes" xml:space="preserve">
          <source>Checks that the specified value is valid and fits in an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f239e6f9b687fc606c4335748fd11e9b87c7d2" translate="yes" xml:space="preserve">
          <source>Checks that the specified value is valid for this field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3b59544992567040117317fb27355863c80203" translate="yes" xml:space="preserve">
          <source>Checks that the specified value is valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b49088fea5365c9104252895d15e43e439fbd95" translate="yes" xml:space="preserve">
          <source>Checks the RevocationEnabled flag. If this flag is true, the default revocation checking mechanism of the underlying PKIX service provider will be used. If this flag is false, the default revocation checking mechanism will be disabled (not used). See the &lt;a href=&quot;pkixparameters#setRevocationEnabled-boolean-&quot;&gt;&lt;code&gt;setRevocationEnabled&lt;/code&gt;&lt;/a&gt; method for more details on setting the value of this flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3dc3a628b0e442b9d94008689d2660af71ccbe8" translate="yes" xml:space="preserve">
          <source>Checks the existence, and optionally the accessibility, of a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2e54e1ceb284f1746834ee487eac548536c197" translate="yes" xml:space="preserve">
          <source>Checks this event to determine whether or not the service being revoked is of a particular class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4d6f95526f3ffc9e7e0a636abdcafb665dfeb8" translate="yes" xml:space="preserve">
          <source>Checks to see if the specified permission is implied by the collection of Permission objects held in this PermissionCollection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83d89f6e4ad1d94bf978e7dbecee21275aceb4b" translate="yes" xml:space="preserve">
          <source>Checks to see if this object's PermissionCollection for permissions of the specified permission's class implies the permissions expressed in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16255a1b52700af71b55f1e08c3e2f04e767b40c" translate="yes" xml:space="preserve">
          <source>Checks two &lt;code&gt;PrivateCredentialPermission&lt;/code&gt; objects for equality. Checks that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034300d1bc01e42df1bdb9a9cfb6cf8b09a63e4b" translate="yes" xml:space="preserve">
          <source>Checks two AccessControlContext objects for equality. Checks that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d1840f31d0def4317d6641a2793eb75b071532" translate="yes" xml:space="preserve">
          <source>Checks two AllPermission objects for equality. Two AllPermission objects are always equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b13c18b8f0e944ae21d910531b245911f45056" translate="yes" xml:space="preserve">
          <source>Checks two BasicPermission objects for equality. Checks that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7779b609abfda0b7468d577695d1751aa3b0d341" translate="yes" xml:space="preserve">
          <source>Checks two DelegationPermission objects for equality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726c034e16d89802a16adaa28b74efba26b1eab6" translate="yes" xml:space="preserve">
          <source>Checks two FilePermission objects for equality. Checks that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4860e37ca0cc48dcf1ae8f122bfaa00f0ff49fa4" translate="yes" xml:space="preserve">
          <source>Checks two MBeanPermission objects for equality. Checks that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20aaa304f257c96a10ec40b43272727724dd158f" translate="yes" xml:space="preserve">
          <source>Checks two MBeanServerPermission objects for equality. Checks that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1727baa1dbe434bd5a467b4eb1117018eab562d3" translate="yes" xml:space="preserve">
          <source>Checks two Permission objects for equality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7369503bffdcb1562fd49d7489dc5fdfd82a9e79" translate="yes" xml:space="preserve">
          <source>Checks two PropertyPermission objects for equality. Checks that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2514ac66e30858b015e8c32cf45d8aa83b15be84" translate="yes" xml:space="preserve">
          <source>Checks two ServicePermission objects for equality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ff5206681f33e3e242bb0403b9d2946b86d75c" translate="yes" xml:space="preserve">
          <source>Checks two SocketPermission objects for equality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7987dfc8fa3325d5a2f4a1560203be63d01663bc" translate="yes" xml:space="preserve">
          <source>Checks two UnresolvedPermission objects for equality. Checks that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0872e3cad662d501e6327a8e2e3edbf5b4b02d" translate="yes" xml:space="preserve">
          <source>Checks whether an MBean, identified by its object name, is already registered with the MBean server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34bbe101a3c72bfccc980fbcbedbac56d9371f5" translate="yes" xml:space="preserve">
          <source>Checks whether or not the specified principal has the specified permission. If it does, true is returned, otherwise false is returned. More specifically, this method checks whether the passed permission is a member of the allowed permission set of the specified principal. The allowed permission set is determined by the same algorithm as is used by the &lt;code&gt;getPermissions&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e431f83d72ef027979fdfe81ec53b50007f6534b" translate="yes" xml:space="preserve">
          <source>Checks whether the address has been resolved or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f65cb1f45657db492569fc37dcaf89c8943637" translate="yes" xml:space="preserve">
          <source>Checks whether the any policy OID should be processed if it is included in a certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ff8e3b8671f7cc392f8f006d06ec092e826500" translate="yes" xml:space="preserve">
          <source>Checks whether the given certificate is on this CRL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df8d48b47c8ee3b51ae54b570a60d27a891edec" translate="yes" xml:space="preserve">
          <source>Checks whether the object name is a pattern on the domain part.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4317a0d3070ce19d2896fbacb8e3b9b76c6598" translate="yes" xml:space="preserve">
          <source>Checks whether the object name is a pattern on the key properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c6cf4004daa10a18f324de08cc9dcfc090d54d8" translate="yes" xml:space="preserve">
          <source>Checks whether the object name is a pattern on the key property list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa76aa751d4455d7cf0a2673a881aa12b50c143" translate="yes" xml:space="preserve">
          <source>Checks whether the object name is a pattern on the value part of at least one of the key properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a89deffe29ba92744f378e3c8a8620c8904f71" translate="yes" xml:space="preserve">
          <source>Checks whether the object name is a pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ecb208139827fa36942c281693827d43d708fc7" translate="yes" xml:space="preserve">
          <source>Checks whether the value associated with a key in a key property is a pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fcd1cd020581d6d23f7d74cd403fc559263ad5" translate="yes" xml:space="preserve">
          <source>Checksum</source>
          <target state="translated">Checksum</target>
        </trans-unit>
        <trans-unit id="81f48546359712883eca4e1449940a8262d05539" translate="yes" xml:space="preserve">
          <source>Checksum.getValue()</source>
          <target state="translated">Checksum.getValue()</target>
        </trans-unit>
        <trans-unit id="ec8ed14e38c587dc0ff9bd512586495324be89d4" translate="yes" xml:space="preserve">
          <source>Checksum.reset()</source>
          <target state="translated">Checksum.reset()</target>
        </trans-unit>
        <trans-unit id="c582c7e15fec7074f3b772efcf6c581e92a15fbb" translate="yes" xml:space="preserve">
          <source>Checksum.update()</source>
          <target state="translated">Checksum.update()</target>
        </trans-unit>
        <trans-unit id="194c512f6d4500b1c2f03b7db4786e18e6dfe6ca" translate="yes" xml:space="preserve">
          <source>Chinese Remainder Theorem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277a172811b8c6dd8227447af01703d974286238" translate="yes" xml:space="preserve">
          <source>Choice formats are not synchronized. It is recommended to create separate format instances for each thread. If multiple threads access a format concurrently, it must be synchronized externally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac9d628468f2ecc19b6cf0685ecf4be10d9b18f" translate="yes" xml:space="preserve">
          <source>ChoiceCallback</source>
          <target state="translated">ChoiceCallback</target>
        </trans-unit>
        <trans-unit id="f5a47efa38032293bf7a5050fb7300e2e248ffb9" translate="yes" xml:space="preserve">
          <source>ChoiceCallback.allowMultipleSelections()</source>
          <target state="translated">ChoiceCallback.allowMultipleSelections()</target>
        </trans-unit>
        <trans-unit id="40015b77daaedfe377c40a559eb73de27b93d211" translate="yes" xml:space="preserve">
          <source>ChoiceCallback.getChoices()</source>
          <target state="translated">ChoiceCallback.getChoices()</target>
        </trans-unit>
        <trans-unit id="22eff679672a4f1e47548ca32aa158d57a1137e6" translate="yes" xml:space="preserve">
          <source>ChoiceCallback.getDefaultChoice()</source>
          <target state="translated">ChoiceCallback.getDefaultChoice()</target>
        </trans-unit>
        <trans-unit id="34bb1364b8d40a253414b8d82d41f425f045ea68" translate="yes" xml:space="preserve">
          <source>ChoiceCallback.getPrompt()</source>
          <target state="translated">ChoiceCallback.getPrompt()</target>
        </trans-unit>
        <trans-unit id="7d05450a715914fda8814dd4ecc041117a3d9e5a" translate="yes" xml:space="preserve">
          <source>ChoiceCallback.getSelectedIndexes()</source>
          <target state="translated">ChoiceCallback.getSelectedIndexes()</target>
        </trans-unit>
        <trans-unit id="a4a237757dce17a3565a37cd1cc70f9c8fd2dffd" translate="yes" xml:space="preserve">
          <source>ChoiceCallback.setSelectedIndex()</source>
          <target state="translated">ChoiceCallback.setSelectedIndex()</target>
        </trans-unit>
        <trans-unit id="cf921c2e634d69d7c519d89b980c7c502bd63b03" translate="yes" xml:space="preserve">
          <source>ChoiceCallback.setSelectedIndexes()</source>
          <target state="translated">ChoiceCallback.setSelectedIndexes()</target>
        </trans-unit>
        <trans-unit id="7bf0f76119e2f281fc2e4fde7cbfdb1caf750379" translate="yes" xml:space="preserve">
          <source>ChoiceFormat</source>
          <target state="translated">ChoiceFormat</target>
        </trans-unit>
        <trans-unit id="8d49f789a9d58071ba62ccff1a069c30d40908b0" translate="yes" xml:space="preserve">
          <source>ChoiceFormat.applyPattern()</source>
          <target state="translated">ChoiceFormat.applyPattern()</target>
        </trans-unit>
        <trans-unit id="6425e5db2898c8b1229f875a914e4f17615d1ea2" translate="yes" xml:space="preserve">
          <source>ChoiceFormat.clone()</source>
          <target state="translated">ChoiceFormat.clone()</target>
        </trans-unit>
        <trans-unit id="1507970c32846b945c6c56f0f648747d305a9723" translate="yes" xml:space="preserve">
          <source>ChoiceFormat.equals()</source>
          <target state="translated">ChoiceFormat.equals()</target>
        </trans-unit>
        <trans-unit id="b12541e33e7a7c8a860411a9aaee10725ded4497" translate="yes" xml:space="preserve">
          <source>ChoiceFormat.format()</source>
          <target state="translated">ChoiceFormat.format()</target>
        </trans-unit>
        <trans-unit id="db7e2903f928782386f79cff05966ccc4fe90176" translate="yes" xml:space="preserve">
          <source>ChoiceFormat.getFormats()</source>
          <target state="translated">ChoiceFormat.getFormats()</target>
        </trans-unit>
        <trans-unit id="ba640e9366aebbd6ff0a6ba96b440d52c54d69e9" translate="yes" xml:space="preserve">
          <source>ChoiceFormat.getLimits()</source>
          <target state="translated">ChoiceFormat.getLimits()</target>
        </trans-unit>
        <trans-unit id="1e6fbf95749533d2287cc8823bd35a5e365e6947" translate="yes" xml:space="preserve">
          <source>ChoiceFormat.hashCode()</source>
          <target state="translated">ChoiceFormat.hashCode()</target>
        </trans-unit>
        <trans-unit id="28bb7ce88a20bf68717dc53e486471e41dc90a35" translate="yes" xml:space="preserve">
          <source>ChoiceFormat.nextDouble()</source>
          <target state="translated">ChoiceFormat.nextDouble()</target>
        </trans-unit>
        <trans-unit id="77dd10c6826137380c2e8fa85fb9299ba8b223ec" translate="yes" xml:space="preserve">
          <source>ChoiceFormat.parse()</source>
          <target state="translated">ChoiceFormat.parse()</target>
        </trans-unit>
        <trans-unit id="12cb9672888ed28366aa26f3b5dfda2d32dcc1de" translate="yes" xml:space="preserve">
          <source>ChoiceFormat.previousDouble()</source>
          <target state="translated">ChoiceFormat.previousDouble()</target>
        </trans-unit>
        <trans-unit id="b564335aef1ca8069cc3ebaecb69f7c3e41dcb59" translate="yes" xml:space="preserve">
          <source>ChoiceFormat.setChoices()</source>
          <target state="translated">ChoiceFormat.setChoices()</target>
        </trans-unit>
        <trans-unit id="7b048490b05a24964234e5dbf6d5dbff5ffa85f3" translate="yes" xml:space="preserve">
          <source>ChoiceFormat.toPattern()</source>
          <target state="translated">ChoiceFormat.toPattern()</target>
        </trans-unit>
        <trans-unit id="c00f73d917b5469b29a78b1244c9c9f1ad24c8f7" translate="yes" xml:space="preserve">
          <source>Choose an alias to authenticate the client side of a secure socket given the public key type and the list of certificate issuer authorities recognized by the peer (if any).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24605a70a1654ef76f9dc3fd1b089eeda082326c" translate="yes" xml:space="preserve">
          <source>Choose an alias to authenticate the client side of an &lt;code&gt;SSLEngine&lt;/code&gt; connection given the public key type and the list of certificate issuer authorities recognized by the peer (if any).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb6865bf0ee08c6414f6fe26636fa00e0fcaadb9" translate="yes" xml:space="preserve">
          <source>Choose an alias to authenticate the server side of a secure socket given the public key type and the list of certificate issuer authorities recognized by the peer (if any).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23741b34558640b239b9ffeb5eddd97af9bf909d" translate="yes" xml:space="preserve">
          <source>Choose an alias to authenticate the server side of an &lt;code&gt;SSLEngine&lt;/code&gt; connection given the public key type and the list of certificate issuer authorities recognized by the peer (if any).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c76e534607b21fd280c52378486e8f9d983f3e" translate="yes" xml:space="preserve">
          <source>Chooses a &lt;code&gt;DocFlavor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e650d4a3800f412a7d255a02f6dc192a54e00e3" translate="yes" xml:space="preserve">
          <source>Choosing a destination band subset will not affect the number of bands in the output image of a read if no destination image is specified; the created destination image will still have the same number of bands as if this method had never been called. If a different number of bands in the destination image is desired, an image must be supplied using the &lt;code&gt;ImageReadParam.setDestination&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db2b47821d23392874dee9d80fa4ca5d6c67ede4" translate="yes" xml:space="preserve">
          <source>Choosing the RMI transport</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9112ce34618f2ce4ae9864e8c4b22c9a29c1e3e5" translate="yes" xml:space="preserve">
          <source>Chromaticity</source>
          <target state="translated">Chromaticity</target>
        </trans-unit>
        <trans-unit id="9329f173bf645947d07958aedf3a8b5bc27d92af" translate="yes" xml:space="preserve">
          <source>Chromaticity.getCategory()</source>
          <target state="translated">Chromaticity.getCategory()</target>
        </trans-unit>
        <trans-unit id="6b1a0efae612db5f266e3604d5d287ccc8c5690f" translate="yes" xml:space="preserve">
          <source>Chromaticity.getEnumValueTable()</source>
          <target state="translated">Chromaticity.getEnumValueTable()</target>
        </trans-unit>
        <trans-unit id="8d955c97ef38d66681359b80ee5c58c560fe0d50" translate="yes" xml:space="preserve">
          <source>Chromaticity.getName()</source>
          <target state="translated">Chromaticity.getName()</target>
        </trans-unit>
        <trans-unit id="e41b6fa7b3270748f370c8e489e2137467fc26c3" translate="yes" xml:space="preserve">
          <source>Chromaticity.getStringTable()</source>
          <target state="translated">Chromaticity.getStringTable()</target>
        </trans-unit>
        <trans-unit id="575a2a019bd82e463b194ce78ec4805565cab1c7" translate="yes" xml:space="preserve">
          <source>ChronoField</source>
          <target state="translated">ChronoField</target>
        </trans-unit>
        <trans-unit id="9c4df030d2709185547001b15e1288e0baf818f5" translate="yes" xml:space="preserve">
          <source>ChronoField.adjustInto()</source>
          <target state="translated">ChronoField.adjustInto()</target>
        </trans-unit>
        <trans-unit id="d8788b1a3496a6c43bf97a315a50a2dd951b0795" translate="yes" xml:space="preserve">
          <source>ChronoField.checkValidIntValue()</source>
          <target state="translated">ChronoField.checkValidIntValue()</target>
        </trans-unit>
        <trans-unit id="62ae36148bd91c401fceedb88f14be15d110687e" translate="yes" xml:space="preserve">
          <source>ChronoField.checkValidValue()</source>
          <target state="translated">ChronoField.checkValidValue()</target>
        </trans-unit>
        <trans-unit id="bc319e51d4feeb6c52d43a2d718ffc4b4ca4e8b8" translate="yes" xml:space="preserve">
          <source>ChronoField.getBaseUnit()</source>
          <target state="translated">ChronoField.getBaseUnit()</target>
        </trans-unit>
        <trans-unit id="7aa9a940e5b1a6cc683eaac90b9813bdb688690c" translate="yes" xml:space="preserve">
          <source>ChronoField.getDisplayName()</source>
          <target state="translated">ChronoField.getDisplayName()</target>
        </trans-unit>
        <trans-unit id="dde7bc8594cf6d4d0f2419d82ae23f685bd1b83f" translate="yes" xml:space="preserve">
          <source>ChronoField.getFrom()</source>
          <target state="translated">ChronoField.getFrom()</target>
        </trans-unit>
        <trans-unit id="bf647afc8dd6def3c79fdd4a6c04b63c77cd721b" translate="yes" xml:space="preserve">
          <source>ChronoField.getRangeUnit()</source>
          <target state="translated">ChronoField.getRangeUnit()</target>
        </trans-unit>
        <trans-unit id="694946900c297d0432158d4b07004f62f51dc4fd" translate="yes" xml:space="preserve">
          <source>ChronoField.isDateBased()</source>
          <target state="translated">ChronoField.isDateBased()</target>
        </trans-unit>
        <trans-unit id="973c235d91ac4fcc9856d508d872ab097552375b" translate="yes" xml:space="preserve">
          <source>ChronoField.isSupportedBy()</source>
          <target state="translated">ChronoField.isSupportedBy()</target>
        </trans-unit>
        <trans-unit id="5c9d1a4f48a32cda92e79e51c8211c09ba90bab1" translate="yes" xml:space="preserve">
          <source>ChronoField.isTimeBased()</source>
          <target state="translated">ChronoField.isTimeBased()</target>
        </trans-unit>
        <trans-unit id="cc0e62d901512a7b1e9d3ee3b75a8b9863d28e5b" translate="yes" xml:space="preserve">
          <source>ChronoField.range()</source>
          <target state="translated">ChronoField.range()</target>
        </trans-unit>
        <trans-unit id="9b54294f58badddb83a93f6c67aa2a9d5d955456" translate="yes" xml:space="preserve">
          <source>ChronoField.rangeRefinedBy()</source>
          <target state="translated">ChronoField.rangeRefinedBy()</target>
        </trans-unit>
        <trans-unit id="6f9ce3170a6759a6f70e85d63381a618039e59f4" translate="yes" xml:space="preserve">
          <source>ChronoField.toString()</source>
          <target state="translated">ChronoField.toString()</target>
        </trans-unit>
        <trans-unit id="f27f5b76793ddc9f471830738aadd74597a7917a" translate="yes" xml:space="preserve">
          <source>ChronoField.valueOf()</source>
          <target state="translated">ChronoField.valueOf()</target>
        </trans-unit>
        <trans-unit id="e06cc673e383b8eaa5bae0b9e087dc47ab830d22" translate="yes" xml:space="preserve">
          <source>ChronoField.values()</source>
          <target state="translated">ChronoField.values()</target>
        </trans-unit>
        <trans-unit id="57568878752166cd4d124a97a05ce9f98ed2a02d" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate</source>
          <target state="translated">ChronoLocalDate</target>
        </trans-unit>
        <trans-unit id="3e535708a96567c4cf36da44d28dfa3680567c1f" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.adjustInto()</source>
          <target state="translated">ChronoLocalDate.adjustInto()</target>
        </trans-unit>
        <trans-unit id="6b7ee3555f6785bd47535bc6bf7be8d663d0439e" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.atTime()</source>
          <target state="translated">ChronoLocalDate.atTime()</target>
        </trans-unit>
        <trans-unit id="2c906cddbc8798d618f6a99de6a0f2012d31bfcb" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.compareTo()</source>
          <target state="translated">ChronoLocalDate.compareTo()</target>
        </trans-unit>
        <trans-unit id="01b6c4f8cbf7de3c4c75818b594b2f222211e0e6" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.equals()</source>
          <target state="translated">ChronoLocalDate.equals()</target>
        </trans-unit>
        <trans-unit id="293cdfd3a16dc40b286dc6cf78e74c0f05dd98f8" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.format()</source>
          <target state="translated">ChronoLocalDate.format()</target>
        </trans-unit>
        <trans-unit id="fa8fec186e286bfa2cf552c58494b173dde88c86" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.from()</source>
          <target state="translated">ChronoLocalDate.from()</target>
        </trans-unit>
        <trans-unit id="0779df10fc6ea09151c44c120db45e05bf9d8609" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.getChronology()</source>
          <target state="translated">ChronoLocalDate.getChronology()</target>
        </trans-unit>
        <trans-unit id="1c9bef09dd2b58d5224554207c94443c4245621a" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.getEra()</source>
          <target state="translated">ChronoLocalDate.getEra()</target>
        </trans-unit>
        <trans-unit id="d9c05f16535b493c7aef07f752ad1cbb22879424" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.hashCode()</source>
          <target state="translated">ChronoLocalDate.hashCode()</target>
        </trans-unit>
        <trans-unit id="509e889537d5eafb4706f49abb0965c13d4c06e0" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.isAfter()</source>
          <target state="translated">ChronoLocalDate.isAfter()</target>
        </trans-unit>
        <trans-unit id="28a9c87c2d4076fd0a81de564fbc8cf524c6657b" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.isBefore()</source>
          <target state="translated">ChronoLocalDate.isBefore()</target>
        </trans-unit>
        <trans-unit id="3bb8d5854599ea7dcfff5f79368d2ac73990c631" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.isEqual()</source>
          <target state="translated">ChronoLocalDate.isEqual()</target>
        </trans-unit>
        <trans-unit id="61176b9d2c0686df25e12e412d37fd852e7bccac" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.isLeapYear()</source>
          <target state="translated">ChronoLocalDate.isLeapYear()</target>
        </trans-unit>
        <trans-unit id="97cd3f8bb9a81b3b67fd4b739df1a55918e8b65f" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.isSupported()</source>
          <target state="translated">ChronoLocalDate.isSupported()</target>
        </trans-unit>
        <trans-unit id="7c76d3d24f6d5124796ec874d21254b3f319c890" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.lengthOfMonth()</source>
          <target state="translated">ChronoLocalDate.lengthOfMonth()</target>
        </trans-unit>
        <trans-unit id="6338b91bfab0feac341f77ea6e992b8c63756846" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.lengthOfYear()</source>
          <target state="translated">ChronoLocalDate.lengthOfYear()</target>
        </trans-unit>
        <trans-unit id="edb3141c65fc365b31490980e1b88566e881e8ef" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.minus()</source>
          <target state="translated">ChronoLocalDate.minus()</target>
        </trans-unit>
        <trans-unit id="dbbde803a632c5c037ab68a2dd5cf2f62d952683" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.plus()</source>
          <target state="translated">ChronoLocalDate.plus()</target>
        </trans-unit>
        <trans-unit id="98df20d02e9e53aafc0127188d22b5d652f0858b" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.query()</source>
          <target state="translated">ChronoLocalDate.query()</target>
        </trans-unit>
        <trans-unit id="7894e1b44dd0c563b685ecddf275771b9523563f" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.timeLineOrder()</source>
          <target state="translated">ChronoLocalDate.timeLineOrder()</target>
        </trans-unit>
        <trans-unit id="f42bf52a351de6acb989cb9c66d7a36a74757335" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.toEpochDay()</source>
          <target state="translated">ChronoLocalDate.toEpochDay()</target>
        </trans-unit>
        <trans-unit id="7d6d729758bf50e6fff3cf27775498ed8b5121ae" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.toString()</source>
          <target state="translated">ChronoLocalDate.toString()</target>
        </trans-unit>
        <trans-unit id="a69c8eb3e313d08938b84ec564e66d9b9195cef6" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.until()</source>
          <target state="translated">ChronoLocalDate.until()</target>
        </trans-unit>
        <trans-unit id="24043bf97fba50203fe6c3f98cdb4e8f9911d3ad" translate="yes" xml:space="preserve">
          <source>ChronoLocalDate.with()</source>
          <target state="translated">ChronoLocalDate.with()</target>
        </trans-unit>
        <trans-unit id="e01f290fbe40656a52d99f5c50f9b26637ba4516" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime</source>
          <target state="translated">ChronoLocalDateTime</target>
        </trans-unit>
        <trans-unit id="5b1c55b94bc9bb570c53bcc3e107e9ac47e32d88" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.adjustInto()</source>
          <target state="translated">ChronoLocalDateTime.adjustInto()</target>
        </trans-unit>
        <trans-unit id="1ae3ec8309a18b8ea95163207eeba66bf95638e6" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.atZone()</source>
          <target state="translated">ChronoLocalDateTime.atZone()</target>
        </trans-unit>
        <trans-unit id="43b8d8140b3ffe166eec1b22260433782f83d420" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.compareTo()</source>
          <target state="translated">ChronoLocalDateTime.compareTo()</target>
        </trans-unit>
        <trans-unit id="d7635a03628c4d8f9cd6019c35a8535f44124b66" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.equals()</source>
          <target state="translated">ChronoLocalDateTime.equals()</target>
        </trans-unit>
        <trans-unit id="77bcc44ada42fda70b128d1bb729ad22e5820062" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.format()</source>
          <target state="translated">ChronoLocalDateTime.format()</target>
        </trans-unit>
        <trans-unit id="f8f7cb85897901c5f494092e57aa5167615c7565" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.from()</source>
          <target state="translated">ChronoLocalDateTime.from()</target>
        </trans-unit>
        <trans-unit id="8f6404086b5d2a6623521a8fffc848eb56cf1bf1" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.getChronology()</source>
          <target state="translated">ChronoLocalDateTime.getChronology()</target>
        </trans-unit>
        <trans-unit id="be18a7def9b7b8108ee9c4076561fad2a4587552" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.hashCode()</source>
          <target state="translated">ChronoLocalDateTime.hashCode()</target>
        </trans-unit>
        <trans-unit id="2c4151b30937ea74549dbde9c4f2edfbd2a678d1" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.isAfter()</source>
          <target state="translated">ChronoLocalDateTime.isAfter()</target>
        </trans-unit>
        <trans-unit id="43214eb01d88d7afb4e63315fd00a145f01cc0a4" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.isBefore()</source>
          <target state="translated">ChronoLocalDateTime.isBefore()</target>
        </trans-unit>
        <trans-unit id="c3618bbcc7ebd80484870133b44afc9d8501cf30" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.isEqual()</source>
          <target state="translated">ChronoLocalDateTime.isEqual()</target>
        </trans-unit>
        <trans-unit id="288770e09c94d489e02e22e06e3cea9d97a6a713" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.isSupported()</source>
          <target state="translated">ChronoLocalDateTime.isSupported()</target>
        </trans-unit>
        <trans-unit id="cf82adf52f6023a7bd6c0652b95d4b3f87f5052b" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.minus()</source>
          <target state="translated">ChronoLocalDateTime.minus()</target>
        </trans-unit>
        <trans-unit id="35bfe64997c3942afef97a9563994f2a9ea198b3" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.plus()</source>
          <target state="translated">ChronoLocalDateTime.plus()</target>
        </trans-unit>
        <trans-unit id="e2bba6a4a7ad2bf65395b9036b9e967666288495" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.query()</source>
          <target state="translated">ChronoLocalDateTime.query()</target>
        </trans-unit>
        <trans-unit id="6206ed48f1875e6714077f3faba55273b6411678" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.timeLineOrder()</source>
          <target state="translated">ChronoLocalDateTime.timeLineOrder()</target>
        </trans-unit>
        <trans-unit id="c8d78825cd1131f33afd2a85cf9f41f8c378b851" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.toEpochSecond()</source>
          <target state="translated">ChronoLocalDateTime.toEpochSecond()</target>
        </trans-unit>
        <trans-unit id="d503473a18e371e78cb78c386a2f7cd4cb845a2b" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.toInstant()</source>
          <target state="translated">ChronoLocalDateTime.toInstant()</target>
        </trans-unit>
        <trans-unit id="2cd5932e2c2debc9c61100b6d87f7cf545f9ac60" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.toLocalDate()</source>
          <target state="translated">ChronoLocalDateTime.toLocalDate()</target>
        </trans-unit>
        <trans-unit id="2253dcbaed38f020ed6fd817209f1e84935eff2a" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.toLocalTime()</source>
          <target state="translated">ChronoLocalDateTime.toLocalTime()</target>
        </trans-unit>
        <trans-unit id="4471b5061d749e91bb12afab92ebc2eda6075a84" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.toString()</source>
          <target state="translated">ChronoLocalDateTime.toString()</target>
        </trans-unit>
        <trans-unit id="5bd4e510af2f0c585e9582cc78353f095c7c4b51" translate="yes" xml:space="preserve">
          <source>ChronoLocalDateTime.with()</source>
          <target state="translated">ChronoLocalDateTime.with()</target>
        </trans-unit>
        <trans-unit id="152b0a2cf3f937bcd4aa6e102a718988ac59a6b2" translate="yes" xml:space="preserve">
          <source>ChronoPeriod</source>
          <target state="translated">ChronoPeriod</target>
        </trans-unit>
        <trans-unit id="af978a3d823fea4bc7f45c068cc66c66b7a78cd9" translate="yes" xml:space="preserve">
          <source>ChronoPeriod.addTo()</source>
          <target state="translated">ChronoPeriod.addTo()</target>
        </trans-unit>
        <trans-unit id="e620f3d14cd25ea6e97f345f90b313296b0494ef" translate="yes" xml:space="preserve">
          <source>ChronoPeriod.between()</source>
          <target state="translated">ChronoPeriod.between()</target>
        </trans-unit>
        <trans-unit id="368920db27fb44f4ba36008dbbf0b0ad1ab0211f" translate="yes" xml:space="preserve">
          <source>ChronoPeriod.equals()</source>
          <target state="translated">ChronoPeriod.equals()</target>
        </trans-unit>
        <trans-unit id="d9536b32d789befd01f3b2acfdac396f5dbf9963" translate="yes" xml:space="preserve">
          <source>ChronoPeriod.get()</source>
          <target state="translated">ChronoPeriod.get()</target>
        </trans-unit>
        <trans-unit id="38815b7428a00d3289a5732c62194fe0fb126305" translate="yes" xml:space="preserve">
          <source>ChronoPeriod.getChronology()</source>
          <target state="translated">ChronoPeriod.getChronology()</target>
        </trans-unit>
        <trans-unit id="bcb22e404b72fc8d0bf355fb78d47b098b754c7d" translate="yes" xml:space="preserve">
          <source>ChronoPeriod.getUnits()</source>
          <target state="translated">ChronoPeriod.getUnits()</target>
        </trans-unit>
        <trans-unit id="50342a2c05764473ce01195d97638695cbb6eb01" translate="yes" xml:space="preserve">
          <source>ChronoPeriod.hashCode()</source>
          <target state="translated">ChronoPeriod.hashCode()</target>
        </trans-unit>
        <trans-unit id="04a60bc93b71fe6781bdc96670f8e143b81e1703" translate="yes" xml:space="preserve">
          <source>ChronoPeriod.isNegative()</source>
          <target state="translated">ChronoPeriod.isNegative()</target>
        </trans-unit>
        <trans-unit id="da6f4ddc27f9616a2fc2df954e8a3c26e2b9a03f" translate="yes" xml:space="preserve">
          <source>ChronoPeriod.isZero()</source>
          <target state="translated">ChronoPeriod.isZero()</target>
        </trans-unit>
        <trans-unit id="217e357c91d065ff0271d4176bf9764647fc4edd" translate="yes" xml:space="preserve">
          <source>ChronoPeriod.minus()</source>
          <target state="translated">ChronoPeriod.minus()</target>
        </trans-unit>
        <trans-unit id="dba904f430a08dbc9d34983f4d78b6240a627189" translate="yes" xml:space="preserve">
          <source>ChronoPeriod.multipliedBy()</source>
          <target state="translated">ChronoPeriod.multipliedBy()</target>
        </trans-unit>
        <trans-unit id="fa455e47ada1e6ca7046851f7478898ed5eef5fe" translate="yes" xml:space="preserve">
          <source>ChronoPeriod.negated()</source>
          <target state="translated">ChronoPeriod.negated()</target>
        </trans-unit>
        <trans-unit id="8dad41d6a3a967b98a2928082859c0d593cf2e31" translate="yes" xml:space="preserve">
          <source>ChronoPeriod.normalized()</source>
          <target state="translated">ChronoPeriod.normalized()</target>
        </trans-unit>
        <trans-unit id="54e7e518d88baf162fe5eb002e34a9d72e07c063" translate="yes" xml:space="preserve">
          <source>ChronoPeriod.plus()</source>
          <target state="translated">ChronoPeriod.plus()</target>
        </trans-unit>
        <trans-unit id="09473792d3d35d117af7bd5bc12081aa55d7ade5" translate="yes" xml:space="preserve">
          <source>ChronoPeriod.subtractFrom()</source>
          <target state="translated">ChronoPeriod.subtractFrom()</target>
        </trans-unit>
        <trans-unit id="32af04ed5636e892bf8a22e67e3e086aa86767e0" translate="yes" xml:space="preserve">
          <source>ChronoPeriod.toString()</source>
          <target state="translated">ChronoPeriod.toString()</target>
        </trans-unit>
        <trans-unit id="724b7b2d0ac30cac7108a907c67021ad028486b6" translate="yes" xml:space="preserve">
          <source>ChronoUnit</source>
          <target state="translated">ChronoUnit</target>
        </trans-unit>
        <trans-unit id="6271db7abb2712ad83643e71d53b97e90d539ac1" translate="yes" xml:space="preserve">
          <source>ChronoUnit.addTo()</source>
          <target state="translated">ChronoUnit.addTo()</target>
        </trans-unit>
        <trans-unit id="b46430c3aca3fddce96ad47c44b2a7198fc77f6e" translate="yes" xml:space="preserve">
          <source>ChronoUnit.between()</source>
          <target state="translated">ChronoUnit.between()</target>
        </trans-unit>
        <trans-unit id="2814bb4d113ebc9b6dbe1b34781f5fbddbb7f170" translate="yes" xml:space="preserve">
          <source>ChronoUnit.getDuration()</source>
          <target state="translated">ChronoUnit.getDuration()</target>
        </trans-unit>
        <trans-unit id="d9ebd45fbc6df37e3fc7dc0c20d5666a72289b9a" translate="yes" xml:space="preserve">
          <source>ChronoUnit.isDateBased()</source>
          <target state="translated">ChronoUnit.isDateBased()</target>
        </trans-unit>
        <trans-unit id="0f3106589f3a47ef9c8cd3b3bd9e366490a7281e" translate="yes" xml:space="preserve">
          <source>ChronoUnit.isDurationEstimated()</source>
          <target state="translated">ChronoUnit.isDurationEstimated()</target>
        </trans-unit>
        <trans-unit id="11b1269d4eb92ebc6de5562f5e24107ab82069d3" translate="yes" xml:space="preserve">
          <source>ChronoUnit.isSupportedBy()</source>
          <target state="translated">ChronoUnit.isSupportedBy()</target>
        </trans-unit>
        <trans-unit id="2e4f10eae372cdb5e797378756970cd4a624133b" translate="yes" xml:space="preserve">
          <source>ChronoUnit.isTimeBased()</source>
          <target state="translated">ChronoUnit.isTimeBased()</target>
        </trans-unit>
        <trans-unit id="89efaefeb27d1e5b279c04be1ebc9b0f613d1392" translate="yes" xml:space="preserve">
          <source>ChronoUnit.toString()</source>
          <target state="translated">ChronoUnit.toString()</target>
        </trans-unit>
        <trans-unit id="e808c7722701cdd1bbace8dbd52289d0444134ef" translate="yes" xml:space="preserve">
          <source>ChronoUnit.valueOf()</source>
          <target state="translated">ChronoUnit.valueOf()</target>
        </trans-unit>
        <trans-unit id="df586f29e4911e81d3e21984e8b6225b350cb49d" translate="yes" xml:space="preserve">
          <source>ChronoUnit.values()</source>
          <target state="translated">ChronoUnit.values()</target>
        </trans-unit>
        <trans-unit id="1e4263e10622b644a4e88ccf99c99cf8d08730ae" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime</source>
          <target state="translated">ChronoZonedDateTime</target>
        </trans-unit>
        <trans-unit id="36311ce69805734494e491f17790f4d4375ede6a" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.compareTo()</source>
          <target state="translated">ChronoZonedDateTime.compareTo()</target>
        </trans-unit>
        <trans-unit id="2af1f126aae7b9e5d4fcf683420ea5b123ff582c" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.equals()</source>
          <target state="translated">ChronoZonedDateTime.equals()</target>
        </trans-unit>
        <trans-unit id="f46a6496b2e1346bfc66379f55d3aab3264080d3" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.format()</source>
          <target state="translated">ChronoZonedDateTime.format()</target>
        </trans-unit>
        <trans-unit id="6b706357a682527517ff2de8617d0b4735ea9bec" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.from()</source>
          <target state="translated">ChronoZonedDateTime.from()</target>
        </trans-unit>
        <trans-unit id="87c33edba4bc2f6ccd9fe5c03e000b9bf87e6c30" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.get()</source>
          <target state="translated">ChronoZonedDateTime.get()</target>
        </trans-unit>
        <trans-unit id="630b53c12b69308b59a2d870475933b60966cc1a" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.getChronology()</source>
          <target state="translated">ChronoZonedDateTime.getChronology()</target>
        </trans-unit>
        <trans-unit id="4333406f7b9f17af8c40c95578583b191607934e" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.getLong()</source>
          <target state="translated">ChronoZonedDateTime.getLong()</target>
        </trans-unit>
        <trans-unit id="7c678f66e5da40bc6ca7304db8df270aaaf8632e" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.getOffset()</source>
          <target state="translated">ChronoZonedDateTime.getOffset()</target>
        </trans-unit>
        <trans-unit id="a92d138c5ff24ccadabdb657bd9ae3fef8f0de50" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.getZone()</source>
          <target state="translated">ChronoZonedDateTime.getZone()</target>
        </trans-unit>
        <trans-unit id="e470d29a641c37ea91e25bdba67537d2fd3653fc" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.hashCode()</source>
          <target state="translated">ChronoZonedDateTime.hashCode()</target>
        </trans-unit>
        <trans-unit id="55fcf03249bc078b77dfb7f8e7e0e2fde86893fc" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.isAfter()</source>
          <target state="translated">ChronoZonedDateTime.isAfter()</target>
        </trans-unit>
        <trans-unit id="67e10946a1068baf1eb66ff7fc17b8e24872cc8b" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.isBefore()</source>
          <target state="translated">ChronoZonedDateTime.isBefore()</target>
        </trans-unit>
        <trans-unit id="398a3b507a9816e505b1fe3497de7bf287adbbb0" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.isEqual()</source>
          <target state="translated">ChronoZonedDateTime.isEqual()</target>
        </trans-unit>
        <trans-unit id="493e4c32e92578afa5df6b48314068ded256fc8e" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.isSupported()</source>
          <target state="translated">ChronoZonedDateTime.isSupported()</target>
        </trans-unit>
        <trans-unit id="f6e16adf3976b3fa09ab6f9bbab8a7631357708e" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.minus()</source>
          <target state="translated">ChronoZonedDateTime.minus()</target>
        </trans-unit>
        <trans-unit id="bd4795e563cf903014df837751b40128efb8fd30" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.plus()</source>
          <target state="translated">ChronoZonedDateTime.plus()</target>
        </trans-unit>
        <trans-unit id="629bcb645c76e0a4854cd72dba0baca02bfac711" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.query()</source>
          <target state="translated">ChronoZonedDateTime.query()</target>
        </trans-unit>
        <trans-unit id="178ec6f1febb5edfc41a73404448220bd92969de" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.range()</source>
          <target state="translated">ChronoZonedDateTime.range()</target>
        </trans-unit>
        <trans-unit id="b699a3c8fecf65bf97335421aaa442046b8c74eb" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.timeLineOrder()</source>
          <target state="translated">ChronoZonedDateTime.timeLineOrder()</target>
        </trans-unit>
        <trans-unit id="214a003b0f941940a55d5ac4aaddc934e565ec82" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.toEpochSecond()</source>
          <target state="translated">ChronoZonedDateTime.toEpochSecond()</target>
        </trans-unit>
        <trans-unit id="513551856cf22fd88b87129a3ece858e5c80177b" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.toInstant()</source>
          <target state="translated">ChronoZonedDateTime.toInstant()</target>
        </trans-unit>
        <trans-unit id="0d45d1718ff3e1779d8fdb6547e7324c876ba608" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.toLocalDate()</source>
          <target state="translated">ChronoZonedDateTime.toLocalDate()</target>
        </trans-unit>
        <trans-unit id="c10d9d11de0af61015fc79aea6326500326cb604" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.toLocalDateTime()</source>
          <target state="translated">ChronoZonedDateTime.toLocalDateTime()</target>
        </trans-unit>
        <trans-unit id="9940b37cc2a0b54fa6406aff33bd195877c96351" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.toLocalTime()</source>
          <target state="translated">ChronoZonedDateTime.toLocalTime()</target>
        </trans-unit>
        <trans-unit id="9f74db3c4497122baebb8d962734499ec6756764" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.toString()</source>
          <target state="translated">ChronoZonedDateTime.toString()</target>
        </trans-unit>
        <trans-unit id="4a5dc4f1ede39cff496c87869430942095cb1c33" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.with()</source>
          <target state="translated">ChronoZonedDateTime.with()</target>
        </trans-unit>
        <trans-unit id="cf2ac92460cade6a594678261ef73fe5a6c4b434" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.withEarlierOffsetAtOverlap()</source>
          <target state="translated">ChronoZonedDateTime.withEarlierOffsetAtOverlap()</target>
        </trans-unit>
        <trans-unit id="af9592406ee3412d79f40e54ef9073eda15ca1e0" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.withLaterOffsetAtOverlap()</source>
          <target state="translated">ChronoZonedDateTime.withLaterOffsetAtOverlap()</target>
        </trans-unit>
        <trans-unit id="808cf2564106e748d5b10f04aac6c74b4440e442" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.withZoneSameInstant()</source>
          <target state="translated">ChronoZonedDateTime.withZoneSameInstant()</target>
        </trans-unit>
        <trans-unit id="951ae3c2068884815b751f1e256a53cfbf503d2c" translate="yes" xml:space="preserve">
          <source>ChronoZonedDateTime.withZoneSameLocal()</source>
          <target state="translated">ChronoZonedDateTime.withZoneSameLocal()</target>
        </trans-unit>
        <trans-unit id="070374ff80947b819eb8815e8d492bf0a862577e" translate="yes" xml:space="preserve">
          <source>Chronology</source>
          <target state="translated">Chronology</target>
        </trans-unit>
        <trans-unit id="aa62d8600d5b096919f640af742ac0c637507d2e" translate="yes" xml:space="preserve">
          <source>Chronology ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a880ecadf28e699c0f30012e33d084672b73f1" translate="yes" xml:space="preserve">
          <source>Chronology Id, for example, &quot;Hijrah-umalqura&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7e82ed21f0a87f840bb3a469bc6f78ef99be95" translate="yes" xml:space="preserve">
          <source>Chronology.compareTo()</source>
          <target state="translated">Chronology.compareTo()</target>
        </trans-unit>
        <trans-unit id="0ae24f7027e65293f7511becf07d3636a569512c" translate="yes" xml:space="preserve">
          <source>Chronology.date()</source>
          <target state="translated">Chronology.date()</target>
        </trans-unit>
        <trans-unit id="107c3a47a31574ff069f9d5f754c92ca9bdf596a" translate="yes" xml:space="preserve">
          <source>Chronology.dateEpochDay()</source>
          <target state="translated">Chronology.dateEpochDay()</target>
        </trans-unit>
        <trans-unit id="808200632e6741347771842be5c14746e250799f" translate="yes" xml:space="preserve">
          <source>Chronology.dateNow()</source>
          <target state="translated">Chronology.dateNow()</target>
        </trans-unit>
        <trans-unit id="a3ec4754ffd1788a8543996980838b25cc66f590" translate="yes" xml:space="preserve">
          <source>Chronology.dateYearDay()</source>
          <target state="translated">Chronology.dateYearDay()</target>
        </trans-unit>
        <trans-unit id="e908b9907aff985b209e899ce0f5de1b800e77c3" translate="yes" xml:space="preserve">
          <source>Chronology.equals()</source>
          <target state="translated">Chronology.equals()</target>
        </trans-unit>
        <trans-unit id="c9f12a0b8a259b421150af5042dafb701e6569f0" translate="yes" xml:space="preserve">
          <source>Chronology.eraOf()</source>
          <target state="translated">Chronology.eraOf()</target>
        </trans-unit>
        <trans-unit id="d83706f83a6eb7be8a6413c9de55c6d5ed4396ae" translate="yes" xml:space="preserve">
          <source>Chronology.eras()</source>
          <target state="translated">Chronology.eras()</target>
        </trans-unit>
        <trans-unit id="0a5f405a09704e1281b63e8b953dc29e8681a5d2" translate="yes" xml:space="preserve">
          <source>Chronology.from()</source>
          <target state="translated">Chronology.from()</target>
        </trans-unit>
        <trans-unit id="b729be604fa588e417acafaab30d6efd593d408b" translate="yes" xml:space="preserve">
          <source>Chronology.getAvailableChronologies()</source>
          <target state="translated">Chronology.getAvailableChronologies()</target>
        </trans-unit>
        <trans-unit id="345e9116b43b4315f763b1d1dba9d26b04312005" translate="yes" xml:space="preserve">
          <source>Chronology.getCalendarType()</source>
          <target state="translated">Chronology.getCalendarType()</target>
        </trans-unit>
        <trans-unit id="ae91e71972a36cafb18e2423c6e987a140e195d5" translate="yes" xml:space="preserve">
          <source>Chronology.getDisplayName()</source>
          <target state="translated">Chronology.getDisplayName()</target>
        </trans-unit>
        <trans-unit id="fffc03f9d7e096f62c0b38e225d90b42a4b9f592" translate="yes" xml:space="preserve">
          <source>Chronology.getId()</source>
          <target state="translated">Chronology.getId()</target>
        </trans-unit>
        <trans-unit id="06d9ccd07c446fd81a590f0928db59143fe47da1" translate="yes" xml:space="preserve">
          <source>Chronology.hashCode()</source>
          <target state="translated">Chronology.hashCode()</target>
        </trans-unit>
        <trans-unit id="d3151aa03ec4629f05fc3cba572eadbb0a99677c" translate="yes" xml:space="preserve">
          <source>Chronology.isLeapYear()</source>
          <target state="translated">Chronology.isLeapYear()</target>
        </trans-unit>
        <trans-unit id="c9a4d71ecf1ecbc58cf77e5ffe1755d3a39afc54" translate="yes" xml:space="preserve">
          <source>Chronology.localDateTime()</source>
          <target state="translated">Chronology.localDateTime()</target>
        </trans-unit>
        <trans-unit id="d6d4deed38d2c2d65d19a20c263f6d7192388948" translate="yes" xml:space="preserve">
          <source>Chronology.of()</source>
          <target state="translated">Chronology.of()</target>
        </trans-unit>
        <trans-unit id="08357e2719c045c2641813140295302e06ecae62" translate="yes" xml:space="preserve">
          <source>Chronology.ofLocale()</source>
          <target state="translated">Chronology.ofLocale()</target>
        </trans-unit>
        <trans-unit id="fc80ab5edea34dd1135b8e74db54e75ad035f06d" translate="yes" xml:space="preserve">
          <source>Chronology.period()</source>
          <target state="translated">Chronology.period()</target>
        </trans-unit>
        <trans-unit id="c73d668420f4c3d6cd8b5c40eaa47ec14fd86cdf" translate="yes" xml:space="preserve">
          <source>Chronology.prolepticYear()</source>
          <target state="translated">Chronology.prolepticYear()</target>
        </trans-unit>
        <trans-unit id="99b4716fe8ffa05b84dfa1bfdeeeb14e2c843348" translate="yes" xml:space="preserve">
          <source>Chronology.range()</source>
          <target state="translated">Chronology.range()</target>
        </trans-unit>
        <trans-unit id="9dc0067b863153f53f6a90a8dfbf25f587e686f9" translate="yes" xml:space="preserve">
          <source>Chronology.resolveDate()</source>
          <target state="translated">Chronology.resolveDate()</target>
        </trans-unit>
        <trans-unit id="1b717f5f16dcdabac8b2a370fe1b5d5c6a9ec34b" translate="yes" xml:space="preserve">
          <source>Chronology.toString()</source>
          <target state="translated">Chronology.toString()</target>
        </trans-unit>
        <trans-unit id="34038afe845c28473056d361a657607718cb1bc1" translate="yes" xml:space="preserve">
          <source>Chronology.zonedDateTime()</source>
          <target state="translated">Chronology.zonedDateTime()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
