<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="saltstack">
    <body>
      <group id="saltstack">
        <trans-unit id="36e1ad00f15d94e18da796def9d91d5a51355337" translate="yes" xml:space="preserve">
          <source>The number of worker threads to start up in the pool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c7a0c431953b79ab300011c8a3f20fc019249c" translate="yes" xml:space="preserve">
          <source>The number of years for which the certificate was purchased</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2990b0c01cb235eb5f9cb984ef7473372f397bd" translate="yes" xml:space="preserve">
          <source>The numbered field in the text file that contains the password, with numbering beginning at 1 (one).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1812c0139f65e3269bb4c599f58c00c41db258dc" translate="yes" xml:space="preserve">
          <source>The numbered field in the text file that contains the username, with numbering beginning at 1 (one).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266df967ac959855efd81c4d7c60c1da8c717955" translate="yes" xml:space="preserve">
          <source>The numeric id for the backup you wish to delete, as found using &lt;a href=&quot;#salt.modules.file.list_backups&quot;&gt;&lt;code&gt;file.list_backups&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba6922b3bb37e6aa9916db17c14671cd70cfef7" translate="yes" xml:space="preserve">
          <source>The numeric id for the backup you wish to restore, as found using &lt;a href=&quot;#salt.modules.file.list_backups&quot;&gt;&lt;code&gt;file.list_backups&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1a0ac6beb278ff0709ce7f8c9d4e1505414436" translate="yes" xml:space="preserve">
          <source>The numerical representation of where the rule should be inserted into the chain. Note that &lt;code&gt;-1&lt;/code&gt; is not a supported position value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5954f0feca783d7a1927e71780380ff0de7f807d" translate="yes" xml:space="preserve">
          <source>The object name in the cloud</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4333b420b3a4187ab783a3dd16f1543c688be86b" translate="yes" xml:space="preserve">
          <source>The object returned is a dictionary with the following keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754b21b4f198b0f4b4a25b0d48351fe4d5c460ca" translate="yes" xml:space="preserve">
          <source>The object type, which can be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264744c5770a1cbcfe110969eec833509e55effc" translate="yes" xml:space="preserve">
          <source>The objects that are returned from each of the magic method calls are setup to be used a Python context managers (&lt;code&gt;with&lt;/code&gt;) and when you use them as such all declarations made within the scope will &lt;strong&gt;automatically&lt;/strong&gt; use the enclosing state as a requisite!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce88d139a31918fcbd09b4ae6b300d2ef97d5f2" translate="yes" xml:space="preserve">
          <source>The octal representation of the permissions. (Default:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3842cb742c5141e42976c346a01b15124033df" translate="yes" xml:space="preserve">
          <source>The old &lt;strong&gt;date &amp;gt; /tmp/crontest&lt;/strong&gt; will be replaced by &lt;strong&gt;superscript &amp;gt; /tmp/crontest&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7508d7c4872a1ca7269b1fca05d328b04d15e04" translate="yes" xml:space="preserve">
          <source>The only required key in the master configuration is &lt;code&gt;pillar_ldap&lt;/code&gt; pointing to a file containing the actual configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2721b574810d86cdb9029c99ce5e8c6dfb10289b" translate="yes" xml:space="preserve">
          <source>The only supported value is 4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd45b52d8019280db1099c3c101aa6b2e4ba4f6f" translate="yes" xml:space="preserve">
          <source>The option name in csf.conf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd19c33e192f1dee911b2e54532d2d4dd3290cd7" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;tag_list_key&lt;/code&gt; indicates which keys should be added to &lt;code&gt;ec2_tags_list&lt;/code&gt; and be split by &lt;code&gt;tag_list_sep&lt;/code&gt; (by default &lt;code&gt;;&lt;/code&gt;). If a tag key is included in &lt;code&gt;tag_list_key&lt;/code&gt; it is removed from ec2_tags. If a tag does not exist it is still included as an empty list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550fa06ed87bcc0e1d0324fabb91dff701b86e15" translate="yes" xml:space="preserve">
          <source>The optional description of the snapshot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d267d60b068477a07e57b27531e3aaa2678f95b" translate="yes" xml:space="preserve">
          <source>The optional value to get</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de20c6b1c057cd26cd411c6b5e5c820761054d2" translate="yes" xml:space="preserve">
          <source>The options can also simply be passed as a dictionary, though this can be error-prone due to some &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/troubleshooting/yaml_idiosyncrasies.html#yaml-idiosyncrasies&quot;&gt;idiosyncrasies&lt;/a&gt; with how PyYAML loads nested data structures:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cade6d94ae1a04cf53c101882695e32cecea64d4" translate="yes" xml:space="preserve">
          <source>The options include match criteria:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8050b714b37bc4e5dd20296f5ab0cb453571f4" translate="yes" xml:space="preserve">
          <source>The options passed to the key, pass a list object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814cfa68ceb10d931b97cad703e3aff01b3a01c6" translate="yes" xml:space="preserve">
          <source>The options should come after a double-dash (as shown in the examples below) to keep Salt's own argument parser from interpreting them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5962607a87171a3288a7a05f0ae623c6309c05f" translate="yes" xml:space="preserve">
          <source>The options specified here will be passed to the deserializer to load the existing data, before merging with the specified data and re-serializing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb9f313c1a0f927b4248699794a75a8c752e8a6" translate="yes" xml:space="preserve">
          <source>The order ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efbd681954d0bbfbd4e200d65a35248261420c87" translate="yes" xml:space="preserve">
          <source>The order matters here, if the same parameters are set but in a different order, they will be removed and replaced in the order specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db7c85fd7e734a534195d5dbd144da7f0480b88" translate="yes" xml:space="preserve">
          <source>The order of the filters and their terms is very important. The configuration loaded on the device respects the order defined in the &lt;code&gt;filters&lt;/code&gt; and/or inside the pillar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3bd43d2efea8098a764f2ea44e4c667cd4a506" translate="yes" xml:space="preserve">
          <source>The order of the terms is very important. The configuration loaded on the device respects the order defined in the &lt;code&gt;terms&lt;/code&gt; and/or inside the pillar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f94a7336b097485451b157685bbd42ab852af0" translate="yes" xml:space="preserve">
          <source>The organization that the certificate should use. Defaults to Salted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b532f1ff3339d9c6cb823a897966859c0ea6982" translate="yes" xml:space="preserve">
          <source>The original function which triggered the mod_watch call (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2ed054787fd330f59d1c70eaa14c944c62d4e7" translate="yes" xml:space="preserve">
          <source>The outbound setting. If &lt;code&gt;None&lt;/code&gt; is passed, the setting will remain unchanged. Valid values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991db19a53e47a38c24456cf7d79975694b255aa" translate="yes" xml:space="preserve">
          <source>The output format can be configured in two ways: Using the &lt;code&gt;--out-indent&lt;/code&gt; CLI flag and specifying a positive integer or a negative integer to group JSON from each minion to a single line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5358189d7f0c13cb05285c811ed121d6dc48d4" translate="yes" xml:space="preserve">
          <source>The output has the same structure as the &lt;code&gt;extract&lt;/code&gt; execution function, the difference being that &lt;code&gt;index&lt;/code&gt; is capable to identify what template to use, based on the platform details and the &lt;code&gt;command&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b06c64f6bd53c8a00305fffa1cf63704fcc5b1" translate="yes" xml:space="preserve">
          <source>The output is a dictionary having the same form as &lt;a href=&quot;salt.modules.napalm_network#salt.modules.napalm_network.load_config&quot;&gt;&lt;code&gt;net.load_config&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d7e929d19858af432f7cbae85e5ac804f5d8f8" translate="yes" xml:space="preserve">
          <source>The output modes have one modifier:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21314ff88b0d8230f58a618a928b34f9415b6500" translate="yes" xml:space="preserve">
          <source>The output of the &lt;code&gt;chocolatey&lt;/code&gt; command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce07c22f6083a925e2120fc339c3b24f53bfdad4" translate="yes" xml:space="preserve">
          <source>The owner of the directory. If this is not passed, user will be used. If user is not passed, the account under which Salt is running will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3608496777b1ce14145a86a884dae226b3f1ada" translate="yes" xml:space="preserve">
          <source>The owner of the registry key. If this is not passed, the account under which Salt is running will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2629035d3b85c9b9de06d6b11896f9ea3146d57c" translate="yes" xml:space="preserve">
          <source>The owner of the symlink and directories if &lt;code&gt;makedirs&lt;/code&gt; is True. If this is not passed, &lt;code&gt;user&lt;/code&gt; will be used. If &lt;code&gt;user&lt;/code&gt; is not passed, the account under which Salt is running will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4075db3fe507a5fd9353d0f4349c36d8d0429f9c" translate="yes" xml:space="preserve">
          <source>The package name to set answers for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20644c88ac56da207c0f6c59bb3877af88f33b3" translate="yes" xml:space="preserve">
          <source>The package name with its available versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03cf673e3004f7d489a1fdf173a5827ff2528499" translate="yes" xml:space="preserve">
          <source>The package repository is configured on each host using &lt;code&gt;/etc/installurl&lt;/code&gt; from OpenBSD 6.1 onwards. Earlier releases relied on &lt;code&gt;/etc/pkg.conf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c143b156d434e77ae075768e87f4ef2af1146643" translate="yes" xml:space="preserve">
          <source>The package to check</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ca51035f1d5a66786e9162776bc3fee794f0c3" translate="yes" xml:space="preserve">
          <source>The package to install</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00413518a7d5eb27add501173f1a71e133bda4da" translate="yes" xml:space="preserve">
          <source>The package to install. Can be a .cab file, a .msu file, or a folder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125b875fc6c89ba858e840df44242c42fc93aa34" translate="yes" xml:space="preserve">
          <source>The package to remove</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a34a8fba5d3c83081d762f74add5bdd614d6315" translate="yes" xml:space="preserve">
          <source>The package to uninstall</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43c3cf5a33dc7d682ca7f0b733ef961b60b812d" translate="yes" xml:space="preserve">
          <source>The packages provided by this source would be made available via the &lt;code&gt;precise&lt;/code&gt; release, therefore &lt;code&gt;fromrepo&lt;/code&gt; would need to be set to &lt;code&gt;precise&lt;/code&gt; for Salt to install the package from this source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2dbbcb047b9fe0e5b4c6fa44bf8755e073460e" translate="yes" xml:space="preserve">
          <source>The packages to install</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591f4480b6a58840290d10783aed26c73cf11728" translate="yes" xml:space="preserve">
          <source>The packages to uninstall.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8626f9557b06d93c78fe861951a8f19dd6b246d8" translate="yes" xml:space="preserve">
          <source>The panos proxy leverages the XML API functionality on the Palo Alto firewall. The Salt proxy must have access to the Palo Alto firewall on HTTPS (tcp/443).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6dd79bcd52121fc7b248d14676520dc3c75a8e" translate="yes" xml:space="preserve">
          <source>The parameter 'visibility' defaults to 'public' if not specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140c4ea468f7a15a5616dc346605c26770a3356a" translate="yes" xml:space="preserve">
          <source>The parameter to change</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1830e63c5ddb7547dfdff8d6260b7c652fdd66ec" translate="yes" xml:space="preserve">
          <source>The parameter to change. If the parameter is not supplied, the name will be used as the parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="386f4972ff4473b7b84804b8495289511f70231c" translate="yes" xml:space="preserve">
          <source>The parameter to delete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f5708a2b42e7195edcfe6d61344afd9b221b7f" translate="yes" xml:space="preserve">
          <source>The parameter to return</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb101f2fc2cc4e09b3d02f1d59d66b95c97900b" translate="yes" xml:space="preserve">
          <source>The parent directory must exist. Also, this will overwrite the file if it is already present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea809742d458999cd5fdcba32d125b3561af944" translate="yes" xml:space="preserve">
          <source>The parent object that contains your environment's configuration settings. This is a dictionary of the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd19d0e9f7203385be95568461bf05a29546e097" translate="yes" xml:space="preserve">
          <source>The parsed configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218ccffa3730734a61f45d54b0be687d827390b6" translate="yes" xml:space="preserve">
          <source>The partition will start &amp;lt;start&amp;gt; from the beginning of the disk, and end &amp;lt;end&amp;gt; from the beginning of the disk. resize never changes the minor number. Extended partitions can be resized, so long as the new extended partition completely contains all logical partitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19bc77b7e20ab1d2621f6183ecfe8a8108971a80" translate="yes" xml:space="preserve">
          <source>The pass value to be passed into the fstab, Default is &lt;code&gt;0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed427a046b9c8458834e3f38aa68429f3f97cfa3" translate="yes" xml:space="preserve">
          <source>The password for the certificate being installed formatted in the way described for openssl command in the PASS PHRASE ARGUMENTS section</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfca414071135d78ef3549bce3d4832f83c4689f" translate="yes" xml:space="preserve">
          <source>The password for the certificate being installed formatted in the way described for openssl command in the PASS PHRASE ARGUMENTS section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58567895db69da4b9f6163ae8a9b0ce4debed59" translate="yes" xml:space="preserve">
          <source>The password for the given user. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed12c478fcc661cba193f30507fb811c727656b" translate="yes" xml:space="preserve">
          <source>The password for the master database user. Can be any printable ASCII character except &quot;/&quot;, '&quot;', or &quot;@&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8580f64013bb15c6b3fab7f08291e9d776bbb2ab" translate="yes" xml:space="preserve">
          <source>The password for the new user. Must comply with account policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a18393482e6746ac9842457a3744f423b16f99e" translate="yes" xml:space="preserve">
          <source>The password in hashed form. Be sure to quote the password because YAML doesn't like the &lt;code&gt;*&lt;/code&gt;. A password hash can be obtained from the mysql command-line client like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63be45c3060590f7109303a5aa828bfb15038cd" translate="yes" xml:space="preserve">
          <source>The password needed to establish the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a923c88d16860c9bc7469e817a27001a6accce" translate="yes" xml:space="preserve">
          <source>The password of the user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65c2432e1daf1b8887bc3b7893884cef7d6a2ec" translate="yes" xml:space="preserve">
          <source>The password of the user to manage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b62a09712e0e2fb856663e04a80a24027bd439" translate="yes" xml:space="preserve">
          <source>The password that is used in the certificate. Only required if your passing a p12 file. Note: This will be outputted to logs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1167674ea7b2e709de31f871894219630eea5766" translate="yes" xml:space="preserve">
          <source>The password to pass to the device to authenticate the NX-API connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c24a092377bb5f032f46515bdc10490ec35dc9" translate="yes" xml:space="preserve">
          <source>The password to pass to the device to authenticate the eAPI connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8718a28c07ae70565ab0a1134d06e16194f88ee" translate="yes" xml:space="preserve">
          <source>The password to set for the new user. Will take precedence over the &lt;code&gt;password_hash&lt;/code&gt; option if both are specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75bfaa4cda49043ca8f4f93e9411dc797de1a82" translate="yes" xml:space="preserve">
          <source>The password to set for the postgres user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adde418116fad5a2e5b9460f25c6e201c2fe3a94" translate="yes" xml:space="preserve">
          <source>The password to use for TDE encryption if an encryption key is not used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a66ce7b156c3dd7e55a8fa3646815b111bc0c2" translate="yes" xml:space="preserve">
          <source>The password to use for authentication. This should set the task to run whether the user is logged in or not, but is currently not working.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b957980f06a257bf58095cbe24cabfd50140fb" translate="yes" xml:space="preserve">
          <source>The password to use for the new user. Will take precedence over the &lt;code&gt;password_hash&lt;/code&gt; option if both are specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a01c89bf2770b393741c7509b30f83cc95e35c" translate="yes" xml:space="preserve">
          <source>The password to use for the proxy server if required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e2bacb069a49049429a9085296b40b866e02948" translate="yes" xml:space="preserve">
          <source>The password to use for this user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe2fca5ab5bb3093d5b101221994a69535b5608" translate="yes" xml:space="preserve">
          <source>The password to use for this user. Will take precedence over the &lt;code&gt;password_hash&lt;/code&gt; option if both are specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e295f72052cb2340a823db73754f15f44abf1410" translate="yes" xml:space="preserve">
          <source>The password to use if required by the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c76a7120c1a0310a8cab596724ce6cfa54b3d9b" translate="yes" xml:space="preserve">
          <source>The password to use to unlock the keychain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8557a0dc61daec4d90f3cec9b40a9518b23a0f1" translate="yes" xml:space="preserve">
          <source>The password to user for auto login</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db67657bfa59918c9922a296b7352839a493b4bd" translate="yes" xml:space="preserve">
          <source>The password used only when creating the user, unless password is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce9aa88e4adaa3db99111e339c20ff28720ae1a" translate="yes" xml:space="preserve">
          <source>The password used to access a password protected server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebda8a20f0e11bfccc9236aed23a26e87edc5fe" translate="yes" xml:space="preserve">
          <source>The password used to access a password protected server. Password constraints:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="258a105cd8366c40924c44f255a1416552683589" translate="yes" xml:space="preserve">
          <source>The password used to access the chassis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d67a2ca78dd832e510bcc44e3845d84af924d53" translate="yes" xml:space="preserve">
          <source>The password used to authenticate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25390116f68d70769badaefb4aeee17195929d72" translate="yes" xml:space="preserve">
          <source>The password used to login to the ESXi host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748ecc8ca752d1b29f7baa497464914f210b4809" translate="yes" xml:space="preserve">
          <source>The password used to login to the Panorama server. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba02335e0c5e9aa5e07327e15084636a49a6f80" translate="yes" xml:space="preserve">
          <source>The password used to login to the cimc host. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017ec89d0df414ce46df06c4181c9f76ccdde64a" translate="yes" xml:space="preserve">
          <source>The password used to login to the host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60809feff34962f3f65da9c4ec81cd2d2482fd70" translate="yes" xml:space="preserve">
          <source>The password used to login to the panos host. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0145191438871649cf3632069b8f96f6d45cc7" translate="yes" xml:space="preserve">
          <source>The password used to login to the vCenter server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc1f659a8137d036193ff891a5b69fbd4d79389" translate="yes" xml:space="preserve">
          <source>The password will be present in the events logged to the minion log file at the &lt;code&gt;debug&lt;/code&gt; log level. If the minion is logging at &lt;code&gt;debug&lt;/code&gt; (or more verbose), then be advised that the password will appear in the log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8437b2f47d4820b2c181565e2253521631e3fdd" translate="yes" xml:space="preserve">
          <source>The patch file to apply</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1101d0b6b6267855d54a4337a07ce510834567" translate="yes" xml:space="preserve">
          <source>The path / URL of the archive to check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789b21d5b3d0ba22a641360b9a10b4af2c176e11" translate="yes" xml:space="preserve">
          <source>The path for the group, defaults to '/'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70c634434152837b67488c61e80daa38c33ec42" translate="yes" xml:space="preserve">
          <source>The path for the server certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1418dbd23a32890e443795d97ff5945d4d0dc756" translate="yes" xml:space="preserve">
          <source>The path in which the policy will be created. Default is '/'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e615c6dfa8bc9f0422a9ab2518ab7cb7f51daec" translate="yes" xml:space="preserve">
          <source>The path in zookeeper where the lock is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c94380db350a6b3d494c5d5cb511f4cce46aad0" translate="yes" xml:space="preserve">
          <source>The path must end with a trailing slash otherwise the directory(s) will be created up to the parent directory. For example if path is &lt;code&gt;C:\temp\test&lt;/code&gt;, then it would be treated as &lt;code&gt;C:\temp\&lt;/code&gt; but if the path ends with a trailing slash like &lt;code&gt;C:\temp\test\&lt;/code&gt;, then it would be treated as &lt;code&gt;C:\temp\test\&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c17c80e46c2cb4d85db9c79f1bc374909664d5" translate="yes" xml:space="preserve">
          <source>The path must end with a trailing slash otherwise the directory/directories will be created up to the parent directory. For example if path is &lt;code&gt;/opt/code&lt;/code&gt;, then it would be treated as &lt;code&gt;/opt/&lt;/code&gt; but if the path ends with a trailing slash like &lt;code&gt;/opt/code/&lt;/code&gt;, then it would be treated as &lt;code&gt;/opt/code/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="404a95b5478b7ba7b6732290e7669a1f6028d394" translate="yes" xml:space="preserve">
          <source>The path of the archive to be created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c773abd82245f2a3e586f9224f3c978a006cd7ab" translate="yes" xml:space="preserve">
          <source>The path of the user. Default is '/'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="901ea3921f9ec11563924854e6fdb1da39e0c32b" translate="yes" xml:space="preserve">
          <source>The path of these &lt;code&gt;yaml&lt;/code&gt; files must be relative to the directory of the PillarStack config file. These paths support unix style pathname pattern expansion through the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d492f7d75caea64eb91796d32d506da5deb6272e" translate="yes" xml:space="preserve">
          <source>The path on the local machine of the file to upload as a blob. Either this or blob_content must be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb14899d2fea5f3712f571ca3c9ecc05e81fd33e" translate="yes" xml:space="preserve">
          <source>The path on the local machine to download the blob to. Either this or return_content must be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a467556661355188ece180c0c36fd9f326bda672" translate="yes" xml:space="preserve">
          <source>The path on the minion to check for backups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b902a761e953ecba89a9bb15eb47cb0fb088df05" translate="yes" xml:space="preserve">
          <source>The path on the remote device where to store the files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e779abc7dc74d5a3073bd432f304c61c28cef87" translate="yes" xml:space="preserve">
          <source>The path that should be watched</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1a3fbc479d4d2f04e376dcf4c876aa99f4813b" translate="yes" xml:space="preserve">
          <source>The path that the symlink points to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd006705fb1b349e15d68ce8b229ef90361c266" translate="yes" xml:space="preserve">
          <source>The path to a SSL certificate. (See below)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9776327b5eb2da508c1df8c1c1492db583ab34b0" translate="yes" xml:space="preserve">
          <source>The path to a certain the TextFSM template. This can be specified using the absolute path to the file, or using one of the following URL schemes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d7ebfe13076cb0b42ad5814017904cbb95c84e" translate="yes" xml:space="preserve">
          <source>The path to a file containing a single NIC vector attribute. Syntax within the file can be the usual attribute=value or XML. Can be used instead of &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c6d3964a348c27fac76b9054ceb3f77284ad09" translate="yes" xml:space="preserve">
          <source>The path to a file containing a single disk vector attribute. Syntax within the file can be the usual attribute=value or XML. Can be used instead of &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1cc883cd482a65d245d67bcd870da5fe8e9a9f" translate="yes" xml:space="preserve">
          <source>The path to a file containing new capacity elements CPU, VCPU, MEMORY. If one of them is not present, or its value is 0, the VM will not be re-sized. Syntax within the file can be the usual attribute=value or XML. Can be used instead of &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c97030286a0caf42c4231e9fb0b1eef878cdf211" translate="yes" xml:space="preserve">
          <source>The path to a file containing new user template contents. Syntax within the file can be the usual attribute=value or XML. Can be used instead of &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a23770a94bf9e410965a8e685d8855f228679c" translate="yes" xml:space="preserve">
          <source>The path to a file containing the elements of the template to be allocated. Syntax within the file can be the usual attribute=value or XML. Can be used instead of &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbcd103a44b581181ba36fbb9c6d18278105fcae" translate="yes" xml:space="preserve">
          <source>The path to a file containing the elements of the template to be updated. Syntax within the file can be the usual attribute=value or XML. Can be used instead of &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd98aac8ff7ba66662546f6c77aaf7a908b7599a" translate="yes" xml:space="preserve">
          <source>The path to a file containing the template of the address range to add. Syntax within the file can be the usual attribute=value or XML. Can be used instead of &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c666beb9b0927fa15b2d5528dfa8bee3649d1e" translate="yes" xml:space="preserve">
          <source>The path to a file containing the template of the image to allocate. Syntax within the file can be the usual attribute=value or XML. Can be used instead of &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec6743c9c39450d385a7c2e18438fedb3a6f4e2" translate="yes" xml:space="preserve">
          <source>The path to a file containing the template of the image. Syntax within the file can be the usual attribute=value or XML. Can be used instead of &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c2ded9716dc06bfb2ecd557c03f72859e3603f" translate="yes" xml:space="preserve">
          <source>The path to a file containing the template of the security group. Syntax within the file can be the usual attribute=value or XML. Can be used instead of &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13ba71a8a448d1a7350ae0d9e7913b5aa969da5" translate="yes" xml:space="preserve">
          <source>The path to a file containing the template of the virtual network to allocate. Syntax within the file can be the usual attribute=value or XML. Can be used instead of &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4139f9397dc84bb48dc88731d4fb1276a9f4f6" translate="yes" xml:space="preserve">
          <source>The path to a file defining the template of the VM to allocate. Syntax within the file can be the usual attribute=value or XML. Can be used instead of &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f25febb5c57ba03d6dcea16da4a5f031ceb9878" translate="yes" xml:space="preserve">
          <source>The path to a file defining the template of the address reservation. Syntax within the file can be the usual attribute=value or XML. Can be used instead of &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a71fa673a88dbbc3615727a8382de281c828d04" translate="yes" xml:space="preserve">
          <source>The path to a file defining the template of the lease to hold. Syntax within the file can be the usual attribute=value or XML. Can be used instead of &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f42edb6fb14df7664e35ef14f7c1be750961e2" translate="yes" xml:space="preserve">
          <source>The path to a file defining the template of the lease to release. Syntax within the file can be the usual attribute=value or XML. Can be used instead of &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe45b69206276f58ab14d2ae43f71a8d965e15b" translate="yes" xml:space="preserve">
          <source>The path to a file that contains the raw output from the device, used to extract the structured data. This option supports the usual Salt-specific schemes: &lt;code&gt;file://&lt;/code&gt;, &lt;code&gt;salt://&lt;/code&gt;, &lt;code&gt;http://&lt;/code&gt;, &lt;code&gt;https://&lt;/code&gt;, &lt;code&gt;ftp://&lt;/code&gt;, &lt;code&gt;s3://&lt;/code&gt;, &lt;code&gt;swift://&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ecd890d54f8b4bcb579884a7a19b3c139274e6" translate="yes" xml:space="preserve">
          <source>The path to be archived</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72627602e2a5490954f73b22d9a959468a66037" translate="yes" xml:space="preserve">
          <source>The path to get the value of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7fe525e79f5173d85e84bfe20d69e5d2aee106" translate="yes" xml:space="preserve">
          <source>The path to list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63e4539d18c447c2df4f7252a75415027c80c8c" translate="yes" xml:space="preserve">
          <source>The path to match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6298a3975970b009b9e8abdd5ee8549faf02aa08" translate="yes" xml:space="preserve">
          <source>The path to remove</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee92f8e87956034f77ef20f9fb4ef71afc27b88" translate="yes" xml:space="preserve">
          <source>The path to store your backups. If you are using cores and you can specify to append the core name to the path in the backup method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6938aa55e177bc9d25dc606e20e1eb0c44de0a54" translate="yes" xml:space="preserve">
          <source>The path to the &lt;code&gt;.psd1&lt;/code&gt; file on &lt;code&gt;file_roots&lt;/code&gt; to cache at the location specified by &lt;code&gt;config_data&lt;/code&gt;. If this is specified, &lt;code&gt;config_data&lt;/code&gt; must be a local path instead of a hash table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd227cc5c42c9454293ba019f7a6058592858936" translate="yes" xml:space="preserve">
          <source>The path to the Mercurial repository</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6716b097abc4b8efeb6072d6cc42026e9f5f2e0e" translate="yes" xml:space="preserve">
          <source>The path to the Subversion repository</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f8c3085a2847ceb72486b80980df7417086fce" translate="yes" xml:space="preserve">
          <source>The path to the TextFSM template. This can be specified using the absolute path to the file, or using one of the following URL schemes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fceeed2f0f463f31e22943c5439fdd1ca45fb78" translate="yes" xml:space="preserve">
          <source>The path to the archive tarball</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a917306c7f87bbe3af1e6731428b46c510ba5e1" translate="yes" xml:space="preserve">
          <source>The path to the directory to be initialized</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a696685b2ef700f9167fdd9b5f667f38c1b934" translate="yes" xml:space="preserve">
          <source>The path to the file in question. Will be treated as a relative path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02036cfe5690145b8bed6aec06b2a1b036eefa4" translate="yes" xml:space="preserve">
          <source>The path to the file to manage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c3d9ebb6116d47fe966dae3bd2453e1a1a4b4b" translate="yes" xml:space="preserve">
          <source>The path to the file to use for authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf405d852fbf1f38e5d3e14cfb2d03d017ae52f" translate="yes" xml:space="preserve">
          <source>The path to the file/directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927a85bb468e33388d5d2353295b8c2ecc83bff2" translate="yes" xml:space="preserve">
          <source>The path to the git checkout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1eebb54d298f934b5ae4eb51e4edcaacfac99c" translate="yes" xml:space="preserve">
          <source>The path to the git checkout. Must be an absolute path, or the word &lt;code&gt;global&lt;/code&gt; to indicate that a global key should be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ffea846a1286038d49e01dce21261a0ae22f98" translate="yes" xml:space="preserve">
          <source>The path to the git checkout. Must be an absolute path, or the word &lt;code&gt;global&lt;/code&gt; to indicate that a global key should be unset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ad86cab2b2f25f14619e75307b02014a557886" translate="yes" xml:space="preserve">
          <source>The path to the git checkout. Optional (and ignored if present) when &lt;code&gt;remote&lt;/code&gt; is set to a URL instead of a remote name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62cece9924d21306bd79846b86a3fdf0dc0f26e7" translate="yes" xml:space="preserve">
          <source>The path to the image to display. The image must be 8 x 8 pixels in size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d1293ed1819f6608ae750a78902111b7168163" translate="yes" xml:space="preserve">
          <source>The path to the location where the device is to be mounted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd888e2dcebd29bb0891a539593a83f5da773752" translate="yes" xml:space="preserve">
          <source>The path to the location where the device is to be unmounted from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb643e92dabb29be6a59e9619a295b36fc628075" translate="yes" xml:space="preserve">
          <source>The path to the main git checkout or a linked worktree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229c5029be2eb8ca48502ad800b27f5c2455343b" translate="yes" xml:space="preserve">
          <source>The path to the private key for your SSL certificate. (See below)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f00d230f6b9b42f8ddaf3b62a9e1ef38c9fab3ed" translate="yes" xml:space="preserve">
          <source>The path to the role/instance profile. (See &lt;a href=&quot;https://boto.readthedocs.io/en/latest/ref/iam.html#boto.iam.connection.IAMConnection.create_role&quot;&gt;https://boto.readthedocs.io/en/latest/ref/iam.html#boto.iam.connection.IAMConnection.create_role&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835f3d4185fc008788dbdda8118df0995156a2e6" translate="yes" xml:space="preserve">
          <source>The path to the submodule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e9c0a4fce7512d6687c839ecd9187ce92e1970" translate="yes" xml:space="preserve">
          <source>The path to the virtualenv to be created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b808e953a554705964723a06dfce9f45aacfcb6" translate="yes" xml:space="preserve">
          <source>The path to write the file to, either &lt;code&gt;path&lt;/code&gt; or &lt;code&gt;text&lt;/code&gt; are required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c7a171be7c468ce4a4ac10e530e825a159a178" translate="yes" xml:space="preserve">
          <source>The path where the TextFSM templates can be found. This can be either absolute path on the server, either specified using the following URL schemes: &lt;code&gt;file://&lt;/code&gt;, &lt;code&gt;salt://&lt;/code&gt;, &lt;code&gt;http://&lt;/code&gt;, &lt;code&gt;https://&lt;/code&gt;, &lt;code&gt;ftp://&lt;/code&gt;, &lt;code&gt;s3://&lt;/code&gt;, &lt;code&gt;swift://&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b5d9351ca218f14e4b28147f9269447bb49d526" translate="yes" xml:space="preserve">
          <source>The path where the TextFSM templates can be found. This option implies the usage of the TextFSM index file. &lt;code&gt;textfsm_path&lt;/code&gt; can be either absolute path on the server, either specified using the following URL mschemes: &lt;code&gt;file://&lt;/code&gt;, &lt;code&gt;salt://&lt;/code&gt;, &lt;code&gt;http://&lt;/code&gt;, &lt;code&gt;https://&lt;/code&gt;, &lt;code&gt;ftp://&lt;/code&gt;, &lt;code&gt;s3://&lt;/code&gt;, &lt;code&gt;swift://&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27009dde7affb8539acdb16c0ae549fca0feef11" translate="yes" xml:space="preserve">
          <source>The path which should be deleted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1b044afcc69b1e586cd2d41abbb1a96b4c190d" translate="yes" xml:space="preserve">
          <source>The pattern to match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3481561790a8efb02aa573fac9c538d436848e8" translate="yes" xml:space="preserve">
          <source>The pecl extension name to install</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d6fde8c336c198edcacc34aa2d317cf9ce7bf6" translate="yes" xml:space="preserve">
          <source>The pecl extension name to uninstall</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d03be9d4587392790f5b4fcc41706a1ad0f94e" translate="yes" xml:space="preserve">
          <source>The pecl extension state to install</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f2fe29fca9254a90e47e5e6a579fac7fed36592" translate="yes" xml:space="preserve">
          <source>The pecl extension version to install. This option may be ignored to install the latest stable version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e055a8fbd876bc61944905a8394bdc2ddf2ecd5" translate="yes" xml:space="preserve">
          <source>The pecl extensions to install.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edba31eae0bdeb99c4fb4325047704b49bcc8ac" translate="yes" xml:space="preserve">
          <source>The pecl extensions to uninstall.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c781dd2e98d82eed4206047cdfed740ab0325cba" translate="yes" xml:space="preserve">
          <source>The pecl extensions to update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0311a0098dd64cdb2499d7ccbfc50aaa66684922" translate="yes" xml:space="preserve">
          <source>The permission for team members within the repository, can be 'pull', 'push' or 'admin'. If not specified, the default permission specified on the team will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="082fd9be175f12cc4ae1a6d9e234a3443544e34a" translate="yes" xml:space="preserve">
          <source>The permissions are described by a dictionary containing the following keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea610d92d519756bea0e139bd69f5ef70c2ea4e9" translate="yes" xml:space="preserve">
          <source>The permissions mode to set any directories created. Not supported on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507a3a64b2446b27f16d2d5749857e162b3df1c5" translate="yes" xml:space="preserve">
          <source>The permissions mode to set any files created if 'mode' is run in 'recurse'. This defaults to dir_mode. Not supported on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220bff1fcc035cb20bb86ab803ba965f14341021" translate="yes" xml:space="preserve">
          <source>The permissions mode to set on any directories created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b697cf1f058e44e80f44b36bf5da8cb7edd07db2" translate="yes" xml:space="preserve">
          <source>The permissions mode to set on any files created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1532a8bfd99b7f5137929801208f637a513b0b" translate="yes" xml:space="preserve">
          <source>The permissions mode to set on any symlink created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d482802a29986ac1634cd56b3a060122968a9295" translate="yes" xml:space="preserve">
          <source>The permissions on a bucket using access control lists (ACL).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc22e4d23dcd107115463d630dfb2275f17d8339" translate="yes" xml:space="preserve">
          <source>The permissions that should be assigned to a user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b9efd7bba060e532bca916bd5b47829ac0a2f4" translate="yes" xml:space="preserve">
          <source>The permissions to set on the copied file, aka 644, '0775', '4664'. If &lt;code&gt;preserve&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;, then this will be ignored. Not supported on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bdb0dd1757af9d1b2ab25bfad8e1a23a26b546b" translate="yes" xml:space="preserve">
          <source>The permissions to set on this file, aka 644, 0775, 4664. Not supported on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0ed133681d61fe2d59e85616ab03dc72b3e860" translate="yes" xml:space="preserve">
          <source>The permissions to set on this file, e.g. &lt;code&gt;644&lt;/code&gt;, &lt;code&gt;0775&lt;/code&gt;, or &lt;code&gt;4664&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712d42b5d58c4dd717d3a577ba72700bd3f3046f" translate="yes" xml:space="preserve">
          <source>The permissions to set on this file, e.g. &lt;code&gt;644&lt;/code&gt;, &lt;code&gt;0775&lt;/code&gt;, or &lt;code&gt;4664&lt;/code&gt;. The default mode for new files and directories corresponds to the umask of the salt process. The mode of existing files and directories will only be changed if &lt;code&gt;mode&lt;/code&gt; is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7ab31d4b38b69fd7fd13b29e7d3c124a781af1" translate="yes" xml:space="preserve">
          <source>The pillar can be hidden on sentry return by setting hide_pillar: true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="434d039210b61ab99c3f272950f3abbb145c582d" translate="yes" xml:space="preserve">
          <source>The pillar environment to grab pillars from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2365a5ae3c0fa4b800f42032396dd579b93baa5a" translate="yes" xml:space="preserve">
          <source>The pillar key to get value from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1ccd5c03d68b6b406262c76e2eaefe2595b6e6" translate="yes" xml:space="preserve">
          <source>The pillar key to use for lookup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95b501c3ba23decc47679c4671a5d7e2309a9b4" translate="yes" xml:space="preserve">
          <source>The pillar value can be a list. The function will return the &lt;code&gt;lookup_dict&lt;/code&gt; value for a first found item in the list matching one of the &lt;code&gt;lookup_dict&lt;/code&gt; keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628919864000d917f3a50ca5df985331a80d5a7c" translate="yes" xml:space="preserve">
          <source>The pillar will attempt to recurse the attribute and return all child attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a109aa91bd3340400c34aa58f9f9f14f3390dc3" translate="yes" xml:space="preserve">
          <source>The pillar will return an empty dict if the 'os' or 'virtual' grain are not 'VMWare', 'ESXi', or 'VMWare ESXi'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc7995d2852f461507269cabb605e8b2e78a1358" translate="yes" xml:space="preserve">
          <source>The pkg or dmg file to install</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47e1fce3536ba5a823cfab79ba5fef2996c5659" translate="yes" xml:space="preserve">
          <source>The pkgbuild state is the front of Salt package building backend. It automatically builds DEB and RPM packages from specified sources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df75210f0346c1f8fc2c8d4d4e4182124197e05" translate="yes" xml:space="preserve">
          <source>The platform name, as defined in the TextFSM index file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1754dc74b8470bc1f90fe5c859a724b0c1fbf3e" translate="yes" xml:space="preserve">
          <source>The policy configuration has been loaded from the pillar, having the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18ae6ea81f8d85c41795163aa03c2d1a6ecd6c8" translate="yes" xml:space="preserve">
          <source>The policy that grants an entity permission to assume the role. (See &lt;a href=&quot;https://boto.readthedocs.io/en/latest/ref/iam.html#boto.iam.connection.IAMConnection.create_role&quot;&gt;https://boto.readthedocs.io/en/latest/ref/iam.html#boto.iam.connection.IAMConnection.create_role&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7139d6725b76fd0fe094ac5ea504f4c4063238a" translate="yes" xml:space="preserve">
          <source>The policy to set for the NTP service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52524e5e0c5437f848f947d9bf9238ef0ab190ed" translate="yes" xml:space="preserve">
          <source>The policy to set for the service. For example, 'automatic'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85ad247367a613d9d88762723feadb575e8945e" translate="yes" xml:space="preserve">
          <source>The port fields &lt;code&gt;source_port&lt;/code&gt; and &lt;code&gt;destination_port&lt;/code&gt; can be used as above to select either a single value, either a list of values, but also they can select port ranges. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40dd057cfed7ff998da22a3f2f6e2f33ab491eee" translate="yes" xml:space="preserve">
          <source>The port for the webserver to listen on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfd226e20e023a1ed627e44a9c1ca5f0c8abdb5" translate="yes" xml:space="preserve">
          <source>The port name, in &lt;code&gt;category/name&lt;/code&gt; format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9a0ca89d48a9534378794d84432430450842d6" translate="yes" xml:space="preserve">
          <source>The port number on which each member of the replication group accepts connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45faa7d3c465ebf952ac7a499c8069c84e0d0f9f" translate="yes" xml:space="preserve">
          <source>The port number on which each of the cache nodes accepts connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8d59c1ad0aa79e1a73b5fcf103a7d2436b27a3" translate="yes" xml:space="preserve">
          <source>The port number on which each of the cache nodes will accept connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9f4f855c835a58eb5678f9a4cc4c28c3ea408b" translate="yes" xml:space="preserve">
          <source>The port number on which the database accepts connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818ad92cb0e44e1b75d3fd45064b786516ab4858" translate="yes" xml:space="preserve">
          <source>The port of the publisher, as configured on napalm-logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a3fda289a61c5cf6fb257e5e9881c3dfcd8bf6" translate="yes" xml:space="preserve">
          <source>The port of the remote device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b011091cc31d3f54bb8acfaefea5ca8af625eaf" translate="yes" xml:space="preserve">
          <source>The port on which MongoDB is listening</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd64ccf677bbf640ea9c8b661aeffb54157be70c" translate="yes" xml:space="preserve">
          <source>The port or port range. Required if name is not formatted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297d35ec5bba5e7f384948786b155c57ab7ccebb" translate="yes" xml:space="preserve">
          <source>The port that the Cisco NSO API is running on, 8080 by default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d3eda651e35735241c46db25611e7a7c17df4e" translate="yes" xml:space="preserve">
          <source>The port to connect to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f072a5feafc2480844f577cca544975d17449be" translate="yes" xml:space="preserve">
          <source>The port to test the connection on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8d28ca271d6a2aa03c856daf593abd878d6f6c" translate="yes" xml:space="preserve">
          <source>The port used by the proxy server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a43235bd96775cc81b5e2b308213446137897b6d" translate="yes" xml:space="preserve">
          <source>The position in the stream where AWS Lambda should start reading. (TRIM_HORIZON | LATEST)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba43c06053669e50c5d52a3ba52a1390740ca9c5" translate="yes" xml:space="preserve">
          <source>The postgres_cluster state module is used to manage PostgreSQL clusters. Clusters can be set as either absent or present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="812cbd64297bf4cb8601d74ab7a24483c378538c" translate="yes" xml:space="preserve">
          <source>The postgres_database module is used to create and manage Postgres databases. Databases can be set as either absent or present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32cb6245ca199b4c4d8541f57b9c1f86334bd6a9" translate="yes" xml:space="preserve">
          <source>The postgres_group module is used to create and manage Postgres groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553b356b46e672da71ebf39cdbbeab85b163dc94" translate="yes" xml:space="preserve">
          <source>The postgres_initdb module is used to initialize the postgresql data directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abeee200529f22165a2e7f9869ce772b0138e2a3" translate="yes" xml:space="preserve">
          <source>The postgres_language module is used to create and manage Postgres languages. Languages can be set as either absent or present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614f7366f101c22033f4bf81b3b77a46da611511" translate="yes" xml:space="preserve">
          <source>The postgres_privileges module is used to manage Postgres privileges. Privileges can be set as either absent or present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2396656c4b29ae39b039f19250e8c725cb7e0570" translate="yes" xml:space="preserve">
          <source>The postgres_schemas module is used to create and manage Postgres schemas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92ae092a4c6fc7e82144a1bdb098f84e0950a94" translate="yes" xml:space="preserve">
          <source>The postgres_users module is used to create and manage Postgres users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e244f40461a8dc753b4b8d2e01389f73fa784a8a" translate="yes" xml:space="preserve">
          <source>The power states of a blade server, provided as a list and identified by their server numbers. Viable options are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866074ff4155646028ef75e8cab4772e5c824190" translate="yes" xml:space="preserve">
          <source>The preferred format is using the &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/states/requisites.html#requisites-onchanges&quot;&gt;onchanges Requisite&lt;/a&gt;, which works on &lt;code&gt;cmd.run&lt;/code&gt; as well as on any other state. The example would then look as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d31b22a42503ce749b292f64e330fc2bffc6a2" translate="yes" xml:space="preserve">
          <source>The prefix of the Redis keys having the value of the keys to be cached under a certain bank.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4f37e10b8cb07bf126d20849a729e2dec83f72" translate="yes" xml:space="preserve">
          <source>The prefix used for the name of the Redis key storing the list of sub-banks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9033f8d4914a11bc552c7816c71dd01137b4680" translate="yes" xml:space="preserve">
          <source>The prefix used for the name of the Redis keyt storing the list of keys under a certain bank.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40175d7adc60ece69c6892da704636984470212d" translate="yes" xml:space="preserve">
          <source>The primary entry point to Salt's REST API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0265617519b70cd7eeb489bfd7605af353cc1036" translate="yes" xml:space="preserve">
          <source>The primary purpose of this function is to store the sql field list and the depth to which we process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035b0c44e767dca59d9dbf09ea711ac5d3732223" translate="yes" xml:space="preserve">
          <source>The principal which can be a certificate ARN or a Cognito ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="708008d8e540603fda173d5af1ff6e47b25342cc" translate="yes" xml:space="preserve">
          <source>The priority for the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d3d0a8f0d75c430642f20d5d225eed378af4c1" translate="yes" xml:space="preserve">
          <source>The priority of the JIRA ticket. Default: &lt;code&gt;Normal&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13158d9fe03b6da49c587b8980a700b8dfd8610" translate="yes" xml:space="preserve">
          <source>The private ip address to use for this ENI. If this is not specified AWS will automatically assign a private IP address to the ENI. Must be specified at creation time; will be ignored afterward.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73494999a14381aca65f851cbdb2718fcf48c27f" translate="yes" xml:space="preserve">
          <source>The private key above is shortened to keep the example brief, but shows how to do multiline string in YAML. The key is followed by a pipe character, and the mutliline string is indented two more spaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b01259c1876d05d888bc0f8b4d1f5bd3b05f07" translate="yes" xml:space="preserve">
          <source>The private key that will be used to sign this crl. This is usually your CA's private key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0041916aee1ba92e0bb71095a9069025ff92921" translate="yes" xml:space="preserve">
          <source>The private key to verify, can be a string or path to a private key in PEM format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7fafebce1dc125cd6ced5e39f34d5bb013140a" translate="yes" xml:space="preserve">
          <source>The process id of the PowerShell invocation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6777c186f718d37fd1f812199640e1d8df14bf92" translate="yes" xml:space="preserve">
          <source>The profile (JBoss domain mode only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a3d75e71f3d4c4d2161bf07e8d5655b6bd2bfb" translate="yes" xml:space="preserve">
          <source>The profile name (JBoss domain mode only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f415164dff9a472206bf59ae265dafb35115598" translate="yes" xml:space="preserve">
          <source>The profile name (domain mode only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44c42441606308826cf49c49acd26a16eda3b2c" translate="yes" xml:space="preserve">
          <source>The profile name for this datasource (domain mode only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c729630b20054fbb77d8285bb11f2428d689bea" translate="yes" xml:space="preserve">
          <source>The profile that contains a dict of region, key, keyid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c284eb14995d120773eff03487c9f2d43f9253" translate="yes" xml:space="preserve">
          <source>The project (name) for this user (overrides tenant in api v3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466cbf4d300bdffdefee7dd6acabf4e48a7525b4" translate="yes" xml:space="preserve">
          <source>The project ID on which this network will be created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11bf455bb2575dfefb77ed18393e9f9d4f3ee06" translate="yes" xml:space="preserve">
          <source>The project ID on which this security group will be created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68f46567e7c228e18acaacf621d83f4929b2256" translate="yes" xml:space="preserve">
          <source>The project description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ba32a2baa23be93242bece1df4bda18ed3ec1e" translate="yes" xml:space="preserve">
          <source>The project id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8a21f0ec794e3c4e41d8ff44c37b2be99ff55c" translate="yes" xml:space="preserve">
          <source>The project name, which must be unique within the owning domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01f60b5167a7893e2348dfa5b056311020e296c" translate="yes" xml:space="preserve">
          <source>The project name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e233831b9e10f9a7148efbff1882383d74bd613d" translate="yes" xml:space="preserve">
          <source>The properties specified through the CLI have higher priority than the pillar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da2cab2331489d71fcd33eb670d93c73035ff47" translate="yes" xml:space="preserve">
          <source>The properties specified through the state arguments have higher priority than the pillar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0396d1800c421de06d7be428f7f5f3a0c24bd1" translate="yes" xml:space="preserve">
          <source>The properties to be added to the certificate request, including items like subject, extensions and public key. See above for valid properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b060b447fc9857d93819eeb3fc4f7a18261e1ae1" translate="yes" xml:space="preserve">
          <source>The property api_url is optional. By defaul will use the public HipChat API at &lt;a href=&quot;https://api.hipchat.com&quot;&gt;https://api.hipchat.com&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3099b9ca2ffbb0d7a5a0f6a5948a2a7ddb45775d" translate="yes" xml:space="preserve">
          <source>The property to query within the selected profile. Valid options are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348722ccc1d9a9f2b7937557c32368b29f2bb659" translate="yes" xml:space="preserve">
          <source>The protocol and port spec. Can be formatted as &lt;code&gt;(tcp|udp)/(port|port-range)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0b07e5371655091af38bab9e8ec0d7f7ec95fb" translate="yes" xml:space="preserve">
          <source>The protocol for the port, &lt;code&gt;tcp&lt;/code&gt; or &lt;code&gt;udp&lt;/code&gt;. Required if name is not formatted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de14b063329befe2db551f7863adfe5bb24f642" translate="yes" xml:space="preserve">
          <source>The protocol that is matched by the security group rule. Valid values are &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;tcp&lt;/code&gt;, &lt;code&gt;udp&lt;/code&gt;, and &lt;code&gt;icmp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d1c9796d8ec2a48c6358618afc15e161679aed" translate="yes" xml:space="preserve">
          <source>The protocol that is matched by the security group rule. Valid values are None, tcp, udp, and icmp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf72a40bddc599678747f78bcc53f998a3f592be" translate="yes" xml:space="preserve">
          <source>The protocol. Can be any of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70353b0d336687cdfdb0d28cfb920ca011303f5d" translate="yes" xml:space="preserve">
          <source>The protocol. Either 'tcp', 'udp'. Only applicable if port is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1427208052d1e7fb5698f60fcbadae02683cc582" translate="yes" xml:space="preserve">
          <source>The protocol. Either 'tcp', or 'udp'. Only applicable if port is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b88f81dd340a4d21c9bbbe31002253881a47d37" translate="yes" xml:space="preserve">
          <source>The protocol. May be one of 'tcp', 'udp', 'tcp6', or 'udp6'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d83fc22e4830e274e1b2704a57719aa02813ad" translate="yes" xml:space="preserve">
          <source>The provisioned IOPS you want to associate with this volume. Optionally specified at volume creation time; will be ignored afterward. Requires 'volume_name'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f375a9929d233810cf59daee2e3399a25b2dc72" translate="yes" xml:space="preserve">
          <source>The proxy integration will try the passwords listed in order. It is configured this way so you can have a regular password and the password you may be updating for an ESXi host either via the &lt;a href=&quot;../../modules/all/salt.modules.vsphere#salt.modules.vsphere.update_host_password&quot;&gt;&lt;code&gt;vsphere.update_host_password&lt;/code&gt;&lt;/a&gt; execution module function or via the &lt;a href=&quot;../../states/all/salt.states.esxi#salt.states.esxi.password_present&quot;&gt;&lt;code&gt;esxi.password_present&lt;/code&gt;&lt;/a&gt; state function. This way, after the password is changed, you should not need to restart the proxy minion--it should just pick up the the new password provided in the list. You can then change pillar at will to move that password to the front and retire the unused ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be8e923929d9f520e0eb28c15fbad6e8a42828b" translate="yes" xml:space="preserve">
          <source>The proxy integration will try the passwords listed in order. It is configured this way so you can have a regular password, a potential fallback password, and the third password can be the one you intend to change the chassis to use. This way, after it is changed, you should not need to restart the proxy minion--it should just pick up the third password in the list. You can then change pillar at will to move that password to the front and retire the unused ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f857523d966b768de88f5154666b70264097468d" translate="yes" xml:space="preserve">
          <source>The proxy server to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9d284dc5b9e76c64e02e788eccd6532cd75d3d" translate="yes" xml:space="preserve">
          <source>The proxy['panos.is_required_version'] method will check if a panos device is currently running a version equal or greater than the passed version. For example, proxy['panos.is_required_version']('7.0.0') would match both 7.1.0 and 8.0.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e536d7b47de6c3677259422bc218092cc19b9ac2" translate="yes" xml:space="preserve">
          <source>The public key fingerprint hash type that the public key fingerprint was originally hashed with. This defaults to &lt;code&gt;md5&lt;/code&gt; if not specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdf1d127fc1e1a481c00e73eb783abda78df6a2" translate="yes" xml:space="preserve">
          <source>The public key fingerprint hash type that the public key fingerprint was originally hashed with. This defaults to &lt;code&gt;sha256&lt;/code&gt; if not specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b9f712dfe675cf8a53b30c1538f462a0d3a068" translate="yes" xml:space="preserve">
          <source>The public key to be included in this certificate. This can be sourced from a public key, certificate, csr or private key. If a private key is used, the matching public key from the private key will be generated before any processing is done. This means you can request a certificate from a remote CA using a private key file as your public_key and only the public key will be sent across the network to the CA. If neither &lt;code&gt;public_key&lt;/code&gt; or &lt;code&gt;csr&lt;/code&gt; are specified, it will be assumed that this is a self-signed certificate, and the public key derived from &lt;code&gt;signing_private_key&lt;/code&gt; will be used. Specify either &lt;code&gt;public_key&lt;/code&gt; or &lt;code&gt;csr&lt;/code&gt;, not both. Because you can input a CSR as a public key or as a CSR, it is important to understand the difference. If you import a CSR as a public key, only the public key will be added to the certificate, subject or extension information in the CSR will be lost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a4bf2176c289a667e76571049ff2ffb3c777da" translate="yes" xml:space="preserve">
          <source>The public key to verify, can be a string or path to a PEM formatted certificate, csr, or another private key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="932f14f6798a09edbed6b9a81ec7a8228d270ffa" translate="yes" xml:space="preserve">
          <source>The public key to verify, can be a string or path to a PEM formatted certificate, csr, or private key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717bd6074ed70514bd8d10b673c770bc52980bb3" translate="yes" xml:space="preserve">
          <source>The public key which must be present in the known_hosts file (optional if fingerprint specified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf0932038c4a751ea10c6e016f90e30cfa6e82c2" translate="yes" xml:space="preserve">
          <source>The public key which must be presented in the known_hosts file (optional if fingerprint specified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9aad37287776c0a764fd66a8926ff74d35448a1" translate="yes" xml:space="preserve">
          <source>The public url of service endpoint (for V2 API)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d95340fe7333346acd4dc697a0cdedf2bc89e74" translate="yes" xml:space="preserve">
          <source>The python pretty-print system was once the default outputter. It simply passes the return data through to &lt;code&gt;pprint.pformat&lt;/code&gt; and prints the results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4eee1614c43132a5e001c963aa04bee5f41a3e4" translate="yes" xml:space="preserve">
          <source>The qemu img command is wrapped for specific functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f294fa4034dfd3525af9e0424028c107097642" translate="yes" xml:space="preserve">
          <source>The qemu system comes with powerful tools, such as qemu-img and qemu-nbd which are used here to build up kvm images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544ba4dcd9c03c79af8beb06ae76ae33c7a2e0c4" translate="yes" xml:space="preserve">
          <source>The query can be provided as a string as we have just shown, but they can be provided as lists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95af6c40da2f65b3b4b91b2051d2d4cbc40eefeb" translate="yes" xml:space="preserve">
          <source>The query content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d907e8f257ae592a07831d1686f1821af918c238" translate="yes" xml:space="preserve">
          <source>The query string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044353ba632589f53d82644e615d46dc8a61d6de" translate="yes" xml:space="preserve">
          <source>The query to execute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648fbfb6e4b6825f185cf1e7ecdd156f0f14745b" translate="yes" xml:space="preserve">
          <source>The querystring method is less useful when all files are being cached from the same environment, but is a good way of caching files from multiple different environments in the same command. For example, the below command will cache the first file from the &lt;code&gt;config1&lt;/code&gt; environment, and the second one from the &lt;code&gt;config2&lt;/code&gt; environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d82bd2bb0dc7344384d71d50e3bce3b8a60028" translate="yes" xml:space="preserve">
          <source>The question the is being pre-answered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ef580cb66a8986c3de55885431381fc8a5ca79" translate="yes" xml:space="preserve">
          <source>The queue functions such as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f3442556a116dddf0b793366355edbe4fabfcc3" translate="yes" xml:space="preserve">
          <source>The quota can be managed for the system:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a79628dc277085ba893e215a0e815738b435948" translate="yes" xml:space="preserve">
          <source>The range for with_lists is 1 to number_of_fields, inclusive. Numbers outside this range are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57b9f482da3866a03559ebff6c0ab72a6717865" translate="yes" xml:space="preserve">
          <source>The range if IPs for the subnet, in CIDR format. For example: 10.0.0.0/24. Block size must be between /16 and /28 netmask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9b7947f68af9db0d0b3df0e32d4ca3f50c5123" translate="yes" xml:space="preserve">
          <source>The range of IPs in CIDR format, for example: 10.0.0.0/24. Block size must be between /16 and /28 netmask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa757a0f73529ffb4b0b84b4075428cd64a728c" translate="yes" xml:space="preserve">
          <source>The raw output from the device, to be parsed and extract the structured data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2708700b07b2060291af4ac1522f34def3aba00f" translate="yes" xml:space="preserve">
          <source>The rcctl service module for OpenBSD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d28c9910f9e44393f0972b0c4ac7842824cbc5" translate="yes" xml:space="preserve">
          <source>The reactor in the example increases the BGP prefix limit when triggered by an event as above. The minion is matched using the &lt;code&gt;host&lt;/code&gt; field from the &lt;code&gt;data&lt;/code&gt; (which is the body of the event), compared to the &lt;a href=&quot;../../grains/all/salt.grains.napalm#salt.grains.napalm.hostname&quot;&gt;&lt;code&gt;hostname grain&lt;/code&gt;&lt;/a&gt; field. When the event occurs, the reactor will execute the &lt;a href=&quot;../../modules/all/salt.modules.napalm_network#salt.modules.napalm_network.load_template&quot;&gt;&lt;code&gt;net.load_template&lt;/code&gt;&lt;/a&gt; function, sending as arguments the template &lt;code&gt;salt://increase_prefix_limit.jinja&lt;/code&gt; defined by the user in their environment and the complete OpenConfig object under the variable name &lt;code&gt;openconfig_structure&lt;/code&gt;. Inside the Jinja template, the user can process the object from &lt;code&gt;openconfig_structure&lt;/code&gt; and define the bussiness logic as required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51cf466e1fa3d0477378e2cf8018321a3dbff89d" translate="yes" xml:space="preserve">
          <source>The read throughput for this table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031426c9d1cd35d6c8e808804bff22b83e002d6e" translate="yes" xml:space="preserve">
          <source>The real name of the user identity which is represented by the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef14f9bdc6737d8891ed8250f3eb1c505a6e8fe" translate="yes" xml:space="preserve">
          <source>The real server address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6907aa3747c84a33989c57bb082a1fce505c5589" translate="yes" xml:space="preserve">
          <source>The realm required by htdigest authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920db3dc9d8c32bfc314581061a1b9b9dcca1fc8" translate="yes" xml:space="preserve">
          <source>The reason for this requirement is because &lt;code&gt;pip&lt;/code&gt; already does a pretty good job parsing its own requirements. It makes no sense for Salt to do &lt;code&gt;pip&lt;/code&gt; requirements parsing and validation before passing them to the &lt;code&gt;pip&lt;/code&gt; library. It's functionality duplication and it's more error prone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a1d13d96c7567543b7a2487ed3adcbba5db740" translate="yes" xml:space="preserve">
          <source>The record type (A, NS, MX, TXT, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ddb335bc9729e4be4357530ada425ff07bb53c" translate="yes" xml:space="preserve">
          <source>The redis server information specified in the minion config file can be overridden in states using the following arguments: &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;db&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c2f6e129cd11a278bea4bc6950a904d052abd9" translate="yes" xml:space="preserve">
          <source>The region name to assign the endpoint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8193a12f2b2d37518dfb2416a3afa609d44742" translate="yes" xml:space="preserve">
          <source>The region of the endpoint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b964a823e99340d00a0d571fa13dffd53508f0" translate="yes" xml:space="preserve">
          <source>The region of the endpoint. Defaults to &lt;code&gt;RegionOne&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d4fdd7976e5f537ef5f4bfc71e63a5c9c42f886" translate="yes" xml:space="preserve">
          <source>The region to connect to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903999af4a7df1a5c521dbc010748fd6f0acb03c" translate="yes" xml:space="preserve">
          <source>The region where we expect to find the lambda functions. This is used to determine the region where we should look for the Lambda Function for integration purposes. The region determination is based on the following priority:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3abfe363df3431fe1e8014a82f2c3b3bc10acaee" translate="yes" xml:space="preserve">
          <source>The register endpoint is used to add a new check to the local agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f5af698008628e2091f947d79c38c3e442f4ed" translate="yes" xml:space="preserve">
          <source>The regular expression to match the child configuration lines against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102e427e698c4f05b919249aa627915e427e56bc" translate="yes" xml:space="preserve">
          <source>The regular expression to match the child lines against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a6a36cbd418c931215090da05239af85b5a1b5" translate="yes" xml:space="preserve">
          <source>The regular expression to match the configuration lines against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e11c7e61d4a4e6b345d73c5de6a222a9fb17425" translate="yes" xml:space="preserve">
          <source>The regular expression to match the lines against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb88c053e7bb6ff11ba66ed8eb540c74ed0e6a00" translate="yes" xml:space="preserve">
          <source>The regular expression to match the parent configuration lines against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90564d3b55d8208833d2289cd6c6396b98a288b" translate="yes" xml:space="preserve">
          <source>The regular expression to match the parent lines against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800b40c0043248ab88c0b9d9e56f50cc2bade895" translate="yes" xml:space="preserve">
          <source>The related documentation can be found in the &lt;a href=&quot;https://github.com/coreos/etcd&quot;&gt;Etcd documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bd14063200f0e97c1ae548e1987f8003dbe74e" translate="yes" xml:space="preserve">
          <source>The related documentation can be found in the &lt;a href=&quot;https://www.consul.io/docs/index.html&quot;&gt;Consul documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440beb0aafc160bb395058060a2c112db153f72e" translate="yes" xml:space="preserve">
          <source>The release is located directly after the source's URL. The actual release name is the part before the slash, so to install version &lt;strong&gt;4:0.8.10-0ubuntu0.12.04.1&lt;/strong&gt; either &lt;code&gt;precise-updates&lt;/code&gt; or &lt;code&gt;precise-security&lt;/code&gt; could be used for the &lt;code&gt;fromrepo&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f227c08c8f091518f9a6907f92f629089a1b02" translate="yes" xml:space="preserve">
          <source>The release number of an installed kernel. This must be the entire release number as returned by &lt;a href=&quot;#salt.modules.kernelpkg_linux_apt.list_installed&quot;&gt;&lt;code&gt;list_installed()&lt;/code&gt;&lt;/a&gt;, not the package name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea683a380b4c6c029f0ce0194c28e3213462c06f" translate="yes" xml:space="preserve">
          <source>The release number of an installed kernel. This must be the entire release number as returned by &lt;a href=&quot;#salt.modules.kernelpkg_linux_yum.list_installed&quot;&gt;&lt;code&gt;list_installed()&lt;/code&gt;&lt;/a&gt;, not the package name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2502dc526ad999b2df0db3d85ce23b2304c0775" translate="yes" xml:space="preserve">
          <source>The remaining fields in the return dictionary are described in more detail in the &lt;code&gt;Returns&lt;/code&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f13a95f84724010b8e5379a84030145f5de154c" translate="yes" xml:space="preserve">
          <source>The remote IP prefix to be associated with this security group rule. This attribute matches the specified IP prefix as the source IP address of the IP packet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18d9836a6448e8d9fb1a881b5d6b753c2446abe" translate="yes" xml:space="preserve">
          <source>The remote IP. Can be any of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfaa82ed7441a303dc909357e769a3eda0d5de6" translate="yes" xml:space="preserve">
          <source>The remote branch or revision to checkout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aecfc6100cc1d707e361a56ffd428cd1f04678f4" translate="yes" xml:space="preserve">
          <source>The remote branch, tag, or revision ID to checkout after clone / before update. If specified, then Salt will also ensure that the tracking branch is set to &lt;code&gt;&amp;lt;remote&amp;gt;/&amp;lt;rev&amp;gt;&lt;/code&gt;, unless &lt;code&gt;rev&lt;/code&gt; refers to a tag or SHA1, in which case Salt will ensure that the tracking branch is unset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90fee60a60957c9c4f7ef99ebffd8c68e170fbab" translate="yes" xml:space="preserve">
          <source>The remote branch, tag, or revision hash to clone/pull</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7432f4ee45b96ad1449a01d49200c4da95fe1fdb" translate="yes" xml:space="preserve">
          <source>The remote group ID to be associated with this security group rule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34939b46661323ed11d32d8171aad471535d547" translate="yes" xml:space="preserve">
          <source>The remote host to probe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7907ee00f12228adc330ed162f6c9fd3f6e20e6e" translate="yes" xml:space="preserve">
          <source>The remote host with which to peer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9135384cba4b61266ad5f867f07a62891b21da27" translate="yes" xml:space="preserve">
          <source>The renderer pipe to send the file through; this is overridden by a &quot;she-bang&quot; at the top of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f91eb3e76862236e734a2fb1fa9c8e656e532d5" translate="yes" xml:space="preserve">
          <source>The rendering result does not necessarily need to be YAML, instead it can be any format interpreted by Salt's rendering pipeline (including pure Python).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="350fdff4f09992ef4c56be76d716fc6b41353205" translate="yes" xml:space="preserve">
          <source>The replacement text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c6e7b5bccee3a84564f706dc2f389ac5d140bb6" translate="yes" xml:space="preserve">
          <source>The replacement text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092522894eb66d1c4977d8ed3a18c85630ca7092" translate="yes" xml:space="preserve">
          <source>The replication group identifier. Note: In general this parameter is not needed, as 'name' is used if it's not provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a606d978deebbf2297756f72a8c06e963c41fc4c" translate="yes" xml:space="preserve">
          <source>The replication group identifier. This parameter is stored as a lowercase string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53474b80b09c1a3ea9d69aa8125d39ab462273c8" translate="yes" xml:space="preserve">
          <source>The replication group to which this cache cluster should belong. If this parameter is specified, the cache cluster will be added to the specified replication group as a read replica; otherwise, the cache cluster will be a standalone primary that is not part of any replication group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c2f0e49bacb4f90348a03c1eb0333456c11fe6" translate="yes" xml:space="preserve">
          <source>The repo passed in must be a fully formed repository definition string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36158928ecc62c2902ea29330080e4047ce362a" translate="yes" xml:space="preserve">
          <source>The repo passed in needs to be a complete repo entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48047cfbfcb1d71f1b9b1dd6c4a0fea00d9b9163" translate="yes" xml:space="preserve">
          <source>The request body must be an array of commands. Use this workflow to build a command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641680c339e1b0d6f173480eee1208f0cb1238f5" translate="yes" xml:space="preserve">
          <source>The request payment configuration for a bucket. By default, the bucket owner pays for downloads from the bucket. This configuration parameter enables the bucket owner (only) to specify that the person requesting the download will be charged for the download</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d74293c26909df39d806a679f968bc10e547d2" translate="yes" xml:space="preserve">
          <source>The requested encoding of the command output. Valid values for encoding are &lt;code&gt;json&lt;/code&gt; (default) or &lt;code&gt;text&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6178f10c0942083884ff7c5d07a362180e963ed8" translate="yes" xml:space="preserve">
          <source>The requested table policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9296e7e3760aa65e42b1ba651f7a0f4afa51abc" translate="yes" xml:space="preserve">
          <source>The required minimal configuration in the salt master ext_pillar setup:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94eedbec4d02cfc01adcd60a669ba32e5bc61a1" translate="yes" xml:space="preserve">
          <source>The resource record cache time to live (TTL), in seconds. Note the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad28bb6bda08f73c32b965c157427d1e7a211d5" translate="yes" xml:space="preserve">
          <source>The resourcename refers to the resource that is using this account. It is user-definable, and optional. The following configurations are both valid:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bad0eb6edfce5f40baa933ca106e71579dbddee" translate="yes" xml:space="preserve">
          <source>The response, if successful, should contain 'powerstate' key and either 'on' or 'off' to indicate current state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fff0a469459369859f10541751e0a4da61bf7ba" translate="yes" xml:space="preserve">
          <source>The restart option needs to be set to True to actually issue a rolling restart to marathon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd12d42a872e7a0ee5dfbcf7f7c2a0487276fec2" translate="yes" xml:space="preserve">
          <source>The result of the command shows the process ID of &lt;code&gt;minion1&lt;/code&gt; that is shutdown (killed) and the results of the restart. If there is a failure in the restart it will be reflected in a non-zero &lt;code&gt;retcode&lt;/code&gt; and possibly output in the &lt;code&gt;stderr&lt;/code&gt; and/or &lt;code&gt;stdout&lt;/code&gt; values along with addition information in the &lt;code&gt;comment&lt;/code&gt; field as is demonstrated with &lt;code&gt;minion2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6465f37fc18eb3490b2c0934a179a0b0176ff7eb" translate="yes" xml:space="preserve">
          <source>The result of the salt command shows the process ID of the minions and the results of a kill signal to the minion in as the &lt;code&gt;retcode&lt;/code&gt; value: &lt;code&gt;0&lt;/code&gt; is success, anything else is a failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bebcd248e0a0cf7053c53f451d3ed9d69610ebd" translate="yes" xml:space="preserve">
          <source>The result of this state would be to perform a hard-reset to &lt;code&gt;origin/dev&lt;/code&gt;. Since &lt;code&gt;branch&lt;/code&gt; was not specified though, while &lt;code&gt;/var/www/foo&lt;/code&gt; would reflect the contents of the remote repo's &lt;code&gt;dev&lt;/code&gt; branch, the local branch would still remain whatever it was when it was cloned. To make the local branch match the remote one, set &lt;code&gt;branch&lt;/code&gt; as well, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3561c744536393cb9fd47cb148014dbef28f9e6e" translate="yes" xml:space="preserve">
          <source>The resulting page will show the generated Client ID (aka AuthID or API ID) and the generated API key (Secret Key). Make a note of both and use these two values in your /etc/salt/master configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504e208bfd39e40330750e2f7448dde6a6d08350" translate="yes" xml:space="preserve">
          <source>The resulting roster can be configured using &lt;code&gt;roster_order&lt;/code&gt; and &lt;code&gt;roster_default&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c78b33b22b52506f7829d5489645f40002d9d7d" translate="yes" xml:space="preserve">
          <source>The results of the hdutil detach command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e79305ead81cdb5a60c2eaf1f5eb1c5e9bc9961" translate="yes" xml:space="preserve">
          <source>The results of the rsync command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f9f7b97091107b64ce0359779099e60dd5d03c" translate="yes" xml:space="preserve">
          <source>The return data from the Highstate command is a standard data structure which is parsed by the highstate outputter to deliver a clean and readable set of information about the HighState run on minions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88510015b81a87f62e5054685d8bfe3c046002f9" translate="yes" xml:space="preserve">
          <source>The return data will be a dictionary mapping package names to a list of version numbers, ordered from newest to oldest. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9861205686b130f37068aa2666cd7f620a022ecc" translate="yes" xml:space="preserve">
          <source>The return data will be a dictionary mapping package names to a list of version numbers, ordered from newest to oldest. If &lt;code&gt;byrepo&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;, then the return dictionary will contain repository names at the top level, and each repository will map packages to lists of version numbers. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ff5b24cb994257eb96c268c90f2514b1d2cd5f" translate="yes" xml:space="preserve">
          <source>The return value is a dictionary with peer UUIDs as keys and dicts of peer information as values. Hostnames are listed in one list. GlusterFS separates one of the hostnames but the only reason for this seems to be which hostname happens to be used first in peering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb4adec58375b2b8b1c79bb85110684d022d918" translate="yes" xml:space="preserve">
          <source>The return value may be 'None', e.g. if the user is not on a domain. This is a valid group - do not confuse this with the Salt/Python value of None which means no value was returned. To be certain, use the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f650d5bfb0055e753bc8ee7d7e86b0325cd45cc4" translate="yes" xml:space="preserve">
          <source>The return value of the invoked function will be interpreted as follows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad57b0c7d3c85822f5a7842f22539b8a55e37c6" translate="yes" xml:space="preserve">
          <source>The returned dictionary contains:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23667e71279964b1ef154a270e71582f7ee38ea2" translate="yes" xml:space="preserve">
          <source>The returner to use to return the results of the scheduled job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062fa51777774fce27f1ea3e0e0fb5eb6f9f2c76" translate="yes" xml:space="preserve">
          <source>The revision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfb347e89b36c5a3755efd6fe91c759018ac37d" translate="yes" xml:space="preserve">
          <source>The revision count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7fc857b16725607120072f32ada4f0eb58d3fa" translate="yes" xml:space="preserve">
          <source>The revision from which to create the archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd8ef078014cffeaee70466f268ea2dc09184aa" translate="yes" xml:space="preserve">
          <source>The revision to create an archive from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6655dbdbd0fb5d23cfe8f5433f3bd44ae9ea0d" translate="yes" xml:space="preserve">
          <source>The revision to describe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2966d0ae91ffebf798262ff850977256874c5e41" translate="yes" xml:space="preserve">
          <source>The revision to rebase onto the current branch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d95656a457f2b4a989546fab2b6139bcdc49a58" translate="yes" xml:space="preserve">
          <source>The revision to update to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650bada2fbe34811c3129f7cd80ac1e1913028ba" translate="yes" xml:space="preserve">
          <source>The right operand can also accept mathematical operations (i.e., &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt; etc.) when comparing numerical values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b85f41ba3e1ee0890d526ac117ee0e091efbde14" translate="yes" xml:space="preserve">
          <source>The roles assigned to user specified with the &lt;code&gt;name&lt;/code&gt; parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c81cd45cdcd3cc3d9f7e93253aef85a735932a" translate="yes" xml:space="preserve">
          <source>The roles the user should have under given tenants. Passed as a dictionary mapping tenant names to a list of roles in this tenant, i.e.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ead92edcfd8aa3da079a1fd4e1453ee06d5bf66" translate="yes" xml:space="preserve">
          <source>The rollback ID value (0-49)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863a036d6e3336d2b557a1bf4dcf117b2361c957" translate="yes" xml:space="preserve">
          <source>The room list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f24e58dd1210d848ae80b55a5305aeb071a5dc" translate="yes" xml:space="preserve">
          <source>The room object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483c119c5dd24c18f596cf887416d4365cd8a016" translate="yes" xml:space="preserve">
          <source>The room to send the message to. Can either be the ID or the name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4d979ab49609bf4ab93b0a0f6716437c33e704" translate="yes" xml:space="preserve">
          <source>The root URL (&lt;code&gt;/&lt;/code&gt;) is RPC-like in that it accepts instructions in the request body for what Salt functions to execute, and the response contains the result of those function calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32668e83faf3af6bdbea5467ba268c280259aaa7" translate="yes" xml:space="preserve">
          <source>The root key of the whole policy config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f2055e4d216eac39d16f81de1a6a0e18d0f4403" translate="yes" xml:space="preserve">
          <source>The root key of the whole policy config. Default: &lt;code&gt;acl&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9094407818424f490aa0d228ab7fbcb39beaf728" translate="yes" xml:space="preserve">
          <source>The root level URL to access solr via HTTP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1380b32ca0f360a3144cf1908ff55b889acf98" translate="yes" xml:space="preserve">
          <source>The roster to use for Salt SSH. More information about roster files can be found in &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/ssh/roster.html#ssh-roster&quot;&gt;Salt's Roster Documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a42d58652750cbe1578f19842b70f3a84994a1" translate="yes" xml:space="preserve">
          <source>The roster's composition can be configured using &lt;code&gt;roster_order&lt;/code&gt;. In the &lt;code&gt;roster_order&lt;/code&gt; you can define &lt;em&gt;any&lt;/em&gt; roster key and fill it with a parameter overriding the one in &lt;code&gt;roster_defaults&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eef9ca76edc6685d7092690d54651e6de5fb0ae" translate="yes" xml:space="preserve">
          <source>The rotation of the Pi can be specified in a pillar. This is useful if the Pi is used upside down or sideways to correct the orientation of the image being shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1e6ca7622f7eb7bb75c97a9b224b15cc21837d" translate="yes" xml:space="preserve">
          <source>The ruby for which to install rubygems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687ac9eefedf0f259727dc9f63f4199b618d6c12" translate="yes" xml:space="preserve">
          <source>The ruby version for which to create the gemset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2188d3327a76f29b2d5e7629c0c890f534e3ddcd" translate="yes" xml:space="preserve">
          <source>The ruby version for which to list the gemsets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf69b5894ea58bac1dfdcba626f2e517762e4d8d" translate="yes" xml:space="preserve">
          <source>The ruby version this gemset belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34de186ba835d0c06a86d7fe5496f708c9d5e165" translate="yes" xml:space="preserve">
          <source>The ruby version to which the gemset belongs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03713b9b2133d622773f9f361c3848f41916fd76" translate="yes" xml:space="preserve">
          <source>The rules governing how to define an AliasTarget for the various supported use-cases are obtuse beyond reason and attempting to paraphrase them (or even worse, cut-and-paste them in their entirety) would be silly and counterproductive. If you need this feature, then Read The Fine Materials at the &lt;a href=&quot;http://boto3.readthedocs.io/en/latest/reference/services/route53.html#Route53.Client.change_resource_record_sets&quot;&gt;Boto 3 Route 53 page&lt;/a&gt; and/or the &lt;a href=&quot;http://docs.aws.amazon.com/Route53/latest/APIReference/API_AliasTarget.html&quot;&gt;AWS Route 53 docs&lt;/a&gt; and suss them for yourself - I sure won't claim to understand them partcularly well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc007132ecf86466a8441220839af4bfa2a821c" translate="yes" xml:space="preserve">
          <source>The runner function that is going to be run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115a0ebbffdbee232079f040db6c051a8db5854f" translate="yes" xml:space="preserve">
          <source>The running configuration sent as text. This argument is ignored when &lt;code&gt;running_path&lt;/code&gt; is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="592ab3720ac51db61740e12546dea7f63f7ef0c4" translate="yes" xml:space="preserve">
          <source>The rvm command to execute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb47d1d6342d60312101390d2e25aa9691f2d75" translate="yes" xml:space="preserve">
          <source>The salt environment to use this is ignored if the path is local</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4308a4891c6365c4ca53161c7698dc39c05c3e" translate="yes" xml:space="preserve">
          <source>The salt environment to use, this is ignored if a local path is specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf03afb8ddc916e1ee3972e823e4313b4e5b5b4f" translate="yes" xml:space="preserve">
          <source>The salt environment to use. Default &lt;code&gt;base&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be53232a57abb54c811eab886d05b426d2f020e" translate="yes" xml:space="preserve">
          <source>The salt fileserver environment to be listed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8a561e3c3c390b5a6b76382ba4395163ac23bc" translate="yes" xml:space="preserve">
          <source>The salt-master must be configured to allow peer-runner configuration, as well as configuration for the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5623034c15cf6071f9ffe7cf0376f839362fd283" translate="yes" xml:space="preserve">
          <source>The saltenv to pull the query_file from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6338be21636f70f0b2531aa0bd563300f00192f" translate="yes" xml:space="preserve">
          <source>The saltenv to use for files downloaded from the salt filesever</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebb1118371fde798c683aecc851415eb6d2aa32" translate="yes" xml:space="preserve">
          <source>The same cobbler.* parameters are used for both the Cobbler tops and Cobbler pillar modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557b8f9c97e2ce95e1976b765bf4132958f3f742" translate="yes" xml:space="preserve">
          <source>The same error will be displayed if the command being run does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539ff44354d59d38361eb588884f35ba243393ba" translate="yes" xml:space="preserve">
          <source>The same error will be displayed in stderr if the command being run does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d422868e896ceddfc4e66775f671225e720e73a8" translate="yes" xml:space="preserve">
          <source>The same error will be displayed in stderr if the command being run does not exist. If no output is returned using this function, try using &lt;a href=&quot;#salt.modules.lxc.run_stderr&quot;&gt;&lt;code&gt;lxc.run_stderr&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#salt.modules.lxc.run_all&quot;&gt;&lt;code&gt;lxc.run_all&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a68a225532f5af1ca060f7bd26120f484ab0bc" translate="yes" xml:space="preserve">
          <source>The same error will be displayed in stderr if the command being run does not exist. If the retcode is nonzero and not what was expected, try using &lt;a href=&quot;#salt.modules.lxc.run_stderr&quot;&gt;&lt;code&gt;lxc.run_stderr&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#salt.modules.lxc.run_all&quot;&gt;&lt;code&gt;lxc.run_all&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5167d56739234a8fc08007dbe604467205ce6dc3" translate="yes" xml:space="preserve">
          <source>The scheduled job will be executed after the specified number of days have passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc5cfa581245b378b363bbd75751b8f11376fc6" translate="yes" xml:space="preserve">
          <source>The scheduled job will be executed after the specified number of hours have passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b1b248a7926a681a6c96131c85b34b0dcc1127" translate="yes" xml:space="preserve">
          <source>The scheduled job will be executed after the specified number of minutes have passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8262ee1089ce2c0fe56884c4d49a98acdf7d424" translate="yes" xml:space="preserve">
          <source>The scheduled job will be executed after the specified number of seconds have passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d5717160488f71fc63657641a7d5a4ec994891" translate="yes" xml:space="preserve">
          <source>The scheduling expression. For example, &lt;code&gt;cron(0 20 * * ? *)&lt;/code&gt;, &quot;rate(5 minutes)&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b1402b331ed7134fab92da462ba7947a1663da" translate="yes" xml:space="preserve">
          <source>The schema's name we'll remove</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e54c3961ce98bbfd6c39f710ffd52671aa29556" translate="yes" xml:space="preserve">
          <source>The scheme to use, leave as &lt;code&gt;None&lt;/code&gt; to use the current. Default is &lt;code&gt;None&lt;/code&gt;. This can be the GUID or the Alias for the Scheme. Known Aliases are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395123698040d26c9eb150815934e247775278fa" translate="yes" xml:space="preserve">
          <source>The script can also be formatted as a template, the default is jinja.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a893190d955a2260c63d55d06c15d880eac5a785" translate="yes" xml:space="preserve">
          <source>The script will be executed directly, so it can be written in any available programming language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce26458b840fd20341da35996e0db654b05dc806" translate="yes" xml:space="preserve">
          <source>The script will be executed every reboot if cron daemon support this option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ffb40654a66e1c4f5bd18073d0ee9fb6d6195f" translate="yes" xml:space="preserve">
          <source>The second and third examples above are equivalent to each other, as are the last two examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f63d418af2ac610daebe29aa8b13221e810d34" translate="yes" xml:space="preserve">
          <source>The second file to feed into the diff utility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9186af2e07b9367cfe5ea50ca8b8243e6a959320" translate="yes" xml:space="preserve">
          <source>The section from which to delete the parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f42a218e2b79af21b8f3ff6c284ab922a1c50dd" translate="yes" xml:space="preserve">
          <source>The section from which to search for the parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb87e461086ee299b9c1b915ed7a2a93c7a3cb2d" translate="yes" xml:space="preserve">
          <source>The section in which the parameter will be set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce4ba40f1d6bcbe81c079a9733a86b04deb84638" translate="yes" xml:space="preserve">
          <source>The security group name or ID to associate with this security group rule. If a non-unique group name is given, an exception is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac726aafe213b9acea250aaa692d3b21a3e1aa2b" translate="yes" xml:space="preserve">
          <source>The security groups assigned to your LoadBalancer within your VPC. Must be passed either as a list or a comma-separated string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c21ce442d982104f11cd4b372782daa3e41af78a" translate="yes" xml:space="preserve">
          <source>The separator between the prefix and the key body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adaf291ee85984cb62dd824a42b7439519e54dd6" translate="yes" xml:space="preserve">
          <source>The separator to use between fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c6b2238eba175edbce070b17eed68d3122fac5" translate="yes" xml:space="preserve">
          <source>The serial number of the panos host. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc23218f570f21bf40b48442ffe4df5e69bf8ec" translate="yes" xml:space="preserve">
          <source>The serial number to assign to this certificate. If omitted a random serial number of size &lt;code&gt;serial_bits&lt;/code&gt; is generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12761c990e577f54c8332a88f4fd2d234a27a28" translate="yes" xml:space="preserve">
          <source>The server-status handler is disabled by default. In order for this function to work it needs to be enabled. See &lt;a href=&quot;http://httpd.apache.org/docs/2.2/mod/mod_status.html&quot;&gt;http://httpd.apache.org/docs/2.2/mod/mod_status.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669ee2cdb4f2af79a1f32661bc048d805729434e" translate="yes" xml:space="preserve">
          <source>The service can also be set to start at runtime via the enable option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a14b75f003e3d0a48bf0436bb691968cccba443" translate="yes" xml:space="preserve">
          <source>The service information if the service is found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1f2cc2e7661e733a4a97989117be74c0c1518c" translate="yes" xml:space="preserve">
          <source>The service module for FreeBSD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637f8d1de5e58e4b4399251ddfede571a129f975" translate="yes" xml:space="preserve">
          <source>The service module for NetBSD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f92173b9e5937d76d1f2dca28307a4e743a86e" translate="yes" xml:space="preserve">
          <source>The service module for OpenBSD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="427252abfc94084cfb8cbedbcf440f7b493ac67a" translate="yes" xml:space="preserve">
          <source>The service module for macOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5d6f431ec0c15ab5d85359f13420f09330d29d" translate="yes" xml:space="preserve">
          <source>The service module is not available on all system, so this module includes &lt;a href=&quot;#salt.states.syslog_ng.reloaded&quot;&gt;&lt;code&gt;syslog_ng.reloaded&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#salt.states.syslog_ng.stopped&quot;&gt;&lt;code&gt;syslog_ng.stopped&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#salt.states.syslog_ng.started&quot;&gt;&lt;code&gt;syslog_ng.started&lt;/code&gt;&lt;/a&gt; functions. If the service module is available on the computers, users should use that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c9aa17e07dd8995d1a44257f1fd45caa2941b6" translate="yes" xml:space="preserve">
          <source>The service protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19f8b19b9af17f05e8519e7a4255a41d692b207" translate="yes" xml:space="preserve">
          <source>The service protocol(only support &lt;code&gt;tcp&lt;/code&gt;, &lt;code&gt;udp&lt;/code&gt; and &lt;code&gt;fwmark&lt;/code&gt; service).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49454615c2a218b4c4385fcbf587921ed55ad998" translate="yes" xml:space="preserve">
          <source>The service protocol(only support tcp, udp and fwmark service).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46bd5556ad572257b5da39b191f9e62bdc13ec65" translate="yes" xml:space="preserve">
          <source>The service to check the status of in Nagios.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a9d9980dda8e479e4143d6355fd619300dfcb7" translate="yes" xml:space="preserve">
          <source>The service watcher, called to invoke the watch command. When called, it will restart or reload the named service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39afd8bc34e138126fc415a1b2a7ccc31ce418b" translate="yes" xml:space="preserve">
          <source>The service you want the health status from, Amazon EC2 or Elastic Load Balancer (EC2 or ELB).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c9917c81b56e95df9cf079451ae5db7a03c032" translate="yes" xml:space="preserve">
          <source>The service_url will form the basis for the final endpoint that is used to query the service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8eaf7e38289638d8a4e1072c4074ead06a501f" translate="yes" xml:space="preserve">
          <source>The setting is not updated. This is an apple bug. It seems like it may only work on certain versions of Mac Server X. This article explains the issue in more detail, though it is quite old.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa04e8bae907ecaf4d8f4e9d0418b20e2ba8e785" translate="yes" xml:space="preserve">
          <source>The setting names are case-sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a75bdc5c0182afbdff4149039d109192cb83926" translate="yes" xml:space="preserve">
          <source>The setting to change, can be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f355cee188b754625f8e6c03b69ff2fe840869f4" translate="yes" xml:space="preserve">
          <source>The settings and their default values, in order, are: service (required), conn_type (required), private (y), unpriv (y), chroot (y), wakeup (n), maxproc (100), command (required).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6fd1bea7b77e80d198a58965661239c56410ad" translate="yes" xml:space="preserve">
          <source>The severity of the error, and action taken, if this service fails to start. Valid options are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3e872f99a13df351ec0c3f2ff54e9a597eae6b" translate="yes" xml:space="preserve">
          <source>The shared secret should be added to the master configuration, for example in /etc/salt/master.d/sharedsecret.conf (make sure that file is only readable by the user running the master):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca14b04b597d7548209e0c4af42595ee8372efd" translate="yes" xml:space="preserve">
          <source>The shell must be within the executable search path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d2ebd01bd503866a486ced52b80d902eada929" translate="yes" xml:space="preserve">
          <source>The shell to use for execution, defaults to /bin/sh</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff36b8f3c74c1a4a50794a70170048e0e4e4953" translate="yes" xml:space="preserve">
          <source>The shell to use for execution, defaults to the shell grain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf115456be0955f12ef1110ebaf1ea8ddf8f2e7" translate="yes" xml:space="preserve">
          <source>The shell to use for execution. The default is set in grains['shell']</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30de63e0283bd0f0ba4a18bf9b689544d13ed6bb" translate="yes" xml:space="preserve">
          <source>The side of the circuit termination</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c67713b1a706a9b24f5e6921efad2c1f2c35718" translate="yes" xml:space="preserve">
          <source>The signal used to stop the container. The default is &lt;code&gt;SIGTERM&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ec887da620f8f5df7af37356e03ea4233cb5a4" translate="yes" xml:space="preserve">
          <source>The signature header from the webhook header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3cdb15290a7a815d50843ccdd78aaccc1cd3474" translate="yes" xml:space="preserve">
          <source>The signing policy defines properties that override any property requested or included in a CRL. It also can define a restricted list of minons which are allowed to remotely invoke this signing policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff8b33439bcca85b21d458ad38663cd75cc7a285" translate="yes" xml:space="preserve">
          <source>The simplest example is a plaintext file with usernames and passwords:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c969941266ede1c186bdc0518357ab0781d9d1ee" translate="yes" xml:space="preserve">
          <source>The size of &lt;code&gt;new_device&lt;/code&gt; must be greater than or equal to the minimum size of all the devices in a mirror or raidz configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dacff578c9751cb2bd717b201e632608712c8c4" translate="yes" xml:space="preserve">
          <source>The size of the SCP send buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75878410a9e92ace51b70e37f65306323650b616" translate="yes" xml:space="preserve">
          <source>The size of the disk, in MB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85794f8311b73ce1b2846cf24f90cfd891ba6c2e" translate="yes" xml:space="preserve">
          <source>The size of the key pair to generate. The size must be &lt;code&gt;2048&lt;/code&gt;, which is the default, or greater. If set to a value less than &lt;code&gt;2048&lt;/code&gt;, the key size will be rounded up to &lt;code&gt;2048&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27214605764bbb739a5ddcaf8300231bf3786066" translate="yes" xml:space="preserve">
          <source>The size of the new disk in GB. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c8859706dfa81589143cd40445230658d55a2d" translate="yes" xml:space="preserve">
          <source>The size of the new volume, in GiB. If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size. Optionally specified at volume creation time; will be ignored afterward. Requires 'volume_name'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ebe34f90da7309fa202b7b9bdf50bbeea4958e" translate="yes" xml:space="preserve">
          <source>The size of the volume, in GiBs. Defaults to &lt;code&gt;10&lt;/code&gt;. Integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3645b4116af76990049349f4f39171e7124d1201" translate="yes" xml:space="preserve">
          <source>The slot number to change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640a355ef8ca54b7808004c016844d46f1ddd4df" translate="yes" xml:space="preserve">
          <source>The snapname must be 64 characters or less and must only contain alphanumeric characters and characters in the set [-_.:%] to comply with ZFS restrictions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3f1eaa5efe5255a1fbe5ba700a2cb4e473e5e9" translate="yes" xml:space="preserve">
          <source>The snapper state module allows you to manage state implicitly, in addition to explicit rules, in order to define a baseline and iterate with explicit rules as they show that they work in production.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea67a3b471e281e444249db65c6fc45aba446a8" translate="yes" xml:space="preserve">
          <source>The snapshot ID from which the new Volume will be created. Optionally specified at volume creation time; will be ignored afterward. Requires 'volume_name'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee392438c7d91512a72e57a90c7bc17ef2823538" translate="yes" xml:space="preserve">
          <source>The snapshot ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91bcbcd0ee70fe0996384603cbb4822cc516aa79" translate="yes" xml:space="preserve">
          <source>The snapshot that was cloned, and any snapshots previous to this snapshot, are now owned by the promoted clone. The space they use moves from the origin file system to the promoted clone, so enough space must be available to accommodate these snapshots. No new space is consumed by this operation, but the space accounting is adjusted. The promoted clone must not have any conflicting snapshot names of its own. The rename subcommand can be used to rename any conflicting snapshots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4d747098e4fe567e4b089b0e83cc10e8fca8bc" translate="yes" xml:space="preserve">
          <source>The snapshot-id from which to create the volume. Integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d4f05b40f185f5de6d162becedc54551bcc777" translate="yes" xml:space="preserve">
          <source>The socket interface for the HTTP server to listen on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b42eb4c5a18c26018cf2ed1167713c485388f9" translate="yes" xml:space="preserve">
          <source>The socket the uWSGI stats server is listening on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177af006dc62fd0591cf711063a345b8ac979874" translate="yes" xml:space="preserve">
          <source>The sole purpose of this module is logging messages in the (proxy) minion. It comes very handy when debugging complex Jinja templates, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f835d18448a026c4fc7d21c9ae512de82fe6251" translate="yes" xml:space="preserve">
          <source>The solr host to query. __opts__['host'] is default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd2dbf7fc129c89585dd1c46c93298fd6fd4985" translate="yes" xml:space="preserve">
          <source>The source certificate file this can be in the form salt://path/to/file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c32b0c96964a60a049146b74ad93dd5e2a34a16" translate="yes" xml:space="preserve">
          <source>The source directory, this directory is located on the salt master file server and is specified with the salt:// protocol. If the directory is located on the master in the directory named spam, and is called eggs, the source string is salt://spam/eggs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d1c25b65540ac91120f8635860d81eb20da443" translate="yes" xml:space="preserve">
          <source>The source file for the key(s). Can contain any number of public keys, in standard &quot;authorized_keys&quot; format. If this is set, comment and enc will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ad93f3ef9f53383a6286a11e7b7dae35785cf2" translate="yes" xml:space="preserve">
          <source>The source file for the key(s). Can contain any number of public keys, in standard &quot;authorized_keys&quot; format. If this is set, comment, enc and options will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a743eb1d62624a5c996c6ebbe4b50a707b9cd39f" translate="yes" xml:space="preserve">
          <source>The source file must contain keys in the format &lt;code&gt;&amp;lt;enc&amp;gt; &amp;lt;key&amp;gt;
&amp;lt;comment&amp;gt;&lt;/code&gt;. If you have generated a keypair using PuTTYgen, then you will need to do the following to retrieve an OpenSSH-compatible public key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0c7e835d020450309fe5942422e2a936b28b26" translate="yes" xml:space="preserve">
          <source>The source file path. This argument accepts the usual Salt URIs (e.g., &lt;code&gt;salt://&lt;/code&gt;, &lt;code&gt;http://&lt;/code&gt;, &lt;code&gt;https://&lt;/code&gt;, &lt;code&gt;s3://&lt;/code&gt;, &lt;code&gt;ftp://&lt;/code&gt;, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78351a1c34dfed0c579fba0b9eb759d4d098aa95" translate="yes" xml:space="preserve">
          <source>The source file to be used as the crontab. This source file can be hosted on either the salt master server, or on an HTTP or FTP server. For files hosted on the salt file server, if the file is located on the master in the directory named spam, and is called eggs, the source string is &lt;code&gt;salt://spam/eggs&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591cff2094642508028bfcb3bae9ff68bb5b9cf9" translate="yes" xml:space="preserve">
          <source>The source file to download to the minion, this source file can be hosted on either the salt master server (&lt;code&gt;salt://&lt;/code&gt;), the salt minion local file system (&lt;code&gt;/&lt;/code&gt;), or on an HTTP or FTP server (&lt;code&gt;http(s)://&lt;/code&gt;, &lt;code&gt;ftp://&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c05d309013dc773ca7d6519b12b79e032515d0" translate="yes" xml:space="preserve">
          <source>The source file to download to the minion, this source file can be hosted on either the salt master server, or on an HTTP or FTP server. Both HTTPS and HTTP are supported as well as downloading directly from Amazon S3 compatible URLs with both pre-configured and automatic IAM credentials. (see s3.get state documentation) File retrieval from Openstack Swift object storage is supported via swift://container/object_path URLs, see swift.get documentation. For files hosted on the salt file server, if the file is located on the master in the directory named spam, and is called eggs, the source string is salt://spam/eggs. If source is left blank or None (use ~ in YAML), the file will be created as an empty file and the content will not be managed. This is also the case when a file already exists and the source is undefined; the contents of the file will not be changed or managed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89163d7f743e4c298a07d96e2578daa87f86ad11" translate="yes" xml:space="preserve">
          <source>The source file with the configuration commands to be sent to the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a19e8f990520fae1232cc49778150103386fc6" translate="yes" xml:space="preserve">
          <source>The source for parsing the syslog messages is taken from: &lt;a href=&quot;https://gist.github.com/leandrosilva/3651640#file-xlog-py&quot;&gt;https://gist.github.com/leandrosilva/3651640#file-xlog-py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcb98822e71eee2221ed5c0c8c15ad6e7b9ca9f7" translate="yes" xml:space="preserve">
          <source>The source from where to retrieve the configuration to be compared with. Available options: &lt;code&gt;candidate&lt;/code&gt;, &lt;code&gt;running&lt;/code&gt;, &lt;code&gt;startup&lt;/code&gt;. Default: &lt;code&gt;candidate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b6216224a85bc112295ea937ff744e56164b79" translate="yes" xml:space="preserve">
          <source>The source from where to retrieve the configuration to compare with. Available options: &lt;code&gt;candidate&lt;/code&gt;, &lt;code&gt;running&lt;/code&gt;, &lt;code&gt;startup&lt;/code&gt;. Default: &lt;code&gt;running&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5978993837e4f52fcab4d42069254b5cf8bfd30" translate="yes" xml:space="preserve">
          <source>The source location where files will be rsynced from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51e03d8ede5d7baae35934fa16fe77411522b41" translate="yes" xml:space="preserve">
          <source>The source of a JSON file defining the entirety of a policy definition. See &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/azure-policy/policy-definition#policy-rule&quot;&gt;Azure Policy Definition documentation&lt;/a&gt; for details on the structure. One of &lt;code&gt;policy_rule&lt;/code&gt;, &lt;code&gt;policy_rule_json&lt;/code&gt;, or &lt;code&gt;policy_rule_file&lt;/code&gt; is required, in that order of precedence for use if multiple parameters are used. Note that the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb5036cd144ad9d1ce9175a776ce0c3d0c95345" translate="yes" xml:space="preserve">
          <source>The source path where the file is kept.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329d7a81d123bb8a6d069559e27f9a25b8874cf4" translate="yes" xml:space="preserve">
          <source>The source script being downloaded to the minion, this source script is hosted on the salt master server. If the file is located on the master in the directory named spam, and is called eggs, the source string is salt://spam/eggs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021052e1d5ad564e61eb3ef63607c8f1ef4978a9" translate="yes" xml:space="preserve">
          <source>The source_hash can be specified as a simple checksum, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f7effe464e454f9d55180a9c72a4f3f5fe8653f" translate="yes" xml:space="preserve">
          <source>The sparse parameter is ignored when using &lt;code&gt;cloned_from&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9d380318b63c6ef7ed7b7c5bda6dca7b8b59fb" translate="yes" xml:space="preserve">
          <source>The spec of the deployment object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a1db822accb426d2aedbd864a29ae13c7375f6" translate="yes" xml:space="preserve">
          <source>The spec of the pod object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1a5923780e28c86b90f0cbc4369893b9e41c1d" translate="yes" xml:space="preserve">
          <source>The spec of the service object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ae9052abefc3e92db19beb7692398d404acafc" translate="yes" xml:space="preserve">
          <source>The special case to disable use of ethernet nics:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05090e4bb6925397f8f6231f45a3a068368a5900" translate="yes" xml:space="preserve">
          <source>The special keyword used in the job (eg. @reboot, @hourly...). Quotes must be used, otherwise PyYAML will strip the '@' sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133236d7e1a2b5484159436a23e1164d57af492d" translate="yes" xml:space="preserve">
          <source>The specific version to install. If omitted, the latest version will be installed. Recommend for use when installing a single package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e44963bc18deeaca2f0eba9373b4dcb045502d" translate="yes" xml:space="preserve">
          <source>The specified command will be run with an appended argument of a &lt;em&gt;temporary&lt;/em&gt; file containing the new managed contents. If the command exits with a zero status the new managed contents will be written to the managed destination. If the command exits with a nonzero exit code, the state will fail and no changes will be made to the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7efd14eab8cd8f844be404a179d2744e543b42ba" translate="yes" xml:space="preserve">
          <source>The speed at which the message moves over the LED matrix. This value represents the time paused for between shifting the text to the left by one column of pixels. Defaults to '0.1'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c4e094aeeb6d7e568aba48cade9fb58daddbde" translate="yes" xml:space="preserve">
          <source>The speed of the circuit, in Kbps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921c30a266dc95f20b77d8e75e9032193c716ba4" translate="yes" xml:space="preserve">
          <source>The spot price you are bidding. Only applies if you are building an autoscaling group with spot instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7ee24dd7269f922e07b2f55ccb90bbd835454d" translate="yes" xml:space="preserve">
          <source>The sql to select the row to check</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd75da7ed07800079abe119eca0807f504fc2d5" translate="yes" xml:space="preserve">
          <source>The sql_base ext_pillar cannot be used directly, but shares query configuration with its implementations. These examples use a fake 'sql_base' adapter, which should be replaced with the name of the adapter you are using.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afd1ba8b8664fc719a523f5f8cc2930c85b8e13" translate="yes" xml:space="preserve">
          <source>The sqlite3 module is used to create and manage sqlite3 databases and execute queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69faecd0ff2ed267b1880022e1fa16cd2996f3e3" translate="yes" xml:space="preserve">
          <source>The state ID comes &lt;em&gt;before&lt;/em&gt; the module ID(s) on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a1ee35dc25fc6cf3467548267a431159c46429" translate="yes" xml:space="preserve">
          <source>The state SLS above would create a backup config grouping the files by the Minion ID, in chronological files. For example, if the state is executed at on the 3rd of August 2018, at 5:15PM, on the Minion &lt;code&gt;core1.lon01&lt;/code&gt;, the configuration would saved in the file: &lt;code&gt;/var/backups/core01.lon01/1533316558.cfg&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197608bf885414845c344d56d906f701bdde4f90" translate="yes" xml:space="preserve">
          <source>The state can be any one of, documented in &lt;code&gt;dpkg(1)&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523a05212e04479c93b0e190892324c5a24ad6e0" translate="yes" xml:space="preserve">
          <source>The state can be used to ensure the setting of a single policy or multiple policies in one pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a9c06dc077608010eac8a4dffef2583e4a8925" translate="yes" xml:space="preserve">
          <source>The state has a &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/states/requisites.html#requisites-watch&quot;&gt;watch requisite&lt;/a&gt;, and the state which it is watching changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b7930c4322ecdb9c74240c3344bfd84eec78c2" translate="yes" xml:space="preserve">
          <source>The state of the entry after modification. If the entry was deleted, this key maps to &lt;code&gt;None&lt;/code&gt;. Otherwise, the value is a dict mapping each of the entry's attributes to a list of its values after the modifications were made. Unchanged attributes are excluded from this dict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d0ab90604e4f5b4fd4c12bdfb9a8fd5dcbefee" translate="yes" xml:space="preserve">
          <source>The state of the entry before modification. If the entry did not previously exist, this key maps to &lt;code&gt;None&lt;/code&gt;. Otherwise, the value is a dict mapping each of the old entry's attributes to a list of its values before any modifications were made. Unchanged attributes are excluded from this dict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acaf9b1fe0ba2a7351d4da32c4fa62e317e43577" translate="yes" xml:space="preserve">
          <source>The state of the jobs to display. Valid options are all, pending, or processed. Pending jobs are jobs that are currently in a running or waiting state. Processed jobs are jobs that have completed execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40cf3993256c98ba4d0cd28838eb776180f3dd2" translate="yes" xml:space="preserve">
          <source>The state of the milestone. Either &lt;code&gt;open&lt;/code&gt;, &lt;code&gt;closed&lt;/code&gt;, or &lt;code&gt;all&lt;/code&gt;. Default is &lt;code&gt;open&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929033c7bdddbe9d83f2cfbf542406325dda991d" translate="yes" xml:space="preserve">
          <source>The state run will check that the specified database exists (default=True) before running any queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96bf193d1632aa0b6f517646644132697c007fa0" translate="yes" xml:space="preserve">
          <source>The state that the certificate should use. Defaults to Utah.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8045ac8cc18ff16777ebeaa77f0cd0db8d772525" translate="yes" xml:space="preserve">
          <source>The state.show_sls module function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1ed91da11c1214b3ead5f4e87d6238e5863205" translate="yes" xml:space="preserve">
          <source>The state_id to pass to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e712cf7131cb15fc630bc2c04bf9ca39b0768be" translate="yes" xml:space="preserve">
          <source>The stateconf system is intended for use only with the stateconf renderer. This State module presents the set function. This function does not execute any functionality, but is used to interact with the stateconf renderer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1c3b6e7e05fb4937d4af745c1e73452933f0f3" translate="yes" xml:space="preserve">
          <source>The static grains, these are the core, or built in grains.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc05095b0be4b6204726dbe7244c8a3b420429a7" translate="yes" xml:space="preserve">
          <source>The status beacon is intended to send a basic health check event up to the master, this allows for event driven routines based on presence to be set up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e82e033ad950aad6563a910a0d11c92da0c8efa" translate="yes" xml:space="preserve">
          <source>The status code for a URL for which to be checked. Can be used instead of or in addition to the &lt;code&gt;match&lt;/code&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1404a13dc82b3ecdabc09653fb685200fb22e93" translate="yes" xml:space="preserve">
          <source>The status of the SNS notification topic. Notifications are sent only if the status is active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81de76a311630c31deff9e322d0350f8851c2bbe" translate="yes" xml:space="preserve">
          <source>The status of the SNS notification topic. Notifications are sent only if the status is active. Valid values: active | inactive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3513f09001e0c9867497508e0edfe19668eebb6" translate="yes" xml:space="preserve">
          <source>The storage pool where the disk image will be defined is &lt;code&gt;default&lt;/code&gt; unless changed with a configuration like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c541f9abaade252e1597c8639cf407b1185e54" translate="yes" xml:space="preserve">
          <source>The store to add the certificate to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81302761e86f9cce169ea401d6a09645a4d8b07" translate="yes" xml:space="preserve">
          <source>The store to get all the certificate serials from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd69f9f46c45e1a5e03069a066e254ec61e1289" translate="yes" xml:space="preserve">
          <source>The store to remove the certificate from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="072ec2324eac6dc1c212890d62dcde1d2231ec6f" translate="yes" xml:space="preserve">
          <source>The store to use. This is either the local firewall policy or the policy defined by local group policy. Valid options are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cee00c21ebf9e2311c4cae77713a4b3e83a4c9" translate="yes" xml:space="preserve">
          <source>The string representation of the GPG key to install.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca1143dc3aacc2d62d191e2a3e5626a7b5ed727" translate="yes" xml:space="preserve">
          <source>The string to fetch. DMIdecode supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc39733445cd5859c8a428189e4d07a677a21e14" translate="yes" xml:space="preserve">
          <source>The string to search for when looking for the service process with ps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e97de7d1766573d7f2d07f8bccdf3f1496c3d3" translate="yes" xml:space="preserve">
          <source>The strings are aggregated into a single document on the master for easy reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebf8226a9b5c33e1a7bc238c126521e8ceada1c" translate="yes" xml:space="preserve">
          <source>The structure of &lt;code&gt;entries&lt;/code&gt; looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a379325c2dc02bcf0cf462933c29aeeb68cf50" translate="yes" xml:space="preserve">
          <source>The subject, extension and version arguments from &lt;a href=&quot;#salt.modules.x509.create_certificate&quot;&gt;&lt;code&gt;x509.create_certificate&lt;/code&gt;&lt;/a&gt; can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba550332effa7651f99b8e4cc1e2709cf4e9e3d" translate="yes" xml:space="preserve">
          <source>The suffix which is advertised for this client when acquiring a DHCP lease When none is set, the explicitly configured DNS suffix will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94bddb03a8e238b584d1b5942486c01bf6ea25f" translate="yes" xml:space="preserve">
          <source>The summary (title) of the JIRA ticket. When the &lt;code&gt;template_engine&lt;/code&gt; argument is set to a proper value of an existing Salt template engine (e.g., &lt;code&gt;jinja&lt;/code&gt;, &lt;code&gt;mako&lt;/code&gt;, etc.) it will render the &lt;code&gt;summary&lt;/code&gt; before creating the ticket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2fae44e1f2f4f9f64dbb44bad6486534ecf647c" translate="yes" xml:space="preserve">
          <source>The supervisord watcher, called to invoke the watch command. Always restart on watch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7408fd8e9f507c60065f9fb8ea82491412739651" translate="yes" xml:space="preserve">
          <source>The supported algorithms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b55a2120c1c11d36fc60eb12292542eb3ec0284" translate="yes" xml:space="preserve">
          <source>The supported arguments are the ones from the docker-py's &lt;a href=&quot;https://docker-py.readthedocs.io/en/stable/api.html#docker.api.network.NetworkApiMixin.connect_container_to_network&quot;&gt;connect_container_to_network&lt;/a&gt; function (other than &lt;code&gt;container&lt;/code&gt; and &lt;code&gt;net_id&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24438b13914f0bc426764f64c662ce0052af4755" translate="yes" xml:space="preserve">
          <source>The supported merge strategies are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2b3e6b8338f4094ab06e901b2759432b1d6d01" translate="yes" xml:space="preserve">
          <source>The switch designation (e.g. switch-1, switch-2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9dbcf191d45b807893a0bb3e77a690d0c2320f" translate="yes" xml:space="preserve">
          <source>The syntax for a ChangeBatch parameter is as follows, but note that the permutations of allowed parameters and combinations thereof are quite varied, so perusal of the above linked docs is highly recommended for any non-trival configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31974a63ca8eb57b4ad4d03daa152fe866642059" translate="yes" xml:space="preserve">
          <source>The syntax of a configuration snippet in syslog-ng.conf:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ed8573a3b9f8722244a2a43019f8e2a61d4bc3" translate="yes" xml:space="preserve">
          <source>The sys module provides information about the available functions on the minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f291ff08a62e3fe23e64c0ddc3670ab449f1e9e" translate="yes" xml:space="preserve">
          <source>The sysctl value to apply</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2683c049f5b3cf8f26ddcfb571fbffd107635db5" translate="yes" xml:space="preserve">
          <source>The sysctl value to apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675c48f411e928acb3080e6ce3e1f874a1b5ac37" translate="yes" xml:space="preserve">
          <source>The system and the hardware clock are not necessarily set to the same time. By default, the hardware clock is set to localtime, meaning it is set to the same time as the system clock. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0c204df4425e0dda6aa62bd3d54b82d6478399" translate="yes" xml:space="preserve">
          <source>The system user the operation should be performed on behalf of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8cc364d2b63ead4215d75344e36a20a41e73041" translate="yes" xml:space="preserve">
          <source>The system user to run htpasswd command with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af278c388bc2820fccef1f9bc1b3c81c20981d8c" translate="yes" xml:space="preserve">
          <source>The system user's password. It can be either a plain string or a md5 postgresql hashed password:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb77fb7b1a3c080b18bc49ca4aa37e63c7f581d7" translate="yes" xml:space="preserve">
          <source>The table name to check</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74174f1f108cf2aa1f9b39dca6035634720c757f" translate="yes" xml:space="preserve">
          <source>The table name to check the data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce706636d47a167361f9812b054c478c16bb98e" translate="yes" xml:space="preserve">
          <source>The table that owns the chain that should be modified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37df5af448602cb620e1a923625f217fec7ef5aa" translate="yes" xml:space="preserve">
          <source>The table that owns the chain which should be modified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c53804e653dd3fa0417139b33382fde60a40918" translate="yes" xml:space="preserve">
          <source>The table to own the chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c1a2cde3c600d9b6b00337953fb9f760b5e364" translate="yes" xml:space="preserve">
          <source>The table to remove the chain from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3469a72e4a3f4b5ee267a0fd3fd52a3f616948" translate="yes" xml:space="preserve">
          <source>The tag for this event is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c71273580eabec6323c86b74d21e22b70ba18bf" translate="yes" xml:space="preserve">
          <source>The tag must already exist for each snapshot. If a hold exists on a snapshot, attempts to destroy that snapshot by using the zfs destroy command return EBUSY.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27fb088607cf46f64e03c574a2610f266dc70f53" translate="yes" xml:space="preserve">
          <source>The tags list (optional) specifies grains items that will be used as sentry tags, allowing tagging of events in the sentry ui.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013502f30e9f719431eb421a023c0c1ab2ad9beb" translate="yes" xml:space="preserve">
          <source>The tags to apply to the volume during creation. Dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6261bb20b7ad85aa8e88cc6bd54c5a8a41846996" translate="yes" xml:space="preserve">
          <source>The target directory from which to uninstall the package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a77d32850718ace5e1bbe00eb3f9f45b69fd14" translate="yes" xml:space="preserve">
          <source>The target directory from which to uninstall the package, or None for global installation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb859077f8516c164aa0cc1c45585dc3e4bb368" translate="yes" xml:space="preserve">
          <source>The target directory in which to install the package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe1582d7cc7cbf68777c550f869b39521c23749" translate="yes" xml:space="preserve">
          <source>The target directory in which to install the package, or None for global installation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e9fa8750d80fd474e727efbc86084654948a60" translate="yes" xml:space="preserve">
          <source>The target platform to run the build on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82837bc39ffedf5c3927cbe5e53948a6503c4a11" translate="yes" xml:space="preserve">
          <source>The target port on the container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bdadf5975fec5a57dcd3e8e93b516f1df86156" translate="yes" xml:space="preserve">
          <source>The target specification for the state run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9216879484cf05251e2abc290e3791f346122a97" translate="yes" xml:space="preserve">
          <source>The target specification, aka '*' for all minions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab61e739022d0223cc4af1fb961d8cab0cbe5637" translate="yes" xml:space="preserve">
          <source>The target system data-store ID where the VM will be migrated. Can be used instead of &lt;code&gt;datastore_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818628f06235e5814b0f2f01214e8a747c44f208" translate="yes" xml:space="preserve">
          <source>The target to be set for this module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97129cf9c835d2eb9ad5fa2ac348824f71685e16" translate="yes" xml:space="preserve">
          <source>The target type to resolve, defaults to &lt;code&gt;glob&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6575a363b8b12ce2b4a41cc0c72f52fad0a24f4" translate="yes" xml:space="preserve">
          <source>The target type, defaults to &lt;code&gt;glob&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117f84f208566cf4c20820b0c02e86fff079fb24" translate="yes" xml:space="preserve">
          <source>The task name, e.g. tasks.sleep</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3edfc827dbd574e93ec08fa9dfb3146c9f4c779b" translate="yes" xml:space="preserve">
          <source>The task will be triggered by a session change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd831bd0028c5e16f2a913b55290f89718c8cd41" translate="yes" xml:space="preserve">
          <source>The task will run daily.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8ec804cee6f782f045121d36ee6c5d64d18049" translate="yes" xml:space="preserve">
          <source>The task will run monthly an the specified day.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e75ede1b4b976c9651af2ab631230ace9e4911c" translate="yes" xml:space="preserve">
          <source>The task will run monthly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b21896e4d7dcbf32877828770df79e6fdcd4b4" translate="yes" xml:space="preserve">
          <source>The task will run weekly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c14df106ee43ce1200f6cea0926177977a88ab" translate="yes" xml:space="preserve">
          <source>The team name for which to obtain information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3f214c573a334aa16f52f54cba58408eff46f9" translate="yes" xml:space="preserve">
          <source>The teams for which this repo should belong to, specified as a dict of team name to permission ('pull', 'push' or 'admin').</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf0fc73001e07f89d57cc60ffa46908b27a23e9" translate="yes" xml:space="preserve">
          <source>The template arg can be set to 'jinja' or another supported template engine to render the command arguments before execution. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de68e4a632edea0a2cbcb80e15db4c907dc002c8" translate="yes" xml:space="preserve">
          <source>The template can use variables from the &lt;code&gt;grains&lt;/code&gt;, &lt;code&gt;pillar&lt;/code&gt; or &lt;code&gt;opts&lt;/code&gt;, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f65211aba90343f340c25536563b82d74fec36b" translate="yes" xml:space="preserve">
          <source>The template data of the security group. Syntax can be the usual attribute=value or XML. Can be used instead of &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d387cd2576a4cf8f41ba47575cb88fafd2eb40" translate="yes" xml:space="preserve">
          <source>The template database from which to build this database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ede04d5d075a5791b17353070c90ac38b9b610" translate="yes" xml:space="preserve">
          <source>The template engine to use when rendering the source file. Default: &lt;code&gt;jinja&lt;/code&gt;. To simply fetch the file without attempting to render, set this argument to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d108587716b7e98eeada2814c2a15a979e1b7c6" translate="yes" xml:space="preserve">
          <source>The template option is required when recursively applying templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183309f4eb1c3fe4819d1982989146c76ef444ab" translate="yes" xml:space="preserve">
          <source>The template to use. For example, &lt;code&gt;ubuntu&lt;/code&gt; or &lt;code&gt;fedora&lt;/code&gt;. For a full list of available templates, check out the &lt;a href=&quot;#salt.modules.lxc.templates&quot;&gt;&lt;code&gt;lxc.templates&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e2fae8bbde08e2f54808758332e6ff729f7ea6" translate="yes" xml:space="preserve">
          <source>The template to use. For example, &lt;code&gt;ubuntu&lt;/code&gt; or &lt;code&gt;fedora&lt;/code&gt;. For a full list of available templates, check out the &lt;a href=&quot;../../modules/all/salt.modules.lxc#salt.modules.lxc.templates&quot;&gt;&lt;code&gt;lxc.templates&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77a395363d308f4aa73615c6559c2a6fd597192" translate="yes" xml:space="preserve">
          <source>The template will receive a variable &lt;code&gt;custom_var&lt;/code&gt;, which would be accessed in the template using &lt;code&gt;{{ custom_var }}&lt;/code&gt;. If the operating system is Ubuntu, the value of the variable &lt;code&gt;custom_var&lt;/code&gt; would be &lt;em&gt;override&lt;/em&gt;, otherwise it is the default &lt;em&gt;default value&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d827673eff508a49544e6b81ea449e4a3810c12a" translate="yes" xml:space="preserve">
          <source>The temporary directory to download the bootstrap script in. This directory will have &lt;code&gt;-&amp;lt;uuid4&amp;gt;&lt;/code&gt; appended to it. For example: &lt;code&gt;/tmp/.bootstrap-a19a728e-d40a-4801-aba9-d00655c143a7/&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3399d51d2be604f9f4b13ee2e6db1470018e5dad" translate="yes" xml:space="preserve">
          <source>The tenant (name) for this user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6bbd1fcf00eb3e2e14e8b133b01e6f5e212a22" translate="yes" xml:space="preserve">
          <source>The terms specified through the &lt;code&gt;terms&lt;/code&gt; argument have higher priority than the pillar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d606b8073cf7209866aedebb92609f279f22de" translate="yes" xml:space="preserve">
          <source>The test works with 32 files with each file being 1Gb in size The test consumes a lot of time. Be patient!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f9a60b8a63a1aeb4bc9f0cba1ea232d72d6f57" translate="yes" xml:space="preserve">
          <source>The text containing to import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecee44df2998a7eb9b1a4a28e5417f7bec87281b" translate="yes" xml:space="preserve">
          <source>The text file option is configurable to work with legacy formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa5dac64524a157b263ee297463b7aa3700009a" translate="yes" xml:space="preserve">
          <source>The text to be appended, which can be a single string or a list of strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8cef0519f4b718e34508f6800b8a216511c4dd9" translate="yes" xml:space="preserve">
          <source>The text to encrypt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebab7cfc9c847a5c73d33740a5e88f55c963c7b2" translate="yes" xml:space="preserve">
          <source>The text to prepend in front of the text. Usually, we need to have the name of the field too when generating the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e3b2a8dab8bc60220dedb647b8c063d7fbc45d" translate="yes" xml:space="preserve">
          <source>The text to sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34dd0aaae6dd0e4d2db6eb7064c6d7081b58cff" translate="yes" xml:space="preserve">
          <source>The text to verify.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8adb31177a4a8ca9ef12cf73fbd14ce2f1a72d8d" translate="yes" xml:space="preserve">
          <source>The text will not be appended if it already exists in the file. A single string of text or a list of strings may be appended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d250a24e99861bcaddc3be45685b8cc09548beb" translate="yes" xml:space="preserve">
          <source>The text will not be prepended again if it already exists in the file. You may specify a single line of text or a list of lines to append.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3bac8bbd72f21d00ce5f0da7a7cd7def26119c" translate="yes" xml:space="preserve">
          <source>The thin runner is used to manage the salt thin systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3a0219e069f4aefc9011382d98246feb9bf989" translate="yes" xml:space="preserve">
          <source>The time in seconds to wait for the service to be deleted before returning. This is necessary because a service must be stopped before it can be deleted. Default is 90 seconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffd345e23e0576f965c745399d6a3b6cb5fc7da" translate="yes" xml:space="preserve">
          <source>The time in seconds to wait for the service to start before returning. Default is 90 seconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf88a04bab3deca4f060bbefcc680a43d80bdb2" translate="yes" xml:space="preserve">
          <source>The time in seconds to wait for the service to stop and start before returning. Default is 90 seconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1ece15e3d010b969af7b608fa4a85712ef6e72" translate="yes" xml:space="preserve">
          <source>The time in seconds to wait for the service to stop before returning. Default is 90 seconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b35d576faa64bfe4d3f52b06daf856de97b23d" translate="yes" xml:space="preserve">
          <source>The time the trigger waits after its activation to start the task. Valid values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea4f8817bbb124905f24059682f1048244b8df2" translate="yes" xml:space="preserve">
          <source>The time this entity entered its current state (seconds since epoch). Defaults to the time alert is received.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4d318b38c224905b5a6fdc1c2ee25bc587dabb" translate="yes" xml:space="preserve">
          <source>The time to live for the record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3e6e66e5982d61a6f2981826acb2b3a2ccc3aa" translate="yes" xml:space="preserve">
          <source>The time to set. Can be any of the following formats. - HH:MM:SS AM/PM - HH:MM AM/PM - HH:MM:SS (24 hour) - HH:MM (24 hour)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2144018e82c70f5f5b6eeffac678a199f53124ee" translate="yes" xml:space="preserve">
          <source>The time to set. Can be any of the following formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2397a56c08ace8c98ac77242d7b126a7c29a5066" translate="yes" xml:space="preserve">
          <source>The time when the trigger is activated. If no value is passed, midnight will be used. Can be one of the following formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf6a0c2fa77d011fdbb394bd17145487b023d14" translate="yes" xml:space="preserve">
          <source>The time when the trigger is deactivated. If this is not passed with &lt;code&gt;end_date&lt;/code&gt; it will be set to midnight. Can be one of the following formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a87b5f175c830f24dd9e519bf71cc62b05f61c" translate="yes" xml:space="preserve">
          <source>The timeout in seconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdffface0e78b9501d395c260a83582df3678600" translate="yes" xml:space="preserve">
          <source>The timeout is cumulative meaning it is applied to the stop and then to the start command. A timeout of 90 could take up to 180 seconds if the service is long in stopping and starting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519050c20e10ebe377f4dc65eb689eb41f3abcba" translate="yes" xml:space="preserve">
          <source>The timeout is how many seconds Salt should wait for any Ansible module to respond.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2777c3832772eca9d7809051e96e2783210179d" translate="yes" xml:space="preserve">
          <source>The timestamp of the last reconfiguration event (in seconds since epoch) is published in the proxy.node.config.reconfigure_time metric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8938c4a05f595d04bfc9b8dbb1d3b0e81f134227" translate="yes" xml:space="preserve">
          <source>The timezone can be managed for the system:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974b1263a3306e7cbc275149e603ebd8ecc238ec" translate="yes" xml:space="preserve">
          <source>The timezone is crucial to several system processes, each of which SHOULD be restarted (for instance, whatever you system uses as its cron and syslog daemons). This will not be automagically done and must be done manually!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e99000e171bdacfee25da372b30759635e4c7b" translate="yes" xml:space="preserve">
          <source>The title for the card posted to the channel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2194d12e5e137f4ca3b7e807c28978447f2968f6" translate="yes" xml:space="preserve">
          <source>The title to use for the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41dc9680a701cb6512f2c4d953be9328997ce31" translate="yes" xml:space="preserve">
          <source>The token for PushOver to use for authentication, if not specified in the configuration options of master or minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c340b81b2db4c89831ac8d20bfef0ee567ed9e7d" translate="yes" xml:space="preserve">
          <source>The token may be sent in one of two ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc5ac7ad87dc5c950a3d652aa2d15cf35d138f3" translate="yes" xml:space="preserve">
          <source>The token may be sent in one of two ways: as a custom header or as a session cookie. The latter is far more convenient for clients that support cookies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c633525dab28b6e0d2b9a34c5bae4d4af0a6ff10" translate="yes" xml:space="preserve">
          <source>The token must be able to create tokens with the policies that should be assigned to minions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb23e6899a0c4c1d5ce0470700a090d92a696f40" translate="yes" xml:space="preserve">
          <source>The tomcat watcher, called to invoke the watch command. When called, it will reload the webapp in question</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b5a3286dd9f1351fd9bea96970cde9194289ac1" translate="yes" xml:space="preserve">
          <source>The topic title can consist of any of the combination of above fields, but the topic has to start with &lt;code&gt;jnpr/syslog&lt;/code&gt;. Here are a couple example combinations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4594f720070fbdc6dcfbf69914ce483dcabf8c6" translate="yes" xml:space="preserve">
          <source>The transaction ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd60638b40f749b6f5f7c2b80310121867f9037" translate="yes" xml:space="preserve">
          <source>The transaction log (WAL) directory (default is to keep WAL inside the data directory)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f44477892af6e0202a3b01ba37f1651178f2927" translate="yes" xml:space="preserve">
          <source>The trigger will be fired by an event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f88e9c34db1f8c479d16760316843eb4bc256f" translate="yes" xml:space="preserve">
          <source>The trust level to set for the specified key, must be one of the following: expired, unknown, not_trusted, marginally, fully, ultimately</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92173bc0156ae4ba17f672d2821d600a6079645b" translate="yes" xml:space="preserve">
          <source>The txt outputter has been developed to make the output from shell commands on minions appear as they do when the command is executed on the minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73af8256955aeec958d97d7d3508554f417cf897" translate="yes" xml:space="preserve">
          <source>The type for the (Default) value is always REG_SZ and cannot be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d3b71895691b1cc50449d05eed196c6df8515b" translate="yes" xml:space="preserve">
          <source>The type for the &lt;code&gt;(Default)&lt;/code&gt; value is always REG_SZ and cannot be changed. This parameter is optional. If not passed, the Key will be created with no associated item/value pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5889019826c6df6fd0fcce3dba792e5b76aade" translate="yes" xml:space="preserve">
          <source>The type for the new image. If not set, then the default &lt;code&gt;ONED&lt;/code&gt; Configuration will be used. Other valid types include: OS, CDROM, DATABLOCK, KERNEL, RAMDISK, and CONTEXT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01209ae781f2b5b58915493234efdf89a5982c20" translate="yes" xml:space="preserve">
          <source>The type for the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0007f4d758d6b4e4bb073441df5f36c09e0ed940" translate="yes" xml:space="preserve">
          <source>The type of &lt;code&gt;tgt&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c371c9cc2aca65f23723b9db693fd4c19e35622b" translate="yes" xml:space="preserve">
          <source>The type of Openstack Service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70d00db39192832a6192cc69b8994554c478ff0" translate="yes" xml:space="preserve">
          <source>The type of SSL certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c587311434fabf9f44602b47bf324943dbe6ec83" translate="yes" xml:space="preserve">
          <source>The type of a LoadBalancer, &lt;code&gt;internet-facing&lt;/code&gt; or &lt;code&gt;internal&lt;/code&gt;. Once set, can not be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c666112993d60cbc4863b08a7a11c1b8b787eeb" translate="yes" xml:space="preserve">
          <source>The type of action to add. There are three action types. Each one requires its own set of Keyword Arguments (kwargs). Valid values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3847e5b9d64319c227d3b85592f4a6dad3201863" translate="yes" xml:space="preserve">
          <source>The type of certificate format to return. Possible values include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c4147ed66503f67c68d44c7926cbae907c6e45" translate="yes" xml:space="preserve">
          <source>The type of certificate such as &lt;code&gt;server&lt;/code&gt; or &lt;code&gt;client&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c867f859fcac0a7db954c71110253d7b9c8088c0" translate="yes" xml:space="preserve">
          <source>The type of data this parameter expects is determined by the value type specified in &lt;code&gt;vtype&lt;/code&gt;. The correspondence is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a22a45a7d535f1e6fbb3205a2f53fedb2be88f" translate="yes" xml:space="preserve">
          <source>The type of encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fd09ed4c00ccf84d989e921deebefebdc02b10" translate="yes" xml:space="preserve">
          <source>The type of file: &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;htpasswd&lt;/code&gt;, &lt;code&gt;htdigest&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f91ce52b4b75acc27b21cc2388ae47c9502122" translate="yes" xml:space="preserve">
          <source>The type of filesystem to create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f3b26fab25fdb05ea00c6b2a8f41ba26a7a50c" translate="yes" xml:space="preserve">
          <source>The type of keys to list. The &lt;code&gt;pre&lt;/code&gt;, &lt;code&gt;un&lt;/code&gt;, and &lt;code&gt;unaccepted&lt;/code&gt; options will list unaccepted/unsigned keys. &lt;code&gt;acc&lt;/code&gt; or &lt;code&gt;accepted&lt;/code&gt; will list accepted/signed keys. &lt;code&gt;rej&lt;/code&gt; or &lt;code&gt;rejected&lt;/code&gt; will list rejected keys. Finally, &lt;code&gt;all&lt;/code&gt; will list all keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb44315b0e290f5fa6960d87b83e5d78588df8b" translate="yes" xml:space="preserve">
          <source>The type of monitor to create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0764081c98aaab154a65650aeb57f013b2a82053" translate="yes" xml:space="preserve">
          <source>The type of monitor to delete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6db691927c2e5b91cf34b4c6f2005f04fe227c9" translate="yes" xml:space="preserve">
          <source>The type of monitor to list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007f4b9c692cf20b1bf2401944ebb58ee76d7c84" translate="yes" xml:space="preserve">
          <source>The type of monitor to modify</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e56bb41dcac30453c72630cf9acc00516ed56c63" translate="yes" xml:space="preserve">
          <source>The type of monitor(s) to list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f58e3255b97ced5457c290ba51cecf2e9cb3839" translate="yes" xml:space="preserve">
          <source>The type of profile to create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576791d7e10c43bb937a40d0e441a9302dc19eae" translate="yes" xml:space="preserve">
          <source>The type of profile to delete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49bc4903d1d905b41f9b5e473ab01de42a0b6880" translate="yes" xml:space="preserve">
          <source>The type of profile to list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7cdbc99e6d56ebc0a285b136cc738c41e5a4893" translate="yes" xml:space="preserve">
          <source>The type of profile(s) to list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5bbf52dfa6830f7d529ba4c5543620700fd476" translate="yes" xml:space="preserve">
          <source>The type of question that is being asked (string, boolean, select, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfce85259ebc336df23dc82bcfe245b563de5b4" translate="yes" xml:space="preserve">
          <source>The type of rule. Either 'allow' or 'deny'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa48248c6af5b64b514ffdbed547d387914234c1" translate="yes" xml:space="preserve">
          <source>The type of storage to use. Set to &lt;code&gt;lvm&lt;/code&gt; to use an LVM group. Defaults to filesystem within /var/lib/lxc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e520cb0d10ae3273ccd9c162a6340a99202d8433" translate="yes" xml:space="preserve">
          <source>The type of targeting to use for matching, such as &lt;code&gt;glob&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f4c567d76cfdcedeffe0ebe20b0298a185e72c" translate="yes" xml:space="preserve">
          <source>The type of the JIRA ticket. Default: &lt;code&gt;Bug&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79abb4119cf8b69755305411579518600fb066fa" translate="yes" xml:space="preserve">
          <source>The type of the acl is used for it can be 'user' or 'group'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc04162e4ddb3ff4e86729fb262f4d839b4817f2" translate="yes" xml:space="preserve">
          <source>The type of the acl is used for, it can be 'user' or 'group'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85255305ed77449808c224c1e99e3a26658e9e83" translate="yes" xml:space="preserve">
          <source>The type of the message. Changes the appearance of the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12304f3326e2cb4eb4ba911c44870dd58ccd9fb7" translate="yes" xml:space="preserve">
          <source>The type of the output. Choose bewteen:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837956f1da209353d22c7fc268b0746c786b03ad" translate="yes" xml:space="preserve">
          <source>The type of the primary key to generate. It must be capable of signing. 'RSA' or 'DSA'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ab68ad15b9c9bc292ee71151791ff70b098c3a" translate="yes" xml:space="preserve">
          <source>The type of the response, i.e., raw text (&lt;code&gt;cli_ascii&lt;/code&gt;) or structured document (&lt;code&gt;cli&lt;/code&gt;). Defaults to &lt;code&gt;cli&lt;/code&gt; (structured data).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c5271e249bcae2c69ca474df38f831f1199fc1b" translate="yes" xml:space="preserve">
          <source>The type of the secondary key to generate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4789153674f3b47a21b0c99db1f40a33470c0a" translate="yes" xml:space="preserve">
          <source>The type of the volume. Optionally specified at volume creation time; will be ignored afterward. Requires 'volume_name'. Valid volume types for AWS can be found here: &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html&quot;&gt;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4a93067780e22b73a7eb45fb906ace6fa274cd" translate="yes" xml:space="preserve">
          <source>The type of trigger to create. This is defined when the trigger is created and cannot be changed later. Options are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70315ba3e2dfcde21757a123ac7ca13878bde4c5" translate="yes" xml:space="preserve">
          <source>The type of value to be written, valid types are string, data, int[eger], float, bool[ean], date, array, array-add, dict, dict-add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64042c37d3e8006b89f3ddf42c31c8e075d77c56" translate="yes" xml:space="preserve">
          <source>The types of lock to clear. Can be one or more of &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;checkout&lt;/code&gt;, and &lt;code&gt;mountpoint&lt;/code&gt;, and can be passed either as a comma-separated or Python list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27dd5a8d2d0f6954f097e037318d7d1724f2be45" translate="yes" xml:space="preserve">
          <source>The types of proxy connections should be setup with this server. Valid types are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7396a11def8a4faea1afa40578be53286a5755ab" translate="yes" xml:space="preserve">
          <source>The typical use-case would be to use ciphers in your pillar data, and keep a secret key on your master. You can put the public key in source control so that developers can add new secrets quickly and easily.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c87c6186931c449c677b9945d9d1431bcf88726" translate="yes" xml:space="preserve">
          <source>The uid of the owner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa424a728e5af1ed07c637bd08deafa7f9dc73a" translate="yes" xml:space="preserve">
          <source>The umask (in octal) to use when running the command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af471806f79511c9071e9ad25685c17d34bc0c5d" translate="yes" xml:space="preserve">
          <source>The underlying backend configuration must be configured via keyring itself. For examples and documentation, see keyring:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207627f55163cba400fd418ffa8f9868e9490cc0" translate="yes" xml:space="preserve">
          <source>The unique ID of the enpoint entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312690555451a967a5e6abcc58d2afddbf2ace64" translate="yes" xml:space="preserve">
          <source>The unique ID of the security group rule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c819357583267576710dccecb19122b9b97267" translate="yes" xml:space="preserve">
          <source>The unique Zone Identifier for the Hosted Zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b2d4cf432a113cd2efa51457a97a21bd5c3e80" translate="yes" xml:space="preserve">
          <source>The unique Zone Identifier for the Hosted Zone. Exclusive with Name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04efdb0d2e2c17d73ebb075542403bfcf3bb7368" translate="yes" xml:space="preserve">
          <source>The unique identifier for the Hosted Zone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fba3d42c5e9eaaf6c31791831acf9b8f670921" translate="yes" xml:space="preserve">
          <source>The unique identifier to use for this record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b8f91569b968933bd3f524eccd7a48055d2cd7" translate="yes" xml:space="preserve">
          <source>The unique name for the Jenkins job</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642be873e73bdc709b942e980cbcaf9481a470ed" translate="yes" xml:space="preserve">
          <source>The unique name for this event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d207ea2af24b0c521a5ac6c6591e52fbc51b219" translate="yes" xml:space="preserve">
          <source>The unique name or ID of the attached network. If a non-unique name is supplied, an exception is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b2cd08712ba47cdb1395bfa8b1220319b16d6e" translate="yes" xml:space="preserve">
          <source>The unique name or keyid for the GPG public key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36daf2735a915a2903a7b57de9ad7bb133167b75" translate="yes" xml:space="preserve">
          <source>The unique name that is given to the scheduled job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc801d6a7a46a5d27330775bc7d65bd109c9e896" translate="yes" xml:space="preserve">
          <source>The unstructured text to be parsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05eb06b2453681f0b4253880b2211c23e3b914d" translate="yes" xml:space="preserve">
          <source>The upgraded packages. Example element: &lt;code&gt;['libxslt-1.1.0', 'libxslt-1.1.10']&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d137103f6373e60c39519ceb5836debb950a73" translate="yes" xml:space="preserve">
          <source>The uptime in seconds or human readable format depending on the value of &lt;code&gt;human_readable&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f427320ec92a22d001274d909f60d9204d6b4de" translate="yes" xml:space="preserve">
          <source>The usage can be simplified, by defining (some of) the following options: &lt;code&gt;textfsm_platform_grain&lt;/code&gt;, &lt;code&gt;textfsm_path&lt;/code&gt;, &lt;code&gt;textfsm_platform_column_name&lt;/code&gt;, or &lt;code&gt;textfsm_index_file&lt;/code&gt;, in the (proxy) minion configuration file or pillar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112095389f1bdfd61afc0830144deaf11b00edef" translate="yes" xml:space="preserve">
          <source>The use of &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/minion.html#std:conf_minion-environment&quot;&gt;&lt;code&gt;environment&lt;/code&gt;&lt;/a&gt; to choose the pillar environment dates from a time before the &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/minion.html#std:conf_minion-pillarenv&quot;&gt;&lt;code&gt;pillarenv&lt;/code&gt;&lt;/a&gt; parameter was added. In a future release, it will be ignored and either the minion's &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/minion.html#std:conf_minion-pillarenv&quot;&gt;&lt;code&gt;pillarenv&lt;/code&gt;&lt;/a&gt; or the master's &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/master.html#std:conf_master-git_pillar_base&quot;&gt;&lt;code&gt;git_pillar_base&lt;/code&gt;&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff37cfe7b267d5186f2130512d9b368057526f6" translate="yes" xml:space="preserve">
          <source>The use of &lt;code&gt;python_shell=True&lt;/code&gt; means that the shell will accept _any_ input including potentially malicious commands such as 'good_command;rm -rf /'. Be absolutely certain that you have sanitized your input prior to using &lt;code&gt;python_shell=True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f5e00d6b79633c8492c959ad080d4e607681b3" translate="yes" xml:space="preserve">
          <source>The use of python_shell=True means that the shell will accept _any_ input including potentially malicious commands such as 'good_command;rm -rf /'. Be absolutely certain that you have sanitized your input prior to using python_shell=True</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa963d568541abd180e94d9553c8d80c74135969" translate="yes" xml:space="preserve">
          <source>The use of the cibname variable is optional. Use it only if you want to deploy your changes into a cibfile first and then push it. This makes only sense if you want to deploy multiple changes (which require each other) at once to the cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d13e46ed35b49bf61d2a1ddca9dae29ba911e257" translate="yes" xml:space="preserve">
          <source>The used to add a new service, with an optional health check, to the local agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806e8011b7698823a46f94bb19ac9bb640c1c3a9" translate="yes" xml:space="preserve">
          <source>The user SID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a70ef73e2205142089c7074a790209e3cdb7bf" translate="yes" xml:space="preserve">
          <source>The user can select the right transport using the &lt;code&gt;transport&lt;/code&gt; option in the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744a5f00d26e32ba8a6ba0988f90b0647a8841c8" translate="yes" xml:space="preserve">
          <source>The user data available to launched EC2 instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246f5eb4bc9870b9e4948ee97d2e18299fcafdf0" translate="yes" xml:space="preserve">
          <source>The user for which to obtain information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f560678874483a24fed26979bbef7b84006f309" translate="yes" xml:space="preserve">
          <source>The user id of the user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07fdca112cdcb0e45f8f822134eccc18f0c9a583" translate="yes" xml:space="preserve">
          <source>The user id to assign. If not specified, and the user does not exist, then the next available uid will be assigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3eefe1098fbb086ded62deb172bea019eb355cf" translate="yes" xml:space="preserve">
          <source>The user list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0885f6381ab856947fb2321a21fb4bf97945395" translate="yes" xml:space="preserve">
          <source>The user module is used to create and manage user settings, users can be set as either absent or present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f8440b07165472a8553c1bcb79fed7a76f153e" translate="yes" xml:space="preserve">
          <source>The user name to run the command as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749da09ea2eb94a3c3636560097f5c793fd3956a" translate="yes" xml:space="preserve">
          <source>The user object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2e8e4d993fa8d25aea15c88238e8217d8d7450" translate="yes" xml:space="preserve">
          <source>The user of node to join to (default: rabbit)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f1f3d68f0fd86b204858e847e9f03c6c90aa19" translate="yes" xml:space="preserve">
          <source>The user or group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73fe0d54309d9d73d8584538682531d1f4d6060" translate="yes" xml:space="preserve">
          <source>The user or group of users to send the message to. Must be ID of user, not name or email address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a68db3a2d315d73f75758bece1426166f97b3049" translate="yes" xml:space="preserve">
          <source>The user password</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a0c6c5b9c9e3f6aa03ad6f50984da70710e1d3" translate="yes" xml:space="preserve">
          <source>The user that acknowledged the incident.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454d57b21f309d5b83183ae03869f3b6b8aaa2eb" translate="yes" xml:space="preserve">
          <source>The user that created the issue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f82a920160896f72763f90da5a8b99c01d6c283" translate="yes" xml:space="preserve">
          <source>The user to access the name repository with. The svn default is the current user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b5fa93e85d3db310b07f9422376ed0761eaa096" translate="yes" xml:space="preserve">
          <source>The user to apply the grant to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a43140e61fea72dd09475b42f77d525437b4067" translate="yes" xml:space="preserve">
          <source>The user to check the default keychain of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="195f472d5fa4b87a6ef13c875c5f62906419b4da" translate="yes" xml:space="preserve">
          <source>The user to connect as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4a67460165595def1bece7127af0b59048048e" translate="yes" xml:space="preserve">
          <source>The user to connect as (must be able to create the user)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8721fafb6c7abd02108a5e94a74ff3ba3156a32" translate="yes" xml:space="preserve">
          <source>The user to connect as (must be able to remove the database)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b17514d4b9191e1b0a5c3411019f66d54a7ac3" translate="yes" xml:space="preserve">
          <source>The user to connect as (must be able to remove the user)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b75cbccf03f3a7a8be565fa2c3c93f8b1958f00" translate="yes" xml:space="preserve">
          <source>The user to delete the defaults with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f1f9cd4a8e67110b4ea70a2aa03f91aaa05865" translate="yes" xml:space="preserve">
          <source>The user to own each extracted file. Not available on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc3b064c930a85af8b3a932cbe4568597b4b62e" translate="yes" xml:space="preserve">
          <source>The user to own the copied file, this defaults to the user salt is running as on the minion. If &lt;code&gt;preserve&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;, then this will be ignored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00fce86b66b632f015146e8dc683a63367d5a233" translate="yes" xml:space="preserve">
          <source>The user to own the directory, this defaults to the user salt is running as on the minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48beda7110e151c878e6a1a538e63d21ec7b33c4" translate="yes" xml:space="preserve">
          <source>The user to own the directory. This defaults to the user salt is running as on the minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be060a2f1e910e1d632da817e5ab78008f6400d7" translate="yes" xml:space="preserve">
          <source>The user to own the directory; this defaults to the user salt is running as on the minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3add34a8e83f75391cf3fee9d58ddabb209059" translate="yes" xml:space="preserve">
          <source>The user to own the file, this defaults to the user salt is running as on the minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b098681c774e2427b0f75661edabec61618e559d" translate="yes" xml:space="preserve">
          <source>The user to own the file, this defaults to the user salt is running as on the minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09df6b0502a6fae85c1b7774f3467361e6897b3f" translate="yes" xml:space="preserve">
          <source>The user to own the mount; this defaults to the user salt is running as on the minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2caa8dd30c36fb690d86d3f602e0382a240f57" translate="yes" xml:space="preserve">
          <source>The user to run Bower with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41cc943b9de36d4bec221105abe29bd5d9e7cba3" translate="yes" xml:space="preserve">
          <source>The user to run NPM with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e0c035ff70d6ef558a6cfc7123601517a8e1d7" translate="yes" xml:space="preserve">
          <source>The user to run as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854c46ea83ea783769dceefb1fb56cad638d3208" translate="yes" xml:space="preserve">
          <source>The user to run cabal install with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f4d87b6671a794bad5399d9a01778f19dee882c" translate="yes" xml:space="preserve">
          <source>The user to run cabal list with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7ae50dbb32814702df8170bae1e53f35e8f1eb" translate="yes" xml:space="preserve">
          <source>The user to run cabal update with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3257abb94c2ac14044f2200ba086da2cfa69f497" translate="yes" xml:space="preserve">
          <source>The user to run gem as.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f2372c8aec186782e26f82694be91bece93cdb" translate="yes" xml:space="preserve">
          <source>The user to run ghc-pkg unregister with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b96c026624278eaf96b12d4bdf7f8e9f8b438a" translate="yes" xml:space="preserve">
          <source>The user to run pyenv as.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5220922ef37d8941efda4482217f0ec3e1f1441a" translate="yes" xml:space="preserve">
          <source>The user to run rbenv as.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d112b2a5e6938b418ecd6638a205e655e055db" translate="yes" xml:space="preserve">
          <source>The user to run rvm as.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2552c3a6356c4f78769e10808bf64e07b98ac84f" translate="yes" xml:space="preserve">
          <source>The user to run the at job .. versionadded:: 2014.1.4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106c79cf710aaa92fc5ec5cf264d9b640af8b394" translate="yes" xml:space="preserve">
          <source>The user to run the build process as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ef011c208fb30b79d5c4bb4403333ec4dbdba7" translate="yes" xml:space="preserve">
          <source>The user to run the rabbitmq command as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3925fc80652ea6d16435f3d065c41ff27aea13bd" translate="yes" xml:space="preserve">
          <source>The user to run the rabbitmq-plugin command as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682118e56a6e8f99c68dd88aa160e3b5148aaefa" translate="yes" xml:space="preserve">
          <source>The user to set the default keychain as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45b82a3d4f5181e5bf89d426f312c2412125a39" translate="yes" xml:space="preserve">
          <source>The user to which the process belongs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1d56191627c0db8e70ed9e9e5d4b39b55db452" translate="yes" xml:space="preserve">
          <source>The user to whom the crontab should be assigned. This defaults to root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce4a52bcf8af7b4b4355c23267692841ad62083" translate="yes" xml:space="preserve">
          <source>The user to write the defaults to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43308a6ebe60e7ba714e17d91bbe12a5177c4ba4" translate="yes" xml:space="preserve">
          <source>The user under which to run pip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6cd4ea5e81c2c6ffc34c9a820e500f5dd3dbb87" translate="yes" xml:space="preserve">
          <source>The user under which to run rbenv. If not specified, then rbenv will be run as the user under which Salt is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32ac2251d3c9487b406253d5430e7c53e3d93de" translate="yes" xml:space="preserve">
          <source>The user under which to run rvm. If not specified, then rvm will be run as the user under which Salt is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c5b5c41b39ba6f67ff4352dc6523c4f0d9b5b8" translate="yes" xml:space="preserve">
          <source>The user under which to run the &lt;code&gt;gem&lt;/code&gt; command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a6d2d34925376cc85719a0ebf05b8dda43612f" translate="yes" xml:space="preserve">
          <source>The user under which to run the rvm installer script. If not specified, then it be run as the user under which Salt is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9867b59ca4f5d55b4d7f4467c7845c49d1c5cc04" translate="yes" xml:space="preserve">
          <source>The user under which to run virtualenv and pip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5743b5c00011b2b0ce150cc4d68707db19337681" translate="yes" xml:space="preserve">
          <source>The user who owns the SSH authorized keys file to modify</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3019e7fdcd569bd44f672e074b31f52a180b4db2" translate="yes" xml:space="preserve">
          <source>The user who owns the ssh authorized keys file to modify</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5952ff1f3291776f24efe4da5a2a7b5fcf5626e8" translate="yes" xml:space="preserve">
          <source>The user with which to run the gzip command line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ccb54cf6833c1117b206ffdb274b9bc5b43029" translate="yes" xml:space="preserve">
          <source>The user's full name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b421b40463150c8ed7dcbbf6ca5de0c996a194" translate="yes" xml:space="preserve">
          <source>The user's home phone number (not supported in MacOS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f536f8c87d95600dd29210c98d0d476b335cbe" translate="yes" xml:space="preserve">
          <source>The user's other attribute (not supported in MacOS) If GECOS field contains more than 4 commas, this field will have the rest of 'em</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262a3feb65c51886ce075192abaa138a4a283cb9" translate="yes" xml:space="preserve">
          <source>The user's room number (not supported in MacOS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91610d3703bec088b46099d5a2d52addf4efd2d3" translate="yes" xml:space="preserve">
          <source>The user's work phone number (not supported in MacOS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d794f1c71271582b710265d4c1a581bf585fc2" translate="yes" xml:space="preserve">
          <source>The user-supplied name of a final cache cluster snapshot. This is the unique name that identifies the snapshot. ElastiCache creates the snapshot, and then deletes the cache cluster immediately afterward.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ecc22591d5ede32b42331d37c3854357542e043" translate="yes" xml:space="preserve">
          <source>The username and password will be for authentication to the Panorama server, not the panos device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb0dad49f34de326e354510b5760ceb5e064cad" translate="yes" xml:space="preserve">
          <source>The username for which the password will change is the same username that is used to authenticate against the ESXi host via the Proxy Minion. For example, if the pillar definition for the proxy username is defined as &lt;code&gt;root&lt;/code&gt;, then the username that the password will be updated for via this state is &lt;code&gt;root&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1230555d6668f94f9ecec5f120088cae4f7f0897" translate="yes" xml:space="preserve">
          <source>The username of the database owner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdaa3324eb99c5d63777b4caaf5fdc08cce0a4e6" translate="yes" xml:space="preserve">
          <source>The username of the user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e333fa40988e7702d2bb00512e360654233df9" translate="yes" xml:space="preserve">
          <source>The username of the user to remove</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62aa9be13de10052b37db95b6cc1b7788d5f7a9f" translate="yes" xml:space="preserve">
          <source>The username required for SSH authentication on the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b237648cd6f0ce5b24cd1e6990a93ae3e818daa" translate="yes" xml:space="preserve">
          <source>The username to be used when connecting to the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b391f9e4db0fcbcd1071f9e4f62494bc4da42d" translate="yes" xml:space="preserve">
          <source>The username to pass to the device to authenticate the NX-API connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae06dcef3cf31c652a68f5a34c76b87c2e8e53a" translate="yes" xml:space="preserve">
          <source>The username to pass to the device to authenticate the eAPI connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4e4ad06b86603d6613b062ac14fc07337661ec" translate="yes" xml:space="preserve">
          <source>The username to use for the proxy server if required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2650fdb4f8b9761ba115991e9cd8d95855e43f1" translate="yes" xml:space="preserve">
          <source>The username used to access the chassis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94dd455cea88d62da005bb1985693db2f2124189" translate="yes" xml:space="preserve">
          <source>The username used to login to the Cisco NSO host, such as &lt;code&gt;admin&lt;/code&gt;. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5392a12679272ca29adb56e877c63944b78f083a" translate="yes" xml:space="preserve">
          <source>The username used to login to the ESXi host, such as &lt;code&gt;root&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae3c42cc4ab92b3b95a6cfc64241c5e40226fb6" translate="yes" xml:space="preserve">
          <source>The username used to login to the ESXi host, such as &lt;code&gt;root&lt;/code&gt;. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e238ee19a301653a3cdec140499badf520c658a" translate="yes" xml:space="preserve">
          <source>The username used to login to the Panorama server. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87ab65d0d185e11058ffd804c0a6b727ab73d1f" translate="yes" xml:space="preserve">
          <source>The username used to login to the cimc host. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1705bf978a913b3153cc28ef2113a61c36d0104f" translate="yes" xml:space="preserve">
          <source>The username used to login to the host, such as &lt;code&gt;root&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e2418b2c5bdf65e0485045b8e9ae5ddf6d5c7b" translate="yes" xml:space="preserve">
          <source>The username used to login to the panos host. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a861cf1757261029520bb64a0af241dd2bf062" translate="yes" xml:space="preserve">
          <source>The username used to login to the vCenter server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380beabf5d0914754ec1d39dfb0cd696c5591a17" translate="yes" xml:space="preserve">
          <source>The users email address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4859b1ff05e00a26437413c6f715b9b499822307" translate="yes" xml:space="preserve">
          <source>The users username</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46d425163793d3d9727f0b4b1b6240c09100e55" translate="yes" xml:space="preserve">
          <source>The valid opts are the additional opts (i.e. not the data being deserialized) for the function used to deserialize the data. Documentation for the these functions can be found in the list below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844162d0f5554221f759299987ad5bbea9bfb74c" translate="yes" xml:space="preserve">
          <source>The valid opts are the additional opts (i.e. not the data being serialized) for the function used to serialize the data. Documentation for the these functions can be found in the list below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49655b55a28916eb2f1e56141afa81205e080a18" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;*&lt;/code&gt; in the CountryCode element matches all geographic locations that aren't specified in other geolocation resource record sets that have the same values for the Name and Type elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30db308d56d50f136ef28a2f5fb41ded9ab054f" translate="yes" xml:space="preserve">
          <source>The value can also represent a value in a nested dict using a &quot;:&quot; delimiter for the dict, similar to how pillar.get works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8b330c8eebe4f5740b7928a6eb0e097f67153a" translate="yes" xml:space="preserve">
          <source>The value can also represent a value in a nested dict using a &quot;:&quot; delimiter for the dict. This means that if a dict in grains looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792ee1898ca0e615625f36d837db309f71282e54" translate="yes" xml:space="preserve">
          <source>The value can also represent a value in a nested dict using a &quot;:&quot; delimiter for the dict. This means that if a dict in pillar looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec90760bca3f0f39d37e26469cd93aca5ec9e07" translate="yes" xml:space="preserve">
          <source>The value for a specific configuration line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151158bc2dfd92fff6351048f683d6cb5a849e33" translate="yes" xml:space="preserve">
          <source>The value is a dictionary with &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;secret&lt;/code&gt; keys. The type can be one of &lt;code&gt;ceph&lt;/code&gt; for Ceph RBD or &lt;code&gt;chap&lt;/code&gt; for iSCSI sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e914ea5067130a2460daebe9d431a75296ad4dc" translate="yes" xml:space="preserve">
          <source>The value is present in the list type grain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13abf06bd5d27b70fcdf35e35325f6d548d3a946" translate="yes" xml:space="preserve">
          <source>The value it should be set to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0affcffcd3acf003c50ddecc4094d9bc0d6ac9" translate="yes" xml:space="preserve">
          <source>The value specified by this option will be returned if the desired pillar key does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f295f63511bf450914e50ee7f69cc75e7842616" translate="yes" xml:space="preserve">
          <source>The value the key should contain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bdf6a0d6455dccd7cdfc81d6ce9a3a01bb55cbe" translate="yes" xml:space="preserve">
          <source>The value to append</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f35f5c945d5e2c7375211b0a9904f3b359bcdf6" translate="yes" xml:space="preserve">
          <source>The value to append to the grain key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102cd8fb5c616633f69732390cb6f508e258ea93" translate="yes" xml:space="preserve">
          <source>The value to apply to the setting. Valid options are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d1be5840046e6ad8b3c5e67043c48004ce4966" translate="yes" xml:space="preserve">
          <source>The value to apply to the setting. Valid values are dependent upon the setting being configured. Valid options are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a50ed47df9ca105783a2e924085343e5a4d73289" translate="yes" xml:space="preserve">
          <source>The value to be encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b133d8e722746dd0423b347af905e5c98e8a11" translate="yes" xml:space="preserve">
          <source>The value to be hashed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224a586b5c96fa838ab0d25ab2f1c9ecb9042587" translate="yes" xml:space="preserve">
          <source>The value to check</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa4790ef82c8bb2d4f6e4e3d982a6a98c392c29" translate="yes" xml:space="preserve">
          <source>The value to delete from the grain list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31bcaf1c37ab7c480e05082582667b99497fbae" translate="yes" xml:space="preserve">
          <source>The value to match on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59505f675a48f9a79881e85408e58577f74e799" translate="yes" xml:space="preserve">
          <source>The value to remove.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9571ab424dffa7c5f376c7c97c04d87fb698a99b" translate="yes" xml:space="preserve">
          <source>The value to set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b17573312b3efab56c645e0d1650936b9df786f" translate="yes" xml:space="preserve">
          <source>The value to set for that key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c8a855169fe4167b953810feb7434f5cf69238" translate="yes" xml:space="preserve">
          <source>The value to set for the given environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c6d48105c9e5da2719f5dd3113a277f7988b86" translate="yes" xml:space="preserve">
          <source>The value to set for the specified key. Incompatible with the &lt;code&gt;multivar&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08a2eb0c5eeba1321961f2c64912187452e84f0" translate="yes" xml:space="preserve">
          <source>The value to set on the boolean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1588563e18391d6801a585ce5e5cdef38a1d0583" translate="yes" xml:space="preserve">
          <source>The value to set on the grain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce59a6676aca3d9726f95bf1012e46dcbd1b8a16" translate="yes" xml:space="preserve">
          <source>The value to set the grain key to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e5f9f7f396575b1dc1a85905de35df9bddd6ba" translate="yes" xml:space="preserve">
          <source>The value to set. Must be a string or False. Refer to the 'false_unsets' parameter for behavior when set to False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf5c405a4e919984c71abf98d006414a25f4e57" translate="yes" xml:space="preserve">
          <source>The value to write to the given key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e164f7296376e7b42bcf8c055dbe5418afe439" translate="yes" xml:space="preserve">
          <source>The value type for the data you wish to store in the registry. Valid values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80eee241fe26f3c87de6212e714f50d7b8356c6" translate="yes" xml:space="preserve">
          <source>The value you'd like to set. If a value name (&lt;code&gt;vname&lt;/code&gt;) is passed, this will be the data for that value name. If not, this will be the &lt;code&gt;(Default)&lt;/code&gt; value for the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff899d56e0fdda5bb6b2a063934dc24ec20def0" translate="yes" xml:space="preserve">
          <source>The value you'd like to set. If a value name (vname) is passed, this will be the data for that value name. If not, this will be the (Default) value for the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72332970c1a66585379056db1ef99135b0fa598f" translate="yes" xml:space="preserve">
          <source>The values for &lt;em&gt;report_delivery&lt;/em&gt; are smtp or file. In case of file delivery the only other applicable option is &lt;em&gt;file_output&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="346cf67aa9c87fd9a2c00088f3cd810f05515690" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;this&lt;/code&gt; is special and signifies what should be included with the above word between angle brackets (&amp;lt;&amp;gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1757822cfc9b7cbd24e47ce55d6a1487cccfb58" translate="yes" xml:space="preserve">
          <source>The variable name to set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec2d63ce3e93325c0b082a9936085b245e715c1" translate="yes" xml:space="preserve">
          <source>The variable name. This will automatically be converted to upper case since variables in &lt;code&gt;make.conf&lt;/code&gt; are in upper case</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba773059583e97ff5286742d4771d55f4143e03" translate="yes" xml:space="preserve">
          <source>The version for this Cassandra cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e146b11dbe0efc59df7cbaecef1ad084aa51adb" translate="yes" xml:space="preserve">
          <source>The version number is optional and will default to the most recent version available at opts['update_url'].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5769f9ce802c5e2eaec957bf9718f2a47cbd0318" translate="yes" xml:space="preserve">
          <source>The version number of the cache engine to be used for the cache clusters in this replication group. To view the supported cache engine versions, use the DescribeCacheEngineVersions operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a03813732b847b14aa30e03946219b706ac3fa" translate="yes" xml:space="preserve">
          <source>The version number of the cache engine to be used for this cache cluster. To view the supported cache engine versions, use the DescribeCacheEngineVersions operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5980cbb2e54bb3d5d4942df60d67a9dcbc834126" translate="yes" xml:space="preserve">
          <source>The version number of the cache engine to be used for this cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c573ce6add57881ba41e51e00e484d735bf9622" translate="yes" xml:space="preserve">
          <source>The version number of the database engine to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25b9ede4781c156e0661a4c6755886823fe2e26" translate="yes" xml:space="preserve">
          <source>The version of Jenkins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a16cc3a11d4c3d498d24bf9359dffd49ecfbefd" translate="yes" xml:space="preserve">
          <source>The version of Ruby to install, should match one of the versions listed by &lt;code&gt;rbenv.list&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd509f84bf6cc6721fd5fe7b2ee2603bff91af13" translate="yes" xml:space="preserve">
          <source>The version of S3 object to use. Optional, should only be specified if S3Bucket and S3Key are specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1ab517b1104eb1e38e31db544afaf72cf27a66" translate="yes" xml:space="preserve">
          <source>The version of python to install</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c2e84c9ffee06b34a07d01d816de0325d6286a" translate="yes" xml:space="preserve">
          <source>The version of python to install, should match one of the versions listed by pyenv.list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7ed882800c9460b15705ae116664670627b39c" translate="yes" xml:space="preserve">
          <source>The version of python to uninstall</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6e9b877e7480d443c4b3529e1d4430c4c2efee" translate="yes" xml:space="preserve">
          <source>The version of python to uninstall. Should match one of the versions listed by &lt;a href=&quot;#salt.modules.pyenv.versions&quot;&gt;&lt;code&gt;pyenv.versions&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b68b327020e985e0592f1147c69b5349c382701" translate="yes" xml:space="preserve">
          <source>The version of ruby to install</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54fe8d08b871c8b17ab2eccab3bba2237b446edd" translate="yes" xml:space="preserve">
          <source>The version of ruby to make the default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd444a8ac7ff723ff4737e4f20a1a88c67f1a527" translate="yes" xml:space="preserve">
          <source>The version of ruby to reinstall</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f5c2bbfc2d7badf960724bfb96f8bb30283483e" translate="yes" xml:space="preserve">
          <source>The version of ruby to uninstall</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738f4523e48ce7b2ea021aa8c4103fc80ae64c22" translate="yes" xml:space="preserve">
          <source>The version of ruby to uninstall. Should match one of the versions listed by &lt;a href=&quot;#salt.modules.rbenv.versions&quot;&gt;&lt;code&gt;rbenv.versions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5193929cdd4cfcd5c5896e185dcd89534ef8c7c8" translate="yes" xml:space="preserve">
          <source>The version of rubygems to install, or 'remove' to use the version that ships with 1.9</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b76c74b4aee00b3cefa11b757be4fc66f29a70" translate="yes" xml:space="preserve">
          <source>The version of the X509 certificate. Defaults to 3. This is automatically converted to the version value, so &lt;code&gt;version=3&lt;/code&gt; sets the certificate version field to 0x2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b831a7a3c9603803fae17fd8dbd8f71bd0b1ce01" translate="yes" xml:space="preserve">
          <source>The version of the package that should be removed. Don't do anything if the package is installed with an unmatching version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d261224eb2708b2a5024c59c3561354ab1ca88b3" translate="yes" xml:space="preserve">
          <source>The version of the package to be uninstalled. If this option is used to to uninstall multiple packages, then this version will be applied to all targeted packages. Recommended using only when uninstalling a single package. If this parameter is omitted, the latest version will be uninstalled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d1103a23413a7b89f7e51ffb01193155bf3d9e" translate="yes" xml:space="preserve">
          <source>The version strings returned by either of these functions can be used as version specifiers in pkg states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d00ea9cdac0b4a82a4d2fecfd60d84b43878ba9" translate="yes" xml:space="preserve">
          <source>The version to set as the default. Should match one of the versions listed by &lt;a href=&quot;#salt.modules.pyenv.versions&quot;&gt;&lt;code&gt;pyenv.versions&lt;/code&gt;&lt;/a&gt;. Leave blank to return the current default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5cc23872a06b4e44b165f79f971ab1514bd0bb" translate="yes" xml:space="preserve">
          <source>The version to set as the default. Should match one of the versions listed by &lt;a href=&quot;#salt.modules.rbenv.versions&quot;&gt;&lt;code&gt;rbenv.versions&lt;/code&gt;&lt;/a&gt;. Leave blank to return the current default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f6a0749c449afad959d43f1b11543fd3a71c093" translate="yes" xml:space="preserve">
          <source>The versioning state of the bucket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e64e41e89b865a2340ae7d25b6ed2a0fe8f17b" translate="yes" xml:space="preserve">
          <source>The virtual machine will be powered on if the power state of the snapshot when it was created was set to &quot;Powered On&quot;. Set &lt;code&gt;power_off=True&lt;/code&gt; so that the virtual machine stays powered off regardless of the power state of the snapshot when it was created. Default is &lt;code&gt;power_off=False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5f83e6441e6733935d0931f85c70a7abab40db" translate="yes" xml:space="preserve">
          <source>The virtual name of the proxy module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0278b287793a1eae559732e17de90c33be479d1" translate="yes" xml:space="preserve">
          <source>The visiblity of the repository. Note that private repositories require a paid GitHub account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9af57764eaab0df423e18aac1b895f89242434a" translate="yes" xml:space="preserve">
          <source>The volume group to remove</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3ccca2b493dfec6e2deec9b14aeac89d29d408" translate="yes" xml:space="preserve">
          <source>The volume type. This can be gp2 for General Purpose SSD, io1 for Provisioned IOPS SSD, st1 for Throughput Optimized HDD, sc1 for Cold HDD, or standard for Magnetic volumes. String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add01d74d36d6e6cd8523235f11c80edea76bc27" translate="yes" xml:space="preserve">
          <source>The vsys name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16806be0910da67e071d974cee52c372780ff937" translate="yes" xml:space="preserve">
          <source>The wait time in minutes before the system will be rebooted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416f8ee3ff73be318d0e48ad82cc82d78389ddaa" translate="yes" xml:space="preserve">
          <source>The wait time in minutes before the system will be shutdown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d798b14e6dcd4b3ca858447feaee44698a230c5" translate="yes" xml:space="preserve">
          <source>The way the data from a new &lt;code&gt;yaml_data&lt;/code&gt; dict is merged with the existing &lt;code&gt;stack&lt;/code&gt; data can be controlled by specifying a merging strategy. Right now this strategy can either be &lt;code&gt;merge-last&lt;/code&gt; (the default), &lt;code&gt;merge-first&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, or &lt;code&gt;overwrite&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07dc1c6dd39cc54b06d2440a9e8ea532fe3442b2" translate="yes" xml:space="preserve">
          <source>The web binding that the certificate is being assigned to must already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0e518fd3578b54f7039ef2f0390bb99f38fa47" translate="yes" xml:space="preserve">
          <source>The webhook URL given configured in Teams interface, if not specified in the configuration options of master or minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d805e47a877801af4fa3a7a4d9fc78203db72322" translate="yes" xml:space="preserve">
          <source>The website configuration of the bucket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b0d572e280ec2012d7ca65a9d3ece6bcd2a62f" translate="yes" xml:space="preserve">
          <source>The weekly time range (in UTC) during which system maintenance can occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d0c0b7b94c3daf6ba1f7f3e55295e0b447eb51" translate="yes" xml:space="preserve">
          <source>The weekly time range (in UTC) during which system maintenance can occur. Example: sun:05:00-sun:09:00</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1708e8e7962171a508125bd69256676e34e5c4" translate="yes" xml:space="preserve">
          <source>The wheel key functions can also be called via a &lt;code&gt;salt&lt;/code&gt; command at the CLI using the &lt;a href=&quot;../../modules/all/salt.modules.saltutil#module-salt.modules.saltutil&quot;&gt;&lt;code&gt;saltutil execution module&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2daa6eed98dc3b2518385a1addc74664f4c4fdb" translate="yes" xml:space="preserve">
          <source>The will re-run the provisioning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb42efe114fed4bc1c561448431dbbff7298c5ca" translate="yes" xml:space="preserve">
          <source>The words to execute the say command with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9730b71b4570d98505ec3337f0e4f1fc126c2c8" translate="yes" xml:space="preserve">
          <source>The workflow is: once you have a working and audited system, you would create your baseline snapshot (eg. with &lt;code&gt;salt tgt snapper.create_snapshot&lt;/code&gt;) and define in your state this baseline using the identifier of the snapshot (in this case: 20):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3774ed7a093b7d816bbc6c8d418feab335b3388" translate="yes" xml:space="preserve">
          <source>The workgroup to join the computer to. Default is &lt;code&gt;WORKGROUP&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9754ab22df10547f6c0019736b14cff8c6615321" translate="yes" xml:space="preserve">
          <source>The write throughput for this table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60749d02d16d27154709c41b2957b8bec8cac7d5" translate="yes" xml:space="preserve">
          <source>The x coordinate of the pixel. Ranges from 0 on the left to 7 on the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf9e51f678201cdf398aa9fe95154955c7e3111" translate="yes" xml:space="preserve">
          <source>The xml document of the SAML provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="870b58a0c04a30143c7f0e1677171a10288dda50" translate="yes" xml:space="preserve">
          <source>The y coordinate of the pixel. Ranges from 0 at the top to 7 at the bottom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b546cb0acf43c3596c89392c7aef79dc28b3cc50" translate="yes" xml:space="preserve">
          <source>The yaml filter takes an optional flow_style parameter to control the default-flow-style parameter of the YAML dumper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b74b90a9797ce2c3b742d13423256062a9da8ea" translate="yes" xml:space="preserve">
          <source>The zc.buildout integration is still in beta; the API is subject to change</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497ae03beadcb4112daf78f0d428bfc4cc975fb6" translate="yes" xml:space="preserve">
          <source>The zone to check</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f142aa8e93f0921268e5958efc10c3a4269debac" translate="yes" xml:space="preserve">
          <source>The zone to check/update</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78b185f7da0f89534ee750c4f5e9ede63da78e09" translate="yes" xml:space="preserve">
          <source>The zone to create the record in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93341111cdfa2fed2d1c0833825e480c4501b6c" translate="yes" xml:space="preserve">
          <source>The zone to delete the record from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94ce1d45da03fe5bdc354420a91a09c0f4498bf" translate="yes" xml:space="preserve">
          <source>The zone to modify.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad2d04d93c6a4c5c3fd20230481528c4ac601e6" translate="yes" xml:space="preserve">
          <source>Then register your email address with Venafi using the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b725aa3504e1fb47a1d197a885c8fc90b328bbd6" translate="yes" xml:space="preserve">
          <source>Then the cibfile can be modified by creating resources (creating only 1 resource for demonstration, see also 7.):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300f72a971d6baa66865095103de665e963e8e41" translate="yes" xml:space="preserve">
          <source>Then the existing cron will be updated, but if the cron command is changed, then a new cron job will be added to the user's crontab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce79a2a00fea284704ccde3ac576b8789e568ad" translate="yes" xml:space="preserve">
          <source>Then the file will be saved to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81771d490998ee5b20a0fcb267b598eaf081e500" translate="yes" xml:space="preserve">
          <source>Then they are merged in a similar way to plain pillar data, in the order returned by the SQL database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01134584519901d8f6549b514e50cb4c22bddfe0" translate="yes" xml:space="preserve">
          <source>Then you can execute a list of method defined at the bottom with at least one argument (the path where the docker-compose.yml will be read) and an optional python list which corresponds to the services names:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ce1d95f4549925a18e144f7675b8684441415d" translate="yes" xml:space="preserve">
          <source>Then you can select a custom merging strategy using the &lt;code&gt;__&lt;/code&gt; key in a dict:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528815c67db138e2608c986b3c9a603b652915f0" translate="yes" xml:space="preserve">
          <source>Then, a &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/states/highstate.html#function-declaration&quot;&gt;Function declaration&lt;/a&gt; object can be created from a &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/states/highstate.html#state-declaration&quot;&gt;State declaration&lt;/a&gt; object by one of the following two ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee01937082d125839e8c927f1e37f57ab952122" translate="yes" xml:space="preserve">
          <source>Then, copy it to any minions as necessary by using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce4fa2b9c0918d5881aac33b82d1f74f558d74f" translate="yes" xml:space="preserve">
          <source>Then, remaining keywords are processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="836ee16d3b212fffd2f6375e30f1cb50f8766843" translate="yes" xml:space="preserve">
          <source>Theory of sql_base ext_pillar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a06d6a0a6da43a8e0c83882e253e23b4ba0a87" translate="yes" xml:space="preserve">
          <source>There are 3 value names:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171bc520c6ca55f22875ecb4f222357cc0eae71e" translate="yes" xml:space="preserve">
          <source>There are 3 value names: &lt;code&gt;RTHDVCPL&lt;/code&gt;, &lt;code&gt;NvBackend&lt;/code&gt;, and &lt;code&gt;BTMTrayAgent&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f979fe40396fb920735aaca23f40c3e64d055dd0" translate="yes" xml:space="preserve">
          <source>There are differences in the features available in both extraction functions. These are detailed below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5227109101f54980ae7d10d1d01e5a294958ed4c" translate="yes" xml:space="preserve">
          <source>There are many &lt;a href=&quot;http://augeas.net/stock_lenses.html&quot;&gt;preconfigured lenses&lt;/a&gt; that come with Augeas by default, and they specify the common locations for configuration files. So most of the time Augeas will know how to manipulate a file. In the event that you need to manipulate a file that Augeas doesn't know about, you can specify the lens to use like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f652ec44c09adea3437f2b28c8512c22db5b1d3c" translate="yes" xml:space="preserve">
          <source>There are many things that could potentially be done with queues within Salt. For the time being the focus will be on queueing infrastructure actions on specific minions. The queues generally will be populated with minion IDs. When the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3054425e0a4872a6b43cceb99e283b4214c0a93" translate="yes" xml:space="preserve">
          <source>There are optional keyword arguments determined by the type of trigger being defined. They are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e00d713fe1d62b8068074fab2096a2710c8f44" translate="yes" xml:space="preserve">
          <source>There are three PostgreSQL returners. Any can function as an external &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/jobs/external_cache.html#external-job-cache&quot;&gt;master job cache&lt;/a&gt;. but each has different features. SaltStack recommends &lt;a href=&quot;#module-salt.returners.pgjsonb&quot;&gt;&lt;code&gt;returners.pgjsonb&lt;/code&gt;&lt;/a&gt; if you are working with a version of PostgreSQL that has the appropriate native binary JSON types. Otherwise, review &lt;a href=&quot;salt.returners.postgres#module-salt.returners.postgres&quot;&gt;&lt;code&gt;returners.postgres&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;salt.returners.postgres_local_cache#module-salt.returners.postgres_local_cache&quot;&gt;&lt;code&gt;returners.postgres_local_cache&lt;/code&gt;&lt;/a&gt; to see which module best suits your particular needs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220434e845d96789a4cf60dff59dbe2c9e9d0f7c" translate="yes" xml:space="preserve">
          <source>There are three PostgreSQL returners. Any can function as an external &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/jobs/external_cache.html#external-job-cache&quot;&gt;master job cache&lt;/a&gt;. but each has different features. SaltStack recommends &lt;a href=&quot;salt.returners.pgjsonb#module-salt.returners.pgjsonb&quot;&gt;&lt;code&gt;returners.pgjsonb&lt;/code&gt;&lt;/a&gt; if you are working with a version of PostgreSQL that has the appropriate native binary JSON types. Otherwise, review &lt;a href=&quot;#module-salt.returners.postgres&quot;&gt;&lt;code&gt;returners.postgres&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;salt.returners.postgres_local_cache#module-salt.returners.postgres_local_cache&quot;&gt;&lt;code&gt;returners.postgres_local_cache&lt;/code&gt;&lt;/a&gt; to see which module best suits your particular needs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04200709fe8a3ffe3c646561b809e749bfc0ed42" translate="yes" xml:space="preserve">
          <source>There are three PostgreSQL returners. Any can function as an external &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/jobs/external_cache.html#external-job-cache&quot;&gt;master job cache&lt;/a&gt;. but each has different features. SaltStack recommends &lt;a href=&quot;salt.returners.pgjsonb#module-salt.returners.pgjsonb&quot;&gt;&lt;code&gt;returners.pgjsonb&lt;/code&gt;&lt;/a&gt; if you are working with a version of PostgreSQL that has the appropriate native binary JSON types. Otherwise, review &lt;a href=&quot;salt.returners.postgres#module-salt.returners.postgres&quot;&gt;&lt;code&gt;returners.postgres&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#module-salt.returners.postgres_local_cache&quot;&gt;&lt;code&gt;returners.postgres_local_cache&lt;/code&gt;&lt;/a&gt; to see which module best suits your particular needs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9bb5369f509d61de92e9c77a6fbe4edbbb7228a" translate="yes" xml:space="preserve">
          <source>There are three types of keys stored:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e4bd2161c5feedd85e8496e9461dc4e93fc3d9" translate="yes" xml:space="preserve">
          <source>There are two styles of calling &lt;code&gt;module.run&lt;/code&gt;. &lt;strong&gt;The legacy style will no longer be available starting in the Sodium release.&lt;/strong&gt; To opt-in early to the new style you must add the following to your &lt;code&gt;/etc/salt/minion&lt;/code&gt; config file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2922b8b0c8b486ba0b7be0ba5681c4e9ed4eaee" translate="yes" xml:space="preserve">
          <source>There are two ways of defining the fileserver environment (a.k.a. &lt;code&gt;saltenv&lt;/code&gt;) from which to cache the file. One is to use the &lt;code&gt;saltenv&lt;/code&gt; parameter, and the other is to use a querystring syntax in the &lt;code&gt;salt://&lt;/code&gt; URL. The below two examples are equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0a34ec625d77ae67c5c04e006ca4fd121ff6d6" translate="yes" xml:space="preserve">
          <source>There are two ways of defining the fileserver environment (a.k.a. &lt;code&gt;saltenv&lt;/code&gt;) from which to cache the files. One is to use the &lt;code&gt;saltenv&lt;/code&gt; parameter, and the other is to use a querystring syntax in the &lt;code&gt;salt://&lt;/code&gt; URL. The below two examples are equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd95648786b0e4fc88207e21e81838f0e3590d4c" translate="yes" xml:space="preserve">
          <source>There are two ways of defining the fileserver environment (a.k.a. &lt;code&gt;saltenv&lt;/code&gt;) from which to retrieve the file. One is to use the &lt;code&gt;saltenv&lt;/code&gt; parameter, and the other is to use a querystring syntax in the &lt;code&gt;salt://&lt;/code&gt; URL. The below two examples are equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce45526b1230336f3c04903099a82307657e55c" translate="yes" xml:space="preserve">
          <source>There are two ways to update a VM: &lt;code&gt;replace&lt;/code&gt; the whole template or &lt;code&gt;merge&lt;/code&gt; the new template with the existing one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb3a57beaa1563394f976b8cd4538f170f5aad55" translate="yes" xml:space="preserve">
          <source>There are two ways to update a security group: &lt;code&gt;replace&lt;/code&gt; the whole template or &lt;code&gt;merge&lt;/code&gt; the new template with the existing one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d870e5fe4223760231f6311cd85aede485e41d" translate="yes" xml:space="preserve">
          <source>There are two ways to update a template: &lt;code&gt;replace&lt;/code&gt; the whole template or &lt;code&gt;merge&lt;/code&gt; the new template with the existing one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ddfa29a280d8063a7d580b0ebf26505a9e6a8c" translate="yes" xml:space="preserve">
          <source>There are two ways to update an image: &lt;code&gt;replace&lt;/code&gt; the whole template or &lt;code&gt;merge&lt;/code&gt; the new template with the existing one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5259a979d7907cafa03916e9c8f10caeb33ddc71" translate="yes" xml:space="preserve">
          <source>There is also support for Apache-style &lt;code&gt;htpasswd&lt;/code&gt; and &lt;code&gt;htdigest&lt;/code&gt; files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595b6acee77d5ae51c6428413da3e2ba0f1026fa" translate="yes" xml:space="preserve">
          <source>There is also the option of specifying a dynamic inventory, and generating it on the fly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882307217054c06dd3b0e4992ffc802ae5cadd84" translate="yes" xml:space="preserve">
          <source>There is more documentation about this feature in the &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/states/highstate.html#names-declaration&quot;&gt;Names declaration&lt;/a&gt; section of the &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/states/highstate.html#states-highstate&quot;&gt;Highstate docs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85b962a4171ca24eb8243b176a23480dfa3dbc0" translate="yes" xml:space="preserve">
          <source>There is no need to call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9616af43603ca51082f2ae51e92cc3ebb565ca9f" translate="yes" xml:space="preserve">
          <source>There is no undoing this action. Be &lt;strong&gt;VERY&lt;/strong&gt; careful before running this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adeb84cd204808d419cdc71f6a880fd7d3f2c9fb" translate="yes" xml:space="preserve">
          <source>There is one available filter: dangling=true</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54f0f984aba5f7a093f07f61ba2027c1292aec5" translate="yes" xml:space="preserve">
          <source>There is one extra configuration option for pam. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2e95e023bda4273d0247551ecf47e78555ad11" translate="yes" xml:space="preserve">
          <source>There is one single nesting level, as the output of &lt;code&gt;ntp.stats&lt;/code&gt; is just a list of dictionaries, and this beacon will compare each dictionary from the list with the structure examplified above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5fe73f5f644d6ab3624d7f9e07b99b6e647b85" translate="yes" xml:space="preserve">
          <source>There is, however, a Powershell PowerCLI cmdlet called Add-VDSwitchPhysicalNetworkAdapter that does what we want. I used Onyx (&lt;a href=&quot;https://labs.vmware.com/flings/onyx&quot;&gt;https://labs.vmware.com/flings/onyx&lt;/a&gt;) to sniff the SOAP stream from Powershell to our vSphere server and got this snippet out:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b2ed3d6fcbd4ccc85440e368333c96c1774c68" translate="yes" xml:space="preserve">
          <source>There may be multiple deployments for the API object, each deployment is tagged with a description (i.e. unique label) in pretty printed json format consisting of the following key/values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2d76a518a08217a2e824fb4be51dfa743e57c8" translate="yes" xml:space="preserve">
          <source>These LXC configuration parameters will only have the desired effect if the container is using the LXC execution driver, which has been deprecated for some time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eedd19b79597e0afc8f4ba78e9e5e2e83fc75847" translate="yes" xml:space="preserve">
          <source>These URLs wrap the functionality provided by the &lt;a href=&quot;../../wheel/all/salt.wheel.key#module-salt.wheel.key&quot;&gt;&lt;code&gt;key wheel
module&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd76cc0fc670c90b1cb1dabdb02b53d3ca9740b9" translate="yes" xml:space="preserve">
          <source>These are returned together because the commandline and the targeting interact with the group config (specifically aliases and targeting configuration) so taking care of them together works out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1796efceeecabd2b3db7ba6fcd28be7c2220505b" translate="yes" xml:space="preserve">
          <source>These are specific to each OS. If it does not apply to the execution module for your OS, it is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77962e5900bc5c922c0c273633c5a4e9a4e52e2d" translate="yes" xml:space="preserve">
          <source>These are the directives:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18548b353382410c8797646736abb62b6ad6bcd1" translate="yes" xml:space="preserve">
          <source>These can be set as such from the command line, or in the Salt config as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b062fc60042d54bce8739b4494501276530efc" translate="yes" xml:space="preserve">
          <source>These can be specified using the policy name as displayed in the GUI (case sensitive). Some policies have the same name, but a different location (for example, &quot;Access data sources across domains&quot;). These can be differentiated by the &quot;path&quot; in the GUI (for example, &quot;Windows ComponentsInternet ExplorerInternet Control PanelSecurity PageInternet ZoneAccess data sources across domains&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78829fc281808e19f3e1dc5fd7256e8d3dfd8d06" translate="yes" xml:space="preserve">
          <source>These columns define list grouping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8dff00819f99273b6afeb51940af16524966a53" translate="yes" xml:space="preserve">
          <source>These configuration options are retrieved using &lt;a href=&quot;salt.modules.config#salt.modules.config.get&quot;&gt;&lt;code&gt;config.get&lt;/code&gt;&lt;/a&gt; (click the link for further information).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbc60a8209adc84b5963f78dec47c858e786d34" translate="yes" xml:space="preserve">
          <source>These constructions are also called statements. There are options inside of them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dca0bc0d9fc03ee929e6cbf256a799d6bc9f44e" translate="yes" xml:space="preserve">
          <source>These functions are designed to work with all implementations of Varnish from 3.x onwards</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d839269caea7b203c3306d05dbb8c8b76f76689" translate="yes" xml:space="preserve">
          <source>These functions are not designed to be called directly, but instead from the &lt;a href=&quot;salt.modules.lxc#module-salt.modules.lxc&quot;&gt;&lt;code&gt;lxc&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;salt.modules.nspawn#module-salt.modules.nspawn&quot;&gt;&lt;code&gt;nspawn&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;docker&lt;/code&gt; execution modules. They provide for common logic to be re-used for common actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c965202f9fb6fcf51af6e5198f41fff29b7a7d75" translate="yes" xml:space="preserve">
          <source>These keys will only be present if there were changes, so if the container has no differences the return dict will be empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85adf17705789485db80fcf17e036d0e09eb2230" translate="yes" xml:space="preserve">
          <source>These modules use the Python novaclient and glanceclient libraries, respectively. In order to use this module, the proper salt configuration must also be in place. This can be specified in the master config, the minion config, a set of grains or a set of pillars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c88cd620605001f23b62c11a71d15ac5fc96b0c" translate="yes" xml:space="preserve">
          <source>These policies can be specified using the GUI display name or the key name from the _policy_info class in this module. The GUI display name is also contained in the _policy_info class in this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9146c58f7e5c8e39431fc0e7d6bd41b567b60a99" translate="yes" xml:space="preserve">
          <source>These pools are determined from the aggregated and sorted results of a salt command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71bddb1c256f83bb01c17a4af6d0241d86d0974c" translate="yes" xml:space="preserve">
          <source>These prefixes and the separator can be adjusted using the configuration options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0312a4dbb20556fa25bfc20aebdd1cc3b45ef3b3" translate="yes" xml:space="preserve">
          <source>These settings can be overridden by adding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d76fbb71ef8048379c185ee29ed6d7329c12073b" translate="yes" xml:space="preserve">
          <source>These states manage system installed python packages. Note that pip must be installed for these states to be available, so pip states should include a requisite to a pkg.installed state for the package which provides pip (&lt;code&gt;python-pip&lt;/code&gt; in most cases). Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f500b43496bc911dc806fd135c91f974fe3da80" translate="yes" xml:space="preserve">
          <source>These states manage the installed packages for Haskell using cabal. Note that cabal-install must be installed for these states to be available, so cabal states should include a requisite to a pkg.installed state for the package which provides cabal (&lt;code&gt;cabal-install&lt;/code&gt; in case of Debian based distributions). Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd84eb6e26d4553592795151cff185fcd3d0a0db" translate="yes" xml:space="preserve">
          <source>These states manage the installed packages for composer for PHP. Note that either composer is installed and accessible via a bin directory or you can pass the location of composer in the state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af21f882b6f41067395a10a64604df6b3e2db04c" translate="yes" xml:space="preserve">
          <source>These states manage the installed packages for node.js using the Node Package Manager (npm). Note that npm must be installed for these states to be available, so npm states should include a requisite to a pkg.installed state for the package which provides npm (simply &lt;code&gt;npm&lt;/code&gt; in most cases). Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48140d61703a9905ba3a2594419c340a2150702" translate="yes" xml:space="preserve">
          <source>These states manage the installed packages using Bower. Note that npm, git and bower must be installed for these states to be available, so bower states should include requisites to pkg.installed states for the packages which provide npm and git (simply &lt;code&gt;npm&lt;/code&gt; and &lt;code&gt;git&lt;/code&gt; in most cases), and npm.installed state for the package which provides bower.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dfbee788c738644d9c4799f5676775d56f81da6" translate="yes" xml:space="preserve">
          <source>These states manage the installed pecl extensions. Note that php-pear must be installed for these states to be available, so pecl states should include a requisite to a pkg.installed state for the package which provides pecl (&lt;code&gt;php-pear&lt;/code&gt; in most cases). Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b66e553bc05b18ff827e4a9416a39a8edfa450" translate="yes" xml:space="preserve">
          <source>These states were moved from the &lt;code&gt;docker&lt;/code&gt; state module (formerly called &lt;strong&gt;dockerng&lt;/strong&gt;) in the 2017.7.0 release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ce7acfb9da0797d9d6933bb306b3848e1cd216" translate="yes" xml:space="preserve">
          <source>These states were moved from the &lt;code&gt;docker&lt;/code&gt; state module (formerly called &lt;strong&gt;dockerng&lt;/strong&gt;) in the 2017.7.0 release. When running the &lt;a href=&quot;#salt.states.docker_container.running&quot;&gt;&lt;code&gt;docker_container.running&lt;/code&gt;&lt;/a&gt; state for the first time after upgrading to 2017.7.0, your container(s) may be replaced. The changes may show diffs for certain parameters which say that the old value was an empty string, and the new value is &lt;code&gt;None&lt;/code&gt;. This is due to the fact that in prior releases Salt was passing empty strings for these values when creating the container if they were undefined in the SLS file, where now Salt simply does not pass any arguments not explicitly defined in the SLS file. Subsequent runs of the state should not replace the container if the configuration remains unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aefd415bea8b0c122aedca8725d4172a1e8d148" translate="yes" xml:space="preserve">
          <source>These tokens can used :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d055996d320e10c3550d75579327f65d534c7833" translate="yes" xml:space="preserve">
          <source>These two states are often confused. The important thing to remember about them is that &lt;a href=&quot;#salt.states.cmd.run&quot;&gt;&lt;code&gt;cmd.run&lt;/code&gt;&lt;/a&gt; states are run each time the SLS file that contains them is applied. If it is more desirable to have a command that only runs after some other state changes, then &lt;a href=&quot;#salt.states.cmd.wait&quot;&gt;&lt;code&gt;cmd.wait&lt;/code&gt;&lt;/a&gt; does just that. &lt;a href=&quot;#salt.states.cmd.wait&quot;&gt;&lt;code&gt;cmd.wait&lt;/code&gt;&lt;/a&gt; is designed to &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/states/requisites.html#requisites-watch&quot;&gt;watch&lt;/a&gt; other states, and is executed when the state it is watching changes. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3453776d77c836b10b4a50e81ac13d625cf131" translate="yes" xml:space="preserve">
          <source>Thin wrapper to lxc.init to be used from the saltcloud lxc driver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb3a3216290c1d2b9847b3f75138f9a006d4c94" translate="yes" xml:space="preserve">
          <source>Third</source>
          <target state="translated">Third</target>
        </trans-unit>
        <trans-unit id="7a18c4112a037a53be8355f3a1711e5877586d1b" translate="yes" xml:space="preserve">
          <source>This (boolean) parameter is currently disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152917d7b850c3458e0938935c16efb2a1524161" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/master_tops/index.html#master-tops-system&quot;&gt;master_tops&lt;/a&gt; plugin provides access to the &lt;strong&gt;reclass&lt;/strong&gt; database, such that state information (top data) are retrieved from &lt;strong&gt;reclass&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b1db347b9854adddd70f3bbbeae1fe72796f46" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/master_tops/index.html#master-tops-system&quot;&gt;master_tops&lt;/a&gt; plugin provides access to the &lt;strong&gt;varstack&lt;/strong&gt; hierarchical yaml files, so you can user &lt;strong&gt;varstack&lt;/strong&gt; as a full &lt;a href=&quot;salt.tops.ext_nodes#module-salt.tops.ext_nodes&quot;&gt;&lt;code&gt;external node classifier&lt;/code&gt;&lt;/a&gt; and store state information (top data) in it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a16a52ba4f39970643c16b03276c2b7f227d5b9a" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;ext_pillar&lt;/code&gt; plugin provides access to the &lt;strong&gt;reclass&lt;/strong&gt; database, such that Pillar data for a specific minion are fetched using &lt;strong&gt;reclass&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd165e1aa2650c571f4043714e339bf44beb8926" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;rest_wsgi&lt;/code&gt; module provides a no-frills REST interface for sending commands to the Salt master. There are no dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f514ce94716aec3094060813f17a8cc97ee5f7b" translate="yes" xml:space="preserve">
          <source>This API currently only supports RSA key types. Support for other key types will be added if interest warrants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc3f3daed1e6769bb8aee5aedd9b990bb97d542" translate="yes" xml:space="preserve">
          <source>This Mock class can be configured to return a specific values at specific names, if required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bccfa57ac4abd96f47fac4cf123fb6b1dba091b" translate="yes" xml:space="preserve">
          <source>This REST interface is flexible in what data formats it will accept as well as what formats it will return (e.g., JSON, YAML, urlencoded).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df131c542a28dda8d7b234820ed4d8305b138f0b" translate="yes" xml:space="preserve">
          <source>This REST interface is flexible in what data formats it will accept as well as what formats it will return (e.g., JSON, YAML, x-www-form-urlencoded).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303467afba9da76e3fe6b8149c48a446695edfd9" translate="yes" xml:space="preserve">
          <source>This URL requires authentication however not all external services can be configured to authenticate. For this reason authentication can be selectively disabled for this URL. Follow best practices -- always use SSL, pass a secret key, configure the firewall to only allow traffic from a known source, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2b0fe0b7e1120a75d0ee3b850f5cfb38dbeb56e" translate="yes" xml:space="preserve">
          <source>This allow interaction between Salt and a CouchDB [couchdb.apache.org] database. It uses salt's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453652a08319a4c2f04b220c5516baf7947b4f4d" translate="yes" xml:space="preserve">
          <source>This allows arbitrary IPMI bytes to be issued. This is commonly used for certain vendor specific commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8961d88bb95e9e294d9c7b5c079c771c8a7a752" translate="yes" xml:space="preserve">
          <source>This allows autodoc to do its thing without having oodles of req'd installed libs. This doesn't work with &lt;code&gt;import *&lt;/code&gt; imports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f01f01b0d19aff7fa15b435e7e918afd7e62a9" translate="yes" xml:space="preserve">
          <source>This allows for programmatic use from salt-api, the Reactor, Orchestrate, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f0a1278c9b3ad5d7706efefc1af702b4a8dc4e" translate="yes" xml:space="preserve">
          <source>This allows you to add more explicit state knowing that you are starting from a very well defined state, and that you can audit any change that is not part of your explicit configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db4b63d68a885736070151c83210435c860fa0aa" translate="yes" xml:space="preserve">
          <source>This also allows you to use any number of potential fallback passwords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4391b991f48877f739f7823ecd949529306e2f6e" translate="yes" xml:space="preserve">
          <source>This also removes the salt_id name defined by vagrant.init.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebea1a9e48d36cef629a4aaff2939303f30cfbb" translate="yes" xml:space="preserve">
          <source>This approach uses the &lt;a href=&quot;../../modules/all/salt.modules.slack_notify#module-salt.modules.slack_notify&quot;&gt;&lt;code&gt;slack execution module&lt;/code&gt;&lt;/a&gt; directly on the master, and therefore requires that the master has a slack API key in its configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc012e6bafe2160585fdd3ba43a02074903ac06" translate="yes" xml:space="preserve">
          <source>This argument can also be specified as a list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82ff068d5ce7e7b5494d2891bc354533471161f" translate="yes" xml:space="preserve">
          <source>This argument cannot be used directly on the command line. Instead, it can be passed through the &lt;code&gt;pillar&lt;/code&gt; variable when executing either of the &lt;a href=&quot;../../modules/all/salt.modules.state#salt.modules.state.sls&quot;&gt;&lt;code&gt;state.sls&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;state.apply&lt;/code&gt; (see below for an example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20b0fa12de2f5d12d57aa8fa1c663caf24e8a92" translate="yes" xml:space="preserve">
          <source>This argument does not need to be specified when running in a &lt;a href=&quot;../../proxy/all/salt.proxy.arista_pyeapi#module-salt.proxy.arista_pyeapi&quot;&gt;&lt;code&gt;pyeapi&lt;/code&gt;&lt;/a&gt; Proxy Minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71876c4931e3eeffed778cba44ec6fe7d4b0f86" translate="yes" xml:space="preserve">
          <source>This argument has no affect and is included for consistency with the other sync functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b213e31d2bd2379cbd4024e2aac04c968e21e1" translate="yes" xml:space="preserve">
          <source>This argument is ignored when &lt;code&gt;config_file&lt;/code&gt; is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e46eaaaf3831adece21f060d225519498df40223" translate="yes" xml:space="preserve">
          <source>This argument is ignored when &lt;code&gt;config_path&lt;/code&gt; is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8e8c0a3b0ac03445640bf1d3b55c04952c9d45" translate="yes" xml:space="preserve">
          <source>This argument is ignored when either &lt;code&gt;-d&lt;/code&gt; or &lt;code&gt;--delete&lt;/code&gt; is present in the &lt;code&gt;opts&lt;/code&gt; passed to this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce137ad897182c3ad8255b3b0317b01e5ca4a84" translate="yes" xml:space="preserve">
          <source>This argument is optional when using the options in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ea4b313612eb00c2856d03281f5149a5fcb95a" translate="yes" xml:space="preserve">
          <source>This argument must contain the full filename entry from the checksum file, as this argument is meant to disambiguate matches for multiple files that have the same basename. So, in the example above, simply using &lt;code&gt;foo.txt&lt;/code&gt; would not match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7b27a7964b46e3875ecea5401c480b775cd6ac" translate="yes" xml:space="preserve">
          <source>This argument only works on files which are already tracked by the git repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fcecb56ddc7a188424b3aa0ba694196a877e266" translate="yes" xml:space="preserve">
          <source>This argument should not be set to &lt;code&gt;True&lt;/code&gt; if a mix of git and non-git repo definitions are being used, as it will result in the non-git repo definitions being removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeab0e7edbe7cb1a2d971bbf5cdb43ef5922b93e" translate="yes" xml:space="preserve">
          <source>This argument specifies a number of top-level directories to strip from the results. This is similar to the paths that would be extracted if &lt;code&gt;--strip-components&lt;/code&gt; (or &lt;code&gt;--strip&lt;/code&gt;) were used when extracting tar archives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b610359202220b6d97c96735e5a2831e211cd038" translate="yes" xml:space="preserve">
          <source>This argument uses the same syntax as its counterpart in the &lt;a href=&quot;salt.states.file#salt.states.file.managed&quot;&gt;&lt;code&gt;file.managed&lt;/code&gt;&lt;/a&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb1af37f3aff8069246ee9479022b2fa87025d8" translate="yes" xml:space="preserve">
          <source>This argument will be passed through to &lt;a href=&quot;../../modules/all/salt.modules.archive#salt.modules.archive.list_&quot;&gt;&lt;code&gt;archive.list&lt;/code&gt;&lt;/a&gt; as its &lt;code&gt;options&lt;/code&gt; argument, to allow it to successfully list the archive's contents. For the vast majority of archives, this argument should not need to be used, it should only be needed in cases where the state fails with an error stating that the archive's contents could not be listed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835ee9b721025ade0424ca101dcc8baac0631b03" translate="yes" xml:space="preserve">
          <source>This auth module should be used with caution. It was initially designed to work with a frontal that takes care of authentication (for example kerberos) and places the shared secret in the HTTP headers to the salt-api call. This salt-api call should really be done on localhost to avoid someone eavesdropping on the shared secret.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809cc93f924abd0ecade5274c89ba7e7cd6690f0" translate="yes" xml:space="preserve">
          <source>This backend assumes a standard svn layout with directories for &lt;code&gt;branches&lt;/code&gt;, &lt;code&gt;tags&lt;/code&gt;, and &lt;code&gt;trunk&lt;/code&gt;, at the repository root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f101a49787bea09b9b94f8bf4fc6df86eccbadf" translate="yes" xml:space="preserve">
          <source>This backend exposes directories in S3 buckets as Salt environments. To enable this backend, add &lt;code&gt;s3fs&lt;/code&gt; to the &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/master.html#std:conf_master-fileserver_backend&quot;&gt;&lt;code&gt;fileserver_backend&lt;/code&gt;&lt;/a&gt; option in the Master config file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befa908c22234c7dcc712ac224dea322839fdc01" translate="yes" xml:space="preserve">
          <source>This backup will be overwritten each time &lt;code&gt;sed&lt;/code&gt; / &lt;code&gt;comment&lt;/code&gt; / &lt;code&gt;uncomment&lt;/code&gt; is called. Meaning the backup will only be useful after the first invocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9064b82d88c53e3a26a66519fca902372c07a1" translate="yes" xml:space="preserve">
          <source>This beacon's events include an &lt;code&gt;action&lt;/code&gt; key which will be either &lt;code&gt;login&lt;/code&gt; or &lt;code&gt;logout&lt;/code&gt; depending on the event type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2897f653f145e14908f862823981a69395112a15" translate="yes" xml:space="preserve">
          <source>This beacons config will return all sshd jornal entries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2036aa9f6fcb91da0c8bd00cc8368e261566ef70" translate="yes" xml:space="preserve">
          <source>This behaviour makes it possible to execute in environments without superuser access available, e.g. Amazon RDS for PostgreSQL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df805c5029fe0ec26396f8102ac14e1dbac215c5" translate="yes" xml:space="preserve">
          <source>This call is offen slow and not cached!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8886a977c6018e3c3939309593d2c16d73640601" translate="yes" xml:space="preserve">
          <source>This can also be the name of a package as listed in &lt;code&gt;dism.installed_packages&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49eef81a7872f23e0f4fed66ced7e7ba36599352" translate="yes" xml:space="preserve">
          <source>This can be a more detailed description of the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca00fa80b36ed37249fcc6a6dd494130b912793a" translate="yes" xml:space="preserve">
          <source>This can be an LDAP connection object returned by a previous call to &lt;a href=&quot;#salt.modules.ldap3.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt; (in which case the argument is simply returned), &lt;code&gt;None&lt;/code&gt; (in which case an empty dict is used), or a dict with the following keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af22c5aeda2bca1a39f52e3e20819308faa5f373" translate="yes" xml:space="preserve">
          <source>This can be done using the following reactor SLS:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c343630e4cbb50e5ee2b77243145c2a6cab7f0c5" translate="yes" xml:space="preserve">
          <source>This can be either a file which contains a source hash string for the source, or a source hash string. The source hash string is the hash algorithm followed by the hash of the file: &lt;code&gt;md5=e138491e9d5b97023cea823fe17bac22&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be09ddf1704fc73461105af494cacdf695fc3b56" translate="yes" xml:space="preserve">
          <source>This can be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a688f64240f59ce7d396030161d9b23de86ebbe" translate="yes" xml:space="preserve">
          <source>This can be overridden when executing a command, using the &lt;code&gt;--out-type&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16a01d7fec775aac2e8907ff4e199dacb7db461" translate="yes" xml:space="preserve">
          <source>This can be specified using the absolute path to the file, or using one of the following URL schemes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6543dfe8a22377579653f52ac9aac9c69c491dea" translate="yes" xml:space="preserve">
          <source>This can be used either:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a1d8188e12dd241777fd578c5c4d4ad8e6f11a" translate="yes" xml:space="preserve">
          <source>This can be useful at the CLI but is frequently useful when scripting combining path variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b3e41002016f070e914d6f04fd2aa0d029ed86" translate="yes" xml:space="preserve">
          <source>This can be useful at the CLI but is frequently useful when scripting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24549ca0154078495fd40e32e512f40666a75eac" translate="yes" xml:space="preserve">
          <source>This can be useful if you need to use salt with a proxy for an s3 compatible storage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20d0bd1f4c941d8617a9994647a5e301afdb628" translate="yes" xml:space="preserve">
          <source>This can be useful when constructing Salt Formulas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd97d93bb15e2e9720766397bf214f879aac51f" translate="yes" xml:space="preserve">
          <source>This caused a number of annoyances. One such annoyance was the need to know beforehand a path that would result from the extraction of the archive, and setting &lt;code&gt;if_missing&lt;/code&gt; to that directory, like so:</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
