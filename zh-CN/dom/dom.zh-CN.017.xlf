<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="653ffd7b824e8c7d12f40ca29e15f78dc22fd4c9" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'DOMImplementation' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842522d319c8e34db6845f314876b2fbd41f34b6" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'DOMImplementation.createDocument' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ca672f1d481dff84916bf7f7f5b6e2ccbcc0ea" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'DOMImplementation.createDocumentType' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7c912f781fe57410f3b7f8df44d06a5d165690" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'DOMImplementationList' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace367c4c96d6cdbd0d47d62b28a9c94d5c7808a" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'DOMString' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24b0f2466029509a88e704b362c59d7707e3efc" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Document' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8818d17dccf22f81a63f5eece34167aed60adac" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Document.createAttribute()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa2c4525049eaffa54572958da3b12304554828" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Document.documentElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447d8abca2c163d025a918cc76ffc022f16e9ae3" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'DocumentFragment' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8b89ccc43d8acb893d05517dc0a32fc1fae466" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'DocumentType' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1e1c7f2c12105b3fe0028af1a5e9d9b4f82364" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Element' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd74b94653a947c73d688e02175a58e6d62470da" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Element.attributes' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e37591f4fb84b548140d67690628c51b08b074" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Element.getElementsByTagName()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00019fdc1c2278853697261b77aa3fbc637a6e02" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Element.hasAttribute()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8319b815833d59cfa97be28887835d94dd8605" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'NameList' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8f541c94b51a6042ede94e8a99406ffbce11fb" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'NamedNodeMap' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b006530d26b7f03ef1391006dab34e92c6bb10" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Node' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07fb32848d63098f6c13e738c2bfc95471751b38" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Node.appendChild()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ebac370c3f4e2b0b6b79026d5bea1693a13c63" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Node.childNodes' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9cb954804d2cfea112186b8c4696c6502dfa34" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Node.cloneNode()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4afcd27e1f09e25902d89410151c04afec66b059" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Node.compareDocumentPosition()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28963f9056bcb2512085ab861d6fa9fc124587ae" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Node.firstChild' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6748b7e850b222ca0bd22205ee5bfbde008a5ac8" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Node.insertBefore' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c529f212d1e59c2f249c40e9426794de6f059f" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Node.isSameNode()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3907ee68013878471a6aca5866958c555804328f" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Node.isSupported()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd74b30aec803004925b21ac5475febaa70d9937" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Node.lastChild' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3073048a4a68a2ec6b48318250a16937db987ee7" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Node.localName' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09cc87d8e01a0c6e0a0c50560c6cc5028b64217" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Node.namespaceURI' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e278da27a9582563ee333a836f41e8dfc2dea2" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Node.nodeType' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5e2b7dc3f17dd8a8ced93d4c229c4e655a7de6" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Node.prefix' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3726d1ccac1d9dbb7bc8c3472ec31fd6e9352898" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Node.previousSibling' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d7d085436a7d9d686dc89e3c0b2aac785936e7" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Node.textContent' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d76482112ff188c636c43b72ebc90cc2701b6fb" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'NodeList' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6cdaf39797977089aa57e1c7d7609d9df4e808" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Text' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1e5d1625367188890bfbe01773485983f30094" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Text.splitText' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f4529d988095bf2671fa558c88ae076c8fe4a7" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'Text.wholeText' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7839b1117d855d290a845182649aded6b5e5a583" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'documentURI' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d2628b52ef11426751e1879078a55aeb81fcfd" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'getElementById' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a631562c1a0d9518dfdb5bfdfe5fec31fb690c" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Core Specification&lt;br/&gt;&lt;small&gt;The definition of 'hasAttributes()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f5eb9ebf28b1bc84d9c3e2c125fb6e20be5a43" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'CompositionEvent' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c20c54a89aa5c6bf45a045b842cee39b104b94f" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'CompositionEvent()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f5569bd4e466184b4e181ad2b20db0f8e0f264" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'EventTarget' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ec726f67eb3bcf3407cac6111faef397e534e0" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'FocusEvent' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd8e47a3c8b8f34754c74591c36617bd7295e4b" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'FocusEvent()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c602f1abca36827f96b0fc342839857b443703" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'FocusEvent.relatedTarget' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38fa73c1017a62742dfa65dc5735e6ea181b74d6" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'InputEvent.isComposing' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eced4eda2be4cd0442b9f44b11d65fccf9ee563a" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'KeyboardEvent()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09985186cd5b4560eb9f58263bea17a4606b22c2" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'KeyboardEvent.altkey' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3684d3394b8374e0bf1af7c231c6bd7be2939b" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'KeyboardEvent.ctrlKey' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0389f9d0e56a230a7c5e1f6f2c350629109bd7ea" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'KeyboardEvent.isComposing' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b523d71e0904bd1538ba5147b75599a0a6978900" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'KeyboardEvent.key' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5f2d03e2693c79b3f1eaf2c1176954fdd33c89" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'KeyboardEvent.location' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9921b61f3d1e3d73b5ae5edf5b444e7a3fe555a7" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'KeyboardEvent.metaKey' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c07413ce27de17f769fc6ebfb9d7958572b6f5f6" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'KeyboardEvent.repeat' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4334658dd5a1d01c86804f735208e5072f1a6baf" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'KeyboardEvent.shiftKey' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c86cfda860303e4ed681bc4fd99fb245d8334c7" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'MouseEvent' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a523bf55352aed90891c48464df504fae16ea2" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'MouseEvent()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ecdf660b86a8422864267605414e70e9784fd1f" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'MouseEvent.altkey' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6417ec55695267b6653edc477a4e6286f4997bfb" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'MouseEvent.button' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c969b99e0a5a7dc833ff8a0426de538a79f92ae3" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'MouseEvent.buttons' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b865381665930c6db7eb0be75182ccebf69934e" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'MouseEvent.clientX' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a7f31a1bb9e7a9c490566dd8c6c82b24ea4d7f" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'MouseEvent.clientY' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1afdaffd09d3a0424d747ad9a5e5f33c8c1550b" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'MouseEvent.ctrlKey' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea652b3640c8fa34b25c055953123c3ab595ff8" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'MouseEvent.metaKey' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e429f2e256764c39515a3f62cb218651fb93c6fd" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'MouseEvent.relatedTarget' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714a6b5294135ff5e8f55bff223bc093a585538b" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'MouseEvent.screenX' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53bbc1a8982b91d2fc7bbb66f834f74a7fb9647" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'MouseEvent.screenY' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d372bbc6f17fcedd16a377194a9ac650693a2c" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'MouseEvent.shiftKey' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b597bc2bf493d899afdf0f602904cec0965cadf" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'Trusted events' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1388ca627625e058cd63162aa15a3a77075166" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'UIEvent' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599572fa510acdc1f3bbb5722452a60cf98c1482" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'UIEvent()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273548cbc9e48657b9399cb2749b968fd33804d4" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'UIEvent.detail' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f96f8296960ba1b399d3d1e1b8a769caa802517" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'WheelEvent' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840e027e2e730c3a5bb791df868aeb5524999d06" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'WheelEvent()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a78b905383ea33b59d750186a28cd08e5323be" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'WheelEvent.deltaMode' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e033309148cfe9885539d74aaa109a1d86c6d287" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'WheelEvent.deltaX' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51c35b1f23c5a846677feb571aaad0540a46815" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'WheelEvent.deltaY' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e69a13fe379f4d4b76fb775b1639a1d9adfdd05" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'WheelEvent.deltaZ' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589a97af7816868121195c9a605ec50c6f88fe29" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'current event target' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bac886c28fe92180b4a70f40f4e166896167623" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'data' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415d0553b83e2d779355b8336083226722d30132" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'getModifierState()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22fc14512e8d35237bf6ae0bd9bec813e8ba9223" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 Events Specification&lt;br/&gt;&lt;small&gt;The definition of 'onscroll' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83fbb171943e8b00fc19e0b466d42b54ed481d3b" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 XPath Specification&lt;br/&gt;&lt;small&gt;The definition of 'Document.evaluate' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d275f8ff99355b00dc12d7f0cfb064217788899" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 3 XPath Specification&lt;br/&gt;&lt;small&gt;The definition of 'XPathEvaluator' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4227cb01923bcb268e49414f3b657dd5f03baf5" translate="yes" xml:space="preserve">
          <source>Document Object Model: Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec1b18bdd391180fa9df2008e22c3fe5219bdf1" translate="yes" xml:space="preserve">
          <source>Document Object Model: Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e6125f02cd166708787a43a6368be33f8d272b" translate="yes" xml:space="preserve">
          <source>Document Object Model: How to create a DOM tree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d30711c52e09026bbbab2a17ed3485c0cb91542" translate="yes" xml:space="preserve">
          <source>Document Object Model: Introduction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7276bdd62257de1fc37965feae22dee2f87b647" translate="yes" xml:space="preserve">
          <source>Document Object Model: Locating DOM elements using selectors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f602692f37263f031426959069913168985bb44" translate="yes" xml:space="preserve">
          <source>Document Object Model: Traversing an HTML table with JavaScript and DOM Interfaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9cfc253c1d65e3c2284df8496469462224549cb" translate="yes" xml:space="preserve">
          <source>Document Object Model: Using the W3C DOM Level 1 Core</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed19e4721c978bd79b9bbd1e9527cfcdd04e123" translate="yes" xml:space="preserve">
          <source>Document Object Model: Whitespace in the DOM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed30eb4e85f6252ccafffc7bf12b14f709c75f5b" translate="yes" xml:space="preserve">
          <source>Document.createRange()</source>
          <target state="translated">Document.createRange()</target>
        </trans-unit>
        <trans-unit id="3efe3cdccfc92307308665352a4731afaca82058" translate="yes" xml:space="preserve">
          <source>DocumentFragment</source>
          <target state="translated">DocumentFragment</target>
        </trans-unit>
        <trans-unit id="6ed991f3c3d08c7b85516a64e1453832a973255a" translate="yes" xml:space="preserve">
          <source>DocumentFragment.constructor</source>
          <target state="translated">DocumentFragment.constructor</target>
        </trans-unit>
        <trans-unit id="e867192bd0b42d87d6e554e5c87d8b8052a36d6e" translate="yes" xml:space="preserve">
          <source>DocumentFragment.querySelector</source>
          <target state="translated">DocumentFragment.querySelector</target>
        </trans-unit>
        <trans-unit id="77c7f7be2eaec2ef971d467f05eb64386e61929e" translate="yes" xml:space="preserve">
          <source>DocumentFragment.querySelectorAll</source>
          <target state="translated">DocumentFragment.querySelectorAll</target>
        </trans-unit>
        <trans-unit id="88f69bef493fba89ab946f2e087d0caf9b90e0d2" translate="yes" xml:space="preserve">
          <source>DocumentOrShadowRoot</source>
          <target state="translated">DocumentOrShadowRoot</target>
        </trans-unit>
        <trans-unit id="1e1d189be7b58a3b6f6eeb0414c8bf053f26f9d1" translate="yes" xml:space="preserve">
          <source>DocumentOrShadowRoot.activeElement</source>
          <target state="translated">DocumentOrShadowRoot.activeElement</target>
        </trans-unit>
        <trans-unit id="1ba4733fe83b3423a59a557e64124271dcbb1fdb" translate="yes" xml:space="preserve">
          <source>DocumentOrShadowRoot.caretPositionFromPoint</source>
          <target state="translated">DocumentOrShadowRoot.caretPositionFromPoint</target>
        </trans-unit>
        <trans-unit id="da8ad1152341fe6983ce3954664f6b7f0632437b" translate="yes" xml:space="preserve">
          <source>DocumentOrShadowRoot.elementFromPoint</source>
          <target state="translated">DocumentOrShadowRoot.elementFromPoint</target>
        </trans-unit>
        <trans-unit id="7c26cc2d8975c24f6520fe6a7cf6281b6aac57b1" translate="yes" xml:space="preserve">
          <source>DocumentOrShadowRoot.elementsFromPoint</source>
          <target state="translated">DocumentOrShadowRoot.elementsFromPoint</target>
        </trans-unit>
        <trans-unit id="f4f160e6260c9a6696323b5ce87bbb98b3a2fd98" translate="yes" xml:space="preserve">
          <source>DocumentOrShadowRoot.fullscreenElement</source>
          <target state="translated">DocumentOrShadowRoot.fullscreenElement</target>
        </trans-unit>
        <trans-unit id="ae00dce3c5e872d50949d00deda4a145ed8f14a1" translate="yes" xml:space="preserve">
          <source>DocumentOrShadowRoot.getSelection</source>
          <target state="translated">DocumentOrShadowRoot.getSelection</target>
        </trans-unit>
        <trans-unit id="1e42d3b8640ee66d158dd7a054e70f4a4257879f" translate="yes" xml:space="preserve">
          <source>DocumentOrShadowRoot.pointerLockElement</source>
          <target state="translated">DocumentOrShadowRoot.pointerLockElement</target>
        </trans-unit>
        <trans-unit id="7f61d6e943cbab0b02aa5315d0fee29fd0946703" translate="yes" xml:space="preserve">
          <source>DocumentOrShadowRoot.styleSheets</source>
          <target state="translated">DocumentOrShadowRoot.styleSheets</target>
        </trans-unit>
        <trans-unit id="b3b76acad82310997507e47ab6daa67b9edaf3c6" translate="yes" xml:space="preserve">
          <source>DocumentTimeline</source>
          <target state="translated">DocumentTimeline</target>
        </trans-unit>
        <trans-unit id="efd474b44613791ba96f4a9734d52abba1862666" translate="yes" xml:space="preserve">
          <source>DocumentTimeline.constructor</source>
          <target state="translated">DocumentTimeline.constructor</target>
        </trans-unit>
        <trans-unit id="6a21429d57f8871b1fffedfe4b441dcca436246b" translate="yes" xml:space="preserve">
          <source>DocumentType</source>
          <target state="translated">DocumentType</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="bd6338f00e4665be529e81073145231e6b1323f9" translate="yes" xml:space="preserve">
          <source>Documentation for Firefox's new storage access policy for blocking tracking cookies includes &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Privacy/Storage_access_policy#Storage_access_grants&quot;&gt;a detailed description&lt;/a&gt; of the scope of storage access grants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee100861ef939a7eaeecb49dbc4981386271be36" translate="yes" xml:space="preserve">
          <source>Documenting SDP is well outside the scope of this documentation; however, there are a few things worth noting here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ebba06c5df9ad0425f30233ba59f51a2f6e37e" translate="yes" xml:space="preserve">
          <source>Does &lt;em&gt;not&lt;/em&gt; offer to receive RTP data and will not do so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfbb2a2d7879f6469a839cb47cc47e79cb102ee" translate="yes" xml:space="preserve">
          <source>Does &lt;em&gt;not&lt;/em&gt; offer to send RTP data, and will not do so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9dbc95570ddc2c6aafe3f184137c5e40507ab1" translate="yes" xml:space="preserve">
          <source>Does not accept parameters. Supports only &lt;code&gt;utf-8&lt;/code&gt; encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5014aecfc7e51497e3059428647939ab2f7c6317" translate="yes" xml:space="preserve">
          <source>Doesn't conform to the DOM spec for XUL and XHTML documents: &lt;code&gt;localName&lt;/code&gt; and &lt;code&gt;namespaceURI&lt;/code&gt; are not set to null on the created element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fdb81b94fdbe9ffd55ae2983f27437971a93952" translate="yes" xml:space="preserve">
          <source>Doesn't fire the &lt;code&gt;visibilitychange&lt;/code&gt; event when the browser window is minimized, nor when &lt;code&gt;hidden&lt;/code&gt; is set to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5b954a1a046d1e941eccc92e6bd5cf4b2f7047" translate="yes" xml:space="preserve">
          <source>Doesn't tile the image. It's used only once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93463670b7bf43db98cc6de236a90a8f7921753" translate="yes" xml:space="preserve">
          <source>Doing operation after all fonts are loaded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4efc84bfed8bee25989310ba058bbcc39cf0fe" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t scale images in &lt;code&gt;drawImage&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee20f78b3a8a6c03d339c2109355742eb5eadf11" translate="yes" xml:space="preserve">
          <source>Don't run your app from file://</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5c9b5a849c1df0ef3f1deca7274ad12f910acd" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;console.log(obj);&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029de2a8512f121d13da37c74b1ddb3034ad9b9e" translate="yes" xml:space="preserve">
          <source>Dottoro Web Reference - XPathResult object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35850ca60ecd6e76782474e3bc6292d8d3a6c41" translate="yes" xml:space="preserve">
          <source>Double the amount of samples before applying the shaping curve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5c3eafb2a6fab1f0d485bd24e020a7bf7031cc" translate="yes" xml:space="preserve">
          <source>DoubleRange</source>
          <target state="translated">DoubleRange</target>
        </trans-unit>
        <trans-unit id="a479c9c34e878d07b4d67a73a48f432ad7dc53c8" translate="yes" xml:space="preserve">
          <source>Download</source>
          <target state="translated">Download</target>
        </trans-unit>
        <trans-unit id="c408dfec44908051e07b0303878340764c41600e" translate="yes" xml:space="preserve">
          <source>Download API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a55327721c79da96845e56f9e120b6d70c143d2f" translate="yes" xml:space="preserve">
          <source>Download a copy of the &lt;a href=&quot;https://github.com/webrtc/adapter/tree/master/release&quot;&gt;latest version of adapter.js&lt;/a&gt; from GitHub.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be075b23a40c3c847743c6b8f32fd4f6cc0aed5e" translate="yes" xml:space="preserve">
          <source>Download the &lt;a href=&quot;https://mdn.mozillademos.org/files/12638/sw101.png&quot;&gt;Service Workers 101 cheatsheet&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7cb35a2377a9996762c3a301cd156b7763be8c4" translate="yes" xml:space="preserve">
          <source>Download, install and activate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f433b1bf268bb1bcdcb4ea5fb9cd0a2f5748995" translate="yes" xml:space="preserve">
          <source>Downloading; &lt;code&gt;responseText&lt;/code&gt; holds partial data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d33e22acfcb9ecddb4a85f10607dc4ff49e23c" translate="yes" xml:space="preserve">
          <source>Draft</source>
          <target state="translated">Draft</target>
        </trans-unit>
        <trans-unit id="534e5c63dafad3d08e7282636d0d8dc914c3b2a9" translate="yes" xml:space="preserve">
          <source>Draft of proposed API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9275c119e7172fd823bba0c0da819cbb4e74f806" translate="yes" xml:space="preserve">
          <source>Draft specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079539e985818edeb2f04258bef21f4796b861d0" translate="yes" xml:space="preserve">
          <source>Drag &amp;amp; Drop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c863d3e16a0464ca8467622e8104316f2994be6" translate="yes" xml:space="preserve">
          <source>Drag Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf2fb1ede2beabe68f4eda8cd124d051e81c1986" translate="yes" xml:space="preserve">
          <source>Drag Effects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec85e07254e33572c8e500ff1fdafce3c6331d3" translate="yes" xml:space="preserve">
          <source>Drag Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180b50e9f5644ed65b879b5fcc73378f5df30b33" translate="yes" xml:space="preserve">
          <source>Drag Operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0a416e673ad15556a596d79c2e129b5ef987cb" translate="yes" xml:space="preserve">
          <source>Drag and Drop demo link</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9f5acf64ebec737641ef57c2cbd4ffed92e975" translate="yes" xml:space="preserve">
          <source>Drag and Drop interoperability data from CanIUse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e1911f34770c1a56ac8a6e3d1558df8e8fa707" translate="yes" xml:space="preserve">
          <source>Drag and drop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d522f15a8dcbd5eadb7d55f326b04e26acc219" translate="yes" xml:space="preserve">
          <source>Drag end</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec85efcfe6524379a1643dfa42fc9c0938f4df7" translate="yes" xml:space="preserve">
          <source>DragEvent</source>
          <target state="translated">DragEvent</target>
        </trans-unit>
        <trans-unit id="32f8bb096b13d63721a1add03c46d7b2e9d6a280" translate="yes" xml:space="preserve">
          <source>DragEvent.constructor</source>
          <target state="translated">DragEvent.constructor</target>
        </trans-unit>
        <trans-unit id="fb5ddc74a0826ad6c77e243c57ed5a06f311943f" translate="yes" xml:space="preserve">
          <source>DragEvent.dataTransfer</source>
          <target state="translated">DragEvent.dataTransfer</target>
        </trans-unit>
        <trans-unit id="ebbb3725bd63821313413057d779f2fa19d8fe76" translate="yes" xml:space="preserve">
          <source>Dragging Custom Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39cca7585b19cae195e509ec69c53f5a4d681191" translate="yes" xml:space="preserve">
          <source>Dragging Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986d195d28264d0317b07b5866bb34c210be6189" translate="yes" xml:space="preserve">
          <source>Dragging HTML and XML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a72a8156fdd169dddf26514a5f05d9db1d08c0" translate="yes" xml:space="preserve">
          <source>Dragging Images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb5b0da1b1f3724c0798518bbf4c3cdaa6bb650" translate="yes" xml:space="preserve">
          <source>Dragging Links</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666755b50e407eb74fafadd3bc5bef5995d6af28" translate="yes" xml:space="preserve">
          <source>Dragging Nodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afdf9419fc270d09c4bdbf939e312ef5e615a1dc" translate="yes" xml:space="preserve">
          <source>Dragging Non-String Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc0c923da03b8de8ec0954df0908529019939c2" translate="yes" xml:space="preserve">
          <source>Dragging Text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01903cf7afbe6f1a6abc8695729e720b388e4df3" translate="yes" xml:space="preserve">
          <source>Dragging and Dropping Multiple Items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a809f1507b7ca0e305dc194340624337edd6b798" translate="yes" xml:space="preserve">
          <source>Dragging and dropping files; All browsers: &lt;a href=&quot;https://jsbin.com/hiqasek/edit?html,js,output&quot;&gt;https://jsbin.com/hiqasek/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d1abc261e05db79b5cfd86c4573bdf3e9f9c6f" translate="yes" xml:space="preserve">
          <source>Dragging and dropping files; Firefox only: &lt;a href=&quot;http://jsfiddle.net/9C2EF/&quot;&gt;http://jsfiddle.net/9C2EF/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e612a6254acfa037369509c049880f798b5391" translate="yes" xml:space="preserve">
          <source>Dragging files to an operating system folder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29877a0d4101fe36d5be4e157bc4fbf3467eace7" translate="yes" xml:space="preserve">
          <source>Dragging text in textboxes and selections on web pages is done automatically, so you do not need to handle dragging yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e468d823846171d69ac1820570ae0ffa447e7b2" translate="yes" xml:space="preserve">
          <source>Draw buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="495cd48a5555d0212511f2929b7514521273a75f" translate="yes" xml:space="preserve">
          <source>Draw buffers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5feaba86b16885d23716e8f5fa7ba7022d7e12" translate="yes" xml:space="preserve">
          <source>Draw the image on the canvas using the &lt;code&gt;drawImage()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623ffa704c2f9e0a547a46584b8275224226f42e" translate="yes" xml:space="preserve">
          <source>Drawing DOM objects into a canvas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd781c495ebe4c4ea00bcd2825ce4df1231b0fd" translate="yes" xml:space="preserve">
          <source>Drawing a ball</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f1535e731369b4bc28c23d465ee82a45cd5564" translate="yes" xml:space="preserve">
          <source>Drawing a full circle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0693a62f2d49fe9c603334b7aac2efeebd25ac37" translate="yes" xml:space="preserve">
          <source>Drawing a full ellipse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0001e9a91afe9b3409dc55124c0bdca771f7cc1d" translate="yes" xml:space="preserve">
          <source>Drawing a rectangle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637576d7622bd702de721bcfa11eda370c7b96b5" translate="yes" xml:space="preserve">
          <source>Drawing a spectrum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f3352c3feeb5afb4b8fa3a94df3d3fd45168719" translate="yes" xml:space="preserve">
          <source>Drawing a straight line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960e82ea4bab1bd211afd783a8bac403c44ab542" translate="yes" xml:space="preserve">
          <source>Drawing a triangle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b96886a5659deeb39b4627915dbde13820ea88d" translate="yes" xml:space="preserve">
          <source>Drawing an ad's timer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390ad9c097edf7e97b200263b180f1989a33abce" translate="yes" xml:space="preserve">
          <source>Drawing an image to the canvas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01aec6db525df845d8a78995f09d5c0a7d2b1f71" translate="yes" xml:space="preserve">
          <source>Drawing and animating the scene</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bef0c23edc0a68372d3663e66006c1a307f1b66" translate="yes" xml:space="preserve">
          <source>Drawing as the pointers move</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd885e65457e58ef3a7efc1d6b7cc40546756343" translate="yes" xml:space="preserve">
          <source>Drawing as the touches move</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936fdbb7802e804df9ca0e2d75ece44ec69461fe" translate="yes" xml:space="preserve">
          <source>Drawing buffers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b3cc9254c03dc37d15e3fefde22270747a9f040" translate="yes" xml:space="preserve">
          <source>Drawing buffers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d803d93d67f988dcde4561f4f7c12319e5b1c8de" translate="yes" xml:space="preserve">
          <source>Drawing connected lines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec3dc404c88e97d12d3afbc6aa5a4d5f3ae513c" translate="yes" xml:space="preserve">
          <source>Drawing filled text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb85ed37dc4ec4d914cd7c4cf0b89de49a776ae6" translate="yes" xml:space="preserve">
          <source>Drawing images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47beeff5adfc36f53bb1b1c3e962531bdc3c09d" translate="yes" xml:space="preserve">
          <source>Drawing paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8263f4c0f2a5df1ddf3983b39cc49eaaf1538f14" translate="yes" xml:space="preserve">
          <source>Drawing rectangles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801ee12d43ca4551ac63aa5c61242afc7c5641cb" translate="yes" xml:space="preserve">
          <source>Drawing shapes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe225d2764cbe5c36b54a737ee5e5f00b0fa2e5d" translate="yes" xml:space="preserve">
          <source>Drawing text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a4193cbb98af206d7e403d44808f4d7b701df7" translate="yes" xml:space="preserve">
          <source>Drawing text outlines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c228e493a24d86ca5470dd3cec245787bfcf8a" translate="yes" xml:space="preserve">
          <source>Drawing the cube</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efbec4971c0e383b4dec0aa6ecf56e4412e8f5c6" translate="yes" xml:space="preserve">
          <source>Drawing the scene</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f3fc5d34414d666c8f32b10692aa5839ea569d7" translate="yes" xml:space="preserve">
          <source>Drawing the textured cube</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4cd71307e0d7050d65bcb468adc4633b0da7da" translate="yes" xml:space="preserve">
          <source>Drawing using the colors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da395024094c981e3c384fdb4a01ebda494a1c71" translate="yes" xml:space="preserve">
          <source>Draws (fills) a given text at the given (x,y) position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a70006bb02c7140e148adf7e7cd9375d8122b6" translate="yes" xml:space="preserve">
          <source>Draws (strokes) a given text at the given &lt;em&gt;(x, y) &lt;/em&gt;position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49a8f42917886dc3b246e751e8a2f664ed638ae" translate="yes" xml:space="preserve">
          <source>Draws a cubic B&amp;eacute;zier curve from the current pen position to the end point specified by &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, using the control points specified by (&lt;code&gt;cp1x&lt;/code&gt;, &lt;code&gt;cp1y&lt;/code&gt;) and (cp2x, cp2y).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9111d26067679852dbe993ea3123a3b08f1d2fdc" translate="yes" xml:space="preserve">
          <source>Draws a filled rectangle at &lt;em&gt;(x, y) &lt;/em&gt;position whose size is determined by &lt;em&gt;width&lt;/em&gt; and &lt;em&gt;height&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c8d056f567ebd38692bfa8280c74bb32260210" translate="yes" xml:space="preserve">
          <source>Draws a filled rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeeedca03f5a40b855c4f0455f4856bd3f71ee5d" translate="yes" xml:space="preserve">
          <source>Draws a line from the current drawing position to the position specified by &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f5c17a5cfe31c9cc9b5a76b4617c0982632e24" translate="yes" xml:space="preserve">
          <source>Draws a quadratic B&amp;eacute;zier curve from the current pen position to the end point specified by &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, using the control point specified by &lt;code&gt;cp1x&lt;/code&gt; and &lt;code&gt;cp1y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e91df3661dbd57e90ed095b0f624998d6bb2ea6" translate="yes" xml:space="preserve">
          <source>Draws a rectangle whose top-left corner is specified by (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;) with the specified &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea137528c99519817a36cfb1d2dfe82fe508362" translate="yes" xml:space="preserve">
          <source>Draws a rectangular outline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96dccf61bfef85062ed6f21953042ee40fdf7ea" translate="yes" xml:space="preserve">
          <source>Draws a solid shape by filling the path's content area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5cc039b736a3e2e79bba4c32018f3ac4822fdef" translate="yes" xml:space="preserve">
          <source>Draws an arc which is centered at &lt;em&gt;(x, y)&lt;/em&gt; position with radius&lt;em&gt; r&lt;/em&gt; starting at &lt;em&gt;startAngle&lt;/em&gt; and ending at &lt;em&gt;endAngle&lt;/em&gt; going in the given direction indicated by &lt;em&gt;anticlockwise&lt;/em&gt; (defaulting to clockwise).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00caa4e7d3dd4a5d571ab490bc246bc15ed4ab95" translate="yes" xml:space="preserve">
          <source>Draws an arc with the given control points and radius, connected to the previous point by a straight line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef4ad99ca0ab9a09c0e1720b3dc25f369ae98c8" translate="yes" xml:space="preserve">
          <source>Draws the &lt;code&gt;CanvasImageSource&lt;/code&gt; specified by the &lt;code&gt;image&lt;/code&gt; parameter at the coordinates (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361ce07e0046b8d59b8f03a2320a053bc691a986" translate="yes" xml:space="preserve">
          <source>Draws the shape by stroking its outline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab08608b076dc689f210152184a4fd57f12ee0cb" translate="yes" xml:space="preserve">
          <source>Draws the specified image. This method is available in multiple formats, providing a great deal of flexibility in its use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4f507d600c1fec9fae0c0515018ec374d4337a" translate="yes" xml:space="preserve">
          <source>Drop Feedback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc363092820cd1073eaf73be0a8ed8d5e47ac295" translate="yes" xml:space="preserve">
          <source>Due to &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=312019&quot;&gt;bug 312019&lt;/a&gt;, this method does not work with dynamically assigned namespaces (i.e., those set with &lt;a href=&quot;prefix&quot;&gt;Node.prefix&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74764c1f6ad93fc6c8f403366d849112495de10" translate="yes" xml:space="preserve">
          <source>Due to &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=312019&quot;&gt;bug 312019&lt;/a&gt;, this method does not work with dynamically assigned namespaces, that is those set with the &lt;a href=&quot;prefix&quot;&gt;&lt;code&gt;Node.prefix&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96dc32cf58cc1edac9573547f5d1907eba1b3be" translate="yes" xml:space="preserve">
          <source>Due to an unfortunate technical error that occurred the week of June 17, 2013, we lost the history of this tutorial, including attributions to all past contributors to its content. We apologize for this, and hope you'll forgive this unfortunate mishap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9afda877d7ab4853a772d675d54f608a69630bff" translate="yes" xml:space="preserve">
          <source>Due to compatibility problems (see below), it is safest to rely on only properties &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, and &lt;code&gt;bottom&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045df79127f77e9882db360abe8a0c04c6839df8" translate="yes" xml:space="preserve">
          <source>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314b76a1d135832851d8f4943f4fe14276edd0e9" translate="yes" xml:space="preserve">
          <source>During LED for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba67ef21c3859e08c55ac4f375aafd1168cf9aa" translate="yes" xml:space="preserve">
          <source>During a &lt;code&gt;.retry()&lt;/code&gt;, it allows the developer to be notified if the requested user's details change. This allows you to revalidate any requested user data (e.g., the phone number or the email address).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396128b07a6f472f09cf09586c4215ed33b72d4c" translate="yes" xml:space="preserve">
          <source>During a CSS transition, &lt;code&gt;getComputedStyle&lt;/code&gt; returns the original property value in Firefox, but the final property value in WebKit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ecde6629e17334d1ded16744183a585c60a26d7" translate="yes" xml:space="preserve">
          <source>During a drag operation, a listener for the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; or &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; events can check the &lt;a href=&quot;../datatransfer/effectallowed&quot;&gt;&lt;code&gt;effectAllowed&lt;/code&gt;&lt;/a&gt; property to see which operations are permitted. A related property, &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt;, should be set within one of these events to specify which single operation should be performed. Valid values for &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; are &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;copy&lt;/code&gt;, &lt;code&gt;move&lt;/code&gt;, or &lt;code&gt;link&lt;/code&gt;. The combination values are not used for this property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8a179603a64cb5485a719384f19315b0892bd3" translate="yes" xml:space="preserve">
          <source>During negotiation, your app will likely receive many candidates which you'll deliver to the ICE agent in this way, allowing it to build up a list of potential connection methods. This is covered in more detail in the articles &lt;a href=&quot;../webrtc_api/connectivity&quot;&gt;WebRTC connectivity&lt;/a&gt; and &lt;a href=&quot;../webrtc_api/signaling_and_video_calling&quot;&gt;Signaling and video calling&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129f8956d2991ef0a80783b744f08cf881a03d4b" translate="yes" xml:space="preserve">
          <source>During the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event, you should retrieve that data that was dropped from the event and insert it at the drop location. You can use the &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; property to determine which drag operation was desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca39916408d067cfa3a0f103d018335d74c1ae1e" translate="yes" xml:space="preserve">
          <source>During the drag operation, the drag effects may be modified to indicate that certain effects are allowed at certain locations. If allowed, a drop may occur at that location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7177166f3c16d4a010a05cca48a228a6e1922ff1" translate="yes" xml:space="preserve">
          <source>Dynamic Adaptive Streaming over HTTP (DASH) is a protocol for specifying how adaptive content should be fetched. It is effectively a layer built on top of MSE for building adaptive bitrate streaming clients. While there are other protocols available (such as HTTP Live Streaming (HLS)), DASH has the most platform support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f7452a92d07edbe6d985250ac255c7684d4d35" translate="yes" xml:space="preserve">
          <source>Dynamic range refers to ratio between the brightest and darkest parts of the scene. Low dynamic ranges are for example JPEG format images which won't exceed 255:1, or CRT monitors which won't exceed 100:1. An HDR image stores pixel values that span the whole tonal range of real-world scenes (100,000:1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb349238264fe840f6bf96eb282988b0da6ea86" translate="yes" xml:space="preserve">
          <source>Dynamically adding a change listener</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd6a5ce18ae433cbcd626cfa4bbc4c1b6fb36097" translate="yes" xml:space="preserve">
          <source>Dynamically created files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39caf8589b82f8eb6a21423471b8d6db7a5a097b" translate="yes" xml:space="preserve">
          <source>Dynamically creating a DOM tree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a252a9088a0141fc8e8b8093c95b434bd1e3e8e" translate="yes" xml:space="preserve">
          <source>Dynamically importing scripts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afaceedac4267165a8c082d93639d1d469a253b" translate="yes" xml:space="preserve">
          <source>Dynamically resizes window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd2d2aa89ca6c98883e3d5d3bbe69d1ab52ca30" translate="yes" xml:space="preserve">
          <source>DynamicsCompressorNode</source>
          <target state="translated">DynamicsCompressorNode</target>
        </trans-unit>
        <trans-unit id="3a618598bad1628fd990287c3049fd284b68d4f4" translate="yes" xml:space="preserve">
          <source>DynamicsCompressorNode.attack</source>
          <target state="translated">DynamicsCompressorNode.attack</target>
        </trans-unit>
        <trans-unit id="1805250fb70d4d809bf57b7e3f5d44c97c48a305" translate="yes" xml:space="preserve">
          <source>DynamicsCompressorNode.constructor</source>
          <target state="translated">DynamicsCompressorNode.constructor</target>
        </trans-unit>
        <trans-unit id="21950861c12b0d5fe101d651a48ce889ac2d96b7" translate="yes" xml:space="preserve">
          <source>DynamicsCompressorNode.knee</source>
          <target state="translated">DynamicsCompressorNode.knee</target>
        </trans-unit>
        <trans-unit id="243dfe0a053421624a97482f856ce00a445a726b" translate="yes" xml:space="preserve">
          <source>DynamicsCompressorNode.ratio</source>
          <target state="translated">DynamicsCompressorNode.ratio</target>
        </trans-unit>
        <trans-unit id="2a73e9f4dc5f9c916dc799a5cf22a6a16ca6626f" translate="yes" xml:space="preserve">
          <source>DynamicsCompressorNode.reduction</source>
          <target state="translated">DynamicsCompressorNode.reduction</target>
        </trans-unit>
        <trans-unit id="a0b854462b618af57a14bba88643263d86933b91" translate="yes" xml:space="preserve">
          <source>DynamicsCompressorNode.release</source>
          <target state="translated">DynamicsCompressorNode.release</target>
        </trans-unit>
        <trans-unit id="d13643ef40caf00aeec542ab2f8a9a56bc301f7a" translate="yes" xml:space="preserve">
          <source>DynamicsCompressorNode.threshold</source>
          <target state="translated">DynamicsCompressorNode.threshold</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="a6baba535a0bb272dfc65d9b8ec783c03dab77c1" translate="yes" xml:space="preserve">
          <source>E4X (ECMAScript for XML)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc604777adb22ae457a5473c397202e00689e23" translate="yes" xml:space="preserve">
          <source>EMPTY</source>
          <target state="translated">EMPTY</target>
        </trans-unit>
        <trans-unit id="042b890a506cb1f86b057af9f2065c60f0543326" translate="yes" xml:space="preserve">
          <source>ESC</source>
          <target state="translated">ESC</target>
        </trans-unit>
        <trans-unit id="1eab7a2dd868dede1f9ef150150f0537636b7604" translate="yes" xml:space="preserve">
          <source>EXT blend minmax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753ac481dae230103109302af353d7b2e93bb246" translate="yes" xml:space="preserve">
          <source>EXT color buffer float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916ee9cf5901d43fec7ab84f91b0518cdd7a06fa" translate="yes" xml:space="preserve">
          <source>EXT color buffer half float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b919c842a4f386480c139894b9632537f60427a1" translate="yes" xml:space="preserve">
          <source>EXT disjoint timer query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2622600cfa6c2933c99f200a12715c770afb869" translate="yes" xml:space="preserve">
          <source>EXT frag depth</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac9ef33211724eeaf0bd87e0625718976de433e" translate="yes" xml:space="preserve">
          <source>EXT sRGB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd737188f124cb24fa25d521228163d179d32bd" translate="yes" xml:space="preserve">
          <source>EXT shader texture lod</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914c6ad178895b6b556269444bf06939f2404dee" translate="yes" xml:space="preserve">
          <source>EXT texture filter anisotropic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f383cdecc8764a244c627bb90046ad71f569f92" translate="yes" xml:space="preserve">
          <source>EXT_: Extensions that mirror other OpenGL ES or OpenGL API extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10420ff7fa269ade8ed422581f054d4ef3bbfec8" translate="yes" xml:space="preserve">
          <source>EXT_blend_minmax&lt;br/&gt;&lt;small&gt;The definition of 'EXT_blend_minmax' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d311884bbe19b71579b185a0a5f311498320e4e4" translate="yes" xml:space="preserve">
          <source>EXT_color_buffer_float&lt;br/&gt;&lt;small&gt;The definition of 'EXT_color_buffer_float' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c622ed953ba58c4510bb0130551a4738de341e1" translate="yes" xml:space="preserve">
          <source>EXT_color_buffer_half_float&lt;br/&gt;&lt;small&gt;The definition of 'EXT_color_buffer_half_float' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3013029d4cf381c853509a1778910e0ae5c291" translate="yes" xml:space="preserve">
          <source>EXT_disjoint_timer_query&lt;br/&gt;&lt;small&gt;The definition of 'EXT_disjoint_timer_query' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc25b178acdd7d9dc9b9b0fa2a8e3804f17fe438" translate="yes" xml:space="preserve">
          <source>EXT_disjoint_timer_query&lt;br/&gt;&lt;small&gt;The definition of 'GLuint64EXT' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdefe85b0f707293a04babe9446812b11ba46386" translate="yes" xml:space="preserve">
          <source>EXT_frag_depth&lt;br/&gt;&lt;small&gt;The definition of 'EXT_frag_depth' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77b91543b39b449c7322208bbea3da98768ea7c" translate="yes" xml:space="preserve">
          <source>EXT_sRGB&lt;br/&gt;&lt;small&gt;The definition of 'EXT_sRGB' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995455cccbfc4d4818750bad78e016fccb604629" translate="yes" xml:space="preserve">
          <source>EXT_shader_texture_lod&lt;br/&gt;&lt;small&gt;The definition of 'EXT_shader_texture_lod' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf109f2ddaaf6d63dccad888b4a43aab9a3b638" translate="yes" xml:space="preserve">
          <source>EXT_texture_filter_anisotropic&lt;br/&gt;&lt;small&gt;The definition of 'EXT_texture_filter_anisotropic' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705caf29f5e714587d23f38f13dda6338891dd52" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; can therefore have up to a theoretical maximum of 65,534 data channels on it, although the actual maximum may vary from browser to browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05048881d77c4daf883249e763cc9cc1df35ca3c" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; has methods which provide access to the list of RTP transports that service the peer connection. These correspond to the following three types of transport supported by &lt;code&gt;RTCPeerConnection&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc42244d08cf605210c8fcad45ea09c9d2700e9d" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;audionode&quot;&gt;&lt;code&gt;AudioNode&lt;/code&gt;&lt;/a&gt; defines which of its parameters are &lt;em&gt;a-rate&lt;/em&gt; or &lt;em&gt;k-rate&lt;/em&gt; in the spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fcd50a7b825df08d1ab5534b41f0a32b59b515a" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; object contains an &lt;a href=&quot;datatransfer/items&quot;&gt;&lt;code&gt;items&lt;/code&gt;&lt;/a&gt; property which is a &lt;a href=&quot;datatransferitemlist&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;datatransferitem&quot;&gt;&lt;code&gt;DataTransferItem&lt;/code&gt;&lt;/a&gt; objects. Each &lt;a href=&quot;datatransferitem&quot;&gt;&lt;code&gt;DataTransferItem&lt;/code&gt;&lt;/a&gt; object represents a single &lt;em&gt;drag item&lt;/em&gt; and each item has a &lt;a href=&quot;datatransferitem/kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; property which is the &lt;em&gt;kind&lt;/em&gt; of data (either &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;file&lt;/code&gt;) and a &lt;a href=&quot;datatransferitem/type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; property which is the data item's type (i.e. MIME type). The &lt;a href=&quot;datatransferitem&quot;&gt;&lt;code&gt;DataTransferItem&lt;/code&gt;&lt;/a&gt; object also has methods to get the drag item's data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d4b1de8fcae3bd15515bef8f4260f2d9410493" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;dragevent&quot;&gt;&lt;code&gt;drag event&lt;/code&gt;&lt;/a&gt; has a &lt;a href=&quot;dragevent/datatransfer&quot;&gt;&lt;code&gt;dataTransfer&lt;/code&gt;&lt;/a&gt; property that &lt;em&gt;holds&lt;/em&gt; the event's data. This property (which is a &lt;a href=&quot;datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; object) also has methods to &lt;em&gt;manage&lt;/em&gt; drag data. The &lt;a href=&quot;datatransfer/setdata&quot;&gt;&lt;code&gt;setData()&lt;/code&gt;&lt;/a&gt; method is used to add an item to the drag data, as shown in the following example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead965e3930c1bcb37706ff15eb06712eceb7cd2" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt; media section describes one bidirectional SRTP (&quot;Secure Real Time Protocol&quot;) stream (excepting the media section for &lt;a href=&quot;rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt;, if present). This pairing of send and receive SRTP streams is significant for some applications, so &lt;code&gt;RTCRtpTransceiver&lt;/code&gt; is used to represent this pairing, along with other important state from the media section. Each non-disabled SRTP media section is always represented by exactly one transceiver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efbe837cc530c4397607653e55665658963f44f9" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;AudioNode&lt;/code&gt; has inputs and outputs, and multiple audio nodes are connected to build a &lt;em&gt;processing graph&lt;/em&gt;. This graph is contained in an &lt;a href=&quot;audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt;, and each audio node can only belong to one audio context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b413c5eb5a14c26539a9b5ab19b2a6304284cfb" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;AudioParam&lt;/code&gt; has a list of events, initially empty, that define when and how values change. When this list is not empty, changes using the &lt;code&gt;AudioParam.value&lt;/code&gt; attributes are ignored. This list of events allows us to schedule changes that have to happen at very precise times, using arbitrary timelime-based automation curves. The time used is the one defined in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BaseAudioContext/currentTime&quot;&gt;&lt;code&gt;AudioContext.currentTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a12d13c6a33b8ae05303c6eeab3bcd884533bcb" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;CSSRule&lt;/code&gt; can be accessed as &lt;code&gt;&lt;var&gt;rules&lt;/var&gt;.item(&lt;var&gt;index&lt;/var&gt;),&lt;/code&gt; or simply &lt;code&gt;&lt;var&gt;rules&lt;/var&gt;[&lt;var&gt;index&lt;/var&gt;]&lt;/code&gt;, where &lt;code&gt;&lt;var&gt;rules&lt;/var&gt;&lt;/code&gt; is an object implementing the &lt;code&gt;CSSRuleList&lt;/code&gt; interface (such as &lt;code&gt;&lt;a href=&quot;cssstylesheet&quot;&gt;CSSStylesheet&lt;/a&gt;.cssRules&lt;/code&gt;), and &lt;code&gt;&lt;var&gt;index&lt;/var&gt;&lt;/code&gt; is the 0-based index of the rule, in the order as it appears in the style sheet CSS. The number of rules in the list is &lt;code&gt;&lt;var&gt;rules&lt;/var&gt;.length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fe255a2391e10555e250af8b2ea04c1b9d1744" translate="yes" xml:space="preserve">
          <source>Each ICE candidate is sent to the other peer by sending a JSON message of type &lt;code&gt;&quot;new-ice-candidate&quot;&lt;/code&gt; over the signaling server to the remote peer. Each candidate message include these fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3235596090cbbe38cf65b811871f387a9c66970" translate="yes" xml:space="preserve">
          <source>Each ICE message suggests a communication protocol (TCP or UDP), IP address, port number, connection type (for example, whether the specified IP is the peer itself or a relay server), along with other information needed to link the two computers together. This includes NAT or other networking complexity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e524a280b8ed52d90878a9cd148ff00c05fdf0d2" translate="yes" xml:space="preserve">
          <source>Each article is contained in an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article&quot;&gt;&lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;&lt;/a&gt; element, styled like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d84c2c9fc9eed25c857b78d8730f458df7522d" translate="yes" xml:space="preserve">
          <source>Each article is given a unique ID number; this variable tracks the next ID to use, starting with 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a749d934428bb7abf62fbf153234aba1772caee" translate="yes" xml:space="preserve">
          <source>Each audio channel on the track requires sampleSize bits. That means that a given sample actually uses (&lt;code&gt;sampleSize&lt;/code&gt;/8)*&lt;a href=&quot;channelcount&quot;&gt;&lt;code&gt;channelCount&lt;/code&gt;&lt;/a&gt; bytes of data. For example, 16-bit stereo audio requires (16/8)*2 or 4 bytes per sample.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f334f13063b281c6164778110a988d535facc529" translate="yes" xml:space="preserve">
          <source>Each button that can be pressed is represented by a given number (see below). If more than one button is pressed, the value of the buttons is combined to produce a new number. For example, if the secondary (&lt;code&gt;2&lt;/code&gt;) and auxilary (&lt;code&gt;4&lt;/code&gt;) buttons are pressed together, the value is &lt;code&gt;6&lt;/code&gt; (i.e. &lt;code&gt;2 +&amp;nbsp;4&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01773266a66cbe39b4bf0ee9eb4e526ff5c51a38" translate="yes" xml:space="preserve">
          <source>Each call of &lt;code&gt;lineTo()&lt;/code&gt; (and similar methods) automatically adds to the current sub-path, which means that all the lines will all be stroked or filled together. This example draws a letter 'M' with a single contiguous line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d27894023ab36201f13024e3f481257c48eaa6" translate="yes" xml:space="preserve">
          <source>Each cue timing contains five components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b6cd51a66699f91a56bae3d6422f9b4c7b2cbf" translate="yes" xml:space="preserve">
          <source>Each data frame (from the client to the server or vice-versa) follows this same format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88eca8139674721b1afc403ba2d3069de591c06" translate="yes" xml:space="preserve">
          <source>Each exception has a &lt;strong&gt;name&lt;/strong&gt;, which is a short &quot;CamelCase&quot; style string identifying the error or abnormal condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d783de81a764b418b11c2d94b488088d9d34de" translate="yes" xml:space="preserve">
          <source>Each fragment receives the interpolated color based on its position relative to the vertex positions instead of a fixed value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58c1fd4fe280331cd3bc503c9f1266ffe5eaeca" translate="yes" xml:space="preserve">
          <source>Each image has the CSS class &lt;code&gt;obj&lt;/code&gt; added to it, making it easy to find in the DOM tree. We also add a &lt;code&gt;file&lt;/code&gt; attribute to each image specifying the &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; for the image; this will let us fetch the images for actual upload later. We use &lt;a href=&quot;../node/appendchild&quot;&gt;&lt;code&gt;Node.appendChild()&lt;/code&gt;&lt;/a&gt; to add the new thumbnail to the preview area of our document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73d7f33dcc178d5342057907c663e0896997ffd" translate="yes" xml:space="preserve">
          <source>Each input and output has a given amount of &lt;em&gt;channels&lt;/em&gt;. For example, mono audio has one channel, while stereo audio has two channels. The Web Audio API will up-mix or down-mix the number of channels as required; check the Web Audio spec for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="143a0b6cd36c936d42abefc0c20a079ee284c756" translate="yes" xml:space="preserve">
          <source>Each input or output is composed of one or more audio &lt;strong&gt;channels, &lt;/strong&gt;which together represent a specific audio layout. Any discrete channel structure is supported, including &lt;em&gt;mono&lt;/em&gt;, &lt;em&gt;stereo&lt;/em&gt;, &lt;em&gt;quad&lt;/em&gt;, &lt;em&gt;5.1&lt;/em&gt;, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c5a689d80a3d88fb455fd6f114c6d241233cab1" translate="yes" xml:space="preserve">
          <source>Each item in the window.frames pseudo-array represents the &lt;a href=&quot;../window&quot;&gt;window&lt;/a&gt; object corresponding to the given &lt;a href=&quot;https://developer.mozilla.org/en/HTML/Element/frame&quot;&gt;&amp;lt;frame&amp;gt;&lt;/a&gt;'s or &lt;a href=&quot;https://developer.mozilla.org/en/HTML/Element/iframe&quot;&gt;&amp;lt;iframe&amp;gt;&lt;/a&gt;'s content, not the (i)frame DOM element (i.e., &lt;code&gt;window.frames[0]&lt;/code&gt; is the same thing as &lt;code&gt;document.getElementsByTagName(&quot;iframe&quot;)[0].contentWindow&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a273dc8b0ffab3dbfbb2c795713acaa68b1bd0" translate="yes" xml:space="preserve">
          <source>Each line is terminated by both carriage return and line feed characters (&lt;code&gt;&quot;\r\n&quot;&lt;/code&gt;). These are essentially delimiters separating each of the headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bea9c28aa2ac381ef1c7a2d804c8cf766737097" translate="yes" xml:space="preserve">
          <source>Each member of the &lt;code&gt;RTCIceCandidateInit&lt;/code&gt; object is initialized to the value of the property by the same name from &lt;a href=&quot;../rtcicecandidateinit&quot;&gt;&lt;code&gt;RTCIceCandidateInit&lt;/code&gt;&lt;/a&gt;. This includes the &lt;a href=&quot;candidate&quot;&gt;&lt;code&gt;candidate&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sdpmid&quot;&gt;&lt;code&gt;sdpMid&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sdpmlineindex&quot;&gt;&lt;code&gt;sdpMLineIndex&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;usernamefragment&quot;&gt;&lt;code&gt;usernameFragment&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e58d581bbdd125fe307b34f65e466c96802589b" translate="yes" xml:space="preserve">
          <source>Each message consists of one or more lines of text listing the fields for that message. Each field is represented by the field name, followed by a colon, followed by the text data for that field's value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe7a2d81233aeb61ee29e45728fca786ef89d1a" translate="yes" xml:space="preserve">
          <source>Each message received has some combination of the following fields, one per line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d007d2ae3c64231227053c515dd016845fd74949" translate="yes" xml:space="preserve">
          <source>Each node is stopped by calling its &lt;a href=&quot;../audioscheduledsourcenode/stop&quot;&gt;&lt;code&gt;ConstantSourceNode.stop()&lt;/code&gt;&lt;/a&gt; method, then &lt;code&gt;playing&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7e587a17caebe578e92427969df1547d47d1a8" translate="yes" xml:space="preserve">
          <source>Each object in &lt;code&gt;iceServers&lt;/code&gt; contains at least a &lt;code&gt;urls&lt;/code&gt; field providing URLs at which the specified server can be reached. It may also provide &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;credential&lt;/code&gt; values to allow authentication to take place, if needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26c726fef70abc9cdc0f6716afac496846e3fbf" translate="yes" xml:space="preserve">
          <source>Each of &lt;code&gt;createOffer()&lt;/code&gt; and &lt;code&gt;createAnswer()&lt;/code&gt; use &lt;code&gt;RTCOfferAnswerOptions&lt;/code&gt; as the base type for their &lt;code&gt;options&lt;/code&gt; parameter's dictionary. &lt;code&gt;createOffer()&lt;/code&gt; uses &lt;a href=&quot;rtcofferoptions&quot;&gt;&lt;code&gt;RTCOfferOptions&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;createAnswer()&lt;/code&gt; uses &lt;a href=&quot;rtcansweroptions&quot;&gt;&lt;code&gt;RTCAnswerOptions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552ac6352b5dea2675ad05e80cbf66afca250634" translate="yes" xml:space="preserve">
          <source>Each of the three oscillators is set up the same way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b35d764201930f0efc47d8481541ec1da4e812" translate="yes" xml:space="preserve">
          <source>Each of these pulls the next argument after the format string off the parameter list. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70da65a197fd555916f52adeb4778278a17b4f89" translate="yes" xml:space="preserve">
          <source>Each of these three functions takes the same parameters. &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; specify the position on the canvas (relative to the origin) of the top-left corner of the rectangle. &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; provide the rectangle's size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21cb294bfdc5557804c890931189076143ab7667" translate="yes" xml:space="preserve">
          <source>Each of this interface's methods and properties has a reference page, and each reference page has an example of its usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ecfea69ce02fb346041570263a0fc0c4c6eef7" translate="yes" xml:space="preserve">
          <source>Each peer connects to an agreed-upon signaling server, such as a WebSocket server they both know how to exchange messages with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9cc09a16fe2ff4eb1999949fb11f9ab39b9a1c" translate="yes" xml:space="preserve">
          <source>Each peer creates an &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; object representing their end of the WebRTC session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81049bb9cef8b5206ffea38f25a81ced651b8ba" translate="yes" xml:space="preserve">
          <source>Each peer establishes a handler for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; events, which handles sending those candidates to the other peer over the signaling channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fc0dad143a2aa3dfb23b4c2cb2a402246d5ac7" translate="yes" xml:space="preserve">
          <source>Each peer establishes a handler for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; event, which is received when the remote peer adds a track to the stream. This code should connect the tracks to its consumer, such as a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d158b413b70f51532f333a9986a75c969aa358d" translate="yes" xml:space="preserve">
          <source>Each peer sends to the other peer a candidate for each possible transport configuration that it believes might be viable for the media being exchanged. At some point, the two peers agree that a given candidate is a good choice and they open the connection and begin to share media. It's important to note, however, that ICE negotiation does &lt;em&gt;not&lt;/em&gt; stop once media is flowing. Instead, candidates may still keep being exchanged after the conversation has begun, either while trying to find a better connection method, or simply because they were already in transport when the peers successfully established their connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac544afe797dbb8aa467ea249b74fa8ed18852a" translate="yes" xml:space="preserve">
          <source>Each peer tells the signaling server that they want to join the same WebRTC session (identified by the token established in step 4).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dae268d199df3b3507618c7e212c018207e8a36" translate="yes" xml:space="preserve">
          <source>Each peer, then, keeps two descriptions on hand: the &lt;strong&gt;local description&lt;/strong&gt;, describing itself, and the &lt;strong&gt;remote description&lt;/strong&gt;, describing the other end of the call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f189c107130beb028544d0299d724ca2677b78" translate="yes" xml:space="preserve">
          <source>Each presentation connection is represented by a &lt;a href=&quot;presentationconnection&quot;&gt;PresentationConnection&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9304b8e5eefb0d3c560ea80d4e0a5a3d6b8a0580" translate="yes" xml:space="preserve">
          <source>Each received event causes our &lt;code&gt;EventSource&lt;/code&gt; object's &lt;code&gt;onmessage&lt;/code&gt; event handler to be run. It, in turn, creates a new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li&quot;&gt;&lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;&lt;/a&gt; element and writes the message's data into it, then appends the new element to the list element already in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a5f32b3966e73bec7ef4e6a4574b9ee989619b" translate="yes" xml:space="preserve">
          <source>Each record has a value, which could include anything that can be expressed in JavaScript, including &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Boolean&quot;&gt;boolean&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number&quot;&gt;number&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String&quot;&gt;string&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date&quot;&gt;date&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object&quot;&gt;object&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array&quot;&gt;array&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/RegExp&quot;&gt;regexp&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/undefined&quot;&gt;undefined&lt;/a&gt;, and null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a264e10af95fb5271bd123d0ad0cb63e13f47d" translate="yes" xml:space="preserve">
          <source>Each side sends candidates to the other as it receives them from their local ICE layer; there is no taking turns or batching of candidates. As soon as the two peers agree upon one candidate that they can both use to exchange the media, media begins to flow. Each peer continues to send candidates until it runs out of options, even after the media has already begun to flow. This is done in hopes of identifying even better options than the one initially selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714aa38f6d9df7ebc9ade1470fdb95b1367a4936" translate="yes" xml:space="preserve">
          <source>Each storage type represents a separate repository. Here's the actual mapping to directories under a user's Firefox profile (other browsers may differ slightly):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe43e86f6f1bee96479d2b0d6a38b0178157402" translate="yes" xml:space="preserve">
          <source>Each subscription is unique to a service worker. The endpoint for the subscription is a unique &lt;a href=&quot;http://www.w3.org/TR/capability-urls/&quot;&gt;capability URL&lt;/a&gt;: knowledge of the endpoint is all that is necessary to send a message to your application. The endpoint URL therefore needs to be kept secret, or other applications might be able to send push messages to your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e43161bb3c6b5c245ed3181d63da5576936237" translate="yes" xml:space="preserve">
          <source>Each tab is limited to 6 audio contexts in Chrome; attempting to create more will throw a &lt;code&gt;DOMException&lt;/code&gt;. For details see &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/AudioContext/AudioContext#Per-tab_audio_context_limitation_in_Chrome&quot;&gt;Per-tab audio context limitation in Chrome&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6515abc2608bccece45ca41b13807028662cd4f6" translate="yes" xml:space="preserve">
          <source>Each task is then enqueued by calling &lt;code&gt;enqueueTask()&lt;/code&gt;, passing in &lt;code&gt;logTaskHandler&lt;/code&gt;&lt;code&gt;()&lt;/code&gt; as the handler function and the &lt;code&gt;taskData&lt;/code&gt; object as the object to pass into the function when it's called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4ae27f575658ae579d728471199378de6428d3" translate="yes" xml:space="preserve">
          <source>Each time a DTMF tone finishes playing, a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/tonechange&quot;&gt;tonechange&lt;/a&gt;&lt;/code&gt; event is delivered to &lt;code&gt;callerPC&lt;/code&gt;. The event listener for these is implemented as the &lt;code&gt;handleToneChangeEvent()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7acb033f095a8db1cefeb17f6a6a75bd4c2992" translate="yes" xml:space="preserve">
          <source>Each time a chunk of media data is finished being recorded, it's delivered to consumers in &lt;a href=&quot;blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; form using a &lt;a href=&quot;blobevent&quot;&gt;&lt;code&gt;BlobEvent&lt;/code&gt;&lt;/a&gt; of type &lt;code&gt;dataavailable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46165f9c790d027962f200d0f5b2aeecde9500b2" translate="yes" xml:space="preserve">
          <source>Each time a shape is rendered, the vertex shader is run for each vertex in the shape. Its job is to transform the input vertex from its original coordinate system into the &lt;strong&gt;clipspace&lt;/strong&gt; coordinate system used by WebGL, in which each axis has a range from -1.0 to 1.0, regardless of aspect ratio, actual size, or any other factors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b05d20586d1d02056838e6bdb995cc8ddc7462" translate="yes" xml:space="preserve">
          <source>Each time a tone is sent, the &lt;code&gt;RTCPeerConnection&lt;/code&gt; receives a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/tonechange&quot;&gt;tonechange&lt;/a&gt;&lt;/code&gt; event with a &lt;a href=&quot;../rtcdtmftonechangeevent/tone&quot;&gt;&lt;code&gt;tone&lt;/code&gt;&lt;/a&gt; property specifying which tone finished playing, which is an opportunity to update interface elements, for example. When the tone buffer is empty, indicating that all the tones have been sent, a &lt;code&gt;tonechange&lt;/code&gt; event with its &lt;code&gt;tone&lt;/code&gt; property set to &quot;&quot; (an empty string) is delivered to the connection object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f5b844f23441605f30ee7ad12f03dffef1608f9" translate="yes" xml:space="preserve">
          <source>Each time is provided as an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in milliseconds since the UNIX epoch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345d27b0ff812852a7ea41dc233f686902d8239f" translate="yes" xml:space="preserve">
          <source>Each time one or more fingers moves, a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; event is delivered, resulting in our &lt;code&gt;handleMove()&lt;/code&gt; function being called. Its responsibility in this example is to update the cached touch information and to draw a line from the previous position to the current position of each touch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be33e3be96687e1ae7515ba7d34a3dfe3e2ea803" translate="yes" xml:space="preserve">
          <source>Each time one or more pointers moves, a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointermove&quot;&gt;pointermove&lt;/a&gt;&lt;/code&gt; event is delivered, resulting in our &lt;code&gt;handleMove()&lt;/code&gt; function being called. Its responsibility in this example is to update the cached touch information and to draw a line from the previous position to the current position of each touch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5fa880f9ff8b71b5849e7219172225cf69e0e8" translate="yes" xml:space="preserve">
          <source>Each time the box reaches the opposing corner, it stops, with the button reflecting which iteration number is up next, until you click the button to run the next iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cde9742fa2a7cd24af40988dfc62cac6fe5e196" translate="yes" xml:space="preserve">
          <source>Each time you call &lt;code&gt;createObjectURL()&lt;/code&gt;, a new object URL is created, even if you've already created one for the same object. Each of these must be released by calling &lt;a href=&quot;revokeobjecturl&quot;&gt;&lt;code&gt;URL.revokeObjectURL()&lt;/code&gt;&lt;/a&gt; when you no longer need them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5775909e8c6f4ab2ca3b4ce3ef4466a1526b9b3" translate="yes" xml:space="preserve">
          <source>Each time you call &lt;code&gt;setRequestHeader()&lt;/code&gt; after the first time you call it, the specified text is appended to the end of the existing header's content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd48c81decc8cdde7665acab951068a6924b0cf2" translate="yes" xml:space="preserve">
          <source>Each time you call &lt;code&gt;stop()&lt;/code&gt; on the same node, the specified time replaces any previously-scheduled stop time that hasn't occurred yet. If the node has already stopped, this method has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db5ec61d018ee5db8c5a7ccfbdb95edab4a0221" translate="yes" xml:space="preserve">
          <source>Each time your signaling code calls &lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt;&lt;code&gt;RTCPeerConnection.addIceCandidate()&lt;/code&gt;&lt;/a&gt; to add a received candidate to the ICE session, the ICE agent places it in the list returned by this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bcb628d53fdd7d04a3bf0b4d550f0813eb5ac12" translate="yes" xml:space="preserve">
          <source>Each track is represented by a &lt;a href=&quot;../audiotrack&quot;&gt;&lt;code&gt;AudioTrack&lt;/code&gt;&lt;/a&gt; object which provides information about the track.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9f35d4911e3dd4e90c2fd2238b17ee675cc007" translate="yes" xml:space="preserve">
          <source>Each track is represented by a &lt;a href=&quot;../videotrack&quot;&gt;&lt;code&gt;VideoTrack&lt;/code&gt;&lt;/a&gt; object which provides information about the track.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae88cac79e8f4c5d90c6f4c9a0d062c29647237c" translate="yes" xml:space="preserve">
          <source>Each transaction on every affected database (or all open databases, in the case of browser shutdown) is aborted with an &lt;code&gt;AbortError&lt;/code&gt;. The effect is the same as if &lt;a href=&quot;../idbtransaction/abort&quot;&gt;&lt;code&gt;IDBTransaction.abort()&lt;/code&gt;&lt;/a&gt; is called on each transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87828c16ea784e6a16555203f7d09b2dbc2ff1f2" translate="yes" xml:space="preserve">
          <source>Each user's client running within a web browser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ab196739335860c6cd04d20749bb727b12bbcb" translate="yes" xml:space="preserve">
          <source>Each user's web browser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b2d549ea7f0e977572d4d7959f39244e7b6f0d" translate="yes" xml:space="preserve">
          <source>Each voice also has local controls, which allow you to manipulate the effects or parameters particular to each technique we are using to create those voices. The techniques we are using are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="742b5199aace685c2d14562cffbbb43f318442ed" translate="yes" xml:space="preserve">
          <source>Earlier implementations of the Fullscreen API would always send these events to the document rather than the element, and you may need to be able to handle that situation. Check &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/fullscreen#Browser_compatibility&quot;&gt;Browser compatibility&lt;/a&gt; in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/fullscreen&quot;&gt;fullscreen&lt;/a&gt; for specifics on when each browser made this change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c359431c067c65432fba63be556e8baf31add0" translate="yes" xml:space="preserve">
          <source>Earlier in this tutorial we've learned about the &lt;a href=&quot;drawing_shapes&quot;&gt;canvas grid&lt;/a&gt; and the &lt;strong&gt;coordinate space&lt;/strong&gt;. Until now, we only used the default grid and changed the size of the overall canvas for our needs. With transformations there are more powerful ways to translate the origin to a different position, rotate the grid and even scale it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a720d73c0b8f4c2c91568339742e526c739518c3" translate="yes" xml:space="preserve">
          <source>Earlier versions of Chrome incorrectly return true when a tab is first opened, but it starts reporting the correct connectivity status after the first network event. Windows: 11, Mac: 14, Chrome OS: 13, Linux: Always returns &lt;code&gt;true&lt;/code&gt;. For history, see &lt;a href=&quot;http://crbug.com/7469&quot;&gt;crbug.com/7469&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f98330a895e73e0f930f47dbf37a0b125ef373" translate="yes" xml:space="preserve">
          <source>Earlier versions of the spec called this method &lt;code&gt;requireUserMediation()&lt;/code&gt;. See &lt;a href=&quot;../credentialscontainer#Browser_compatibility&quot;&gt;Browser compatibility&lt;/a&gt; for support details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="143aaa6bc7fd65d778c8551cc42a4d94ff92750b" translate="yes" xml:space="preserve">
          <source>Early versions of the Media Capture and Streams API specification included separate &lt;code&gt;AudioStreamTrack&lt;/code&gt; and &lt;code&gt;VideoStreamTrack&lt;/code&gt; interfaces&amp;mdash;each based upon &lt;a href=&quot;mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt;&amp;mdash;which represented streams of those types. These no longer exist, and you should update any existing code to instead use &lt;code&gt;MediaStreamTrack&lt;/code&gt; directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194dcf2cbe4fbd1165bc670559aaf0653913d556" translate="yes" xml:space="preserve">
          <source>Early versions of this API included a special &lt;code&gt;AudioStreamTrack&lt;/code&gt; interface which was used as the type for each entry in the list of audio streams; however, this has since been merged into the main &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e64b7cfbc598421c0e9f90e8d7a52564be642d" translate="yes" xml:space="preserve">
          <source>Early versions of this API included a special &lt;code&gt;VideoStreamTrack&lt;/code&gt; interface which was used as the type for each entry in the list of video streams; however, this has since been merged into the main &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8efe81c473dd975318538730a9742e9a09cfa6c2" translate="yes" xml:space="preserve">
          <source>EcdsaParams</source>
          <target state="translated">EcdsaParams</target>
        </trans-unit>
        <trans-unit id="2f067f186e172cb9251ead86be87fa5f53b31fa0" translate="yes" xml:space="preserve">
          <source>Echo cancellation is a feature which attempts to prevent echo effects on a two-way audio connection by attempting to reduce or eliminate crosstalk between the user's output device and their input device. For example, it might apply a filter that negates the sound being produced on the speakers from being included in the input track generated from the microphone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e33e58505b2387ae821131a14695da2c0b572a3" translate="yes" xml:space="preserve">
          <source>Ecommerce website demo and source code &lt;a href=&quot;https://github.com/pjbazin/wpwg-demo&quot;&gt;VeggieShop&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8440b9eb7d03917b2509b5baeab2a299ce257eb0" translate="yes" xml:space="preserve">
          <source>Edge</source>
          <target state="translated">Edge</target>
        </trans-unit>
        <trans-unit id="9c26810559eea503d2b4f5375c82d6b84a677a34" translate="yes" xml:space="preserve">
          <source>Edge (EdgeHTML)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40943d342558e930e5fd4552c5671ad9d18db865" translate="yes" xml:space="preserve">
          <source>Edge Mobile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d435b96a05c69f196977ee928d783b51defbe130" translate="yes" xml:space="preserve">
          <source>Edge doesn't support parentheses-less one-argument version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0cf3efe4ec7302961d200bcaebbe37ce35dccb" translate="yes" xml:space="preserve">
          <source>Edit the code below and see your changes update live in the canvas (and make sure to use a browser which supports this feature, see the compatibility table):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0405f851d6904774cdec66c13f3c3c20fc192867" translate="yes" xml:space="preserve">
          <source>Edit the code below and see your changes update live in the canvas (check the browser compatibilty table if your current browser actually supports this method):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d35ab3575114febae1f55e1b5d80a925ae5183ef" translate="yes" xml:space="preserve">
          <source>Edit the code below and see your changes update live in the canvas (make sure to use a browser that supports this feature &amp;mdash; see the compatibility table):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4252cd06529f8fa76cb5db03ef853767ff17b566" translate="yes" xml:space="preserve">
          <source>Edit the code below and see your changes update live in the canvas:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="667bad0dd06100f761919ffadde6c8446c22b123" translate="yes" xml:space="preserve">
          <source>Edit the code below to see your changes update live in the canvas (if you don't see the full smiley, check in the browser compatibility table, if your current browser supports hit regions already, you might need to activate a preference).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584de7cc53a0cd217d5dbab79f6e2c7cb2f21599" translate="yes" xml:space="preserve">
          <source>Edit the code below to see your changes update live in the canvas:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add94fac827b3ed02fee4c1b72173331645c25b8" translate="yes" xml:space="preserve">
          <source>Edit this page on MDN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a093a8568948a281d9216b82f736d20d41f2a377" translate="yes" xml:space="preserve">
          <source>Editing host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a769fc9fd1bf50a69b3839fd2f92626878d5b626" translate="yes" xml:space="preserve">
          <source>Editor's Draft</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a8be3a26db8695469b491326955284255d9a6f" translate="yes" xml:space="preserve">
          <source>Editor's draft.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012cf4d862e6314c8865577c789b173d4ced277d" translate="yes" xml:space="preserve">
          <source>Editor's note: We need to find out what kinds of errors can occur and document them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a6d99cb235c430ac6379ed26e9c6c3b6c7732b" translate="yes" xml:space="preserve">
          <source>Editor's note: we should add information about where these deficiencies are compensated for, if they are at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720b5dbc53190f0e13902f7885ccaf43bb9991de" translate="yes" xml:space="preserve">
          <source>Effect</source>
          <target state="translated">Effect</target>
        </trans-unit>
        <trans-unit id="2f59b77c764a1a827810159f393e4a9e0636ec5e" translate="yes" xml:space="preserve">
          <source>Effect of canvas size on rendering with WebGL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ee90f4069fb677d4061f0c8c2242015b8e32a0f" translate="yes" xml:space="preserve">
          <source>Effect on offers and answers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87fcd3ea62913cb18bcc5342e0fe453c60b0359" translate="yes" xml:space="preserve">
          <source>Effect.getComputedTiming</source>
          <target state="translated">Effect.getComputedTiming</target>
        </trans-unit>
        <trans-unit id="29741c41b8a000bebe7790fe2833d1cbf1cc11a2" translate="yes" xml:space="preserve">
          <source>Effect.getTiming</source>
          <target state="translated">Effect.getTiming</target>
        </trans-unit>
        <trans-unit id="a4ef3dc6e61bdd5637236b57a66ded95ebf42f7c" translate="yes" xml:space="preserve">
          <source>Effect.updateTiming</source>
          <target state="translated">Effect.updateTiming</target>
        </trans-unit>
        <trans-unit id="fade0cb685bf6a5d9a1519eba623a1c6451f8882" translate="yes" xml:space="preserve">
          <source>EffectTiming</source>
          <target state="translated">EffectTiming</target>
        </trans-unit>
        <trans-unit id="b707931433da5df9ae11e8222def431db4ca7535" translate="yes" xml:space="preserve">
          <source>EffectTiming.delay</source>
          <target state="translated">EffectTiming.delay</target>
        </trans-unit>
        <trans-unit id="a9a18516998e6cb4271896410ead7875930dd8b2" translate="yes" xml:space="preserve">
          <source>EffectTiming.direction</source>
          <target state="translated">EffectTiming.direction</target>
        </trans-unit>
        <trans-unit id="2ea6caff8399ab9bd2f1e82e5a48d06e0d8cb390" translate="yes" xml:space="preserve">
          <source>EffectTiming.duration</source>
          <target state="translated">EffectTiming.duration</target>
        </trans-unit>
        <trans-unit id="aa786b155cdad4b9713ee771de84cae7eb5dd701" translate="yes" xml:space="preserve">
          <source>EffectTiming.easing</source>
          <target state="translated">EffectTiming.easing</target>
        </trans-unit>
        <trans-unit id="f3ad19c9feb3a774eafdeed36ba7965dc0471923" translate="yes" xml:space="preserve">
          <source>EffectTiming.endDelay</source>
          <target state="translated">EffectTiming.endDelay</target>
        </trans-unit>
        <trans-unit id="447a9f24cf736906dabf26972dd25c55080e1679" translate="yes" xml:space="preserve">
          <source>EffectTiming.fill</source>
          <target state="translated">EffectTiming.fill</target>
        </trans-unit>
        <trans-unit id="95bf7e9403c228f37752e4a773ddc3d554a45533" translate="yes" xml:space="preserve">
          <source>EffectTiming.iterationStart</source>
          <target state="translated">EffectTiming.iterationStart</target>
        </trans-unit>
        <trans-unit id="98e46531f8c2ab566350837c855c5beba039424b" translate="yes" xml:space="preserve">
          <source>EffectTiming.iterations</source>
          <target state="translated">EffectTiming.iterations</target>
        </trans-unit>
        <trans-unit id="8d49ee9ec967eae5c488f19e687c1215bcb38ad9" translate="yes" xml:space="preserve">
          <source>Efficient animation for web games</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb3b33251059cb5f93747019aa489c21ce5547c" translate="yes" xml:space="preserve">
          <source>Either</source>
          <target state="translated">Either</target>
        </trans-unit>
        <trans-unit id="78f339444919229538fb5ea5234b931f185b57ba" translate="yes" xml:space="preserve">
          <source>Either &quot;&lt;code&gt;4.0&lt;/code&gt;&quot; or a string representing version information about the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed9ca18a7ca9dad6571b97c78017e59ecb825d9" translate="yes" xml:space="preserve">
          <source>Either &quot;&lt;code&gt;Google Inc.&lt;/code&gt;&quot;, &quot;&lt;code&gt;Apple Computer, Inc.&lt;/code&gt;&quot;, or (in Firefox) the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c942918d19309f23bfc772688ba76112dfd066" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;'first-paint'&lt;/code&gt; or &lt;code&gt;'first-contentful-paint'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97df9845294dc57f1002b9c96af49d0826050a26" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;gl.VERTEX_SHADER&lt;/code&gt; or &lt;code&gt;gl.FRAGMENT_SHADER&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41e1b8359740336fa877e4424e85339fa102752" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;keySystem&lt;/code&gt; is an empty string or the &lt;code&gt;supportedConfigurations&lt;/code&gt; array is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db2a0463dec9974ae0eebf1cd0883d44847d45bb" translate="yes" xml:space="preserve">
          <source>Either a &lt;a href=&quot;../htmlcanvaselement&quot;&gt;&lt;code&gt;HTMLCanvasElement&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../offscreencanvas&quot;&gt;&lt;code&gt;OffscreenCanvas&lt;/code&gt;&lt;/a&gt; object or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7f75407cd3325dee28dc2a92d6f258124ff3a0" translate="yes" xml:space="preserve">
          <source>Either a &lt;code&gt;gl.FRAGMENT_SHADER&lt;/code&gt; or a &lt;code&gt;gl.VERTEX_SHADER&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8401943cd64adc888de12fc6b6b7544089967a1" translate="yes" xml:space="preserve">
          <source>Either a Boolean (which indicates whether or not a video track is requested) or a &lt;a href=&quot;mediatrackconstraints&quot;&gt;&lt;code&gt;MediaTrackConstraints&lt;/code&gt;&lt;/a&gt; object providing the constraints which must be met by the video track included in the returned &lt;a href=&quot;mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;. If constraints are specified, a video track is inherently requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0900815a745c4a4116c384f0add685f01b9d78e6" translate="yes" xml:space="preserve">
          <source>Either a Boolean (which indicates whether or not an audio track is requested) or a &lt;a href=&quot;mediatrackconstraints&quot;&gt;&lt;code&gt;MediaTrackConstraints&lt;/code&gt;&lt;/a&gt; object providing the constraints which must be met by the audio track included in the returned &lt;a href=&quot;mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;. If constraints are specified, an audio track is inherently requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bdd66c2173554e0426417a2007f5a6d6f042d4" translate="yes" xml:space="preserve">
          <source>Either a key or an &lt;a href=&quot;../idbkeyrange&quot;&gt;&lt;code&gt;IDBKeyRange&lt;/code&gt;&lt;/a&gt; can be passed, allowing one or multiple records to be deleted from a store. To delete all records in a store, use &lt;a href=&quot;clear&quot;&gt;&lt;code&gt;IDBObjectStore.clear&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ac579ab472c1daca30ab95a026482e2ca19bc1" translate="yes" xml:space="preserve">
          <source>Either a single &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; or an arrray of &lt;code&gt;DOMString&lt;/code&gt;s specifying ideal values for the property. If possible, one of the listed values will be used, but if it's not possible, the user agent will use the closest possible match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2034fd7b339d6c4c805199bedcce855f7f491e0b" translate="yes" xml:space="preserve">
          <source>Either a single &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; which must be the value of the property, or an array of &lt;code&gt;DOMString&lt;/code&gt; objects one of which must be the property's value. If the property can't be set to one of the listed values, matching will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b825922aea12a8e2c0515cfa8f143bd27bab4027" translate="yes" xml:space="preserve">
          <source>Either a single number or an array of numbers between 0.0 and 1.0, specifying a ratio of intersection area to total bounding box area for the observed target. A value of 0.0 means that even a single visible pixel counts as the target being visible. 1.0 means that the entire target element is visible. See &lt;a href=&quot;../intersection_observer_api#Thresholds&quot;&gt;Thresholds&lt;/a&gt; in &lt;a href=&quot;../intersection_observer_api&quot;&gt;Intersection Observer API&lt;/a&gt; for a more in-depth description of how thresholds are used. The default is a threshold of 0.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50eefc250b8273eb0785d625fdc23c2447a7cdbc" translate="yes" xml:space="preserve">
          <source>Either a single number or an array of numbers which indicate at what percentage of the target's visibility the observer's callback should be executed. If you only want to detect when visibility passes the 50% mark, you can use a value of 0.5. If you want the callback to run every time visibility passes another 25%, you would specify the array [0, 0.25, 0.5, 0.75, 1]. The default is 0 (meaning as soon as even one pixel is visible, the callback will be run). A value of 1.0 means that the threshold isn't considered passed until every pixel is visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8bb24884fe2ac52044b1235e6f3b203d16e7283" translate="yes" xml:space="preserve">
          <source>Either a single protocol string or an array of protocol strings. These strings are used to indicate sub-protocols, so that a single server can implement multiple WebSocket sub-protocols (for example, you might want one server to be able to handle different types of interactions depending on the specified &lt;code&gt;protocol&lt;/code&gt;). If you don't specify a protocol string, an empty string is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b325e27757762cba073633754bdc0e215b83b21a" translate="yes" xml:space="preserve">
          <source>Either an array of keyframe objects, &lt;strong&gt;or&lt;/strong&gt; a keyframe object whose property are arrays of values to iterate over. See &lt;a href=&quot;../web_animations_api/keyframe_formats&quot;&gt;Keyframe Formats &lt;/a&gt;for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd84d1d387f65f36129d229f7d2d4c93ccd794e" translate="yes" xml:space="preserve">
          <source>Either an integer representing the animation's duration (in milliseconds), or an &lt;a href=&quot;../effecttiming&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; containing one or more of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a12ec1c3d473bde6b35ac1e0b8bdc6ef103d32b7" translate="yes" xml:space="preserve">
          <source>Either an&lt;strong&gt; integer representing the animation's duration&lt;/strong&gt; (in milliseconds), &lt;strong&gt;or&lt;/strong&gt; an Object containing one or more timing properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d5543d00cb8ee488d84dda5767614b31627d38" translate="yes" xml:space="preserve">
          <source>Either the client or the server can choose to send a message at any time &amp;mdash; that's the magic of WebSockets. However, extracting information from these so-called &quot;frames&quot; of data is a not-so-magical experience. Although all frames follow the same specific format, data going from the client to the server is masked using &lt;a href=&quot;https://en.wikipedia.org/wiki/XOR_cipher&quot;&gt;XOR encryption&lt;/a&gt; (with a 32-bit key). Section 5 of the specification describes this in detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1a17fd650c0087f4002c5de04771378a88c51f" translate="yes" xml:space="preserve">
          <source>Either the object store has been deleted or the current transaction is not an upgrade transaction; you can only rename indexes during upgrade transactions; that is, when the mode is &lt;code&gt;&quot;versionchange&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba84addd7659bd079214acbeb3a32cc4cfd772f" translate="yes" xml:space="preserve">
          <source>Either the receiver's &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; is closed or the &lt;a href=&quot;../rtcrtpreceiver&quot;&gt;&lt;code&gt;RTCRtpReceiver&lt;/code&gt;&lt;/a&gt; is stopped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b43c4002047f01c1eb21cec2ba798e0525ed84f" translate="yes" xml:space="preserve">
          <source>Either the specified &lt;code&gt;id&lt;/code&gt; is already in use or, if no &lt;code&gt;id&lt;/code&gt; was specified, the WebRTC layer was unable to automatically generate an ID because all IDs are in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0fcbe9a1aabe7ae4a785527a111ccd8a4d2d102" translate="yes" xml:space="preserve">
          <source>Either the specified &lt;code&gt;keySystem&lt;/code&gt; isn't supported by the platform or the browser, or none of the configurations specified by &lt;code&gt;supportedConfigurations&lt;/code&gt; can be satisfied (if, for example, none of the &lt;code&gt;codecs&lt;/code&gt; specified in &lt;code&gt;contentType&lt;/code&gt; are available).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ac99a8845bef11d16e35dd4afa9b46190365e8" translate="yes" xml:space="preserve">
          <source>Either there's not enough remaining storage space or the storage quota was reached and the user declined to give more space to the database. To ask for more storage, see &lt;a href=&quot;http://code.google.com/chrome/whitepapers/storage.html&quot;&gt;Managing HTML5 Offline Storage&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb3855c00ecaa9603d8c484138eb93c279b28a8" translate="yes" xml:space="preserve">
          <source>Either way, since attributes cannot be used unless enabled, and are disabled by default, you need to call &lt;code&gt;enableVertexAttribArray()&lt;/code&gt; to enable individual attributes so that they can be used. Once that's been done, other methods can be used to access the attribute, including &lt;a href=&quot;vertexattribpointer&quot;&gt;&lt;code&gt;vertexAttribPointer()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;vertexattrib&quot;&gt;&lt;code&gt;vertexAttrib*()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;getvertexattrib&quot;&gt;&lt;code&gt;getVertexAttrib()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf91a491446bfff927f16258fd81fdb85ba4d2b7" translate="yes" xml:space="preserve">
          <source>Either you specify the index yourself. In this case, you call &lt;a href=&quot;bindattriblocation&quot;&gt;&lt;code&gt;gl.bindAttribLocation()&lt;/code&gt;&lt;/a&gt; to connect a named attribute from the vertex shader to the index you want to use. This must be done before calling &lt;a href=&quot;linkprogram&quot;&gt;&lt;code&gt;gl.linkProgram()&lt;/code&gt;&lt;/a&gt;. You can then provide this same index to &lt;code&gt;gl.vertexAttribPointer()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c8c8068940839439147d08ed595e4185f647cb" translate="yes" xml:space="preserve">
          <source>Elapsed time (in nanoseconds).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49fa9fd831096c82ab950bc7aa0a0a7ef8a10998" translate="yes" xml:space="preserve">
          <source>Element</source>
          <target state="translated">Element</target>
        </trans-unit>
        <trans-unit id="b64d71cf3dc71444cc01c3e14831c605dc69a471" translate="yes" xml:space="preserve">
          <source>Element Traversal Specification&lt;br/&gt;&lt;small&gt;The definition of 'Element' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58f44c3fd412326d869cb780f3da4942afe3ecb" translate="yes" xml:space="preserve">
          <source>Element Traversal Specification&lt;br/&gt;&lt;small&gt;The definition of 'ElementTraversal' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af4ba4b0332c649ac947be898430e148f5c823d" translate="yes" xml:space="preserve">
          <source>Element Traversal Specification&lt;br/&gt;&lt;small&gt;The definition of 'ElementTraversal.childElementCount' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b45429c6b6c7822fd35f0962219ffeec3832cd" translate="yes" xml:space="preserve">
          <source>Element Traversal Specification&lt;br/&gt;&lt;small&gt;The definition of 'ElementTraversal.firstElementChild' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944d644819c04f639ee6dd96a64e93c26a01a263" translate="yes" xml:space="preserve">
          <source>Element Traversal Specification&lt;br/&gt;&lt;small&gt;The definition of 'ElementTraversal.lastElementChild' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16dec362c416748322fa77926074af4e1f634834" translate="yes" xml:space="preserve">
          <source>Element Traversal Specification&lt;br/&gt;&lt;small&gt;The definition of 'ElementTraversal.nextElementSibling' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9841698ee09b58d75a236125b88b8125db3042" translate="yes" xml:space="preserve">
          <source>Element Traversal Specification&lt;br/&gt;&lt;small&gt;The definition of 'ElementTraversal.previousElementSibling' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3cde5782614dd47084f8311317dc7cf3dec35af" translate="yes" xml:space="preserve">
          <source>Element extensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c902389166c7034e6a6e0f81230638567d49a75" translate="yes" xml:space="preserve">
          <source>Element.dataset</source>
          <target state="translated">Element.dataset</target>
        </trans-unit>
        <trans-unit id="a563972e807d43617dfb0a4b0398984476c03544" translate="yes" xml:space="preserve">
          <source>Elements</source>
          <target state="translated">Elements</target>
        </trans-unit>
        <trans-unit id="77925f2b055242e9d2a43fe089e739690a22caa7" translate="yes" xml:space="preserve">
          <source>Elements can have multiple animations applied to them. You can get a list of the animations that affect an element by calling &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/getAnimations&quot;&gt;&lt;code&gt;Element.getAnimations()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f13e208a71bd42d5653c4d0568d063fda16d40ba" translate="yes" xml:space="preserve">
          <source>Elements in the HTML namespace that have no child nodes (thereby representing empty tags) are serialized with both begin and end tags (&lt;code&gt;&quot;&amp;lt;someelement&amp;gt;&amp;lt;/someelement&amp;gt;&quot;&lt;/code&gt;) instead of using the empty-element tag (&lt;code&gt;&quot;&amp;lt;someelement/&amp;gt;&quot;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="799cf68103e09be106705f3f9cb47f7516108492" translate="yes" xml:space="preserve">
          <source>Elements that are considered form controls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9af07ee11ba9a7d2ee102f904525f445bea7b4" translate="yes" xml:space="preserve">
          <source>Elements that are disabled do not participate in the tabbing order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddca46daf0a5d492467cca3f044f0ff8c74e484f" translate="yes" xml:space="preserve">
          <source>Elements that are not &lt;code&gt;hidden&lt;/code&gt; must not link to elements which are.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d43359a7375d11e921023cc4953005fad3c3d52" translate="yes" xml:space="preserve">
          <source>Elements that do not support the tabIndex attribute or support it and assign tabIndex to &quot;0&quot;, in the order they appear.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928470e452c296c21766e95a52613a916560ce0d" translate="yes" xml:space="preserve">
          <source>Elements with a positive tabIndex. Elements that have identical tabIndexes should be navigated in the order they appear. Navigation proceeds from the lowest tabIndex to the highest tabIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1413e2cc9afb32508f441900fd3b4931d3ed2e5" translate="yes" xml:space="preserve">
          <source>Elements with pointer events set to &lt;code&gt;none&lt;/code&gt; will be ignored, and the element below it will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ed90477f6212306947adac06843c37e99ffd42" translate="yes" xml:space="preserve">
          <source>Elements you can attach a shadow to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c117a1e82669c84122ed16635eca46aca177c37" translate="yes" xml:space="preserve">
          <source>EllipseElement</source>
          <target state="translated">EllipseElement</target>
        </trans-unit>
        <trans-unit id="22c1662c5f25916e72c3d9281e00035dfc1dbe68" translate="yes" xml:space="preserve">
          <source>Embedded workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b729bee099867946dc43a5ffe81adccc80ff72" translate="yes" xml:space="preserve">
          <source>Embedding an image via data: URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfabf3d040c619799e90f7b1ebddac57079f4755" translate="yes" xml:space="preserve">
          <source>Empties different buffer commands, causing all commands to be executed as quickly as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac2fb6b2093816de345bce07e2d2f1a2c4d6001" translate="yes" xml:space="preserve">
          <source>Empty audio frames have every sample's value set to 0. Empty video frames have every pixel set to black.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e48e9bfcf1fd90665a1afdecd4f15142f576917" translate="yes" xml:space="preserve">
          <source>Empty border-boxes are completely ignored. If all the element's border-boxes are empty, then a rectangle is returned with a &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; of zero and where the &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt; are the top-left of the border-box for the first CSS box (in content order) for the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c00d959b7da0cb695959b8c5b23936fa00fc6b7" translate="yes" xml:space="preserve">
          <source>Enable the extension:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261c7b9c3b776bec501c26a9d2fe4d480d9d16f7" translate="yes" xml:space="preserve">
          <source>Enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f21f661acdf51dcb215d2a9cb7c2a44642b14b79" translate="yes" xml:space="preserve">
          <source>Enabled only in Nightly, Developer Edition, and Beta channels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ebd370b695c0a3d9d7e655034a0fbaf119b4ef" translate="yes" xml:space="preserve">
          <source>Enables a user agent is able to request that an identity assertion be generated or validated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef8d89b427a5c47e55dae98e03fc8c88dd2a956" translate="yes" xml:space="preserve">
          <source>Enables a vertex attribute array at a given position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa71dc5922b8d92699c8f3e11a6ce2f81066d14" translate="yes" xml:space="preserve">
          <source>Enables or disables the grabber that allows absolutely-positioned elements to be moved around. This is disabled by default in Firefox 63 Beta/Dev Edition (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1449564&quot;&gt;bug 1449564&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c446dba9dab0e90fd74b940af194e823fa6d78f" translate="yes" xml:space="preserve">
          <source>Enables or disables the resize handles on images, tables, and absolutely-positioned elements and other resizable objects. This is disabled by default in Firefox 63 Beta/Dev Edition (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1449564&quot;&gt;bug 1449564&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23a6c5106a73b2925b799e2d14f253a1094e5a3" translate="yes" xml:space="preserve">
          <source>Enables or disables the table row/column insertion and deletion controls. This is disabled by default in Firefox 63 Beta/Dev Edition (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1449564&quot;&gt;bug 1449564&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ba38700aefdd3bfd39762f1cea51ce6f6b1a9c" translate="yes" xml:space="preserve">
          <source>Enables retrieval and analysis of detailed data regarding various aspects of an application's network performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4c309d4391e0ee41a8ee17a7e40b07e500aa05" translate="yes" xml:space="preserve">
          <source>Enables specific WebGL capabilities for this context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2192b6bb5ebb4bf4f756d278d103992bd13de1" translate="yes" xml:space="preserve">
          <source>Enables the scheduling of tasks during a browser's idle periods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c909e760f7078d0637528f7265d376d927da77eb" translate="yes" xml:space="preserve">
          <source>Enables the style sheets for the specified style sheet set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f790a767d4cbc76daf7e909f1b2c1ddf687c6485" translate="yes" xml:space="preserve">
          <source>Enables the style sheets matching the specified name in the current style sheet set, and disables all other style sheets (except those without a title, which are always enabled).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5659a3cfd7d2647705af97324b88a74275c006" translate="yes" xml:space="preserve">
          <source>Enables the web page to update the details of the payment request in response to a user action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289b9a2194c41bc43f19079dd0e8ec8d53bd5670" translate="yes" xml:space="preserve">
          <source>Enables you to cancel a callback previously scheduled with &lt;a href=&quot;window/requestanimationframe&quot;&gt;&lt;code&gt;Window.requestAnimationFrame&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0000918aecaf93dad5ca049d305abe74274c8f61" translate="yes" xml:space="preserve">
          <source>Enables you to cancel a callback previously scheduled with &lt;a href=&quot;window/requestidlecallback&quot;&gt;&lt;code&gt;Window.requestIdleCallback&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce7483863e6a828a10e41e3a57fcf0d3ac66e07" translate="yes" xml:space="preserve">
          <source>Enabling an extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81cd074ff66ad74441e7d943af886ddf31293448" translate="yes" xml:space="preserve">
          <source>Enabling and disabling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513da50c1dc6ce2302e8a22edde3a55ef2f4f5f2" translate="yes" xml:space="preserve">
          <source>Enabling the extension:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c123ba90f0255106de3fd38262e776362bb7cfa" translate="yes" xml:space="preserve">
          <source>Enabling the extensions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="6079254aa362c78f1d40179dcc5e3aa5523ee8e4" translate="yes" xml:space="preserve">
          <source>Encoding API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70a20811d044dd9f5642017b10f904bf3e0c8aa" translate="yes" xml:space="preserve">
          <source>Encoding&lt;br/&gt;&lt;small&gt;The definition of 'TextDecoder' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ecceefa9bf9bf1dc054359426b608c83a6ba9ad" translate="yes" xml:space="preserve">
          <source>Encoding&lt;br/&gt;&lt;small&gt;The definition of 'TextDecoder()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c40ff591d998a7f9593b0d95532830689eb87d8" translate="yes" xml:space="preserve">
          <source>Encoding&lt;br/&gt;&lt;small&gt;The definition of 'TextDecoder.decode()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd5ae7663a9ec4e71c9c5f7c318688968c52c4f" translate="yes" xml:space="preserve">
          <source>Encoding&lt;br/&gt;&lt;small&gt;The definition of 'TextDecoder.encoding' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3fcac2a39c64b6b5bde4f3cd0d82910255f58b" translate="yes" xml:space="preserve">
          <source>Encoding&lt;br/&gt;&lt;small&gt;The definition of 'TextEncoder' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd436426c381e9b15a2f6c1f0b6ca29eb02d633" translate="yes" xml:space="preserve">
          <source>Encoding&lt;br/&gt;&lt;small&gt;The definition of 'TextEncoder()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022f2b9f5bfe7bcf298dd571da0a9ce06107f00c" translate="yes" xml:space="preserve">
          <source>Encoding&lt;br/&gt;&lt;small&gt;The definition of 'TextEncoder.encode()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d0bcaf91f2a4bb5391e88be377abb206c515ae" translate="yes" xml:space="preserve">
          <source>Encoding&lt;br/&gt;&lt;small&gt;The definition of 'TextEncoder.encoding' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66d60fbcf5fcf0c2269a8d7aeb9e19c8ecde6db" translate="yes" xml:space="preserve">
          <source>Encrypted Media</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a349141b3b205185f6747f88b507a8af9dfa65f8" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f38f54778b831a6c65fa8202af15d6e7c1d12df" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174cebbcab29a314c3bfece143c4def5d807476b" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'Encrypted Media Extensions' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ba7f1f1b6b734b6495a885659ea1023b09aef3" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'HTMLSourceElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b678ae7eec2322098621d54bc089dca91a0ac705" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'MediaKeyMessageEvent' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a689176a53941f45a4004131cf0e6ea865b81fa" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'MediaKeySession' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8eb5ecf112cc01512b5df1798347f973497ccdf" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'MediaKeyStatusMap' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69273a11da2e347c682b5d6c7b29fac9d821c127" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'MediaKeySystemAccess' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d05ec8faa4642de5eeb9343c5140fcc2e41a87" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'MediaKeys' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c9ba9e169620062f57f31a3a8f5cc67cd05899" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'MediaSystemConfiguration' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c68e8d1b5059dce807ad36fff440d8e7d66f05" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'audioCapabilities' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15626c00e38765f8855fbf14e5fc11aa5e99a3f4" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'close()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685a351deda69434eae2c9209b8d4359884f69ee" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'closed' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2d97adb6a80a616c997390971b12909722d80b" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'createMediaKeys()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322ccecc0b5e81422c18852563fc002549165500" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'createSession()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08df15051c8eab860ce336932fa0cc8c968bc39" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'distinctiveIdentifier' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7036a7eefd95cadddb274d12a38dc8c5fe95d716" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'expiration' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b251e409ba5c3e95dd9d1949d989a2d94eb67201" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'generateRequest()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42fed3a8debd3ef9edd8d8903ef3d27561b42fe5" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'getConfiguration()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e519843ad4b4f919945728ed87fde986cde92d44" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'initDataTypes' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa34e692673598bb49d8e5dc43979603363edbe9" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'keyStatuses' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfdd8247e677c0aa5f19d4241366fbe35e4af33a" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'keySystem' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4faa4b3838f3c5dd44d24941021f496861259dd" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'load()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1fc29d105d797b1003ee0b99b0cc844500b7f65" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'message' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac17deff5e4becf11643b7ac527780359912cd3" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'messageType' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102cd0734dc6cbc997d299d8be4ce65b6223eb2e" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'persistentState' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb09db73dc447bfadbbaccf1f439d8336422c531" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'remove()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a0b7321de73a07e763a53f69d5d71f59473468" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'requestMediaKeySystemAccess()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f2536595c332de1b11c1ca464e7f8e709b0864" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'sessionId' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef41f5eaf5684fef7f0b2245b3564cf2b7a62e3" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'setMediaKeys()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73932fe220ca6ba93b159a9d8ea778b425e9d7a" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'setServerCertificate()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c4203b6114dea91028f2c9a2b638dfe5465789" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'size' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e641a823a6a00487514c90f679581bcc3789f73" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'update()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3690d2c8a4df3ce0e4b5099c916840766391d3" translate="yes" xml:space="preserve">
          <source>Encrypted Media Extensions&lt;br/&gt;&lt;small&gt;The definition of 'videoCapabilities' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df78ddaf5360e6ef19acafaf3ba154a823da167" translate="yes" xml:space="preserve">
          <source>Ending the call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6b98d37c016b02a7b77e8f3cca93fc083de877" translate="yes" xml:space="preserve">
          <source>Ends a transform feedback operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ae6958fa90904fdeb48ff7911b8f86742792df" translate="yes" xml:space="preserve">
          <source>Engineering Mode API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe33cd3ccb2d37099e1698107fd321b483b8977f" translate="yes" xml:space="preserve">
          <source>Enough data is available&amp;mdash;and the download rate is high enough&amp;mdash;that the media can be played through to the end without interruption.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d567a8348da2f787bed0029f05e64d2362dcb66" translate="yes" xml:space="preserve">
          <source>Enough of the media resource has been retrieved that the metadata attributes are initialized. Seeking will no longer raise an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300c2ea30351f244f20ab8ac5fcbbc544ce5326b" translate="yes" xml:space="preserve">
          <source>Enqueueing tasks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70e3c58d46560b926d40fb622ff4f0a1eed133f2" translate="yes" xml:space="preserve">
          <source>Enqueues a given chunk in the associated stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884468e8e0bd058463eebf5604c57aebc1dfaeb7" translate="yes" xml:space="preserve">
          <source>Enqueues data to be transmitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="376696524ebeea07c4360461753d377730c8db22" translate="yes" xml:space="preserve">
          <source>Ensure that execution duration is shorter than interval frequency</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eecd9f9a2ca631a604ba88ed3a842892db523785" translate="yes" xml:space="preserve">
          <source>Ensuring that the challenge that was signed by the authenticator matches the challenge that was generated by the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5897aec1410e8e37268e965a767d19aba2d846e" translate="yes" xml:space="preserve">
          <source>Ensuring that the origin was the origin expected</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9eceb7a86a9f577ef80586c5c1d7fde9ff493d" translate="yes" xml:space="preserve">
          <source>Enter</source>
          <target state="translated">Enter</target>
        </trans-unit>
        <trans-unit id="d276d49bf2829e37ecd468a329649ad6eb6ffd4f" translate="yes" xml:space="preserve">
          <source>Enter key on keypad of PowerBook (&lt;code&gt;0x34&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b520c616d0b8effae767d99682416e4184ed8a" translate="yes" xml:space="preserve">
          <source>Enter service workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62e363b43982ecb7ad3f876320aa335fbb42e56" translate="yes" xml:space="preserve">
          <source>Entering a geo-fence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c05e0101eaaa1f22373aab688ce3a05351849e" translate="yes" xml:space="preserve">
          <source>EntityReference</source>
          <target state="translated">EntityReference</target>
        </trans-unit>
        <trans-unit id="cd2ac9d7d84e677db6199d11dce25c65c0d05a13" translate="yes" xml:space="preserve">
          <source>Entry of credit card or other payment information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8435c732686273acd994ee2305c9ac61e26628" translate="yes" xml:space="preserve">
          <source>Entry.duration</source>
          <target state="translated">Entry.duration</target>
        </trans-unit>
        <trans-unit id="a10c2fe2ed6f283a459c2d0cd363147e7126bf50" translate="yes" xml:space="preserve">
          <source>Entry.entryType</source>
          <target state="translated">Entry.entryType</target>
        </trans-unit>
        <trans-unit id="0227d7f7787d00a09b5257ae2b9873ca03d63caa" translate="yes" xml:space="preserve">
          <source>Entry.name</source>
          <target state="translated">Entry.name</target>
        </trans-unit>
        <trans-unit id="59431ebbc23ac722b3d99ac7558793f73dbe28dc" translate="yes" xml:space="preserve">
          <source>Entry.startTime</source>
          <target state="translated">Entry.startTime</target>
        </trans-unit>
        <trans-unit id="038d71dad2ca5c74b6da1b03fa1472c3da9f1419" translate="yes" xml:space="preserve">
          <source>Entry.toJSON</source>
          <target state="translated">Entry.toJSON</target>
        </trans-unit>
        <trans-unit id="300b6f7cc31adb917ea0cb3e496ea6f207ba039a" translate="yes" xml:space="preserve">
          <source>Enumerated attribute indicating alignment of the rule with respect to the surrounding context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="271372723f6bd798ef1c54cdbdebfec04cef957c" translate="yes" xml:space="preserve">
          <source>Enumerating elements attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe0d2dc12d0aa622bacbe23b5516c2e7895e1d7" translate="yes" xml:space="preserve">
          <source>Enumeration</source>
          <target state="translated">Enumeration</target>
        </trans-unit>
        <trans-unit id="c35a95905b3f86715fde2db0f29719bef71666fd" translate="yes" xml:space="preserve">
          <source>Equal to key value if &lt;code&gt;lowerOpen&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d779bfc9f09e9fbe5843e7ee59770d025a53444" translate="yes" xml:space="preserve">
          <source>Equal to key value if &lt;code&gt;upperOpen&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f63e9a89759a4984cfc2692648c0b58f044858e3" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;steps(1, end)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2f29dee765cddd72339c66a2d0c235f9d11afc" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;steps(1, start)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285525fc35b3fea79f6f8dd73b6afe8f04fabdf1" translate="yes" xml:space="preserve">
          <source>Erasing part of a canvas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17d1a1a990555cccde4c3eb7d51e5f3cb3e362c" translate="yes" xml:space="preserve">
          <source>Erasing the whole canvas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb5d5ca85b26c7aa225bc8e7fe17453f0347eab" translate="yes" xml:space="preserve">
          <source>Ericsson Texture Compression &amp;ndash; Wikipedia</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="5b1d9b93978b6a7d794a13e544ea13e286fc3f45" translate="yes" xml:space="preserve">
          <source>Error Event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f44d09954668d46048bdca64af9997ff21d33c" translate="yes" xml:space="preserve">
          <source>Error callbacks are not optional for your sanity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c1aaafd7b122199cea3435b0578dc6cf9917df" translate="yes" xml:space="preserve">
          <source>Error codes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73631d7f0356fdbdeaa36f8e5dbad89c6aa15dc4" translate="yes" xml:space="preserve">
          <source>Error handling</source>
          <target state="translated">错误处理</target>
        </trans-unit>
        <trans-unit id="a14ace76215bc89f1aecb07c4c76ecbec7cc5321" translate="yes" xml:space="preserve">
          <source>Error names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="195c550c149c4066cf6e71c740732ca75c2c7886" translate="yes" xml:space="preserve">
          <source>Error.code</source>
          <target state="translated">Error.code</target>
        </trans-unit>
        <trans-unit id="1b2eaf43849139c34f7b02bf6cb9ad5d32f3ee90" translate="yes" xml:space="preserve">
          <source>Error.message</source>
          <target state="translated">Error.message</target>
        </trans-unit>
        <trans-unit id="010a5cda52b120110f6362915c46f699ea16ea93" translate="yes" xml:space="preserve">
          <source>ErrorEvent</source>
          <target state="translated">ErrorEvent</target>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">Errors</target>
        </trans-unit>
        <trans-unit id="6e423474b2edc382a3a7fa640e149106f66f21bb" translate="yes" xml:space="preserve">
          <source>Errors that can be detected immediately are thrown as DOM exceptions. All other errors are reported through &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; events sent to the &lt;code&gt;MediaRecorder&lt;/code&gt; object. You can implement the &lt;a href=&quot;onerror&quot;&gt;&lt;code&gt;onerror&lt;/code&gt;&lt;/a&gt; event handler to respond to these errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0aeebd45aef869ba5e27890ea53004a2f442d8b" translate="yes" xml:space="preserve">
          <source>Errors thrown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7a4f9e2f70d0b81cffc15ab30fd344aeb34fb3" translate="yes" xml:space="preserve">
          <source>Esc</source>
          <target state="translated">Esc</target>
        </trans-unit>
        <trans-unit id="12d8b3a15e0f6d9bba02cff6d0fa5c6db129208e" translate="yes" xml:space="preserve">
          <source>Escape Sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9fdff9225f637bccfcc44667248b9e137a73a3" translate="yes" xml:space="preserve">
          <source>Escaping special characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00cd67b9580d22d40d5ab8ac3b6c3e274019df73" translate="yes" xml:space="preserve">
          <source>Essentially all web browsers (Firefox, Internet Explorer, recent versions of Opera, Safari, Konqueror, and iCab, as a non-exhaustive list) return &lt;code&gt;null&lt;/code&gt; when the specified attribute does not exist on the specified element and this is what &lt;a href=&quot;http://dom.spec.whatwg.org/#dom-element-getattribute&quot;&gt;the current DOM specification draft&lt;/a&gt; specifies. The old DOM 3 Core specification, on the other hand, says that the correct return value in this case is actually the &lt;em&gt;empty string&lt;/em&gt;, and some DOM implementations implement this behavior. The implementation of getAttribute in XUL (Gecko) actually follows the DOM 3 Core specification and returns an empty string. Consequently, you should use &lt;a href=&quot;hasattribute&quot;&gt;&lt;code&gt;element.hasAttribute()&lt;/code&gt;&lt;/a&gt; to check for an attribute's existence prior to calling &lt;code&gt;getAttribute()&lt;/code&gt; if it is possible that the requested attribute does not exist on the specified element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa7bf2d043957c09a7f28a9806be18b99445012" translate="yes" xml:space="preserve">
          <source>Establish connections from the audio sources through zero or more effects, eventually ending at the chosen destination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52124d9906cce09d3c5ed30838103054cad80940" translate="yes" xml:space="preserve">
          <source>Establishes a limit on the miter when two lines join at a sharp angle, to let you control how thick the junction becomes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc2c3be868a1be29cd15f1d3180de2370d930da" translate="yes" xml:space="preserve">
          <source>Establishing a WebRTC connection between two devices requires the use of a &lt;strong&gt;signaling server&lt;/strong&gt; to resolve how to connect them over the internet. A signaling server's job is to serve as an intermediary to let two peers find and establish a connection while minimizing exposure of potentially private information as much as possible. How do we create this server and how does the signaling process actually work?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e3d52572cfb5f282f24af08ceb3c93515e0c23" translate="yes" xml:space="preserve">
          <source>Establishing a connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a72f5fb3ad953724f65d7aae64af9a5dfa7065" translate="yes" xml:space="preserve">
          <source>Establishing the connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2352230ae4369b2400cd9a8b59625450e193a06a" translate="yes" xml:space="preserve">
          <source>Estimate</source>
          <target state="translated">Estimate</target>
        </trans-unit>
        <trans-unit id="9762d0fd5e0cdc0f7eab0e0727985e6b1377d039" translate="yes" xml:space="preserve">
          <source>Estimate.quota</source>
          <target state="translated">Estimate.quota</target>
        </trans-unit>
        <trans-unit id="1bebd1e867f5e48813d6b2ebe25d0a2e24126c25" translate="yes" xml:space="preserve">
          <source>Estimate.usage</source>
          <target state="translated">Estimate.usage</target>
        </trans-unit>
        <trans-unit id="314a780b9e174f841d09fbe567a97ea23dc19bf4" translate="yes" xml:space="preserve">
          <source>Evaluates an XPath expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c92b75ac5d97c188de6152670c589ca8912a36" translate="yes" xml:space="preserve">
          <source>Even if the time returned is precise to the second, browsers round them to a higher interval (typically to the closest 15 minutes) for privacy reasons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10015a657f133e68d88e21fa1c6864284c754ca6" translate="yes" xml:space="preserve">
          <source>Even if these constants are now deprecated, you can still use them to provide backward compatibility if required (in Chrome &lt;a href=&quot;http://peter.sh/2012/05/tab-sizing-string-values-for-indexeddb-and-chrome-21/&quot;&gt;the change was made in version 21&lt;/a&gt;). You should code defensively in case the object is not available anymore:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c05215348132d6c4b1a79cf75fd95038d920bd9" translate="yes" xml:space="preserve">
          <source>Even in the same browser, using the same storage method, there are different classes of data storage to understand. This section discusses the different ones you might find in different browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff834e3d331eff98ad6cac2d22288e3129f21bc" translate="yes" xml:space="preserve">
          <source>Even though only a single reader can read a stream at once, it is possible to split a stream into two identical copies, which can then be read by two separate readers. This is called &lt;strong&gt;teeing&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9228251ddc47e5badb2613728fd99fc02ac36b5b" translate="yes" xml:space="preserve">
          <source>Even though you're building a server, a client still has to start the WebSocket handshake process. So you must know how to interpret the client's request. The &lt;strong&gt;client&lt;/strong&gt; will send a pretty standard HTTP request that looks like this (the HTTP version &lt;strong&gt;must&lt;/strong&gt; be 1.1 or greater, and the method &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;GET&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602d860bccf1e53f72cdd67756b647b24d0f0f9b" translate="yes" xml:space="preserve">
          <source>Even when the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Thead&quot;&gt;&lt;code&gt;thead&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Tbody&quot;&gt;&lt;code&gt;tbody&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Tfoot&quot;&gt;&lt;code&gt;tfoot&lt;/code&gt;&lt;/a&gt; elements are out of order in the HTML, all main browsers (Chrome, Safari, Firefox, Internet Explorer) except Opera render the table in the right order. Therefore the rows count from thead to tbody, from tbody to tfoot. Opera will give the rowIndex value accordingly to their position within the HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="4c874625e9b4c4789838bc2475c5fa96b872d071" translate="yes" xml:space="preserve">
          <source>Event Handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2fb09b41d52767f0a6805066428710faebd9b3" translate="yes" xml:space="preserve">
          <source>Event Listeners added using DOM Events are not copied during cloning. HTML attribute events are duplicated as they are for the DOM Core cloneNode method. HTML id attributes are also cloned, which can lead to an invalid document through cloning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eeab43af82664114242de2b66bd33dfdfc8eec7" translate="yes" xml:space="preserve">
          <source>Event Listeners added using DOM Events are not retained during extraction. HTML attribute events are retained or duplicated as they are for the &lt;a href=&quot;../node/clonenode&quot;&gt;&lt;code&gt;Node.cloneNode()&lt;/code&gt;&lt;/a&gt; method. HTML id attributes are also cloned, which can lead to an invalid document if a partially-selected node is extracted and appended to the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b208802283432c22529c314b8dbed2f69185bcf8" translate="yes" xml:space="preserve">
          <source>Event Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f93b7204ac2be0fcbb6f53ca537690fc863511" translate="yes" xml:space="preserve">
          <source>Event developer guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b451882162cdd2a12fe648a78b76daf34bafd9" translate="yes" xml:space="preserve">
          <source>Event firing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ae03084a54979341aa11b3c27359078e110f50" translate="yes" xml:space="preserve">
          <source>Event handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612610db974b13c2df3c38608e4a3848b8893cfa" translate="yes" xml:space="preserve">
          <source>Event handler event type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d0a0bc46dabda5a6dbcf0a2f18e3e9acbc27ae7" translate="yes" xml:space="preserve">
          <source>Event handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0877c1774cb15b16996a2c0bb2d8889f0379891" translate="yes" xml:space="preserve">
          <source>Event handlers are registered for all four touch event types. The &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchcancel&quot;&gt;touchcancel&lt;/a&gt;&lt;/code&gt; event types use the same handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0859d8ffcdf1007ee1044bc462fd18741af79a62" translate="yes" xml:space="preserve">
          <source>Event handlers are registered for the following pointer events: &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointermove&quot;&gt;pointermove&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt;. The handler for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt; is used for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerout&quot;&gt;pointerout&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerleave&quot;&gt;pointerleave&lt;/a&gt;&lt;/code&gt; events since these four events have the same semantics in this application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952c2b720b54e1653923493b5d6704f38fb59dc5" translate="yes" xml:space="preserve">
          <source>Event handlers are registered for the following pointer events: &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointermove&quot;&gt;pointermove&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt;. The handler for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt; is used for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerout&quot;&gt;pointerout&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerleave&quot;&gt;pointerleave&lt;/a&gt;&lt;/code&gt; events, since these four events have the same semantics in this application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6042a8ff1feb19b415251df663b898ab01d99531" translate="yes" xml:space="preserve">
          <source>Event handlers implemented from elsewhere</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b67c28abab8291903c7863299dd8108079b66a" translate="yes" xml:space="preserve">
          <source>Event handlers may be attached to various objects including DOM elements, document, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects&quot;&gt;window object&lt;/a&gt;, etc. When an event occurs, an event object is created and passed sequentially to the event listeners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba019befe4a9282a26807b18e83975f3219f8cf9" translate="yes" xml:space="preserve">
          <source>Event handlers on documents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9819e348921a160adc4d1c317b37b6b9d4398af" translate="yes" xml:space="preserve">
          <source>Event handlers on elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8751d34a9e22e79955e55593b0e300ed773d28d8" translate="yes" xml:space="preserve">
          <source>Event listener</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9189404e4dd7be651cb10e9511ebd641ce0f4a" translate="yes" xml:space="preserve">
          <source>Event listener with an arrow function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c79df145543958dabbbeadb9c8c622552f6904" translate="yes" xml:space="preserve">
          <source>Event listener with anonymous function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c619c8d6ba2035f81d9f010c08ec0b1177929e5" translate="yes" xml:space="preserve">
          <source>Event logging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e10d77c1933bff4e0983cac1331b5eaa79948b7" translate="yes" xml:space="preserve">
          <source>Event name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d6baf4161886700acc98681916f73524cf345e" translate="yes" xml:space="preserve">
          <source>Event objects of &lt;code&gt;onmessage&lt;/code&gt; event handers are of type &lt;a href=&quot;../messageevent&quot;&gt;&lt;code&gt;MessageEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa6e94e2a2fc33bec8ee80f72d5a27b2c2b2e2de" translate="yes" xml:space="preserve">
          <source>Event order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f92fb7f616b0bf1fd3e2c1de0d99602db302d0" translate="yes" xml:space="preserve">
          <source>Event phase constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e0983fa62efde52adab45b415d2a974e716db9" translate="yes" xml:space="preserve">
          <source>Event properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0846683a028465212c5941c9b5885957770d38" translate="yes" xml:space="preserve">
          <source>Event stream format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf78fbc22886b279da27e76241fe0a0abf6cc62a" translate="yes" xml:space="preserve">
          <source>Event type strings suitable for passing to &lt;code&gt;createEvent()&lt;/code&gt; are listed in the &lt;a href=&quot;https://dom.spec.whatwg.org/#dom-document-createevent&quot;&gt;DOM standard &amp;mdash; see the table in step 2&lt;/a&gt;. Bear in mind that most event objects now have constructors, which are the modern recommended way to create event object instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b420fa0967edbd1771a21fd5ff395c2bbc2e71c" translate="yes" xml:space="preserve">
          <source>Event types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58cae1215f7e17640e0f73e8a031c4c158258e29" translate="yes" xml:space="preserve">
          <source>Event types and Global Event Handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b8e96c1acc374cca5693de5ac6219c1ee6306b" translate="yes" xml:space="preserve">
          <source>Event-based version:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010d2274d5c8a8dc42f202e3e7e60c0cd9381a74" translate="yes" xml:space="preserve">
          <source>Event.action</source>
          <target state="translated">Event.action</target>
        </trans-unit>
        <trans-unit id="11fda825621a435a138370694cff59e527cf1dcc" translate="yes" xml:space="preserve">
          <source>Event.altKey</source>
          <target state="translated">Event.altKey</target>
        </trans-unit>
        <trans-unit id="73190004597c8e45afe41a8487acdcba77dbce23" translate="yes" xml:space="preserve">
          <source>Event.animationName</source>
          <target state="translated">Event.animationName</target>
        </trans-unit>
        <trans-unit id="c1da9504a9ce312c3bef0c40714e4b56afa5f24a" translate="yes" xml:space="preserve">
          <source>Event.bubbles</source>
          <target state="translated">Event.bubbles</target>
        </trans-unit>
        <trans-unit id="8d1365c9fd1e13f2209e71b61d64a8a94c0f68fd" translate="yes" xml:space="preserve">
          <source>Event.cancelBubble</source>
          <target state="translated">Event.cancelBubble</target>
        </trans-unit>
        <trans-unit id="8644137036eb0f36af2b3e33215d4b98bab64812" translate="yes" xml:space="preserve">
          <source>Event.cancelable</source>
          <target state="translated">Event.cancelable</target>
        </trans-unit>
        <trans-unit id="03afc334297a545e79d26be4388413f5138d3c63" translate="yes" xml:space="preserve">
          <source>Event.client</source>
          <target state="translated">Event.client</target>
        </trans-unit>
        <trans-unit id="06e375b8c6e788689f466f971917514e5aeeecd4" translate="yes" xml:space="preserve">
          <source>Event.clientId</source>
          <target state="translated">Event.clientId</target>
        </trans-unit>
        <trans-unit id="4807742d8c491de42f2469b3617d6bcf12c4ada3" translate="yes" xml:space="preserve">
          <source>Event.clipboardData</source>
          <target state="translated">Event.clipboardData</target>
        </trans-unit>
        <trans-unit id="df132cc74a7de88c1f38d338df5b6f2cb370015d" translate="yes" xml:space="preserve">
          <source>Event.code</source>
          <target state="translated">Event.code</target>
        </trans-unit>
        <trans-unit id="609b2f5bd8b52edc622c780d21bd1575f08b049d" translate="yes" xml:space="preserve">
          <source>Event.composed</source>
          <target state="translated">Event.composed</target>
        </trans-unit>
        <trans-unit id="de113f45c183ff00cf1fe4c45f09c338c3ca2816" translate="yes" xml:space="preserve">
          <source>Event.composedPath</source>
          <target state="translated">Event.composedPath</target>
        </trans-unit>
        <trans-unit id="4764f3deb584f9643187f7ae76d675c950817e06" translate="yes" xml:space="preserve">
          <source>Event.constructor</source>
          <target state="translated">Event.constructor</target>
        </trans-unit>
        <trans-unit id="e41825d00365bf0ef4c973fe662acbded912022f" translate="yes" xml:space="preserve">
          <source>Event.ctrlKey</source>
          <target state="translated">Event.ctrlKey</target>
        </trans-unit>
        <trans-unit id="87c667128ad3ed18d3ccb1e7b883833b074a7be0" translate="yes" xml:space="preserve">
          <source>Event.currentTarget</source>
          <target state="translated">Event.currentTarget</target>
        </trans-unit>
        <trans-unit id="fe350065606f2b3437d1e9ad30f03aff08a273fe" translate="yes" xml:space="preserve">
          <source>Event.data</source>
          <target state="translated">Event.data</target>
        </trans-unit>
        <trans-unit id="fb4e7b85b8fdfe5db137394060f9cf14697c1bd7" translate="yes" xml:space="preserve">
          <source>Event.defaultPrevented</source>
          <target state="translated">Event.defaultPrevented</target>
        </trans-unit>
        <trans-unit id="39bc5d77828157bde0db9904e7269baa81b32e3e" translate="yes" xml:space="preserve">
          <source>Event.elapsedTime</source>
          <target state="translated">Event.elapsedTime</target>
        </trans-unit>
        <trans-unit id="cc261cec1715bd9c8127aec730b3b8d660507d6d" translate="yes" xml:space="preserve">
          <source>Event.eventPhase</source>
          <target state="translated">Event.eventPhase</target>
        </trans-unit>
        <trans-unit id="97552c41b6755041db621d97f8214d45b560b084" translate="yes" xml:space="preserve">
          <source>Event.getModifierState</source>
          <target state="translated">Event.getModifierState</target>
        </trans-unit>
        <trans-unit id="84fe0c00b6e25fd1f69d053fbf506d3c21c402ce" translate="yes" xml:space="preserve">
          <source>Event.initAnimationEvent</source>
          <target state="translated">Event.initAnimationEvent</target>
        </trans-unit>
        <trans-unit id="9129170a7060a79d7d77d4272ca66bc290bb5498" translate="yes" xml:space="preserve">
          <source>Event.isComposing</source>
          <target state="translated">Event.isComposing</target>
        </trans-unit>
        <trans-unit id="174c2aec64222b9de7301c16b3ba22dd81811442" translate="yes" xml:space="preserve">
          <source>Event.isReload</source>
          <target state="translated">Event.isReload</target>
        </trans-unit>
        <trans-unit id="ec7babfcc6d5bbdf0945ca9de38673a6079549d5" translate="yes" xml:space="preserve">
          <source>Event.isTrusted</source>
          <target state="translated">Event.isTrusted</target>
        </trans-unit>
        <trans-unit id="3cdf4632e33f8b27371f997a7988819d60dcdb83" translate="yes" xml:space="preserve">
          <source>Event.key</source>
          <target state="translated">Event.key</target>
        </trans-unit>
        <trans-unit id="a07a98e34b828a703924b5d5ca9bb439534d1f8a" translate="yes" xml:space="preserve">
          <source>Event.location</source>
          <target state="translated">Event.location</target>
        </trans-unit>
        <trans-unit id="cd46ed506b804070537ae2cc2c58b5509a634a77" translate="yes" xml:space="preserve">
          <source>Event.metaKey</source>
          <target state="translated">Event.metaKey</target>
        </trans-unit>
        <trans-unit id="b44c221bf4c78d12faffb2263ba5300182af75e0" translate="yes" xml:space="preserve">
          <source>Event.navigationPreload</source>
          <target state="translated">Event.navigationPreload</target>
        </trans-unit>
        <trans-unit id="c251bdbca3660c52dfbef0b542a707887c097b05" translate="yes" xml:space="preserve">
          <source>Event.notification</source>
          <target state="translated">Event.notification</target>
        </trans-unit>
        <trans-unit id="5fcd4243c0aef0c256f532041b9359f7fcc74931" translate="yes" xml:space="preserve">
          <source>Event.preventDefault</source>
          <target state="translated">Event.preventDefault</target>
        </trans-unit>
        <trans-unit id="8ba01a6897b39f76db8009d253ec5f29215ee13e" translate="yes" xml:space="preserve">
          <source>Event.pseudoElement</source>
          <target state="translated">Event.pseudoElement</target>
        </trans-unit>
        <trans-unit id="3a365b8135f981133ce6dbb449d09b4a69ba89f1" translate="yes" xml:space="preserve">
          <source>Event.repeat</source>
          <target state="translated">Event.repeat</target>
        </trans-unit>
        <trans-unit id="6dc70ab78252c4ead7be4145875fc6133e0ba3b3" translate="yes" xml:space="preserve">
          <source>Event.request</source>
          <target state="translated">Event.request</target>
        </trans-unit>
        <trans-unit id="4ec00df863451d4ac330d72f6bfe72b92d7de508" translate="yes" xml:space="preserve">
          <source>Event.respondWith</source>
          <target state="translated">Event.respondWith</target>
        </trans-unit>
        <trans-unit id="eb895bd6ef8d01c68eda445e4742037e9f357c2b" translate="yes" xml:space="preserve">
          <source>Event.returnValue</source>
          <target state="translated">Event.returnValue</target>
        </trans-unit>
        <trans-unit id="1f364efb81cbf4914ffeb05257da6a4ff6cba498" translate="yes" xml:space="preserve">
          <source>Event.shiftKey</source>
          <target state="translated">Event.shiftKey</target>
        </trans-unit>
        <trans-unit id="819b2728e53fe6b20872a2cabfd55ef56959a525" translate="yes" xml:space="preserve">
          <source>Event.srcElement</source>
          <target state="translated">Event.srcElement</target>
        </trans-unit>
        <trans-unit id="df60ec455dff9451a93e6249219527da33c1fa3d" translate="yes" xml:space="preserve">
          <source>Event.stopImmediatePropagation</source>
          <target state="translated">Event.stopImmediatePropagation</target>
        </trans-unit>
        <trans-unit id="c29d6cf539f3ffa631d158e7b3bd714ad4c4230b" translate="yes" xml:space="preserve">
          <source>Event.stopPropagation</source>
          <target state="translated">Event.stopPropagation</target>
        </trans-unit>
        <trans-unit id="dd2f4e23529c0be7de63d882c7723f90e355d664" translate="yes" xml:space="preserve">
          <source>Event.target</source>
          <target state="translated">Event.target</target>
        </trans-unit>
        <trans-unit id="57f9d94501943374eb6bc0767feb6134b923315d" translate="yes" xml:space="preserve">
          <source>Event.timeStamp</source>
          <target state="translated">Event.timeStamp</target>
        </trans-unit>
        <trans-unit id="123e69bf469b41fca5245ce3ea107f384c171482" translate="yes" xml:space="preserve">
          <source>Event.type</source>
          <target state="translated">Event.type</target>
        </trans-unit>
        <trans-unit id="e65b5030c815da244650ebfcde13f77fadd98551" translate="yes" xml:space="preserve">
          <source>EventHandler &lt;strong&gt;getEventHandler&lt;/strong&gt;(DOMString type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ab475c99051d3efbecc22edfbc3a15c05ee7d13" translate="yes" xml:space="preserve">
          <source>EventHandlers</source>
          <target state="translated">EventHandlers</target>
        </trans-unit>
        <trans-unit id="46f261fa0debaee5340a3ad3e5a24f9a3d9c08dd" translate="yes" xml:space="preserve">
          <source>EventHandlers.onafterprint</source>
          <target state="translated">EventHandlers.onafterprint</target>
        </trans-unit>
        <trans-unit id="beacbfcd33655ad670eea13b19319828917a1cad" translate="yes" xml:space="preserve">
          <source>EventHandlers.onbeforeprint</source>
          <target state="translated">EventHandlers.onbeforeprint</target>
        </trans-unit>
        <trans-unit id="64f52a5137e0fd8734a4b57437d83b1d2ad351f9" translate="yes" xml:space="preserve">
          <source>EventHandlers.onbeforeunload</source>
          <target state="translated">EventHandlers.onbeforeunload</target>
        </trans-unit>
        <trans-unit id="3620c68525d85dee6076372a3587995c03f0c01d" translate="yes" xml:space="preserve">
          <source>EventHandlers.onhashchange</source>
          <target state="translated">EventHandlers.onhashchange</target>
        </trans-unit>
        <trans-unit id="d313a8edb9a0ef300d6c75e7a7be74177b67a391" translate="yes" xml:space="preserve">
          <source>EventHandlers.onlanguagechange</source>
          <target state="translated">EventHandlers.onlanguagechange</target>
        </trans-unit>
        <trans-unit id="5ced4c2a3c48d1ada8e8c1824282c15529257e0a" translate="yes" xml:space="preserve">
          <source>EventHandlers.onmessage</source>
          <target state="translated">EventHandlers.onmessage</target>
        </trans-unit>
        <trans-unit id="b83a67634cfc4a985b99442cc1d7d308e833f188" translate="yes" xml:space="preserve">
          <source>EventHandlers.onmessageerror</source>
          <target state="translated">EventHandlers.onmessageerror</target>
        </trans-unit>
        <trans-unit id="3015884c7e72dc8b877fa0e826126ab395aaaf35" translate="yes" xml:space="preserve">
          <source>EventHandlers.onpopstate</source>
          <target state="translated">EventHandlers.onpopstate</target>
        </trans-unit>
        <trans-unit id="a7c539380eeb9e0f6683ddba9c8b34c707412e4a" translate="yes" xml:space="preserve">
          <source>EventHandlers.onrejectionhandled</source>
          <target state="translated">EventHandlers.onrejectionhandled</target>
        </trans-unit>
        <trans-unit id="4274e9cee47bc049e4ec0d635ac230aa1298e518" translate="yes" xml:space="preserve">
          <source>EventHandlers.onstorage</source>
          <target state="translated">EventHandlers.onstorage</target>
        </trans-unit>
        <trans-unit id="46b23cf0984c5ace1d1eb114ad242f5ee8817be7" translate="yes" xml:space="preserve">
          <source>EventHandlers.onunhandledrejection</source>
          <target state="translated">EventHandlers.onunhandledrejection</target>
        </trans-unit>
        <trans-unit id="b8682e055af98f975788752caa32b3d6a0917664" translate="yes" xml:space="preserve">
          <source>EventHandlers.onunload</source>
          <target state="translated">EventHandlers.onunload</target>
        </trans-unit>
        <trans-unit id="0df10d5eb9f31c564291131f6209eb2538b12219" translate="yes" xml:space="preserve">
          <source>EventListener</source>
          <target state="translated">EventListener</target>
        </trans-unit>
        <trans-unit id="1dae0f8263d7c03c612f176a364e60c48447d642" translate="yes" xml:space="preserve">
          <source>EventListener.handleEvent</source>
          <target state="translated">EventListener.handleEvent</target>
        </trans-unit>
        <trans-unit id="791f9bdf4b7dfc83c7a653139354dc01454b069a" translate="yes" xml:space="preserve">
          <source>EventSource</source>
          <target state="translated">EventSource</target>
        </trans-unit>
        <trans-unit id="9c226f216860fd44fabb179faa2152be4c06fe2b" translate="yes" xml:space="preserve">
          <source>EventSource polyfill for Node.js</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e49117f4b787a980712b530787f3bc3fadad2a1" translate="yes" xml:space="preserve">
          <source>EventSource.close</source>
          <target state="translated">EventSource.close</target>
        </trans-unit>
        <trans-unit id="358aff62fd9ed09114e3cc039aa5e52b7bb17350" translate="yes" xml:space="preserve">
          <source>EventSource.constructor</source>
          <target state="translated">EventSource.constructor</target>
        </trans-unit>
        <trans-unit id="6e4401b8caad653e781c25061131261a68e2ee05" translate="yes" xml:space="preserve">
          <source>EventSource.onerror</source>
          <target state="translated">EventSource.onerror</target>
        </trans-unit>
        <trans-unit id="9fb90d65c39b9535bc732386abf24a05a2c19222" translate="yes" xml:space="preserve">
          <source>EventSource.onmessage</source>
          <target state="translated">EventSource.onmessage</target>
        </trans-unit>
        <trans-unit id="3d42cdfa218ef55c5da9026a760450985dbc1abb" translate="yes" xml:space="preserve">
          <source>EventSource.onopen</source>
          <target state="translated">EventSource.onopen</target>
        </trans-unit>
        <trans-unit id="5c03cbb582b756bddd73c812a6d92a2924e17e0c" translate="yes" xml:space="preserve">
          <source>EventSource.readyState</source>
          <target state="translated">EventSource.readyState</target>
        </trans-unit>
        <trans-unit id="46de1406433970f31f382e12ca4dc4d3b8f8c89c" translate="yes" xml:space="preserve">
          <source>EventSource.url</source>
          <target state="translated">EventSource.url</target>
        </trans-unit>
        <trans-unit id="f84214e80ec58bcfda34625fb07d5ad45ca6cad2" translate="yes" xml:space="preserve">
          <source>EventSource.withCredentials</source>
          <target state="translated">EventSource.withCredentials</target>
        </trans-unit>
        <trans-unit id="06d2da8cd620cdca5a8c4a25bc54d444bda9ad32" translate="yes" xml:space="preserve">
          <source>EventTarget</source>
          <target state="translated">EventTarget</target>
        </trans-unit>
        <trans-unit id="6d4ffbca6b91b1643d4b05761ec14cbb04af18ca" translate="yes" xml:space="preserve">
          <source>EventTarget.addEventListener</source>
          <target state="translated">EventTarget.addEventListener</target>
        </trans-unit>
        <trans-unit id="e0b35aa531643815938b1e656d808a8b16c928c0" translate="yes" xml:space="preserve">
          <source>EventTarget.constructor</source>
          <target state="translated">EventTarget.constructor</target>
        </trans-unit>
        <trans-unit id="311ed0d15f855c9bf158776821ea8e5186c88b75" translate="yes" xml:space="preserve">
          <source>EventTarget.dispatchEvent</source>
          <target state="translated">EventTarget.dispatchEvent</target>
        </trans-unit>
        <trans-unit id="2cc889582fda3fdb346b0115ee945f1ce6d494cd" translate="yes" xml:space="preserve">
          <source>EventTarget.removeEventListener</source>
          <target state="translated">EventTarget.removeEventListener</target>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="41a6f9c17dbb562b388c7103b1adb603b698bfec" translate="yes" xml:space="preserve">
          <source>Events affecting text tracks are sent to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList&quot;&gt;&lt;code&gt;TextTrackList&lt;/code&gt;&lt;/a&gt; object indicated by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/textTracks&quot;&gt;&lt;code&gt;HTMLMediaElement.textTracks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f11f840d77e192a73a6b3a63f214feaa059c296" translate="yes" xml:space="preserve">
          <source>Events and the DOM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b9667ab96655b82ea8146628f143895b2c5ee2" translate="yes" xml:space="preserve">
          <source>Events based on &lt;code&gt;TrackEvent&lt;/code&gt; are always sent to one of the media track list types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69fef17d379795cd236d3576f2373c2457c82931" translate="yes" xml:space="preserve">
          <source>Events handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7a9c5d5aa24f60452b50e86d7a2e1872e48568" translate="yes" xml:space="preserve">
          <source>Events involving audio tracks are always sent to the &lt;a href=&quot;audiotracklist&quot;&gt;&lt;code&gt;AudioTrackList&lt;/code&gt;&lt;/a&gt; specified in &lt;a href=&quot;htmlmediaelement/audiotracks&quot;&gt;&lt;code&gt;HTMLMediaElement.audioTracks&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0dbad40135c598eed1846c42b9dc3990a97fea9" translate="yes" xml:space="preserve">
          <source>Events involving video tracks are always sent to the &lt;a href=&quot;videotracklist&quot;&gt;&lt;code&gt;VideoTrackList&lt;/code&gt;&lt;/a&gt; found in &lt;a href=&quot;htmlmediaelement/videotracks&quot;&gt;&lt;code&gt;HTMLMediaElement.videoTracks&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a53694d3bf0a581755352cff7d06267d5310812" translate="yes" xml:space="preserve">
          <source>Events'</source>
          <target state="translated">Events'</target>
        </trans-unit>
        <trans-unit id="f5324300813344a0b8fd3c42ca00845e0378e164" translate="yes" xml:space="preserve">
          <source>Events: &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextlost&quot;&gt;webglcontextlost&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextrestored&quot;&gt;webglcontextrestored&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextcreationerror&quot;&gt;webglcontextcreationerror&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a611cb2c4d44290e00fc4e4beee88196ef8673ab" translate="yes" xml:space="preserve">
          <source>Every &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; and platform may have its own scenarios that can trigger the &lt;code&gt;&quot;disconnected&quot;&lt;/code&gt; state. Possible causes include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821b0ee512a0a2984b8d162bdeb2fd17688b8107" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;SVGAngle&lt;/code&gt; object operates in one of two modes. It can:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e8f90b86f4cd24b7cc1bacd77119d252dc7370" translate="yes" xml:space="preserve">
          <source>Every ICE transport used by the connection is either in use (state &lt;code&gt;&quot;connected&quot;&lt;/code&gt; or &lt;code&gt;&quot;completed&quot;&lt;/code&gt;) or is closed (state &lt;code&gt;&quot;closed&quot;&lt;/code&gt;); in addition, at least one transport is either &lt;code&gt;&quot;connected&quot;&lt;/code&gt; or &lt;code&gt;&quot;completed&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e92881adfc839caf91fdd52ad01470d4f9cf8c" translate="yes" xml:space="preserve">
          <source>Every call to this method on the same transaction object, with the same name, returns the same &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; instance. If this method is called on a different transaction object, a different &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; instance is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c1b89676b3b303ea61c3b7a457814bf5971a65" translate="yes" xml:space="preserve">
          <source>Every method and property listed in this document has its own reference page and each reference page either directly includes an example of the interface or has a link to an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4f08446942953817ce1d07c10aab18e333d389" translate="yes" xml:space="preserve">
          <source>Every object store must have a name that is unique within its database. The object store can optionally have a &lt;em&gt;&lt;a href=&quot;#gloss_keygenerator&quot;&gt;key generator&lt;/a&gt;&lt;/em&gt; and a &lt;em&gt;&lt;a href=&quot;#gloss_keypath&quot;&gt;key path&lt;/a&gt;&lt;/em&gt;. If the object store has a key path, it is using &lt;em&gt;&lt;a href=&quot;#gloss_inline_key&quot;&gt;in-line keys&lt;/a&gt;&lt;/em&gt;; otherwise, it is using &lt;em&gt;&lt;a href=&quot;#gloss_outofline_key&quot;&gt;out-of-line keys&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8ab2f165bd805a2623ab03e4e99751c6747924" translate="yes" xml:space="preserve">
          <source>Every pixel in the frame's image data that is found that is within the parameters that are considered to be part of the green screen has its alpha value replaced with a zero, indicating that the pixel is entirely transparent. As a result, the final image has the entire green screen area 100% transparent, so that when it's drawn into the destination context in line 13, the result is an overlay onto the static backdrop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f46a3abc64419ab044999a328514b5b5c041eb" translate="yes" xml:space="preserve">
          <source>Every request starts in the &lt;code&gt;pending&lt;/code&gt; state. The state changes to &lt;code&gt;done&lt;/code&gt; when the request completes successfully or when an error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8391d34a539daca4b91b1fa21fb1fe3aa09075b" translate="yes" xml:space="preserve">
          <source>Every time the animation leaves the &lt;code&gt;finished&lt;/code&gt; play state (that is, when it starts playing again), a new &lt;code&gt;Promise&lt;/code&gt; is created for this property. The new &lt;code&gt;Promise&lt;/code&gt; will resolve once the new animation sequence has completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09510231e88d1c59d7b0a011f84b5f225f298f34" translate="yes" xml:space="preserve">
          <source>Every time the element inserted in the slot changes, we log a report to the console saying which slot has changed, and what the new node inside the slot is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01154c23507ba0f519c717e5c0d8379807442b4" translate="yes" xml:space="preserve">
          <source>Everything is triggered when the user clicks the Start button, which causes the &lt;code&gt;decodeTechnoStuff()&lt;/code&gt; function to be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af043cc6b83b90f256e0a27af87e17c969d17fa" translate="yes" xml:space="preserve">
          <source>Everything that's drawn after creating the clipping path will only appear inside that path. You can see this clearly in the linear gradient that's drawn next. After this a set of 50 randomly positioned and scaled stars is drawn, using the custom &lt;code&gt;drawStar()&lt;/code&gt; function. Again the stars only appear inside the defined clipping path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9865176f129271f4ad1942683e0d930ac344ce26" translate="yes" xml:space="preserve">
          <source>Everything within the Web Audio API is based around the concept of an audio graph, which is made up of nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7f31392393c110f965005a9425fb288632b77a" translate="yes" xml:space="preserve">
          <source>Examining and controlling the recorder status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037f344a3aac593d31317a7060388ffbebfeded2" translate="yes" xml:space="preserve">
          <source>Examining potential input sources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1e7fbc2d312f1e9b91c5d68d60ad34805459a9" translate="yes" xml:space="preserve">
          <source>Examining the results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85590c69d53b1ade3bd43ac9b7c2b7a6e1b68fed" translate="yes" xml:space="preserve">
          <source>Examining the state of the system to determine resource availability in order to generate the offer failed for some reason.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="dd6313aa0b85339289a4f15d1e7c3b8b9254673a" translate="yes" xml:space="preserve">
          <source>Example &quot;New Window&quot; Icons &amp;amp; Cursors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74796e57efe829046cbfea34291e9fecb34ee974" translate="yes" xml:space="preserve">
          <source>Example #1: Advanced passing JSON Data and creating a switching system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0274a5d76366b6c79d9ef45d0bdd72a3ca1f5c" translate="yes" xml:space="preserve">
          <source>Example #1: Browser detect and return a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16085bfcff910ee044126a489a209ae5188a7b9" translate="yes" xml:space="preserve">
          <source>Example #1: Navigate to a new page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2393338ee7f7a3539339243c62f2bfd5927726" translate="yes" xml:space="preserve">
          <source>Example #1: Simple usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae619afbb4455bd633c2a8a4c493ed11f054782" translate="yes" xml:space="preserve">
          <source>Example #1: tooltips</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bbde99b96b224a57eed7b691dd674d33095feb8" translate="yes" xml:space="preserve">
          <source>Example #2: Browser detect and return an index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840040802d60e7a413b815d5b3b376f174903a71" translate="yes" xml:space="preserve">
          <source>Example #2: Force reloading the current page from the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1015f3cdd83dfb95c58383341069d58f64f89fc" translate="yes" xml:space="preserve">
          <source>Example #2: Get a sample cookie named &lt;em&gt;test2&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d34b994c0525f2432ec4d2efd53c4d82a68d326" translate="yes" xml:space="preserve">
          <source>Example #2: Transforming &lt;code&gt;lastModified&lt;/code&gt; into a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7428c2128a7c3fc9b70144d3c693555ada1ec629" translate="yes" xml:space="preserve">
          <source>Example #2: draggable elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02eb4c76819c85727cd1bdf15ff4bec03ef4fb69" translate="yes" xml:space="preserve">
          <source>Example #3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96a36d5e77af653194b308ecaeb28309dd1ccebc" translate="yes" xml:space="preserve">
          <source>Example #3: Do something only once</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d688d79d1a7e3882734cbbe2db13b61656606d" translate="yes" xml:space="preserve">
          <source>Example #3: Transforming &lt;code&gt;lastModified&lt;/code&gt; into number of milliseconds since January 1, 1970, 00:00:00, local time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b477b2594b58f3a7e100358ee8d53ff70e4e1584" translate="yes" xml:space="preserve">
          <source>Example #4: Display the properties of the current URL in an alert dialog:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4cc11b9136673b84e07e6be10011ff934fcf65" translate="yes" xml:space="preserve">
          <source>Example #4: Reset the previous cookie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5f26d3d411b8e8ed55d4e19404ec1a5e124fcb" translate="yes" xml:space="preserve">
          <source>Example #5: Check a cookie existence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148be4d6f2ffad90f8366be3b44fd4b6dde8e188" translate="yes" xml:space="preserve">
          <source>Example #5: Do something only once &amp;ndash; &lt;em&gt;a general library&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6298e3756c87962eb267fe4c51cc3a21169110fe" translate="yes" xml:space="preserve">
          <source>Example #5: Send a string of data to the server by modifying the &lt;code&gt;search&lt;/code&gt; property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4bc439cd4f8993bd6447e3f092ffafedf5e4db" translate="yes" xml:space="preserve">
          <source>Example #6: Check that a cookie has a specific value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e56404716c80fdbf71dc20c1a781ed1feb646387" translate="yes" xml:space="preserve">
          <source>Example #6: Using bookmarks without changing the &lt;code&gt;hash&lt;/code&gt; property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcd3f46d09547b62bf07ba9b2943c95d53ddae3" translate="yes" xml:space="preserve">
          <source>Example 1</source>
          <target state="translated">例1</target>
        </trans-unit>
        <trans-unit id="cf21fe73953be14af7a42d6b30ae8f8e3d649fe4" translate="yes" xml:space="preserve">
          <source>Example 1 - Simplest possible WEBVTT file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9912ade8420b6187c469df0e519682d8fe00d1ba" translate="yes" xml:space="preserve">
          <source>Example 10 - Basic cue timing examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177cb143703f9e8434249d8610065cd3634161ef" translate="yes" xml:space="preserve">
          <source>Example 11 - Overlapping cue timing examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb1a96e6d9dda605d4e4d1c3afe00f4636c0952" translate="yes" xml:space="preserve">
          <source>Example 12 - Karaoke style text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bcd6707fd58e63b1e2d2cd0e2fd7efbe9854a2c" translate="yes" xml:space="preserve">
          <source>Example 12 - Non-overlapping cue timing examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd62014e3f3a83296b4c2262aea59d1f8d6e9c9a" translate="yes" xml:space="preserve">
          <source>Example 13 - Cue setting examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df476161826889fdefbd910d655c74f0a7780cb" translate="yes" xml:space="preserve">
          <source>Example 14 - Class tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec96661e3421be1e0e64c53cddb3c9d03cbc44b" translate="yes" xml:space="preserve">
          <source>Example 15 - Italics tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62f0585b8d3f1aaa14f2369d80e62e0a60b8874" translate="yes" xml:space="preserve">
          <source>Example 16 - Bold tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c22ff4297b0a126797e2867440b8db075eff64" translate="yes" xml:space="preserve">
          <source>Example 17 - Underline tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ab4d98f315956e86d659bd50bbdaeb932c8720" translate="yes" xml:space="preserve">
          <source>Example 18 - Ruby tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5975dba575990a6073dd9e23858e00f0522c9e1f" translate="yes" xml:space="preserve">
          <source>Example 19 - Ruby text tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322099f9797a7e79e15efe97ca7d757b0bdd0563" translate="yes" xml:space="preserve">
          <source>Example 1: Basic syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f042753b1e2fa35c55b036802262439e66137d" translate="yes" xml:space="preserve">
          <source>Example 1: Filter the digitation in a form field through a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt;regular expression&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76cc811e2a006f076e1fa8166f5aa25b33ef6744" translate="yes" xml:space="preserve">
          <source>Example 1: The HTML creates three paragraphs with a &lt;code&gt;span&lt;/code&gt; inside, embedded in &lt;code&gt;div&lt;/code&gt; blocks. Client rects are painted for the paragraph in the second and for the &lt;code&gt;span &lt;/code&gt;element in the third block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8237de9d9e854177c06e28aa9faef46f0742f00" translate="yes" xml:space="preserve">
          <source>Example 1: height and width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c56ea49918b9baed94cf4bc0ee9f324efc8841a" translate="yes" xml:space="preserve">
          <source>Example 2</source>
          <target state="translated">例2</target>
        </trans-unit>
        <trans-unit id="2b3ecec518b6f70facf74130b934321d6619db40" translate="yes" xml:space="preserve">
          <source>Example 2 - Very simple WebVTT file with a text header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ab52ecd7722d335f5a9a7cf5e9eadbb4988b3b" translate="yes" xml:space="preserve">
          <source>Example 20 - Voice tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b7a6d8160591515a44f35dbe17a87d442a4f36" translate="yes" xml:space="preserve">
          <source>Example 2: Alternating two colors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c23e45e1649c72c5639198e7b26c6d9314b3139" translate="yes" xml:space="preserve">
          <source>Example 2: Capture the typing of a hidden word</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ddc63bfe39b301dd5dfb747a1d790b91f6bcb0" translate="yes" xml:space="preserve">
          <source>Example 2: Image Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c4199845fd0cca13519f5ddc950b20cbbd6a19" translate="yes" xml:space="preserve">
          <source>Example 2: The HTML creates three ordered lists. Client rects are painted for the &lt;code&gt;ol&lt;/code&gt; in the second and for each &lt;code&gt;li&lt;/code&gt; element in the third block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf4dab701189a344fa5ab06d7b87c11a74e3da0" translate="yes" xml:space="preserve">
          <source>Example 3</source>
          <target state="translated">例3</target>
        </trans-unit>
        <trans-unit id="b3c0bba8775f576bfd28eecdc2d2103bc656fe74" translate="yes" xml:space="preserve">
          <source>Example 3 - Common WebVTT example with a header and cues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8700b6f6a97ccac9be0c994f516983676a7a98" translate="yes" xml:space="preserve">
          <source>Example 3: Manipulating Styles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e8c313fe0d11bc7ed82fb285d67aab1354fc2c" translate="yes" xml:space="preserve">
          <source>Example 3: The HTML creates two tables with a &lt;code&gt;caption&lt;/code&gt;. Client rects are painted for the &lt;code&gt;table&lt;/code&gt; in the second block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a87d7c21044f966357ce293b845a5ca8208cce3" translate="yes" xml:space="preserve">
          <source>Example 3: Typewriter simulation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dab789dce07f8ae0c7299be3513b4672df9fbe3" translate="yes" xml:space="preserve">
          <source>Example 4 - Common WebVTT example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cddd3c5d7a059593b2bcaf4bf2383240dd8c4859" translate="yes" xml:space="preserve">
          <source>Example 4: Using Stylesheets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ef71404e3a13ca08bad548a5fd15908fd1fc67" translate="yes" xml:space="preserve">
          <source>Example 5 - Multi-line comment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00de83a65523eaf959a47cea63e6d31a6e76aa2f" translate="yes" xml:space="preserve">
          <source>Example 5: Event Propagation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce81972fd5af52185c6ff9238cd4fb8688dc4946" translate="yes" xml:space="preserve">
          <source>Example 6 - Common comment usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5aba97056c731c244ad6b599fe7fd4cad2aba1b" translate="yes" xml:space="preserve">
          <source>Example 6: getComputedStyle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba476ffb502a6f30aa430de321a7bff2995b333a" translate="yes" xml:space="preserve">
          <source>Example 7 - Example of a cue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26769892f13571712526f90abaa60ae051ed589" translate="yes" xml:space="preserve">
          <source>Example 7: Displaying Event Object Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d89b9f34744e2cabb93a220a98f833dce512ee" translate="yes" xml:space="preserve">
          <source>Example 8 - Cue identifier from Example 7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4673700119e8123c079878d9e26f75f0eb474f0f" translate="yes" xml:space="preserve">
          <source>Example 8: Using the DOM Table Interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0b18a740737a09bc4d9a53ca54ab0c2eb96148" translate="yes" xml:space="preserve">
          <source>Example 9 - Common usage of identifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c98511144b3d27b2aaa8dd94631072fde5282a" translate="yes" xml:space="preserve">
          <source>Example and sequence of icecandidate events happening:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa8337b8ab148f7cd31ae61a628b89cd4f1663f" translate="yes" xml:space="preserve">
          <source>Example code</source>
          <target state="translated">示例代码</target>
        </trans-unit>
        <trans-unit id="aead0dc28d398a275a9b23e4afce13ba88ffaed7" translate="yes" xml:space="preserve">
          <source>Example code of the interfaces described in this document is included in &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/Web/API/Beacon_API/Using_the_Beacon_API&quot;&gt;Using the Beacon API&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b19c5e2ba65e2f29e769e876f21f6c3905150e" translate="yes" xml:space="preserve">
          <source>Example code of the interfaces described in this document is included in &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/Web/API/Frame_Timing_API/Using_the_Frame_Timing_API&quot;&gt;Using the Frame Timing API&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28c4875f2cb556bf8c1975efe0e8e2bd936f8af" translate="yes" xml:space="preserve">
          <source>Example codes below highlight the usage of main features of the Presentation API: &lt;code&gt;controller.html&lt;/code&gt; implements the controller and &lt;code&gt;presentation.html&lt;/code&gt; implements the presentation. Both pages are served from the domain &lt;code&gt;http://example.org&lt;/code&gt; (&lt;code&gt;http://example.org/controller.html&lt;/code&gt; and &lt;code&gt;http://example.org/presentation.html&lt;/code&gt;). These examples assume that the controlling page is managing one presentation at a time. Please refer to the comments in the code examples for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ae2d9babd179334b54f02b3b779b4dc4b48b64" translate="yes" xml:space="preserve">
          <source>Example data types are &lt;code&gt;text/plain&lt;/code&gt; and &lt;code&gt;text/uri-list&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83335aa7beca535ce4afbb46c79969bcc639a7ce" translate="yes" xml:space="preserve">
          <source>Example for &lt;code&gt;transform&lt;/code&gt; and &lt;code&gt;setTransform&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ed5162bf0e38dc96fcb67be25c63be18525747" translate="yes" xml:space="preserve">
          <source>Example for creating a URL to a typed array using a blob</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f49693fc4cbce38433cc82cfc4ca9df22790f1f" translate="yes" xml:space="preserve">
          <source>Example for extracting data from a Blob</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d524d0d839474e53541fec010195d8187751b89" translate="yes" xml:space="preserve">
          <source>Example in C#:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff8d99ff85262bb80d9645e82b59d40aa10406d" translate="yes" xml:space="preserve">
          <source>Example in Java:</source>
          <target state="translated">Java中的例子。</target>
        </trans-unit>
        <trans-unit id="223b28d3915a1f57356d93a9734d1e4fe2cadb66" translate="yes" xml:space="preserve">
          <source>Example of calling &lt;code&gt;open&lt;/code&gt; with the current specification's &lt;code&gt;version&lt;/code&gt; parameter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430a48cc8ff57a9e756eaf5f69096a57b1a49f57" translate="yes" xml:space="preserve">
          <source>Example of contentDocument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8760b6a45f9012fce859a7c1b98f9f3687f8048d" translate="yes" xml:space="preserve">
          <source>Example of contentWindow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787e608be599aa288c1d57f5150e6700f44249df" translate="yes" xml:space="preserve">
          <source>Example of options usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b894056b65720da2a20ad9a4e26ef0e367237442" translate="yes" xml:space="preserve">
          <source>Example of pushState() method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad1da4409c59e7da46a5d74ba2c8016c7b1d1a4" translate="yes" xml:space="preserve">
          <source>Example of replaceState() method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ad621515c087509a9337406ea94ba32caea367" translate="yes" xml:space="preserve">
          <source>Example reading multiple files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f46fc07ca4791e72888cbe3a1b128980456e6cb0" translate="yes" xml:space="preserve">
          <source>Example showing &lt;code&gt;addressLine&lt;/code&gt; entries for an address in London</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861245b8779c3c0a240081e66f72046983ca7d16" translate="yes" xml:space="preserve">
          <source>Example usage</source>
          <target state="translated">使用示例</target>
        </trans-unit>
        <trans-unit id="0c3658ce75e3771861738ea9983ec6329ef28c5b" translate="yes" xml:space="preserve">
          <source>Example use cases of the Beacon API are logging activity and sending analytics data to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ebaa0a61126b7bc80b116d0b7d8937455f64133" translate="yes" xml:space="preserve">
          <source>Example using &lt;code&gt;bind()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ad54f6cf16bd92f2c2697b5071e5005e3dd6bf" translate="yes" xml:space="preserve">
          <source>Example using the experimental &lt;a href=&quot;../offscreencanvas&quot;&gt;&lt;code&gt;OffscreenCanvas&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146525784a68f39e8bcc0ec7e11498c3b7b402b5" translate="yes" xml:space="preserve">
          <source>Example2</source>
          <target state="translated">Example2</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="4cbfe8c9946e2d912c8c1d3e3f99d582cc23b9ac" translate="yes" xml:space="preserve">
          <source>Example: &quot;status=yes&quot;, &quot;status=1&quot;, and &quot;status&quot; have identical results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e1479f0f868d1151158ee7d01033da4431c83bc" translate="yes" xml:space="preserve">
          <source>Example: A simple line graph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73830bc2987685226525d124a4528ac18e84ef75" translate="yes" xml:space="preserve">
          <source>Example: Constraint exerciser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9170da0147f3e69c72169e931acac770ea5a9d3c" translate="yes" xml:space="preserve">
          <source>Example: Creating a HTML table dynamically (&lt;code&gt;Sample1.html&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e194160d313adef38d7ca5e4fcf60a6e3dc1116" translate="yes" xml:space="preserve">
          <source>Example: Dynamically change images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c150326340c6410274cec97c4249cd762e86af" translate="yes" xml:space="preserve">
          <source>Example: Framing an image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23fe21f9b8ee5f9fd2d67ac006fc3bf27f162257" translate="yes" xml:space="preserve">
          <source>Example: GET</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bfacf982616957d1e747e21c040fbe41c397604" translate="yes" xml:space="preserve">
          <source>Example: HTTP synchronous request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca21c003058d46dc52d017011ace0ea937788e45" translate="yes" xml:space="preserve">
          <source>Example: POST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789b045db3ad4dfb7432d9a258670ef50ba94bd3" translate="yes" xml:space="preserve">
          <source>Example: Setting the background color of a paragraph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1be9fdb331a8afaedbf3676d20be18867e5228e" translate="yes" xml:space="preserve">
          <source>Example: Showing file(s) size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67001536085174cc02649c8e871d755cd926b7a9" translate="yes" xml:space="preserve">
          <source>Example: Showing thumbnails of user-selected images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8b5f0a77628917ed09eff6e60ee3bc7216d991" translate="yes" xml:space="preserve">
          <source>Example: Synchronous HTTP request from a &lt;code&gt;Worker&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b09a59672794d324045034695726747f632bc7d" translate="yes" xml:space="preserve">
          <source>Example: Tiling an image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c419317d0f07b5e66e56fedd9eb7741a5d09441a" translate="yes" xml:space="preserve">
          <source>Example: Uploading a user-selected file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8d3a07026924107c29003fad83ce05cd9fb6a3" translate="yes" xml:space="preserve">
          <source>Example: Using object URLs to display PDF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1439b843bf044cdb58990b4422e681e65f8ff5e" translate="yes" xml:space="preserve">
          <source>Example: Using object URLs to display images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b17ce6d8e10bc7d3bb2fb0870369285d211c28e" translate="yes" xml:space="preserve">
          <source>Example: Using object URLs with other file types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48b14c070cf8cd48de6daf2904993c27859f363" translate="yes" xml:space="preserve">
          <source>Example: creating a standard function to read external files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4805ffe99f1f6101d8e956387e88c2fac715b806" translate="yes" xml:space="preserve">
          <source>Example: send a file to the console log</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0d37466d55096accb2a00d256fefded0b4edaa" translate="yes" xml:space="preserve">
          <source>Example: using a timeout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="a3e15668e63cfd460d9ed667ab059674f049d82a" translate="yes" xml:space="preserve">
          <source>Examples and demos</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c118b43e20620685efab88b03d00398b82ed63" translate="yes" xml:space="preserve">
          <source>Examples by topic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad350041cde8ed7f1a3973f3fd15b1af36a10d93" translate="yes" xml:space="preserve">
          <source>Examples for most canvas APIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bee603981d09139a7b53c952fea66c508498c61" translate="yes" xml:space="preserve">
          <source>Examples from other developers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20049bc069b0a04404c23d571b5e0b56f0660c02" translate="yes" xml:space="preserve">
          <source>Exception</source>
          <target state="translated">Exception</target>
        </trans-unit>
        <trans-unit id="d52b60fb8d9e030b569eaf36a5c2e6a923f43120" translate="yes" xml:space="preserve">
          <source>Exception.code</source>
          <target state="translated">Exception.code</target>
        </trans-unit>
        <trans-unit id="1a49d4ec5fb748cf963ed4074789f50fde5d417c" translate="yes" xml:space="preserve">
          <source>Exception.constructor</source>
          <target state="translated">Exception.constructor</target>
        </trans-unit>
        <trans-unit id="d82b5968ea2258e2b68f588963e2d4c5ccea8e4f" translate="yes" xml:space="preserve">
          <source>Exception.message</source>
          <target state="translated">Exception.message</target>
        </trans-unit>
        <trans-unit id="25d6bb1fad5511ad3c2f72455d02a0d30228eb8f" translate="yes" xml:space="preserve">
          <source>Exception.name</source>
          <target state="translated">Exception.name</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="1440bdec53218d800c4d16ea44faa47b3bfc5bee" translate="yes" xml:space="preserve">
          <source>Exceptions thrown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="890a8c34222037465c20194f7a2b94cf0206b830" translate="yes" xml:space="preserve">
          <source>Exchanging Data Frames</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e83be95204fa855faec588c0f6abb9672a5e12a" translate="yes" xml:space="preserve">
          <source>Exchanging ICE candidates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6d871de119b2bb479829fd241003cc78112c9a" translate="yes" xml:space="preserve">
          <source>Exchanging session descriptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95557e339f5ac099a67e1cbc0227f6d6639cbc69" translate="yes" xml:space="preserve">
          <source>Executed from inside a worker script, the following snippet will log the worker's global scope's origin to the console each time it receives a message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf231998f4c28e5564d4e7113f256818686a668" translate="yes" xml:space="preserve">
          <source>Executes a function after the browser has finished other heavy tasks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16e128e7409c98b9139551ccbd89a9055967357" translate="yes" xml:space="preserve">
          <source>Executes a function only once, even after the refresh of the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4acaf30722c9f495d32969d13b62d2ac38f87d" translate="yes" xml:space="preserve">
          <source>Executes a provided function once for each array element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dee667b4b2251be07809ef517074fca2ca01986" translate="yes" xml:space="preserve">
          <source>Executes a provided function once for each element of &lt;code&gt;KeyboardLayoutMap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2056762fb8a58212322c94f64f5caf390c3f369d" translate="yes" xml:space="preserve">
          <source>Executes a provided function once for each element of &lt;code&gt;StylePropertyMapReadOnly&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad834011963a04c7950cfd9347c592732d003db" translate="yes" xml:space="preserve">
          <source>Executes a provided function once per &lt;code&gt;DOMTokenList&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5725f95d423ce11c0f1ab85bd44926f4f0536994" translate="yes" xml:space="preserve">
          <source>Executes a provided function once per &lt;code&gt;NodeList&lt;/code&gt; element, passing the element as an argument to the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbde4af824f6decc4080315593e538f76ac22c4" translate="yes" xml:space="preserve">
          <source>Executes the function specified by &lt;code&gt;function&lt;/code&gt; in &lt;code&gt;delay&lt;/code&gt; milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20863c83d39b58fdef7224f3c1d865ab1deb9713" translate="yes" xml:space="preserve">
          <source>Exercise</source>
          <target state="translated">Exercise</target>
        </trans-unit>
        <trans-unit id="4dc503dafcf231e8065504c4cd9f19a0dcdfc147" translate="yes" xml:space="preserve">
          <source>Exercises</source>
          <target state="translated">Exercises</target>
        </trans-unit>
        <trans-unit id="02764d85b61ec28183a8e584ecaeb4383294d1af" translate="yes" xml:space="preserve">
          <source>Exercises for the reader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba6c10a0af84c4976e472d9f39f459fb934d2bd" translate="yes" xml:space="preserve">
          <source>Exercising KeyboardEvent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265ee0777e64017dc928a4629d1ae9e9aa5c6558" translate="yes" xml:space="preserve">
          <source>Exits the current inline &lt;a href=&quot;console#Using_groups_in_the_console&quot;&gt;group&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48bcc1a01a7b3c8613102f042026a783e18ea5eb" translate="yes" xml:space="preserve">
          <source>Exits the current inline group in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Web_Console&quot;&gt;Web Console&lt;/a&gt;. See &lt;a href=&quot;../console#Using_groups_in_the_console&quot;&gt;Using groups in the console&lt;/a&gt; in the &lt;a href=&quot;../console&quot;&gt;&lt;code&gt;console&lt;/code&gt;&lt;/a&gt; documentation for details and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c42257048cb21183d02015724adc948cc1519bf" translate="yes" xml:space="preserve">
          <source>Expect the status bar to be present, and code for it. &lt;strong&gt;The status bar will be on by default&lt;/strong&gt; and is 20-25 pixels in height. (...)&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0a5119c94ed1c6dff8b9b698cefc5e207438a9" translate="yes" xml:space="preserve">
          <source>Experiment with the parameters of the perspective matrix and the model matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e350d08141c86b09076fdc9805780844170985" translate="yes" xml:space="preserve">
          <source>Experimental APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20cbad890d76b4efea1de768aa8abbb0cf07de64" translate="yes" xml:space="preserve">
          <source>Experimental Gecko options object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e492052d5e4e58f9ce9fc50ce3793c0f935b170a" translate="yes" xml:space="preserve">
          <source>Experimental, and without specific UI. There are still differences with the latest spec: &lt;a href=&quot;https://bugzil.la/835773&quot;&gt;bug 835773&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32ef340ea4702fd5f41dbe4001671d76174ef71" translate="yes" xml:space="preserve">
          <source>Explanation</source>
          <target state="translated">Explanation</target>
        </trans-unit>
        <trans-unit id="ad19b8f3d03a51a003f8a046a5602c48f2f260e1" translate="yes" xml:space="preserve">
          <source>Explanations about the examples are found in both the main text and in comments within the code. You should read all comments, because more advanced examples could not repeat comments about parts of the code that were previously explained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855e8cf2da3ab745475b79ba3610d53218215192" translate="yes" xml:space="preserve">
          <source>Explicit abort() call from script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a249526df33262720321a53a586b71b5b0122ac0" translate="yes" xml:space="preserve">
          <source>Explicitly starts the flow of messages being dispatched from a service worker to pages under its control (e.g. sent via &lt;a href=&quot;client/postmessage&quot;&gt;&lt;code&gt;Client.postMessage()&lt;/code&gt;&lt;/a&gt;). Can be used to avoid race conditions created when a service worker tries to post a message to a page before that page has actually finished loading an &lt;a href=&quot;serviceworkercontainer/onmessage&quot;&gt;&lt;code&gt;ServiceWorkerContainer.onmessage&lt;/code&gt;&lt;/a&gt; handler to process them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f40b5c37e9f8d52befeffa2ab8d996d4f578a8" translate="yes" xml:space="preserve">
          <source>Exploring the HTML5 Web Audio: visualizing sound</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9cc05b9d8ff25445c8e6113f6eebb42f089999f" translate="yes" xml:space="preserve">
          <source>Exposes methods to request credentials and notify the user agent when interesting events occur such as successful sign in or sign out. This interfaces is accessible from &lt;code&gt;Navigator.credentials&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeda6bbf03122c0db84bfddac20bf136c37d10a7" translate="yes" xml:space="preserve">
          <source>Extend DOM3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41000119b41061f71af6f6683ca7501b027f61b7" translate="yes" xml:space="preserve">
          <source>Extend the &lt;code&gt;Document&lt;/code&gt; interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07186a0b5eeaf1a75d7a63070d34e29cb7579b8f" translate="yes" xml:space="preserve">
          <source>Extend the &lt;code&gt;Document&lt;/code&gt; interface with the &lt;code&gt;visibilityState&lt;/code&gt; and &lt;code&gt;hidden&lt;/code&gt; attributes and the &lt;code&gt;onvisibilitychange&lt;/code&gt; event listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee0d898ad065d06293151a4315e8f5888d72eaa" translate="yes" xml:space="preserve">
          <source>Extend the &lt;code&gt;Element&lt;/code&gt; interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74cf24ee4fcaa2290789f01c178fb9b2a86e969e" translate="yes" xml:space="preserve">
          <source>ExtendableEvent</source>
          <target state="translated">ExtendableEvent</target>
        </trans-unit>
        <trans-unit id="36bb64cabee3d3216f3c5e3e4d419e97203141db" translate="yes" xml:space="preserve">
          <source>ExtendableEvent.constructor</source>
          <target state="translated">ExtendableEvent.constructor</target>
        </trans-unit>
        <trans-unit id="114dc6e0f712af988a4e2042c682eb23ba649e35" translate="yes" xml:space="preserve">
          <source>ExtendableEvent.waitUntil</source>
          <target state="translated">ExtendableEvent.waitUntil</target>
        </trans-unit>
        <trans-unit id="9fcf800a2492c40189831acc59eac3382abfaf22" translate="yes" xml:space="preserve">
          <source>ExtendableMessageEvent</source>
          <target state="translated">ExtendableMessageEvent</target>
        </trans-unit>
        <trans-unit id="6c7d6353c841dd1aa7438ba293d814d581257e28" translate="yes" xml:space="preserve">
          <source>ExtendableMessageEvent.constructor</source>
          <target state="translated">ExtendableMessageEvent.constructor</target>
        </trans-unit>
        <trans-unit id="b8790a04548df5f722db782c51972b4a01a28d20" translate="yes" xml:space="preserve">
          <source>ExtendableMessageEvent.data</source>
          <target state="translated">ExtendableMessageEvent.data</target>
        </trans-unit>
        <trans-unit id="5c9f56fd2ab9a5571c6ec4512b421c745f901401" translate="yes" xml:space="preserve">
          <source>ExtendableMessageEvent.lastEventId</source>
          <target state="translated">ExtendableMessageEvent.lastEventId</target>
        </trans-unit>
        <trans-unit id="62392cd22a7616e4b092e8e3f3203e7b1e8ee19e" translate="yes" xml:space="preserve">
          <source>ExtendableMessageEvent.origin</source>
          <target state="translated">ExtendableMessageEvent.origin</target>
        </trans-unit>
        <trans-unit id="e6ea0a2c49fae985a34335544febd63aa1e36255" translate="yes" xml:space="preserve">
          <source>ExtendableMessageEvent.ports</source>
          <target state="translated">ExtendableMessageEvent.ports</target>
        </trans-unit>
        <trans-unit id="52741b88c52b95f3b7b53e5fe331043d0aba4d34" translate="yes" xml:space="preserve">
          <source>ExtendableMessageEvent.source</source>
          <target state="translated">ExtendableMessageEvent.source</target>
        </trans-unit>
        <trans-unit id="d1eee61b74b52f4de71e68a6781c9a989026713f" translate="yes" xml:space="preserve">
          <source>Extended methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36953a33517acddd1327cea29d117da6816a0145" translate="yes" xml:space="preserve">
          <source>Extended the &lt;a href=&quot;css&quot;&gt;&lt;code&gt;CSS&lt;/code&gt;&lt;/a&gt; interface and provides the base for the modern CSSOM specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa85d277e3aa5389056a253fcd2a6a3b2634eba" translate="yes" xml:space="preserve">
          <source>Extended the &lt;a href=&quot;css&quot;&gt;&lt;code&gt;CSS&lt;/code&gt;&lt;/a&gt; interface with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CSS/paintWorklet&quot;&gt;&lt;code&gt;paintWorklet&lt;/code&gt;&lt;/a&gt; static property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8db8adbbf5dca99540b022993f90622a2007846" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;event&quot;&gt;Event&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0d9ad0e2c5a5402bf1bcc722c5cd74def90ca2" translate="yes" xml:space="preserve">
          <source>Extends the lifetime of the &lt;code&gt;install&lt;/code&gt; and &lt;code&gt;activate&lt;/code&gt; events dispatched on the &lt;a href=&quot;serviceworkerglobalscope&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt;&lt;/a&gt;, as part of the service worker lifecycle. This ensures that any functional events (like &lt;a href=&quot;fetchevent&quot;&gt;&lt;code&gt;FetchEvent&lt;/code&gt;&lt;/a&gt; ) are not dispatched to the &lt;a href=&quot;serviceworker&quot;&gt;&lt;code&gt;ServiceWorker&lt;/code&gt;&lt;/a&gt;, until it upgrades database schemas, and deletes outdated cache entries, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265e241e6018a75fde328c88a02819a17d4a6ac0" translate="yes" xml:space="preserve">
          <source>Extends the lifetime of the event. It is intended to be called in the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/install&quot;&gt;install&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;serviceworkerregistration/installing&quot;&gt;&lt;code&gt;installing&lt;/code&gt;&lt;/a&gt; worker and on the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/active&quot;&gt;active&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;serviceworkerregistration/active&quot;&gt;&lt;code&gt;active&lt;/code&gt;&lt;/a&gt; worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="433e608fcab80f85d4fee3eb9e3330a7b24a04e7" translate="yes" xml:space="preserve">
          <source>Extends the lifetime of the event. Used to notify the browser of tasks that extend beyond the returning of a response, such as streaming and caching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659087d3ca23db6ae11e0a43579b5f4a260dda11" translate="yes" xml:space="preserve">
          <source>Extension</source>
          <target state="translated">Extension</target>
        </trans-unit>
        <trans-unit id="a2c1fa1f7e9b3cd6d0de8d10690c94ad8b13e6a7" translate="yes" xml:space="preserve">
          <source>Extension for HTML documents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1eec59210d1166749fefad19087c4d993f6761" translate="yes" xml:space="preserve">
          <source>Extension list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a53c13d6f9ca2f616905a62b42fb39dacc0dad" translate="yes" xml:space="preserve">
          <source>Extension objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da67be4f681d431e3dff3d1e144a59dcc1779ff" translate="yes" xml:space="preserve">
          <source>Extension to add activeElement to ShadowRoot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656bcfe284e2da39c77d4fdab55b16ad3c654719" translate="yes" xml:space="preserve">
          <source>Extensions</source>
          <target state="translated">Extensions</target>
        </trans-unit>
        <trans-unit id="48d02fc57e01921b05309684e2a46338f026e7e8" translate="yes" xml:space="preserve">
          <source>Extensions API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a856c4ba4445b6bbec9816c44b04a6faf36b32b6" translate="yes" xml:space="preserve">
          <source>Extensions are explained in sections 5.8, 9, 11.3.2, and 11.4 of the spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6d6237bf51e2fb0b8cb51f76e1bcb1789a6bc8" translate="yes" xml:space="preserve">
          <source>Extensions for HTMLDocument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39b58f0c89d43b6310f46818de82d6393282a40" translate="yes" xml:space="preserve">
          <source>Extensions for the WebGL API are registered in the &lt;a href=&quot;https://www.khronos.org/registry/webgl/extensions/&quot;&gt;WebGL Extension Registry&lt;/a&gt;. The current extensions are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1420ded48f8374dffdf43cc57dc9688da871e390" translate="yes" xml:space="preserve">
          <source>Extensions may be supported by browser vendors before being officially ratified (but only when they are in draft stage). In that case, their name can be prefixed by the vendor prefix (&lt;code&gt;MOZ_&lt;/code&gt;, &lt;code&gt;WEBKIT_&lt;/code&gt;, etc.) or the extension is only available once a browser preference has been toggled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e465c0b852799798382809f55893a867b366f684" translate="yes" xml:space="preserve">
          <source>Extensions to &amp;lt;iframe&amp;gt; sandbox</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b9c1971ee4b60422ffb82be0576d7c7fdaa045" translate="yes" xml:space="preserve">
          <source>Extensions to mouse events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72fdaa6df8484e2dcbc7e1d66775826a004d46f" translate="yes" xml:space="preserve">
          <source>Extensions to other APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926291e2d80a3646dc121a8510e8e8049364bb34" translate="yes" xml:space="preserve">
          <source>Extensions to other interfaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6bf9a8fafb8b09db11630c68245e5a5612b2124" translate="yes" xml:space="preserve">
          <source>Extensions to the &lt;code&gt;Document&lt;/code&gt; interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1bbf8ca5d5970cdc8e4c9b1e90f9cb277f4be5" translate="yes" xml:space="preserve">
          <source>Extensions to the &lt;code&gt;Element&lt;/code&gt; interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92159c8b85304130a3c30aa7d81a9955c4f40a86" translate="yes" xml:space="preserve">
          <source>External on github: &lt;a href=&quot;https://github.com/seznam/JAK/blob/master/lib/polyfills/childNode.js&quot;&gt;childNode.js&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7105e5ca8302536edcb0418514e8e4d6a21e1101" translate="yes" xml:space="preserve">
          <source>Extract information from a form element and set some of its attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763a41bf0e46f0e441a4ee79419a8583e8f242cf" translate="yes" xml:space="preserve">
          <source>Extracts the data as a &lt;a href=&quot;blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108e8db845bdc911fe96e18da31b8b9114d9e68a" translate="yes" xml:space="preserve">
          <source>Extracts the data as a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON&quot;&gt;JSON&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043105f50347a106fa0cc66c6acd1aeb8cd4b0a6" translate="yes" xml:space="preserve">
          <source>Extracts the data as a plain text string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69741e2b06ceae778546ce8958a7421d9efa4a9b" translate="yes" xml:space="preserve">
          <source>Extracts the data as an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af4034179f0d938d78277816d89e59b59be2831" translate="yes" xml:space="preserve">
          <source>Eye strain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69f20e9f683920d3fb4329abd951e878b1f9372" translate="yes" xml:space="preserve">
          <source>F</source>
          <target state="translated">F</target>
        </trans-unit>
        <trans-unit id="b9c7614215c5bf3f22e0dd38d8c9a197b4432459" translate="yes" xml:space="preserve">
          <source>F11</source>
          <target state="translated">F11</target>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="4e98da66c77e95b52461b68efca2bc59aec9f0cd" translate="yes" xml:space="preserve">
          <source>FEBlendElement</source>
          <target state="translated">FEBlendElement</target>
        </trans-unit>
        <trans-unit id="d66ea03e42fa78781a627fc5ad651bdeefba9350" translate="yes" xml:space="preserve">
          <source>FEColorMatrixElement</source>
          <target state="translated">FEColorMatrixElement</target>
        </trans-unit>
        <trans-unit id="a44e28fbabc58fd36ecffd5546189d27c6f815f3" translate="yes" xml:space="preserve">
          <source>FEComponentTransferElement</source>
          <target state="translated">FEComponentTransferElement</target>
        </trans-unit>
        <trans-unit id="519e32bbe9df97e6dbaee6097d18616d808764f6" translate="yes" xml:space="preserve">
          <source>FECompositeElement</source>
          <target state="translated">FECompositeElement</target>
        </trans-unit>
        <trans-unit id="5facf16525e5c78d9022aca815e78513d13bd9a3" translate="yes" xml:space="preserve">
          <source>FEConvolveMatrixElement</source>
          <target state="translated">FEConvolveMatrixElement</target>
        </trans-unit>
        <trans-unit id="67ee3b74e3519b46e3fa6fde059270b07e1727fa" translate="yes" xml:space="preserve">
          <source>FEDiffuseLightingElement</source>
          <target state="translated">FEDiffuseLightingElement</target>
        </trans-unit>
        <trans-unit id="3ea2af3d2f0268ae4095c9615d488f1de181333d" translate="yes" xml:space="preserve">
          <source>FEDisplacementMapElement</source>
          <target state="translated">FEDisplacementMapElement</target>
        </trans-unit>
        <trans-unit id="e9757645007ecdf4e916b305dcee80f3a17ee0b4" translate="yes" xml:space="preserve">
          <source>FEDistantLightElement</source>
          <target state="translated">FEDistantLightElement</target>
        </trans-unit>
        <trans-unit id="a62543b1c33320e6aa890d028ba8986c090e03ea" translate="yes" xml:space="preserve">
          <source>FEDropShadowElement</source>
          <target state="translated">FEDropShadowElement</target>
        </trans-unit>
        <trans-unit id="955f7be99d762a45874ab964272c0c03dc7e17b5" translate="yes" xml:space="preserve">
          <source>FEFloodElement</source>
          <target state="translated">FEFloodElement</target>
        </trans-unit>
        <trans-unit id="423a3b1582175245e6deecfbeade783389c8fdda" translate="yes" xml:space="preserve">
          <source>FEFuncAElement</source>
          <target state="translated">FEFuncAElement</target>
        </trans-unit>
        <trans-unit id="3d8d36db0743ebe336b6e129963ed1234a66a97a" translate="yes" xml:space="preserve">
          <source>FEFuncBElement</source>
          <target state="translated">FEFuncBElement</target>
        </trans-unit>
        <trans-unit id="f61a42ad04f7b51613577723e2467dcfab49bb8a" translate="yes" xml:space="preserve">
          <source>FEFuncGElement</source>
          <target state="translated">FEFuncGElement</target>
        </trans-unit>
        <trans-unit id="41aa7ee82a19c4c94f39e93101076e5065cf2a19" translate="yes" xml:space="preserve">
          <source>FEFuncRElement</source>
          <target state="translated">FEFuncRElement</target>
        </trans-unit>
        <trans-unit id="936863002641ce866b2bc70ee9aad060476ec794" translate="yes" xml:space="preserve">
          <source>FEGaussianBlurElement</source>
          <target state="translated">FEGaussianBlurElement</target>
        </trans-unit>
        <trans-unit id="7987396120bd3f4a143ec85530aa2883a9a243df" translate="yes" xml:space="preserve">
          <source>FEImageElement</source>
          <target state="translated">FEImageElement</target>
        </trans-unit>
        <trans-unit id="e79496778f35755d01595c4f0be3c2d9dfde3080" translate="yes" xml:space="preserve">
          <source>FEMergeElement</source>
          <target state="translated">FEMergeElement</target>
        </trans-unit>
        <trans-unit id="d93be9a8b86a101e78933d7b580253217e7cf452" translate="yes" xml:space="preserve">
          <source>FEMergeNodeElement</source>
          <target state="translated">FEMergeNodeElement</target>
        </trans-unit>
        <trans-unit id="69c3524e2d1bdbd4c07a2d73b5062b615861ddec" translate="yes" xml:space="preserve">
          <source>FEMorphologyElement</source>
          <target state="translated">FEMorphologyElement</target>
        </trans-unit>
        <trans-unit id="09f1ab82213f6fe21dcf3ad2b8f664985d0c6e40" translate="yes" xml:space="preserve">
          <source>FEOffsetElement</source>
          <target state="translated">FEOffsetElement</target>
        </trans-unit>
        <trans-unit id="49e4c537fc685830b50ece789cd803cefa063eff" translate="yes" xml:space="preserve">
          <source>FEPointLightElement</source>
          <target state="translated">FEPointLightElement</target>
        </trans-unit>
        <trans-unit id="4a8db91143d396e8c2cd9e73824ba486b5325817" translate="yes" xml:space="preserve">
          <source>FESpecularLightingElement</source>
          <target state="translated">FESpecularLightingElement</target>
        </trans-unit>
        <trans-unit id="2d8e8b65211a1a75717840b614c5b5060762bf53" translate="yes" xml:space="preserve">
          <source>FESpotLightElement</source>
          <target state="translated">FESpotLightElement</target>
        </trans-unit>
        <trans-unit id="c1a23c709968c436685937657a884e7cf999d205" translate="yes" xml:space="preserve">
          <source>FETileElement</source>
          <target state="translated">FETileElement</target>
        </trans-unit>
        <trans-unit id="db048981ca784f344fb605c9b0c70390415a0564" translate="yes" xml:space="preserve">
          <source>FETurbulenceElement</source>
          <target state="translated">FETurbulenceElement</target>
        </trans-unit>
        <trans-unit id="e29548a39c29562e77b93fd3d297c3ae0c8e1174" translate="yes" xml:space="preserve">
          <source>FIN (Bit 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6869969e48da801a937a415ae8ef0481cc0d529e" translate="yes" xml:space="preserve">
          <source>FIN (Is this the whole message?)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9c7bcc69c608cf581396398a7a2a39c7a153e5" translate="yes" xml:space="preserve">
          <source>FIN bit: This bit indicates whether the full message has been sent from the client. Messages may be sent in frames, but for now we will keep things simple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8bcb95ed7cd1644dbe11a71cd856d9503876ad4" translate="yes" xml:space="preserve">
          <source>FIN: You can send your message in frames, but now keep things simple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa648005a13c05642c5959816681c2ab458c7059" translate="yes" xml:space="preserve">
          <source>FMRadio API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451edd79bd51bd9caa84037d85e3732934ffbf1a" translate="yes" xml:space="preserve">
          <source>Factor</source>
          <target state="translated">Factor</target>
        </trans-unit>
        <trans-unit id="b8907ff63f88fa14488702b832c95c27e70111fb" translate="yes" xml:space="preserve">
          <source>Fallback content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26586a94ea1369047e2920dd0113afc6b36d3ce2" translate="yes" xml:space="preserve">
          <source>Falling back to setTimeout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795f87eaef8da81f5136d5fb373c208400e48254" translate="yes" xml:space="preserve">
          <source>Fan-in and Fan-out</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2a487c736e825594659d8f2b5fb5425565c836" translate="yes" xml:space="preserve">
          <source>Faulty in a WebView component, see Issue &lt;a href=&quot;http://code.google.com/p/android/issues/detail?id=16760&quot;&gt;bug 16760&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad565d9d01d0e0bf91fd6a8532f6d81613338901" translate="yes" xml:space="preserve">
          <source>Feature</source>
          <target state="translated">Feature</target>
        </trans-unit>
        <trans-unit id="410a687b4dab746a5ccea91f4e3a811e738825a1" translate="yes" xml:space="preserve">
          <source>Feature Detecting and Enabling Navigation Preloading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294d4d9a4eaac5449bf61242940545b797efd4f7" translate="yes" xml:space="preserve">
          <source>Feature detection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a165dcdb846bebaf4fd7b05a633d7439e70230" translate="yes" xml:space="preserve">
          <source>Feature-detecting localStorage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586fefa576c2f6509e7db75986f8c727aab7ad62" translate="yes" xml:space="preserve">
          <source>Features included from the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/DocumentOrShadowRoot&quot;&gt;&lt;code&gt;DocumentOrShadowRoot&lt;/code&gt;&lt;/a&gt; mixin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99d62d1c48a3cf932d0c54b6a60fd054e58a06b" translate="yes" xml:space="preserve">
          <source>Features requiring privileges</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b888666a2949c3dafc2876c3e3da99791d17c2d4" translate="yes" xml:space="preserve">
          <source>Features still implemented on the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Document&quot;&gt;Document&lt;/a&gt; interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db2a44512dbaa8a8697c448fb3e16382a36590bf" translate="yes" xml:space="preserve">
          <source>FederatedCredential</source>
          <target state="translated">FederatedCredential</target>
        </trans-unit>
        <trans-unit id="c96e2ba66dca41914a5fcdc152095079665717b2" translate="yes" xml:space="preserve">
          <source>FederatedCredential.provider</source>
          <target state="translated">FederatedCredential.provider</target>
        </trans-unit>
        <trans-unit id="d48aafe6892b2843ae94f441b211bdc371656ba4" translate="yes" xml:space="preserve">
          <source>Fetch</source>
          <target state="translated">Fetch</target>
        </trans-unit>
        <trans-unit id="39e28fef517be6e0fc21d5716c7662e4801ad299" translate="yes" xml:space="preserve">
          <source>Fetch API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f3bfad20be40ba2912951f12e1cc691994629f" translate="yes" xml:space="preserve">
          <source>Fetch API support can be detected by checking for the existence of &lt;a href=&quot;../headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt;&lt;code&gt;fetch()&lt;/code&gt;&lt;/a&gt; on the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; scope. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a487de8dc561f0e2e6acda9cb6ecf9a21fd64bf4" translate="yes" xml:space="preserve">
          <source>Fetch API: Basic concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ec6e666c2e955e732128b2573a7c634d1e0952" translate="yes" xml:space="preserve">
          <source>Fetch API: Cross-global fetch usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3ba8c6f344e6a08934289588663bbed20aa4f1" translate="yes" xml:space="preserve">
          <source>Fetch API: Using Fetch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df9c6369284f32e68bf12adcef9f16780888141" translate="yes" xml:space="preserve">
          <source>Fetch Interfaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5802e05500dd2b8e5059bdc603fa8349f497014" translate="yes" xml:space="preserve">
          <source>Fetch basic concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0108d015a5e73f59cf2b6a9b11c405be97c7f70" translate="yes" xml:space="preserve">
          <source>Fetch examples on Github</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de664043a5832680983c685e0da813660c56c3f" translate="yes" xml:space="preserve">
          <source>Fetch mixin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e9463029e6176b40d4eae04b053852b820dbcc" translate="yes" xml:space="preserve">
          <source>Fetch polyfill</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a5fc7f8645cd88a7a10863e54cf74b6b54a475" translate="yes" xml:space="preserve">
          <source>Fetch provides a generic definition of &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; objects (and other things involved with network requests). This will allow them to be used wherever they are needed in the future, whether it&amp;rsquo;s for service workers, Cache API and other similar things that handle or modify requests and responses, or any kind of use case that might require you to generate your own responses programmatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15b99cd3d893eb82e234d48a9e709bff6c806bc" translate="yes" xml:space="preserve">
          <source>Fetch requests are controlled by the &lt;code&gt;connect-src&lt;/code&gt; directive of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Security/CSP/CSP_policy_directives&quot;&gt;Content Security Policy&lt;/a&gt; rather than the directive of the resources it's retrieving.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59430325786d208dd71dc363d86edeb6d20d2423" translate="yes" xml:space="preserve">
          <source>Fetch takes the asynchronous nature of such requests one step further. The API is completely &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;-based.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed949cb853a43a2ccde48d3d460fcc1ac27eadc" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'Body' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb26bf617330625a426a646c6514c2af7f5f7fc2" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'Headers' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63268dea17e3a78eccee992c8b27450cfc28920" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'Headers()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a9feb2f5dee60702946f996e05229f6b814a59" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'Request' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f80c1d9f69e9425d74703eb67abadcfe0dc1bf" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'Request()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99ee545e0d903aa55f5e8cf9b3ea96470a2785c" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'RequestDestination' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8c4ba5f53aed468fd6080975b05e9d7d74311b" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'Response' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990cc528e35c178608f6408eb416b2396976b690" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'Response()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d116235786782485c0dd966a931b5eb076efd1" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'append()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e9d73c15fa87e2eb76f08cd91c25c4dfc8b34c" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'arrayBuffer()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30776d7267dd0e6b5abc8e4e9ff7b992cdfefde5" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'blob()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cba87c4872e59401082897b6098a77ddc6656fb" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'body' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e52f5fdd05b381e53d4ba2a9d7c6b322dbc6069" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'bodyUsed' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8731d7155416b7d9c89d5d8fee8b95b173dbeace" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'cache' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7843aa0847c0b970c841156179c6c647f002562b" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'clone' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2fedc909f19afbad650b5e9a4bc3066b256238" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'clone()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c7a6dc2868737ea11b107adeafd0cf3b9b111f" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'credentials' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a6cc387f5d80004801ab9d49ec4c82de5c4b81" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'delete()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44676559d51d215ef3fe6498d694b3faeaf7117" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'destination' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e545ed82019f1dc47a1f42b0e89d880fc0f3ade0" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'error()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc80edce8b18bf3a0b4cb91e3ab316179876aee2" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'fetch()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce05e3a02f5b6bd74408541a40677cb03ded0ad3" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'formData()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32de9bcc4754a504a3d6073c924d7ec8721cefd2" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'get()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae14895c8faa31513a89ab03953b313678939e4c" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'has()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec29aecf448e4a262566f17f495781d3a3080054" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'headers' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61fe2e1ec3c362f2bbffda8ed2c706221517b175" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'integrity' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9731743fb8cc0fb05ed4c00548ad70a1f282c03a" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'json()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1765509a34fcef8399cfee5e4bad1df4180d81" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'method' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdddcdd8a43efb5db06758aa09509e3a6a990af4" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'mode' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d0b1ef4791c7feef017aeda219b50e34d8e64c" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'ok' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7116d3988c3d456f910724daea5fe46b9233db85" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'redirect' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b310246926a2f73eb92a66b68a06691f7f5e62e" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'redirect()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc1afca492c85b1aff70ef11bed7b6a0af0ec75" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'redirected' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d77c6882f1cbe2061d22dcf8ce54de8aa19b75" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'referrer' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61baf9704e3bee95bac5db775ee99d7a10ebf771" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'referrerPolicy' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989284c4e283d86024f5f844bc9f3e29ab7e17c8" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'set()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d0823ccfb0ef47e822ce7b18eb8f8eadfbcfc1" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'status' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f412cf6d94a5e7ac5c60ca222734c91433706ea8" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'statusText' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b16c3ebf9496ad9583697b189fa095f66765b6" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'text()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba924fdc96e65609fe1713b130ab1ee0f8810469" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'type' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3989cedb1f347f8226560a0a90ff2db508fcb9" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'url' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9d1469a65e24ae6da84568aa9ebe029d6e1008" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'useFinalURL' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93bc18996fa3dda707cc1d295dbc01a949674273" translate="yes" xml:space="preserve">
          <source>FetchEvent</source>
          <target state="translated">FetchEvent</target>
        </trans-unit>
        <trans-unit id="4f465051b5243a05f205a50ad71141ac83788ff2" translate="yes" xml:space="preserve">
          <source>FetchEvent.client</source>
          <target state="translated">FetchEvent.client</target>
        </trans-unit>
        <trans-unit id="c584559b75dae7ac24f803f1a6fdac180776635e" translate="yes" xml:space="preserve">
          <source>FetchEvent.clientId</source>
          <target state="translated">FetchEvent.clientId</target>
        </trans-unit>
        <trans-unit id="708965d95231487f99a076ac6362eae7e3ca210c" translate="yes" xml:space="preserve">
          <source>FetchEvent.constructor</source>
          <target state="translated">FetchEvent.constructor</target>
        </trans-unit>
        <trans-unit id="389d11d941c851f59f440e7d99703d0c483cf1a8" translate="yes" xml:space="preserve">
          <source>FetchEvent.isReload</source>
          <target state="translated">FetchEvent.isReload</target>
        </trans-unit>
        <trans-unit id="e352744936cb3d2fe510a51af4f885d03051799d" translate="yes" xml:space="preserve">
          <source>FetchEvent.navigationPreload</source>
          <target state="translated">FetchEvent.navigationPreload</target>
        </trans-unit>
        <trans-unit id="60fa75366de93180b4cbd49b8f8b705e1ee60029" translate="yes" xml:space="preserve">
          <source>FetchEvent.request</source>
          <target state="translated">FetchEvent.request</target>
        </trans-unit>
        <trans-unit id="cbeb26f4eba4b297c6b8652044c9365623043d55" translate="yes" xml:space="preserve">
          <source>FetchEvent.respondWith</source>
          <target state="translated">FetchEvent.respondWith</target>
        </trans-unit>
        <trans-unit id="215a83a88d179f190e77d5682286eb84c595fff8" translate="yes" xml:space="preserve">
          <source>Fewer state changes will also improve performance. In particular, if you can pack multiple images into a single texture and select them by using the appropriate texture coordinates, that can help you do fewer texture binding changes, which improves performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92896cc7a96329ea215863f698c608c25a77b1f4" translate="yes" xml:space="preserve">
          <source>Fewer, larger draw operations will improve performance. If you have 1000 sprites to paint, try to do it as a single &lt;code&gt;drawArrays()&lt;/code&gt; or &lt;code&gt;drawElements()&lt;/code&gt; call. You can draw degenerate (flat) triangles if you need to draw discontinuous objects as a single &lt;code&gt;drawArrays()&lt;/code&gt; call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c326a4660b674d2f6ea82687a1e1abae2337541f" translate="yes" xml:space="preserve">
          <source>Field</source>
          <target state="translated">Field</target>
        </trans-unit>
        <trans-unit id="677b9bca73056d80e7e8189e36bfae9a767f65c1" translate="yes" xml:space="preserve">
          <source>Field of view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8b685271238adf161cffed3c91f54d97023262b" translate="yes" xml:space="preserve">
          <source>Fields</source>
          <target state="translated">Fields</target>
        </trans-unit>
        <trans-unit id="b74e29cae95db71de67da5e70835d9ab0a2e3fc5" translate="yes" xml:space="preserve">
          <source>Figure 0.1 Sample DOM Test Page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ca28759ada7e39355ac2d3a5d62fb5b2cfb99e" translate="yes" xml:space="preserve">
          <source>Figure 1. Resource timing properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="063dddee25e59290b3a139c725ad2a1bf9477112" translate="yes" xml:space="preserve">
          <source>File API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9058a6bc4c31e3c71fbf65424e995391c20c2494" translate="yes" xml:space="preserve">
          <source>File API&lt;br/&gt;&lt;small&gt;The definition of 'Blob' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ce1c9dcafb32af15f6ffcea4dab969a524f4a8" translate="yes" xml:space="preserve">
          <source>File API&lt;br/&gt;&lt;small&gt;The definition of 'Blob()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57d06cd114a476409d8b14dd7a4856832b362bd" translate="yes" xml:space="preserve">
          <source>File API&lt;br/&gt;&lt;small&gt;The definition of 'Blob.slice()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e75a252f5165f965ffee3d4899259fffcdd2ff9" translate="yes" xml:space="preserve">
          <source>File API&lt;br/&gt;&lt;small&gt;The definition of 'FileList' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f36e5844a19a08d65f8e37f8f5a159454c64c29" translate="yes" xml:space="preserve">
          <source>File API&lt;br/&gt;&lt;small&gt;The definition of 'FileReader' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa193bc2665259bbeb467ff212ad1cadaafda17" translate="yes" xml:space="preserve">
          <source>File API&lt;br/&gt;&lt;small&gt;The definition of 'FileReader.readAsArrayBuffer' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b4721a12d3b3e6bede6b1aa63379887db91a3c" translate="yes" xml:space="preserve">
          <source>File API&lt;br/&gt;&lt;small&gt;The definition of 'FileReaderSync' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2803257905d835743e9d5b462453996e1bb934a" translate="yes" xml:space="preserve">
          <source>File API&lt;br/&gt;&lt;small&gt;The definition of 'URL' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa424c5b9d5ee6bd08cff0c73b6625237c146575" translate="yes" xml:space="preserve">
          <source>File API&lt;br/&gt;&lt;small&gt;The definition of 'createObjectURL()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1154263c687f7fe9aedab28f231df2cabccf14f7" translate="yes" xml:space="preserve">
          <source>File API&lt;br/&gt;&lt;small&gt;The definition of 'lastModified' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
