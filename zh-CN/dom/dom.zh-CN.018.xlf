<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="3825871d14e1b0a754ed375dd43261d2c7a475fe" translate="yes" xml:space="preserve">
          <source>File API&lt;br/&gt;&lt;small&gt;The definition of 'name' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ec812bffd55b808068e2c86c85936cdac79d71" translate="yes" xml:space="preserve">
          <source>File API&lt;br/&gt;&lt;small&gt;The definition of 'readAsBinaryString' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b27add647547a3f6cabfe3c84b0c7518d859c6c" translate="yes" xml:space="preserve">
          <source>File API&lt;br/&gt;&lt;small&gt;The definition of 'revokeObjectURL()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8964b684f035d8c58bad05d883691d8f79c40300" translate="yes" xml:space="preserve">
          <source>File API&lt;br/&gt;&lt;small&gt;The definition of 'size' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e838d531cb2deaf66d4a0e3999feb0d9fc0550" translate="yes" xml:space="preserve">
          <source>File API&lt;br/&gt;&lt;small&gt;The definition of 'type' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb367587756e1e43a84c4218b50bc59dc179aeb6" translate="yes" xml:space="preserve">
          <source>File System API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85f9457c9761dedca9312d3de6feef10158ffb7" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41274169570a19bc82ddc87d2fdd4847c3047769" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'DataTransferItem.webkitGetAsEntry()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228e29c4197fa6b3d62dffefd6175a894a093041" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'FileSystemFlags' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="279418c1d6bd5eee62319fa0f5171c26e23d5da7" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'copyTo()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7277bf009f90177db65f041fed6a0cbc7e76a6d" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'createDirectory()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b1b081420c81ad8c0dfd136386b1000f840bd4" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'createWriter()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aed33fd8940497d0ad4573ba0ea6b3ec397042d" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'file()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c1455a7e75ce03779e259bb3326ca987e4f747" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'filesystem' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21cf87f7bb52019b7964312b014f84a5fa0acad2" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'fullPath' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842cd647218a9098d5846ee277ebe61647c451e1" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'getDirectory()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74974711686d235507c2aaf02d9e56cd67f374e9" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'getFile()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25305da6ac4443656e58ecefd5879494598ed642" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'getMetadata()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2a0c7a42be2627ecab547dae498e888adc52c7" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'getParent()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2c3b0fd1d6c153170c5d85dc4c14af279f70c1" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'isDirectory' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f39d37134dd08e007aa2f851a1570865299c870" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'isFile' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711b50baad867faf5bd615e01792e7edbd2c6ac8" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'modificationTime' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e82b4364148cef832c20d7f2d087ee674f8125" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'moveTo()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75ca0683b5337c251437918d033647745c67c6a" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'name' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d769f74832c3086e24aa032921d58c65bc9818" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'remove()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed45092816fcabbec569327cc0800d294ca64e4" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'root' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="182c9e8d1ed59ec8ff864d16623daf1227676ca4" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'size' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07134846052f92d08464fe16073ef7f4a95c628a" translate="yes" xml:space="preserve">
          <source>File and Directory Entries API&lt;br/&gt;&lt;small&gt;The definition of 'toURL()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a44bd342e46e3284146d91bbed3aa9c6a2d2bd" translate="yes" xml:space="preserve">
          <source>File objects may be obtained from a &lt;a href=&quot;filelist&quot;&gt;&lt;code&gt;FileList&lt;/code&gt;&lt;/a&gt; object returned as a result of a user selecting files using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; element, from a drag and drop operation's &lt;a href=&quot;datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; object, or from the &lt;code&gt;mozGetAsFile()&lt;/code&gt; API on an &lt;a href=&quot;htmlcanvaselement&quot;&gt;&lt;code&gt;HTMLCanvasElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f2086151749d542654214395bc48c5d71c8ac85" translate="yes" xml:space="preserve">
          <source>File.Using files from web applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8c2273dfe804bdfd5794f4041f9fae611d35bc" translate="yes" xml:space="preserve">
          <source>File.constructor</source>
          <target state="translated">File.constructor</target>
        </trans-unit>
        <trans-unit id="d201fa96f9d83780d1d14c7bf8cbb661708075e4" translate="yes" xml:space="preserve">
          <source>File.lastModified</source>
          <target state="translated">File.lastModified</target>
        </trans-unit>
        <trans-unit id="730b4fac23a9ebb3305589bb9b36dee1d36b87f8" translate="yes" xml:space="preserve">
          <source>File.name</source>
          <target state="translated">File.name</target>
        </trans-unit>
        <trans-unit id="c4ac5b96c6d318e21a95c79930fdc0fa5c5eb718" translate="yes" xml:space="preserve">
          <source>File.size</source>
          <target state="translated">File.size</target>
        </trans-unit>
        <trans-unit id="995d1ea338d55a6c33cf29ac9e3f5e7dfc406961" translate="yes" xml:space="preserve">
          <source>File.type</source>
          <target state="translated">File.type</target>
        </trans-unit>
        <trans-unit id="01b0cd53b03c58a0b5c022ad68cc57c081bfcfc0" translate="yes" xml:space="preserve">
          <source>File/directory condition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e6c17212a8c51579d4181df7743aeee1128952" translate="yes" xml:space="preserve">
          <source>FileError</source>
          <target state="translated">FileError</target>
        </trans-unit>
        <trans-unit id="16f824fd55d5d38f0a080b712446e719f0643d5a" translate="yes" xml:space="preserve">
          <source>FileHandle API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcbfb4b9458e6276e2eaed8e1c3a90abe3a03e22" translate="yes" xml:space="preserve">
          <source>FileList</source>
          <target state="translated">FileList</target>
        </trans-unit>
        <trans-unit id="ac379f2020b1c63a8f5fefdd6842125631127827" translate="yes" xml:space="preserve">
          <source>FileReader</source>
          <target state="translated">FileReader</target>
        </trans-unit>
        <trans-unit id="ef33b48efa7d54f5b7a89eb97b6317febf27e0b5" translate="yes" xml:space="preserve">
          <source>FileReader.abort</source>
          <target state="translated">FileReader.abort</target>
        </trans-unit>
        <trans-unit id="73c55fed0d519722a58d60e84f63e2a685295835" translate="yes" xml:space="preserve">
          <source>FileReader.constructor</source>
          <target state="translated">FileReader.constructor</target>
        </trans-unit>
        <trans-unit id="8b37df2938c249cf055dcaf53bb701c042927dd5" translate="yes" xml:space="preserve">
          <source>FileReader.error</source>
          <target state="translated">FileReader.error</target>
        </trans-unit>
        <trans-unit id="38d55cff3af1e166af22ea9171cac52a317c9110" translate="yes" xml:space="preserve">
          <source>FileReader.onabort</source>
          <target state="translated">FileReader.onabort</target>
        </trans-unit>
        <trans-unit id="a4e358ab3cb1e816c206b87a68e11056fe67c7f7" translate="yes" xml:space="preserve">
          <source>FileReader.onload</source>
          <target state="translated">FileReader.onload</target>
        </trans-unit>
        <trans-unit id="3bb10d2665ee1988cb4361c967e020100a980a7f" translate="yes" xml:space="preserve">
          <source>FileReader.readAsArrayBuffer</source>
          <target state="translated">FileReader.readAsArrayBuffer</target>
        </trans-unit>
        <trans-unit id="5cd5b31ec83eccc4953299596d3fe4b56d57d263" translate="yes" xml:space="preserve">
          <source>FileReader.readAsBinaryString</source>
          <target state="translated">FileReader.readAsBinaryString</target>
        </trans-unit>
        <trans-unit id="944dfe1236e1d47423526c57c08d150d67332e78" translate="yes" xml:space="preserve">
          <source>FileReader.readAsDataURL</source>
          <target state="translated">FileReader.readAsDataURL</target>
        </trans-unit>
        <trans-unit id="82c2d7bb3b74daa5114925cf7ea92b5e71ec15fe" translate="yes" xml:space="preserve">
          <source>FileReader.readAsText</source>
          <target state="translated">FileReader.readAsText</target>
        </trans-unit>
        <trans-unit id="d9c53fbc4d064fdb2222864265d4f7c16ebf6168" translate="yes" xml:space="preserve">
          <source>FileReader.readyState</source>
          <target state="translated">FileReader.readyState</target>
        </trans-unit>
        <trans-unit id="1bda33c6eff9cf712d99604b89baa4978270075b" translate="yes" xml:space="preserve">
          <source>FileReader.result</source>
          <target state="translated">FileReader.result</target>
        </trans-unit>
        <trans-unit id="24e9abbe8a8774b06b669d519dc39a1fc22f37ef" translate="yes" xml:space="preserve">
          <source>FileReaderSync</source>
          <target state="translated">FileReaderSync</target>
        </trans-unit>
        <trans-unit id="49c313f0ae1b571b782ec829ed90916676f1353f" translate="yes" xml:space="preserve">
          <source>FileSystem.name</source>
          <target state="translated">FileSystem.name</target>
        </trans-unit>
        <trans-unit id="13406e3039c26b02a00db7cbc12146a6dcee8b41" translate="yes" xml:space="preserve">
          <source>FileSystem.root</source>
          <target state="translated">FileSystem.root</target>
        </trans-unit>
        <trans-unit id="06bd50ff2e8243da04ef3fbdbefa50ccd36c3009" translate="yes" xml:space="preserve">
          <source>FileSystemDirectoryEntry.createReader</source>
          <target state="translated">FileSystemDirectoryEntry.createReader</target>
        </trans-unit>
        <trans-unit id="b2967f2d8b36b48a5df389de835780db6aa597a5" translate="yes" xml:space="preserve">
          <source>FileSystemDirectoryEntry.getDirectory</source>
          <target state="translated">FileSystemDirectoryEntry.getDirectory</target>
        </trans-unit>
        <trans-unit id="ed6a0f8a21451fa6ca3d949fcd34bc4dcea0d7cb" translate="yes" xml:space="preserve">
          <source>FileSystemDirectoryEntry.getFile</source>
          <target state="translated">FileSystemDirectoryEntry.getFile</target>
        </trans-unit>
        <trans-unit id="8ce1314e3e1a7f79a57f2864e5b41be54a276b08" translate="yes" xml:space="preserve">
          <source>FileSystemDirectoryEntry.removeRecursively</source>
          <target state="translated">FileSystemDirectoryEntry.removeRecursively</target>
        </trans-unit>
        <trans-unit id="49a1f30646ffc94bd6bfc79e59fc7310ba39f1e2" translate="yes" xml:space="preserve">
          <source>FileSystemDirectoryReader.readEntries</source>
          <target state="translated">FileSystemDirectoryReader.readEntries</target>
        </trans-unit>
        <trans-unit id="92cda2489b14c4a2a440144b1b23b4a8543f63c1" translate="yes" xml:space="preserve">
          <source>FileSystemEntry.copyTo</source>
          <target state="translated">FileSystemEntry.copyTo</target>
        </trans-unit>
        <trans-unit id="b6210aa422bac1af6efce1237308d6a1b5ecb283" translate="yes" xml:space="preserve">
          <source>FileSystemEntry.filesystem</source>
          <target state="translated">FileSystemEntry.filesystem</target>
        </trans-unit>
        <trans-unit id="250e545ede279f5f2fd6d9ce5857724767a7adeb" translate="yes" xml:space="preserve">
          <source>FileSystemEntry.fullPath</source>
          <target state="translated">FileSystemEntry.fullPath</target>
        </trans-unit>
        <trans-unit id="91b85eb5ea20b9ed53d4681d810a539c02ba0bf0" translate="yes" xml:space="preserve">
          <source>FileSystemEntry.getMetadata</source>
          <target state="translated">FileSystemEntry.getMetadata</target>
        </trans-unit>
        <trans-unit id="adb35ff8c0203cea7255bc60c077f3a20954c25d" translate="yes" xml:space="preserve">
          <source>FileSystemEntry.getParent</source>
          <target state="translated">FileSystemEntry.getParent</target>
        </trans-unit>
        <trans-unit id="30d72c287917c4377de9294b4b95f591701b3746" translate="yes" xml:space="preserve">
          <source>FileSystemEntry.isDirectory</source>
          <target state="translated">FileSystemEntry.isDirectory</target>
        </trans-unit>
        <trans-unit id="4b7971dc9161ffac79cf8243f7588382e957aef6" translate="yes" xml:space="preserve">
          <source>FileSystemEntry.isFile</source>
          <target state="translated">FileSystemEntry.isFile</target>
        </trans-unit>
        <trans-unit id="394796599d2751e879fa55b56f8706efd271c919" translate="yes" xml:space="preserve">
          <source>FileSystemEntry.moveTo</source>
          <target state="translated">FileSystemEntry.moveTo</target>
        </trans-unit>
        <trans-unit id="2f05681e118980b42cd2139775b85df5eab4f57b" translate="yes" xml:space="preserve">
          <source>FileSystemEntry.name</source>
          <target state="translated">FileSystemEntry.name</target>
        </trans-unit>
        <trans-unit id="a443e6c59445b51cfd476cc4597f4287ea1bb54a" translate="yes" xml:space="preserve">
          <source>FileSystemEntry.remove</source>
          <target state="translated">FileSystemEntry.remove</target>
        </trans-unit>
        <trans-unit id="2be4cc44ce310d65b0d2cce1ad2c058cc515ef95" translate="yes" xml:space="preserve">
          <source>FileSystemEntry.toURL</source>
          <target state="translated">FileSystemEntry.toURL</target>
        </trans-unit>
        <trans-unit id="8389880cc63cfa9864184f5a4b5acce934af8872" translate="yes" xml:space="preserve">
          <source>FileSystemFileEntry.createWriter</source>
          <target state="translated">FileSystemFileEntry.createWriter</target>
        </trans-unit>
        <trans-unit id="88794dca97aab4835675200830d51945cfe7e999" translate="yes" xml:space="preserve">
          <source>FileSystemFileEntry.file</source>
          <target state="translated">FileSystemFileEntry.file</target>
        </trans-unit>
        <trans-unit id="00e53881079b367fe01afa5e43e2dd2dac0a0c5a" translate="yes" xml:space="preserve">
          <source>FileSystemFlags</source>
          <target state="translated">FileSystemFlags</target>
        </trans-unit>
        <trans-unit id="68684b113bf2f76ca690c71717e695e23c7dff9d" translate="yes" xml:space="preserve">
          <source>FileSystemFlags.create</source>
          <target state="translated">FileSystemFlags.create</target>
        </trans-unit>
        <trans-unit id="7c49dd5532dc00276beb8330023b72193ca94eaf" translate="yes" xml:space="preserve">
          <source>FileSystemFlags.exclusive</source>
          <target state="translated">FileSystemFlags.exclusive</target>
        </trans-unit>
        <trans-unit id="fb8f02135946c5c057bdb3c055954e099b84d751" translate="yes" xml:space="preserve">
          <source>Files can be uploaded using an HTML &lt;code&gt;&amp;lt;input type=&quot;file&quot; /&amp;gt;&lt;/code&gt; input element, &lt;a href=&quot;../formdata/formdata&quot;&gt;&lt;code&gt;FormData()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt;&lt;code&gt;fetch()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e06635c10f533edc869190a5ffb8eb899205211" translate="yes" xml:space="preserve">
          <source>Fill and stroke styles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9933ba8ac5de525fe61f29d135ecf0f3500d1dbf" translate="yes" xml:space="preserve">
          <source>Fill each output channel with its input counterpart, that is the input channel with the same index. Channels with no corresponding input channels are left silent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f286a7a38f3681bf56d146fc1fdddf60f2cefb1" translate="yes" xml:space="preserve">
          <source>Fill each output channel with its input counterpart, that is the input channel with the same index. Input channels with no corresponding output channels are dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b011ee061ee8b723fd813bb6921a24f5126fc6" translate="yes" xml:space="preserve">
          <source>Fill mode: none</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df688422fad80de0693b6b2957fd11c715422950" translate="yes" xml:space="preserve">
          <source>Fill styling is used for colors and styles inside shapes and stroke styling is used for the lines around shapes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca80e13448151e1d9a22edd33dc1283282f273a" translate="yes" xml:space="preserve">
          <source>Filling a blank ImageData object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e16a9789ddd48b496fa7580bfa63390aad597d" translate="yes" xml:space="preserve">
          <source>Filling a rectangle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae35ca3e0b0974026ba345a96243cec41903c5b" translate="yes" xml:space="preserve">
          <source>Filling a rectangle with a linear gradient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd8a99d9a27f0981a781a9e051099b6a2150327" translate="yes" xml:space="preserve">
          <source>Filling a rectangle with a radial gradient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b99ae3533c2aa0172a84d6b6b0222a6fc0c20c" translate="yes" xml:space="preserve">
          <source>Filling the whole canvas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3d493a097ea97fd755269fa9a9e1d4493f3ee0" translate="yes" xml:space="preserve">
          <source>Fills a given text at the given (x,y) position. Optionally with a maximum width to draw.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850a64ceb5efd660b39adc65e5e21f62427c90b6" translate="yes" xml:space="preserve">
          <source>Fills an additional triangular area between the common endpoint of connected segments, and the separate outside rectangular corners of each segment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e79d87ac0544df1574499429c19d2f4bbd23f56" translate="yes" xml:space="preserve">
          <source>Fills the passed &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; with cryptographically sound random values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ae154f6f95f8b776c94fcb9411c00d198526fb" translate="yes" xml:space="preserve">
          <source>Fills the subpaths with the current fill style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85eb47254a9268dcac3510374e8d12630eea335b" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGComponentTransferFunctionElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f1d437da9c69276bc4f1067c1aefc2accce947" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFEBlendElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dfd0f684cd516491f8a9c80c15bbf432902af66" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFEColorMatrixElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141449be09fc44ddc09875bbb42c5b5e4adfce8d" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFEComponentTransferElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b942334735dd74ab3acc9e8551c6318495e585" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFECompositeElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7945fef9c8492b2646c2440c344081d46e42431c" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFEConvolveMatrixElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95357b07d49c4e9e9192e2a8030d70f698e4ab17" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFEDiffuseLightingElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ea72a5de61af29dd7e0ac01bc33d0056ee5564" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFEDisplacementMapElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228a8b25cd50fbc94ea72ca223eedef6793333a1" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFEDistantLightElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491e2599cc46de22a6628c92833c92d56fdb1fbb" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFEDropShadowElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9054c19be0e404975176579784d59e513b8f9b9f" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFEFloodElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8c3d294e710aed30e7de7dd6faf23d205dc053" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFEFuncAElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c5b449ca6f9956f37e149df3324c55198dc535" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFEFuncBElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570bb4382448fa7041c08c861b9cea6f1cd14f95" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFEFuncGElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e75955681148f925fd3a376586fbbae48e7a3603" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFEFuncRElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f6ea9741c9071943eea9b9901a358164319539" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFEGaussianBlurElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e777ae021049f4bfc7ab10551a8daaab462c60" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFEImageElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3816219e599a8bca8cffdef0f59f8cef073640c9" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFEMergeElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1a60bdff3875b1579bbdaa86e2c61c425203e0" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFEMergeNodeElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a285d8bd31e465fe0fa17834dca3ed84561d3fd" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFEMorphologyElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e14452def8bce93c46f71c36ac0c3e58839023a" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFEOffsetElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347eff7bc8268d4a44d98e449495a05c37a56d77" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFEPointLightElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d780a6ff0b9f6370b86898ff9c2a9fd4b47374c" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFESpecularLightingElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e5fdc4c66dd26d6d7c1a206eab2a6eee485762" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFESpotLightElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eddaa0591e4d9458108094e6fdb1b8cb99d8cb8" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFETileElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090b80fe771f485701605d64b3f2af6c4109f5ca" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFETurbulenceElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96228d71639657d7f0595739777d8d021c280e09" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFilterElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563f4199652f23594636d05fe91f86617c424749" translate="yes" xml:space="preserve">
          <source>Filter Effects Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'SVGFilterPrimitiveStandardAttributes' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c265ff631de578853207ab0cb81d04e5930bc66" translate="yes" xml:space="preserve">
          <source>Filter functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73baf0a097c86f30055637174dbc9189e31dc799" translate="yes" xml:space="preserve">
          <source>FilterElement</source>
          <target state="translated">FilterElement</target>
        </trans-unit>
        <trans-unit id="70b6e2ff3c660d27150a11cf76334e3e46494b6c" translate="yes" xml:space="preserve">
          <source>FilterPrimitiveStandardAttributes</source>
          <target state="translated">FilterPrimitiveStandardAttributes</target>
        </trans-unit>
        <trans-unit id="f1fd78376a6e59ed84ccb2f857705168015ee02c" translate="yes" xml:space="preserve">
          <source>Filtering the results using array methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce20de368f2588c92a2a87c00b06518eda394b0e" translate="yes" xml:space="preserve">
          <source>Finale</source>
          <target state="translated">Finale</target>
        </trans-unit>
        <trans-unit id="b0107c0ea63e18bee6b927ba2d999fbdd4b7d8fe" translate="yes" xml:space="preserve">
          <source>Finally a fun step to show how matrices work is to reverse the steps to bring the matrix back to the original identity matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63585227325833a8e01ab9e5e3990e446c503b49" translate="yes" xml:space="preserve">
          <source>Finally a projection (in our case the perspective matrix) needs to be added. This final step will move it into clip space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ec0c4a51d07624420ea6afad673b205dee9430" translate="yes" xml:space="preserve">
          <source>Finally a single model matrix is set that represents the transformations that will be performed on each position that makes up the model to move it into the correct space. In this case, for every frame of the animation a series of scale, rotation, and translation matrices move the data into the desired spot in clip space. The cube is the size of clip space (-1,-1,-1) to (1,1,1) so it will need to be shrunk down to fit. This matrix is sent directly to the shader, having been multiplied in JavaScript beforehand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0a973a35f899e9e058791d25973fef2b6a3d1a" translate="yes" xml:space="preserve">
          <source>Finally comes the main body. We start with an empty &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main&quot;&gt;&lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;&lt;/a&gt; element here. This box will be populated using script later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993a0e46f2cc15c3459ba61d588a39941ecae0c0" translate="yes" xml:space="preserve">
          <source>Finally for demonstration that clipping is actually going on, this box doesn't get drawn because it's outside of clip space. The depth is outside of the -1.0 to 1.0 range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581dd69f8a6ed8f80d895059f412ac0489b82e75" translate="yes" xml:space="preserve">
          <source>Finally for each of the examples we will generate a 4x4 matrix, then update the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;'s style to have a transform applied to it, set to a &lt;code&gt;matrix3d&lt;/code&gt;. Bear in mind that even though the matrix is made up of 4 rows and 4 columns, it collapses into a single line of 16 values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1d4411fd629956d5947a34075a12a49977936a" translate="yes" xml:space="preserve">
          <source>Finally for this section, we set up the basic &lt;code&gt;getUserMedia&lt;/code&gt; structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4717573ce4af035671d616a94074e8d10166874" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;animateScene()&lt;/code&gt; is called to render the first frame and schedule the rendering of the next frame of the animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d1873acbf49371803b62bc85c3a4e7279a8897" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;srcObject&lt;/code&gt; is set to &lt;code&gt;null&lt;/code&gt; to sever the link to the &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; object so it can be released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7dab4fb475a33c32866d15e01ca6ee66e5c5d90" translate="yes" xml:space="preserve">
          <source>Finally, a message is sent to the worker to start it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08a61e8c13706824ce2c238ab964831d6a7f1ef" translate="yes" xml:space="preserve">
          <source>Finally, after creating our biquad filter, we use &lt;code&gt;getFrequencyResponse()&lt;/code&gt; to generate the response data and put it in our arrays, then loop through each data set and output them in a human-readable list at the bottom of the page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16321973e66b724ddce5985662e56fcc2ecad599" translate="yes" xml:space="preserve">
          <source>Finally, after creating our filter, we use &lt;code&gt;getFrequencyResponse()&lt;/code&gt; to generate the response data and put it in our arrays, then loop through each data set and output them in a human-readable list at the bottom of the page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc57446c384629960d79771e652da3a8f8ef471f" translate="yes" xml:space="preserve">
          <source>Finally, append each child according to the table structure (as in the above figure). The following source code is a commented version for the sample1.html.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a012ed314e0b3de31fe525f72ed27204d5b1fcc" translate="yes" xml:space="preserve">
          <source>Finally, back in the main script, we deal with the message (again, you'll see similar constructs in both &lt;a href=&quot;https://github.com/mdn/simple-shared-worker/blob/gh-pages/multiply.js&quot;&gt;multiply.js&lt;/a&gt; and &lt;a href=&quot;https://github.com/mdn/simple-shared-worker/blob/gh-pages/square.js&quot;&gt;square.js&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa4f21a673a8376ebd72417992279a71d2bb5ff" translate="yes" xml:space="preserve">
          <source>Finally, global variables that will be used when constructing waveforms are created:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9adcf62e516699cf2e133f8b0b3e09b78ef83cd4" translate="yes" xml:space="preserve">
          <source>Finally, if there's at least one element to redraw, we use &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; to schedule a function that will redraw each element in the &lt;code&gt;redrawList&lt;/code&gt; during the next animation frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c8efeb0674bf5a5876de0c2cda150acc950730" translate="yes" xml:space="preserve">
          <source>Finally, in order to track whether the intersection ratio is going up or down, we remember the current ratio in the variable &lt;code&gt;prevRatio&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22ff71b6d72ac91f48aa58b4dbc97a4a130a5b3" translate="yes" xml:space="preserve">
          <source>Finally, let's connect all our nodes and start the oscillator!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5982bcd269258c212cce43d27556cd378cb1aeef" translate="yes" xml:space="preserve">
          <source>Finally, let's replace our variable &lt;code&gt;squareRotation&lt;/code&gt; by &lt;code&gt;cubeRotation&lt;/code&gt; and add a second rotation around the x axis:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8694acc6964b473b80251e5b9774a83782a89b" translate="yes" xml:space="preserve">
          <source>Finally, let's take a look at the JavaScript code that uses the Intersection Observer API to make things happen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2035fde6c32d16fac1d70ba2a4bba0d68c6274" translate="yes" xml:space="preserve">
          <source>Finally, pass the &lt;code&gt;MediaStreamTrack&lt;/code&gt; object to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ImageCapture/ImageCapture&quot;&gt;&lt;code&gt;ImageCapture.ImageCapture()&lt;/code&gt;&lt;/a&gt; constructor. Though a &lt;code&gt;MediaStream&lt;/code&gt; holds several types of tracks and provides multiple methods for retrieving them, the ImageCapture constructor will throw a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; of type &lt;code&gt;NotSupportedError&lt;/code&gt; if &lt;code&gt;MediaStreamTrack.kind&lt;/code&gt; is not &lt;code&gt;&quot;video&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b57058dead0bcff6b3b5ac2da534f11080d509" translate="yes" xml:space="preserve">
          <source>Finally, return whatever the custom response ended up being equal to, using &lt;a href=&quot;fetchevent/respondwith&quot;&gt;&lt;code&gt;FetchEvent.respondWith&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87726982d9984e6a9d96291df2a2e8e1575f2b49" translate="yes" xml:space="preserve">
          <source>Finally, the &quot;&lt;code&gt;hangup-button&lt;/code&gt;&quot; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt;, to disconnect from a call, is defined and configured to start disabled (setting this as our default for when no call is connected) and apply the function &lt;code&gt;hangUpCall()&lt;/code&gt; on click. This function's role is to close the call, and send a signalling server notification to the other peer, requesting it also close.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b5c138613003c720122af1055ce045e343b5e3" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;a href=&quot;../idbdatabase&quot;&gt;&lt;code&gt;IDBDatabase&lt;/code&gt;&lt;/a&gt; object representing the database connection receives a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; event. You can use the &lt;a href=&quot;../idbdatabase/onclose&quot;&gt;&lt;code&gt;IDBDatabase.onclose&lt;/code&gt;&lt;/a&gt; event handler to listen for these events, so that you know when a database is unexpectedly closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0184ae06ab3c909b597c1c64d0d0d52c86f78529" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragleave&quot;&gt;dragleave&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event will fire at an element when the drag leaves the element. This is the time when you should remove any insertion markers or highlighting. You do not need to cancel this event. Any highlighting or other visual effects specified using the &lt;code&gt;-moz-drag-over&lt;/code&gt; pseudoclass will be removed automatically. The &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragleave&quot;&gt;dragleave&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event will always fire, even if the drag is cancelled, so you can always ensure that any insertion point cleanup can be done during this event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358723ab7592db778bca4527643a5426f52949fa" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;code&gt;addEventListener()&lt;/code&gt; method is used to start listening for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; events, acting on each key by updating the ship position and rotation angle, then calling &lt;code&gt;refresh()&lt;/code&gt; to draw the ship at its new position and angle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eccaf1e0a0bacaf2d8d24111f71ff5dd072d7a9" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; of both the video and the canvas are set to match each other by calling &lt;a href=&quot;../element/setattribute&quot;&gt;&lt;code&gt;Element.setAttribute()&lt;/code&gt;&lt;/a&gt; on each of the two properties on each element, and setting widths and heights as appropriate. Finally, we set the &lt;code&gt;streaming&lt;/code&gt; variable to &lt;code&gt;true&lt;/code&gt; to prevent us from inadvertently running this setup code again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ab3b9883191b7349712fb83e66d46c1e825388" translate="yes" xml:space="preserve">
          <source>Finally, the ads have the following initial styling. Individual ads may customize the style somewhat, as we'll see later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7eee3194405a436687acf75c58c082cf7c0b7b0" translate="yes" xml:space="preserve">
          <source>Finally, the compiled program is returned to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f46d6671fb54bec11d0130c1791c5d67212fb9" translate="yes" xml:space="preserve">
          <source>Finally, the compiled shader is returned to the caller (which is the &lt;code&gt;buildShaderProgram()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b1c484ce4346812e8f4eb0a401eadb04003270" translate="yes" xml:space="preserve">
          <source>Finally, the following transformation methods allow modifications directly to the transformation matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b451d4808d8327106bb0b3a9f0047355c5c9783" translate="yes" xml:space="preserve">
          <source>Finally, the last-viewed time for the ad is updated to the current time. This is done whether the ad was running when this function was called or not; this causes the ad's timer to always be running when this function returns. This makes sense because this function is only called if the ad is visible, even if it's just now become visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de1fb18aa65e5cd1b1f46d04aa8f985179af4b5" translate="yes" xml:space="preserve">
          <source>Finally, the local connection's remote description is set to refer to the remote peer by calling localConnection's &lt;a href=&quot;../rtcpeerconnection/setremotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setRemoteDescription()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae56c11aec46b72b3e982ac73dba34355969d7d5" translate="yes" xml:space="preserve">
          <source>Finally, the new value of &lt;code&gt;enabled&lt;/code&gt; is saved, making the change take effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1050dd8fd99fabc04fee4968c9b9f8b54149998" translate="yes" xml:space="preserve">
          <source>Finally, the oscillator list is initialized to ensure that it's ready to receive information identifiying which oscillators are associated with which keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5086d0b83242da50423d593975af0b51a50af174" translate="yes" xml:space="preserve">
          <source>Finally, the track's &lt;code&gt;applyConstraints()&lt;/code&gt; method is called to configure the API as desired by specifying the values or ranges of values it wishes to use for any of the constrainable properties about which it has a preference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e637f0e48b77afd7a1432cf767ca0132476c9bb" translate="yes" xml:space="preserve">
          <source>Finally, the uniform &lt;code&gt;uGlobalColor&lt;/code&gt; is set to the color &lt;code&gt;[0.1, 0.7, 0.2, 1.0]&lt;/code&gt;, the components in this 4-component vector represent the values of red, green, blue, and alpha, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="970ba6ab87b5807969d4f1c2f0a17f09c2b09834" translate="yes" xml:space="preserve">
          <source>Finally, there's the little box into which we'll insert the messages. This &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; block will be the second peer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc58099f2cc3f04c398441875dcf6f57db080018" translate="yes" xml:space="preserve">
          <source>Finally, this example creates a new &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; which will use one of two servers for ICE negotiation. Each server can have one or more URLs, as demonstrated above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58e4ff9a1890d067e914f8898c7e6e2664c95c1" translate="yes" xml:space="preserve">
          <source>Finally, track the mouse's position. Use 2 rotation matrices to have the camera look up and down based on where the user's mouse is on the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e04e5851f4588eaf81f0ef0fce2b3f0e72a92f9" translate="yes" xml:space="preserve">
          <source>Finally, we append the new item to the &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; that contains all of the user names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0deee46596280d499352616032df05afaf2e74" translate="yes" xml:space="preserve">
          <source>Finally, we call &lt;a href=&quot;../htmlelement/blur&quot;&gt;blur()&lt;/a&gt; on the text input. This is mainly to hide the keyboard on Firefox OS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee60ebcf6cb31bfe6cbec97eb113ef0cf397971" translate="yes" xml:space="preserve">
          <source>Finally, we call &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt; to obtain access to the caller's microphone. If successful, the function &lt;code&gt;gotStream()&lt;/code&gt; is called, otherwise we log the error because calling has failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f82e1f4532a93eda6ab1649139b57333048e31b" translate="yes" xml:space="preserve">
          <source>Finally, we chain a &lt;code&gt;.catch()&lt;/code&gt; function onto the end that will run if the promise is rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9603eb92868d8fe39347c1088cd3d26e45c35fa1" translate="yes" xml:space="preserve">
          <source>Finally, we connect all the gain nodes to the &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/destination&quot;&gt;&lt;code&gt;destination&lt;/code&gt;&lt;/a&gt;, so that any sound delivered to the gain nodes will reach the output, whether that output be speakers, headphones, a recording stream, or any other destination type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fd2fd34a8f19561a86b2de453449c05ce6165d" translate="yes" xml:space="preserve">
          <source>Finally, we finish the line in the middle of the right hand side of the canvas, then draw the stroke we've defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea2e919786c5a6c8632693a3f5bfcb7d9549827" translate="yes" xml:space="preserve">
          <source>Finally, we get the second item from the list of p elements via</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24697a23334826ede843d2d102f08a75f813099c" translate="yes" xml:space="preserve">
          <source>Finally, we iterate through each record, and insert the data into an HTML table. For a complete working example, see our &lt;a href=&quot;https://github.com/mdn/IDBIndex-example&quot;&gt;IDBIndex-example demo repo&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/IDBIndex-example/&quot;&gt;View the example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984f3915d28875055a176f6b6c37bce12e9b4ee0" translate="yes" xml:space="preserve">
          <source>Finally, we iterate through each record, and insert the data into an HTML table. For a complete working example, see our &lt;a href=&quot;https://github.com/mdn/indexeddb-examples/tree/master/idbindex&quot;&gt;IDBIndex-example demo repo&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/indexeddb-examples/idbindex/&quot;&gt;View the example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d7c61338e298d454db28cd39fd80218d0e2c5d" translate="yes" xml:space="preserve">
          <source>Finally, we iterate through each record, and insert the data into an HTML table. For a complete working example, see our &lt;a href=&quot;https://mdn.github.io/indexeddb-examples/idbindex/&quot;&gt;IDBIndex-example demo repo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/indexeddb-examples/tree/master/idbindex&quot;&gt;View the example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13100feaf3e7ab71165f96c51c3615cc827e6c99" translate="yes" xml:space="preserve">
          <source>Finally, we iterate through each record, inserting the data into an HTML table. For a complete working example, see our &lt;a href=&quot;https://github.com/mdn/IDBIndex-example&quot;&gt;IDBIndex-example demo repo&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/IDBIndex-example/&quot;&gt;View the example live&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9fbea89c0dc65757faf637a6874f19ae213880b" translate="yes" xml:space="preserve">
          <source>Finally, we need to update the code that builds the uniform matrices to generate and deliver to the shader a &lt;strong&gt;normal matrix&lt;/strong&gt;, which is used to transform the normals when dealing with the current orientation of the cube in relation to the light source:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a621214cd13c78c1097608d307d5815f4966508b" translate="yes" xml:space="preserve">
          <source>Finally, we return &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GamepadPose/hasPosition&quot;&gt;&lt;code&gt;GamepadPose.hasPosition&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GamepadPose/hasOrientation&quot;&gt;&lt;code&gt;GamepadPose.hasOrientation&lt;/code&gt;&lt;/a&gt; to show whether the controller can return position and orientation data. This works just the same as for the displays, except that in the case of gamepads these values are available on the pose object, not the capabilities object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d35846aebc3bec48d3db2039f817c89f91fb09" translate="yes" xml:space="preserve">
          <source>Finally, we set an &lt;code&gt;onclick&lt;/code&gt; handler on the delete button to be a function that deletes the whole clip HTML structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5000b07eb46cc0bba8753fe195025c0ba7b4f3" translate="yes" xml:space="preserve">
          <source>Finally, we set the &lt;a href=&quot;../speechsynthesisutterance/pitch&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance.pitch&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../speechsynthesisutterance/rate&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance.rate&lt;/code&gt;&lt;/a&gt; to the values of the relevant range form elements. Then, with all necessary preparations made, we start the utterance being spoken by invoking &lt;a href=&quot;../speechsynthesis/speak&quot;&gt;&lt;code&gt;SpeechSynthesis.speak()&lt;/code&gt;&lt;/a&gt;, passing it the &lt;a href=&quot;../speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; instance as a parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e296b9a580324e408b78d2cfdf3d236d2d9b479e" translate="yes" xml:space="preserve">
          <source>Finally, we set the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/disabled&quot;&gt;&lt;code&gt;disabled&lt;/code&gt;&lt;/a&gt; property to &lt;code&gt;true&lt;/code&gt; on the &quot;Hang Up&quot; button, making it unclickable while there is no call underway; then we set &lt;code&gt;targetUsername&lt;/code&gt; to &lt;code&gt;null&lt;/code&gt; since we're no longer talking to anyone. This allows the user to call another user, or to receive an incoming call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d03940991b48f9d2b3921845fd499ef11ce4bcc" translate="yes" xml:space="preserve">
          <source>Finally, we set the DTMF sender's &lt;a href=&quot;../rtcdtmfsender/ontonechange&quot;&gt;&lt;code&gt;ontonechange&lt;/code&gt;&lt;/a&gt; event handler so we get notified each time a DTMF tone finishes playing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfc2b5316ef90b27fe84415e3a7bbb373b6e465b" translate="yes" xml:space="preserve">
          <source>Finally, we set the ID of the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; which will show the timer we'll present in the ad to show how long it's been visible, giving it the class &lt;code&gt;&quot;timer&quot;&lt;/code&gt;. The initial text is set to &quot;0:00&quot;, to represent the starting time of 0 minutes and 0 seconds, and it's appended to the ad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5322972d68a362d4c9afb07892bd4a493fd3305" translate="yes" xml:space="preserve">
          <source>Finally, we set the current contents of the two constraint set editor elements to the defaults.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbaf6d3863f7db5851f054886c4b4b71cdb9f407" translate="yes" xml:space="preserve">
          <source>Finally, we set up a couple of variables for other items:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507891c8ea1ba13b041e8357d51cd2647323d8f9" translate="yes" xml:space="preserve">
          <source>Finally, we set up a handler for a click on the button that runs the animation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3018c3651a89679577fed2eedf80bdaf2c4f84b0" translate="yes" xml:space="preserve">
          <source>Finally, we set up an interval which triggers once a second to handle any necessary refreshing. We need a one second refresh since we're displaying timers in all visible ads for the purposes of this example. You may not need an interval at all, or you might do it differently or using a different time interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0fe3ddbdff0f3e25e3244f09016332e77fdf49f" translate="yes" xml:space="preserve">
          <source>Finally, we update the button text so that the next time it is pressed, it will stop presentation to the VR display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e8b27dec9a722b381ab0dd863a118e22434fe4" translate="yes" xml:space="preserve">
          <source>Finally, when the content is loaded the &lt;code&gt;XMLHttpRequest&lt;/code&gt; function &lt;code&gt;send()&lt;/code&gt; is called to upload the file's content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa321609c3d199a2dd15ab99269bfc97c4f329f" translate="yes" xml:space="preserve">
          <source>Find a specific element with specific values of an attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9487ec98390ac8981d1bec8f9f1e466ce933e65" translate="yes" xml:space="preserve">
          <source>Find developer recommendations for making web apps work offline at our &lt;a href=&quot;https://developer.mozilla.org/en-US/Apps/Build/Offline&quot;&gt;Offline Apps&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c05217a321a10d410ee9cb1aa59942bfcc49a021" translate="yes" xml:space="preserve">
          <source>Find out more about how to use this API in &lt;a href=&quot;channel_messaging_api/using_channel_messaging&quot;&gt;Using channel messaging&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6112e648e444c03f3e25f164b61196c7d6e98a48" translate="yes" xml:space="preserve">
          <source>Finding an ongoing touch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed9abc794aa40557970bd4b32b5ca464ceffb03" translate="yes" xml:space="preserve">
          <source>Finding some examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9fd8a0e820dde1ae5bc9ed6bd91c46021c1687" translate="yes" xml:space="preserve">
          <source>Finding the first element matching a class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2182ecd8ee6cc7abeeab66a89340effe0d7a38a" translate="yes" xml:space="preserve">
          <source>Finds the &lt;a href=&quot;cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; entry whose key is the request, returning a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to &lt;code&gt;true&lt;/code&gt; if a matching &lt;code&gt;Cache&lt;/code&gt; entry is found and deleted. If no &lt;code&gt;Cache&lt;/code&gt; entry is found, the promise resolves to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70917202983e0ed8473addec1a2f232a5888dfd1" translate="yes" xml:space="preserve">
          <source>Finds the &lt;a href=&quot;cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; object matching the &lt;code&gt;cacheName&lt;/code&gt;, and if found, deletes the &lt;a href=&quot;cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; object and returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to &lt;code&gt;true&lt;/code&gt;. If no &lt;a href=&quot;cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; object is found, it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36ecaad315e9790d0036438bf5839d8b593fb99" translate="yes" xml:space="preserve">
          <source>Fine tuning response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b87edd43f0a6e7fdc4e7ae5690e34721e07c4f88" translate="yes" xml:space="preserve">
          <source>Fine-Tune Your Web Site for Windows XP Service Pack 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7486749ea41d2e15d89259104f8724a01f9b7832" translate="yes" xml:space="preserve">
          <source>Finishing a Drag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c876836240304b67f468ba2a4b035a1b4bccbff1" translate="yes" xml:space="preserve">
          <source>Fire an alert on dragdrop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed75cb48b1af26b56adb531e28c0913942c2190a" translate="yes" xml:space="preserve">
          <source>Firebug</source>
          <target state="translated">Firebug</target>
        </trans-unit>
        <trans-unit id="50f8267f6a3d73880db55cffa95bb00035fcbd8c" translate="yes" xml:space="preserve">
          <source>Fired after pointer capture is released for a pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8ad11bb93e64b1dff4bc75b9128597df8356c6" translate="yes" xml:space="preserve">
          <source>Fired for several reasons including: pointing device is moved out of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/term_hit_test&quot;&gt;hit test&lt;/a&gt; boundaries of an element; firing the pointerup event for a device that does not support hover (see pointerup); after firing the pointercancel event (see pointercancel); when a pen stylus leaves the hover range detectable by the digitizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3eb002fbb9ba141e8da861e2876d9b4366f9bb" translate="yes" xml:space="preserve">
          <source>Fired when a JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; is rejected but there is no rejection handler to deal with the rejection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290f95e9889418ce4cc5383bc60b036ae358adcf" translate="yes" xml:space="preserve">
          <source>Fired when a JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; is rejected, and after the rejection is handled by the promise's rejection handling code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad6307580622559c9d07523474894e7d3c75fdc1" translate="yes" xml:space="preserve">
          <source>Fired when a drag operation is being ended (for example, by releasing a mouse button or hitting the escape key). (See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Drag_Operations#dragend&quot;&gt;Finishing a Drag&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd91349a2123d7455a94e848de36d03b697c5c2" translate="yes" xml:space="preserve">
          <source>Fired when a dragged element or text selection enters a valid drop target. (See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Drag_Operations#droptargets&quot;&gt;Specifying Drop Targets&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d03494cbf8b0e8a32a78e1537efea46b308ed6f" translate="yes" xml:space="preserve">
          <source>Fired when a dragged element or text selection leaves a valid drop target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066451b7f0f5d336fcda08a6218bfbe652117bfc" translate="yes" xml:space="preserve">
          <source>Fired when a paused utterance is resumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f8be53e8d15818bdb77775bdba9365613eaca9" translate="yes" xml:space="preserve">
          <source>Fired when a pointer becomes &lt;em&gt;active&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d654a97733857df91d298dec5034ae1a311fa8d4" translate="yes" xml:space="preserve">
          <source>Fired when a pointer changes coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7662c104cb567c90c909e590cdd128a2830c109" translate="yes" xml:space="preserve">
          <source>Fired when a pointer is no longer &lt;em&gt;active&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070db0a762c08507fd4dbd69321e1c72b2556683" translate="yes" xml:space="preserve">
          <source>Fired when a pointing device is moved into an element's &lt;a href=&quot;#term_hit_test&quot;&gt;hit test&lt;/a&gt; boundaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b1e96a34042a6ded23281f776df10080832c4e" translate="yes" xml:space="preserve">
          <source>Fired when a pointing device is moved into the &lt;a href=&quot;#term_hit_test&quot;&gt;hit test&lt;/a&gt; boundaries of an element or one of its descendants, including as a result of a pointerdown event from a device that does not support hover (see pointerdown).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dcf495b902d71d94c7f2bbdc4dbae13f4c845fd" translate="yes" xml:space="preserve">
          <source>Fired when a pointing device is moved out of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/term_hit_test&quot;&gt;hit test&lt;/a&gt; boundaries of an element. For pen devices, this event is fired when the stylus leaves the hover range detectable by the digitizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa0c8e7b391caf27acc7011b67e51952a01577a7" translate="yes" xml:space="preserve">
          <source>Fired when a presentation connection is established.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62a6e34887d557351d1273b42cbe46a36c64c32" translate="yes" xml:space="preserve">
          <source>Fired when an element is no longer the drag operation's immediate selection target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4681d9eee1eb000bc910b4c03294859e380a70b8" translate="yes" xml:space="preserve">
          <source>Fired when an element or text selection is being dragged over a valid drop target (every few hundred milliseconds).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fda3173927e8d0683cd4da99e635f9b3855d7d2" translate="yes" xml:space="preserve">
          <source>Fired when an element or text selection is being dragged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="181924583e0718d7560e1d1d001071c40f785dd4" translate="yes" xml:space="preserve">
          <source>Fired when an element or text selection is dropped on a valid drop target. (See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Drag_Operations#drop&quot;&gt;Performing a Drop&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30024e07b391ebad3da8fd6c2c8308db563edfc" translate="yes" xml:space="preserve">
          <source>Fired when an element receives pointer capture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b382e5e16e711d154777a4c265327b13e2996e" translate="yes" xml:space="preserve">
          <source>Fired when an error occurs that prevents the utterance from being succesfully spoken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8169f696522b4f46b6fedea71d1a868df2a24e1e" translate="yes" xml:space="preserve">
          <source>Fired when the list of &lt;a href=&quot;speechsynthesisvoice&quot;&gt;&lt;code&gt;SpeechSynthesisVoice&lt;/code&gt;&lt;/a&gt; objects that would be returned by the &lt;a href=&quot;speechsynthesis/getvoices&quot;&gt;&lt;code&gt;SpeechSynthesis.getVoices()&lt;/code&gt;&lt;/a&gt; method has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a56041d3f33a55b302a0aa8e441613c9dc1bfbd0" translate="yes" xml:space="preserve">
          <source>Fired when the spoken utterance reaches a named SSML &quot;mark&quot; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef355f5c07acf048f154ab111a09ee1a0569101" translate="yes" xml:space="preserve">
          <source>Fired when the spoken utterance reaches a word or sentence boundary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4601d056859146813ab370af2266c94184a34435" translate="yes" xml:space="preserve">
          <source>Fired when the user starts dragging an element or text selection. (See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Drag_Operations#dragstart&quot;&gt;Starting a Drag Operation&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07fc8ebe0da0523a23c042211e26d174ac192635" translate="yes" xml:space="preserve">
          <source>Fired when the utterance has begun to be spoken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc573a22e0736507a718e883e904ac7a1156fdb" translate="yes" xml:space="preserve">
          <source>Fired when the utterance has finished being spoken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee29b74c32bf24abe43da59a5366183eab265c4" translate="yes" xml:space="preserve">
          <source>Fired when the utterance is paused part way through.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf077d9a5f4253995716dc5450d2f38458c3d15e" translate="yes" xml:space="preserve">
          <source>Fired when there is a call to &lt;code&gt;PresentationConnection.close()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2775f9e9acbe5e24a7d502c37d4d869ddda82dd0" translate="yes" xml:space="preserve">
          <source>Fired when there is a call to &lt;code&gt;PresentationConnection.send()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ca0dacdc7e2b265d43dd7d28130d75247f773f" translate="yes" xml:space="preserve">
          <source>Fired when there is a call to &lt;code&gt;PresentationConnection.terminate()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e92b0f307cef4dfe920c903755500d1551b7f78" translate="yes" xml:space="preserve">
          <source>Fired whenever &lt;a href=&quot;sourcebuffer/appendbuffer&quot;&gt;&lt;code&gt;SourceBuffer.appendBuffer()&lt;/code&gt;&lt;/a&gt; method or the &lt;a href=&quot;sourcebuffer/remove&quot;&gt;&lt;code&gt;SourceBuffer.remove()&lt;/code&gt;&lt;/a&gt; completes. &lt;a href=&quot;sourcebuffer/updating&quot;&gt;&lt;code&gt;SourceBuffer.updating&lt;/code&gt;&lt;/a&gt; changes from &lt;code&gt;true&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. This event is fired before &lt;code&gt;onupdateend&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f4d4930fc96c650319807bad952bb05e49baec" translate="yes" xml:space="preserve">
          <source>Fired whenever &lt;a href=&quot;sourcebuffer/appendbuffer&quot;&gt;&lt;code&gt;SourceBuffer.appendBuffer()&lt;/code&gt;&lt;/a&gt; method or the &lt;a href=&quot;sourcebuffer/remove&quot;&gt;&lt;code&gt;SourceBuffer.remove()&lt;/code&gt;&lt;/a&gt; has ended. This event is fired after &lt;code&gt;onupdate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd196e148786d7265469d195032d2b7e3c6189e" translate="yes" xml:space="preserve">
          <source>Fired whenever &lt;a href=&quot;sourcebuffer/appendbuffer&quot;&gt;&lt;code&gt;SourceBuffer.appendBuffer()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sourcebuffer/appendstream&quot;&gt;&lt;code&gt;SourceBuffer.appendStream()&lt;/code&gt;&lt;/a&gt; is ended by a call to &lt;a href=&quot;sourcebuffer/abort&quot;&gt;&lt;code&gt;SourceBuffer.abort()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;sourcebuffer/updating&quot;&gt;&lt;code&gt;SourceBuffer.updating&lt;/code&gt;&lt;/a&gt; changes from &lt;code&gt;true&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b5a3cce02ca2252130a3dae33f312a829ca2f5" translate="yes" xml:space="preserve">
          <source>Fired whenever a &lt;a href=&quot;fontfaceset&quot;&gt;&lt;code&gt;FontFaceSet&lt;/code&gt;&lt;/a&gt; loads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a274b8d3f813eedcbdc60d1385de600e50bf94" translate="yes" xml:space="preserve">
          <source>Fired whenever a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/controllerchange&quot;&gt;controllerchange&lt;/a&gt;&lt;/code&gt; event occurs &amp;mdash; when the document's associated &lt;a href=&quot;serviceworkerregistration&quot;&gt;&lt;code&gt;ServiceWorkerRegistration&lt;/code&gt;&lt;/a&gt; acquires a new &lt;a href=&quot;serviceworkerregistration/active&quot;&gt;&lt;code&gt;active&lt;/code&gt;&lt;/a&gt; worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6365faeeec51dd03b4c7d42aef163d76ee0ca64" translate="yes" xml:space="preserve">
          <source>Fired whenever a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/message&quot;&gt;message&lt;/a&gt;&lt;/code&gt; event occurs &amp;mdash; when incoming messages are received to the &lt;a href=&quot;serviceworkercontainer&quot;&gt;&lt;code&gt;ServiceWorkerContainer&lt;/code&gt;&lt;/a&gt; object (e.g. via a &lt;a href=&quot;messageport/postmessage&quot;&gt;&lt;code&gt;MessagePort.postMessage()&lt;/code&gt;&lt;/a&gt; call.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a312c4aa89ec1c30cd7c1fde29dc96544258b756" translate="yes" xml:space="preserve">
          <source>Fired whenever a new &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-presentation-connection&quot;&gt;presentation connection&lt;/a&gt; becomes available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7837b153e4a6c3d30cc0d7bd1d4bf30b67b0c11" translate="yes" xml:space="preserve">
          <source>Fired whenever an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; event occurs in the associated service workers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b382fa9b0268f0b500d61d45a5a78baf8af123" translate="yes" xml:space="preserve">
          <source>Fired whenever an error occurs during &lt;a href=&quot;sourcebuffer/appendbuffer&quot;&gt;&lt;code&gt;SourceBuffer.appendBuffer()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sourcebuffer/appendstream&quot;&gt;&lt;code&gt;SourceBuffer.appendStream()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;sourcebuffer/updating&quot;&gt;&lt;code&gt;SourceBuffer.updating&lt;/code&gt;&lt;/a&gt; changes from &lt;code&gt;true&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d5b82feb76a855767e3a23b377737755e9695f" translate="yes" xml:space="preserve">
          <source>Fired whenever is the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; called when the screen changes orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffb142d30199ae9c461394eea30f1ee47015b85" translate="yes" xml:space="preserve">
          <source>Fired whenever the &lt;a href=&quot;constantsourcenode&quot;&gt;&lt;code&gt;ConstantSourceNode&lt;/code&gt;&lt;/a&gt; data has stopped playing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5157b0eb3dfcce9bf3d57e7d4101644ea3409dc" translate="yes" xml:space="preserve">
          <source>Fired whenever the value of &lt;a href=&quot;sourcebuffer/updating&quot;&gt;&lt;code&gt;SourceBuffer.updating&lt;/code&gt;&lt;/a&gt; transitions from &lt;code&gt;false&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ee6522335b033249255b4cc1d572993282aafb" translate="yes" xml:space="preserve">
          <source>Firefox</source>
          <target state="translated">Firefox</target>
        </trans-unit>
        <trans-unit id="7605048ba4f9b5454e60f6527138fd59349b9084" translate="yes" xml:space="preserve">
          <source>Firefox (Gecko)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b69865a0fcf4367d0e06216f7d0d9826f07b2e" translate="yes" xml:space="preserve">
          <source>Firefox 16 added a non-standard parameter to the constructor that can enable anonymous mode (see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=692677&quot;&gt;bug 692677&lt;/a&gt;). Setting the &lt;code&gt;mozAnon&lt;/code&gt; flag to &lt;code&gt;true&lt;/code&gt; effectively resembles the &lt;a href=&quot;http://www.w3.org/TR/2012/WD-XMLHttpRequest-20120117/#dom-anonxmlhttprequest&quot;&gt;&lt;code&gt;AnonXMLHttpRequest()&lt;/code&gt;&lt;/a&gt; constructor described in older versions of the XMLHttpRequest specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c319370dec0f35d6cf6a53eed38530baf5e03cc" translate="yes" xml:space="preserve">
          <source>Firefox 18 implemented an earlier and slightly different version of the specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa83d0a38638d8400e0233c3dad99295184bda13" translate="yes" xml:space="preserve">
          <source>Firefox 2 updates this property when switching to/from the browser's Offline mode. &lt;a href=&quot;https://developer.mozilla.org/en-US/Firefox/Releases/41#Miscellaneous&quot;&gt;Firefox 41&lt;/a&gt; updates this property when the OS reports a change in network connectivity on Windows, Linux, and OS X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e09e508f64dd783a6b6f33a0c33787ee38d8b9" translate="yes" xml:space="preserve">
          <source>Firefox 3 note</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee7c82ec10050a52544305303fdf5b9b013078d" translate="yes" xml:space="preserve">
          <source>Firefox 3.5 adds &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; properties to the TextRectangle object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fbed580402c5275d91412b0716e1210ec8a528b" translate="yes" xml:space="preserve">
          <source>Firefox 3.5 note</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633391ad8a517160f54a63d8cc49fd742082435a" translate="yes" xml:space="preserve">
          <source>Firefox 3.6, 4, and 5 supported &lt;code&gt;mozOrientation&lt;/code&gt; instead of the standard DeviceOrientationEvent interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef2e9a71432d05ecff20e18ed55cabcbea8cc76" translate="yes" xml:space="preserve">
          <source>Firefox 5 note</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f501b4d85ef81d5a41854673736890f86024ad2d" translate="yes" xml:space="preserve">
          <source>Firefox 50 no longer throttles background tabs if a Web Audio API &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; is actively playing sound. Firefox 51 further amends this such that background tabs are no longer throttled if an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; is present in the tab at all, even if no sound is being played. These resolve a number of issues with apps which play note-based music not being able to time or synchronize the music properly when the tab is in the background.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70c34ea9090b7f1f2c8f05d371d85098ee2f3cd" translate="yes" xml:space="preserve">
          <source>Firefox 55 outputs a warning to the console if a candidate &lt;a href=&quot;../mediakeysystemconfiguration&quot;&gt;&lt;code&gt;MediaKeySystemConfiguration&lt;/code&gt;&lt;/a&gt; included in &lt;code&gt;supportedConfigurations&lt;/code&gt; includes an &lt;code&gt;audioCapabilities&lt;/code&gt; or &lt;code&gt;videoCapabilities&lt;/code&gt; object whose value of &lt;code&gt;contentType&lt;/code&gt; doesn't specify a &lt;code&gt;&quot;codecs&quot;&lt;/code&gt; substring defining which codecs within the media wrapper format should be allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81106a993ffe0cab8e5f9102b5c71f188a652a67" translate="yes" xml:space="preserve">
          <source>Firefox Android</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf42df26986d255700b1c2386ad18571d4ab5fa" translate="yes" xml:space="preserve">
          <source>Firefox Mobile (Gecko)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b319de38dd3b5708092c79d821e3e2547bbfeb" translate="yes" xml:space="preserve">
          <source>Firefox OS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93296e306b67cdbceb330c9fefa4b4b68da7c135" translate="yes" xml:space="preserve">
          <source>Firefox OS (Gecko)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0323d14abcb3d43269dbdc94184d607fa18f6917" translate="yes" xml:space="preserve">
          <source>Firefox OS 2.5+ supports it, but as a privileged API that requires permissions. You therefore need to set the following in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Apps/Build/Manifest&quot;&gt;manifest.webapp&lt;/a&gt; (and either install it via WebIDE, or get your app verified and made available on the &lt;a href=&quot;https://marketplace.firefox.com/&quot;&gt;Firefox Marketplace&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0de68e715f774b1a06011b473e84f11fb977262" translate="yes" xml:space="preserve">
          <source>Firefox OS 2.5+ supports it, by default, and without the need for any permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f47cee1e42420a26cb1a8ea897da237a4c70157" translate="yes" xml:space="preserve">
          <source>Firefox OS and Android: Orientation lock using the manifest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b53eb0274183bb3b53043c68c26536714fbd432" translate="yes" xml:space="preserve">
          <source>Firefox OS devices adds more non-standard methods. You can consult them on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox_OS/API/Navigator&quot;&gt;Firefox OS Navigator extensions article&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6014f6655f24bd19d5de3b538266e120b91665f" translate="yes" xml:space="preserve">
          <source>Firefox OS permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2338e98c9ae8467f2ae125780f5261b476af6271" translate="yes" xml:space="preserve">
          <source>Firefox OS权限</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df16351c7aa7b78834de4438a2c254e9bfc8086d" translate="yes" xml:space="preserve">
          <source>Firefox Performance Tool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2010186350200b67de94c8dd4934e0545a2a35e" translate="yes" xml:space="preserve">
          <source>Firefox accepts a string instead of an object here, but only from version 51 onwards. In version 50, options must be an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="274f599ef39fe365fd6fc54c0135191485cc1f8e" translate="yes" xml:space="preserve">
          <source>Firefox also implements this property on the &lt;code&gt;UIEvent&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e68d8620332678f5f9448a2f0c4d7f1023240600" translate="yes" xml:space="preserve">
          <source>Firefox and Safari close notifications automatically after a few moments (around four seconds). This may also happen at the operating system level. Some browsers don't however, such as Chrome. To make sure that the notifications close in all browsers, you can call the &lt;a href=&quot;../notification/close&quot;&gt;&lt;code&gt;Notification.close&lt;/code&gt;&lt;/a&gt; function inside a &lt;a href=&quot;../windoworworkerglobalscope/settimeout&quot;&gt;&lt;code&gt;setTimeout()&lt;/code&gt;&lt;/a&gt; function to close the notification after 4 seconds. Also note the use of &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;bind()&lt;/a&gt;&lt;/code&gt; to make sure the &lt;code&gt;close()&lt;/code&gt; call is associated with the notification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d93f2db51f468c0a8325ad8eeeee2134e7d430e" translate="yes" xml:space="preserve">
          <source>Firefox compatibility notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfebb6ba952eb9d310b8013a44d4565139ecab6" translate="yes" xml:space="preserve">
          <source>Firefox currently handles the value &lt;code&gt;null&lt;/code&gt; incorrectly. Instead of producing a node that generates a single channel of silence, the node becomes unusable and will be ignored if you attempt to connect it to anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42967a0b9524cb5d83ae379bccdfad93b43fe354" translate="yes" xml:space="preserve">
          <source>Firefox desktop and mobile support it in Gecko 42+ (Windows)/44+, without prefixes, and it can be turned on by flipping the &lt;code&gt;media.webspeech.synth.enabled&lt;/code&gt; flag to &lt;code&gt;true&lt;/code&gt; in &lt;code&gt;about:config&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aec96de7aa26908ba522be3804ef0210ea56838" translate="yes" xml:space="preserve">
          <source>Firefox desktop and mobile support it in Gecko 44+, without prefixes, and it can be turned on by flipping the &lt;code&gt;media.webspeech.recognition.enable&lt;/code&gt; flag to &lt;code&gt;true&lt;/code&gt; in &lt;code&gt;about:config&lt;/code&gt;. The permissions settings/UI haven't yet been sorted out however, so permission can't be granted to use it by the user, so it can't be used. This will be fixed soon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3fa445a383e4ec2596c0ee35d479abbbc13930" translate="yes" xml:space="preserve">
          <source>Firefox does not fire keypress events on modifier keys like SHIFT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a342c2f2008a8f10830989d18ad9273a9cd77b" translate="yes" xml:space="preserve">
          <source>Firefox does not implement this feature yet. See the related &lt;a href=&quot;https://bugzil.la/1102584&quot;&gt;bug 1102584&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="947948a6ca55927c48611e6ce1f84a72feb7953d" translate="yes" xml:space="preserve">
          <source>Firefox doesn't currently enforce this rule (it did for a while during the development of Firefox 3, but too many sites break when this rule is enforced). We encourage Web developers to fix their code to follow this rule for improved future compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cdfa25f4b9500af4eba3b0992d80e59486c311e" translate="yes" xml:space="preserve">
          <source>Firefox doesn't implement this yet. See &lt;a href=&quot;https://bugzil.la/847377&quot;&gt;bug 847377&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ccc489718ef2cfa9b73de3740bc4138fc681050" translate="yes" xml:space="preserve">
          <source>Firefox doesn't yet send the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Events/unhandledrejection&quot;&gt;unhandledrejection&lt;/a&gt; or understand &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Events/rejectionhandled&quot;&gt;rejectionhandled&lt;/a&gt;&lt;a&gt; events. Completing the implementation will be addressed in &lt;/a&gt;&lt;a href=&quot;https://bugzil.la/1362272&quot;&gt;bug 1362272&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e08ebaf6a034e084ac621e4a8de400a08ba9e7" translate="yes" xml:space="preserve">
          <source>Firefox for Android</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3753390101a032b5267b48c4af558c11086c22ea" translate="yes" xml:space="preserve">
          <source>Firefox for Android uses a timeout value of 15 minutes for background tabs since &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=736602&quot;&gt;bug 736602&lt;/a&gt; in Firefox 14, and background tabs can also be unloaded entirely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e680cb70a82948a5930961339534e3b5ec0e865" translate="yes" xml:space="preserve">
          <source>Firefox had a bug whereby single quotes contained in URLs are escaped when accessed via URL APIs (see &lt;a href=&quot;https://bugzil.la/1386683&quot;&gt;bug 1386683&lt;/a&gt;). This has been fixed as of Firefox 57.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c5305eabe562e52f057d854282757c247909356" translate="yes" xml:space="preserve">
          <source>Firefox has a bug whereby single quotes contained in URLs are escaped when accessed via URL APIs (see &lt;a href=&quot;https://bugzil.la/1386683&quot;&gt;bug 1386683&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b535f6d86c84568e747a67e8ff2450956914f6a" translate="yes" xml:space="preserve">
          <source>Firefox has a tool available called the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Web_Audio_Editor&quot;&gt;Web Audio editor&lt;/a&gt;. On any page that has an audio graph running on it, you can open the developer tools, and use the Web Audio tab to view the audio graph, see what properties each node has available, and change the values of those properties to see what effect that has.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618cee7870ed643e42a6f083542ad0a3758085d5" translate="yes" xml:space="preserve">
          <source>Firefox has also started to implement some useful tools related to service workers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd1dc968144143c261a4f8f30095c7804c6b802" translate="yes" xml:space="preserve">
          <source>Firefox implements the &lt;code&gt;PromiseRejectionEvent&lt;/code&gt; interface if you go to about:config and set the &lt;code&gt;dom.promise_rejection_events.enabled&lt;/code&gt; pref to &lt;code&gt;true&lt;/code&gt;. However, Firefox doesn't yet actually send the &lt;code&gt;unhandledrejection&lt;/code&gt; or understand &lt;code&gt;rejectionhandled&lt;/code&gt; events. Completing the implementation will be addressed in &lt;a href=&quot;https://bugzil.la/1362272&quot;&gt;bug 1362272&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc7a6c825b0de37b2baf8accea9c6218e2068ed" translate="yes" xml:space="preserve">
          <source>Firefox implements the interface of this property under the following name: &lt;code&gt;RTCPeerConnectionIdentityErrorEvent.&lt;/code&gt; It is likely that it will correct this name when it will unprefix &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, once spec and implementation will have been stabilized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0de9ce7c3ba3222fe42f22e32375141f878896" translate="yes" xml:space="preserve">
          <source>Firefox implements the interface this property belongs to under the following name: &lt;code&gt;RTCPeerConnectionIdentityEvent.&lt;/code&gt; It is likely that it will correct this name when it will unprefix &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, once spec and implementation will have been stabilized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e950224b4462474d95907f869dc6b3cd5c1bae62" translate="yes" xml:space="preserve">
          <source>Firefox implements this behavior since version 5 (see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=633421&quot;&gt;bug 633421&lt;/a&gt;, the 1000ms constant can be tweaked through the &lt;code&gt;dom.min_background_timeout_value&lt;/code&gt; preference). Chrome implements this behavior since version 11 (&lt;a href=&quot;http://crbug.com/66078&quot;&gt;crbug.com/66078&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d066aa71566c4987dffe0b9e3a385c09b933f6" translate="yes" xml:space="preserve">
          <source>Firefox implements this interface under the following name: &lt;code&gt;RTCPeerConnectionIdentityErrorEvent.&lt;/code&gt; It is likely that it will correct this name when it will unprefix &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, once spec and implementation will have been stabilized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b56c25901ec414fcc713578e3721d4ae65137d" translate="yes" xml:space="preserve">
          <source>Firefox implements this interface under the following name: &lt;code&gt;RTCPeerConnectionIdentityEvent.&lt;/code&gt; It is likely that it will correct this name when it will unprefix &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, once spec and implementation will have been stabilized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f4f030623ae0877bdce2f1b705ed26b6906a87" translate="yes" xml:space="preserve">
          <source>Firefox is the only browser that implemented this feature, and it wasn't implemented to match the standard. This feature has since been removed from the HTML standard and shouldn't be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c022c383e0daec8db44d871e2490b20939d62ba" translate="yes" xml:space="preserve">
          <source>Firefox multistream and renegotiation for Jitsi Videobridge</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7529719846313c9067e5d23904687fedc333d5f8" translate="yes" xml:space="preserve">
          <source>Firefox notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04cd7b1706a94f0a8abe8eed8b84a8d3d9ef68dd" translate="yes" xml:space="preserve">
          <source>Firefox offers a native &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Web_Audio_Editor&quot;&gt;Web Audio Editor&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d5113b042793da18e031c7d0b066b7f1a109c0" translate="yes" xml:space="preserve">
          <source>Firefox only supports reading the clipboard in browser extensions, using the &lt;code&gt;&quot;clipboardRead&quot;&lt;/code&gt; extension permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369e52f8f0c77b88b39c9c88df0f1d55cfec3070" translate="yes" xml:space="preserve">
          <source>Firefox only: &lt;a href=&quot;http://jsfiddle.net/9C2EF/&quot;&gt;http://jsfiddle.net/9C2EF/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf651490d8b746674960af69633705ecb9011877" translate="yes" xml:space="preserve">
          <source>Firefox performance tool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cacc1904208f9c53215bb46f0d680131986e070" translate="yes" xml:space="preserve">
          <source>Firefox support for ndata is in the process of being implemented; see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1381145&quot;&gt;bug 1381145&lt;/a&gt; to track it becoming available for general use. The Chrome team is tracking their implementation of ndata support in &lt;a href=&quot;https://bugs.chromium.org/p/webrtc/issues/detail?id=5696&quot;&gt;Chrome Bug 5696&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ccadb1c5298c9a5e5e1347af01d642aed07f00" translate="yes" xml:space="preserve">
          <source>Firefox supports the &lt;code&gt;buttons&lt;/code&gt; attribute on Windows, Linux (GTK), and Mac OS with the following restrictions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5295147f26384ba4c6fff7d7b17114c159a9a410" translate="yes" xml:space="preserve">
          <source>Firefox versions before Firefox 50 didn't display captions when playing media without one or more video tracks being played.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ff61aebeb4385f7aa9e18cfe7ec0b2090e6616" translate="yes" xml:space="preserve">
          <source>Firefox was a bug whereby single contained in URLs are escaped when accessed via URL APIs (&lt;a href=&quot;https://bugzil.la/1386683&quot;&gt;bug 1386683&lt;/a&gt;). This has been as of Firefox 57.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf37564896178188fe59c733544cfb6ad5f1021" translate="yes" xml:space="preserve">
          <source>Firefox's current implementation: &lt;a href=&quot;https://birtles.github.io/areweanimatedyet/&quot;&gt;AreWeAnimatedYet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43756ee8f5a4fb519ebfb9bddae779dcc750c856" translate="yes" xml:space="preserve">
          <source>Firefox's performance tool allows the developer to &lt;em&gt;record&lt;/em&gt; a piece of the user's interaction and the data obtained during the recording is used to create a &lt;em&gt;profile&lt;/em&gt; of the browser's activity. The profile includes a &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Performance/Waterfall&quot;&gt;waterfall&lt;/a&gt;&lt;/em&gt; of the activity such as event handling, layout, painting, scripting, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9218b343795f137a6e5b4de3472d7afdda4b1f09" translate="yes" xml:space="preserve">
          <source>Firefox's performance tool also includes a &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Performance/Frame_rate&quot;&gt;frame rate graph&lt;/a&gt;&lt;/em&gt; which provides timestamps for each frame including the average frame rate and the minimum and maximum rates (for a specific recording session). This data, along with the waterfall data, gives an indication of where a site might be having frame related performance problems (for example, by correlating the recording's minimum rates with their respective waterfall events).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718b4e3c7cdcdca1c696ffcb0d77a1e683d97ab3" translate="yes" xml:space="preserve">
          <source>Firefox, touch events, and multiprocess (e10s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479561c747d08a6c5a06f978b23d08262fd29f10" translate="yes" xml:space="preserve">
          <source>Firefox-specific notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a047a88a9cea86c88e454668ab3fc084304794" translate="yes" xml:space="preserve">
          <source>Fires on a successful call to &lt;code&gt;PresentationRequest.start()&lt;/code&gt; or &lt;code&gt;PresentationRequest.join()&lt;/code&gt;. This method provides a object with a reference to the created or joined object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0a322be2af813da6c3fa8b7d9a81260c19f674" translate="yes" xml:space="preserve">
          <source>Fires when a database structure change (&lt;a href=&quot;idbopendbrequest/onupgradeneeded&quot;&gt;&lt;code&gt;IDBOpenDBRequest.onupgradeneeded&lt;/code&gt;&lt;/a&gt; event or&lt;a href=&quot;idbfactory/deletedatabase&quot;&gt;&lt;code&gt;IDBFactory.deleteDatabase()&lt;/code&gt;&lt;/a&gt; was requested elsewhere (most probably in another window/tab on the same computer). This is different from the version change transaction (see &lt;a href=&quot;idbversionchangeevent&quot;&gt;&lt;code&gt;IDBVersionChangeEvent&lt;/code&gt;&lt;/a&gt;), but it is related.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76df842b279c8a96a54674be3fb94dd8f7823195" translate="yes" xml:space="preserve">
          <source>Fires when access of the database is aborted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb929f8187556ae27bea0544515f7b04b269555" translate="yes" xml:space="preserve">
          <source>Fires when access to the database fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81cc521eab4a38c67179e9bb46092751d2a4a7f6" translate="yes" xml:space="preserve">
          <source>Fires when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; event occurs; this happens when the database is unexpectedly closed, such as during application shutdown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23e68f9668b49a7c7b3a8690b90b6a3cc78b259" translate="yes" xml:space="preserve">
          <source>Fires when the marquee has finished the amount of scrolling that is set by the loop attribute. It can only fire when the loop attribute is set to some number that is greater than 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d68faa31b47c457c54fa8c68bb72348040c5611" translate="yes" xml:space="preserve">
          <source>Fires when the marquee has reached the end of its scroll position. It can only fire when the behavior attribute is set to &lt;code&gt;alternate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972866cf1cb1ba3beee749fd0d1384bdb7f70763" translate="yes" xml:space="preserve">
          <source>Fires when the marquee starts scrolling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f25950a0ce3cce88a58149bf6146259aa6b906" translate="yes" xml:space="preserve">
          <source>Firing from privileged code to non-privileged code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79a71ce3eab526ea52e6eaec5a09c93ab337f12" translate="yes" xml:space="preserve">
          <source>First check for the existence of the window object reference of such window and if it exists and if it has not been closed, then use the &lt;a href=&quot;focus&quot;&gt;focus()&lt;/a&gt; method. There is no other reliable way. You can examine an &lt;a href=&quot;#Best_practices&quot;&gt;example explaining how to use the focus() method&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1296175fe37ff2a8b81f2ff4f926bbd1dea59e70" translate="yes" xml:space="preserve">
          <source>First demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509abc2debb2966c14777b3db6cda2364cf52eba" translate="yes" xml:space="preserve">
          <source>First draw a red box in the middle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3e4ae7b70fec266922b0ae111ea879772b5dd3" translate="yes" xml:space="preserve">
          <source>First introduced in WebKit by Apple for the OS X Dashboard, &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; has since been implemented in browsers. Today, all major browsers support it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4a19019f8475c30f3896d8e3a4e2ab08f4d9e1" translate="yes" xml:space="preserve">
          <source>First is the array &lt;code&gt;ads&lt;/code&gt;. This array contains the data needed to create each ad. We have four here to choose from at random. In a real-world scenario, of course, the ads would come from a database or, more likely, an advertising service from which you fetch ads using an API. However, our needs are simple: each ad is represented by an object with three properties: a background color (&lt;code&gt;bgcolor&lt;/code&gt;), a title (&lt;code&gt;title&lt;/code&gt;), and a body text string (&lt;code&gt;body&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c77606d20771272c92285e57016b06c0640e67f" translate="yes" xml:space="preserve">
          <source>First let's look at the rectangle. There are three functions that draw rectangles on the canvas:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7e9b1da811393bbeaec46b1bbad9c7d90bfb51" translate="yes" xml:space="preserve">
          <source>First of all, if the &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; is sandboxed, the embedding website needs to add the &lt;code&gt;allow-storage-access-by-user-activation&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox&quot;&gt;sandbox token&lt;/a&gt; to allow storage access requests to be successful, along with &lt;code&gt;allow-scripts&lt;/code&gt; and &lt;code&gt;allow-same-origin&lt;/code&gt; to allow it to call the API, and execute in an origin that can have cookies:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b922769cc563e4c4616f004a676d4c733cdda27d" translate="yes" xml:space="preserve">
          <source>First of all, the server must listen for incoming socket connections using a standard TCP socket. Depending on your platform, this may be handled for you already. For an example, let's assume that your server is listening on example.com, port 8000, and your socket server responds to GET requests on &lt;code&gt;/chat&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d709ef00de1923477b0815f093c6f6e20acb1cee" translate="yes" xml:space="preserve">
          <source>First of all, we begin the definition of our rendering loop function &amp;mdash; &lt;code&gt;drawVRScene()&lt;/code&gt;. The first thing we do inside here is make a call to &lt;a href=&quot;../vrdisplay/requestanimationframe&quot;&gt;&lt;code&gt;VRDisplay.requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; to keep the loop running after it has been called once (this occurred earlier on in our code when we started presenting to the VR display). This call is set as the value of the global &lt;code&gt;vrSceneFrame&lt;/code&gt; variable, so we can cancel the loop with a call to &lt;a href=&quot;../vrdisplay/cancelanimationframe&quot;&gt;&lt;code&gt;VRDisplay.cancelAnimationFrame()&lt;/code&gt;&lt;/a&gt; once we exit VR presenting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0407e9dc94eb54d37326f2fb811a358bfb80ac" translate="yes" xml:space="preserve">
          <source>First of all, we capture references to all the DOM elements involved in the UI, but more interestingly, we capture a reference to &lt;a href=&quot;../window/speechsynthesis&quot;&gt;&lt;code&gt;Window.speechSynthesis&lt;/code&gt;&lt;/a&gt;. This is API's entry point &amp;mdash; it returns an instance of &lt;a href=&quot;../speechsynthesis&quot;&gt;&lt;code&gt;SpeechSynthesis&lt;/code&gt;&lt;/a&gt;, the controller interface for web speech synthesis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ff664916382e5ce6ef695d97a420153b41f5a5" translate="yes" xml:space="preserve">
          <source>First of all, we store the six different property values obtainable from the &lt;a href=&quot;../vrpose&quot;&gt;&lt;code&gt;VRPose&lt;/code&gt;&lt;/a&gt; object in their own variables &amp;mdash; each one is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Float32Array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d29fe8ebf8cd67d6b736c0949b6246c7cf12783c" translate="yes" xml:space="preserve">
          <source>First of all, we'll create our periodic wave. To do so, We need to pass real and imaginary values into the &lt;a href=&quot;../baseaudiocontext/createperiodicwave&quot;&gt;&lt;code&gt;BaseAudioContext.createPeriodicWave()&lt;/code&gt;&lt;/a&gt; method.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6421e889125b3660754b68cb344e2f7e3da40f" translate="yes" xml:space="preserve">
          <source>First snapshot containing the definition of &lt;code&gt;Window.self&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c038acac5fbaeec87305b0c13e16cdd835e469b" translate="yes" xml:space="preserve">
          <source>First snapshot containing the definition of &lt;code&gt;Window.window&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce8d3f9c95b9c9bfe5c0c4dbb49ce8437b041a4" translate="yes" xml:space="preserve">
          <source>First snapshot of &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt; containing this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f719544f574039c5be85f24e3cd6c18a4fbb669" translate="yes" xml:space="preserve">
          <source>First snapshot with this property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99290d59716a55c82e8b063db8bf7f05e1a4b00b" translate="yes" xml:space="preserve">
          <source>First steps</source>
          <target state="translated">第一个步骤</target>
        </trans-unit>
        <trans-unit id="261fa693a3bc8eca6d72b0791a5ace79f57e0883" translate="yes" xml:space="preserve">
          <source>First take a look at the vertex shader that will move the vertices on the screen:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95cf241b08e2e0d5ba2bca20e42c9c7f1187a047" translate="yes" xml:space="preserve">
          <source>First there's the &lt;a href=&quot;../../windoworworkerglobalscope/setinterval&quot;&gt;&lt;code&gt;window.setInterval()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../windoworworkerglobalscope/settimeout&quot;&gt;&lt;code&gt;window.setTimeout()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../window/requestanimationframe&quot;&gt;&lt;code&gt;window.requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; functions, which can be used to call a specific function over a set period of time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b0cce9e9f803f5f5c487de0e08144e410eb01e" translate="yes" xml:space="preserve">
          <source>First up is the addition of the function &lt;code&gt;sendToOneUser()&lt;/code&gt;. As the name suggests, this sends a stringified JSON message to a particular username.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb281a29613a8862f78ffe9e474cfc06a27c3440" translate="yes" xml:space="preserve">
          <source>First we create a video element. We set it to autoplay, mute the sound, and loop the video. We then set up two events to make sure the video is playing and the time has been updated. We need both of these checks because it will produce an error if you upload a video to WebGL that has no data available yet. Checking for both of these events guarantees there is data available and it's safe to start uploading video to a WebGL texture. In the code above, we confirm whether we got both of those events; if so, we set a global variable, &lt;code&gt;copyVideo&lt;/code&gt;, to true to indicate that it's safe to start copying the video to a texture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a0407725346fbcb91f964d0540a64cc48e2569" translate="yes" xml:space="preserve">
          <source>First we create the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; to contain the settings bar, so it can be styled as needed. Then we establish a box that will be presented on the left side of the bar and place a label and an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; element of type &lt;code&gt;&quot;range&quot;&lt;/code&gt;. The range element will typically be presented as a slider control; we configure it to allow any value between 0.0 and 1.0, stepping by 0.01 each position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eccf81e4d2a8fd870c27ee192a00717a86bc8932" translate="yes" xml:space="preserve">
          <source>First we created the &amp;lt;table&amp;gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26de68da55aa1ab74a30fc1b4c114d878dd98011" translate="yes" xml:space="preserve">
          <source>First we have the default constraint sets, as strings. These strings are presented in editable &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea&quot;&gt;&lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;&lt;/a&gt;s, but this is the initial configuration of the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3f0ed3fb52ae6c12f383737f5a790cc77b2961" translate="yes" xml:space="preserve">
          <source>First we need the signaling server itself. WebRTC doesn't specify a transport mechanism for the signaling information. You can use anything you like, from &lt;a href=&quot;../websockets_api&quot;&gt;WebSocket&lt;/a&gt; to &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; to carrier pigeons to exchange the signaling information between the two peers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb2aa81be387b4d7e5ef9f28a341ac32c4f33cd7" translate="yes" xml:space="preserve">
          <source>First, &lt;a href=&quot;../webglrenderingcontext/createprogram&quot;&gt;&lt;code&gt;gl.createProgram()&lt;/code&gt;&lt;/a&gt; is called to create a new, empty, GLSL program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1a45c1d84ba8d740400b09b8b6fea484bef7e1" translate="yes" xml:space="preserve">
          <source>First, &lt;code&gt;scrolledToEnd&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; if the text in the log is scrolled to the bottom; otherwise it's set to &lt;code&gt;false&lt;/code&gt;. We'll use that to determine if we should update the scroll position to ensure that the log stays at the end when we're done adding content to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c33dc035a279e6eb9d80d31d6553c8312bedb76" translate="yes" xml:space="preserve">
          <source>First, a basic example showing a &lt;a href=&quot;gainnode&quot;&gt;&lt;code&gt;GainNode&lt;/code&gt;&lt;/a&gt; having its &lt;code&gt;gain&lt;/code&gt; value set. &lt;code&gt;gain&lt;/code&gt; is an example of an a-rate AudioParam, as the value can potentially be set differently for each sample frame of the audio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31dfb3fd1f9f620fd34b835b9e880c209c4a9809" translate="yes" xml:space="preserve">
          <source>First, a couple of simple trivial examples, to help explain how the parameters are used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1164ccc8c457d03b28768b14bdc8470c5e918f9" translate="yes" xml:space="preserve">
          <source>First, a new &lt;a href=&quot;../rtcconfiguration&quot;&gt;&lt;code&gt;RTCConfiguration&lt;/code&gt;&lt;/a&gt; is created, &lt;code&gt;restartConfig&lt;/code&gt;, specifying the new ICE server and its credentials. This is then passed into &lt;code&gt;setConfiguration()&lt;/code&gt;. ICE negotiation is restarted by calling &lt;a href=&quot;createoffer&quot;&gt;&lt;code&gt;createOffer()&lt;/code&gt;&lt;/a&gt;, specifying &lt;code&gt;true&lt;/code&gt; as the value of the &lt;code&gt;iceRestart&lt;/code&gt; option. From there, we handle the process as usual, by setting the local description to the returned offer and then sending that offer to the other peer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf82eb985fec61f1aff22ce0b194a4bf4670cf3" translate="yes" xml:space="preserve">
          <source>First, a reference to the content wrapping &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main&quot;&gt;&lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;&lt;/a&gt; element is obtained, so we can insert our content into it. Then we set up an event listener for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/visibilitychange&quot;&gt;visibilitychange&lt;/a&gt;&lt;/code&gt; event. This event is sent when the document becomes hidden or visible, such as when the user switches tabs in their browser. The Intersection Observer API doesn't take this into account when detecting intersection, since intersection isn't affected by page visibility. Therefore, we need to pause our timers while the page is tabbed out; hence this event listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff3de37b0f5b057e0fce78fdb4558d376e4fd84" translate="yes" xml:space="preserve">
          <source>First, create a function that takes the text field and a key event as input and determines if any of the limits have been reached. If the limit has not been reached, it will return the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34045512f5530739793e04bf32812d84ceacdcee" translate="yes" xml:space="preserve">
          <source>First, get a reference to a device by calling &lt;a href=&quot;mediadevices/getusermedia&quot;&gt;&lt;code&gt;MediaDevices.getUserMedia()&lt;/code&gt;&lt;/a&gt;. The example below simply says give me whatever video device is available, though the &lt;code&gt;getUserMedia()&lt;/code&gt; method allows more specific capabilities to be requested. This method returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves with a &lt;a href=&quot;mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b3b626172945cb30949d0629e674fa3114b656" translate="yes" xml:space="preserve">
          <source>First, it creates the offer by calling &lt;a href=&quot;createoffer&quot;&gt;&lt;code&gt;createOffer()&lt;/code&gt;&lt;/a&gt;. When that succeeds, the offer is passed into &lt;a href=&quot;setlocaldescription&quot;&gt;&lt;code&gt;setLocalDescription()&lt;/code&gt;&lt;/a&gt; to set the local description for the connection. Once that's succeeded in turn, the offer can be sent to the signaling server for delivery to the remote peer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2936953968de35daabb24c6464a7ffafe7024438" translate="yes" xml:space="preserve">
          <source>First, let's build the cube's vertex position buffer by updating the code in &lt;code&gt;initBuffers()&lt;/code&gt;. This is pretty much the same as it was for the square plane, but rather longer since there are 24 vertices (4 per side):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0afdb4ab35799151b681bfd3dab1860e51afb3" translate="yes" xml:space="preserve">
          <source>First, let's look at the JavaScript code that handles the &lt;code&gt;pointerdown&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e26c4c144610858d20c42d02d8c5fdf8fabcbf49" translate="yes" xml:space="preserve">
          <source>First, let's look at the recursive &lt;code&gt;scanFiles()&lt;/code&gt; function. This function takes as input a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry&quot;&gt;&lt;code&gt;FileSystemEntry&lt;/code&gt;&lt;/a&gt; representing an entry in the file system to be scanned and processed (the &lt;code&gt;item&lt;/code&gt; parameter), and an element into which to insert the list of contents (the &lt;code&gt;container&lt;/code&gt; parameter).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2fd55ad47f2dddbee337e0c7a7b2f603cf0b2a" translate="yes" xml:space="preserve">
          <source>First, let's start by writing a utility function to figure out our &lt;em&gt;orientation vector. &lt;/em&gt;The X and Z components are always at a 90&amp;deg; to each other, so we can use the sine and cosine functions, which are offset by the same amount in radians. However, normally this would mean the &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; points to the &lt;strong&gt;left&lt;/strong&gt; of the listener at 0&amp;deg; rotation &amp;ndash; since `x = cos(0) = 1` and `z = sin(0) = 0`. It's more useful to offset the angle by -90&amp;deg;, which means the &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; will point &lt;strong&gt;directly at the listener&lt;/strong&gt; at 0&amp;deg; rotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb9d3cc941b087765fec55829d25177cf63d50f" translate="yes" xml:space="preserve">
          <source>First, let's take a look at the vertex shader. Its job, as always, is to convert the coordinates we're using for our scene into clipspace coordinates (that is, the system by which (0, 0) is at the center of the context and each axis extends from -1.0 to 1.0 regardless of the actual size of the context).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8325a5364f5e87308479bf7a0db8e930a9e2ff16" translate="yes" xml:space="preserve">
          <source>First, let's take a quick look at the &lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-simple-datachannel/index.html&quot;&gt;HTML that's needed&lt;/a&gt;. There's nothing incredibly complicated here. First, we have a couple of buttons for establishing and closing the connection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e3cb5858f3b6d69525ee525fe9787ca0846450" translate="yes" xml:space="preserve">
          <source>First, perhaps using &lt;em&gt;the tools will save you&lt;/em&gt; is a &lt;em&gt;bit too strong&lt;/em&gt; but performance tools can certainly help identify code that is not conformant to some expected time threshold. This section briefly describes the web performance tools for the Firefox and Chrome/Canary browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4207d73fee6f981d3088e81c47df721604ad73f9" translate="yes" xml:space="preserve">
          <source>First, the &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; element is created and its ID is set to the unique value &lt;code&gt;nextArticleID&lt;/code&gt; (which starts at 1 and goes up for each article). Then we create and append an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h2&quot;&gt;&lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;&lt;/a&gt; element for the article title and then we append the HTML from &lt;code&gt;contents&lt;/code&gt; to that. Finally, &lt;code&gt;nextArticleID&lt;/code&gt; is incremented (so that the next element gets a new unique ID) and we return the new &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; element to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9abd5f057094918b3a041fecf94f645ec2d7f3aa" translate="yes" xml:space="preserve">
          <source>First, the HTML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36bf91644aa0fed50fe2fb3259e2fdb6f1457dc0" translate="yes" xml:space="preserve">
          <source>First, the code to specify the colors buffer is gone, replaced with this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29fe455068e8f2a0d99b5bb486c199474dfd5b9" translate="yes" xml:space="preserve">
          <source>First, the gain nodes are created and configured, and a slider control's value is set to match the gain on the two nodes. Then we create a new &lt;a href=&quot;../constantsourcenode&quot;&gt;&lt;code&gt;ConstantSourceNode&lt;/code&gt;&lt;/a&gt; and make it the source for the two gain nodes' &lt;a href=&quot;../gainnode/gain&quot;&gt;&lt;code&gt;GainNode.gain&lt;/code&gt;&lt;/a&gt; values. Each of those values is also an &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caadebf3caa7d17ac2964d8065d4bd3d96cf48bc" translate="yes" xml:space="preserve">
          <source>First, the global variables. We won't discuss these here; instead, we'll talk about them as they're used in the code to come.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15489fdfeab5edde9c1b6412dd2a217d2c5e7e2" translate="yes" xml:space="preserve">
          <source>First, the text of the message is fetched from the input box's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-value&quot;&gt;value&lt;/a&gt;&lt;/code&gt; attribute. This is then sent to the remote peer by calling &lt;a href=&quot;../rtcdatachannel/send&quot;&gt;&lt;code&gt;sendChannel.send()&lt;/code&gt;&lt;/a&gt;. That's all there is to it! The rest of this method is just some user experience sugar -- the input box is emptied and re-focused so the user can immediately begin typing another message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad913049832c0cd205e9640e22ee911b52283ac" translate="yes" xml:space="preserve">
          <source>First, this code creates a WebGL buffer into which we'll store the texture coordinates for each face, then we bind that buffer as the array we'll be writing into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea44c6cfa0e23417025b2e324f4cfcf9302c1b8" translate="yes" xml:space="preserve">
          <source>First, we again set up our analyser and data array, then clear the current canvas display with &lt;code&gt;clearRect()&lt;/code&gt;. The only difference from before is that we have set the fft size to be much smaller; this is so that each bar in the graph is big enough to actually look like a bar rather than a thin strand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dcd169b6f4d2921b18b95d58b3af72e2f608ed0" translate="yes" xml:space="preserve">
          <source>First, we attach each text node to its parent &amp;lt;td&amp;gt; element using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0467308f499400d16c1f710f99a66e3b9579b535" translate="yes" xml:space="preserve">
          <source>First, we call &lt;a href=&quot;../rtcpeerconnection/createoffer&quot;&gt;&lt;code&gt;RTCPeerConnection.createOffer()&lt;/code&gt;&lt;/a&gt; method to create an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt; (Session Description Protocol) blob describing the connection we want to make. This method accepts, optionally, an object with constraints to be met for the connection to meet your needs, such as whether the connection should support audio, video, or both. In our simple example, we don't have any constraints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce4be087b694f24815a98946c2f02a577e590080" translate="yes" xml:space="preserve">
          <source>First, we create a &lt;a href=&quot;documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt; object named &lt;code&gt;logFragment&lt;/code&gt; if one doesn't currently exist. This element is a pseudo-DOM into which we can insert elements without immediately changing the main DOM itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd934e036eecfa0f693ec70ec2c32b0ffd468221" translate="yes" xml:space="preserve">
          <source>First, we create a QueryableWorker class that takes the url of the worker, a default listener, and an error handler, and this class is going to keep track of a list of listeners and help us communicate with the worker:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0282df0405c2cf05d4b95198d434542d0171b227" translate="yes" xml:space="preserve">
          <source>First, we create a new Vertex Buffer Object (VBO) and supply it with our array buffer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d6e2becb28622ce25d989e4c636276cd6a9bb1" translate="yes" xml:space="preserve">
          <source>First, we create space to build the keyboard into. We will be programmatically constructing the keyboard, because doing so gives us the flexibility to configure each key as we determine the appropriate data for the corresponding note. In our case, we get each key's frequency from a table, but it could be calculated algorithmically as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7abbfb6da4313499aeca0332cd03b394f11edc31" translate="yes" xml:space="preserve">
          <source>First, we declare the variables &lt;code&gt;supportedHandlers&lt;/code&gt;, which is compatible with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PaymentMethodData&quot;&gt;&lt;code&gt;PaymentMethodData&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;defaultPaymentDetails&lt;/code&gt;, which is a &lt;a href=&quot;paymentdetailsupdate&quot;&gt;&lt;code&gt;PaymentDetailsUpdate&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b98b91d94c4265406e20df2f223258ae8e7b869" translate="yes" xml:space="preserve">
          <source>First, we display a prompt asking the user to name their clip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f284860868922560a1168917c55b46b868b1e2" translate="yes" xml:space="preserve">
          <source>First, we draw a red box in the middle, but set W to 0.7. As the coordinates get divided by 0.7 they will all be enlarged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6f862dc8c9a060ffc9c889defc9a46f5b8c5d7" translate="yes" xml:space="preserve">
          <source>First, we dynamically create the array buffer from JSON data using a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataView&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;. Note the use of &lt;code&gt;true&lt;/code&gt; because WebGL expects our data to be in little-endian.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f496d43dd1c9ea6b8618bdf708d49b613a12e9f" translate="yes" xml:space="preserve">
          <source>First, we establish global variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417707b430fb391190afe5f2e18608787362017f" translate="yes" xml:space="preserve">
          <source>First, we get a list of all the body elements via</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a2cd928cc3c1e16f22dc9d65161d65796c5e8d" translate="yes" xml:space="preserve">
          <source>First, we get access to the window's &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt;, stashing the reference in &lt;code&gt;context&lt;/code&gt;. Then we get references to the control widgets, setting &lt;code&gt;playButton&lt;/code&gt; to reference the play button and &lt;code&gt;volumeControl&lt;/code&gt; to reference the slider control that the user will use to adjust the gain on the linked pair of oscillators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb3309e803086a08cf306781802a857182486fce" translate="yes" xml:space="preserve">
          <source>First, we grab references to the major elements we need to be able to access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc9dd9ec530644c956e839ea6bfcc428cb6d625" translate="yes" xml:space="preserve">
          <source>First, we need a canvas to draw into. This code creates a context 400 pixels wide and 150 pixels across.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dae62619333adb387dfec37ce009e0c97775925" translate="yes" xml:space="preserve">
          <source>First, we need a function that enqueues tasks for future execution. That function, &lt;code&gt;enqueueTask()&lt;/code&gt;, looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbac92c47e55fb8266a420c03c8dcdea11f02885" translate="yes" xml:space="preserve">
          <source>First, we need to prepare some variables and install the observer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1bade8170d9793558f5a552f9abd10919326760" translate="yes" xml:space="preserve">
          <source>First, we use an &lt;code&gt;onconnect&lt;/code&gt; handler to fire code when a connection to the port happens (i.e. when the &lt;code&gt;onmessage&lt;/code&gt; event handler in the parent thread is setup, or when the &lt;code&gt;start()&lt;/code&gt; method is explicitly called in the parent thread).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1eb4475cc05474701685f0fbef97780021a741f" translate="yes" xml:space="preserve">
          <source>First, you create the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a903026b706ceb1d9f9b420e54c6ec5d106527" translate="yes" xml:space="preserve">
          <source>First, you should take care to always leave your database in a consistent state at the end of every transaction. For example, suppose that you are using IndexedDB to store a list of items that you allow the user to edit. You save the list after the edit by clearing the object store and then writing out the new list. If you clear the object store in one transaction and write the new list in another transaction, there is a danger that the browser will close after the clear but before the write, leaving you with an empty database. To avoid this, you should combine the clear and the write into a single transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="089b570d69eb29de3312d8e8e7ebcc48d271b3da" translate="yes" xml:space="preserve">
          <source>Firstly, because the &lt;a href=&quot;https://en.wikipedia.org/wiki/Hearing_range&quot;&gt;hearing range&lt;/a&gt; of human ears is roughly 20 Hz to 20,000 Hz. Via the &lt;a href=&quot;https://en.wikipedia.org/wiki/Nyquist%E2%80%93Shannon_sampling_theorem&quot;&gt;Nyquist&amp;ndash;Shannon sampling theorem&lt;/a&gt;, the sampling frequency must be greater than twice the maximum frequency one wishes to reproduce. Therefore, the sampling rate has to be greater than 40 kHz.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee14c06ecb9df81f79d3bfd40d32c06555dd552" translate="yes" xml:space="preserve">
          <source>Fixed to the number of outputs. Older implementations, as per earlier versions of the spec use &lt;code&gt;2 &lt;/code&gt;(not used in the default count mode).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc21e0ba5f4bc660053c13294f0555abd0d5b983" translate="yes" xml:space="preserve">
          <source>Fixes errors in the insertion algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f2d011c0f678058bbfca839c86b692ed3a8a2f1" translate="yes" xml:space="preserve">
          <source>Flag needed to retrieve value from &lt;code&gt;MouseEvent.region&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7a97f62c0904ee3e5ec4560479f737e531b560" translate="yes" xml:space="preserve">
          <source>Flag not necessary on Nightly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36cb48f8be54d436d8ee6919a1a79532d9fb5add" translate="yes" xml:space="preserve">
          <source>Flashes the application icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82bda867781be0c0407ac59fafc70c779e7aaa44" translate="yes" xml:space="preserve">
          <source>Flips the source data along its vertical axis if true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f22050b4373bd22012fd26f53a60dc8f2b7438" translate="yes" xml:space="preserve">
          <source>Fn</source>
          <target state="translated">Fn</target>
        </trans-unit>
        <trans-unit id="5aa87cbef2a9b1922a4947bee48c183ba049ef8c" translate="yes" xml:space="preserve">
          <source>Focus on a button</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c194d8451c204a745e41b8a288ad8632e7f59f" translate="yes" xml:space="preserve">
          <source>Focus on a text field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b79efc4b140c0f5602db581d874229ad1adef18" translate="yes" xml:space="preserve">
          <source>Focus on the input element; keystrokes will subsequently go to this element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="905f1a81fa7903e24ede9e726557efde903b170a" translate="yes" xml:space="preserve">
          <source>Focus rings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2d437ab07f933395aa5f61f7f79417c1ad2304" translate="yes" xml:space="preserve">
          <source>Focus with focusOption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f8899238763ba20231d7e00139237ba2f8d7ae" translate="yes" xml:space="preserve">
          <source>FocusEvent</source>
          <target state="translated">FocusEvent</target>
        </trans-unit>
        <trans-unit id="bad5c91b325c286e2717f1aa147cd2121401c136" translate="yes" xml:space="preserve">
          <source>FocusEvent.constructor</source>
          <target state="translated">FocusEvent.constructor</target>
        </trans-unit>
        <trans-unit id="ac7c9aa6c53684a3a0d5bfa94d0a2b856791882d" translate="yes" xml:space="preserve">
          <source>FocusEvent.relatedTarget</source>
          <target state="translated">FocusEvent.relatedTarget</target>
        </trans-unit>
        <trans-unit id="f0331facec2026ad79255bae6b5e110d34058adc" translate="yes" xml:space="preserve">
          <source>Follow the White Rabbit example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9608d9e0677df03dea9ea7719a5f1568d0fc2a15" translate="yes" xml:space="preserve">
          <source>Following properties are now obsolete: &lt;code&gt;align&lt;/code&gt;, &lt;code&gt;noshade&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;, and &lt;code&gt;width&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="401101393371018f0f7e0b9827a1900f686ecc6e" translate="yes" xml:space="preserve">
          <source>Following the similar steps, a complete WebVTT file for specific video or audio file can be made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164458b2d650c1d484c601f4a3336c942aec312f" translate="yes" xml:space="preserve">
          <source>Font Loading API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abeb03179d396b2fa70ec10d0a14787d915471ec" translate="yes" xml:space="preserve">
          <source>Font setting. Default value &lt;code&gt;10px sans-serif&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab84e2354498a1a27905abecf60d97bb875134a" translate="yes" xml:space="preserve">
          <source>FontFace</source>
          <target state="translated">FontFace</target>
        </trans-unit>
        <trans-unit id="f4340ef88271209f650743d3fc55909d318acdf7" translate="yes" xml:space="preserve">
          <source>FontFace.constructor</source>
          <target state="translated">FontFace.constructor</target>
        </trans-unit>
        <trans-unit id="43388beb2e7ebc44af2d873f5f31d031175884c1" translate="yes" xml:space="preserve">
          <source>FontFace.display</source>
          <target state="translated">FontFace.display</target>
        </trans-unit>
        <trans-unit id="2dc2e61886c3a75c1f9de89e0ff369896e4d50cc" translate="yes" xml:space="preserve">
          <source>FontFace.family</source>
          <target state="translated">FontFace.family</target>
        </trans-unit>
        <trans-unit id="50b69295ccd8a7efd11c51b5ee08b3dd42d20bf8" translate="yes" xml:space="preserve">
          <source>FontFaceSet</source>
          <target state="translated">FontFaceSet</target>
        </trans-unit>
        <trans-unit id="27a1afc144621dfdb90c7b5e23b87a0ef0b8fc31" translate="yes" xml:space="preserve">
          <source>FontFaceSet.check</source>
          <target state="translated">FontFaceSet.check</target>
        </trans-unit>
        <trans-unit id="b1026e401844c77a2625fde726db43dc4bc04e16" translate="yes" xml:space="preserve">
          <source>FontFaceSet.load</source>
          <target state="translated">FontFaceSet.load</target>
        </trans-unit>
        <trans-unit id="bf6cd97e0bec9b0f0b35f3aaab7e7f265d06c187" translate="yes" xml:space="preserve">
          <source>FontFaceSet.ready</source>
          <target state="translated">FontFaceSet.ready</target>
        </trans-unit>
        <trans-unit id="25083f1e65f4e16cf211df033a86140e7ec64979" translate="yes" xml:space="preserve">
          <source>FontFaceSetLoadEvent</source>
          <target state="translated">FontFaceSetLoadEvent</target>
        </trans-unit>
        <trans-unit id="f1d53a482dfb13dd53b92ebd99bc742fa06b9783" translate="yes" xml:space="preserve">
          <source>FontFaceSetLoadEvent.fontfaces</source>
          <target state="translated">FontFaceSetLoadEvent.fontfaces</target>
        </trans-unit>
        <trans-unit id="fa0dced7a509611aab5e8db9d645d32a46e249d7" translate="yes" xml:space="preserve">
          <source>For '&lt;code&gt;cut&lt;/code&gt;' and '&lt;code&gt;copy&lt;/code&gt;' commands the method only returns true when called from a user-initiated thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5919fbd15b3d8ad5315e09e4649fa5446b564d2" translate="yes" xml:space="preserve">
          <source>For 1-UA mode devices, both pages are loaded by the same user agent. However, rendering result of the receiver page will be sent to the presentation device via supported remote rendering protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654763c07c83a47b7521c260aa23ee57ce4a3fbd" translate="yes" xml:space="preserve">
          <source>For 2-UAs mode device, the receiver page is loaded directly on the presentation device. Controlling user agent communicates with presentation device via supported presentation control protocol, to control the presentation session and to transmit the message between two pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad640023a77c733f4f197851b20a190ef29a8c51" translate="yes" xml:space="preserve">
          <source>For 3D rendering with &lt;a href=&quot;webgl_api&quot;&gt;WebGL&lt;/a&gt;, you don't use Worklets. Instead, you write Vertex Shaders and Fragment Shaders using GLSL code, and those shaders will then run on the graphics card.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b5510ee2c57e176a374715cb056ccb02b16aba" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; objects, the value of &lt;code&gt;tagName&lt;/code&gt; is the same as the value of the &lt;a href=&quot;../node/nodename&quot;&gt;&lt;code&gt;nodeName&lt;/code&gt;&lt;/a&gt; property the element object inherits from &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdcd72a31f76e7e53edcf134c29bb93b8ced28cc" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Chrome&quot;&gt;Mozilla Chrome&lt;/a&gt; see &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIPromptService#alert()&quot;&gt;nsIPromptService.alert()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIPromptService#alertCheck()&quot;&gt;nsIPromptService.alertCheck()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd49e79cd503a8504703182367857549142a3a29" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Firefox_2_for_developers&quot;&gt;Firefox 2&lt;/a&gt; and above, only the &lt;code&gt;application/vnd.mozilla.maybe.feed&lt;/code&gt;, &lt;code&gt;application/atom+xml&lt;/code&gt;, and &lt;code&gt;application/rss+xml&lt;/code&gt; MIME types are supported. All values have the same effect, and the registered handler will receive feeds in all Atom and RSS versions (see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=391286&quot;&gt;bug 391286&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8037906ff194bbda7f4201c9b5157483639b87a" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;mediadecodingconfiguration&quot;&gt;decoding&lt;/a&gt;, set the type to &lt;code&gt;file&lt;/code&gt; or &lt;code&gt;media-source&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c2bd264f9afe6d459e3cdfcb61327be505d7fa" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;webglrenderingcontext&quot;&gt;WebGL 1&lt;/a&gt;, see the &lt;a href=&quot;ext_color_buffer_half_float&quot;&gt;&lt;code&gt;EXT_color_buffer_half_float&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;webgl_color_buffer_float&quot;&gt;&lt;code&gt;WEBGL_color_buffer_float&lt;/code&gt;&lt;/a&gt; extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9175267bda9d04a021c5a0e9050c665c6c9df3" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/DOM_event_reference/compositionend&quot;&gt;compositionend&lt;/a&gt;&lt;/code&gt; events, this is the string as committed to the editor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563f22b9258d52b3066b92ef8c500dc4b9169102" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/DOM_event_reference/compositionstart&quot;&gt;compositionstart&lt;/a&gt;&lt;/code&gt; events, this is the currently selected text that will be replaced by the string being composed. This value doesn't change even if content changes the selection range; rather, it indicates the string that was selected when composition started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14852a6456717fb54e63f2ec025fc686dd8eb7af" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/DOM_event_reference/compositionupdate&quot;&gt;compositionupdate&lt;/a&gt;&lt;/code&gt;, this is the string as it stands currently as editing is ongoing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ce916635750a0c67e68530375483e84e7872eb" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dblclick&quot;&gt;dblclick&lt;/a&gt;&lt;/code&gt; events, &lt;code&gt;UIEvent.detail&lt;/code&gt; is the current click count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ca090ac3161e6fabf62f1086c4682c578de7bd" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mousedown&quot;&gt;mousedown&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mouseup&quot;&gt;mouseup&lt;/a&gt;&lt;/code&gt; events, &lt;code&gt;UIEvent.detail&lt;/code&gt; is &lt;em&gt;1 plus&lt;/em&gt; the current click count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c6a5640d8d77718b9bb087b43d824d544c5de8" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;SVG_TRANSFORM_MATRIX&lt;/code&gt;, &lt;code&gt;SVG_TRANSFORM_TRANSLATE&lt;/code&gt; and &lt;code&gt;SVG_TRANSFORM_SCALE&lt;/code&gt;, &lt;code&gt;angle&lt;/code&gt; will be zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42098714982d9cae60e5a458baa43148b18a8237" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;SVG_TRANSFORM_MATRIX&lt;/code&gt;, the matrix contains the a, b, c, d, e, f values supplied by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ff7e768caf234d512d7db91a86cedc97f6eff1" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;SVG_TRANSFORM_ROTATE&lt;/code&gt;, a, b, c, d, e and f together represent the matrix which will result in the given rotation. When the rotation is around the center point (0, 0), e and f will be zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a5157a7422bdede471be38771e8dd28cc2cf09c" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;SVG_TRANSFORM_SCALE&lt;/code&gt;, a and d represent the scale amounts (b=0, c=0, e=0 and f=0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4875d325b328387c9b8876743579583cd4f76e6" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;SVG_TRANSFORM_SKEWX&lt;/code&gt; and &lt;code&gt;SVG_TRANSFORM_SKEWY&lt;/code&gt;, a, b, c and d represent the matrix which will result in the given skew (e=0 and f=0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29fcfd44d64a4dfb8670ecb3f127dd3d1309388" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;SVG_TRANSFORM_TRANSLATE&lt;/code&gt;, e and f represent the translation amounts (a=1, b=0, c=0 and d=1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e66a3aeda6a6e051fb39c27897b0ab5163927be" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;attributes&lt;/code&gt;, it is the element whose attribute changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="161e00964cf1b1cf5fc9071b01ada1bde8d96b19" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;attributes&lt;/code&gt;, it is the value of the changed attribute before the change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917d3d29b5a31788675cb93fcb219290641fe2d3" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;characterData&lt;/code&gt;, it is the &lt;code&gt;CharacterData&lt;/code&gt; node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27397b280a4c74da39a282cfabd7d88d127b2b28" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;characterData&lt;/code&gt;, it is the data of the changed node before the change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104bc7efbb7fd34b98f699fb78f569a6a7c62ca8" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;childList&lt;/code&gt;, it is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc429ac54be41e1bdd937c6a06e07e19f356964" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;childList&lt;/code&gt;, it is the node whose children changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0da23cc782db372b0db49558e203c980d086994" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;onfocus&lt;/code&gt; to fire on non-input elements they must be given the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-tabindex&quot;&gt;tabindex&lt;/a&gt;&lt;/code&gt; attribute (see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/Accessibility/HTML#Building_keyboard_accessibility_back_in&quot;&gt;Building keyboard accessibility back in&lt;/a&gt; for more details).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42cb4f2dde1e30a9f635d0548343e05bd38a7048" translate="yes" xml:space="preserve">
          <source>For DOM trees which represent HTML documents, the returned tag name is always in the canonical upper-case form. For example, &lt;code&gt;tagName&lt;/code&gt; called on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; element returns &lt;code&gt;&quot;DIV&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5703418fcb73d346fa55e1ae136882d034b86ff7" translate="yes" xml:space="preserve">
          <source>For Firefox add-on developers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5ae79b6168e8ff0ce3045770d44549c41306a8" translate="yes" xml:space="preserve">
          <source>For Gecko developers (whether you're doing an add-on or Mozilla application code), Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6) adds support for using a XUL &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/panel&quot;&gt;panel&lt;/a&gt;&lt;/code&gt; element as a drag feedback image. Simply pass your &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/panel&quot;&gt;panel&lt;/a&gt;&lt;/code&gt; element to the &lt;a href=&quot;../datatransfer/setdragimage&quot;&gt;&lt;code&gt;setDragImage()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d95bff8c37e0219ee1f4b9910cd5cc1b0a12062" translate="yes" xml:space="preserve">
          <source>For Gecko, the type is most often given as &quot;text/css.&quot; From the W3C spec on CSS: &quot;The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type.&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb11e3ae3f42c4b17c41bb6aedd33f684ebbfee" translate="yes" xml:space="preserve">
          <source>For HTML AREA elements, SVG elements that do not render anything themselves, &lt;code&gt;display:none&lt;/code&gt; elements, and generally any elements that are not directly rendered, an empty list is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b793b750bed7b7467d28ca255fb473154d494e01" translate="yes" xml:space="preserve">
          <source>For HTML documents the initial value of &lt;code&gt;document.title&lt;/code&gt; is the text content of the &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; element. For XUL it's the value of the &lt;code id=&quot;a-title&quot;&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/Attribute/title&quot;&gt;title&lt;/a&gt;&lt;/code&gt; attribute of the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/window&quot;&gt;window&lt;/a&gt;&lt;/code&gt; or other top-level XUL element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071a122875c02fdcb87e0036720b2b057973d85e" translate="yes" xml:space="preserve">
          <source>For HTML, &lt;strong&gt;ownerNode&lt;/strong&gt; may be the corresponding &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/link&quot;&gt;LINK&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/style&quot;&gt;STYLE&lt;/a&gt; element. For XML, it may be the linking processing instruction. For style sheets that are included by other style sheets, the value of this attribute is NULL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45da9fe6f99e8ac93a69be0fb023d6e7a1b22321" translate="yes" xml:space="preserve">
          <source>For IDN host names only, the value of the &lt;code&gt;origin&lt;/code&gt; property is not consistently Unicode or punycode; for greatest compatibility check for both the IDN and punycode values when using this property if you expect messages from IDN sites. This value will eventually be consistently IDN, but for now you should handle both IDN and punycode forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba1f09e8c288220acc9b51bfc56e831e87dc286" translate="yes" xml:space="preserve">
          <source>For IE11 and subsequent versions, use &lt;code&gt;window.doNotTrack&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66acf0b64fd1a470ad54f70568e096c7bb4ac70f" translate="yes" xml:space="preserve">
          <source>For XML serializations, &lt;code&gt;Element&lt;/code&gt; and &lt;code&gt;Attr&lt;/code&gt; nodes are always serialized with their &lt;a href=&quot;../node/namespaceuri&quot;&gt;&lt;code&gt;namespaceURI&lt;/code&gt;&lt;/a&gt; intact. This may mean that a previously-specified &lt;a href=&quot;../node/prefix&quot;&gt;&lt;code&gt;prefix&lt;/code&gt;&lt;/a&gt; or default namespace may be dropped or altered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47eaa953ce4b89423ed4b589e6a6e89c4bc24619" translate="yes" xml:space="preserve">
          <source>For XUL elements, you do not need to use the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-draggable&quot;&gt;draggable&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; attribute, as all XUL elements are draggable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317210e4bb0bc4cb9d9e18c04c584bc7045d135d" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;decodeAudioData()&lt;/code&gt; example, see the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt;&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a44d17023fa587beb861f880248973ea26f65f" translate="yes" xml:space="preserve">
          <source>For a Firefox OS and Firefox Android (soon to work on Firefox desktop too) specific way to lock orientation, you can set the &lt;a href=&quot;https://developer.mozilla.org/en-US/Apps/Build/Manifest#orientation&quot;&gt;orientation&lt;/a&gt; field in app's your manifest file, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0792b5a3c6f2a99f81490dc9fcc20394f6e91a" translate="yes" xml:space="preserve">
          <source>For a candidate that is derived from another, such as a relay or reflexive candidate, the &lt;code&gt;&lt;dfn&gt;relatedPort&lt;/dfn&gt;&lt;/code&gt; is a number indicating the port number of the candidate from which this candidate is derived. For host candidates, the &lt;code&gt;relatedPort&lt;/code&gt; property is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780ab432da153200622239c9154947d6414b4c3a" translate="yes" xml:space="preserve">
          <source>For a complete example of AJAX web site, please see: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Manipulating_the_browser_history/Example&quot;&gt;Ajax navigation example&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9d74cb9c1e2e169f562bdb2448ae0fc1e59442" translate="yes" xml:space="preserve">
          <source>For a complete running example, see our &lt;a href=&quot;https://github.com/mdn/simple-shared-worker&quot;&gt;Basic shared worker example&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/simple-shared-worker/&quot;&gt;run shared worker&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34465c99215f74878ec2a07d0084e606af6b559" translate="yes" xml:space="preserve">
          <source>For a complete tutorial to show how to build up your first basic example, read &lt;a href=&quot;service_worker_api/using_service_workers&quot;&gt;Using Service Workers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3196a48abec66c51072dbcfafffca0f4a26525" translate="yes" xml:space="preserve">
          <source>For a detailed tutorial on how to use the API, see &lt;a href=&quot;using_indexeddb&quot;&gt;Using IndexedDB&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="904ee7a3622479be381597b4b39cdd06e183788e" translate="yes" xml:space="preserve">
          <source>For a document with a single stylesheet in which the following three rules are defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b73b782b2fcea4b4a9b744679c863555e157e4" translate="yes" xml:space="preserve">
          <source>For a full example, see our &lt;a href=&quot;https://github.com/chrisdavidmills/selection-api-examples/#key-quote-generator-see-it-running-live&quot;&gt;Key quote generator&lt;/a&gt; demo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032dccb44daec9c4a5ff4c8ef59fb8bfa61d4070" translate="yes" xml:space="preserve">
          <source>For a full example, see our &lt;a href=&quot;https://github.com/mdn/simple-shared-worker&quot;&gt;Basic shared worker example&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/simple-shared-worker/&quot;&gt;run shared worker&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a2eb66675cbb64a62eee4c035dc8afd0bc4153" translate="yes" xml:space="preserve">
          <source>For a full example, see our&lt;a href=&quot;https://github.com/mdn/simple-web-worker&quot;&gt;Basic dedicated worker example&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/simple-web-worker/&quot;&gt;run dedicated worker&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d22457bf329932aec62893a8892b6739ac1ebe0" translate="yes" xml:space="preserve">
          <source>For a full working example, see &lt;a href=&quot;https://mdn.github.io/webaudio-examples/decode-audio-data/&quot;&gt;this code running live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/decode-audio-data&quot;&gt;view the source&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc24e706725e561508fc4fc8375fa4c22f8cdbe3" translate="yes" xml:space="preserve">
          <source>For a full working example, see our &lt;a href=&quot;https://github.com/mdn/channel-messaging-basic-demo&quot;&gt;channel messaging basic demo&lt;/a&gt; on Github (&lt;a href=&quot;http://mdn.github.io/channel-messaging-basic-demo/&quot;&gt;run it live too&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7584a3c4044309afd413e0a39534d65cb0246215" translate="yes" xml:space="preserve">
          <source>For a full working example, see our &lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/channel-messaging-basic&quot;&gt;channel messaging basic demo&lt;/a&gt; on Github (&lt;a href=&quot;https://mdn.github.io/dom-examples/channel-messaging-basic/&quot;&gt;run it live too&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c914e824aa2968a9ceb1882d0ab10fdbe9d2ac" translate="yes" xml:space="preserve">
          <source>For a full working example, see our &lt;a href=&quot;https://mdn.github.io/webaudio-examples/offline-audio-context-promise/&quot;&gt;offline-audio-context-promise&lt;/a&gt; Github repo (see the &lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/offline-audio-context-promise/index.html&quot;&gt;source code&lt;/a&gt; too.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db762b7da309ca50a00c48c28ad84d5f6c9433d" translate="yes" xml:space="preserve">
          <source>For a full working example, see&lt;a href=&quot;http://mdn.github.io/audio-buffer/&quot;&gt; this code running live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/mdn/audio-buffer&quot;&gt;view the source&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f03a797d9e501bd4f76e79c2fbc627f0d5dd48" translate="yes" xml:space="preserve">
          <source>For a full working example, see&lt;a href=&quot;http://mdn.github.io/decode-audio-data/&quot;&gt; this code running live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/mdn/decode-audio-data&quot;&gt;view the source&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c98529137ba9d7e135dd2fd520247607abb2456" translate="yes" xml:space="preserve">
          <source>For a list of all audio nodes, see the &lt;a href=&quot;web_audio_api&quot;&gt;Web Audio API&lt;/a&gt; homepage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664a94b51617165110b744cb17fbfce4f348517b" translate="yes" xml:space="preserve">
          <source>For a list of available event types, see the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;event reference&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb435ef8b636fb736002daf1ddbcb1186471ed94" translate="yes" xml:space="preserve">
          <source>For a list of common data types used for drag and drop (such as text, HTML, links, and files), see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Recommended_Drag_Types&quot;&gt;Recommended Drag Types&lt;/a&gt; and for more information about drag data, see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations#dragdata&quot;&gt;Drag Data&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54db243158ff1ddbfc602324f81d2fb7d85be45d" translate="yes" xml:space="preserve">
          <source>For a list of installed plugins, use &lt;a href=&quot;../navigatorplugins/plugins&quot;&gt;NavigatorPlugins.plugins&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029a2771bb3989515455717c32012e77b4231db9" translate="yes" xml:space="preserve">
          <source>For a list of the available timing values you can look for in &lt;a href=&quot;../performancetiming&quot;&gt;&lt;code&gt;PerformanceTiming&lt;/code&gt;&lt;/a&gt;, see the &lt;a href=&quot;../performancetiming&quot;&gt;&lt;code&gt;PerformanceTiming&lt;/code&gt;&lt;/a&gt; interface's &lt;a href=&quot;../performancetiming#Properties&quot;&gt;Properties&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baefaefb81dbf56346f34d190da94b26dc8d4379" translate="yes" xml:space="preserve">
          <source>For a more complete example showing &lt;code&gt;start()&lt;/code&gt; in use, check out our &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt;&lt;/a&gt; example, You can also &lt;a href=&quot;http://mdn.github.io/decode-audio-data/&quot;&gt;run the code example live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/mdn/decode-audio-data&quot;&gt;view the source&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c6c307e5e1978af1ab0932cf2cfb6bd7d8dea78" translate="yes" xml:space="preserve">
          <source>For a more complex but still modular version of it (&lt;code&gt;&lt;em&gt;Daemon&lt;/em&gt;&lt;/code&gt;) see &lt;a href=&quot;https://developer.mozilla.org/en-US/Add-ons/Code_snippets/Timers/Daemons&quot;&gt;JavaScript Daemons Management&lt;/a&gt;. This more complex version is nothing but a big and scalable collection of methods for the &lt;code&gt;&lt;em&gt;Daemon&lt;/em&gt;&lt;/code&gt; constructor. However, the &lt;code&gt;&lt;em&gt;Daemon&lt;/em&gt;&lt;/code&gt; constructor itself is nothing but a clone of &lt;code&gt;&lt;em&gt;MiniDaemon&lt;/em&gt;&lt;/code&gt; with an added support for &lt;em&gt;init&lt;/em&gt; and &lt;em&gt;onstart&lt;/em&gt; functions declarable during the instantiation of the &lt;code&gt;&lt;em&gt;daemon&lt;/em&gt;&lt;/code&gt;. &lt;code&gt;&lt;em&gt;MiniDaemon&lt;/em&gt;&lt;/code&gt;, because &lt;code&gt;&lt;em&gt;Daemon&lt;/em&gt;&lt;/code&gt; without its collection of methods is essentially a clone of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c19abc8dcf2bd7764113dc5abccd635ca98d270" translate="yes" xml:space="preserve">
          <source>For a more thorough example showing how the connection and channel are established, see &lt;a href=&quot;../webrtc_api/simple_rtcdatachannel_sample&quot;&gt;A simple RTCDataChannel sample&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8fac742897d64daaf936f9a6b8aafe774932e14" translate="yes" xml:space="preserve">
          <source>For a node that is all whitespace characters, the &lt;code&gt;isElementContentWhitespace&lt;/code&gt; evaluates to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4e77c44849fed9642af18b942f472584b9438a" translate="yes" xml:space="preserve">
          <source>For absolute values, use &lt;code&gt;ondeviceorientationabsolute&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65cdbbe2b8349fef9a203ac44c9718649ce010b" translate="yes" xml:space="preserve">
          <source>For all other &lt;a href=&quot;../uievent&quot;&gt;&lt;code&gt;UIEvent&lt;/code&gt;&lt;/a&gt; objects, &lt;code&gt;UIEvent.detail&lt;/code&gt; is always zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02de5a398c90006410470a65dc365ef1158e9a22" translate="yes" xml:space="preserve">
          <source>For all other elements, the element's contents are replaced with the nodes in the new &lt;code&gt;DocumentFragment&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7a5197e343729aee4866a38ce0cb38d18a654e" translate="yes" xml:space="preserve">
          <source>For an app to receive push messages, it has to have an active &lt;a href=&quot;service_worker_api&quot;&gt;service worker&lt;/a&gt;. When the service worker is active, it can subscribe to push notifications, using &lt;a href=&quot;pushmanager/subscribe&quot;&gt;&lt;code&gt;PushManager.subscribe()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8208b4f81ff4898fcc35e8a27a2de807dcda810" translate="yes" xml:space="preserve">
          <source>For an example, see the documentation for the standard &lt;a href=&quot;../mouseevent/pagex&quot;&gt;&lt;code&gt;MouseEvent.pageX&lt;/code&gt;&lt;/a&gt; property, which you should use instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5308ed657fa79177665eccdfac86f24e75bfc474" translate="yes" xml:space="preserve">
          <source>For an illustration of this property see &lt;a href=&quot;https://w3c.github.io/pointerevents/#widl-PointerEvent-tiltX&quot;&gt;Figure 2 in the specification&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5c9e7d78f1d3726456815a02c25234ad47f75f" translate="yes" xml:space="preserve">
          <source>For an illustration of this property, see &lt;a href=&quot;https://w3c.github.io/pointerevents/#widl-PointerEvent-tiltY&quot;&gt;Figure 3 in the specification&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ac1c81095799f62f7dd6851ad3871d4ec4b3f7" translate="yes" xml:space="preserve">
          <source>For an overview of the design and structure of IndexedDB, see &lt;a href=&quot;#concepts&quot;&gt;Big Concepts&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0957160b3e4cc4116c4ddb34f8141805476bb5" translate="yes" xml:space="preserve">
          <source>For any data being transmitted over a network, there are size restrictions. At a fundamental level, the individual network packets can't be larger than a certain value (the exact number depends on the network and the transport layer being used). At the application level&amp;mdash;that is, within the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent's&lt;/a&gt; implementation of WebRTC on which your code is running&amp;mdash;the WebRTC implementation implements features to support messages that are larger than the maximum packet size on the network's transport layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9781cbc9912f1466cdd21e2bc1387d35a87ad954" translate="yes" xml:space="preserve">
          <source>For any non-empty HTML document, &lt;code&gt;document.documentElement&lt;/code&gt; will always be an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html&quot;&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;&lt;/a&gt; element. For any non-empty XML document, &lt;code&gt;document.documentElement&lt;/code&gt; will always be whatever element is the root element of the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47df2740b2284680e7d5cc402670b556b51801f" translate="yes" xml:space="preserve">
          <source>For applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4501922a26b68acd6264023cc96998f2d0460bf6" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, the &lt;code&gt;options&lt;/code&gt; argument can be an object or a string with the custom element tag name, although the string version is deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b724cb7a2b0bd3b90abde8b65ce01d689181370" translate="yes" xml:space="preserve">
          <source>For block-level elements, &lt;code&gt;offsetTop&lt;/code&gt;, &lt;code&gt;offsetLeft&lt;/code&gt;, &lt;code&gt;offsetWidth&lt;/code&gt;, and &lt;code&gt;offsetHeight&lt;/code&gt; describe the border box of an element relative to the &lt;code&gt;offsetParent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25768b32481ceb90db68db5d0c3394d830984edc" translate="yes" xml:space="preserve">
          <source>For both &lt;code&gt;RTCRtpContributingSource&lt;/code&gt; and &lt;a href=&quot;../rtcrtpsynchronizationsource&quot;&gt;&lt;code&gt;RTCRtpSynchronizationSource&lt;/code&gt;&lt;/a&gt;, the audio level is converted to this form from the values defined in the specifications corresponding to each type of source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b38d24c98c72471deccbbbe67104ced6f666c87" translate="yes" xml:space="preserve">
          <source>For both remote and local video streams, we iterate over each track, calling the &lt;a href=&quot;../mediastreamtrack/stop&quot;&gt;&lt;code&gt;MediaStreamTrack.stop()&lt;/code&gt;&lt;/a&gt; method to close each one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8b856e4a0de3527e9f80e8bc4b678743ff4238" translate="yes" xml:space="preserve">
          <source>For browsers that do not support &lt;code&gt;Element.closest()&lt;/code&gt;, but carry support for &lt;code&gt;element.matches()&lt;/code&gt; (or a prefixed equivalent, meaning IE9+), a polyfill exists:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013082f9e18b352fec668a0853caae01797ab0ee" translate="yes" xml:space="preserve">
          <source>For browsers that do not support &lt;code&gt;Element.matches()&lt;/code&gt; or &lt;code&gt;Element.matchesSelector()&lt;/code&gt;, but carry support for &lt;code&gt;document.querySelectorAll()&lt;/code&gt;, a polyfill exists:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67be4f435f898deb5d53db036d3001877afbdbc4" translate="yes" xml:space="preserve">
          <source>For byte streams, the developer can set the &lt;code&gt;autoAllocateChunkSize&lt;/code&gt; with a positive integer value to turn on the stream's auto-allocation feature. With this turned on, the stream implementation will automatically allocate an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; with a size of the given integer, and call the underlying source code as if the consumer was using a BYOB reader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ccbfa0bb4fbbbb0be05aaa70c31e508574b655c" translate="yes" xml:space="preserve">
          <source>For commands which require an input argument, is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; providing that information. For example, &lt;code&gt;insertImage&lt;/code&gt; requires the URL of the image to insert. Specify &lt;code&gt;null&lt;/code&gt; if no argument is needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b925f30dde6723f3f18983eb8a75085ac005c71" translate="yes" xml:space="preserve">
          <source>For configurations of systems and codecs that are able to detect when the user is speaking and toggle muting on and off automatically, this option enables and disables that behavior. The default value is &lt;code&gt;true&lt;/code&gt;, enabling this functionality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa835bbb3b5c8a13cfc2a3fb07a72bc2db0a7a03" translate="yes" xml:space="preserve">
          <source>For continuous recognition, leading or trailing whitespace will be included where necessary so that concatenation of consecutive &lt;a href=&quot;../speechrecognitionresult&quot;&gt;&lt;code&gt;SpeechRecognitionResult&lt;/code&gt;&lt;/a&gt;s produces a proper transcript of the session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fda7a87018251f6d43e53c0005be47fb914de8b" translate="yes" xml:space="preserve">
          <source>For cross-browser compatibility, use &lt;code&gt;window.pageXOffset&lt;/code&gt; instead of &lt;code&gt;window.scrollX&lt;/code&gt;. &lt;em&gt;Additionally&lt;/em&gt;, older versions of Internet Explorer (&amp;lt; 9) do not support either property and must be worked around by checking other non-standard properties. A fully compatible example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea3a8370b1fed52c12e8e0c6ecf90ddea201fba" translate="yes" xml:space="preserve">
          <source>For cross-browser compatibility, use &lt;code&gt;window.pageYOffset&lt;/code&gt; instead of &lt;code&gt;window.scrollY&lt;/code&gt;. &lt;strong&gt;Additionally&lt;/strong&gt;, older versions of Internet Explorer (&amp;lt; 9) do not support either property and must be worked around by checking other non-standard properties. A fully compatible example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e31f7f1adddc18bf558f109ac17e45896d5185" translate="yes" xml:space="preserve">
          <source>For details about how to use &lt;code&gt;FileReader&lt;/code&gt;, see &lt;a href=&quot;../file/using_files_from_web_applications&quot;&gt;Using files from web applications&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43429dbb735254607093058cec2b2dcc55db406e" translate="yes" xml:space="preserve">
          <source>For details about how to use &lt;code&gt;XMLHttpRequest&lt;/code&gt;, see &lt;a href=&quot;using_xmlhttprequest&quot;&gt;Using XMLHttpRequest&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bea6126f0ae8221b7cffa6d35d2d9ecf8055b02" translate="yes" xml:space="preserve">
          <source>For details on how the ICE process works, see &lt;a href=&quot;webrtc_api/session_lifetime&quot;&gt;Lifetime of a WebRTC session&lt;/a&gt;. The article &lt;a href=&quot;webrtc_api/connectivity&quot;&gt;WebRTC connectivity&lt;/a&gt; provides additional useful details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37bc824f8e761b0250dbeca73c494b302ed62fb3" translate="yes" xml:space="preserve">
          <source>For devices that do not report &lt;code&gt;twist&lt;/code&gt;, the value &lt;em&gt;MUST&lt;/em&gt; be 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944b96c8a51e816d0468bc7153ab47f7b4845a31" translate="yes" xml:space="preserve">
          <source>For drawing straight lines, use the &lt;code&gt;lineTo()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd541bed0a5fdf3b102113da0090a1e14707fef2" translate="yes" xml:space="preserve">
          <source>For each &amp;lt;td&amp;gt; element, we then created the text node with the table cell's text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03c91ac5108d3e60600b55ab440cf518cb83e07" translate="yes" xml:space="preserve">
          <source>For each &amp;lt;tr&amp;gt; element, we used a loop to create the &amp;lt;td&amp;gt; elements, which are children of &amp;lt;tr&amp;gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c297be2c829b1a7a7c59609238cd5523dce46c48" translate="yes" xml:space="preserve">
          <source>For each &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;../filelist&quot;&gt;&lt;code&gt;FileList&lt;/code&gt;&lt;/a&gt; represented by &lt;code&gt;files&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a58feb5946ef36742ea4b33ad85128cf3ad02c" translate="yes" xml:space="preserve">
          <source>For each &lt;a href=&quot;intersectionobserverentry&quot;&gt;&lt;code&gt;IntersectionObserverEntry&lt;/code&gt;&lt;/a&gt; in the list &lt;code&gt;entries&lt;/code&gt;, we look to see if the entry's &lt;a href=&quot;intersectionobserverentry/intersectionratio&quot;&gt;&lt;code&gt;intersectionRatio&lt;/code&gt;&lt;/a&gt; is going up; if it is, we set the target's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/background-color&quot;&gt;&lt;code&gt;background-color&lt;/code&gt;&lt;/a&gt; to the string in &lt;code&gt;increasingColor&lt;/code&gt; (remember, it's &lt;code&gt;&quot;rgba(40, 40, 190, ratio)&quot;&lt;/code&gt;), replaces the word &quot;ratio&quot; with the entry's &lt;code&gt;intersectionRatio&lt;/code&gt;. The result: not only does the color get changed, but the transparency of the target element changes, too; as the intersection ratio goes down, the background color's alpha value goes down with it, resulting in an element that's more transparent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887fd64bb3769bed88bf3cb4bec3b31fe4d0c26d" translate="yes" xml:space="preserve">
          <source>For each attribute, you must specify its index. This is independent from the location inside the array buffer, so your attributes can be sent in a different order than how they are stored in the array buffer. You have two options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5b2e992ef18470be1a769afafba227e7ba49a0" translate="yes" xml:space="preserve">
          <source>For each constraint, you can typically specify an exact value you need, an ideal value you want, a range of acceptable values, and/or a value which you'd like to be as close to as possible. The specifics vary somewhat depending on the type of the constrainable property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ecae5a6fe9536a51713126cbbc2661ef6fa960" translate="yes" xml:space="preserve">
          <source>For each key in the octave, we check to see if the note's name has more than one character. We skip these, because we're leaving out the sharp notes in this example. If the note's name is only one character, then we call &lt;code&gt;createKey()&lt;/code&gt;, specifying the note string, octave, and frequency. The returned element is appended to the octave element created in step 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac15ad64d6635947e01a3139dea6db54cd6199e" translate="yes" xml:space="preserve">
          <source>For each of these Boolean properties, a value of &lt;code&gt;true&lt;/code&gt; indicates that the specified reason validation may have failed is true, with the exception of the valid property, which is &lt;code&gt;true&lt;/code&gt; if the element's value obeys all constraints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c128cb40710c84ee57f7b961d6277970417ecde1" translate="yes" xml:space="preserve">
          <source>For each task in the queue that we have time to execute, we do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090e7326ebd520f363635adb30b20fe9c045b724" translate="yes" xml:space="preserve">
          <source>For each version of each browser that supports WebRTC, adapter.js implements the needed polyfills, establishes the non-prefixed names of APIs, and applies any other changes needed to make the browser run code written to the WebRTC specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4fcca9eb2811aad09e00b434a1e817dc4359c74" translate="yes" xml:space="preserve">
          <source>For earlier versions, this interface is available through the &lt;a href=&quot;https://github.com/webrtc/adapter&quot;&gt;adapter.js&lt;/a&gt; polyfill</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541f4791e22605545b210e7501697a10ede17fb8" translate="yes" xml:space="preserve">
          <source>For early implementations of the spec, this was a sequence of identifiers for payment methods that the merchant website accepts. Starting with more recent browsers, this parameter is more generic than credit cards, it is a single &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;, and the meaning of the &lt;code&gt;data&lt;/code&gt; parameter changes with the &lt;code&gt;supportedMethods&lt;/code&gt;. For example, the basic card payment method is selected by specifying the string &lt;code&gt;basic-card&lt;/code&gt; here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6538473639d9456060112af6797758f35356b544" translate="yes" xml:space="preserve">
          <source>For even-width lines, each half ends up being an integer amount of pixels, so you want a path that is between pixels (that is, (3,1) to (3,5)), instead of down the middle of pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43afefc013d26f38c17e2f6c9252dc5f797bd407" translate="yes" xml:space="preserve">
          <source>For events with no secondary target, &lt;code&gt;relatedTarget&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af07d9b3eeaa9f089bd4a824a6dd880345d7b994" translate="yes" xml:space="preserve">
          <source>For example, Firefox does not yet support the &lt;code&gt;&quot;clipboard-read&quot;&lt;/code&gt; and &lt;code&gt;&quot;clipboard-write&quot;&lt;/code&gt; permissions, so access to the methods that access and change the contents of the clipboard are restricted in other ways. In addition, &lt;a href=&quot;clipboard/read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;clipboard/write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; are disabled by default and require changing a preference to enable them. Check the compatibility tables for each method before using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69e9bad2117727e5de3577ffbff7d20a87bb296" translate="yes" xml:space="preserve">
          <source>For example, a page at &lt;code&gt;&lt;var&gt;http://example.com/example.html&lt;/var&gt;&lt;/code&gt; running the following code will generate alerts as indicated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc244e4ccb8a14278e4e6089de2be152dfcb2db4" translate="yes" xml:space="preserve">
          <source>For example, a track whose &lt;a href=&quot;kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;&quot;commentary&quot;&lt;/code&gt; might have a &lt;code&gt;label&lt;/code&gt; such as &lt;code&gt;&quot;Commentary with director Mark Markmarkimark and star Donna Donnalidon&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab37f2b4679f7758b6296d16979ee44b63122bf" translate="yes" xml:space="preserve">
          <source>For example, a track whose &lt;a href=&quot;kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;&quot;sign&quot;&lt;/code&gt; might have a &lt;code&gt;label&lt;/code&gt; such as &lt;code&gt;&quot;A sign-language interpretation.&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc80d793835b3d6eac6d71c321e551493016c518" translate="yes" xml:space="preserve">
          <source>For example, an event handler callback that can be used to handle both &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/fullscreenchange&quot;&gt;fullscreenchange&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/fullscreenerror&quot;&gt;fullscreenerror&lt;/a&gt;&lt;/code&gt; might look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7c8b80da5cb866ecfa4362deec0181e7f8a972c" translate="yes" xml:space="preserve">
          <source>For example, assuming there is one &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element in the document and its &lt;code&gt;id&lt;/code&gt; is &lt;code&gt;&quot;myForm&quot;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7121f52ecafdd9d1a207d2e8ad79a783a8a41518" translate="yes" xml:space="preserve">
          <source>For example, browser vendors are proposing that the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/wheel&quot;&gt;wheel event&lt;/a&gt; can only be canceled &lt;a href=&quot;https://github.com/WICG/interventions/issues/33&quot;&gt;the first time the listener is called&lt;/a&gt; &amp;mdash; any following &lt;code&gt;wheel&lt;/code&gt; events cannot be canceled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca4824400bbc66d6cc8c92d9f18c1c6daebe50a" translate="yes" xml:space="preserve">
          <source>For example, consider this call to &lt;code&gt;addEventListener()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed247785b444aca862e59eefb038810ceda5de63" translate="yes" xml:space="preserve">
          <source>For example, consider this snippet, which uses the &lt;code&gt;responseType&lt;/code&gt; of &lt;code&gt;&quot;arraybuffer&quot;&lt;/code&gt; to fetch the remote content into a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; object, which stores the raw binary data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1023cfbfa8132d01a9a851d62938c83a86b6e019" translate="yes" xml:space="preserve">
          <source>For example, given code like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fa424062256007304f2d2d012485eb951f9a9f" translate="yes" xml:space="preserve">
          <source>For example, given this code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c595fbc9af8de7a1f65e27d94fcb7d6f45e6b242" translate="yes" xml:space="preserve">
          <source>For example, if a 600x400 pixel element is being displayed inside a 300x300 pixel scrollbox, &lt;code&gt;scrollWidth&lt;/code&gt; will return 600 while &lt;code&gt;scrollHeight&lt;/code&gt; will return 400.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93a10bafa294a3080b640facb870f4d87866afe" translate="yes" xml:space="preserve">
          <source>For example, if the primary language used in the track is United States English, this value would be &lt;code&gt;&quot;en-US&quot;&lt;/code&gt;. For Brazilian Portuguese, the value would be &lt;code&gt;&quot;pt-BR&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f818c21cfc51b2bbf835e0d401e87974f7c8544" translate="yes" xml:space="preserve">
          <source>For example, if validation simply ensures that only permitted characters are included in the organization's name, this might return a string such as &quot;The organization name may only contain the letters A-Z, digits, spaces, and commas.&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b62dcc27ac41560921effce0e3a27d5b09dc59" translate="yes" xml:space="preserve">
          <source>For example, if you load an &lt;code&gt;Image&lt;/code&gt; and specify the optional size parameters in its &lt;a href=&quot;../htmlimageelement/image&quot;&gt;constructor&lt;/a&gt;, you will have to use the &lt;code&gt;naturalWidth&lt;/code&gt; and &lt;code&gt;naturalHeight&lt;/code&gt; properties of the created instance to properly calculate things like crop and scale regions, rather than &lt;code&gt;element.width&lt;/code&gt; and &lt;code&gt;element.height&lt;/code&gt;. The same goes for &lt;code&gt;videoWidth&lt;/code&gt; and &lt;code&gt;videoHeight&lt;/code&gt; if the element is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0275e9860eb2f245ec5d23d1074f91be6f1a98" translate="yes" xml:space="preserve">
          <source>For example, if you want to be informed every time a target's visibility passes backward or forward through each 25% mark, you would specify the array [0, 0.25, 0.5, 0.75, 1] as the list of thresholds when creating the observer. You can tell which direction the visibility changed in (that is, whether the element became more visible or less visible) by checking the value of the &lt;a href=&quot;intersectionobserverentry/isintersecting&quot;&gt;&lt;code&gt;isIntersecting&lt;/code&gt;&lt;/a&gt; property on the &lt;a href=&quot;intersectionobserverentry&quot;&gt;&lt;code&gt;IntersectionObserverEntry&lt;/code&gt;&lt;/a&gt; passed into the callback function at the time of the visibility change. If &lt;code&gt;isIntersecting&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the target element has become at least as visible as the threshold that was passed. If it's &lt;code&gt;false&lt;/code&gt;, the target is no longer as visible as the given threshold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e5ceae1c54f1765089b7d1775075370c885c62" translate="yes" xml:space="preserve">
          <source>For example, if you want to check for the &lt;code&gt;passive&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1b2e4dc63e5407203416ff132e92b74560c2b1" translate="yes" xml:space="preserve">
          <source>For example, if you're writing code to control a voicemail system by sending DTMF codes, you might use a string such as &quot;*,1,5555&quot;. In this example, we would send &quot;*&quot; to request access to the VM system, then, after a pause, send a &quot;1&quot; to start playback of voicemail messages, then after a pause, dial &quot;5555&quot; as a PIN number to open the messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088d67a57e8f02ef79d519e14895dc29163166cd" translate="yes" xml:space="preserve">
          <source>For example, in Web Dictaphone we have theee main UI areas, stacked vertically. We wanted to give the first two (the header and the controls) fixed heights:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025b7f89a325b0071d7b9c5d9c99aa15745333b4" translate="yes" xml:space="preserve">
          <source>For example, in the to-do-list example we use the following snippet to create a notification when required (found inside the &lt;code&gt;createNotification()&lt;/code&gt; function):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="662b0649635e0ed1cdab47ca505ef624048bbc54" translate="yes" xml:space="preserve">
          <source>For example, let's say you have a game with a UI on top, the gameplay action in the middle, and a static background on the bottom. In this case, you could split your game into three &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; layers. The UI would change only upon user input, the gameplay layer would change with every new frame, and the background would remain generally unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41ca8ba7981e3a7ea1f0fca84b080537de82371" translate="yes" xml:space="preserve">
          <source>For example, on Chrome for Android, the returned &lt;code&gt;Promise&lt;/code&gt; will resolve after the user chooses an application to share to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd489774a4395bc003f3e9bda64f2f67e13b78e" translate="yes" xml:space="preserve">
          <source>For example, on Firefox versions older than 38, the adapter adds the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/urls&quot;&gt;&lt;code&gt;RTCPeerConnection.urls&lt;/code&gt;&lt;/a&gt; property; Firefox doesn't natively support this property until Firefox 38, while on Chrome, support for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; based API is added if not yet available. These are just a couple of examples; there are of course other adjustments made for you by the shim.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ea09f2cf1656b54d86a3023c7f736b213ecd7d" translate="yes" xml:space="preserve">
          <source>For example, setting fill to &lt;code&gt;&quot;none&quot;&lt;/code&gt; means none of the animation's effects are applied to the element if the current time is outside the range of times during which the animation is running, while &lt;code&gt;&quot;forwards&quot;&lt;/code&gt; ensures that once the animation's end time has been passed, the element will continue to be drawn in the state it was in at its last rendered frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d848c3d6bc18f1c190aef5a2ce38d447c2f518a" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;code&lt;/code&gt; returned is &lt;code&gt;&quot;KeyQ&quot;&lt;/code&gt; is for the &quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946bf47c143b0df38aea5dd5037556e3f5ce083d" translate="yes" xml:space="preserve">
          <source>For example, the attribute named &lt;code&gt;&quot;data-abc-def&quot;&lt;/code&gt; corresponds to the key &lt;code&gt;&quot;abcDef&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b00ad1f0dd39bb1c6a1b4c5f2b5e4fa7c8246b" translate="yes" xml:space="preserve">
          <source>For example, the attribute named &lt;code&gt;data-abc-def&lt;/code&gt; corresponds to the key &lt;code&gt;abcDef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82cb1add6b43948212de6164e094dabcaeb0c46f" translate="yes" xml:space="preserve">
          <source>For example, the code for drawing a triangle would look something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df725cc6794ea7deb0aebcbaf9bd48111c58a18" translate="yes" xml:space="preserve">
          <source>For example, the following vertex:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4644a11a5777d3428a735f0d2f74fdfd37adfcb2" translate="yes" xml:space="preserve">
          <source>For example, the standard DOM specifies that the &lt;code&gt;getElementsByTagName&lt;/code&gt; method in the code below must return a list of all the &lt;code&gt;&amp;lt;P&amp;gt;&lt;/code&gt; elements in the document:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b6d7fff1c1659d1982598b96b62a523d7ff972" translate="yes" xml:space="preserve">
          <source>For example, to find &lt;a href=&quot;text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; nodes that contain typos:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa3182a1f8a4ed553c6ef6870d586434691bef0" translate="yes" xml:space="preserve">
          <source>For example, to paint the entire image represented by &lt;code&gt;myImageData&lt;/code&gt; to the top left corner of the context, you can simply do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a607fb944802b46606eba28e1d52e23ab564902a" translate="yes" xml:space="preserve">
          <source>For example, to read the blue component's value from the pixel at column 200, row 50 in the image, you would do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8eb67492e61b3155acefbffbfc2eae153d4258" translate="yes" xml:space="preserve">
          <source>For example, to watch the target node only for attribute changes, the &lt;a href=&quot;../mutationobserverinit&quot;&gt;&lt;code&gt;MutationObserverInit&lt;/code&gt;&lt;/a&gt; passed into &lt;a href=&quot;../mutationobserver/mutationobserver&quot;&gt;&lt;code&gt;MutationObserver()&lt;/code&gt;&lt;/a&gt; can be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e480d05f386fec579263455796d87479a0975772" translate="yes" xml:space="preserve">
          <source>For example, values of +100 and -100 detune the source up or down by one semitone, while +1200 and -1200 detune it up or down by one octave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0998f7774989110032bcd5eeb7e81e9fc309e6" translate="yes" xml:space="preserve">
          <source>For example, we could provide a text description of the canvas content or provide a static image of the dynamically rendered content. This can look something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2f2c43793cd3ea53261edccc44ff29806a68e8" translate="yes" xml:space="preserve">
          <source>For example, when a &lt;code&gt;Request&lt;/code&gt; object is created using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request&lt;/code&gt;&lt;/a&gt; constructor, the value of the &lt;code&gt;mode&lt;/code&gt; property for that &lt;code&gt;Request&lt;/code&gt; is set to &lt;code&gt;cors&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402692877ce0281722246a5782e43afecc121481" translate="yes" xml:space="preserve">
          <source>For example, when checking for program linking success, you could also check if the context is not lost:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab9574d78a9e26431ffbe0080f1e2efe84167a2" translate="yes" xml:space="preserve">
          <source>For example, you can erase the entire contents of a document by clearing the contents of the document's &lt;a href=&quot;../document/body&quot;&gt;&lt;code&gt;body&lt;/code&gt;&lt;/a&gt; attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01232327fb66e0cba3e833cebcf8a00fc181618c" translate="yes" xml:space="preserve">
          <source>For example, your vertex shader may be using a position and a color attribute. Most meshes have the color specified at a per-vertex level, but some meshes are of a uniform shade. For those meshes, it is not necessary to place the same color for each vertex into the array buffer, so you use &lt;code&gt;gl.vertexAttrib4fv()&lt;/code&gt; to set a constant color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="0209b00977010d89f7de675b1ec15b56879dc063" translate="yes" xml:space="preserve">
          <source>For example: &quot;&lt;code&gt;MacIntel&lt;/code&gt;&quot;, &quot;&lt;code&gt;Win32&lt;/code&gt;&quot;, &quot;&lt;code&gt;FreeBSD i386&lt;/code&gt;&quot;, &quot;&lt;code&gt;WebTV OS&lt;/code&gt;&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee92f05f010dc2159e899e669cc1737f45fd66d3" translate="yes" xml:space="preserve">
          <source>For examples, see the article &lt;a href=&quot;webrtc_api/signaling_and_video_calling&quot;&gt;Signaling and video calling&lt;/a&gt;, which demonstrates the entire process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703e455a5d70830a9db193936479aedec0622364" translate="yes" xml:space="preserve">
          <source>For general output of logging information. You may use &lt;a href=&quot;console#Using_string_substitutions&quot;&gt;string substitution&lt;/a&gt; and additional arguments with this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e401f31d0362923d2375a95ae821b8cfc0e6c13" translate="yes" xml:space="preserve">
          <source>For higher performance, we could also do the previous JSON to ArrayBuffer conversion on the server-side, e.g. with Node.js. Then we could load the binary file and interpret it as an array buffer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aca0a0c9cd87688262badda939af21ccea4939c" translate="yes" xml:space="preserve">
          <source>For historical reasons, different arguments are passed to &lt;code&gt;window.onerror&lt;/code&gt; and &lt;code&gt;element.onerror&lt;/code&gt; handlers (as well as on error-type &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;window.addEventListener&lt;/code&gt;&lt;/a&gt; handlers).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3537ed4ddf437dbc549e35b4ccf205e1ff3d242a" translate="yes" xml:space="preserve">
          <source>For host candidates, &lt;code&gt;relatedAddress&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, meaning the field is not included in the candidate's a-line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fba930fc28333d1118d0a9de407928ed1fb6f9a" translate="yes" xml:space="preserve">
          <source>For host candidates, &lt;code&gt;relatedPort&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, meaning the field is not included in the candidate's a-line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b20647206c876ed9fc4b21d65fac9d0756a6686" translate="yes" xml:space="preserve">
          <source>For instance, on a Mac whose Dock is located at the bottom of screen (which is the default), the value of &lt;code&gt;availHeight&lt;/code&gt; is approximately the value of &lt;code&gt;height&lt;/code&gt; (the total height of the screen in CSS pixels) minus the heights of the Dock and menu bar, as seen in the diagram below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c57c34035239f3593c59210a9057fa2da615e48" translate="yes" xml:space="preserve">
          <source>For integer formats this value is always 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9041fb2ced1f676ce65a5418423472b7f703e58" translate="yes" xml:space="preserve">
          <source>For making a request and fetching a resource, use the &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt;&lt;/a&gt; method. It is implemented in multiple interfaces, specifically &lt;a href=&quot;window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;workerglobalscope&quot;&gt;&lt;code&gt;WorkerGlobalScope&lt;/code&gt;&lt;/a&gt;. This makes it available in pretty much any context you might want to fetch resources in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a7ce626ed90f140e67796ab8a6862f171056bb" translate="yes" xml:space="preserve">
          <source>For more complete applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic-float-data/&quot;&gt;Voice-change-O-matic-float-data&lt;/a&gt; demo (see the &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic-float-data&quot;&gt;source code&lt;/a&gt; too).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df54d095d6f2af8f3ebadadd0613a81a96b0ce0" translate="yes" xml:space="preserve">
          <source>For more complex operations, you'll need to use &lt;a href=&quot;put&quot;&gt;&lt;code&gt;Cache.put()&lt;/code&gt;&lt;/a&gt; directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53891f42c8ed605a011aafb23d385423468c49a" translate="yes" xml:space="preserve">
          <source>For more complex visual effects, you can also perform other operations during the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event, for example, by inserting an element at the location where the drop will occur. For example, this might be an insertion marker or an element that represents the dragged element in its new location. To do this, you could create an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/XUL/image&quot;&gt;image&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/XUL/separator&quot;&gt;separator&lt;/a&gt; element, for example, and simply insert it into the document during the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5398695795d3572461770df88baf5afbf33ab025" translate="yes" xml:space="preserve">
          <source>For more details about audio buffers, check out the &lt;a href=&quot;../audiobuffer&quot;&gt;&lt;code&gt;AudioBuffer&lt;/code&gt;&lt;/a&gt; reference page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ef95f66da581bd04c10e74d5ca8a9da0a5cfd2" translate="yes" xml:space="preserve">
          <source>For more details about media element audio source nodes, check out the &lt;a href=&quot;../mediaelementaudiosourcenode&quot;&gt;&lt;code&gt;MediaElementAudioSourceNode&lt;/code&gt;&lt;/a&gt; reference page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b8036ae0ed4bd94e8279ba22cea9d2b1a1ed53" translate="yes" xml:space="preserve">
          <source>For more details about media stream destination nodes, check out the &lt;a href=&quot;../mediastreamaudiodestinationnode&quot;&gt;&lt;code&gt;MediaStreamAudioDestinationNode&lt;/code&gt;&lt;/a&gt; reference page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad5534ad7eac192b75b31d3da68fa7506f73f5d" translate="yes" xml:space="preserve">
          <source>For more details about the key generator, please see &lt;a href=&quot;http://www.w3.org/TR/IndexedDB/#key-generator-concept&quot;&gt;&quot;W3C Key Generators&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ee8bf0c200782cf7ab5aee0b48c95b32e9c35a" translate="yes" xml:space="preserve">
          <source>For more details about the returned value, refer to this &lt;a href=&quot;http://groups.google.com/group/mozilla.dev.platform/browse_thread/thread/5628c6f346859d4f/169aa7004565066?hl=en&amp;amp;ie=UTF-8&amp;amp;oe=utf-8&amp;amp;q=window.frames&amp;amp;pli=1&quot;&gt;thread on mozilla.dev.platform&lt;/a&gt; [dead link].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae5a478ab70e7a2e016693bba2b0bd466f5b30d" translate="yes" xml:space="preserve">
          <source>For more details on using these features, see &lt;a href=&quot;web_speech_api/using_the_web_speech_api&quot;&gt;Using the Web Speech API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6773010893e99569f196eb0b3067ffe648c717c1" translate="yes" xml:space="preserve">
          <source>For more details, check the following table on how the value changes from 0% to 100% as the time progresses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3bda367d6404e2c481b21ae77ba5f74c8022c58" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Events/#event-flow&quot;&gt;section 3.1, Event dispatch and DOM event flow&lt;/a&gt;, of the DOM Level 3 Events specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6707a506d4a6880cf6fb0110f55656023b847094" translate="yes" xml:space="preserve">
          <source>For more examples and details, see &lt;a href=&quot;../battery_status_api&quot;&gt;Battery Status API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4ec442f85c89847408fbb7dcd2ecadb9f85910" translate="yes" xml:space="preserve">
          <source>For more examples check out the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Sending_and_Receiving_Binary_Data&quot;&gt;Sending and Receiving Binary Data&lt;/a&gt; page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c160af1947ccbf68fe9759e9744ec967e693bbd" translate="yes" xml:space="preserve">
          <source>For more examples of fill and stroke styles, see &lt;a href=&quot;../canvas_api/tutorial/applying_styles_and_colors&quot;&gt;Applying styles and color&lt;/a&gt; in the &lt;a href=&quot;../canvas_api/tutorial&quot;&gt;Canvas tutorial&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb0073bd242836f57574876ee62be22d9818bbf" translate="yes" xml:space="preserve">
          <source>For more examples of stroke and fill styles, see the chapter &lt;a href=&quot;../canvas_api/tutorial/applying_styles_and_colors&quot;&gt;Applying styles and color&lt;/a&gt; in the &lt;a href=&quot;../canvas_api/tutorial&quot;&gt;Canvas tutorial&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06544b1da770ec62cc8ffa9db36ffe05427a0c5f" translate="yes" xml:space="preserve">
          <source>For more examples using &lt;code&gt;ImageData.data&lt;/code&gt;, see &lt;a href=&quot;../canvas_api/tutorial/pixel_manipulation_with_canvas&quot;&gt;Pixel manipulation with canvas&lt;/a&gt;, &lt;a href=&quot;../canvasrenderingcontext2d/createimagedata&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.createImageData()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../canvasrenderingcontext2d/putimagedata&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.putImageData()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5085ec28bc90d46274636fbadba8640e697d9cd" translate="yes" xml:space="preserve">
          <source>For more examples using &lt;code&gt;createImageData()&lt;/code&gt; and the &lt;code&gt;ImageData&lt;/code&gt; object, see &lt;a href=&quot;../canvas_api/tutorial/pixel_manipulation_with_canvas&quot;&gt;Pixel manipulation with canvas&lt;/a&gt; and &lt;a href=&quot;../imagedata/data&quot;&gt;&lt;code&gt;ImageData.data&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31932ee0a8b7fc874a991d1fc4d1e4a69ec7133" translate="yes" xml:space="preserve">
          <source>For more examples, see &lt;a href=&quot;../geolocation_api&quot;&gt;Using geolocation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e0be443f5b0509dea3fc312466c2ca45414cc1" translate="yes" xml:space="preserve">
          <source>For more information</source>
          <target state="translated">欲了解更多信息</target>
        </trans-unit>
        <trans-unit id="515baa4c6aa948ea15c35098dc7d71713fdc9ffa" translate="yes" xml:space="preserve">
          <source>For more information about handling the end of a drag operation, see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Drag_Operations#dragend&quot;&gt;Finishing a Drag&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48961070e6b679c21252f470b64c9ad262d9a5d" translate="yes" xml:space="preserve">
          <source>For more information on how the browser handles storing your data in the background, read &lt;a href=&quot;browser_storage_limits_and_eviction_criteria&quot;&gt;Browser storage limits and eviction criteria&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f26eec334e53217ac3d2defffa1313af0ca8a2" translate="yes" xml:space="preserve">
          <source>For more information on what technologies are involved in writing JavaScript on the web, see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/JavaScript_technologies_overview&quot;&gt;JavaScript technologies overview&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b62f7a6427986affdf7d6f2ed2a7bd6ae44f5c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations#drop&quot;&gt;Performing a Drop&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89cfff560b7458c48e318229af8898af210ef936" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations#droptargets&quot;&gt;Specifying Drop Targets&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded252930fdb77ff4ecb9e2a4f69d03656b5bdd1" translate="yes" xml:space="preserve">
          <source>For more information, see the article &lt;a href=&quot;https://developer.nvidia.com/astc-texture-compression-for-game-assets&quot;&gt;Using ASTC Texture Compression for Game Assets&lt;/a&gt; by nvidia.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a331c5cdfb63640d85da3e1de5d38808aaf58686" translate="yes" xml:space="preserve">
          <source>For most standard uses, you'll probably want to use &lt;a href=&quot;getstate&quot;&gt;&lt;code&gt;PositionSensorVRDevice.getState&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597730a44eabbf151d059b605ea69f29bb7288a8" translate="yes" xml:space="preserve">
          <source>For most types of network request this change has no impact because you can't observe the final URL. There are a few, though, where it does matter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908b5c201045cc05f98db76291fce05b99c9d56c" translate="yes" xml:space="preserve">
          <source>For mouse there is only one pointer, so it will always be the primary pointer. For touch input, a pointer is considered primary if the user touched the screen when there were no other active touches. For pen and stylus input, a pointer is considered primary if the user's pen initially contacted the screen when there were no other active pens contacting the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827732455394394b72e9fad01430e4a2beec7bf3" translate="yes" xml:space="preserve">
          <source>For nodes of any &lt;a href=&quot;nodetype&quot;&gt;&lt;code&gt;Node.nodeType&lt;/code&gt;&lt;/a&gt; other than &lt;code&gt;ELEMENT_NODE&lt;/code&gt; and &lt;code&gt;ATTRIBUTE_NODE&lt;/code&gt; the value of &lt;code&gt;namespaceURI&lt;/code&gt; is always &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4aa9d7b07df99f287987f8cc75c62b10afe275" translate="yes" xml:space="preserve">
          <source>For nodes of any &lt;a href=&quot;nodetype&quot;&gt;type&lt;/a&gt; other than &lt;code&gt;ELEMENT_NODE&lt;/code&gt; and &lt;code&gt;ATTRIBUTE_NODE&lt;/code&gt;&lt;code&gt;localName&lt;/code&gt; is always &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdffdabd58998d3b3df0066770abadfb5713dbfc" translate="yes" xml:space="preserve">
          <source>For noise, let's do the latter. We first need to calculate the size of our buffer, to create it. We can use the &lt;a href=&quot;../baseaudiocontext/samplerate&quot;&gt;&lt;code&gt;BaseAudioContext.sampleRate&lt;/code&gt;&lt;/a&gt; property for this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12d58e2a4d541627ffdc4d27a07125c476374eb" translate="yes" xml:space="preserve">
          <source>For older WebKit browsers, call this method before creating or deleting an object store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b50125989cefd727dba265993cf73d9838d409c" translate="yes" xml:space="preserve">
          <source>For one, the duration is in milliseconds as opposed to seconds &amp;mdash; 3000 not 3s. Like &lt;a href=&quot;../windoworworkerglobalscope/settimeout&quot;&gt;&lt;code&gt;WindowTimers.setTimeout()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;Window.requestAnimationFrame()&lt;/code&gt;&lt;/a&gt;, the Web Animations API only takes milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c36ef5c782eb0189ac1149d60ec7bce118ff4772" translate="yes" xml:space="preserve">
          <source>For other node types, &lt;code&gt;textContent&lt;/code&gt; returns the concatenation of the &lt;code&gt;textContent&lt;/code&gt; of every child node, excluding comments and processing instructions. This is an empty string if the node has no children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c67bd4360da33f97797cced54316e67ac6afc9c" translate="yes" xml:space="preserve">
          <source>For our attack and release, we'll use the &lt;code&gt;linearRampToValueAtTime&lt;/code&gt; method as mentioned above. It takes two parameters &amp;mdash; the value you want to set the parameter you are changing to (in this case the gain) and when you want to do this. In our case &lt;em&gt;when&lt;/em&gt; is controlled by our inputs. So in the example below the gain is being increased to 1, at a linear rate, over the time the attack range input has been set to. Similarly, for our release, the gain is being set to 0, at a linear rate, over the time the release input has been set to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f740b746681f4dddbccca4d348b62451fe3531" translate="yes" xml:space="preserve">
          <source>For our purposes, we're going to simplify the lighting model by only considering simple directional and ambient lighting; we won't have any &lt;a href=&quot;https://en.wikipedia.org/wiki/specular%20highlights&quot;&gt;specular highlights&lt;/a&gt; or point light sources in this scene. Instead, we'll have our ambient lighting plus a single directional light source, aimed at the rotating cube from the &lt;a href=&quot;using_textures_in_webgl&quot;&gt;previous demo&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133c8d30770e010f387df0daea5c6ea9a53262a2" translate="yes" xml:space="preserve">
          <source>For scrolling elements, see &lt;a href=&quot;../element/scrolltop&quot;&gt;Element.scrollTop &lt;/a&gt;and &lt;a href=&quot;../element/scrollleft&quot;&gt;Element.scrollLeft&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af7a0f572b49305ff5dc3fa2c421f26541090df" translate="yes" xml:space="preserve">
          <source>For security reasons the &lt;code&gt;History&lt;/code&gt; object doesn't allow the non-privileged code to access the URLs of other pages in the session history, but it does allow it to navigate the session history.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45460e1604cbde1478caf5b8d453b6b364461dd9" translate="yes" xml:space="preserve">
          <source>For security reasons, &lt;code&gt;registerProtocolHandler()&lt;/code&gt; has restrictions on which schemes may be registered. A custom scheme may be registered as long as the scheme's name begins with &quot;web+&quot;, is at least five characters long (including the &quot;web+&quot; prefix), and has only lower-case ASCII letters in its name. For example, &quot;web+burger&quot;, as shown in the &lt;a href=&quot;#Example&quot;&gt;Example&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b23e6d77dac2d54d008173bc989b2f9d521ee3ea" translate="yes" xml:space="preserve">
          <source>For security reasons, Firefox does not support creating files. This option has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5adbfed7fd158fb15fd3450755f5638906a51e28" translate="yes" xml:space="preserve">
          <source>For security reasons, browsers do not allow you to run your app from &lt;code&gt;file://&lt;/code&gt;. In fact, many of the powerful storage APIs (such as File System, BlobBuilder, and FileReader) throw errors if you run the app locally from &lt;code&gt;file://&lt;/code&gt;. When you're just testing your app, and you don't want to set up a web server, you can bypass the security restriction on Chrome. Just start Chrome with the &lt;code&gt;--allow-file-access-from-files&lt;/code&gt; flag. Use the flag only for testing purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb52ac04944c8992312ec9a9cb5bb8bf121b4fd" translate="yes" xml:space="preserve">
          <source>For security reasons, it's no longer possible for a web site to change the default size of a window in a browser if the window wasn&amp;rsquo;t created by &lt;code&gt;window.open&lt;/code&gt; or contains more than one tab. See the compatability table for details on the change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2cb9ec4ac5e20397b14bb4a305f6b0f766b479f" translate="yes" xml:space="preserve">
          <source>For security reasons, some headers can only be controlled by the user agent. These headers include the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name&quot;&gt;forbidden header names&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_response_header_name&quot;&gt;forbidden response header names&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290b08c7f9ac570857ddf835832a5cb8e4a00aca" translate="yes" xml:space="preserve">
          <source>For security reasons, some headers can only be controller by the user agent. These headers include the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name&quot;&gt;forbidden header names&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_response_header_name&quot;&gt;forbidden response header names&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea964be889b46daf0ee1599185f8b9f23a9107f" translate="yes" xml:space="preserve">
          <source>For security reasons, the &lt;code&gt;PaymentRequest.show()&lt;/code&gt; method can't just be initiated at any time. It may only be called while handling events that represent user interactions, such as &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keyup&quot;&gt;keyup&lt;/a&gt;&lt;/code&gt;, or the like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a72b0a2a577c037351cf1e0db3bdff2344dc813" translate="yes" xml:space="preserve">
          <source>For security reasons, the &lt;code&gt;label&lt;/code&gt; field is always blank unless an active media stream exists &lt;em&gt;or&lt;/em&gt; the user has granted persistent permission for media device access. The set of device labels could otherwise be used as part of a fingerprinting mechanism to identify a user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7dbc8fd741b3397a41346d075ecd0733ba4c20" translate="yes" xml:space="preserve">
          <source>For security reasons, to work properly on Safari, construct using &lt;code&gt;document.getElementById('your-frame').contentWindow&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5440c542e00dfbe89558d1039aa7718bb3fa6ae" translate="yes" xml:space="preserve">
          <source>For simple cases, you can use the special type &lt;code&gt;URL&lt;/code&gt; just to retrieve the first valid URL in the list. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b7a76c2d2e640b33be6413055e80adab9339e2" translate="yes" xml:space="preserve">
          <source>For slightly more controlled error handling and backwards compatibility, it is a good idea to wrap your worker accessing code in the following (&lt;a href=&quot;https://github.com/mdn/simple-web-worker/blob/gh-pages/main.js&quot;&gt;main.js&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce2fcd0be211dcf1c1286a775b477719e512560" translate="yes" xml:space="preserve">
          <source>For technical details, see &lt;a href=&quot;https://tools.ietf.org/html/rfc4585&quot;&gt;RFC 4585: 6.3.2&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db137f6ee5c3fe0adbc5dd07cee0061c5d6595fa" translate="yes" xml:space="preserve">
          <source>For technical reasons related to how the &lt;a href=&quot;https://en.wikipedia.org/wiki/Fast_Fourier_transform&quot;&gt;Fast Fourier transform&lt;/a&gt; is defined, it is always half the value of &lt;a href=&quot;fftsize&quot;&gt;&lt;code&gt;AnalyserNode.fftSize&lt;/code&gt;&lt;/a&gt;. Therefore, it will be one of &lt;code&gt;16&lt;/code&gt;, &lt;code&gt;32&lt;/code&gt;, &lt;code&gt;64&lt;/code&gt;, &lt;code&gt;128&lt;/code&gt;, &lt;code&gt;256&lt;/code&gt;, &lt;code&gt;512&lt;/code&gt;, &lt;code&gt;1024&lt;/code&gt;, &lt;code&gt;2048&lt;/code&gt;, &lt;code&gt;4096&lt;/code&gt;, &lt;code&gt;8192&lt;/code&gt;, and &lt;code&gt;16384&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60386aadbfa6ca5ad55c3a0bee48ef7cda46c6eb" translate="yes" xml:space="preserve">
          <source>For that reason, it is recommended you not use &lt;code&gt;innerHTML&lt;/code&gt; when inserting plain text; instead, use &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;. This doesn't parse the passed content as HTML, but instead inserts it as raw text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ed338246af8d61c5c302b4ce219d972c5579f9" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/circle&quot;&gt;&lt;code&gt;&amp;lt;circle&amp;gt;&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/ellipse&quot;&gt;&lt;code&gt;&amp;lt;ellipse&amp;gt;&lt;/code&gt;&lt;/a&gt; elements, this attribute defines the x-coordinate of the center of the element. If unspecified, the effect is as if the value is set to &quot;0&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51338ec88876f12ab3279d51be4bda78f787fa4b" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/radialGradient&quot;&gt;&lt;code&gt;&amp;lt;radialGradient&amp;gt;&lt;/code&gt;&lt;/a&gt; element, this attribute defines the x-coordinate of the largest (i.e., outermost) circle for the radial gradient. The gradient will be drawn such that &lt;strong&gt;100%&lt;/strong&gt; gradient stop is mapped to the perimeter of the largest (i.e. outermost) circle. If the attribute is not specified, the effect is as if a value of &lt;strong&gt;50%&lt;/strong&gt; were set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07933a138a1324e96b6dd0e15a23729678f053aa" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; events, &lt;code&gt;dropEffect&lt;/code&gt; will be initialized based on what action the user is requesting. How this is determined is platform specific, but typically the user can press modifier keys such as the alt key to adjust the desired action. Within event handlers for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; events, &lt;code&gt;dropEffect&lt;/code&gt; should be modified if a different action is desired than the action that the user is requesting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3289c2bea86d4b3e29bccd88fa9586581e804d24" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt; events, &lt;code&gt;dropEffect&lt;/code&gt; will be set to the action that was desired, which will be the value &lt;code&gt;dropEffect&lt;/code&gt; had after the last &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; event. In a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt; event, for instance, if the desired dropEffect is &quot;move&quot;, then the data being dragged should be removed from the source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757da453ca496832618e2c5568f8ab5be3ba7de2" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; event, it is a list of the touch points that have been removed from the surface (that is, the set of touch points corresponding to fingers no longer touching the surface).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8395c44f651886a705e11c3721eaca5980bfaa" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; event, it is a list of the touch points that have changed since the last event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2239e84ba3826a0be153cc2788b51acbbaf3dfbe" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt; event, it is a list of the touch points that became active with the current event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45adbc85b550651542e7117aae2e1b897803729f" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;touchend&lt;/code&gt; event, it is a list of the touch points that have been removed from the surface (that is, the set of touch points corresponding to fingers no longer touching the surface).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de0e77ce87aed42acd5d6e2b2e4038cc3d1c63b" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;touchmove&lt;/code&gt; event, it is a list of the touch points that have changed since the last event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340f558312ea1cfd0ecca6f56c44465e6e55af1c" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;touchstart&lt;/code&gt; event, it is a list of the touch points that became active with the current event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86fc9e694a7b55bc108d5ef4ea19f9085eb30b64" translate="yes" xml:space="preserve">
          <source>For the UI controls, let's expose both frequencies of our oscillators, allowing them to be controlled via range inputs. One will change the tone and the other will change how the pulse modulates the first wave:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61fd595026d0edb87b7c8aa1e7416cd0d3a2aeeb" translate="yes" xml:space="preserve">
          <source>For the current standard:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b96ed08f480f10138635b5824f2bb5319b6ff8" translate="yes" xml:space="preserve">
          <source>For the document itself, &lt;code&gt;nodeValue&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;. For text, comment, and CDATA nodes, &lt;code&gt;nodeValue&lt;/code&gt; returns the content of the node. For attribute nodes, the value of the attribute is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca45521afc78766a16b91df14616087b701e0b5" translate="yes" xml:space="preserve">
          <source>For the experimental version with &lt;code&gt;options&lt;/code&gt; (see below):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0366d977fb958ac2086a3203c2641d7be723c5a" translate="yes" xml:space="preserve">
          <source>For the moment not all browsers are implementing the unprefixed version of the API (for vendor agnostic access to the Fullscreen API you can use &lt;a href=&quot;https://github.com/rafrex/fscreen&quot;&gt;Fscreen&lt;/a&gt;). Here is the table summarizing the prefixes and name differences between them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa37f7e99daaf0a95685464662873e0b59618014" translate="yes" xml:space="preserve">
          <source>For the reference documentation on key range, see &lt;a href=&quot;../idbkeyrange&quot;&gt;&lt;code&gt;IDBKeyRange&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae5723616a96d6f397133682594c73b108ec334" translate="yes" xml:space="preserve">
          <source>For the reference documentation on object store, see &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6369d67c56f0983a1cf6336a9083814bc5f0cf" translate="yes" xml:space="preserve">
          <source>For the reference documentation on the IndexedDB API, refer back to the main &lt;a href=&quot;../indexeddb_api&quot;&gt;IndexedDB API&lt;/a&gt; article and its subpages, which document the types of objects used by IndexedDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25befacff39a35352eb6fa63161d0af52bbed0d" translate="yes" xml:space="preserve">
          <source>For the reference documentation on the IndexedDB API, see the &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB&quot;&gt;IndexedDB&lt;/a&gt; article and its subpages. This article documents the types of objects used by IndexedDB, as well as the methods of the asynchronous API (the synchronous API was removed from spec).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dbe8d5ae073b9af657d5bdc1f711f5e2ce683c2" translate="yes" xml:space="preserve">
          <source>For the rest of this article we will continue working with sample1.html. The following figure shows the table object tree structure for the table created in the sample.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a86b78ab447c1ad5c621253a0c3a8ea7d993f33" translate="yes" xml:space="preserve">
          <source>For the safety and security of users, geolocation information is only available in secure contexts (that is, HTTPS sessions).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0326c5e4de74b57e5ad257a78717134bdbb2190" translate="yes" xml:space="preserve">
          <source>For this particular event, no other listener will be called. Neither those attached on the same element, nor those attached on elements which will be traversed later (in capture phase, for instance)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4230765eaa04b8f1c53520f04b41e67c50df02af" translate="yes" xml:space="preserve">
          <source>For this reason, the &lt;a href=&quot;../rtcsessiondescription/rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription()&lt;/code&gt;&lt;/a&gt; constructor is deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a02402fcb028a4deb152f1d375a48ee0d2ba9bfe" translate="yes" xml:space="preserve">
          <source>For this section we will put our data into the clip space coordinate system directly. Normally model data is used that is in some arbitrary coordinate system, and is then transformed using a matrix, placing it in the clip space coordinate system. For this example it's easiest to illustrate how clip space works by using values ranging from (-1,-1,-1) to (1,1,1). The code below will create 2 triangles that will draw a square on the screen. The Z depth in the squares determines what gets drawn on top when the squares share the same space. The smaller Z values are rendered on top of the larger Z values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d546031c9b7d8d23cb8a6b86b8acdd3902f3019f" translate="yes" xml:space="preserve">
          <source>For top-level pages you can see the list of pages in the session history, accessible via the &lt;code&gt;History&lt;/code&gt; object, in the browser's dropdowns next to the back and forward buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24de41922ec65e0ee07a9537a95a3715f9d1eaa" translate="yes" xml:space="preserve">
          <source>For types &lt;code&gt;gl.BYTE&lt;/code&gt; and &lt;code&gt;gl.SHORT&lt;/code&gt;, normalizes the values to [-1, 1] if true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd0727bc6763f6d357e0d503f8a703c1acc8f7c" translate="yes" xml:space="preserve">
          <source>For types &lt;code&gt;gl.FLOAT&lt;/code&gt; and &lt;code&gt;gl.HALF_FLOAT&lt;/code&gt;, this parameter has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3e27a5cbc16d0b701111ee981df6cea8a03e55" translate="yes" xml:space="preserve">
          <source>For types &lt;code&gt;gl.UNSIGNED_BYTE&lt;/code&gt; and &lt;code&gt;gl.UNSIGNED_SHORT&lt;/code&gt;, normalizes the values to [0, 1] if true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a765fa3e59a4cbe0ed7065942140326d1bbaca98" translate="yes" xml:space="preserve">
          <source>For uniformity and consistency, the value is always given using the period (&quot;.&quot;) as the decimal character, regardless of the user's locale. You need to convert the value to this format before submitting the payment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23718a4ef3f5d4e86cd7edd488fe961107a8f220" translate="yes" xml:space="preserve">
          <source>For use with Unicode or UTF-8 strings, see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Base64_encoding_and_decoding#The_Unicode_Problem&quot;&gt;this note at Base64 encoding and decoding&lt;/a&gt; and &lt;a href=&quot;btoa#Unicode_Strings&quot;&gt;this note at &lt;code&gt;btoa()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a51d910735ebe2db85990722a25453dca6ca6a" translate="yes" xml:space="preserve">
          <source>For uses in WebGL, the graphics card is particularly good at multiplying a large number of points in space by matrices. Different operations like positioning points, calculating lighting, and posing animated characters all rely on this fundamental tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca6083ee8c9d7aaee9db7125a4389033b1519ec" translate="yes" xml:space="preserve">
          <source>For web sites, extensions, and XUL applications, you can customize the types of elements that can become &lt;em&gt;draggable&lt;/em&gt; elements, and the type of feedback the &lt;em&gt;draggable&lt;/em&gt; elements produce, and the &lt;em&gt;droppable&lt;/em&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c9ce149671bb5cdfb3ae648f0edc277b081be1" translate="yes" xml:space="preserve">
          <source>For what we will call the &quot;sweep&quot; sound, that first noise you hear when you dial up, we're going to create an oscillator to generate the sound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a779f6cf4e275c8847e864a5d26ebb349742561" translate="yes" xml:space="preserve">
          <source>Forces a single callback to the &lt;code&gt;&lt;em&gt;minidaemon&lt;/em&gt;.task&lt;/code&gt; function regardless of the fact that the end has been reached or not. In any case the internal &lt;code&gt;INDEX&lt;/code&gt; property is increased/decreased (depending on the actual direction of the process).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3f3479cbe65d1902c92a26e417519909137e7f" translate="yes" xml:space="preserve">
          <source>Forces a spelling and grammar check on HTML elements, even if the user has not focused on the elements. This method overrides user agent behavior. The user interface of the check, for example whether red underlining appears, is determined by the user agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a397336615c45f53bd76885f690f06134a747b" translate="yes" xml:space="preserve">
          <source>Fore more information about the &lt;a href=&quot;save#Drawing_state&quot;&gt;drawing state&lt;/a&gt;, see &lt;a href=&quot;save&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.save()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f534fd44cd18e76aba0c0714f38f088fc717b0e6" translate="yes" xml:space="preserve">
          <source>ForeignObjectElement</source>
          <target state="translated">ForeignObjectElement</target>
        </trans-unit>
        <trans-unit id="80446347ede53cf9ce56b3d59fda4b5c96dc25c4" translate="yes" xml:space="preserve">
          <source>Form</source>
          <target state="translated">Form</target>
        </trans-unit>
        <trans-unit id="7932e86426ef930affcb88fb743e399a87165a26" translate="yes" xml:space="preserve">
          <source>Form validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9522ca9224b25160b26bc4b2914177fb593f5a" translate="yes" xml:space="preserve">
          <source>Form with &lt;code&gt;options&lt;/code&gt; object supported (third parameter can be either options or a &lt;code&gt;Boolean&lt;/code&gt;, for backwards compatibility)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92b85002a3fb316a5c6e08beb73b6cb9ed9d64d" translate="yes" xml:space="preserve">
          <source>FormData</source>
          <target state="translated">FormData</target>
        </trans-unit>
        <trans-unit id="318431cfcfaac3d796148708f05313f6b6645ba9" translate="yes" xml:space="preserve">
          <source>FormData as parameter to send()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579bb7529dd8920f64d54c21861792d98ae1a19d" translate="yes" xml:space="preserve">
          <source>FormData defined in XHR spec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="695a1b20e840548fcfcca36417fbe18621e80832" translate="yes" xml:space="preserve">
          <source>FormData.Using FormData Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8376caf6bd8754c0520a74bc34de4b50e155dfb" translate="yes" xml:space="preserve">
          <source>FormData.append</source>
          <target state="translated">FormData.append</target>
        </trans-unit>
        <trans-unit id="06d754e0d733963f026173690b496bd0207d7d50" translate="yes" xml:space="preserve">
          <source>FormData.constructor</source>
          <target state="translated">FormData.constructor</target>
        </trans-unit>
        <trans-unit id="6fc7b6560e9281473157878e616cfcb92b89e00b" translate="yes" xml:space="preserve">
          <source>FormData.delete</source>
          <target state="translated">FormData.delete</target>
        </trans-unit>
        <trans-unit id="5e7a2bff3d1f81cb2056f504957f490756ff7be1" translate="yes" xml:space="preserve">
          <source>FormData.entries</source>
          <target state="translated">FormData.entries</target>
        </trans-unit>
        <trans-unit id="3b96bbbc4e76290d6ba3ca2524f87ed037c7f3e6" translate="yes" xml:space="preserve">
          <source>FormData.get</source>
          <target state="translated">FormData.get</target>
        </trans-unit>
        <trans-unit id="c7276b335667fc9364bdbfd3f535e6a29f03d3e8" translate="yes" xml:space="preserve">
          <source>FormData.getAll</source>
          <target state="translated">FormData.getAll</target>
        </trans-unit>
        <trans-unit id="b53762f77a6a48608cc2a1a7d9cbf097c2e04ed4" translate="yes" xml:space="preserve">
          <source>FormData.has</source>
          <target state="translated">FormData.has</target>
        </trans-unit>
        <trans-unit id="244b59e627ddcfe274951d59c31ec664de452262" translate="yes" xml:space="preserve">
          <source>FormData.keys</source>
          <target state="translated">FormData.keys</target>
        </trans-unit>
        <trans-unit id="8a66b4d61f6fcb57337e20cd24cd838492f160e3" translate="yes" xml:space="preserve">
          <source>FormData.set</source>
          <target state="translated">FormData.set</target>
        </trans-unit>
        <trans-unit id="e17372c4a5675fe8b6b15c17c744a823458991ab" translate="yes" xml:space="preserve">
          <source>FormData.values</source>
          <target state="translated">FormData.values</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="39d9366be7c1c7de957bfaa09bfd02805c2f5416" translate="yes" xml:space="preserve">
          <source>Formerly provided access to install and remove PKCS11 modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b1a6ec658526299a0b4f30db9a1d84e193f2ec" translate="yes" xml:space="preserve">
          <source>Forms: Data form validation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f6c511769ac00680b47aa32ac44a6fb67b4bee3" translate="yes" xml:space="preserve">
          <source>Fortunately service workers&amp;rsquo; promise-based structure makes it trivial to provide further options towards success. We could do this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a134bf5132fc432e6ca4a82561773a8b674e88b6" translate="yes" xml:space="preserve">
          <source>Fortunately, you don't normally need to clear items often; it's more common to just add the items only when you know they are needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce33553ac7e09185c93e248b0aae6599a67c618f" translate="yes" xml:space="preserve">
          <source>Four argument version:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee04bdd41aef357f9bf39addbca202a80147890a" translate="yes" xml:space="preserve">
          <source>Four or more ASCII digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1251462cb5270c0387d9bb7f571d3b4725f9b953" translate="yes" xml:space="preserve">
          <source>Fractional pixel offsets are possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00491e8d57e1b077d4395dcfb17d7930d0b7df35" translate="yes" xml:space="preserve">
          <source>Fragment shader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a4d79637faabf7288cd0e6e5eb610036017b25" translate="yes" xml:space="preserve">
          <source>Fragment support added in Chrome 59.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96db6fbd894001ed55bf62ca261dfe8822d55131" translate="yes" xml:space="preserve">
          <source>Fragment support added in Opera 46.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f818b13e3dcf49c0c0ac159e0777e64d07586d8" translate="yes" xml:space="preserve">
          <source>Fragmenting</source>
          <target state="translated">Fragmenting</target>
        </trans-unit>
        <trans-unit id="91b0658329efa06d4da89c23a162b41dfcee5202" translate="yes" xml:space="preserve">
          <source>Frame</source>
          <target state="translated">Frame</target>
        </trans-unit>
        <trans-unit id="53f3de89e4ef9c08bd16c80524751a20cc29c96e" translate="yes" xml:space="preserve">
          <source>Frame Rate (Firefox Performance Tool)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70aa40194a26d829e262e48a4ce52e3e111d06d3" translate="yes" xml:space="preserve">
          <source>Frame Timing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2700e227bc01e8e8dd2bc6e90b5826a49231fc3" translate="yes" xml:space="preserve">
          <source>Frame Timing (Overview)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68325dfa528b73b70187442100f319ee921eb43" translate="yes" xml:space="preserve">
          <source>Frame Timing API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6234a8b8c71849fe3c7cf3cc00d93ddbae4be973" translate="yes" xml:space="preserve">
          <source>Frame Timing API: Using the Frame Timing API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3a34b611d9bf6114760dd7fbfbd3ff4f2ee033" translate="yes" xml:space="preserve">
          <source>Frame Timing&lt;br/&gt;&lt;small&gt;The definition of 'PerformanceFrameTiming' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c7508902e5792770e185c8c8f1b20a6808d9b5" translate="yes" xml:space="preserve">
          <source>Frame observers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a245d8795d41d1e56340d88b640ef6ff36960ac6" translate="yes" xml:space="preserve">
          <source>Frame rate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2723f14eba88ed93bbc7ebb00b693616e1d8db80" translate="yes" xml:space="preserve">
          <source>FrameTiming</source>
          <target state="translated">FrameTiming</target>
        </trans-unit>
        <trans-unit id="6d900b9e5fb5c7ebd4e2c7f57ff2670e2fb0ced4" translate="yes" xml:space="preserve">
          <source>Framebuffer</source>
          <target state="translated">Framebuffer</target>
        </trans-unit>
        <trans-unit id="c1ec7eae7f07154c322248398a959750ec946dd9" translate="yes" xml:space="preserve">
          <source>Framebuffer color attachment point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2fac01c27cb2c6d2a1616a7358385e7484c5cc" translate="yes" xml:space="preserve">
          <source>Framebuffers</source>
          <target state="translated">Framebuffers</target>
        </trans-unit>
        <trans-unit id="329217be4c8f197fa9df6e8436432f80de5143d0" translate="yes" xml:space="preserve">
          <source>Framebuffers and renderbuffers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ee11e85c93f321f71e214c5b5aa106e0f94a00" translate="yes" xml:space="preserve">
          <source>Framebuffers with attached textures of these formats may now be &lt;strong&gt;FRAMEBUFFER_COMPLETE&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81ee363e110c07e6dbd04447c2be9e878c45778" translate="yes" xml:space="preserve">
          <source>Framerate ( Frames per second / FPS )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5b25238ee3d70b9b1f55b129f8cd3a91fd6b62" translate="yes" xml:space="preserve">
          <source>Frames are now obsolete. Implements &lt;a href=&quot;windoweventhandlers&quot;&gt;&lt;code&gt;WindowEventHandlers&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e5f33d6d0d530764e4d68687eb9c07d7c40f98" translate="yes" xml:space="preserve">
          <source>Frequencies inside the range get a boost or an attenuation; frequencies outside it are unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf156611d810af35bde41a8b4e8a1b021c9a041" translate="yes" xml:space="preserve">
          <source>Frequency response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd67b2dcbf5f1e37180ed807ba1827179f20bb55" translate="yes" xml:space="preserve">
          <source>From 27 to 29, this was only available on service workers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11da3dd58a75d040f9b5256c8778dc0af55abfe5" translate="yes" xml:space="preserve">
          <source>From 40 to 42, this was only available on service workers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30eb8bd6abb5e314076f6e8e636972d0e439bc8" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://www.w3.org/TR/2014/WD-DOM-Level-3-Events-20140925/&quot;&gt;Document Object Model (DOM) Level 3 Events Specification&lt;/a&gt;, added &lt;code&gt;movementX&lt;/code&gt; and &lt;code&gt;movementY&lt;/code&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265c1435ac42104bc880ef7aafb7304e2902dee3" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://www.w3.org/TR/2014/WD-DOM-Level-3-Events-20140925/&quot;&gt;Document Object Model (DOM) Level 3 Events Specification&lt;/a&gt;, added &lt;code&gt;offsetX&lt;/code&gt; and &lt;code&gt;offsetY&lt;/code&gt;, &lt;code&gt;pageX&lt;/code&gt; and &lt;code&gt;pageY&lt;/code&gt;, &lt;code&gt;x,&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; properties. Redefined screen, page, client and coordinate (x and y) properties as &lt;code&gt;double&lt;/code&gt; from &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d39591523e677a4757ec5fd486f45491ab4d17" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-2-Events/events.html&quot;&gt;Document Object Model (DOM) Level 2 Events Specification&lt;/a&gt;, added the &lt;code&gt;MouseEvent()&lt;/code&gt; constructor, the &lt;code&gt;getModifierState()&lt;/code&gt; method and the &lt;code&gt;buttons&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dabe22f0961d688b3125890c25dfce4b58d224a5" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-2-Events/events.html&quot;&gt;Document Object Model (DOM) Level 2 Events Specification&lt;/a&gt;, changed the type of &lt;code&gt;view&lt;/code&gt; from &lt;code&gt;AbstractView&lt;/code&gt; to &lt;code&gt;WindowProxy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0525db75b8ab044b8da31590a8204854a653e78" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-3-Core/&quot;&gt;Document Object Model (DOM) Level 3 Core Specification&lt;/a&gt;, moved from &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4cd200a87206b4d13090f8a23747592f5a0e34" translate="yes" xml:space="preserve">
          <source>From Firefox 13 to Firefox 58, the &lt;code&gt;error&lt;/code&gt; property returned a &lt;code&gt;DOMError&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbd9e792ca16fbed121cb69804af31e78d088d9" translate="yes" xml:space="preserve">
          <source>From Firefox 17 to 19, methods and properties were defined on &lt;code&gt;CSSSupportsRule&lt;/code&gt;. From version 20, they were on &lt;code&gt;CSSConditionRule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9516ee4a2c329244f2a2b7fd33aafaebfe66431" translate="yes" xml:space="preserve">
          <source>From Firefox 22 to Firefox 44, this property was on the &lt;code&gt;URLUtils&lt;/code&gt; mixin. It has been moved either on the &lt;code&gt;HTMLHyperlinkElementUtils&lt;/code&gt; mixin, or directly on the interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e9e9b653158f51c710e1e99742c19c9a659c0d" translate="yes" xml:space="preserve">
          <source>From Firefox 22 to Firefox 44, this property was on the &lt;code&gt;URLUtils&lt;/code&gt; mixin. It has been moved either on the &lt;code&gt;HTMLHyperlinkElementUtils&lt;/code&gt; mixin, or directly on the interface. Also, from Firefox 29 to Firefox 40, the returned value was incorrectly percent-decoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="811f82780983da0779076722e6639aa5206222dd" translate="yes" xml:space="preserve">
          <source>From Firefox 26 to Firefox 44, this property was on the &lt;code&gt;URLUtils&lt;/code&gt; mixin. It has been moved either on the &lt;code&gt;HTMLHyperlinkElementUtils&lt;/code&gt; mixin, or directly on the interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34002ffccea2e67c587b64f92c9b25bb0277063d" translate="yes" xml:space="preserve">
          <source>From Firefox 32 onwards, when the vibration pattern is too long or any of its elements too large, it returns &lt;code&gt;true&lt;/code&gt; but truncates the pattern (&lt;a href=&quot;https://bugzil.la/1014581&quot;&gt;bug 1014581&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edfb7000b5009e5faeef734f394a05d0c69daa58" translate="yes" xml:space="preserve">
          <source>From Firefox 32 to Firefox 58, the &lt;code&gt;error&lt;/code&gt; property returned a &lt;code&gt;DOMError&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9625e64935974f7329a3c68acf9df6b31baee8" translate="yes" xml:space="preserve">
          <source>From Firefox 52 onwards, the Battery Status API is only available in chrome/privileged code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe156e7f1084828a96cdfee879ff8ac21d864e08" translate="yes" xml:space="preserve">
          <source>From Firefox 58, the &lt;code&gt;error&lt;/code&gt; property returns a &lt;code&gt;DOMException&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8f9febbd4a5c48c3a75dded2e93bf955e9ffe6" translate="yes" xml:space="preserve">
          <source>From Firefox 59 onwards, when a service worker provides a &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;respondwith&quot;&gt;&lt;code&gt;FetchEvent.respondWith()&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;../response/url&quot;&gt;&lt;code&gt;Response.url&lt;/code&gt;&lt;/a&gt; value will be propagated to the intercepted network request as the final resolved URL. If the &lt;a href=&quot;../response/url&quot;&gt;&lt;code&gt;Response.url&lt;/code&gt;&lt;/a&gt; value is the empty string, then the &lt;a href=&quot;../request/url&quot;&gt;&lt;code&gt;FetchEvent.request.url&lt;/code&gt;&lt;/a&gt; is used as the final URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08944630195308b8ebf617c929a6c4b06210ada6" translate="yes" xml:space="preserve">
          <source>From Firefox 62, if the domain cannot be identified, &lt;code&gt;domain&lt;/code&gt; returns an empty string instead of &lt;code&gt;null&lt;/code&gt;. See &lt;a href=&quot;https://bugzil.la/819475&quot;&gt;bug 819475&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca283140f2cddb62fcf7cc6a5ba0d96ff3f8a06" translate="yes" xml:space="preserve">
          <source>From a definition standpoint, these values are defined in the &lt;code&gt;RTCStats&lt;/code&gt; dictionary in &lt;code&gt;RTCStatsReport&lt;/code&gt;'s WebIDL file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f0581dbbf7821b49d6dc7a021f5d519ad9a7ac" translate="yes" xml:space="preserve">
          <source>From here the user can choose to allow notifications from this origin, block notifications from this origin, or not choose at this point. Once a choice has been made, the setting will generally persist for the current session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91b0d446bf95594e8af5185650dfca7c6b62873" translate="yes" xml:space="preserve">
          <source>From here, you can play and save the opus file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ea3a6ea2fc03f7f882b124148c8f6dca337b17" translate="yes" xml:space="preserve">
          <source>From interfaces to gestures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e8865f211395806e1a30edda3d57729219634c" translate="yes" xml:space="preserve">
          <source>From the &lt;a href=&quot;https://www.w3.org/TR/html50/&quot;&gt;HTML5&lt;/a&gt; snapshot, the &lt;a href=&quot;windoweventhandlers&quot;&gt;&lt;code&gt;WindowEventHandlers&lt;/code&gt;&lt;/a&gt; interface now have a &lt;code&gt;onlanguagechange&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d181845c30dbb1c45286b997a7e69305b85bdb" translate="yes" xml:space="preserve">
          <source>From the &lt;code&gt;Position&lt;/code&gt; object, we obtain the user's latitude and longitude using &lt;a href=&quot;latitude&quot;&gt;&lt;code&gt;position.coords.latitude&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;position.coords.longitude&lt;/code&gt; so we can update the displayed coordinates. The two &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; elements are updated to display the corresponding values after being converted to a value with two decimal places.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284f0071bad72582763850c16bdce56052769ea2" translate="yes" xml:space="preserve">
          <source>From the current filter parameter settings this method calculates the frequency response for frequencies specified in the provided array of frequencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88848b6023de9537268364240a66941c2ad1e965" translate="yes" xml:space="preserve">
          <source>From this point on, the microphone is re-engaged and the remote user is once again able to hear the local user, as well as speak to them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec79c035b027ba6c2f4e774c197231d7c22ac426" translate="yes" xml:space="preserve">
          <source>From this point onward, events are sent just like any media load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a62cdcf41959e1e9f001b0bf56509d6c6cc655" translate="yes" xml:space="preserve">
          <source>From this point until &lt;a href=&quot;disconnect&quot;&gt;&lt;code&gt;disconnect()&lt;/code&gt;&lt;/a&gt; is called, &lt;code&gt;callback()&lt;/code&gt; will be called each time an element is added to or removed from the DOM tree rooted at &lt;code&gt;targetNode&lt;/code&gt;, or any of those elements' attributes are changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552409579770299208fdf64cf898da1e0f046c7f" translate="yes" xml:space="preserve">
          <source>From this version onwards, the Battery Status API is only available in chrome/privileged code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="811d48c1d3ac2e7d4e9d1b66949f172e8f91b1aa" translate="yes" xml:space="preserve">
          <source>From version 53, this method is defined on the parent &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/SVGGeometryElement&quot;&gt;&lt;code&gt;SVGGeometryElement&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d63eddb182a4026eb9cb181f4a5d3b2a19e602" translate="yes" xml:space="preserve">
          <source>Front End Developer Playground &amp;amp; Code Editor in the Browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="401516497bd3f50f602fc1a1d38a1bd31f5fcaaa" translate="yes" xml:space="preserve">
          <source>Front and back camera</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="742e87882b68dedfabd1e81d37105027336497bf" translate="yes" xml:space="preserve">
          <source>Front face directions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a37155bcf25a5b444450842a6f0019334fb05fde" translate="yes" xml:space="preserve">
          <source>Full IndexedDB example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d85aae824abe9daf0c70c00c1e15286edef9be" translate="yes" xml:space="preserve">
          <source>Full support since Chrome 49.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0885d8e7e2317d7946b8e2b3b696e5e456ec0c1c" translate="yes" xml:space="preserve">
          <source>Full text searching. The API does not have an equivalent of the &lt;code&gt;LIKE&lt;/code&gt; operator in SQL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb08d10b00a6114f53ac03b662cd5c0fa2fadf2c" translate="yes" xml:space="preserve">
          <source>Fullscreen</source>
          <target state="translated">Fullscreen</target>
        </trans-unit>
        <trans-unit id="40df9829544a2ffead33a11e296140ddcc99cf04" translate="yes" xml:space="preserve">
          <source>Fullscreen API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475d28dde44bc704ad0e647819c948f5e4da9759" translate="yes" xml:space="preserve">
          <source>Fullscreen API: Guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4200d27c4ff1bff1ba49f1f42e08a1982fd75048" translate="yes" xml:space="preserve">
          <source>Fullscreen API&lt;br/&gt;&lt;small&gt;The definition of 'Document.exitFullscreen()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd41ac9fcd3fb103eca866d7d6ad6c5409d9cc33" translate="yes" xml:space="preserve">
          <source>Fullscreen API&lt;br/&gt;&lt;small&gt;The definition of 'Document.fullscreen' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b541728d65727405f6f36e055844e08b57618df7" translate="yes" xml:space="preserve">
          <source>Fullscreen API&lt;br/&gt;&lt;small&gt;The definition of 'Document.fullscreenElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482476026f28be80e60806382635f9e95fef813f" translate="yes" xml:space="preserve">
          <source>Fullscreen API&lt;br/&gt;&lt;small&gt;The definition of 'Document.fullscreenEnabled' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6176887d775b3a3c85652d062523c8e885959e06" translate="yes" xml:space="preserve">
          <source>Fullscreen API&lt;br/&gt;&lt;small&gt;The definition of 'Element' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b9ffa1daf4fb49c77b1c248ecb3b63f7314250" translate="yes" xml:space="preserve">
          <source>Fullscreen API&lt;br/&gt;&lt;small&gt;The definition of 'Element.requestFullscreen()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de265ab0b6761a4dfc19cbe28b150a08363972be" translate="yes" xml:space="preserve">
          <source>Fullscreen API&lt;br/&gt;&lt;small&gt;The definition of 'FullscreenOptions' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bbb5b93e79fa1ca6982eb0633b5a1db280535ac" translate="yes" xml:space="preserve">
          <source>Fullscreen API&lt;br/&gt;&lt;small&gt;The definition of 'onfullscreenchange' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114047973716ad34682fc8382c91a4c1766a2402" translate="yes" xml:space="preserve">
          <source>Fullscreen API&lt;br/&gt;&lt;small&gt;The definition of 'onfullscreenerror' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d10f3c9797f303fbfc6dd1f71ccf156682c56c" translate="yes" xml:space="preserve">
          <source>FullscreenOptions</source>
          <target state="translated">FullscreenOptions</target>
        </trans-unit>
        <trans-unit id="31bb748c1fe74bb26725f3ed6d84a00927befc7b" translate="yes" xml:space="preserve">
          <source>FullscreenOptions.navigationUI</source>
          <target state="translated">FullscreenOptions.navigationUI</target>
        </trans-unit>
        <trans-unit id="e44c4b9a697eb905c93ce3ac3d258d60cd341ad2" translate="yes" xml:space="preserve">
          <source>Fun with filters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="b0fd49cc7a1a63942a0e1a635ed2feaa87475133" translate="yes" xml:space="preserve">
          <source>Function &lt;code&gt;namespaceURLMapper&lt;/code&gt; (maps a namespace prefix to a namespace URL (or null if none needed))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae2bfb193a0edb60e864ef14ce505ed7197c0e9" translate="yes" xml:space="preserve">
          <source>Function parameters:</source>
          <target state="translated">功能参数:</target>
        </trans-unit>
        <trans-unit id="8b5886e7c21a073cf7692f4f70342949fd309336" translate="yes" xml:space="preserve">
          <source>Function to execute for each element, eventually taking 3 arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2c2d22ecefa25ee8b78cae5f9b09e6af28ff6f" translate="yes" xml:space="preserve">
          <source>Function to execute for each element, eventually taking three arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0aaa783b56f46ef91a7fcf55d33b81a0f903750" translate="yes" xml:space="preserve">
          <source>Function to execute for each element, taking three arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79fde2ac8490ff2b99ac9c9890e046fdff6e3659" translate="yes" xml:space="preserve">
          <source>Functionality</source>
          <target state="translated">Functionality</target>
        </trans-unit>
        <trans-unit id="1d0238e85e4542eff1729059fb57cefef3fa9798" translate="yes" xml:space="preserve">
          <source>Functionally equivalent to calling &lt;a href=&quot;document/createelement&quot;&gt;&lt;code&gt;document.createElement(&quot;img&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90bc26210d614aecf8f3718fa5e661f22105b1c" translate="yes" xml:space="preserve">
          <source>Functions and classes available to workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de2f150d8639bb99ca2af52cdf0c800a75e6120a" translate="yes" xml:space="preserve">
          <source>Functions and interfaces available in workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4c89e91796ef53069806c912b5931eca41e7a5" translate="yes" xml:space="preserve">
          <source>Functions available to workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d68f72d7a5e98e61ad9e77b04559d6c6d57fd9" translate="yes" xml:space="preserve">
          <source>Functions of a payment handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33aa27b63995ba1fcb3ce7d14470a2ebda4e9afb" translate="yes" xml:space="preserve">
          <source>Further examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb0251e72184625583525934c86cf63e1be4b68e" translate="yes" xml:space="preserve">
          <source>Further optimization can be achieved by careful use of the context parameter. For example, if you know the content you are looking for is somewhere inside the body tag, you can use this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b065549840c9d4b4948583af5d2d879184e6a820" translate="yes" xml:space="preserve">
          <source>Further reading for you to find out more information if desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b4b5b06184e16e0d7deae7d3070a1b9d6eeae4" translate="yes" xml:space="preserve">
          <source>Further, if the device or operating system the user agent is running on doesn't have a clock accurate to the microsecond level, they may only be accurate to the millisecond.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4458903c532cd983897f5a5032eea758c83fe15f" translate="yes" xml:space="preserve">
          <source>Furthermore, when executing in the active document of a browsing context, &lt;code&gt;window&lt;/code&gt; is a reference to the current global object and thus all of the following are equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c487fb634fbf21c0590e577aedd359d66e7ede0" translate="yes" xml:space="preserve">
          <source>Future Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36a6718f54524d846894fb04b5b885b4e43e63b" translate="yes" xml:space="preserve">
          <source>G</source>
          <target state="translated">G</target>
        </trans-unit>
        <trans-unit id="3f396e41818cffa5bdaa3fd6a1c0b5cb3a91c8db" translate="yes" xml:space="preserve">
          <source>GElement</source>
          <target state="translated">GElement</target>
        </trans-unit>
        <trans-unit id="b8f077b60b349a7085003af046242e7b778ee261" translate="yes" xml:space="preserve">
          <source>GLSL built-in functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79ebc6a0be671c450fb37710454fe302dba0613" translate="yes" xml:space="preserve">
          <source>GLSL data types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f73eb696181ba8f4c5bf6d56da9a4f69c8739e8" translate="yes" xml:space="preserve">
          <source>GLSL variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae6fe020c6e647d1f0bb8040ec7f03eba1be8c7" translate="yes" xml:space="preserve">
          <source>GLuint64EXT</source>
          <target state="translated">GLuint64EXT</target>
        </trans-unit>
        <trans-unit id="84fb6ad284332b4a10e9dc579a59a93258b6233d" translate="yes" xml:space="preserve">
          <source>GainNode</source>
          <target state="translated">GainNode</target>
        </trans-unit>
        <trans-unit id="4b513d435a4dcf325f10a7dcf343ce261d882ea5" translate="yes" xml:space="preserve">
          <source>GainNode.constructor</source>
          <target state="translated">GainNode.constructor</target>
        </trans-unit>
        <trans-unit id="e6e1b37a82f4a22dac0f5ed19030cd3784b7eefe" translate="yes" xml:space="preserve">
          <source>GainNode.gain</source>
          <target state="translated">GainNode.gain</target>
        </trans-unit>
        <trans-unit id="de812f2569bcd96889fae56be6b4594e2781a6d5" translate="yes" xml:space="preserve">
          <source>Game development</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dde0030c49fb9ffa37907dd561f64fbc98981e0" translate="yes" xml:space="preserve">
          <source>Gamepad</source>
          <target state="translated">Gamepad</target>
        </trans-unit>
        <trans-unit id="a74ed242cf6a35d2419023a4ce6ca8439b557422" translate="yes" xml:space="preserve">
          <source>Gamepad API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abbaac0cbf95b0ea5c9c3212b09bb2b7de5fdf6e" translate="yes" xml:space="preserve">
          <source>Gamepad Extensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0defa9709d96592ece4805e972085a294346f2" translate="yes" xml:space="preserve">
          <source>Gamepad events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91302bdb32e8ce1e9486317dfcf4a77009d42ac0" translate="yes" xml:space="preserve">
          <source>Gaming is one of the most popular computer activities. New technologies are constantly arriving to make it possible to develop better and more powerful games that can be run in any standards-compliant web browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75402c80a4e4ffb05b2e1744866544933eef7e16" translate="yes" xml:space="preserve">
          <source>Gecko</source>
          <target state="translated">Gecko</target>
        </trans-unit>
        <trans-unit id="a9521e79473b69b0db258451e129baf1285d555e" translate="yes" xml:space="preserve">
          <source>Gecko (Firefox)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e614da7ff29a0a0ed7e47ee445202a7f5c926946" translate="yes" xml:space="preserve">
          <source>Gecko 1.9.2 note Starting in Gecko 1.9.2 (Firefox 3.6), overriding the position of a window using window features will not change the persisted values saved by the session store feature. That means the next time the window is opened, it will still open in the saved location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f9f5950a9e8127552cc3cdb5f6f53d63364dc5" translate="yes" xml:space="preserve">
          <source>Gecko 11.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b8044a69a9bbbd4c1ae7090fefdd700cada9f1" translate="yes" xml:space="preserve">
          <source>Gecko 11.0 (Firefox 11.0 / Thunderbird 11.0 / SeaMonkey 2.8) now allows SVG-as-an-image to be drawn into a canvas without &lt;a href=&quot;https://developer.mozilla.org/en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F&quot;&gt;tainting the canvas&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8055dfb9983aea6a1ceb3cd9c27c24b4e207574b" translate="yes" xml:space="preserve">
          <source>Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1) introduces support for the DOM &lt;a href=&quot;../url/createobjecturl&quot;&gt;&lt;code&gt;window.URL.createObjectURL()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../url/revokeobjecturl&quot;&gt;&lt;code&gt;window.URL.revokeObjectURL()&lt;/code&gt;&lt;/a&gt; methods. These let you create simple URL strings that can be used to reference any data that can be referred to using a DOM &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object, including local files on the user's computer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdeae641e466c14b57b5e8c0b99d61fd581fd933" translate="yes" xml:space="preserve">
          <source>Gecko 6.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd16f8c01e8afaaec8133571e3ed96f34f6f2643" translate="yes" xml:space="preserve">
          <source>Gecko 7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdab86c2b1bc37396b606a49825052e4948c5e9d" translate="yes" xml:space="preserve">
          <source>Gecko 8.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe8b4b7414e88710ccbf28afd0df0ffc6d7fc88" translate="yes" xml:space="preserve">
          <source>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6) introduced support for string substitutions. When passing a string to one of the console object's methods that accepts a string, you may use these substitution strings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3849b6f5b3f760d4acf75e028a20e1fabde055" translate="yes" xml:space="preserve">
          <source>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6) now correctly supports CORS for drawing images across domains without &lt;a href=&quot;https://developer.mozilla.org/en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F&quot;&gt;tainting the canvas&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dafbae0e5900665c01bd51d660c81f592db7d22" translate="yes" xml:space="preserve">
          <source>Gecko also supports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6931c5359fcfa50bacce0b4d391d54995a3444c2" translate="yes" xml:space="preserve">
          <source>Gecko browsers allow multiple selections across table cells.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4efff061313960fe22f5e67da38a053e042ec3f9" translate="yes" xml:space="preserve">
          <source>Gecko methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fbfd89cadf79c3292d0289cd2f93c98713fa8ae" translate="yes" xml:space="preserve">
          <source>Gecko notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6cf6892e68428046112ca916f756086999fe6dd" translate="yes" xml:space="preserve">
          <source>Gecko only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f94cb582c1eafe6a452ee8a7045292716e33a60" translate="yes" xml:space="preserve">
          <source>Gecko outputs a deprecation note starting from Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4). This note was removed again in Gecko 49.0 (Firefox 49.0 / Thunderbird 49.0 / SeaMonkey 2.46).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ee41002cc10b53d8901f44c335957be29f0cb8" translate="yes" xml:space="preserve">
          <source>Gecko properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d4dbaba88f1c6ea286cd95af5ad00d4cb4ba42" translate="yes" xml:space="preserve">
          <source>Gecko supports only single track playback, and the parsing of tracks' metadata is only available for media with the Ogg container format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481e3151b956ea9c14de6c18ddd05245ed9d6ad5" translate="yes" xml:space="preserve">
          <source>Gecko supports some non-standard event object aliases, which are listed below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc01032e0df59321d65926e7dbd71ceed7bca5d2" translate="yes" xml:space="preserve">
          <source>Gecko user agent string reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52e96f70fe779dcc4b5b51364cf1151a1600588" translate="yes" xml:space="preserve">
          <source>Gecko's legacy mouse wheel event object: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MouseScrollEvent&quot;&gt;&lt;code&gt;MouseScrollEvent&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba86a7d6e9e2b57b5f1ca97a343d4527df7fe08a" translate="yes" xml:space="preserve">
          <source>Gecko-based browsers insert text nodes into a document to represent whitespace in the source markup. Therefore a node obtained, for example, using &lt;a href=&quot;firstchild&quot;&gt;&lt;code&gt;Node.firstChild&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;previoussibling&quot;&gt;&lt;code&gt;Node.previousSibling&lt;/code&gt;&lt;/a&gt; may refer to a whitespace text node rather than the actual element the author intended to get.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6eb2a857f150c6dc4a90e7bf189725df76b95b" translate="yes" xml:space="preserve">
          <source>Gecko-specific interfaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470bbe6ede5505615a22a4590bb028c033be77c3" translate="yes" xml:space="preserve">
          <source>Gecko-specific note</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b5cf380b98788e6ec261d8df907dfa694f80ed" translate="yes" xml:space="preserve">
          <source>Gecko-specific notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f9425434ce7cb438cb7cf7a5d99b8cecc62ac6" translate="yes" xml:space="preserve">
          <source>Gecko-specific properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce2dc87f3bcc9a8226161f3a3793114fffdc8e2" translate="yes" xml:space="preserve">
          <source>Gecko/Firefox provide additional features, available to chrome (internal and add-on) code only. These are defined in &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISelectionPrivate&quot;&gt;nsISelectionPrivate&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c8c25698b81f095330d092f00758f7fd69a90d" translate="yes" xml:space="preserve">
          <source>General Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867885665281e4fbe2bfbf503eda5b89f043d250" translate="yes" xml:space="preserve">
          <source>General audio graph definition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd43a1764b88acfd270faeb7d293372d96d1f735" translate="yes" xml:space="preserve">
          <source>General containers and definitions that shape audio graphs in Web Audio API usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0fe39129ef20f8db484877cc4d89bbb641498a8" translate="yes" xml:space="preserve">
          <source>General info</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a3bcaabaebddb5535d92b5b4251cc61d9fdd23" translate="yes" xml:space="preserve">
          <source>General performance tips</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="158e581ec4368d308cbda613e68d02412246b21e" translate="yes" xml:space="preserve">
          <source>General syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4370913eadaf5d28e40da52799fa5750126f389" translate="yes" xml:space="preserve">
          <source>Generally low latency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df5da41fe0c71d9f8e6f934c920fcd9d3e9131b" translate="yes" xml:space="preserve">
          <source>Generally speaking, it is preferable to avoid resorting to window.open() for several reasons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3469c9507bb15f3e08ebee1b3620c6bc868dadef" translate="yes" xml:space="preserve">
          <source>Generally you should leave the value as is, but you might want to increase it if you are trying to improve performance on slower computers, and/or your UI makes sense with the near boundary made further away.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5c9c7da2d49f155bee0bc7ac92b75d1c267a4d" translate="yes" xml:space="preserve">
          <source>Generally you should leave the value as is, but you might want to reduce it if you are trying to improve performance on slower computers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d25d1b81b73557c2f41ed4d6da007d2c35ff466" translate="yes" xml:space="preserve">
          <source>Generally, ICE candidates using TCP are only going to be used when UDP is not available or is restricted in ways that make it not suitable for media streaming. Not all browsers support ICE over TCP, however.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c34dcafccfabb1ce510197d2d893c670fd5f33e" translate="yes" xml:space="preserve">
          <source>Generally, the user agent will fill the &lt;code&gt;shippingAddress&lt;/code&gt; property for you. You can trigger this by setting &lt;code&gt;PaymentOptions.requestShipping&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; when calling the &lt;a href=&quot;../paymentrequest/paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e546fb32e1807c4ff7261190161c58a861edbbe0" translate="yes" xml:space="preserve">
          <source>Generally, the user agent will fill the &lt;code&gt;shippingAddress&lt;/code&gt; property value. You can trigger this by setting &lt;code&gt;PaymentOptions.requestShipping&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; when calling the &lt;code&gt;PaymentRequest&lt;/code&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da8119708ab86fbea61860cac6da5bab7d13553" translate="yes" xml:space="preserve">
          <source>Generally, you will access the &lt;a href=&quot;../mediadevices&quot;&gt;&lt;code&gt;MediaDevices&lt;/code&gt;&lt;/a&gt; singleton object using &lt;a href=&quot;../navigator/mediadevices&quot;&gt;&lt;code&gt;navigator.mediaDevices&lt;/code&gt;&lt;/a&gt;, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae3722b80fc21e6d633b37bcf7624883a2cd4b4" translate="yes" xml:space="preserve">
          <source>Generates a set of mipmaps for a &lt;code&gt;WebGLTexture&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ce18b52beface2f1ffa4f69ea6367af2cfcf08" translate="yes" xml:space="preserve">
          <source>Generating Tones with the Web Audio API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02bac12fa12f92795d6a1d3f3fa7768153bd8a40" translate="yes" xml:space="preserve">
          <source>Generating handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c6a8b6cf2cd399e5e8c111c7b483ce828d78709" translate="yes" xml:space="preserve">
          <source>Generation of the SDP failed for some reason; this is a general failure catch-all exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7613e54fc90271b8a71da3dfd9a50e5acd96c2" translate="yes" xml:space="preserve">
          <source>Generic</source>
          <target state="translated">Generic</target>
        </trans-unit>
        <trans-unit id="de5379e5d2ea5f48aa29d87ab75bf6813b0e39b9" translate="yes" xml:space="preserve">
          <source>Generic Sensor API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbea653965d97aa64744261e052ca8afa59a01ad" translate="yes" xml:space="preserve">
          <source>Generic Sensor API&lt;br/&gt;&lt;small&gt;The definition of 'Sensor' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e18232cd020364f0c68b6dc9387327d7e77c50" translate="yes" xml:space="preserve">
          <source>Generic Sensor API&lt;br/&gt;&lt;small&gt;The definition of 'SensorErrorEvent' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e2c69f5981a4abaeaec9ce2bd2aaf0ca262e4f" translate="yes" xml:space="preserve">
          <source>Generic Sensor API&lt;br/&gt;&lt;small&gt;The definition of 'activated' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e2c78c066eba3f529a2f89513d9e9355c0b92e" translate="yes" xml:space="preserve">
          <source>Generic Sensor API&lt;br/&gt;&lt;small&gt;The definition of 'error' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91027745cfc146ead5ba4469f70e1a9ea7380de" translate="yes" xml:space="preserve">
          <source>Generic Sensor API&lt;br/&gt;&lt;small&gt;The definition of 'hasReading' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e282f3dd819afece928e4eb35647e71b7bdb947e" translate="yes" xml:space="preserve">
          <source>Generic Sensor API&lt;br/&gt;&lt;small&gt;The definition of 'onactivate' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c359aff24e3d9fd4b377dbbdc2a4b32e32c89a9" translate="yes" xml:space="preserve">
          <source>Generic Sensor API&lt;br/&gt;&lt;small&gt;The definition of 'onerror' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6d56ecf33963cdd43585ef1ea98a09fca055e1" translate="yes" xml:space="preserve">
          <source>Generic Sensor API&lt;br/&gt;&lt;small&gt;The definition of 'onreading' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a82ab696c69219d5f3ca5e62b103e1e0b920313a" translate="yes" xml:space="preserve">
          <source>Generic Sensor API&lt;br/&gt;&lt;small&gt;The definition of 'start' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2febd513295c0f410dda865e1d823c92199f088d" translate="yes" xml:space="preserve">
          <source>Generic Sensor API&lt;br/&gt;&lt;small&gt;The definition of 'stop' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d22b62e3c1cc92760144a575857005a1788820d9" translate="yes" xml:space="preserve">
          <source>Generic Sensor API&lt;br/&gt;&lt;small&gt;The definition of 'timestamp' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15217b07a49e9514963e5b71f4dece377bcc14f" translate="yes" xml:space="preserve">
          <source>Generic interface that handles database requests and provides access to results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee8f734456eeec6f1528c29e7b9dd676c82ba5c" translate="yes" xml:space="preserve">
          <source>Geolocation</source>
          <target state="translated">Geolocation</target>
        </trans-unit>
        <trans-unit id="7d3414ab0c0d40aefc232e0afbedc46cf42d73ae" translate="yes" xml:space="preserve">
          <source>Geolocation API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7f732cf00ec9c4d17fb818b54329a0af00e9a6" translate="yes" xml:space="preserve">
          <source>Geolocation API on w3.org</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90fff9077ffca1ebb35207b25accd758c528e3c" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'Coordinates' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52bc66c3e0edaf2c88b2b2613845a36f2b77a66" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'Coordinates.accuracy' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ac3dce2acc8997ccec604b4e2404545d6132da" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'Coordinates.altitude' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ea73406862284ba4a061ca1f32f4647f3c5d1b" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'Coordinates.altitudeAccuracy' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c738eda4269ceb88a474748bd859ec914d4a74" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'Coordinates.heading' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc15d32c99211b7cb0edfa0170e0cde192111f7" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'Coordinates.latitude' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5753c07c5c698e21758ee44ddbc575a0362c144" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'Coordinates.longitude' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c17d5f0470fefa21f30bb9b6775df9325bc4d7a" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'Coordinates.speed' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad179531133441e30f8e66d785e94f597b3a174d" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'Geolocation.watchPosition()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668d5bb46fa091e4a7a6728ec48cbc8fb4848873" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'Navigator.geolocation' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc7df94e19a3c41fdddf224c0b7d5743f287bed" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'NavigatorGeolocation' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af560a2e2bf0dbbed68f0c32ad5f38f7984a5bf" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'Position' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4bac011b9b17c7617efc29de6f7b59be2a2d21" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'Position.coords' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b852a475edfdc20eda424bbef9c4375622b1d08" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'Position.timestamp' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228ddfe1860424989543a5308e942e3e33e26f32" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'PositionError' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf691a1d1d468058880710fed91e387dc976c80" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'PositionError.code' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017e947506e8466d968d996b6e7b7d89414efded" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'PositionError.message' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157d9c88ce90171e51a8f477d01e1c7e384712b0" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'PositionOptions' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b589425aabbaaa0834f1fef5ed8263a5cec2ec3" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'PositionOptions.enableHighAccuracy' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f925ee27994a097633be901bcc47345408c56a" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'PositionOptions.maximumAge' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792e1a26cae9c94e5860ebd85908e2868eaf2e40" translate="yes" xml:space="preserve">
          <source>Geolocation API&lt;br/&gt;&lt;small&gt;The definition of 'PositionOptions.timeout' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f367a117a39954f0b22b3a64606778689dcf6a26" translate="yes" xml:space="preserve">
          <source>Geolocation Live Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51dba5de0474f4cb5005087f93b27bc6f36c3d81" translate="yes" xml:space="preserve">
          <source>Geolocation.clearWatch</source>
          <target state="translated">Geolocation.clearWatch</target>
        </trans-unit>
        <trans-unit id="6bea64a9839b1b2a67a6e2fa8cd735b4c5aa3004" translate="yes" xml:space="preserve">
          <source>Geolocation.getCurrentPosition</source>
          <target state="translated">Geolocation.getCurrentPosition</target>
        </trans-unit>
        <trans-unit id="109a394f35377b9767972a4e4df81cc9df8b62d7" translate="yes" xml:space="preserve">
          <source>Geolocation.watchPosition</source>
          <target state="translated">Geolocation.watchPosition</target>
        </trans-unit>
        <trans-unit id="8fe2d2592c139776ca03dd3a8db27755c531e834" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfa4991dc9be75329b4c745f5a03d63bbbcebcf" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'DOMMatrix' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e803d36822b63f614eae5e4a11cf8d905851c659" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'DOMMatrixReadOnly' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28839403ad9aaaec343bf8ba4fbcc7c4a49247a6" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'DOMPoint' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a082a12420e26eb5460100487617e0c2b8b351c" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'DOMPoint()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e160b33cf7aaeefbaf573e822704eeda3cd7879" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'DOMPointReadOnly' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3423797fb4062b95429dfa4bc54b4a57fef0e721" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'DOMPointReadOnly.fromPoint()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9fac48f800d567cbb60a2fc88380d04fc646713" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'DOMPointReadOnly.toJSON()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23bba5ddc82c6c4282ec677b1d0a64e4a9444b6d" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'DOMQuad' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2999080f434652174f102d6f378003b518119353" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'DOMRect' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e302f3431258bfb913644e330386242351be45" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'DOMRect()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0b7922d651ae3e287545e9797c9a3bfcf7e6bf" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'DOMRectReadOnly' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5419578510a9725579be89fb6367f9ee68d90514" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'bottom' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86395bc110eaf5ed87f784e5c8da879cd0fd5607" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'fromPoint()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4467ef6dfd83445461ac4b4f70f9f9a38c1ac680" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'fromRect()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8206105443d0976c25697f9c2a0fb22ae549b1bc" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'height' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f7f360dcbd46d439d8f183eee000c6bd8b4744d" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'left' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0fb4ee2c489ccf833fa6b5a7e48f476dc55726d" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'right' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa43664c3626798b3fc9371e8687ce8c2dcf83cf" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'top' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df24565a77d00cf78c3134d01154d29de4682b90" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'w' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c17cdb291bc87d4d12b521c2b34f3889150acc" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'width' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2397fd1799b6594ae8920712ff2a996cbcd76fcf" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'x' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e3e22c2850fe5392116735ade19c9176db370e" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'y' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df83d54616a64b29d265f31af38be9a310d0436f" translate="yes" xml:space="preserve">
          <source>Geometry Interfaces Module Level 1&lt;br/&gt;&lt;small&gt;The definition of 'z' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e81f777908d0c8afe371259d327090e06d764cb" translate="yes" xml:space="preserve">
          <source>GeometryElement</source>
          <target state="translated">GeometryElement</target>
        </trans-unit>
        <trans-unit id="8107dd9bb013729fb85523dc0eceb41bbe528073" translate="yes" xml:space="preserve">
          <source>GeometryElement.getPointAtLength</source>
          <target state="translated">GeometryElement.getPointAtLength</target>
        </trans-unit>
        <trans-unit id="ff0d77599dfc8e2b84e87a264824b75c8593e8e2" translate="yes" xml:space="preserve">
          <source>GeometryElement.getTotalLength</source>
          <target state="translated">GeometryElement.getTotalLength</target>
        </trans-unit>
        <trans-unit id="5ea640b52697ae8a0e9a6ca5b5b9ff7de9e6e8f6" translate="yes" xml:space="preserve">
          <source>GeometryElement.isPointInFill</source>
          <target state="translated">GeometryElement.isPointInFill</target>
        </trans-unit>
        <trans-unit id="e10382c9d92bf3cb8fe18fce0b90ab23487c13b0" translate="yes" xml:space="preserve">
          <source>GeometryElement.isPointInStroke</source>
          <target state="translated">GeometryElement.isPointInStroke</target>
        </trans-unit>
        <trans-unit id="4b4f1ebd1e37204645003e62e58dfb87dc28e1de" translate="yes" xml:space="preserve">
          <source>GeometryElement.pathLength</source>
          <target state="translated">GeometryElement.pathLength</target>
        </trans-unit>
        <trans-unit id="1e94ba5be90faaf690548102545dc0952f060022" translate="yes" xml:space="preserve">
          <source>GeometryUtils</source>
          <target state="translated">GeometryUtils</target>
        </trans-unit>
        <trans-unit id="ac795d9fc6a69d6932129a4f7a0378ba8a0b4b26" translate="yes" xml:space="preserve">
          <source>Get a reference to an &lt;a href=&quot;../../htmlimageelement&quot;&gt;&lt;code&gt;HTMLImageElement&lt;/code&gt;&lt;/a&gt; object or to another canvas element as a source. It is also possible to use images by providing a URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e25a84cbb6ea54f84faa391aac2fc6adf8773be" translate="yes" xml:space="preserve">
          <source>Get all CSS rules for the document using Array methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5feed1428f060e5c7767f972a4e63c0fbc309cfe" translate="yes" xml:space="preserve">
          <source>Get all elements that have a class of 'test', inside of an element that has the ID of 'main':</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5572ab6f34a1ad0fc4179b5933a1aa20ee9f66e" translate="yes" xml:space="preserve">
          <source>Get all elements that have a class of 'test':</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a822e38e9c0ff32052aff297c8a25fd88d8650f" translate="yes" xml:space="preserve">
          <source>Get all elements that have both the 'red' and 'test' classes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91bf98759f5b9f363a4ee81fc8f13a9103b62c42" translate="yes" xml:space="preserve">
          <source>Get and set the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies&quot;&gt;cookies&lt;/a&gt; associated with the current document. For a general library see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie/Simple_document.cookie_framework&quot;&gt;this simple cookie framework&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45517535f63c174980c2b3611485f3bf6038df3" translate="yes" xml:space="preserve">
          <source>Get document &lt;a href=&quot;cssstylesheet&quot;&gt;styleSheet&lt;/a&gt; objects with for loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46bb9ebd5b84d4b8adb80de112545d850e2df5b" translate="yes" xml:space="preserve">
          <source>Get information about the selected option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f9db65aa3c803ec95f35b6bd43cf21e324857b" translate="yes" xml:space="preserve">
          <source>Get last modified date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5394dc7a514d0a2d5e34b86be79b9fbc87b7d508" translate="yes" xml:space="preserve">
          <source>Get the body object (first item of the document object).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a4e97606745b823e9ddc8134ff96fc22327ec1" translate="yes" xml:space="preserve">
          <source>Get the first element whose class is 'test'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5fc9e1655675b24c48a0bae35e2d13719733b8" translate="yes" xml:space="preserve">
          <source>Get the first element with a class of 'test', or &lt;code&gt;undefined&lt;/code&gt; if there is no matching element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0190858469f2f27a6e8d7a6a90848aca43bb2fb" translate="yes" xml:space="preserve">
          <source>Get the media stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dba50d3f7fee94e7cb555fc2ebba51894151945" translate="yes" xml:space="preserve">
          <source>Get these installed successfully before moving to the next step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535ff0bced1e7fa25cbbc1edff3c18bfeba11316" translate="yes" xml:space="preserve">
          <source>GetCueAsHTML to get the HTML of that Cue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40319e7ba376170d56d3020e36a10f29591b5f38" translate="yes" xml:space="preserve">
          <source>Gets a &lt;a href=&quot;range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; object for the document fragment under the specified coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e11bf804ce26502bdc9b5e27b9c183edf8e4568" translate="yes" xml:space="preserve">
          <source>Gets a &lt;a href=&quot;serviceworkerregistration&quot;&gt;&lt;code&gt;ServiceWorkerRegistration&lt;/code&gt;&lt;/a&gt; object whose scope matches the provided document URL. If the method can't return a &lt;a href=&quot;serviceworkerregistration&quot;&gt;&lt;code&gt;ServiceWorkerRegistration&lt;/code&gt;&lt;/a&gt;, it returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000734de643f1b7e426d561ef3b41ae235d79d77" translate="yes" xml:space="preserve">
          <source>Gets an item from the options collection for this &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt; element. You can also access an item by specifying the index in array-style brackets or parentheses, without calling this method explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907685b93235bd1a3b664c342b00f67da210b812" translate="yes" xml:space="preserve">
          <source>Gets and sets the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectReadOnly&quot;&gt;&lt;code&gt;AnimationEffectReadOnly&lt;/code&gt;&lt;/a&gt; associated with this animation. This will usually be a &lt;a href=&quot;keyframeeffect&quot;&gt;&lt;code&gt;KeyframeEffect&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d23d3d6e16dd9fdeb08e0e074ffcc398c953367" translate="yes" xml:space="preserve">
          <source>Gets and sets the &lt;code&gt;String&lt;/code&gt; used to identify the animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798db8c2f4ec98e1b95152f7f2124acc416bbe9e" translate="yes" xml:space="preserve">
          <source>Gets and sets the URL of an external script. It reflects the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script#attr-src&quot;&gt;src&lt;/a&gt;&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40bf604aae087d7e454457991cb2606e26fc74b" translate="yes" xml:space="preserve">
          <source>Gets and sets the composite operation property for resolving the property value changes between this and other keyframe effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229b541a44bf5f5f937e3ebb21078f94967becdb" translate="yes" xml:space="preserve">
          <source>Gets and sets the duration of the current media being presented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4dfcf7895ef69428cf9f83f5510bfdef72ca167" translate="yes" xml:space="preserve">
          <source>Gets and sets the element or pseudo-element being animated by this object. This may be &lt;code&gt;null&lt;/code&gt; for animations that do not target a specific element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdee3044122ce4dc65a425daf4a78c56a0833984" translate="yes" xml:space="preserve">
          <source>Gets and sets the event handler for the &lt;code&gt;cancel&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9972525e4bd5a55195c01b07ed04c2a7f5cf269c" translate="yes" xml:space="preserve">
          <source>Gets and sets the event handler for the &lt;code&gt;finish&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608015fa7028e1bdbccab1ecbe1fdf587a7824fc" translate="yes" xml:space="preserve">
          <source>Gets and sets the iteration composite operation for resolving the property value changes of this keyframe effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95666eb5ccf00506758fbb62cbb015b96992493" translate="yes" xml:space="preserve">
          <source>Gets and sets the language of the utterance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b973679fb662a09084eb7a4c61908aa6938fda" translate="yes" xml:space="preserve">
          <source>Gets and sets the pitch at which the utterance will be spoken at.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5b81ba1c81850f41d4ce0642b1b0c33ab5ab60" translate="yes" xml:space="preserve">
          <source>Gets and sets the speed at which the utterance will be spoken at.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764b2dec1c0acc8672256d911ec9571218029b49" translate="yes" xml:space="preserve">
          <source>Gets and sets the text that will be synthesised when the utterance is spoken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2a7d8d0eba4d7f93ecbb79f055fb1204ebf13d" translate="yes" xml:space="preserve">
          <source>Gets and sets the voice that will be used to speak the utterance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f5f3fcc8003568c2b63cf6432c5aad944571b7" translate="yes" xml:space="preserve">
          <source>Gets and sets the volume that the utterance will be spoken at.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479a3b568e629ccea432f219e909a3a4d7cbf180" translate="yes" xml:space="preserve">
          <source>Gets and sets the z-depth defining the far plane of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Viewing_frustum&quot;&gt;eye view frustum&lt;/a&gt;, i.e. the furthest viewable boundary of the scene.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8996c8cd0b1892de33d36d5e35b5f6434f877d7" translate="yes" xml:space="preserve">
          <source>Gets and sets the z-depth defining the near plane of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Viewing_frustum&quot;&gt;eye view frustum&lt;/a&gt;, i.e. the nearest viewable boundary of the scene.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3cc287ff7da9f13712471e4596def66130232b" translate="yes" xml:space="preserve">
          <source>Gets computed style for the specified element. Computed style indicates the computed values of all CSS properties of the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb082416c24ba5233bca09b7748f94841a7561d" translate="yes" xml:space="preserve">
          <source>Gets default computed style for the specified element, ignoring author stylesheets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4175d654e5741cade5d2063d6a14c8c4a7d33ad" translate="yes" xml:space="preserve">
          <source>Gets or sets the &lt;a href=&quot;animationtimeline&quot;&gt;&lt;code&gt;timeline&lt;/code&gt;&lt;/a&gt; associated with this animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53c30b388e032c5a80cc425efa28dc24a881b7c" translate="yes" xml:space="preserve">
          <source>Gets or sets the current &lt;code&gt;value&lt;/code&gt; of this &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt;. Initially, the value is set to &lt;a href=&quot;defaultvalue&quot;&gt;&lt;code&gt;AudioParam.defaultValue&lt;/code&gt;&lt;/a&gt;. Part of the &lt;a href=&quot;../web_audio_api&quot;&gt;Web Audio API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4e15fdc4b4a79faf98054ca71c049638e107bc" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of a meta-data property to define for a document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f610dd194d46c893e1325b5630152fd517df3894" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of a scheme used to interpret the value of a meta-data property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f65ffd9d60e1843745e8906cefc9a1601e2a20" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of an HTTP response header to define for a document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795e429f85cec4f578ed00685ba0c63cc753f64a" translate="yes" xml:space="preserve">
          <source>Gets or sets the playback rate of the animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022e275d3b6615b307b74a0638bdab6791987122" translate="yes" xml:space="preserve">
          <source>Gets or sets the scheduled time when an animation's playback should begin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f0afe7676a481b0e990d8bf633dd2002227679" translate="yes" xml:space="preserve">
          <source>Gets or sets the value of meta-data property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f5a7b06cce637f966cbeb6df28842bc38ef284" translate="yes" xml:space="preserve">
          <source>Gets or sets whether a video element is flipped horizontally in the display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cac4cea49ea8fcf089a01254b2c5603055f8a33" translate="yes" xml:space="preserve">
          <source>Gets the arguments passed to the window (if it's a dialog box) at the time &lt;a href=&quot;window/showmodaldialog&quot;&gt;&lt;code&gt;window.showModalDialog()&lt;/code&gt;&lt;/a&gt; was called. This is an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIArray&quot;&gt;nsIArray&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f856637aac17bbb29cb357088df400619df6025" translate="yes" xml:space="preserve">
          <source>Gets the bit depth of the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a99b593e6ac1fb1c7eae97f4475d95f15de4e8f2" translate="yes" xml:space="preserve">
          <source>Gets the height of the content area of the browser window including, if rendered, the horizontal scrollbar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e44d2764cae5f8dd41599a8d1211b4d8c9cfbff" translate="yes" xml:space="preserve">
          <source>Gets the height of the outside of the browser window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9196e475da5445a14388c7a9b8cf4004686184d" translate="yes" xml:space="preserve">
          <source>Gets the item in the options collection with the specified name. The name string can match either the &lt;code&gt;id&lt;/code&gt; or the &lt;code&gt;name&lt;/code&gt; attribute of an option node. You can also access an item by specifying the name in array-style brackets or parentheses, without calling this method explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8249e8e4fd31933c703652b0bf663f9d6005d175" translate="yes" xml:space="preserve">
          <source>Gets the stream which is the communication channel. Both sides of the channel have reading and writing capability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aafca4a029358f24253d6c8963284ce9aff38070" translate="yes" xml:space="preserve">
          <source>Gets the textual representation of the selector for this rule, e.g. &lt;code&gt;&quot;h1,h2&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4285c9b424fb5256473af12c9d547e827256693b" translate="yes" xml:space="preserve">
          <source>Gets the type of drag-and-drop operation currently selected or sets the operation to a new type. The value must be &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;copy&lt;/code&gt;, &lt;code&gt;link&lt;/code&gt; or &lt;code&gt;move&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3460cdc35bd5be33ba1c7947209b40a704d755a" translate="yes" xml:space="preserve">
          <source>Gets the width of the content area of the browser window including, if rendered, the vertical scrollbar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17870992a0a317751da0bf91d3b54fb626fe8e8" translate="yes" xml:space="preserve">
          <source>Gets the width of the outside of the browser window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891174ec4fa318fc96893a9ea16c0ff4d62704f9" translate="yes" xml:space="preserve">
          <source>Gets/sets directionality (rtl/ltr) of the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eae90e3c292ebdd78e564776e50e9262874c354" translate="yes" xml:space="preserve">
          <source>Gets/sets the ability to edit the whole document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f622c0706b25b59315d5bee42c1af78f3dc7d6" translate="yes" xml:space="preserve">
          <source>Gets/sets the background color of the current document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d63086ac09820ba5fe47d506caf303c815175d" translate="yes" xml:space="preserve">
          <source>Gets/sets the color of hyperlinks in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111676be7f800a85137ce928dacd7ebacb711f4a" translate="yes" xml:space="preserve">
          <source>Gets/sets the color of visited hyperlinks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08fb2f97023dffdfd8fa66d3f975e40292885967" translate="yes" xml:space="preserve">
          <source>Gets/sets the domain of the current document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14345e9a304fa6c83eb44966692fb7faf083411b" translate="yes" xml:space="preserve">
          <source>Gets/sets the foreground color, or text color, of the current document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee834a1ea2f0709b45abdb1e6f9337aa136f8ff8" translate="yes" xml:space="preserve">
          <source>Gets/sets the height of the current document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f515f712a58ba293a6c2c57b2131b374977639fc" translate="yes" xml:space="preserve">
          <source>Gets/sets the location, or current URL, of the window object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12e9dd2d2a342d5bfa638eb7875b66cc01a99b8f" translate="yes" xml:space="preserve">
          <source>Gets/sets the name of the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7698e94ca6006e8d3523d94731b9231e245ab5d" translate="yes" xml:space="preserve">
          <source>Gets/sets the status bar text for the given window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3593577fb29b678a056d46ec9a6a199e8dcce12f" translate="yes" xml:space="preserve">
          <source>Gets/sets the text in the statusbar at the bottom of the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ba0557bf351d5ab023cdd712a9361484da0413" translate="yes" xml:space="preserve">
          <source>Getter that returns a &lt;a href=&quot;datatransferitem&quot;&gt;&lt;code&gt;DataTransferItem&lt;/code&gt;&lt;/a&gt; at the given index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5932f7efb33cf014bdea924e45043f5873e5a6cb" translate="yes" xml:space="preserve">
          <source>Getting GL parameter information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12e2d21e487e64b831e8d5289c9e14b3214cce0a" translate="yes" xml:space="preserve">
          <source>Getting a file representing the canvas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea3b174980d16c9ccfbe4a6bea74a44618fbdfc" translate="yes" xml:space="preserve">
          <source>Getting a list of supported codecs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d289c86636c3051367bedf8e271eb694afe139" translate="yes" xml:space="preserve">
          <source>Getting a media element's audio track list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d329642cc9f46c619556d532845fabb7197576" translate="yes" xml:space="preserve">
          <source>Getting a media element's video track list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ec4b0274f8dc40ce148efd2168eca376f020b8" translate="yes" xml:space="preserve">
          <source>Getting a reference to our VR display</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0b547b05199f66bcd45b755e05682a1a5a9505" translate="yes" xml:space="preserve">
          <source>Getting a text node from the table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5e3085710fb96f6ebd04d1b2c37f0efc0e4558" translate="yes" xml:space="preserve">
          <source>Getting access to the video</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e665b98ed595238e61fd79dc09ba22d7c22af9" translate="yes" xml:space="preserve">
          <source>Getting an ImageData object's pixel data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da72555fd0d83be27f5f8d8a4c91c0c7d659ce1" translate="yes" xml:space="preserve">
          <source>Getting an attribute value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63d7ca685785eb8f0c97ca55651337f44eeb4d1" translate="yes" xml:space="preserve">
          <source>Getting an element from within a form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f4c29f30689c7e162ca9ded23ad76eab872ed6" translate="yes" xml:space="preserve">
          <source>Getting an input stream and setting up the recorder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18004262b922fecfc38f4a8aba86b0e1e428ace" translate="yes" xml:space="preserve">
          <source>Getting an uniform location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="214c6f0d469df7f2c045010eb5c2f4c0e30a66d4" translate="yes" xml:space="preserve">
          <source>Getting and drawing the device list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d572a346771535d7669c231f40a70326776922" translate="yes" xml:space="preserve">
          <source>Getting buffer information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45184c6a533554c7b45a88fc25af26215335babe" translate="yes" xml:space="preserve">
          <source>Getting current bindings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0848cf7990231f22ef3916d5282cb00e69c705a" translate="yes" xml:space="preserve">
          <source>Getting data from the database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31214af20388c7e373dda092e9108ba38eacf197" translate="yes" xml:space="preserve">
          <source>Getting element references</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7781199b8797905fb7ccaeeb22cdf6ef76476e10" translate="yes" xml:space="preserve">
          <source>Getting form information</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
