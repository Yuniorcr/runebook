<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="http">
    <body>
      <group id="http">
        <trans-unit id="a5b93109d2910f83b46a8f8b84565a2b90f04e8f" translate="yes" xml:space="preserve">
          <source>Android webview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2272152aaed514a90142950fb3ee1816c7074cb" translate="yes" xml:space="preserve">
          <source>Annotation of existing resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a34db762af17ee412c2a1fc9d092bc9dce7999" translate="yes" xml:space="preserve">
          <source>Another (implicit) indication that PATCH is allowed, is the presence of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Patch&quot;&gt;&lt;code&gt;Accept-Patch&lt;/code&gt;&lt;/a&gt; header, which specifies the patch document formats accepted by the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea2ea80d736402d761cc48753f37ae87a7086f1" translate="yes" xml:space="preserve">
          <source>Another API, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events&quot;&gt;server-sent events&lt;/a&gt;, is a one-way service that allows a server to send events to the client, using HTTP as a transport mechanism. Using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventSource&quot;&gt;&lt;code&gt;EventSource&lt;/code&gt;&lt;/a&gt; interface, the client opens a connection and establishes event handlers. The client browser automatically converts the messages that arrive on the HTTP stream into appropriate &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; objects, delivering them to the event handlers that have been registered for the events' &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Event/type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; if known, or to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventSource/onmessage&quot;&gt;&lt;code&gt;onmessage&lt;/code&gt;&lt;/a&gt; event handler if no type-specific event handler was established.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82dda038aa2cce2ed80f2fe178807efbf3638a7c" translate="yes" xml:space="preserve">
          <source>Another typical use case of the &lt;code&gt;ETag&lt;/code&gt; header is to cache resources that are unchanged. If a user visits a given URL again (that has an &lt;code&gt;ETag&lt;/code&gt; set), and it is &lt;em&gt;stale&lt;/em&gt;, that is too old to be considered usable, the client will send the value of its &lt;code&gt;ETag&lt;/code&gt; along in an &lt;a href=&quot;if-none-match&quot;&gt;&lt;code&gt;If-None-Match&lt;/code&gt;&lt;/a&gt; header field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e02264f317d706ccbea92e11ccd2f204223b4b4" translate="yes" xml:space="preserve">
          <source>Any MIME type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d073236284623914133cba02aa3f08d7e4a1a8da" translate="yes" xml:space="preserve">
          <source>Any attempt to identify the entity ultimately responsible for the resource being unavailable, such as the name of the person or organization that made a legal demand resulting in the content's removal belongs in the response body, not in the &lt;code&gt;rel=&quot;blocked-by&quot;&lt;/code&gt; link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f93939c7c6cb77a4b58edcc0e622cd4847d28e7" translate="yes" xml:space="preserve">
          <source>Any charset not mentioned elsewhere in the header; &lt;code&gt;'*'&lt;/code&gt; being used as a wildcard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffac48fe322697cea7b86272c21674cea37081d" translate="yes" xml:space="preserve">
          <source>Any document that contains text and is theoretically human readable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2222f9e23d53ca401d68b85209e6a60c148699f8" translate="yes" xml:space="preserve">
          <source>Any dotted address such as an IP address or mask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="019e0e72fd8d034b92757591b2abd6fca20d6e93" translate="yes" xml:space="preserve">
          <source>Any kind of audio file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4445bb33a492123fee27932f107bd3fb3d96ab" translate="yes" xml:space="preserve">
          <source>Any kind of binary data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6114a2f683fe140d2073d3c42d6efbc65bb0052" translate="yes" xml:space="preserve">
          <source>Any kind of binary data, especially data that will be executed or interpreted somehow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1efabcb6609afdf043de0f7cdb84bbe7f95e6d79" translate="yes" xml:space="preserve">
          <source>Any kind of image. Videos are not included, though animated images (like animated GIF) are described with an image type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b107a882caf2ec54e57571bc8a5b70f3cfd436" translate="yes" xml:space="preserve">
          <source>Any kind of video file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bebfb3250f36aea1f47b92ea11652dd128e36ff" translate="yes" xml:space="preserve">
          <source>Any language; &lt;code&gt;'*'&lt;/code&gt; is used as a wildcard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2b54a4202ec978d3ce61340b71c764fd12c522" translate="yes" xml:space="preserve">
          <source>Any of those URLs can be typed into your browser's address bar to tell it to load the associated page (resource).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a55969e44ed3bb85f72438df20e0888b1d448e7d" translate="yes" xml:space="preserve">
          <source>Any request can contain a conditional header defined in HTTP (If-
   Match, If-Modified-Since, etc.) or the &quot;If&quot; or &quot;Overwrite&quot;
   conditional headers defined in this specification.  If the server
   evaluates a conditional header, and if that condition fails to hold,
   then this error code MUST be returned.  On the other hand, if the
   client did not include a conditional header in the request, then the
   server MUST NOT use this status code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8478316470e4f240737c39611f11363ddfca7c9b" translate="yes" xml:space="preserve">
          <source>Any value is placed in an order of preference expressed using a relative &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Quality_values&quot;&gt;quality value&lt;/a&gt; called &lt;em&gt;weight&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0362e9377af962c1e1e3c9526a03e0bd8afd66f5" translate="yes" xml:space="preserve">
          <source>Any value is placed in an order of preference expressed using a relative &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Quality_values&quot;&gt;quality value&lt;/a&gt; called the &lt;em&gt;weight&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2511c542d2415f42594a069865e3cebb0df0bdbf" translate="yes" xml:space="preserve">
          <source>Any value placed in an order of preference expressed using a relative &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Quality_values&quot;&gt;quality value&lt;/a&gt; called &lt;em&gt;weight&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028f46051e76ed93ba7b2778ec6eb36735319f74" translate="yes" xml:space="preserve">
          <source>Any value used is placed in an order of preference expressed using relative &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Quality_values&quot;&gt;quality value&lt;/a&gt; called the &lt;em&gt;weight&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5958b0f53cb499388dd9ee04a106a30b02c5d1" translate="yes" xml:space="preserve">
          <source>Apache</source>
          <target state="translated">Apache</target>
        </trans-unit>
        <trans-unit id="8999d296169b8dd735b6c2a66a1890fdaeaf65ac" translate="yes" xml:space="preserve">
          <source>Apache (.htaccess)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7723239d4f8c294f39821b7409607014e4779e8f" translate="yes" xml:space="preserve">
          <source>Apache configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa0a9cd5c584e9e02295690438c89eb9804a2974" translate="yes" xml:space="preserve">
          <source>Apache examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c418bff5ffb1981f5504dddf5424420a352c8db4" translate="yes" xml:space="preserve">
          <source>Apache supports compression and uses &lt;a href=&quot;http://httpd.apache.org/docs/current/mod/mod_deflate.html&quot;&gt;mod_deflate&lt;/a&gt;; for nginx there is &lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_gzip_module.html&quot;&gt;ngx_http_gzip_module&lt;/a&gt;; for IIS, the &lt;code&gt;&lt;a href=&quot;https://www.iis.net/configreference/system.webserver/httpcompression&quot;&gt;&amp;lt;httpCompression&amp;gt;&lt;/a&gt;&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="970faa6cb472b485c0f707488c5cdc08b7986c8b" translate="yes" xml:space="preserve">
          <source>Apart from the headers set automatically by the user agent (for example, &lt;a href=&quot;headers/connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;headers/user-agent&quot;&gt;&lt;code&gt;User-Agent&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://fetch.spec.whatwg.org/#forbidden-header-name&quot;&gt;any of the other headers with names defined in the Fetch spec as a &amp;ldquo;forbidden header name&amp;rdquo;&lt;/a&gt;), the only headers which are allowed to be manually set are &lt;a href=&quot;https://fetch.spec.whatwg.org/#cors-safelisted-request-header&quot;&gt;those which the Fetch spec defines as being a &amp;ldquo;CORS-safelisted request-header&amp;rdquo;&lt;/a&gt;, which are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa865a302682de3015e0ace4594cebfe9d891b1" translate="yes" xml:space="preserve">
          <source>AppCache,</source>
          <target state="translated">AppCache,</target>
        </trans-unit>
        <trans-unit id="f4f943fdac0850a40c1e416faae62566138da37d" translate="yes" xml:space="preserve">
          <source>Appendix A.  Changes from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918d2c04181755c7d2a2da27da64eb8b93bdb750" translate="yes" xml:space="preserve">
          <source>Appendix A.  Changes from RFCs 2616 and 2617</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43034e2e81ab244701cc36ac5fa225c7d47a6b7" translate="yes" xml:space="preserve">
          <source>Appendix A.  Contributors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81248f72eaaeaa9ce24d21fe4f273f8ddcbc8c1d" translate="yes" xml:space="preserve">
          <source>Appendix A.  Differences between HTTP and MIME</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7952612f081e615aa7bd03aa23dc4c518656090e" translate="yes" xml:space="preserve">
          <source>Appendix A.  HTTP Version History</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6a944bd171bde6db3410fdca99b9555cb916eb" translate="yes" xml:space="preserve">
          <source>Appendix A.  Internet Media Type multipart/byteranges</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a342778d6d38dec85304f64cb11f4d4619e78db" translate="yes" xml:space="preserve">
          <source>Appendix A.  Notes on Processing XML Elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee9c6db5c064e35f5da900ad01918c6a6eb39c9" translate="yes" xml:space="preserve">
          <source>Appendix B.  Changes from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e5d9de6262db2adaa063f2f1cfab6dede8a9d3" translate="yes" xml:space="preserve">
          <source>Appendix B.  Collected ABNF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4047ada28894f318e92d4c1e37bfb1baca1a4956" translate="yes" xml:space="preserve">
          <source>Appendix B.  Imported ABNF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8da15ad98d1a9ffbcd6d66ba2fd87d4baebf827" translate="yes" xml:space="preserve">
          <source>Appendix B.  Notes on HTTP Client Compatibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc7060239451790c0c340964acba077f07d510e" translate="yes" xml:space="preserve">
          <source>Appendix B.  RELAX NG Compact Schema</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058387e6d5459c618bca63d6f49f8d5971089303" translate="yes" xml:space="preserve">
          <source>Appendix C.  Collected ABNF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977523ad17c09cc35f1c89152295090a33b58a76" translate="yes" xml:space="preserve">
          <source>Appendix C.  Imported ABNF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de902e4f9b3096f5f049db4d8e97c98cde2df389" translate="yes" xml:space="preserve">
          <source>Appendix C.  The 'opaquelocktoken' Scheme and URIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce8263e94ec9fefd83f8c080b1172f0fb08a91c8" translate="yes" xml:space="preserve">
          <source>Appendix D.  Collected ABNF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9be62baed7f2691c136ca29f5d801725b346de" translate="yes" xml:space="preserve">
          <source>Appendix D.  Lock-null Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b843d7a45c5fbfe004e6dab880398f2c109d318b" translate="yes" xml:space="preserve">
          <source>Appendix E.  Guidance for Clients Desiring to Authenticate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e32692b4682e33761a3d401d643e95f4fc629c6" translate="yes" xml:space="preserve">
          <source>Appendix F.  Summary of Changes from &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b70da19fe698facbbf74a7c6848c10082c6db6" translate="yes" xml:space="preserve">
          <source>Apple Installer Package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594c277ced56ff92f49f5549dcb6e9bb01873e08" translate="yes" xml:space="preserve">
          <source>Apple Safari rejects any such data. Google Chrome and Microsoft Edge discard up to four invalid bytes preceding a valid response. Firefox tolerates in excess of a kilobyte of invalid data preceding a valid response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e444ff8fa9777e03d5103a61265a5f5c06bddc" translate="yes" xml:space="preserve">
          <source>AppleWebKit/xyz</source>
          <target state="translated">AppleWebKit/xyz</target>
        </trans-unit>
        <trans-unit id="978492a43f30387de57a216152fb92287c408810" translate="yes" xml:space="preserve">
          <source>April 1st joke spec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3cfa2d1b2b69734300d2888ba207ad587d929b9" translate="yes" xml:space="preserve">
          <source>Arbitrary, non-specific warning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef596164d3adddb52527e23859760cbb72f418cb" translate="yes" xml:space="preserve">
          <source>Architecture (RFC 7230)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd9571b02d0b5f97d07115fe12dfba195dd6de2" translate="yes" xml:space="preserve">
          <source>Archive document (multiple files embedded)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96df099182a80fa56639e210174f84a1514aeddb" translate="yes" xml:space="preserve">
          <source>Are you trying to check for the existence of a specific feature?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22374513ed4cb776e85f41fade4e611b7089d973" translate="yes" xml:space="preserve">
          <source>Are you trying to work around a specific bug in some version of a browser?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cab0add88f8e2a278cfb8a5e8b164090488d38a" translate="yes" xml:space="preserve">
          <source>Arguably the most common use and misuse of user agent sniffing is to detect if the device is a mobile device. However, what is failed to be accountable is what they're really after. People use user agent sniffing to detect if the users' device is touch-friendly and has a small screen so they can optimize their website accordingly. While user agent sniffing can sometimes detect these, not all devices are the same. Some mobile devices have big screen sizes, some desktops have a small touchscreen, some people use smart TV's which are an entirely different ballgame altogether, some people can dynamically change the width and height of their screen by flipping their tablet on its side! So, user agent sniffing is definitely not the way to go. But, there are much better alternatives. Use &lt;em&gt;Navigator.maxTouchPoints&lt;/em&gt; to detect if the user's device has a touchscreen. Then, default back to checking the user agent screen only &lt;em&gt;if (!(&quot;maxTouchPoints&quot; in Navigator)) { /*Code here*/}&lt;/em&gt;. Using this information of whether the device has a touchscreen, do not change the entire layout of the website just for touch devices: you will only create more work and maintenance for yourself. Rather, add in touch conveniences such as bigger, more easily clickable buttons (you can do this using CSS by simply increasing the font size). As for the screen size, simply use &lt;em&gt;window.innerWidth&lt;/em&gt; and &lt;em&gt;window.addEventListener(&quot;resize&quot;, function(){ /*refresh screen size dependent things*/ })&lt;/em&gt;. What you want to do for screen size is not slash off information on smaller screens. That will only annoy people because it will force them to use the desktop version. Rather, try to have fewer columns of information in a longer page on smaller screens while having more columns with a shorter page on larger screen sizes. This effect can be easily achieved using CSS flexboxes. Next, always make your code dynamic. The user can flip their mobile device on its side, changing the width and height of the page. Never be satisfied with your webpage until you can open up the dev tools side panel and resize the screen while the webpage looks smooth, fluid, and dynamically resized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec8c8505f13b416d6485fc08c67f5112086e6ad" translate="yes" xml:space="preserve">
          <source>Argument syntax:

      #field-name

   The &quot;no-cache&quot; response directive indicates that the response MUST
   NOT be used to satisfy a subsequent request without successful
   validation on the origin server.  This allows an origin server to
   prevent a cache from using it to satisfy a request without contacting
   it, even by caches that have been configured to send stale responses.

   If the no-cache response directive specifies one or more field-names,
   then a cache MAY use the response to satisfy a subsequent request,
   subject to any other restrictions on caching.  However, any header
   fields in the response that have the field-name(s) listed MUST NOT be
   sent in the response to a subsequent request without successful
   revalidation with the origin server.  This allows an origin server to
   prevent the re-use of certain header fields in a response, while
   still allowing caching of the rest of the response.

   The field-names given are not limited to the set of header fields
   defined by this specification.  Field names are case-insensitive. 

   This directive uses the quoted-string form of the argument syntax.  A
   sender SHOULD NOT generate the token form (even if quoting appears
   not to be needed for single-entry lists).

   Note: Although it has been back-ported to many implementations, some
   HTTP/1.0 caches will not recognize or obey this directive.  Also,
   no-cache response directives with field-names are often handled by
   caches as if an unqualified no-cache directive was received; i.e.,
   the special handling for the qualified form is not widely
   implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1831ae5ad42c135eef58117ca5beea27918ee39" translate="yes" xml:space="preserve">
          <source>Argument syntax:

      #field-name 

   The &quot;private&quot; response directive indicates that the response message
   is intended for a single user and MUST NOT be stored by a shared
   cache.  A private cache MAY store the response and reuse it for later
   requests, even if the response would normally be non-cacheable.

   If the private response directive specifies one or more field-names,
   this requirement is limited to the field-values associated with the
   listed response header fields.  That is, a shared cache MUST NOT
   store the specified field-names(s), whereas it MAY store the
   remainder of the response message.

   The field-names given are not limited to the set of header fields
   defined by this specification.  Field names are case-insensitive.

   This directive uses the quoted-string form of the argument syntax.  A
   sender SHOULD NOT generate the token form (even if quoting appears
   not to be needed for single-entry lists).

   Note: This usage of the word &quot;private&quot; only controls where the
   response can be stored; it cannot ensure the privacy of the message
   content.  Also, private response directives with field-names are
   often handled by caches as if an unqualified private directive was
   received; i.e., the special handling for the qualified form is not
   widely implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aefbf84315b53b56a158fafd1e4047cf84680b4" translate="yes" xml:space="preserve">
          <source>Argument syntax:

      delta-seconds (see &lt;a href=&quot;#section-1.2.1&quot;&gt;Section 1.2.1&lt;/a&gt;)

   The &quot;max-age&quot; request directive indicates that the client is
   unwilling to accept a response whose age is greater than the
   specified number of seconds.  Unless the max-stale request directive
   is also present, the client is not willing to accept a stale
   response.

   This directive uses the token form of the argument syntax: e.g.,
   'max-age=5' not 'max-age=&quot;5&quot;'.  A sender SHOULD NOT generate the
   quoted-string form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b97b4c1790a5d1690e4603b26402d86eb7b629" translate="yes" xml:space="preserve">
          <source>Argument syntax:

      delta-seconds (see &lt;a href=&quot;#section-1.2.1&quot;&gt;Section 1.2.1&lt;/a&gt;)

   The &quot;max-age&quot; response directive indicates that the response is to be
   considered stale after its age is greater than the specified number
   of seconds.

   This directive uses the token form of the argument syntax: e.g.,
   'max-age=5' not 'max-age=&quot;5&quot;'.  A sender SHOULD NOT generate the
   quoted-string form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06cca4dcd60697e3d0f6bcb9d03459f0446ded37" translate="yes" xml:space="preserve">
          <source>Argument syntax:

      delta-seconds (see &lt;a href=&quot;#section-1.2.1&quot;&gt;Section 1.2.1&lt;/a&gt;)

   The &quot;max-stale&quot; request directive indicates that the client is
   willing to accept a response that has exceeded its freshness
   lifetime.  If max-stale is assigned a value, then the client is
   willing to accept a response that has exceeded its freshness lifetime
   by no more than the specified number of seconds.  If no value is
   assigned to max-stale, then the client is willing to accept a stale
   response of any age.

   This directive uses the token form of the argument syntax: e.g.,
   'max-stale=10' not 'max-stale=&quot;10&quot;'.  A sender SHOULD NOT generate
   the quoted-string form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a825cbd8ee60bf462c6dee710ec7c6f4b00811e3" translate="yes" xml:space="preserve">
          <source>Argument syntax:

      delta-seconds (see &lt;a href=&quot;#section-1.2.1&quot;&gt;Section 1.2.1&lt;/a&gt;)

   The &quot;s-maxage&quot; response directive indicates that, in shared caches,
   the maximum age specified by this directive overrides the maximum age
   specified by either the max-age directive or the Expires header
   field.  The s-maxage directive also implies the semantics of the
   proxy-revalidate response directive.

   This directive uses the token form of the argument syntax: e.g.,
   's-maxage=10' not 's-maxage=&quot;10&quot;'.  A sender SHOULD NOT generate the
   quoted-string form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc2f52fea65ff20c3fe05e836282a0ecfcb5341" translate="yes" xml:space="preserve">
          <source>Argument syntax:

      delta-seconds (see &lt;a href=&quot;#section-1.2.1&quot;&gt;Section 1.2.1&lt;/a&gt;) 

   The &quot;min-fresh&quot; request directive indicates that the client is
   willing to accept a response whose freshness lifetime is no less than
   its current age plus the specified time in seconds.  That is, the
   client wants a response that will still be fresh for at least the
   specified number of seconds.

   This directive uses the token form of the argument syntax: e.g.,
   'min-fresh=20' not 'min-fresh=&quot;20&quot;'.  A sender SHOULD NOT generate
   the quoted-string form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c422841b7e3951946583038790545c4ed38481b" translate="yes" xml:space="preserve">
          <source>Articles</source>
          <target state="translated">Articles</target>
        </trans-unit>
        <trans-unit id="cbe5fd2ae86fbae88e539aaddac116ef8cfd88d6" translate="yes" xml:space="preserve">
          <source>As a header for a multipart body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db566644cc9fbe6a83b2c42804119cde6babd72" translate="yes" xml:space="preserve">
          <source>As a multipart document format, it consists of different parts, delimited by a boundary (a string starting with a double dash &lt;code&gt;'--'&lt;/code&gt;). Each part is its own entity with its own HTTP headers, &lt;a href=&quot;../headers/content-disposition&quot;&gt;&lt;code&gt;Content-Disposition&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../headers/content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; for file uploading fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c3d44cd58fb8f4d3b3944cc4bb1a87c5213f6f" translate="yes" xml:space="preserve">
          <source>As a response header for the main body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe358a19fe3a891412dc63b31012cfff7e86b53a" translate="yes" xml:space="preserve">
          <source>As above, but use proxy for local servers which are outside the firewall</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21bb09d2ae7faa16332b73a9ff9b212546d3db2e" translate="yes" xml:space="preserve">
          <source>As an HTTP/1.x connection is serializing requests, even without any ordering, it can't be optimal without large enough available bandwidth. As a solution, browsers open several connections to each domain, sending parallel requests. Default was once 2 to 3 connections, but this has now increased to a more common use of 6 parallel connections. There is a risk of triggering &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/DOS_attack&quot;&gt;DoS&lt;/a&gt; protection on the server side if attempting more than this number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2caa651e1c42338fb211a69aa78825a0cefdcd" translate="yes" xml:space="preserve">
          <source>As an ultimate form of protection, sites that want to never allow scripts to be executed can opt to globally disallow script execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5fdf8f8fd2b7a8d4e1fc4e882626af24bfa4c2" translate="yes" xml:space="preserve">
          <source>As compression brings significant performance improvements, it is recommended to activate it for all files, but already compressed ones like images, audio files and videos.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e3361838eead49089d2124cc5527647d9a433d" translate="yes" xml:space="preserve">
          <source>As compression works better on a specific kind of files, it usually provides nothing to compress them a second time. In fact, this is often counter productive as the cost of the overhead (algorithms usually need a dictionary that add to the initial size) can be higher than the extra gain in compression resulting in a larger file. Do not use the two following techniques for files in a compressed format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81962caea1092807ea8b2efefdcc4ff1e7fe59fa" translate="yes" xml:space="preserve">
          <source>As described in &lt;a href=&quot;#section-2.3&quot;&gt;Section 2.3&lt;/a&gt;, intermediaries can serve a variety of
   roles in the processing of HTTP requests and responses.  Some
   intermediaries are used to improve performance or availability.
   Others are used for access control or to filter content.  Since an
   HTTP stream has characteristics similar to a pipe-and-filter
   architecture, there are no inherent limits to the extent an
   intermediary can enhance (or interfere) with either direction of the
   stream.

   An intermediary not acting as a tunnel MUST implement the Connection
   header field, as specified in &lt;a href=&quot;#section-6.1&quot;&gt;Section 6.1&lt;/a&gt;, and exclude fields from
   being forwarded that are only intended for the incoming connection.

   An intermediary MUST NOT forward a message to itself unless it is
   protected from an infinite request loop.  In general, an intermediary
   ought to recognize its own server names, including any aliases, local
   variations, or literal IP addresses, and respond to such requests
   directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0808a49d5ce5e6736477468b862009c7c3fdd1ef" translate="yes" xml:space="preserve">
          <source>As introduced in &lt;a href=&quot;#section-8.7&quot;&gt;Section 8.7&lt;/a&gt;, extra information on error conditions
   can be included in the body of many status responses.  This section
   makes requirements on the use of the error body mechanism and
   introduces a number of precondition and postcondition codes.

   A &quot;precondition&quot; of a method describes the state of the server that
   must be true for that method to be performed.  A &quot;postcondition&quot; of a
   method describes the state of the server that must be true after that
   method has been completed.

   Each precondition and postcondition has a unique XML element
   associated with it.  In a 207 Multi-Status response, the XML element
   MUST appear inside an 'error' element in the appropriate 'propstat or
   'response' element depending on whether the condition applies to one
   or more properties or to the resource as a whole.  In all other error
   responses where this specification's 'error' body is used, the
   precondition/postcondition XML element MUST be returned as the child
   of a top-level 'error' element in the response body, unless otherwise
   negotiated by the request, along with an appropriate response status.
   The most common response status codes are 403 (Forbidden) if the
   request should not be repeated because it will always fail, and 409
   (Conflict) if it is expected that the user might be able to resolve
   the conflict and resubmit the request.  The 'error' element MAY
   contain child elements with specific error information and MAY be
   extended with any custom child elements.

   This mechanism does not take the place of using a correct numeric
   status code as defined here or in HTTP, because the client must
   always be able to take a reasonable course of action based only on
   the numeric code.  However, it does remove the need to define new
   numeric codes.  The new machine-readable codes used for this purpose
   are XML elements classified as preconditions and postconditions, so
   naturally, any group defining a new condition code can use their own
   namespace.  As always, the &quot;DAV:&quot; namespace is reserved for use by
   IETF-chartered WebDAV working groups. 

   A server supporting this specification SHOULD use the XML error
   whenever a precondition or postcondition defined in this document is
   violated.  For error conditions not specified in this document, the
   server MAY simply choose an appropriate numeric status and leave the
   response body blank.  However, a server MAY instead use a custom
   condition code and other supporting text, because even when clients
   do not automatically recognize condition codes, they can be quite
   useful in interoperability testing and debugging.

   Example - Response with precondition code

   &amp;gt;&amp;gt;Response

      HTTP/1.1 423 Locked
      Content-Type: application/xml; charset=&quot;utf-8&quot;
      Content-Length: xxxx

      &amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&amp;gt;
      &amp;lt;D:error xmlns:D=&quot;DAV:&quot;&amp;gt;
        &amp;lt;D:lock-token-submitted&amp;gt;
          &amp;lt;D:href&amp;gt;/workspace/webdav/&amp;lt;/D:href&amp;gt;
        &amp;lt;/D:lock-token-submitted&amp;gt;
      &amp;lt;/D:error&amp;gt;

   In this example, a client unaware of a depth-infinity lock on the
   parent collection &quot;/workspace/webdav/&quot; attempted to modify the
   collection member &quot;/workspace/webdav/proposal.doc&quot;.

   Some other useful preconditions and postconditions have been defined
   in other specifications extending WebDAV, such as [&lt;a href=&quot;https://tools.ietf.org/html/rfc3744&quot;&gt;RFC3744&lt;/a&gt;] (see
   particularly &lt;a href=&quot;#section-7.1.1&quot;&gt;Section 7.1.1&lt;/a&gt;), [&lt;a href=&quot;https://tools.ietf.org/html/rfc3253&quot;&gt;RFC3253&lt;/a&gt;], and [&lt;a href=&quot;https://tools.ietf.org/html/rfc3648&quot;&gt;RFC3648&lt;/a&gt;].

   All these elements are in the &quot;DAV:&quot; namespace.  If not specified
   otherwise, the content for each condition's XML element is defined to
   be empty.


   Name:  lock-token-matches-request-uri

   Use with:  409 Conflict

   Purpose:  (precondition) -- A request may include a Lock-Token header
      to identify a lock for the UNLOCK method.  However, if the
      Request-URI does not fall within the scope of the lock identified
      by the token, the server SHOULD use this error.  The lock may have
      a scope that does not include the Request-URI, or the lock could
      have disappeared, or the token may be invalid. 

   Name:  lock-token-submitted (precondition)

   Use with:  423 Locked

   Purpose:  The request could not succeed because a lock token should
      have been submitted.  This element, if present, MUST contain at
      least one URL of a locked resource that prevented the request.  In
      cases of MOVE, COPY, and DELETE where collection locks are
      involved, it can be difficult for the client to find out which
      locked resource made the request fail -- but the server is only
      responsible for returning one such locked resource.  The server
      MAY return every locked resource that prevented the request from
      succeeding if it knows them all.

   &amp;lt;!ELEMENT lock-token-submitted (href+) &amp;gt;


   Name:  no-conflicting-lock (precondition)

   Use with:  Typically 423 Locked

   Purpose:  A LOCK request failed due the presence of an already
      existing conflicting lock.  Note that a lock can be in conflict
      although the resource to which the request was directed is only
      indirectly locked.  In this case, the precondition code can be
      used to inform the client about the resource that is the root of
      the conflicting lock, avoiding a separate lookup of the
      &quot;lockdiscovery&quot; property.

   &amp;lt;!ELEMENT no-conflicting-lock (href)* &amp;gt;


   Name:  no-external-entities

   Use with:  403 Forbidden

   Purpose:  (precondition) -- If the server rejects a client request
      because the request body contains an external entity, the server
      SHOULD use this error.


   Name:  preserved-live-properties

   Use with:  409 Conflict

   Purpose:  (postcondition) -- The server received an otherwise-valid
      MOVE or COPY request, but cannot maintain the live properties with
      the same behavior at the destination.  It may be that the server 

      only supports some live properties in some parts of the
      repository, or simply has an internal error.


   Name:  propfind-finite-depth

   Use with:  403 Forbidden

   Purpose:  (precondition) -- This server does not allow infinite-depth
      PROPFIND requests on collections.


   Name:  cannot-modify-protected-property

   Use with:  403 Forbidden

   Purpose:  (precondition) -- The client attempted to set a protected
      property in a PROPPATCH (such as DAV:getetag).  See also
      &lt;a href=&quot;https://tools.ietf.org/html/rfc3253#section-3.12&quot;&gt;[RFC3253], Section&amp;nbsp;3.12&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe77ba78e510c9166dbea1c2b28c359c08ac3d8" translate="yes" xml:space="preserve">
          <source>As long as the &lt;code&gt;identity&lt;/code&gt; value, meaning no encoding, is not explicitly forbidden, by an &lt;code&gt;identity;q=0&lt;/code&gt; or a &lt;code&gt;*;q=0&lt;/code&gt; without another explicitly set value for identity, the server must never send back a &lt;a href=&quot;../status/406&quot;&gt;&lt;code&gt;406&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Not Acceptable&lt;/code&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74200951f8f3fa2318cb0493483bd1ef3add00e6" translate="yes" xml:space="preserve">
          <source>As long as the cache is not stale, no requests are issued at all. But once it has become stale, this is mostly controlled by the &lt;a href=&quot;headers/cache-control&quot;&gt;&lt;code&gt;Cache-Control&lt;/code&gt;&lt;/a&gt; header, the client doesn't use the cached value directly but issues a &lt;em&gt;conditional request&lt;/em&gt;. The value of the validator is used as a parameter of the &lt;a href=&quot;headers/if-modified-since&quot;&gt;&lt;code&gt;If-Modified-Since&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;headers/if-match&quot;&gt;&lt;code&gt;If-Match&lt;/code&gt;&lt;/a&gt; headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39de7dbf0fcbd56548611790fd4f9d1859fcff38" translate="yes" xml:space="preserve">
          <source>As of HTTP/1.1, the connection is no longer closed after completing the third phase, and the client is now granted a further request: this means the second and third phases can now be performed any number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10737eb038a18f448d914366beb682e160b36994" translate="yes" xml:space="preserve">
          <source>As seen earlier, in most cases, looking for the rendering engine is a better way to go. This will help to not exclude lesser known browsers. Browsers sharing a common rendering engine will display a page in the same way: it is often a fair assumption that what will work in one will work in the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c188cf3444dcabae8c9d4a1f5961a9553d9194" translate="yes" xml:space="preserve">
          <source>As several representations of a given resource are sent, shared caches are less efficient and server implementations are more complex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7377d313a5ee9a8718b11c2ecd95fc7f352f8569" translate="yes" xml:space="preserve">
          <source>As the above code demonstrates, there is &lt;strong&gt;always &lt;/strong&gt;a way to test browser support on anything, no exceptions. There &lt;strong&gt;never &lt;/strong&gt;any reason to check the user string for this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1896c32232ae10635b0e9d7b6084cf07068dbb" translate="yes" xml:space="preserve">
          <source>As the name implies, a reverse proxy does the opposite of what a forward proxy does: A forward proxy acts in behalf of clients (or requesting hosts), a reverse proxy acts in behalf of servers. Forward proxies can hide the identities of clients whereas reverse proxies can hide the identities of servers. Reverse proxies have several use cases, a few are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444c366dc18e9c8a26e52d6d891adf57495dae72" translate="yes" xml:space="preserve">
          <source>As the user ID and password are passed over the network as clear text (it is base64 encoded, but base64 is a reversible encoding), the basic authentication scheme is not secure. HTTPS / TLS should be used in conjunction with basic authentication. Without these additional security enhancements, basic authentication should not be used to protect sensitive or valuable information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c3ae8778eda348525a5dd269ea2b796710e51f" translate="yes" xml:space="preserve">
          <source>As there is no uniformity of the different part of the user agent string, this is the tricky part.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17fdcd20e92320a37954cc0aaa2c4492b1c32a15" translate="yes" xml:space="preserve">
          <source>As well as styles that are applied in Javascript by setting the &lt;code&gt;style&lt;/code&gt; attribute directly, or by setting &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText&quot;&gt;&lt;code&gt;cssText&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02d7f17a2dcce723df40692e0f522ac350d18cf" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/XSS&quot;&gt;XSS&lt;/a&gt;, input filtering is important.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090adf7d66d69b3cc82ada8155a31b95b1d5cc05" translate="yes" xml:space="preserve">
          <source>As you can see, the report includes the full path to the violating resource in &lt;code&gt;blocked-uri&lt;/code&gt;. This is not always the case. For example, when the &lt;code&gt;signup.html&lt;/code&gt; would attempt to load CSS from &lt;a href=&quot;http://anothercdn.example.com/stylesheet.css&quot;&gt;&lt;code&gt;http://anothercdn.example.com/stylesheet.css&lt;/code&gt;&lt;/a&gt;, the browser would &lt;em&gt;not&lt;/em&gt; include the full path but only the origin (&lt;code&gt;http://anothercdn.example.com&lt;/code&gt;). The CSP specification &lt;a href=&quot;http://www.w3.org/TR/CSP/#security-violation-reports&quot;&gt;gives an explanation&lt;/a&gt; of this odd behaviour. In summary, this is done to prevent leaking sensitive information about cross-origin resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec92124be22f59c3429bab49ee1de958a60686bc" translate="yes" xml:space="preserve">
          <source>As you can see, the report includes the full path to the violating resource in &lt;code&gt;blocked-uri&lt;/code&gt;. This is not always the case. For example, when the &lt;code&gt;signup.html&lt;/code&gt; would attempt to load CSS from &lt;code&gt;http://anothercdn.example.com/stylesheet.css&lt;/code&gt;, the browser would &lt;em&gt;not&lt;/em&gt; include the full path but only the origin (&lt;code&gt;http://anothercdn.example.com&lt;/code&gt;). This is done to prevent leaking sensitive information about cross-origin resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2597783f8778af171536ba979953d5e5baf049" translate="yes" xml:space="preserve">
          <source>Associates a specific cryptographic public key with a certain web server to decrease the risk of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/MITM&quot;&gt;MITM&lt;/a&gt; attacks with forged certificates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4423c564a6dd958705092c9f3f6196baaeb909f9" translate="yes" xml:space="preserve">
          <source>At this point, a typical request and response looked like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640a65ab124efd895e7362db6ab879724f9f4606" translate="yes" xml:space="preserve">
          <source>Atom Entry and Feed Documents can contain XML Digital Signatures
   [&lt;a href=&quot;#ref-REC-xmldsig-core&quot;&gt;REC-xmldsig-core&lt;/a&gt;] and can be encrypted using XML Encryption
   [&lt;a href=&quot;#ref-REC-xmlenc-core&quot;&gt;REC-xmlenc-core&lt;/a&gt;] as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc4287#section-5&quot;&gt;Section&amp;nbsp;5 of [RFC4287]&lt;/a&gt;.  Handling
   of signatures and encrypted elements in Atom documents is discussed
   in Sections &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt; and &lt;a href=&quot;#section-6.3&quot;&gt;6.3&lt;/a&gt; of [&lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;RFC4287&lt;/a&gt;].

   Neither servers nor clients are under any obligation to support
   encryption and digital signature of Entries or Feeds, although it is
   certainly possible that in some installations, clients or servers
   might require signing or encrypting of the documents exchanged in the
   Atom Protocol.

   Because servers are allowed (and in some cases, expected) to modify
   the contents of an Entry Document before publishing it, signatures
   within an entry are only likely to be useful to the server to which
   the entry is being sent.  Clients cannot assume that the signature
   will be valid when viewed by a third party, or even that the server
   will publish the client's signature.

   A server is allowed to strip client-applied signatures, to strip
   client-applied signatures and then re-sign with its own public key,
   and to oversign an entry with its own public key.  The meaning to a
   third party of a signature applied by a server is the same as a
   signature from anyone, as described in [&lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;RFC4287&lt;/a&gt;].  It is RECOMMENDED
   that a server that is aware that it has changed any part of an Entry
   Document that was signed by the client should strip that signature
   before publishing the entry in order to prevent third parties from
   trying to interpret a signature that cannot be validated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5aa3a3e4c19a0f5bd9d139cb1cf724de62f5c3f" translate="yes" xml:space="preserve">
          <source>Atom Feed and Entry Documents can contain XML External Entities as
   defined in Section 4.2.2 of [&lt;a href=&quot;#ref-REC-xml&quot;&gt;REC-xml&lt;/a&gt;].  Atom implementations are not
   required to load external entities.  External entities are subject to
   the same security concerns as any network operation and can alter the
   semantics of an Atom document.  The same issues exist for Resources
   linked to by Atom elements such as atom:link and atom:content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb39269091e71d2cf80365bde28208d78373e852" translate="yes" xml:space="preserve">
          <source>Atom Feed and Entry Documents can contain a broad range of content
   types including code that might be executable in some contexts.
   Malicious clients could attempt to attack servers or other clients by
   injecting code into a Collection Document's Entry or Media Resources.

   Server implementations are strongly encouraged to verify that client-
   supplied content is safe prior to accepting, processing, or
   publishing it.  In the case of HTML, experience indicates that
   verification based on a white list of acceptable content is more
   effective than a black list of forbidden content.

   Additional information about XHTML and HTML content safety can be
   found in &lt;a href=&quot;https://tools.ietf.org/html/rfc4287#section-8.1&quot;&gt;Section&amp;nbsp;8.1 of [RFC4287]&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f30f294721759bc8f3b4c8af76920be111f1ebd" translate="yes" xml:space="preserve">
          <source>Atom Protocol Document formats are specified in terms of the XML
   Information Set [&lt;a href=&quot;#ref-REC-xml-infoset&quot;&gt;REC-xml-infoset&lt;/a&gt;], serialized as XML 1.0 [&lt;a href=&quot;#ref-REC-xml&quot;&gt;REC-xml&lt;/a&gt;].

   The Infoset terms &quot;Element Information Item&quot; and &quot;Attribute
   Information Item&quot; are shortened to &quot;element&quot; and &quot;attribute&quot;
   respectively.  Therefore, when this specification uses the term
   &quot;element&quot;, it is referring to an Element Information Item, and when
   it uses the term &quot;attribute&quot;, it is referring to an Attribute
   Information Item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1b50db6b134e88169d0061fffd21c5907dcc49" translate="yes" xml:space="preserve">
          <source>Atom Protocol documents allow the use of IRIs [&lt;a href=&quot;https://tools.ietf.org/html/rfc3987&quot;&gt;RFC3987&lt;/a&gt;] as well as
   URIs [&lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;RFC3986&lt;/a&gt;] to identify Resources.  Before an IRI in a document is
   used by HTTP, the IRI is first converted to a URI according to the
   procedure defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3987#section-3.1&quot;&gt;Section&amp;nbsp;3.1 of [RFC3987]&lt;/a&gt;.  In accordance with
   that specification, the conversion SHOULD be applied as late as
   possible.  Conversion does not imply Resource creation -- the IRI and
   the URI into which it is converted identify the same Resource.

   While the Atom Protocol specifies the formats of the representations
   that are exchanged and the actions that can be performed on the IRIs
   embedded in those representations, it does not constrain the form of
   the URIs that are used.  HTTP [&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;] specifies that the URI space
   of each server is controlled by that server, and this protocol
   imposes no further constraints on that control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736c134a608fda6f7298f3bba3cfd72a9fdecd9a" translate="yes" xml:space="preserve">
          <source>Atom Publishing Protocol implementations are susceptible to a variety
   of spoofing attacks.  Malicious clients might send Atom Entries
   containing inaccurate information anywhere in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcde284149405876b277c263099cd3f0fe408f3d" translate="yes" xml:space="preserve">
          <source>Atom Publishing Protocol implementations handle URIs and IRIs.  See
   &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-7&quot;&gt;Section&amp;nbsp;7 of [RFC3986]&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc3987#section-8&quot;&gt;Section&amp;nbsp;8 of [RFC3987]&lt;/a&gt; for security
   considerations related to their handling and use. 

   The Atom Publishing Protocol leaves the server in control of minting
   URIs.  The use of any client-supplied data for creating new URIs is
   subject to the same concerns as described in the next section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c64fa2cad1ec9b5d7097b9637cf7e73d027deb" translate="yes" xml:space="preserve">
          <source>Atom Publishing Protocol server implementations are susceptible to
   replay attacks.  Specifically, this specification does not define a
   means of detecting duplicate requests.  Accidentally sent duplicate
   requests are indistinguishable from intentional and malicious replay
   attacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2972250359d4c37b4863cb1f87236835622705f3" translate="yes" xml:space="preserve">
          <source>Atom Publishing Protocol server implementations need to take adequate
   precautions to ensure malicious clients cannot consume excessive
   server resources (CPU, memory, disk, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c002bc6355801197a02bfae106d0ff5c2ac8619" translate="yes" xml:space="preserve">
          <source>Attribute Value:  edit

   Description:  An IRI of an editable Member Entry.  When appearing
      within an atom:entry, the href IRI can be used to retrieve,
      update, and delete the Resource represented by that Entry.

   Expected display characteristics:  Undefined; this relation can be
      used for background processing or to provide extended
      functionality without displaying its value.

   Security considerations:  Automated agents should take care when this
      relation crosses administrative domains (e.g., the URI has a
      different authority than the current document).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37137689e8aac586d2a2206e3451c0c78ed0404b" translate="yes" xml:space="preserve">
          <source>Attribute Value:  edit-media

   Description:  An IRI of an editable Media Resource.  When appearing
      within an atom:entry, the href IRI can be used to retrieve,
      update, and delete the Media Resource associated with that Entry.

   Expected display characteristics:  Undefined; this relation can be
      used for background processing or to provide extended
      functionality without displaying its value.

   Security considerations:  Automated agents should take care when this
      relation crosses administrative domains (e.g., the URI has a
      different authority than the current document).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f249c1f3c78b5d8dfebf667cc36b2ac178b2dfce" translate="yes" xml:space="preserve">
          <source>Audio and video types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d4341caf182975ff694c881dad755bd726c7a8" translate="yes" xml:space="preserve">
          <source>Audio and video. Only resources with the correct MIME Type will be played in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; elements. Be sure to &lt;a href=&quot;https://developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements&quot;&gt;use the correct type for audio and video&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147b0d392949573e61339af923f0d61f3d4158e3" translate="yes" xml:space="preserve">
          <source>Audio or video type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1acfa55eb1476c86c5c4a68f256a67b25289ab" translate="yes" xml:space="preserve">
          <source>Authentication</source>
          <target state="translated">Authentication</target>
        </trans-unit>
        <trans-unit id="fc6c8170f13d7b26f5b4b7880a4d642545c57a00" translate="yes" xml:space="preserve">
          <source>Authentication challenges indicate what mechanisms are available for
   the client to provide authentication credentials in future requests.

   +--------------------+--------------------------+
   | Header Field Name  | Defined in...            |
   +--------------------+--------------------------+
   | WWW-Authenticate   | &lt;a href=&quot;https://tools.ietf.org/html/rfc7235#section-4.1&quot;&gt;Section&amp;nbsp;4.1 of [RFC7235]&lt;/a&gt; |
   | Proxy-Authenticate | &lt;a href=&quot;https://tools.ietf.org/html/rfc7235#section-4.3&quot;&gt;Section&amp;nbsp;4.3 of [RFC7235]&lt;/a&gt; |
   +--------------------+--------------------------+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153bcddcdfb94a1c4fcc1b07386bec94f199b549" translate="yes" xml:space="preserve">
          <source>Authentication of cross-origin images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f2d621f56ba98464057328fa277805b179a4c3" translate="yes" xml:space="preserve">
          <source>Authentication schemes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c6eeec306dfcdeb221624f2ddf32ce5652cd2a" translate="yes" xml:space="preserve">
          <source>Authentication schemes that solely rely on the &quot;realm&quot; mechanism for
   establishing a protection space will expose credentials to all
   resources on an origin server.  Clients that have successfully made
   authenticated requests with a resource can use the same
   authentication credentials for other resources on the same origin
   server.  This makes it possible for a different resource to harvest
   authentication credentials for other resources.

   This is of particular concern when an origin server hosts resources
   for multiple parties under the same canonical root URI (&lt;a href=&quot;#section-2.2&quot;&gt;Section 2.2&lt;/a&gt;).
   Possible mitigation strategies include restricting direct access to
   authentication credentials (i.e., not making the content of the
   Authorization request header field available), and separating
   protection spaces by using a different host name (or port number) for
   each party.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8fe0af4751860c096cd4a38e3b9eeae02683be" translate="yes" xml:space="preserve">
          <source>Authentification for AWS servers (&lt;code&gt;AWS4-HMAC-SHA256&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a9869cf89f831749f9533eebd33a7ff2d561cb" translate="yes" xml:space="preserve">
          <source>Authority</source>
          <target state="translated">Authority</target>
        </trans-unit>
        <trans-unit id="5e25ce007aa95ea2ea8b158aee9c630a32ea5616" translate="yes" xml:space="preserve">
          <source>Authorization</source>
          <target state="translated">Authorization</target>
        </trans-unit>
        <trans-unit id="3224c382af3d5fca4ce96ea1f1e751cb8cb2158f" translate="yes" xml:space="preserve">
          <source>Authorization (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae9490e931f2a313f9d9d7c5b0605ca243c7183" translate="yes" xml:space="preserve">
          <source>Authorization (RFC 7235)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95619b532fe893a1b62f3f25950021c4a689dd4d" translate="yes" xml:space="preserve">
          <source>Autoplay</source>
          <target state="translated">Autoplay</target>
        </trans-unit>
        <trans-unit id="c2caaa3b5ae832f6f7280b3a4c0e89023587c880" translate="yes" xml:space="preserve">
          <source>Avoiding mid-air collisions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff193e7487bbc8578fa13e29841eaf30a9bedc1" translate="yes" xml:space="preserve">
          <source>Avoiding the lost update problem with optimistic locking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d576102d4917836a687b68a54b6ec02b0270e5d" translate="yes" xml:space="preserve">
          <source>Avoiding user agent detection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd4ecba402cd2d1689af61cc723efcbd052a8bf" translate="yes" xml:space="preserve">
          <source>BWS = OWS

   Connection = *( &quot;,&quot; OWS ) connection-option *( OWS &quot;,&quot; [ OWS
    connection-option ] )

   Content-Length = 1*DIGIT

   HTTP-message = start-line *( header-field CRLF ) CRLF [ message-body
    ]
   HTTP-name = %x48.54.54.50 ; HTTP
   HTTP-version = HTTP-name &quot;/&quot; DIGIT &quot;.&quot; DIGIT
   Host = uri-host [ &quot;:&quot; port ]

   OWS = *( SP / HTAB )

   RWS = 1*( SP / HTAB )

   TE = [ ( &quot;,&quot; / t-codings ) *( OWS &quot;,&quot; [ OWS t-codings ] ) ]
   Trailer = *( &quot;,&quot; OWS ) field-name *( OWS &quot;,&quot; [ OWS field-name ] )
   Transfer-Encoding = *( &quot;,&quot; OWS ) transfer-coding *( OWS &quot;,&quot; [ OWS
    transfer-coding ] )

   URI-reference = &amp;lt;URI-reference, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-4.1&quot;&gt;[RFC3986], Section&amp;nbsp;4.1&lt;/a&gt;&amp;gt;
   Upgrade = *( &quot;,&quot; OWS ) protocol *( OWS &quot;,&quot; [ OWS protocol ] )

   Via = *( &quot;,&quot; OWS ) ( received-protocol RWS received-by [ RWS comment
    ] ) *( OWS &quot;,&quot; [ OWS ( received-protocol RWS received-by [ RWS
    comment ] ) ] )

   absolute-URI = &amp;lt;absolute-URI, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-4.3&quot;&gt;[RFC3986], Section&amp;nbsp;4.3&lt;/a&gt;&amp;gt;
   absolute-form = absolute-URI
   absolute-path = 1*( &quot;/&quot; segment )
   asterisk-form = &quot;*&quot;
   authority = &amp;lt;authority, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.2&quot;&gt;[RFC3986], Section&amp;nbsp;3.2&lt;/a&gt;&amp;gt;
   authority-form = authority 

   chunk = chunk-size [ chunk-ext ] CRLF chunk-data CRLF
   chunk-data = 1*OCTET
   chunk-ext = *( &quot;;&quot; chunk-ext-name [ &quot;=&quot; chunk-ext-val ] )
   chunk-ext-name = token
   chunk-ext-val = token / quoted-string
   chunk-size = 1*HEXDIG
   chunked-body = *chunk last-chunk trailer-part CRLF
   comment = &quot;(&quot; *( ctext / quoted-pair / comment ) &quot;)&quot;
   connection-option = token
   ctext = HTAB / SP / %x21-27 ; '!'-'''
    / %x2A-5B ; '*'-'['
    / %x5D-7E ; ']'-'~'
    / obs-text

   field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]
   field-name = token
   field-value = *( field-content / obs-fold )
   field-vchar = VCHAR / obs-text
   fragment = &amp;lt;fragment, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.5&quot;&gt;[RFC3986], Section&amp;nbsp;3.5&lt;/a&gt;&amp;gt;

   header-field = field-name &quot;:&quot; OWS field-value OWS
   http-URI = &quot;http://&quot; authority path-abempty [ &quot;?&quot; query ] [ &quot;#&quot;
    fragment ]
   https-URI = &quot;https://&quot; authority path-abempty [ &quot;?&quot; query ] [ &quot;#&quot;
    fragment ]

   last-chunk = 1*&quot;0&quot; [ chunk-ext ] CRLF

   message-body = *OCTET
   method = token

   obs-fold = CRLF 1*( SP / HTAB )
   obs-text = %x80-FF
   origin-form = absolute-path [ &quot;?&quot; query ]

   partial-URI = relative-part [ &quot;?&quot; query ]
   path-abempty = &amp;lt;path-abempty, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.3&quot;&gt;[RFC3986], Section&amp;nbsp;3.3&lt;/a&gt;&amp;gt;
   port = &amp;lt;port, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.2.3&quot;&gt;[RFC3986], Section&amp;nbsp;3.2.3&lt;/a&gt;&amp;gt;
   protocol = protocol-name [ &quot;/&quot; protocol-version ]
   protocol-name = token
   protocol-version = token
   pseudonym = token

   qdtext = HTAB / SP / &quot;!&quot; / %x23-5B ; '#'-'['
    / %x5D-7E ; ']'-'~'
    / obs-text
   query = &amp;lt;query, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.4&quot;&gt;[RFC3986], Section&amp;nbsp;3.4&lt;/a&gt;&amp;gt;
   quoted-pair = &quot;\&quot; ( HTAB / SP / VCHAR / obs-text ) 

   quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE

   rank = ( &quot;0&quot; [ &quot;.&quot; *3DIGIT ] ) / ( &quot;1&quot; [ &quot;.&quot; *3&quot;0&quot; ] )
   reason-phrase = *( HTAB / SP / VCHAR / obs-text )
   received-by = ( uri-host [ &quot;:&quot; port ] ) / pseudonym
   received-protocol = [ protocol-name &quot;/&quot; ] protocol-version
   relative-part = &amp;lt;relative-part, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-4.2&quot;&gt;[RFC3986], Section&amp;nbsp;4.2&lt;/a&gt;&amp;gt;
   request-line = method SP request-target SP HTTP-version CRLF
   request-target = origin-form / absolute-form / authority-form /
    asterisk-form

   scheme = &amp;lt;scheme, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.1&quot;&gt;[RFC3986], Section&amp;nbsp;3.1&lt;/a&gt;&amp;gt;
   segment = &amp;lt;segment, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.3&quot;&gt;[RFC3986], Section&amp;nbsp;3.3&lt;/a&gt;&amp;gt;
   start-line = request-line / status-line
   status-code = 3DIGIT
   status-line = HTTP-version SP status-code SP reason-phrase CRLF

   t-codings = &quot;trailers&quot; / ( transfer-coding [ t-ranking ] )
   t-ranking = OWS &quot;;&quot; OWS &quot;q=&quot; rank
   tchar = &quot;!&quot; / &quot;#&quot; / &quot;$&quot; / &quot;%&quot; / &quot;&amp;amp;&quot; / &quot;'&quot; / &quot;*&quot; / &quot;+&quot; / &quot;-&quot; / &quot;.&quot; /
    &quot;^&quot; / &quot;_&quot; / &quot;`&quot; / &quot;|&quot; / &quot;~&quot; / DIGIT / ALPHA
   token = 1*tchar
   trailer-part = *( header-field CRLF )
   transfer-coding = &quot;chunked&quot; / &quot;compress&quot; / &quot;deflate&quot; / &quot;gzip&quot; /
    transfer-extension
   transfer-extension = token *( OWS &quot;;&quot; OWS transfer-parameter )
   transfer-parameter = token BWS &quot;=&quot; BWS ( token / quoted-string )

   uri-host = &amp;lt;host, see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.2.2&quot;&gt;[RFC3986], Section&amp;nbsp;3.2.2&lt;/a&gt;&amp;gt; 

Index

   A
      absolute-form (of request-target)  42
      accelerator  10
      application/http Media Type  63
      asterisk-form (of request-target)  43
      authoritative response  67
      authority-form (of request-target)  42-43

   B
      browser  7

   C
      cache  11
      cacheable  12
      captive portal  11
      chunked (Coding Format)  28, 32, 36
      client  7
      close  51, 56
      compress (Coding Format)  38
      connection  7
      Connection header field  51, 56
      Content-Length header field  30

   D
      deflate (Coding Format)  38
      Delimiters  27
      downstream  10

   E
      effective request URI  45

   G
      gateway  10
      Grammar
         absolute-form  42
         absolute-path  16
         absolute-URI  16
         ALPHA  6
         asterisk-form  41, 43
         authority  16
         authority-form  42-43
         BWS  25
         chunk  36
         chunk-data  36
         chunk-ext  36
         chunk-ext-name  36 

         chunk-ext-val  36
         chunk-size  36
         chunked-body  36
         comment  27
         Connection  51
         connection-option  51
         Content-Length  30
         CR  6
         CRLF  6
         ctext  27
         CTL  6
         DIGIT  6
         DQUOTE  6
         field-content  23
         field-name  23, 40
         field-value  23
         field-vchar  23
         fragment  16
         header-field  23, 37
         HEXDIG  6
         Host  44
         HTAB  6
         HTTP-message  19
         HTTP-name  14
         http-URI  17
         HTTP-version  14
         https-URI  18
         last-chunk  36
         LF  6
         message-body  28
         method  21
         obs-fold  23
         obs-text  27
         OCTET  6
         origin-form  42
         OWS  25
         partial-URI  16
         port  16
         protocol-name  47
         protocol-version  47
         pseudonym  47
         qdtext  27
         query  16
         quoted-pair  27
         quoted-string  27
         rank  39
         reason-phrase  22
         received-by  47 

         received-protocol  47
         request-line  21
         request-target  41
         RWS  25
         scheme  16
         segment  16
         SP  6
         start-line  21
         status-code  22
         status-line  22
         t-codings  39
         t-ranking  39
         tchar  27
         TE  39
         token  27
         Trailer  40
         trailer-part  37
         transfer-coding  35
         Transfer-Encoding  28
         transfer-extension  35
         transfer-parameter  35
         Upgrade  57
         uri-host  16
         URI-reference  16
         VCHAR  6
         Via  47
      gzip (Coding Format)  39

   H
      header field  19
      header section  19
      headers  19
      Host header field  44
      http URI scheme  17
      https URI scheme  17
   I
      inbound  9
      interception proxy  11
      intermediary  9

   M
      Media Type
         application/http  63
         message/http  62
      message  7
      message/http Media Type  62
      method  21 

   N
      non-transforming proxy  49

   O
      origin server  7
      origin-form (of request-target)  42
      outbound  10

   P
      phishing  67
      proxy  10

   R
      recipient  7
      request  7
      request-target  21
      resource  16
      response  7
      reverse proxy  10

   S
      sender  7
      server  7
      spider  7

   T
      target resource  40
      target URI  40
      TE header field  39
      Trailer header field  40
      Transfer-Encoding header field  28
      transforming proxy  49
      transparent proxy  11
      tunnel  10

   U
      Upgrade header field  57
      upstream  9
      URI scheme
         http  17
         https  17
      user agent  7

   V
      Via header field  47 

Authors' Addresses

   Roy T. Fielding (editor)
   Adobe Systems Incorporated
   345 Park Ave
   San Jose, CA  95110
   USA

   EMail: fielding@gbiv.com
   URI:   &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt;


   Julian F. Reschke (editor)
   greenbytes GmbH
   Hafenweg 16
   Muenster, NW  48155
   Germany

   EMail: julian.reschke@greenbytes.de
   URI:   &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt;


Fielding &amp;amp; Reschke           Standards Track                   [Page 89]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f38d91a98f445cfaf31a1b87315c344133fcf77" translate="yes" xml:space="preserve">
          <source>BZip archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9268ec259738e5664244ab3e240148d4cb02f539" translate="yes" xml:space="preserve">
          <source>BZip2 archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6c8e8e9e899e58c8a82dcfe5a52c51d8589bc9" translate="yes" xml:space="preserve">
          <source>Base64 encoding and decoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f89697a7bc4483ffe13d2dcbf8d58f7b7c1be20" translate="yes" xml:space="preserve">
          <source>Basic aspects of HTTP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1141fef0f5d80de5637d17a79c2912b21db48fe" translate="yes" xml:space="preserve">
          <source>Basic authentication scheme</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e2b3aff207a2929af920ad2047a4854ec8d687" translate="yes" xml:space="preserve">
          <source>Basic support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81efe3a6d9678e29a4c810740a95dcc9bb4f25f2" translate="yes" xml:space="preserve">
          <source>Basics of HTTP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2390d6f45ac482880e651868f977b3b748a0f6b2" translate="yes" xml:space="preserve">
          <source>Because HTTP uses mostly textual, character-delimited fields, parsers
   are often vulnerable to attacks based on sending very long (or very
   slow) streams of data, particularly where an implementation is
   expecting a protocol element with no predefined length.

   To promote interoperability, specific recommendations are made for
   minimum size limits on request-line (&lt;a href=&quot;#section-3.1.1&quot;&gt;Section 3.1.1&lt;/a&gt;) and header fields
   (&lt;a href=&quot;#section-3.2&quot;&gt;Section 3.2&lt;/a&gt;).  These are minimum recommendations, chosen to be
   supportable even by implementations with limited resources; it is
   expected that most implementations will choose substantially higher
   limits.

   A server can reject a message that has a request-target that is too
   long (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.5.12&quot;&gt;Section&amp;nbsp;6.5.12 of [RFC7231]&lt;/a&gt;) or a request payload that is too
   large (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.5.11&quot;&gt;Section&amp;nbsp;6.5.11 of [RFC7231]&lt;/a&gt;).  Additional status codes related
   to capacity limits have been defined by extensions to HTTP [&lt;a href=&quot;https://tools.ietf.org/html/rfc6585&quot;&gt;RFC6585&lt;/a&gt;].

   Recipients ought to carefully limit the extent to which they process
   other protocol elements, including (but not limited to) request
   methods, response status phrases, header field-names, numeric values,
   and body chunks.  Failure to limit such processing can result in
   buffer overflows, arithmetic overflows, or increased vulnerability to
   denial-of-service attacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e347f7f4e0eb64be97283fb708464f948f15cd41" translate="yes" xml:space="preserve">
          <source>Because a client might be receiving responses via multiple paths, so
   that some responses flow through one set of caches and other
   responses flow through a different set of caches, a client might
   receive responses in an order different from that in which the origin
   server sent them. We would like the client to use the most recently
   generated response, even if older responses are still apparently
   fresh.

   Neither the entity tag nor the expiration value can impose an
   ordering on responses, since it is possible that a later response
   intentionally carries an earlier expiration time. The Date values are
   ordered to a granularity of one second.

   When a client tries to revalidate a cache entry, and the response it
   receives contains a Date header that appears to be older than the one
   for the existing entry, then the client SHOULD repeat the request
   unconditionally, and include

       Cache-Control: max-age=0

   to force any intermediate caches to validate their copies directly
   with the origin server, or

       Cache-Control: no-cache

   to force any intermediate caches to obtain a new copy from the origin
   server. 

   If the Date values are equal, then the client MAY use either response
   (or MAY, if it is being extremely prudent, request a new response).
   Servers MUST NOT depend on clients being able to choose
   deterministically between responses generated during the same second,
   if their expiration times overlap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86455b35c9696e2ada5790776540ffdd90e87107" translate="yes" xml:space="preserve">
          <source>Because expiration values are assigned optimistically, it is possible
   for two caches to contain fresh values for the same resource that are
   different.

   If a client performing a retrieval receives a non-first-hand response
   for a request that was already fresh in its own cache, and the Date
   header in its existing cache entry is newer than the Date on the new
   response, then the client MAY ignore the response. If so, it MAY
   retry the request with a &quot;Cache-Control: max-age=0&quot; directive (see
   &lt;a href=&quot;#section-14.9&quot;&gt;section 14.9&lt;/a&gt;), to force a check with the origin server.

   If a cache has two fresh responses for the same representation with
   different validators, it MUST use the one with the more recent Date
   header. This situation might arise because the cache is pooling
   responses from other caches, or because a client has asked for a
   reload or a revalidation of an apparently fresh cache entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8925ede0629c5d28bf60e237373ba50709672d6" translate="yes" xml:space="preserve">
          <source>Because some of the information shared by &lt;code&gt;resource:&lt;/code&gt; URLs is available to websites, a web page could run internal scripts and inspect internal resources of Firefox, including the default preferences, which could be a serious security and privacy issue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="546f4d232503e1d341d388da112b0bb01eea4130" translate="yes" xml:space="preserve">
          <source>Because the &lt;a href=&quot;headers/user-agent&quot;&gt;&lt;code&gt;User-Agent&lt;/code&gt;&lt;/a&gt; header value is different (&quot;varies&quot;) for mobile and desktop clients, caches will not be used to serve mobile content mistakenly to desktop users or vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8cadc83ac6b7350fa14508ccacb5caa822a4e4b" translate="yes" xml:space="preserve">
          <source>Because the request headers in the above example include a &lt;code&gt;Cookie&lt;/code&gt; header, the request would fail if the value of the &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header were &quot;*&quot;. But it does not fail: Because the value of the &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header is &quot;&lt;code&gt;http://foo.example&lt;/code&gt;&quot; (an actual origin) rather than the &quot;&lt;code&gt;*&lt;/code&gt;&quot; wildcard, the credential-cognizant content is returned to the invoking web content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1e2820de19096a78681bfbbd2529f24bd989c8" translate="yes" xml:space="preserve">
          <source>Because the source of a link might be private information or might
   reveal an otherwise private information source, it is strongly
   recommended that the user be able to select whether or not the
   Referer field is sent. For example, a browser client could have a
   toggle switch for browsing openly/anonymously, which would
   respectively enable/disable the sending of Referer and From
   information.

   Clients SHOULD NOT include a Referer header field in a (non-secure)
   HTTP request if the referring page was transferred with a secure
   protocol.

   Authors of services which use the HTTP protocol SHOULD NOT use GET
   based forms for the submission of sensitive data, because this will
   cause this data to be encoded in the Request-URI. Many existing
   servers, proxies, and user agents will log the request URI in some
   place where it might be visible to third parties. Servers can use
   POST-based form submission instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89777ff4d87ff412faf166b9388ba8bd9eb18838" translate="yes" xml:space="preserve">
          <source>Because unsafe request methods (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.1&quot;&gt;Section&amp;nbsp;4.2.1 of [RFC7231]&lt;/a&gt;) such as
   PUT, POST or DELETE have the potential for changing state on the
   origin server, intervening caches can use them to keep their contents
   up to date.

   A cache MUST invalidate the effective Request URI (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.5&quot;&gt;Section&amp;nbsp;5.5 of
   [RFC7230]&lt;/a&gt;) as well as the URI(s) in the Location and Content-Location
   response header fields (if present) when a non-error status code is
   received in response to an unsafe request method.

   However, a cache MUST NOT invalidate a URI from a Location or
   Content-Location response header field if the host part of that URI
   differs from the host part in the effective request URI (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.5&quot;&gt;Section&amp;nbsp;5.5
   of [RFC7230]&lt;/a&gt;).  This helps prevent denial-of-service attacks.

   A cache MUST invalidate the effective request URI (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.5&quot;&gt;Section&amp;nbsp;5.5 of
   [RFC7230]&lt;/a&gt;) when it receives a non-error response to a request with a
   method whose safety is unknown.

   Here, a &quot;non-error response&quot; is one with a 2xx (Successful) or 3xx
   (Redirection) status code.  &quot;Invalidate&quot; means that the cache will
   either remove all stored responses related to the effective request
   URI or will mark these as &quot;invalid&quot; and in need of a mandatory
   validation before they can be sent in response to a subsequent
   request.

   Note that this does not guarantee that all appropriate responses are
   invalidated.  For example, a state-changing request might invalidate
   responses in the caches it travels through, but relevant responses
   still might be stored in other caches that it has not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7164b8ce21f524d63c0906c78c5305985077fd8f" translate="yes" xml:space="preserve">
          <source>Before Firefox 58, &lt;code&gt;frame-ancestors&lt;/code&gt; is ignored in &lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1aa5f2715f87eb515763d2edd53baeae3f8d201" translate="yes" xml:space="preserve">
          <source>Before Firefox for Android 58, &lt;code&gt;frame-ancestors&lt;/code&gt; is ignored in &lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62fc5c2bc1f37893a14f09a3227f0a7bbc9e9b1c" translate="yes" xml:space="preserve">
          <source>Beginning in version 41, Firefox for Android will contain the Android version as part of the &lt;var&gt;platform&lt;/var&gt; token. For increased interoperability, if the browser is running on a version below 4 it will report 4.4. Android versions 4 and above will report the version accurately. Note that the same Gecko&amp;mdash;with the same capabilities&amp;mdash;is shipped to all versions of Android.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dac22f5a23b1f3829fde1d94704586ae962f362" translate="yes" xml:space="preserve">
          <source>Below, the client creates a Member Entry using POST:

       POST /myblog/entries HTTP/1.1
       Host: example.org
       Authorization: Basic ZGFmZnk6c2VjZXJldA==
       Content-Type: application/atom+xml;type=entry
       Content-Length: nnn
       Slug: First Post

       &amp;lt;?xml version=&quot;1.0&quot; ?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;Atom-Powered Robots Run Amok&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2007-02-123T17:09:02Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;Captain Lansing&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;content&amp;gt;It's something moving... solid metal&amp;lt;/content&amp;gt;
       &amp;lt;/entry&amp;gt;

   The server signals a successful creation with a status code of 201,
   and returns an ETag header in the response.  Because, in this case,
   the server returned a Content-Location header and Location header
   with the same value, the returned Entry representation can be
   understood to be a complete representation of the newly created Entry
   (see &lt;a href=&quot;#section-9.2&quot;&gt;Section 9.2&lt;/a&gt;).

       HTTP/1.1 201 Created
       Date: Fri, 23 Feb 2007 21:17:11 GMT
       Content-Length: nnn
       Content-Type: application/atom+xml;type=entry
       Location: http://example.org/edit/first-post.atom
       Content-Location: http://example.org/edit/first-post.atom
       ETag: &quot;e180ee84f0671b1&quot;

       &amp;lt;?xml version=&quot;1.0&quot; ?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;Atom-Powered Robots Run Amok&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2007-02-123T17:09:02Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;Captain Lansing&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;content&amp;gt;It's something moving... solid metal&amp;lt;/content&amp;gt;
       &amp;lt;/entry&amp;gt;

   The client can, if it wishes, use the returned ETag value to later
   construct a &quot;Conditional GET&quot; as defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;].  In this case,
   prior to editing, the client sends the ETag value for the Member
   using the If-None-Match header. 

       GET /edit/first-post.atom HTTP/1.1
       Host: example.org
       Authorization: Basic ZGFmZnk6c2VjZXJldA==
       If-None-Match: &quot;e180ee84f0671b1&quot;

   If the Entry has not been modified, the response will be a status
   code of 304 (&quot;Not Modified&quot;).  This allows the client to determine
   whether it still has the most recent representation of the Entry at
   the time of editing.

       HTTP/1.1 304 Not Modified
       Date: Sat, 24 Feb 2007 13:17:11 GMT

   After editing, the client can PUT the Entry and send the ETag entity
   value in an If-Match header, informing the server to accept the entry
   on the condition that the entity value sent still matches the
   server's.

       PUT /edit/first-post.atom HTTP/1.1
       Host: example.org
       Authorization: Basic ZGFmZnk6c2VjZXJldA==
       Content-Type: application/atom+xml;type=entry
       Content-Length: nnn
       If-Match: &quot;e180ee84f0671b1&quot;

       &amp;lt;?xml version=&quot;1.0&quot; ?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;Atom-Powered Robots Run Amok&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2007-02-24T16:34:06Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;Captain Lansing&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;content&amp;gt;Update: it's a hoax!&amp;lt;/content&amp;gt;
       &amp;lt;/entry&amp;gt;

   The server however has since received a more recent copy than the
   client's, and it responds with a status code of 412 (&quot;Precondition
   Failed&quot;).

       HTTP/1.1 412 Precondition Failed
       Date: Sat, 24 Feb 2007 16:34:11 GMT

   This informs the client that the server has a more recent version of
   the Entry and will not allow the sent entity to be stored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0330bfb1138bf9fb6ae44f78a5af3bf13c6fff6" translate="yes" xml:space="preserve">
          <source>Below, the client sends a POST request containing a PNG image to the
   URI of a Collection that accepts PNG images:

       POST /edit/ HTTP/1.1
       Host: media.example.org
       Content-Type: image/png
       Slug: The Beach
       Authorization: Basic ZGFmZnk6c2VjZXJldA==
       Content-Length: nnn

       ...binary data

   The server signals a successful creation with a status code of 201.
   The response includes a Location header indicating the Member URI of
   the Media Link Entry and a representation of that entry in the body
   of the response.  The Media Link Entry includes a content element
   with a &quot;src&quot; attribute.  It also contains a link with a link relation
   of &quot;edit-media&quot;, specifying the IRI to be used for modifying the
   Media Resource.

       HTTP/1.1 201 Created
       Date: Fri, 7 Oct 2005 17:17:11 GMT
       Content-Length: nnn
       Content-Type: application/atom+xml;type=entry;charset=&quot;utf-8&quot;
       Location: http://example.org/media/edit/the_beach.atom

       &amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;The Beach&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2005-10-07T17:17:08Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;Daffy&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;summary type=&quot;text&quot; /&amp;gt;
         &amp;lt;content type=&quot;image/png&quot;
            src=&quot;http://media.example.org/the_beach.png&quot;/&amp;gt;
         &amp;lt;link rel=&quot;edit-media&quot;
            href=&quot;http://media.example.org/edit/the_beach.png&quot; /&amp;gt;
         &amp;lt;link rel=&quot;edit&quot;
            href=&quot;http://example.org/media/edit/the_beach.atom&quot; /&amp;gt;
       &amp;lt;/entry&amp;gt; 

   Later, the client sends a PUT request containing the new PNG using
   the URI indicated in the Media Link Entry's &quot;edit-media&quot; link:

       PUT /edit/the_beach.png HTTP/1.1
       Host: media.example.org
       Content-Type: image/png
       Authorization: Basic ZGFmZnk6c2VjZXJldA==
       Content-Length: nnn

       ...binary data

   The server signals a successful edit with a status code of 200.

       HTTP/1.1 200 Ok
       Date: Fri, 8 Oct 2006 17:17:11 GMT

   The client can edit the metadata for the picture.  First GET the
   Media Link Entry:

       GET /media/edit/the_beach.atom HTTP/1.1
       Host: example.org
       Authorization: Basic ZGFmZnk6c2VjZXJldA==

   The Media Link Entry is returned.

       HTTP/1.1 200 Ok
       Date: Fri, 7 Oct 2005 17:18:11 GMT
       Content-Length: nnn
       Content-Type: application/atom+xml;type=entry;charset=&quot;utf-8&quot;
       ETag: &quot;c181bb840673b5&quot;

       &amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;The Beach&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2005-10-07T17:17:08Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;Daffy&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;summary type=&quot;text&quot; /&amp;gt;
         &amp;lt;content type=&quot;image/png&quot;
            src=&quot;http://media.example.org/the_beach.png&quot;/&amp;gt;
         &amp;lt;link rel=&quot;edit-media&quot;
            href=&quot;http://media.example.org/edit/the_beach.png&quot; /&amp;gt;
         &amp;lt;link rel=&quot;edit&quot;
            href=&quot;http://example.org/media/edit/the_beach.atom&quot; /&amp;gt;
       &amp;lt;/entry&amp;gt;

   The metadata can be updated, in this case to add a summary, and then
   PUT back to the server. 

       PUT /media/edit/the_beach.atom HTTP/1.1
       Host: example.org
       Authorization: Basic ZGFmZnk6c2VjZXJldA==
       Content-Type: application/atom+xml;type=entry
       Content-Length: nnn
       If-Match: &quot;c181bb840673b5&quot;

       &amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;The Beach&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2005-10-07T17:17:08Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;Daffy&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;summary type=&quot;text&quot;&amp;gt;
             A nice sunset picture over the water.
         &amp;lt;/summary&amp;gt;
         &amp;lt;content type=&quot;image/png&quot;
            src=&quot;http://media.example.org/the_beach.png&quot;/&amp;gt;
         &amp;lt;link rel=&quot;edit-media&quot;
            href=&quot;http://media.example.org/edit/the_beach.png&quot; /&amp;gt;
         &amp;lt;link rel=&quot;edit&quot;
            href=&quot;http://example.org/media/edit/the_beach.atom&quot; /&amp;gt;
       &amp;lt;/entry&amp;gt;

   The update was successful.

       HTTP/1.1 200 Ok
       Date: Fri, 7 Oct 2005 17:19:11 GMT
       Content-Length: 0

   Multiple Media Resources can be added to the Collection.

       POST /edit/ HTTP/1.1
       Host: media.example.org
       Content-Type: image/png
       Slug: The Pier
       Authorization: Basic ZGFmZnk6c2VjZXJldA==
       Content-Length: nnn

       ...binary data

   The Resource is created successfully.

       HTTP/1.1 201 Created
       Date: Fri, 7 Oct 2005 17:17:11 GMT
       Content-Length: nnn
       Content-Type: application/atom+xml;type=entry;charset=&quot;utf-8&quot;
       Location: http://example.org/media/edit/the_pier.atom 

       &amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;The Pier&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efe6b&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2005-10-07T17:26:43Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;Daffy&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;summary type=&quot;text&quot; /&amp;gt;
         &amp;lt;content type=&quot;image/png&quot;
            src=&quot;http://media.example.org/the_pier.png&quot;/&amp;gt;
         &amp;lt;link rel=&quot;edit-media&quot;
            href=&quot;http://media.example.org/edit/the_pier.png&quot; /&amp;gt;
         &amp;lt;link rel=&quot;edit&quot;
            href=&quot;http://example.org/media/edit/the_pier.atom&quot; /&amp;gt;
       &amp;lt;/entry&amp;gt;

   The client can now create a new Atom Entry in the blog Entry
   Collection that references the two newly created Media Resources.

       POST /blog/ HTTP/1.1
       Host: example.org
       Content-Type: application/atom+xml;type=entry
       Slug: A day at the beach
       Authorization: Basic ZGFmZnk6c2VjZXJldA==
       Content-Length: nnn

       &amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;A fun day at the beach&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6b&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2005-10-07T17:40:02Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;Daffy&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;content type=&quot;xhtml&quot;&amp;gt;
             &amp;lt;xhtml:div xmlns:xhtml=&quot;http://www.w3.org/1999/xhtml&quot;&amp;gt;
                 &amp;lt;xhtml:p&amp;gt;We had a good day at the beach.
                     &amp;lt;xhtml:img alt=&quot;the beach&quot;
                         src=&quot;http://media.example.org/the_beach.png&quot;/&amp;gt;
                 &amp;lt;/xhtml:p&amp;gt;
                 &amp;lt;xhtml:p&amp;gt;Later we walked down to the pier.
                     &amp;lt;xhtml:img  alt=&quot;the pier&quot;
                         src=&quot;http://media.example.org/the_pier.png&quot;/&amp;gt;
                 &amp;lt;/xhtml:p&amp;gt;
             &amp;lt;/xhtml:div&amp;gt;
         &amp;lt;/content&amp;gt;
       &amp;lt;/entry&amp;gt;

   The Resource is created successfully. 

       HTTP/1.1 200 Ok
       Date: Fri, 7 Oct 2005 17:20:11 GMT
       Content-Length: nnn
       Content-Type: application/atom+xml;type=entry;charset=&quot;utf-8&quot;
       Location: http://example.org/blog/atom/a-day-at-the-beach.atom

       &amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;A fun day at the beach&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;http://example.org/blog/a-day-at-the-beach.xhtml&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2005-10-07T17:43:07Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;Daffy&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;content type=&quot;xhtml&quot;&amp;gt;
             &amp;lt;xhtml:div xmlns:xhtml=&quot;http://www.w3.org/1999/xhtml&quot;&amp;gt;
                 &amp;lt;xhtml:p&amp;gt;We had a good day at the beach.
                     &amp;lt;xhtml:img alt=&quot;the beach&quot;
                        src=&quot;http://media.example.org/the_beach.png&quot;/&amp;gt;
                 &amp;lt;/xhtml:p&amp;gt;
                 &amp;lt;xhtml:p&amp;gt;Later we walked down to the pier.
                     &amp;lt;xhtml:img alt=&quot;the pier&quot;
                        src=&quot;http://media.example.org/the_pier.png&quot;/&amp;gt;
                 &amp;lt;/xhtml:p&amp;gt;
             &amp;lt;/xhtml:div&amp;gt;
         &amp;lt;/content&amp;gt;
         &amp;lt;link rel=&quot;edit&quot;
           href=&quot;http://example.org/blog/edit/a-day-at-the-beach.atom&quot;/&amp;gt;
         &amp;lt;link rel=&quot;alternate&quot; type=&quot;text/html&quot;
           href=&quot;http://example.org/blog/a-day-at-the-beach.html&quot;/&amp;gt;
       &amp;lt;/entry&amp;gt;

   Note that the returned Entry contains a link with a relation of
   &quot;alternate&quot; that points to the associated HTML page that was created
   -- this is not required by this specification, but is included to
   show the kinds of changes a server can make to an Entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9cb09a54952403acfaab07ff33017f6f0fca24" translate="yes" xml:space="preserve">
          <source>Below, the client sends a POST request containing an Atom Entry
   representation using the URI of the Collection:

       POST /edit/ HTTP/1.1
       Host: example.org
       User-Agent: Thingio/1.0
       Authorization: Basic ZGFmZnk6c2VjZXJldA==
       Content-Type: application/atom+xml;type=entry
       Content-Length: nnn
       Slug: First Post

       &amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;Atom-Powered Robots Run Amok&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2003-12-13T18:30:02Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;John Doe&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;content&amp;gt;Some text.&amp;lt;/content&amp;gt;
       &amp;lt;/entry&amp;gt;

   The server signals a successful creation with a status code of 201.
   The response includes a Location header indicating the Member Entry
   URI of the Atom Entry, and a representation of that Entry in the body
   of the response.

       HTTP/1.1 201 Created
       Date: Fri, 7 Oct 2005 17:17:11 GMT
       Content-Length: nnn
       Content-Type: application/atom+xml;type=entry;charset=&quot;utf-8&quot;
       Location: http://example.org/edit/first-post.atom
       ETag: &quot;c180de84f991g8&quot; 

       &amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;
       &amp;lt;entry xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
         &amp;lt;title&amp;gt;Atom-Powered Robots Run Amok&amp;lt;/title&amp;gt;
         &amp;lt;id&amp;gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a&amp;lt;/id&amp;gt;
         &amp;lt;updated&amp;gt;2003-12-13T18:30:02Z&amp;lt;/updated&amp;gt;
         &amp;lt;author&amp;gt;&amp;lt;name&amp;gt;John Doe&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;
         &amp;lt;content&amp;gt;Some text.&amp;lt;/content&amp;gt;
         &amp;lt;link rel=&quot;edit&quot;
             href=&quot;http://example.org/edit/first-post.atom&quot;/&amp;gt;
       &amp;lt;/entry&amp;gt;

   The Entry created and returned by the Collection might not match the
   Entry POSTed by the client.  A server MAY change the values of
   various elements in the Entry, such as the atom:id, atom:updated, and
   atom:author values, and MAY choose to remove or add other elements
   and attributes, or change element content and attribute values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552d2669fbc3963dfa12ac837a60570b8d21b825" translate="yes" xml:space="preserve">
          <source>Besides the setting of the validators on the server side, this mechanism is transparent: all browsers manage a cache and send such conditional requests without any special work to be done by Web developers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a31c7b8d5f0b04cb1a96329834684da05258b3" translate="yes" xml:space="preserve">
          <source>Best Practices for Using the Vary Header &amp;ndash; fastly.com</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3696a45b0fbbf421a242df5da5ec4b688f7df3d0" translate="yes" xml:space="preserve">
          <source>Best practices for good user experiences</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8192d28d193fb637729d7681a715b53c8d8e6fa" translate="yes" xml:space="preserve">
          <source>Between the Web browser and the server, numerous computers and machines relay the HTTP messages. Due to the layered structure of the Web stack, most of these operate at either the transport, network or physical levels, becoming transparent at the HTTP layer and potentially making a significant impact on performance. Those operating at the application layers are generally called &lt;strong&gt;proxies&lt;/strong&gt;. These can be transparent, or not (changing requests going through them), and may perform numerous functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7b5639c2d5c6aefb6a4756b1924c7615e2b7af" translate="yes" xml:space="preserve">
          <source>Blink</source>
          <target state="translated">Blink</target>
        </trans-unit>
        <trans-unit id="d47c2c9d44766d5026529dab6ab5f38489055deb" translate="yes" xml:space="preserve">
          <source>Blink-based (Chromium, Google Chrome, Opera 15+)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12dcd04f8772116c748e7a1686d74433478cbbb7" translate="yes" xml:space="preserve">
          <source>Block pages from loading when they detect reflected XSS attacks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72005736b3d633e161ec04f9f5626d8efc05d101" translate="yes" xml:space="preserve">
          <source>Block the use of outdated APIs like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest&quot;&gt;synchronous XHR&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/write&quot;&gt;&lt;code&gt;document.write()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae08957fc64f7c37c7fd78d3088b53f4a0ac969" translate="yes" xml:space="preserve">
          <source>Blocks a request if the requested type is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c32d078786c9c754da18021b9cdd7c2ac0a06f" translate="yes" xml:space="preserve">
          <source>Blog post: &lt;a href=&quot;http://blog.sidstamm.com/2010/08/http-strict-transport-security-has.html&quot;&gt;HTTP Strict Transport Security has landed!&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7b0d6ecddd36325803a206713ad475fcf71d8b" translate="yes" xml:space="preserve">
          <source>Blog post: &lt;a href=&quot;http://hacks.mozilla.org/2010/08/firefox-4-http-strict-transport-security-force-https/&quot;&gt;HTTP Strict Transport Security (force HTTPS)&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8874edbfb3bde7b175aaba19f751935d9beacccf" translate="yes" xml:space="preserve">
          <source>Bodies can be broadly divided into three categories:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2274273379451e1b300d8da8d1d55a10464ef909" translate="yes" xml:space="preserve">
          <source>Bodies can be broadly divided into two categories:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718a7e8a582e982e452dd5700addba4ffc1cf40d" translate="yes" xml:space="preserve">
          <source>Body</source>
          <target state="translated">Body</target>
        </trans-unit>
        <trans-unit id="c11c5c92eb4bb23f4e3a2e484b5d01a2f02ca7c0" translate="yes" xml:space="preserve">
          <source>Bourne shell script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35387df992c10423a1e97a8fdd9850a0e2b7c2bb" translate="yes" xml:space="preserve">
          <source>Brotli Compressed Data Format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd022bdbe14f7ec31423f0eeb91b8cd71a827f2" translate="yes" xml:space="preserve">
          <source>Browse through detailed HTTP reference documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a2cf5e634dbba0be2bf8a55f79252f5c790bdb" translate="yes" xml:space="preserve">
          <source>Browser</source>
          <target state="translated">Browser</target>
        </trans-unit>
        <trans-unit id="63fac1fb83ccf0b03f982fe1fa1a1b2cd86ed72c" translate="yes" xml:space="preserve">
          <source>Browser Name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18eb74e69d3d38bec47169d773de18efefdfab3" translate="yes" xml:space="preserve">
          <source>Browser behavior differs if this response erroneously includes a body on persistent connections See &lt;a href=&quot;204&quot;&gt;204 No Content&lt;/a&gt; for more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99b91e559917941bb0e259fb1c7151b747a651d" translate="yes" xml:space="preserve">
          <source>Browser compatibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9596fac5cc2ce26e02f68794e8302c229989e32" translate="yes" xml:space="preserve">
          <source>Browser compatibility&lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot;&gt;Update compatibility data on GitHub&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa3ab903e2b10d31d9550e3d19e0235e67965c5" translate="yes" xml:space="preserve">
          <source>Browser detection using the user agent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b250936e425b70355734e2e64ef7dec7333eb610" translate="yes" xml:space="preserve">
          <source>Browser fingerprinting is a set of techniques for identifying a
   specific user agent over time through its unique set of
   characteristics.  These characteristics might include information
   related to its TCP behavior, feature capabilities, and scripting
   environment, though of particular interest here is the set of unique
   characteristics that might be communicated via HTTP.  Fingerprinting
   is considered a privacy concern because it enables tracking of a user
   agent's behavior over time without the corresponding controls that
   the user might have over other forms of data collection (e.g.,
   cookies).  Many general-purpose user agents (i.e., Web browsers) have
   taken steps to reduce their fingerprints.

   There are a number of request header fields that might reveal
   information to servers that is sufficiently unique to enable
   fingerprinting.  The From header field is the most obvious, though it
   is expected that From will only be sent when self-identification is
   desired by the user.  Likewise, Cookie header fields are deliberately 

   designed to enable re-identification, so fingerprinting concerns only
   apply to situations where cookies are disabled or restricted by the
   user agent's configuration.

   The User-Agent header field might contain enough information to
   uniquely identify a specific device, usually when combined with other
   characteristics, particularly if the user agent sends excessive
   details about the user's system or extensions.  However, the source
   of unique information that is least expected by users is proactive
   negotiation (&lt;a href=&quot;#section-5.3&quot;&gt;Section 5.3&lt;/a&gt;), including the Accept, Accept-Charset,
   Accept-Encoding, and Accept-Language header fields.

   In addition to the fingerprinting concern, detailed use of the
   Accept-Language header field can reveal information the user might
   consider to be of a private nature.  For example, understanding a
   given language set might be strongly correlated to membership in a
   particular ethnic group.  An approach that limits such loss of
   privacy would be for a user agent to omit the sending of
   Accept-Language except for sites that have been whitelisted, perhaps
   via interaction after detecting a Vary header field that indicates
   language negotiation might be useful.

   In environments where proxies are used to enhance privacy, user
   agents ought to be conservative in sending proactive negotiation
   header fields.  General-purpose user agents that provide a high
   degree of header field configurability ought to inform users about
   the loss of privacy that might result if too much detail is provided.
   As an extreme privacy measure, proxies could filter the proactive
   negotiation header fields in relayed requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc469bc098ba2e7153a183b517baa5e07dc2864" translate="yes" xml:space="preserve">
          <source>Browser test site: &lt;a href=&quot;https://projects.dm.id.lv/Public-Key-Pins_test&quot;&gt;HSTS and HPKP test&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d7e0a33cf80fe452070f36fa8edcaff2499ee3" translate="yes" xml:space="preserve">
          <source>Browser version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a862ea052d45f44e70d62ee3df599d55e7a99307" translate="yes" xml:space="preserve">
          <source>Browsers send specific &lt;a href=&quot;headers&quot;&gt;HTTP headers&lt;/a&gt; for cross-site requests initiated from within &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch API&lt;/a&gt;. It also expects to see specific HTTP headers sent back with cross-site responses. An overview of these headers, including sample JavaScript code that initiates requests and processes responses from the server, as well as a discussion of each header, &lt;a href=&quot;cors&quot;&gt;can be found in the HTTP Access Control (CORS) article&lt;/a&gt; and should be read as a companion article to this one. This article covers processing &lt;strong&gt;Access Control Requests&lt;/strong&gt; and formulating &lt;strong&gt;Access Control Responses&lt;/strong&gt; in PHP. The target audience for this article are server programmers or administrators. Although the code samples shown here are in PHP, similar concepts apply for ASP.net, Perl, Python, Java, etc.; in general, these concepts can be applied to any server-side programming environment that processes HTTP requests and dynamically formulates HTTP responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d0e2f5033f06ac6f49cc655a388250e954dd48" translate="yes" xml:space="preserve">
          <source>Browsers use &lt;code&gt;utf-8&lt;/code&gt; encoding for usernames and passwords. Firefox used to use &lt;code&gt;ISO-8859-1&lt;/code&gt;, but changed over to &lt;code&gt;utf-8&lt;/code&gt; for parity with other browsers, and to avoid potential problems as described in &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1419658&quot;&gt;bug 1419658&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63957685418f827a422303f2aa0c711fe3143d4" translate="yes" xml:space="preserve">
          <source>Browsers use the MIME type, &lt;strong&gt;not the file extension&lt;/strong&gt;, to determine how to process a URL &amp;mdash; it is important that servers send the correct MIME type in the response's &lt;a href=&quot;../headers/content-type&quot;&gt;Content-Type header&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc12d6c5418def433565d97fa4386bb760ddfa9" translate="yes" xml:space="preserve">
          <source>Buggy &lt;a href=&quot;https://en.wikipedia.org/wiki/Proxy_server&quot;&gt;proxies&lt;/a&gt; are still common and these lead to strange and erratic behaviors that Web developers cannot foresee and diagnose easily.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3838036b670cc0248afd246abbe594ee328cf4de" translate="yes" xml:space="preserve">
          <source>But browsers and standards are not perfect, and there are still some edge cases where detecting the browser is needed. Using the user agent to detect the browser looks simple, but doing it well is, in fact, a very hard problem. This document will guide you in doing this as correctly as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8e3ceffa66e087ea7c8b96aa7587bcaf4d90e8" translate="yes" xml:space="preserve">
          <source>But if it&amp;rsquo;s not possible to make those changes, then another way that may be possible is to this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95da926485cbe7c1b54926edc5fadc82e556e609" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;https://developer.mozilla.org/en/HTTP&quot;&gt;HTTP&lt;/a&gt; requests are issued sequentially. The next request is only issued once the response to the current request has been received. As they are affected by network latencies and bandwidth limitations, this can result in significant delay before the next request is &lt;em&gt;seen&lt;/em&gt; by the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbfb748d8e0737c34e1264e5236d921dd7f9917f" translate="yes" xml:space="preserve">
          <source>By default, a response is cacheable if the requirements of the
   request method, request header fields, and the response status
   indicate that it is cacheable. &lt;a href=&quot;#section-13.4&quot;&gt;Section 13.4&lt;/a&gt; summarizes these defaults
   for cacheability. The following Cache-Control response directives
   allow an origin server to override the default cacheability of a
   response:

   public
      Indicates that the response MAY be cached by any cache, even if it
      would normally be non-cacheable or cacheable only within a non-
      shared cache. (See also Authorization, &lt;a href=&quot;#section-14.8&quot;&gt;section 14.8&lt;/a&gt;, for
      additional details.)

   private
      Indicates that all or part of the response message is intended for
      a single user and MUST NOT be cached by a shared cache. This
      allows an origin server to state that the specified parts of the 

      response are intended for only one user and are not a valid
      response for requests by other users. A private (non-shared) cache
      MAY cache the response.

       Note: This usage of the word private only controls where the
       response may be cached, and cannot ensure the privacy of the
       message content.

   no-cache
       If the no-cache directive does not specify a field-name, then a
      cache MUST NOT use the response to satisfy a subsequent request
      without successful revalidation with the origin server. This
      allows an origin server to prevent caching even by caches that
      have been configured to return stale responses to client requests.

      If the no-cache directive does specify one or more field-names,
      then a cache MAY use the response to satisfy a subsequent request,
      subject to any other restrictions on caching. However, the
      specified field-name(s) MUST NOT be sent in the response to a
      subsequent request without successful revalidation with the origin
      server. This allows an origin server to prevent the re-use of
      certain header fields in a response, while still allowing caching
      of the rest of the response.

       Note: Most HTTP/1.0 caches will not recognize or obey this
       directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11cebe099b732834a230be98a924681140743e7e" translate="yes" xml:space="preserve">
          <source>By default, only the 6 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Simple_response_header&quot;&gt;simple response headers&lt;/a&gt; are exposed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f534edc05bd142ea112ee3efccba58b43dd4c66" translate="yes" xml:space="preserve">
          <source>By default, the Geolocation API can be used within top-level documents and their same-origin child frames. This directive allows or prevents cross-origin frames from accessing geolocation. This includes same-origin frames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e044c03f1a747bedf5cf5499ef70c090ed113f76" translate="yes" xml:space="preserve">
          <source>By default, top-level documents and their same-origin child frames can request and enter fullscreen mode. This directive allows or prevents cross-origin frames from using fullscreen mode. This includes same-origin frames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d23c07d6cec707b5f2b899cf897854aba60b3de4" translate="yes" xml:space="preserve">
          <source>By default, violation reports aren't sent. To enable violation reporting, you need to specify the &lt;a href=&quot;headers/content-security-policy/report-uri&quot;&gt;&lt;code&gt;report-uri&lt;/code&gt;&lt;/a&gt; policy directive, providing at least one URI to which to deliver the reports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8029f70a8cb4b060850538e53207e165c56eb9a2" translate="yes" xml:space="preserve">
          <source>By far, the most common use case for upgrading an HTTP connection is to use WebSockets, which are always implemented by upgrading an HTTP or HTTPS connection. Keep in mind that if you're opening a new connection using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebSocket&quot;&gt;WebSocket API&lt;/a&gt;, or any library that does WebSockets, most or all of this is done for you. For example, opening a WebSocket connection is as simple as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8358024c4d3220c8cee184585d77cac9c14c31ac" translate="yes" xml:space="preserve">
          <source>By specifying the &lt;code&gt;'none'&lt;/code&gt; keyword for the origin list, the specified features will be disabled for all browsing contexts, regardless of their origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424fa2e5f873eae608f951882e066b4cbc6e7248" translate="yes" xml:space="preserve">
          <source>By their very nature, HTTP intermediaries are men-in-the-middle and,
   thus, represent an opportunity for man-in-the-middle attacks.
   Compromise of the systems on which the intermediaries run can result
   in serious security and privacy problems.  Intermediaries might have
   access to security-related information, personal information about
   individual users and organizations, and proprietary information
   belonging to users and content providers.  A compromised
   intermediary, or an intermediary implemented or configured without
   regard to security and privacy considerations, might be used in the
   commission of a wide range of potential attacks.

   Intermediaries that contain a shared cache are especially vulnerable
   to cache poisoning attacks, as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-8&quot;&gt;Section&amp;nbsp;8 of [RFC7234]&lt;/a&gt;. 

   Implementers need to consider the privacy and security implications
   of their design and coding decisions, and of the configuration
   options they provide to operators (especially the default
   configuration).

   Users need to be aware that intermediaries are no more trustworthy
   than the people who run them; HTTP itself cannot solve this problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068b79ba257daf146b30abe76ed868aecb1b606b" translate="yes" xml:space="preserve">
          <source>By their very nature, HTTP proxies are men-in-the-middle, and
   represent an opportunity for man-in-the-middle attacks. Compromise of
   the systems on which the proxies run can result in serious security
   and privacy problems. Proxies have access to security-related
   information, personal information about individual users and
   organizations, and proprietary information belonging to users and
   content providers. A compromised proxy, or a proxy implemented or
   configured without regard to security and privacy considerations,
   might be used in the commission of a wide range of potential attacks.

   Proxy operators should protect the systems on which proxies run as
   they would protect any system that contains or transports sensitive
   information. In particular, log information gathered at proxies often
   contains highly sensitive personal information, and/or information
   about organizations. Log information should be carefully guarded, and
   appropriate guidelines for use developed and followed. (&lt;a href=&quot;#section-15.1.1&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;#section-15.1.1&quot;&gt;15.1.1&lt;/a&gt;). 

   Caching proxies provide additional potential vulnerabilities, since
   the contents of the cache represent an attractive target for
   malicious exploitation. Because cache contents persist after an HTTP
   request is complete, an attack on the cache can reveal information
   long after a user believes that the information has been removed from
   the network. Therefore, cache contents should be protected as
   sensitive information.

   Proxy implementors should consider the privacy and security
   implications of their design and coding decisions, and of the
   configuration options they provide to proxy operators (especially the
   default configuration).

   Users of a proxy need to be aware that they are no trustworthier than
   the people who run the proxy; HTTP itself cannot solve this problem.

   The judicious use of cryptography, when appropriate, may suffice to
   protect against a broad range of security and privacy attacks. Such
   cryptography is beyond the scope of the HTTP/1.1 specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dfb40a9e84e63716a4b33d9963c4cfd678075a5" translate="yes" xml:space="preserve">
          <source>Byte Ranges (RFC 7233)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="b18368c56eb40788963923a6e1129947a0d58087" translate="yes" xml:space="preserve">
          <source>C-Shell script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e288959d3443bcec62386f7d9014542f6872829" translate="yes" xml:space="preserve">
          <source>CONNECT</source>
          <target state="translated">CONNECT</target>
        </trans-unit>
        <trans-unit id="2600bf1e8e192e1bd65ac3bc3a4d82977f60d6da" translate="yes" xml:space="preserve">
          <source>CONNECT (RFC 7231)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2139aadec237bbecb581e62932f94bc3bce7a704" translate="yes" xml:space="preserve">
          <source>CORS</source>
          <target state="translated">CORS</target>
        </trans-unit>
        <trans-unit id="6296a1fd2a34552fbb648aabe29411711a0e4595" translate="yes" xml:space="preserve">
          <source>CORS and caching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c63268612970c5bd579c70dbeed257045fe1f70" translate="yes" xml:space="preserve">
          <source>CORS enabled image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e825c1a70b304027f50005fcb1118744bfcdf168" translate="yes" xml:space="preserve">
          <source>CORS error messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184d3111cdadf6b3fad8c042206c94ffd04e65c3" translate="yes" xml:space="preserve">
          <source>CORS errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e389a185748256670e3bef3e9d485d4db6698009" translate="yes" xml:space="preserve">
          <source>CORS failures result in errors, but for security reasons, specifics about what went wrong &lt;em&gt;are not available to JavaScript code&lt;/em&gt;. All the code knows is that an error occurred. The only way to determine what specifically went wrong is to look at the browser's console for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de24c9d37107bb00fdf3a04f2c2a9d24eabcbabc" translate="yes" xml:space="preserve">
          <source>CORS introduction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0eba3ae2bb3a8277a088b3fe2cba0700041b16" translate="yes" xml:space="preserve">
          <source>CORS settings attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c658a0ab02da27fa9bc91475d5f929983201d0e9" translate="yes" xml:space="preserve">
          <source>CORS-safelisted request-header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4822cee4b44a5acfdf824aef5c202c725aa2e1ef" translate="yes" xml:space="preserve">
          <source>CORS-safelisted response-header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3115498a58c30161e8334af0606a41f44c318e04" translate="yes" xml:space="preserve">
          <source>CSP</source>
          <target state="translated">CSP</target>
        </trans-unit>
        <trans-unit id="70771af22a8b356fbf094cdf8ec696e798056732" translate="yes" xml:space="preserve">
          <source>CSP &lt;a href=&quot;content-security-policy/report-uri&quot;&gt;&lt;code&gt;report-uri&lt;/code&gt;&lt;/a&gt; directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f87a469d5fa9f5e3c9a3ab2c29c19df8341c51" translate="yes" xml:space="preserve">
          <source>CSP &lt;a href=&quot;content-security-policy/upgrade-insecure-requests&quot;&gt;&lt;code&gt;upgrade-insecure-requests&lt;/code&gt;&lt;/a&gt; directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0d3366da966d21d7a419c2ed0bbe7fe3d112f6" translate="yes" xml:space="preserve">
          <source>CSP Level 2 frame-ancestors directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9132b00c8144355d2ffb30916581bd6454aef63" translate="yes" xml:space="preserve">
          <source>CSP allows multiple policies being specified for a resource, including via the &lt;code&gt;Content-Security-Policy&lt;/code&gt; header, the &lt;a href=&quot;content-security-policy-report-only&quot;&gt;&lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt;&lt;/a&gt; header and a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta&quot;&gt;&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84514b55cad8a4471776e8261e9056e00bb80eff" translate="yes" xml:space="preserve">
          <source>CSP directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7e232a207938fbc334d7ae81fd9271bdea2b5f" translate="yes" xml:space="preserve">
          <source>CSP in workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62becf9c2b19df7737b78178e6297a23a4286119" translate="yes" xml:space="preserve">
          <source>CSP is designed to be fully backward compatible (except CSP version 2 where there are some explicitly-mentioned inconsistencies in backward compatibility; more details &lt;a href=&quot;https://www.w3.org/TR/CSP2&quot;&gt;here&lt;/a&gt; section 1.1). Browsers that don't support it still work with servers that implement it, and vice-versa: browsers that don't support CSP simply ignore it, functioning as usual, defaulting to the standard same-origin policy for web content. If the site doesn't offer the CSP header, browsers likewise use the standard &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;same-origin policy&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc54f753bc7cbbc002ef53de42786ebf31429cfa" translate="yes" xml:space="preserve">
          <source>CSP makes it possible for server administrators to reduce or eliminate the vectors by which XSS can occur by specifying the domains that the browser should consider to be valid sources of executable scripts. A CSP compatible browser will then only execute scripts loaded in source files received from those whitelisted domains, ignoring all other script (including inline scripts and event-handling HTML attributes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7031a0ce63915761c940ed51b1837a242dbd3b4b" translate="yes" xml:space="preserve">
          <source>CSP version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d4a5f94061540e9f0aa3594fa2f993bb976f3b" translate="yes" xml:space="preserve">
          <source>CSP: base-uri</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f387bd5a0bc1c97fc48409c2910b8698c8640e" translate="yes" xml:space="preserve">
          <source>CSP: block-all-mixed-content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25eb56df44cb67b582b21cd3edbd78acfb7b3e7" translate="yes" xml:space="preserve">
          <source>CSP: child-src</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d4703b593508b27eaeff8d0aebcd15f991e8e2" translate="yes" xml:space="preserve">
          <source>CSP: connect-src</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68907bfebcb9f7aaac284a06b0682cb8062e8905" translate="yes" xml:space="preserve">
          <source>CSP: default-src</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33201263305688f8d0319035bf86905e02a74b2e" translate="yes" xml:space="preserve">
          <source>CSP: font-src</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288f4f31fbc4626f98b2f869fd485b9fad754b76" translate="yes" xml:space="preserve">
          <source>CSP: form-action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1110c66ccba3f4594386963f17efd01ebfc1cd32" translate="yes" xml:space="preserve">
          <source>CSP: frame-ancestors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d7881b7f2e872886dea3318b9ec4ad54690900" translate="yes" xml:space="preserve">
          <source>CSP: frame-src</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21056b59bbdeaabbcbf48e5b78e6825df16fd152" translate="yes" xml:space="preserve">
          <source>CSP: img-src</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7bbbea8fbb911ad61a95926c52038e17270734" translate="yes" xml:space="preserve">
          <source>CSP: manifest-src</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216739951c2911845bfa3c58a3e1759ef762351f" translate="yes" xml:space="preserve">
          <source>CSP: media-src</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0f2d6ea1745b227865a7908c705926a5818865" translate="yes" xml:space="preserve">
          <source>CSP: object-src</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9310170277ea799be8285b0064422067334219b7" translate="yes" xml:space="preserve">
          <source>CSP: plugin-types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f55d98b5a3ac85d047f911ee4a486f34144e3d" translate="yes" xml:space="preserve">
          <source>CSP: referrer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53be58aafa7031586553deadc48190f849f218d" translate="yes" xml:space="preserve">
          <source>CSP: report-to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865f9627c1b6ca237d57e68fc76c695bc3af6d64" translate="yes" xml:space="preserve">
          <source>CSP: report-uri</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="360c612795c5fa6ec239445c2a3549cdd177ae8f" translate="yes" xml:space="preserve">
          <source>CSP: require-sri-for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95233e49e595781c9ba6c45123a969ceace0209c" translate="yes" xml:space="preserve">
          <source>CSP: sandbox</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746f3a678a7fdd2c8e56ab69cf9f85ffa266928d" translate="yes" xml:space="preserve">
          <source>CSP: script-src</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073f20d15a570fd6d41695506e3f4b44db4ec9c8" translate="yes" xml:space="preserve">
          <source>CSP: style-src</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdec421ab6d7add012ba02e55c66584a25b4ae24" translate="yes" xml:space="preserve">
          <source>CSP: upgrade-insecure-requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8f32fe79e286807b14bcfd102e8d5b1bd01893" translate="yes" xml:space="preserve">
          <source>CSP: worker-src</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b89c4cbe4e07b5d318b0db30585680356a57b5" translate="yes" xml:space="preserve">
          <source>CSS &lt;code&gt;url()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc5b4a629abbfbd5eccc6eedfa9f028a8215b669" translate="yes" xml:space="preserve">
          <source>CSS can fetch resources referenced from stylesheets. These resources are following a referrer policy as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7417538e496bd203aa442ce377a765b360b5ad7" translate="yes" xml:space="preserve">
          <source>CSS files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a58e854c19a4742126d3d6571cf7bf2c94f204" translate="yes" xml:space="preserve">
          <source>CSS files used to style a Web page&lt;strong&gt; must&lt;/strong&gt; be sent with &lt;code&gt;text/css&lt;/code&gt;. If a server doesn't recognize the &lt;code&gt;.css&lt;/code&gt; suffix for CSS files, it may send them with &lt;code&gt;text/plain&lt;/code&gt; or &lt;code&gt;application/octet-stream&lt;/code&gt; MIME types. If so, they won't be recognized as CSS by most browsers and will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9387eaae83736c3d69453fd21bd568dec8f4524" translate="yes" xml:space="preserve">
          <source>Cache handling of a response to a conditional request is dependent
   upon its status code:

   o  A 304 (Not Modified) response status code indicates that the
      stored response can be updated and reused; see &lt;a href=&quot;#section-4.3.4&quot;&gt;Section 4.3.4&lt;/a&gt;.

   o  A full response (i.e., one with a payload body) indicates that
      none of the stored responses nominated in the conditional request
      is suitable.  Instead, the cache MUST use the full response to
      satisfy the request and MAY replace the stored response(s).

   o  However, if a cache receives a 5xx (Server Error) response while
      attempting to validate a response, it can either forward this
      response to the requesting client, or act as if the server failed
      to respond.  In the latter case, the cache MAY send a previously
      stored response (see &lt;a href=&quot;#section-4.2.4&quot;&gt;Section 4.2.4&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eca146b7d059bac1fffb373a3b4ac5a46895065" translate="yes" xml:space="preserve">
          <source>Cache refresh: this indicates that the cache value is still fresh and can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797e92b9fd4173be50b6906927ba56a7e66b9d27" translate="yes" xml:space="preserve">
          <source>Cache request directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b943ff4cafdda6a82e806c4186ad1f27a30b226" translate="yes" xml:space="preserve">
          <source>Cache response directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="363657bc3c95ae010a3ed0bae48a02dfa27c59c4" translate="yes" xml:space="preserve">
          <source>Cache results of a preflight request for 10 minutes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0426eb019de93cd2ae1c3a3a04b09dc6cfd746ab" translate="yes" xml:space="preserve">
          <source>Cache static content: offload the web servers by caching static content like pictures,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc8d7aabbcac8d512fa7176f44889e337cb29b2" translate="yes" xml:space="preserve">
          <source>Cache update</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39c0f09e8619679ee8854f8b7b8e45d8271d16d" translate="yes" xml:space="preserve">
          <source>Cache validation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b09c51972b24aaf8bff4e23301b40da54c025b6" translate="yes" xml:space="preserve">
          <source>Cache-Control</source>
          <target state="translated">Cache-Control</target>
        </trans-unit>
        <trans-unit id="96c175aa287942740a4c9dc0851f228f568c2dd0" translate="yes" xml:space="preserve">
          <source>Cache-Control (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db46bd114028441fc2cb90df358efa899df9e03d" translate="yes" xml:space="preserve">
          <source>Cache-Control (RFC 7234)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f831d9e40838da8be7663f96e7bf5e81e81f1527" translate="yes" xml:space="preserve">
          <source>Cacheability</source>
          <target state="translated">Cacheability</target>
        </trans-unit>
        <trans-unit id="ab9c8d4b22f42d6e20f2de04cee4a87194c9b2ff" translate="yes" xml:space="preserve">
          <source>Cacheable</source>
          <target state="translated">Cacheable</target>
        </trans-unit>
        <trans-unit id="367eb2cade8f9a82f981b9ecbd24bcbcccc4234d" translate="yes" xml:space="preserve">
          <source>Cacheable Methods (RFC 7231)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="6d4faa9c38ae0bea36b2a77a74f1c5565404a706" translate="yes" xml:space="preserve">
          <source>Caching FAQ</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30dddf76b8532fde16158f240307de27191ec53" translate="yes" xml:space="preserve">
          <source>Caching Tutorial &amp;ndash; Mark Nottingham</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0587c95421ffd96422e6ce52f99b0eeb12897612" translate="yes" xml:space="preserve">
          <source>Caching in HTTP (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12274da356087ef702ccbb200cdfa705f2a6cb21" translate="yes" xml:space="preserve">
          <source>Caching is a technique that stores a copy of a given resource and serves it back when requested. When a web cache has a requested resource in its store, it intercepts the request and returns its copy instead of re-downloading from the originating server. This achieves several goals: it eases the load of the server that doesn&amp;rsquo;t need to serve all clients itself, and it improves performance by being closer to the client, i.e., it takes less time to transmit the resource back. For a web site, it is a major component in achieving high performance. On the other side, it has to be configured properly as not all resources stay identical forever: it is important to cache a resource only until it changes, not longer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bd9f8c4cb307c4c859ece3e85c3287fab9c02d" translate="yes" xml:space="preserve">
          <source>Caching is very important for fast Web sites. This article describes different methods of caching and how to use HTTP Headers to control them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948ba29270deb9f483242162487c780bcfdc8dba" translate="yes" xml:space="preserve">
          <source>Caching of unchanged resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23206d16033b30654e4d04b8e38733f9a9b711e1" translate="yes" xml:space="preserve">
          <source>Caching static assets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224012a44d1a3dcbedc904993d8d0726b013bed5" translate="yes" xml:space="preserve">
          <source>Caching-related headers that are sent along with this response should be taken care of, as a 503 status is often a temporary condition and responses shouldn't usually be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72bc7dfdbfb35fbe7d280800db5164dcd1988d57" translate="yes" xml:space="preserve">
          <source>Calculating Secondary Keys with Vary (RFC 7234)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da9c9af9631e294961d5a16fdc681ca3d84f508" translate="yes" xml:space="preserve">
          <source>Camera</source>
          <target state="translated">Camera</target>
        </trans-unit>
        <trans-unit id="1c8974e3fdbd4a7f871b765b73b10e7d5c3e086c" translate="yes" xml:space="preserve">
          <source>Camino on Mac</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f86269acd3e77cefb32ddc78f8c4c6c9bd506e6" translate="yes" xml:space="preserve">
          <source>Can you spot the mistake? Stylesheets are only allowed to be loaded from &lt;code&gt;cdn.example.com&lt;/code&gt;, yet the website tries to load one from its own origin (&lt;code&gt;http://example.com&lt;/code&gt;). A browser capable of enforcing CSP will send the following violation report as a POST request to &lt;code&gt;&lt;a href=&quot;http://example.com/_/csp-reports&quot;&gt;http://example.com/_/csp-reports&lt;/a&gt;&lt;/code&gt;, when the document is visited:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b35fa85102875260c5079cd9bdec0d2fdc2ee7d" translate="yes" xml:space="preserve">
          <source>Can you spot the violation? Stylesheets are only allowed to be loaded from &lt;code&gt;cdn.example.com&lt;/code&gt;, yet the website tries to load one from its own origin (&lt;code&gt;http://example.com&lt;/code&gt;). A browser capable of enforcing CSP will send the following violation report as a POST request to &lt;code&gt;http://example.com/_/csp-reports&lt;/code&gt;, when the document is visited:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19fa848f8d18f6a6f2a50f399649151c43d2ccf" translate="yes" xml:space="preserve">
          <source>Candidate Recommendation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23538d20ac9108dc1735c5b220e319e9fe9ebfa3" translate="yes" xml:space="preserve">
          <source>Cascading Style Sheets (CSS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa1717d0e9589578b46ef62dc5cfe9cd1de83ba5" translate="yes" xml:space="preserve">
          <source>Category Documents contain lists of categories described using the
   &quot;atom:category&quot; element from the Atom Syndication Format [&lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;RFC4287&lt;/a&gt;].
   Categories can also appear in Service Documents, where they indicate
   the categories allowed in a Collection (see &lt;a href=&quot;#section-8.3.6&quot;&gt;Section 8.3.6&lt;/a&gt;).

   Category Documents are identified with the &quot;application/atomcat+xml&quot;
   media type (see &lt;a href=&quot;#section-16.1&quot;&gt;Section 16.1&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98cfdc8dc518c66839eb93c58f7c6441910d5d79" translate="yes" xml:space="preserve">
          <source>Change the default behavior of autoplay on mobile and third party videos.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e97cb80f95cbab0c6a227b198b72f39726ca3006" translate="yes" xml:space="preserve">
          <source>Change the default values or options that control the feature behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="811bf2bd6edd23474dfa0570cd89845010ee8135" translate="yes" xml:space="preserve">
          <source>Character encoding of HTTP authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245374780def29c61ce1165c1fdbe13bc3583f38" translate="yes" xml:space="preserve">
          <source>Check the &lt;a href=&quot;#Browser_compatibility&quot;&gt;Browser compatibility table&lt;/a&gt; carefully before using this in production.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de85527d64c40bc55991f2429578ed63d3ac01ed" translate="yes" xml:space="preserve">
          <source>Checking if a server supports partial requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffef88d017227b1ea1b9169e0335da32c5b6a9dd" translate="yes" xml:space="preserve">
          <source>Choosing between www and non-www URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218e75c7a912404b048fff0747e40108873b6334" translate="yes" xml:space="preserve">
          <source>Chrome</source>
          <target state="translated">Chrome</target>
        </trans-unit>
        <trans-unit id="04c901a0daf91c2a0f3e8fdc0701d52f69dd276c" translate="yes" xml:space="preserve">
          <source>Chrome 59 and higher skips the &lt;a href=&quot;child-src&quot;&gt;&lt;code&gt;child-src&lt;/code&gt;&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8f8ffcc2cbf126c04a5b0120a393e971c34f1c" translate="yes" xml:space="preserve">
          <source>Chrome 59 and higher skips the deprecated &lt;code&gt;child-src&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936b3a2c1e8b0dd5e471f5ddaa07ff52d2e26abf" translate="yes" xml:space="preserve">
          <source>Chrome UA string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d099f88b010d4398cebebe8e633ffe4874c4aa01" translate="yes" xml:space="preserve">
          <source>Chrome for Android</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="019a920351ae1cc253d801e3029fcb49f0363eb6" translate="yes" xml:space="preserve">
          <source>Chrome/xyz</source>
          <target state="translated">Chrome/xyz</target>
        </trans-unit>
        <trans-unit id="530e72f2ef34a9545e0a5330771934b72c420c79" translate="yes" xml:space="preserve">
          <source>Chrome/xyz or Chromium/xyz</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32166e83eed3818d45d2cbecbe2e6cf85528e265" translate="yes" xml:space="preserve">
          <source>Chromium</source>
          <target state="translated">Chromium</target>
        </trans-unit>
        <trans-unit id="a00534e71fb83f1f72f13c598065c49858fefc4a" translate="yes" xml:space="preserve">
          <source>Chromium/xyz</source>
          <target state="translated">Chromium/xyz</target>
        </trans-unit>
        <trans-unit id="f2e3d3255876440830fb74bf171c1d2ece3388ed" translate="yes" xml:space="preserve">
          <source>Chromium: &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=615313&quot;&gt;Issue 615313&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02dae4314d1b02d0bfeeff3a285006bc4766d38a" translate="yes" xml:space="preserve">
          <source>Chunked encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e13d13f96bc6fbff5ad281601f23302761c061e" translate="yes" xml:space="preserve">
          <source>Chunked encoding is useful when larger amounts of data are sent to the client and the total size of the response may not be known until the request has been fully processed. For example, when generating a large HTML table resulting from a database query or when transmitting large images. A chunked response looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8220572e0102502603e5875887b5183212dd190a" translate="yes" xml:space="preserve">
          <source>Chunked responses are now also supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3313f2827a057e3a64943f9f95e2ab49a79565" translate="yes" xml:space="preserve">
          <source>Chunked transfer encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f5fbe3823ae3ee8836aabcd6aedc25a237e372" translate="yes" xml:space="preserve">
          <source>Chunked transfer encoding using a trailing header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b18750fa39107d207083b7b1ced1d41dba0f08b" translate="yes" xml:space="preserve">
          <source>Clear Site Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563a0adf9cc2a772ffc80a2f072b2791b10b2699" translate="yes" xml:space="preserve">
          <source>Clear-Site-Data</source>
          <target state="translated">Clear-Site-Data</target>
        </trans-unit>
        <trans-unit id="47c3b55337992becca7776593cb6ed91ea600664" translate="yes" xml:space="preserve">
          <source>Clearing cookies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7132c182abf9d906ed90a092216ab6aefbc162" translate="yes" xml:space="preserve">
          <source>Clears browsing data (e.g. cookies, storage, cache) associated with the requesting website.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca8349d76abe296a6950f45aded7fe82937ec47" translate="yes" xml:space="preserve">
          <source>ClickJacking Defenses - IEBlog</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d39ef8ff1810b107a1befbb4f275d469a941cd" translate="yes" xml:space="preserve">
          <source>Client                                     Server
     |                                           |
     |  1.) DELETE to Member URI                 |
     |------------------------------------------&amp;gt;|
     |                                           |
     |  2.) 200 OK                               |
     |&amp;lt;------------------------------------------|
     |                                           |

   1.  The client sends a DELETE request to the URI of a Member
       Resource.

   2.  If the deletion is successful, the server responds with a status
       code of 200.

   A different approach is taken for deleting Media Resources; see
   &lt;a href=&quot;#section-9.4&quot;&gt;Section 9.4&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06414e618e271894c3e9df0da8e1288e8b9d978d" translate="yes" xml:space="preserve">
          <source>Client                                     Server
     |                                           |
     |  1.) GET to Member URI                    |
     |------------------------------------------&amp;gt;|
     |                                           |
     |  2.) 200 Ok                               |
     |      Member Representation                |
     |&amp;lt;------------------------------------------|
     |                                           |

   1.  The client sends a GET request to the URI of a Member Resource to
       retrieve its representation.

   2.  The server responds with the representation of the Member
       Resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76876be155df9d3b1979f0004de22edc27efe8b1" translate="yes" xml:space="preserve">
          <source>Client                                     Server
     |                                           |
     |  1.) GET to Service Document URI          |
     |------------------------------------------&amp;gt;|
     |                                           |
     |  2.) 200 Ok                               |
     |      Service Document                     |
     |&amp;lt;------------------------------------------|
     |                                           |

   1.  The client sends a GET request to the URI of the Service
       Document.

   2.  The server responds with a Service Document enumerating the IRIs
       of a group of Collections and the capabilities of those
       Collections supported by the server.  The content of this
       document can vary based on aspects of the client request,
       including, but not limited to, authentication credentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5b247b01ee86613d994ca606b20cb6279035ed" translate="yes" xml:space="preserve">
          <source>Client                                     Server
     |                                           |
     |  1.) POST to Collection URI               |
     |      Member Representation                |
     |------------------------------------------&amp;gt;|
     |                                           |
     |  2.) 201 Created                          |
     |      Location: Member Entry URI           |
     |&amp;lt;------------------------------------------|
     |                                           |

   1.  The client POSTs a representation of the Member to the URI of the
       Collection.

   2.  If the Member Resource was created successfully, the server
       responds with a status code of 201 and a Location header that
       contains the IRI of the newly created Entry Resource.  Media
       Resources could have also been created and their IRIs can be
       found through the Entry Resource.  See &lt;a href=&quot;#section-9.6&quot;&gt;Section 9.6&lt;/a&gt; for more
       details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd91d64f5ba1c2b561dc68aad78122e44b4031ba" translate="yes" xml:space="preserve">
          <source>Client                                     Server
     |                                           |
     |  1.) PUT to Member URI                    |
     |      Member Representation                |
     |------------------------------------------&amp;gt;|
     |                                           |
     |  2.) 200 OK                               |
     |&amp;lt;------------------------------------------|

   1.  The client sends a PUT request to store a representation of a
       Member Resource.

   2.  If the request is successful, the server responds with a status
       code of 200.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab41737272cae6324e9b264638622ce30e7016c" translate="yes" xml:space="preserve">
          <source>Client error responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd407b441928f45e73a186d44c8d9b1022e9b952" translate="yes" xml:space="preserve">
          <source>Client hints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d9a54cc11d8f25e2a07fd30bc5b8caf775ec8d" translate="yes" xml:space="preserve">
          <source>Client request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b2b8d440453db220355b3130f1ed0c4ab07917" translate="yes" xml:space="preserve">
          <source>Client-Side &amp;amp; Server-Side (Java) sample for Cross-Origin Resource Sharing (CORS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5874c4570fe3f1c919c21b9967af34bee3005c" translate="yes" xml:space="preserve">
          <source>Client-initiated upgrade to HTTP over TLS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922d22a1c7654940e60c03245c40184c1e28e1bb" translate="yes" xml:space="preserve">
          <source>Client: the user-agent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28beb9075baceef63887e188043a5dc8f9f8abcf" translate="yes" xml:space="preserve">
          <source>Clients and servers communicate by exchanging individual messages (as opposed to a stream of data). The messages sent by the client, usually a Web browser, are called &lt;em&gt;requests&lt;/em&gt; and the messages sent by the server as an answer are called &lt;em&gt;responses&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a6c74917d2b5e80cb29e5ed1cc31e500515eb2" translate="yes" xml:space="preserve">
          <source>Clients are often privy to large amounts of personal information,
   including both information provided by the user to interact with
   resources (e.g., the user's name, location, mail address, passwords,
   encryption keys, etc.) and information about the user's browsing
   activity over time (e.g., history, bookmarks, etc.).  Implementations
   need to prevent unintentional disclosure of personal information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8385dd1dcb9fe615c68497e7d83ea0f53328707" translate="yes" xml:space="preserve">
          <source>Clients using HTTP rely heavily on the Domain Name Service, and are
   thus generally prone to security attacks based on the deliberate
   mis-association of IP addresses and DNS names. Clients need to be
   cautious in assuming the continuing validity of an IP number/DNS name
   association.

   In particular, HTTP clients SHOULD rely on their name resolver for
   confirmation of an IP number/DNS name association, rather than
   caching the result of previous host name lookups. Many platforms
   already can cache host name lookups locally when appropriate, and
   they SHOULD be configured to do so. It is proper for these lookups to
   be cached, however, only when the TTL (Time To Live) information
   reported by the name server makes it likely that the cached
   information will remain useful.

   If HTTP clients cache the results of host name lookups in order to
   achieve a performance improvement, they MUST observe the TTL
   information reported by DNS.

   If HTTP clients do not observe this rule, they could be spoofed when
   a previously-accessed server's IP address changes. As network
   renumbering is expected to become increasingly common [&lt;a href=&quot;#ref-24&quot;&gt;24&lt;/a&gt;], the
   possibility of this form of attack will grow. Observing this
   requirement thus reduces this potential security vulnerability.

   This requirement also improves the load-balancing behavior of clients
   for replicated servers using the same DNS name and reduces the
   likelihood of a user's experiencing failure in accessing sites which
   use that strategy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939f605954e45144b33768a5bb94ffea000db6cc" translate="yes" xml:space="preserve">
          <source>Close or reuse the connection for further requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adac69379a626c2436948a4ef1792c7d719ef929" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">Code</target>
        </trans-unit>
        <trans-unit id="2a1800f5cb859b9d67e384c7da846507f055a233" translate="yes" xml:space="preserve">
          <source>Code Samples Showing &lt;code&gt;XMLHttpRequest&lt;/code&gt; and Cross-Origin Resource Sharing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d674b2dea57bb6fd7e6a35edd6eb081470fbfe96" translate="yes" xml:space="preserve">
          <source>Collection Resources MUST provide representations in the form of Atom
   Feed Documents whose Entries contain the IRIs of the Members in the
   Collection.  No distinction is made between Collection Feeds and
   other kinds of Feeds -- a Feed might act both as a 'public' feed for
   subscription purposes and as a Collection Feed.

   Each Entry in the Feed Document SHOULD have an atom:link element with
   a relation of &quot;edit&quot; (see &lt;a href=&quot;#section-11.1&quot;&gt;Section 11.1&lt;/a&gt;).

   The Entries in the returned Atom Feed SHOULD be ordered by their
   &quot;app:edited&quot; property, with the most recently edited Entries coming
   first in the document order.  The app:edited value is not equivalent
   to the HTTP Last-Modified header and cannot be used to determine the
   freshness of cached responses.

   Clients MUST NOT assume that an Atom Entry returned in the Feed is a
   full representation of an Entry Resource and SHOULD perform a GET on
   the URI of the Member Entry before editing it.  See &lt;a href=&quot;#section-9.5&quot;&gt;Section 9.5&lt;/a&gt; for a
   discussion on the implications of cache control directives when
   obtaining entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b11e6ff9806f23d877b8f28e66ba1d2666df0aba" translate="yes" xml:space="preserve">
          <source>Collection resources differ from other resources in that they also
   act as containers.  Some HTTP methods apply only to a collection, but
   some apply to some or all of the resources inside the container
   defined by the collection.  When the scope of a method is not clear,
   the client can specify what depth to apply.  Depth can be either zero
   levels (only the collection), one level (the collection and directly
   contained resources), or infinite levels (the collection and all
   contained resources recursively).

   A collection's state consists of at least a set of mappings between
   path segments and resources, and a set of properties on the
   collection itself.  In this document, a resource B will be said to be
   contained in the collection resource A if there is a path segment
   mapping that maps to B and that is contained in A.  A collection MUST
   contain at most one mapping for a given path segment, i.e., it is
   illegal to have the same path segment mapped to more than one
   resource. 

   Properties defined on collections behave exactly as do properties on
   non-collection resources.  A collection MAY have additional state
   such as entity bodies returned by GET.

   For all WebDAV-compliant resources A and B, identified by URLs &quot;U&quot;
   and &quot;V&quot;, respectively, such that &quot;V&quot; is equal to &quot;U/SEGMENT&quot;, A MUST
   be a collection that contains a mapping from &quot;SEGMENT&quot; to B.  So, if
   resource B with URL &quot;http://example.com/bar/blah&quot; is WebDAV compliant
   and if resource A with URL &quot;http://example.com/bar/&quot; is WebDAV
   compliant, then resource A must be a collection and must contain
   exactly one mapping from &quot;blah&quot; to B.

   Although commonly a mapping consists of a single segment and a
   resource, in general, a mapping consists of a set of segments and a
   resource.  This allows a server to treat a set of segments as
   equivalent (i.e., either all of the segments are mapped to the same
   resource, or none of the segments are mapped to a resource).  For
   example, a server that performs case-folding on segments will treat
   the segments &quot;ab&quot;, &quot;Ab&quot;, &quot;aB&quot;, and &quot;AB&quot; as equivalent.  A client can
   then use any of these segments to identify the resource.  Note that a
   PROPFIND result will select one of these equivalent segments to
   identify the mapping, so there will be one PROPFIND response element
   per mapping, not one per segment in the mapping.

   Collection resources MAY have mappings to non-WebDAV-compliant
   resources in the HTTP URL namespace hierarchy but are not required to
   do so.  For example, if resource X with URL
   &quot;http://example.com/bar/blah&quot; is not WebDAV compliant and resource A
   with &quot;URL http://example.com/bar/&quot; identifies a WebDAV collection,
   then A may or may not have a mapping from &quot;blah&quot; to X.

   If a WebDAV-compliant resource has no WebDAV-compliant internal
   members in the HTTP URL namespace hierarchy, then the WebDAV-
   compliant resource is not required to be a collection.

   There is a standing convention that when a collection is referred to
   by its name without a trailing slash, the server MAY handle the
   request as if the trailing slash were present.  In this case, it
   SHOULD return a Content-Location header in the response, pointing to
   the URL ending with the &quot;/&quot;.  For example, if a client invokes a
   method on http://example.com/blah (no trailing slash), the server may
   respond as if the operation were invoked on http://example.com/blah/
   (trailing slash), and should return a Content-Location header with
   the value http://example.com/blah/.  Wherever a server produces a URL
   referring to a collection, the server SHOULD include the trailing
   slash.  In general, clients SHOULD use the trailing slash form of
   collection names.  If clients do not use the trailing slash form the
   client needs to be prepared to see a redirect response.  Clients will 

   find the DAV:resourcetype property more reliable than the URL to find
   out if a resource is a collection.

   Clients MUST be able to support the case where WebDAV resources are
   contained inside non-WebDAV resources.  For example, if an OPTIONS
   response from &quot;http://example.com/servlet/dav/collection&quot; indicates
   WebDAV support, the client cannot assume that
   &quot;http://example.com/servlet/dav/&quot; or its parent necessarily are
   WebDAV collections.

   A typical scenario in which mapped URLs do not appear as members of
   their parent collection is the case where a server allows links or
   redirects to non-WebDAV resources.  For instance, &quot;/col/link&quot; might
   not appear as a member of &quot;/col/&quot;, although the server would respond
   with a 302 status to a GET request to &quot;/col/link&quot;; thus, the URL
   &quot;/col/link&quot; would indeed be mapped.  Similarly, a dynamically-
   generated page might have a URL mapping from &quot;/col/index.html&quot;, thus
   this resource might respond with a 200 OK to a GET request yet not
   appear as a member of &quot;/col/&quot;.

   Some mappings to even WebDAV-compliant resources might not appear in
   the parent collection.  An example for this case are servers that
   support multiple alias URLs for each WebDAV-compliant resource.  A
   server may implement case-insensitive URLs, thus &quot;/col/a&quot; and
   &quot;/col/A&quot; identify the same resource, yet only either &quot;a&quot; or &quot;A&quot; is
   reported upon listing the members of &quot;/col&quot;.  In cases where a server
   treats a set of segments as equivalent, the server MUST expose only
   one preferred segment per mapping, consistently chosen, in PROPFIND
   responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c14ed70a70a4eecdf0beb11029acb63043ecd0" translate="yes" xml:space="preserve">
          <source>Collections and Namespace Operations

   o  Due to interoperability problems, allowable formats for contents
      of 'href' elements in multistatus responses have been limited (see
      &lt;a href=&quot;#section-8.3&quot;&gt;Section 8.3&lt;/a&gt;).

   o  Due to lack of implementation, support for the 'propertybehavior'
      request body for COPY and MOVE has been removed.  Instead,
      requirements for property preservation have been clarified (see
      Sections &lt;a href=&quot;#section-9.8&quot;&gt;9.8&lt;/a&gt; and &lt;a href=&quot;#section-9.9&quot;&gt;9.9&lt;/a&gt;).

   Properties

   o  Strengthened server requirements for storage of property values,
      in particular persistence of language information (xml:lang),
      whitespace, and XML namespace information (see &lt;a href=&quot;#section-4.3&quot;&gt;Section 4.3&lt;/a&gt;).

   o  Clarified requirements on which properties should be writable by
      the client; in particular, setting &quot;DAV:displayname&quot; should be
      supported by servers (see &lt;a href=&quot;#section-15&quot;&gt;Section 15&lt;/a&gt;).

   o  Only '&lt;a href=&quot;https://tools.ietf.org/html/rfc1123&quot;&gt;rfc1123&lt;/a&gt;-date' productions are legal as values for DAV:
      getlastmodified (see &lt;a href=&quot;#section-15.7&quot;&gt;Section 15.7&lt;/a&gt;).

   Headers and Marshalling

   o  Servers are now required to do authorization checks before
      processing conditional headers (see &lt;a href=&quot;#section-8.5&quot;&gt;Section 8.5&lt;/a&gt;).

   Locking

   o  Strengthened requirement to check identity of lock creator when
      accessing locked resources (see &lt;a href=&quot;#section-6.4&quot;&gt;Section 6.4&lt;/a&gt;).  Clients should be
      aware that lock tokens returned to other principals can only be
      used to break a lock, if at all. 

   o  &lt;a href=&quot;https://tools.ietf.org/html/rfc2518#section-8.10.4&quot;&gt;Section&amp;nbsp;8.10.4 of [RFC2518]&lt;/a&gt; incorrectly required servers to return
      a 409 status where a 207 status was really appropriate.  This has
      been corrected (&lt;a href=&quot;#section-9.10&quot;&gt;Section 9.10&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd2e08606ba977053d3bef5451af9337fdfae03" translate="yes" xml:space="preserve">
          <source>Collections and Namespace Operations

   o  The semantics of PROPFIND 'allprop' (&lt;a href=&quot;#section-9.1&quot;&gt;Section 9.1&lt;/a&gt;) have been
      relaxed so that servers return results including, at a minimum,
      the live properties defined in this specification, but not
      necessarily return other live properties.  The 'allprop' directive
      therefore means something more like &quot;return all properties that
      are supposed to be returned when 'allprop' is requested&quot; -- a set
      of properties that may include custom properties and properties
      defined in other specifications if those other specifications so
      require.  Related to this, 'allprop' requests can now be extended
      with the 'include' syntax to include specific named properties, 

      thereby avoiding additional requests due to changed 'allprop'
      semantics.

   o  Servers are now allowed to reject PROPFIND requests with Depth:
      Infinity.  Clients that used this will need to be able to do a
      series of Depth:1 requests instead.

   o  Multi-Status response bodies now can transport the value of HTTP's
      Location response header in the new 'location' element.  Clients
      may use this to avoid additional roundtrips to the server when
      there is a 'response' element with a 3xx status (see
      &lt;a href=&quot;#section-14.24&quot;&gt;Section 14.24&lt;/a&gt;).

   o  The definition of COPY has been relaxed so that it doesn't require
      servers to first delete the target resources anymore (this was a
      known incompatibility with [&lt;a href=&quot;https://tools.ietf.org/html/rfc3253&quot;&gt;RFC3253&lt;/a&gt;]).  See &lt;a href=&quot;#section-9.8&quot;&gt;Section 9.8&lt;/a&gt;.

   Headers and Marshalling

   o  The Destination and If request headers now allow absolute paths in
      addition to full URIs (see &lt;a href=&quot;#section-8.3&quot;&gt;Section 8.3&lt;/a&gt;).  This may be useful for
      clients operating through a reverse proxy that does rewrite the
      Host request header, but not WebDAV-specific headers.

   o  This specification adopts the error marshalling extensions and the
      &quot;precondition/postcondition&quot; terminology defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc3253&quot;&gt;RFC3253&lt;/a&gt;] (see
      &lt;a href=&quot;#section-16&quot;&gt;Section 16&lt;/a&gt;).  Related to that, it adds the &quot;error&quot; XML element
      inside multistatus response bodies (see &lt;a href=&quot;#section-14.5&quot;&gt;Section 14.5&lt;/a&gt;, however note
      that it uses a format different from the one recommended in &lt;a href=&quot;https://tools.ietf.org/html/rfc3253&quot;&gt;RFC&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc3253&quot;&gt;3253&lt;/a&gt;).

   o  Senders and recipients are now required to support the UTF-16
      character encoding in XML message bodies (see &lt;a href=&quot;#section-19&quot;&gt;Section 19&lt;/a&gt;).

   o  Clients are now required to send the Depth header on PROPFIND
      requests, although servers are still encouraged to support clients
      that don't.

   Locking

   o  &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt;'s concept of &quot;lock-null resources&quot; (LNRs) has been
      replaced by a simplified approach, the &quot;locked empty resources&quot;
      (see &lt;a href=&quot;#section-7.3&quot;&gt;Section 7.3&lt;/a&gt;).  There are some aspects of lock-null resources
      clients cannot rely on anymore, namely, the ability to use them to
      create a locked collection or the fact that they disappear upon
      UNLOCK when no PUT or MKCOL request was issued.  Note that servers
      are still allowed to implement LNRs as per &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt;. 

   o  There is no implicit refresh of locks anymore.  Locks are only
      refreshed upon explicit request (see &lt;a href=&quot;#section-9.10.2&quot;&gt;Section 9.10.2&lt;/a&gt;).

   o  Clarified that the DAV:owner value supplied in the LOCK request
      must be preserved by the server just like a dead property
      (&lt;a href=&quot;#section-14.17&quot;&gt;Section 14.17&lt;/a&gt;).  Also added the DAV:lockroot element
      (&lt;a href=&quot;#section-14.12&quot;&gt;Section 14.12&lt;/a&gt;), which allows clients to discover the root of
      lock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7b149981164a5bdbbf89dc8821115528f3f53c" translate="yes" xml:space="preserve">
          <source>Collections can contain large numbers of Resources.  A client such as
   a web spider or web browser might be overwhelmed if the response to a
   GET contained every Entry in a Collection -- in turn the server might
   also waste bandwidth and processing time on generating a response
   that cannot be handled.  For this reason, servers MAY respond to
   Collection GET requests with a Feed Document containing a partial
   list of the Collection's members, and a link to the next partial list
   feed, if it exists.  The first such partial list returned MUST
   contain the most recently edited member Resources and MUST have an
   atom:link with a &quot;next&quot; relation whose &quot;href&quot; value is the URI of the
   next partial list of the Collection.  This next partial list will
   contain the next most recently edited set of Member Resources (and an
   atom:link to the following partial list if it exists).

   In addition to the &quot;next&quot; relation, partial list feeds MAY contain
   link elements with &quot;rel&quot; attribute values of &quot;previous&quot;, &quot;first&quot;, and
   &quot;last&quot;, that can be used to navigate through the complete set of
   entries in the Collection.

   For instance, suppose a client is supplied the URI
   &quot;http://example.org/entries/go&quot; of a Collection of Member Entries,
   where the server as a matter of policy avoids generating Feed
   Documents containing more than 10 Entries.  The Atom Feed Document 

   for the Collection will then represent the first partial list of a
   set of 10 linked Feed Documents.  The &quot;first&quot; relation references the
   initial Feed Document in the set and the &quot;last&quot; relation references
   the final Feed Document in the set.  Within each document, the
   &quot;previous&quot; and &quot;next&quot; link relations reference the preceding and
   subsequent documents.

     &amp;lt;feed xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
       &amp;lt;link rel=&quot;first&quot;
             href=&quot;http://example.org/entries/go&quot; /&amp;gt;
       &amp;lt;link rel=&quot;next&quot;
             href=&quot;http://example.org/entries/2&quot; /&amp;gt;
       &amp;lt;link rel=&quot;last&quot;
             href=&quot;http://example.org/entries/10&quot; /&amp;gt;
       
     &amp;lt;/feed&amp;gt;

   The &quot;previous&quot; and &quot;next&quot; link elements for the partial list feed
   located at &quot;http://example.org/entries/2&quot; would look like this:

     &amp;lt;feed xmlns=&quot;http://www.w3.org/2005/Atom&quot;&amp;gt;
       &amp;lt;link rel=&quot;first&quot;
             href=&quot;http://example.org/entries/go&quot; /&amp;gt;
       &amp;lt;link rel=&quot;previous&quot;
             href=&quot;http://example.org/entries/go&quot; /&amp;gt;
       &amp;lt;link rel=&quot;next&quot;
             href=&quot;http://example.org/entries/3&quot; /&amp;gt;
       &amp;lt;link rel=&quot;last&quot;
             href=&quot;http://example.org/entries/10&quot; /&amp;gt;
       
     &amp;lt;/feed&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b77d56fd18f49783fa29dab7e6057a1e912b7b" translate="yes" xml:space="preserve">
          <source>Combating ClickJacking with X-Frame-Options - IEInternals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4da2aaa941fd10619ebba8b1a33ab3b456b5cf" translate="yes" xml:space="preserve">
          <source>Combining Ranges (RFC 7233)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9439543fdbba1e16aeffe917fc7d29f50cbcc79" translate="yes" xml:space="preserve">
          <source>Comma-delimited list of the allowed &lt;a href=&quot;../methods&quot;&gt;HTTP request methods&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb95ba15fb836d98586a3edad9ec1fd27077fa7" translate="yes" xml:space="preserve">
          <source>Comma-separated values (CSV)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68546dfaabacefbed271a8286b33a08186cc138e" translate="yes" xml:space="preserve">
          <source>Command line: &lt;code&gt;pactester -p ~/pacparser-master/tests/proxy.pac -u http://www.mozilla.org&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153d7a58b3a3e898fcbdd04c462af308414bd09d" translate="yes" xml:space="preserve">
          <source>Comment</source>
          <target state="translated">Comment</target>
        </trans-unit>
        <trans-unit id="4861e90f90a057c5903a2cf3d60626141d9b6010" translate="yes" xml:space="preserve">
          <source>Comments to &lt;a href=&quot;news://news.mozilla.org/netscape.public.mozilla.netlib&quot;&gt;mozilla.dev.platform&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355f9fe714bdefce689d0719b3940842115ebbd1" translate="yes" xml:space="preserve">
          <source>Common browsers User Agent strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c3c55fe8f9dff2940ed7383aee89cb47a05822" translate="yes" xml:space="preserve">
          <source>Common causes are a server that is down for maintenance or that is overloaded. This response should be used for temporary conditions and the &lt;a href=&quot;../headers/retry-after&quot;&gt;&lt;code&gt;Retry-After&lt;/code&gt;&lt;/a&gt; HTTP header should, if possible, contain the estimated time for the recovery of the service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d604abe4effd051b577737efcac0be5dd312de" translate="yes" xml:space="preserve">
          <source>Common problems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69ef1fa14a563c69b2071931128d46e80d8fcab" translate="yes" xml:space="preserve">
          <source>Common uses for this mechanism</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e3c123b281c1fc386d6962bf0c8c55f62330c3" translate="yes" xml:space="preserve">
          <source>Communicates one or more metrics and descriptions for the given request-response cycle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36eba05ecfef326403242e9b2557dc4cf61823c3" translate="yes" xml:space="preserve">
          <source>Communicating Presentation Information in Internet Messages: The Content-Disposition Header Field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4f07ea51666d42daa68586d151fd1eee7f250c" translate="yes" xml:space="preserve">
          <source>Comparing versions of the same resource is a bit tricky: depending on the context, there are two kinds of &lt;em&gt;equality checks&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187c3be8f0ded5cfb27cd980759930707dd51a48" translate="yes" xml:space="preserve">
          <source>Comparison to chunked &lt;code&gt;Transfer-Encoding&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb53559d09ec4706b50627aafe05c3f74ccaf5c" translate="yes" xml:space="preserve">
          <source>Compatibility Notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d648a6dff363974f754bb78876c2b10dadd8183" translate="yes" xml:space="preserve">
          <source>Compatibility notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079f93e4945f9092390a018ed062372bdcfd86bd" translate="yes" xml:space="preserve">
          <source>Complete list of MIME types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9facd0c43149e93efff61f4e5ddc45591658e4" translate="yes" xml:space="preserve">
          <source>Components of HTTP-based systems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c91e1eed116d8885305f2a420a8509e0cc75cc" translate="yes" xml:space="preserve">
          <source>Comprehensive list of MIME types useful for Web developers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99b96873911e57f5de9103e887195406f68cd32" translate="yes" xml:space="preserve">
          <source>Compressing HTTP messages is one of the most important ways to improve the performance of a Web site, it shrinks the size of the data transmitted and makes better use of the available bandwidth; browsers always send this header and the server should be configured to abide to it and to use compression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b19ee5750a4f428fdbb3471286458f10f3749ac9" translate="yes" xml:space="preserve">
          <source>Compressing with gzip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ead4045fbadbc2f0b37b6046e5803972459710" translate="yes" xml:space="preserve">
          <source>Compression</source>
          <target state="translated">Compression</target>
        </trans-unit>
        <trans-unit id="26b0ce5a72c7b5ba41f70c30e64c6c6b62713bf9" translate="yes" xml:space="preserve">
          <source>Compression: compress and optimize content to speed up load time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa306b4fc5fbd90b0a114f6bd08ca2cc8754f57" translate="yes" xml:space="preserve">
          <source>Concatenates the four dot-separated bytes into one 4-byte word and converts it to decimal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c1cd3785db2824d1ab278c24866501932dedaf" translate="yes" xml:space="preserve">
          <source>Concepts and usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39262defe80a83fac1b793497417432c8b1a879" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
          <target state="translated">Conclusion</target>
        </trans-unit>
        <trans-unit id="9a261b82a98b8bdc6d75dae90ec8ee01b54eeff4" translate="yes" xml:space="preserve">
          <source>Conditional headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bcd73be2170abf93875e1fa36640534488be6c5" translate="yes" xml:space="preserve">
          <source>Conditional range requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f3486df02697cc767cdf9f317b7c01b4f54138" translate="yes" xml:space="preserve">
          <source>Conditional requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96d7430d9350e321fe2f05974da38d1376f5101" translate="yes" xml:space="preserve">
          <source>Conditional requests allow implementing the &lt;em&gt;optimistic locking algorithm&lt;/em&gt; (used by most wikis or source control systems). The concept is to allow all clients to get copies of the resource, then let them modify it locally, controlling concurrency by successfully allowing the first client submitting an update. All subsequent updates, based on the now obsolete version of the resource, are rejected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb657402b08e081af170034d16476c261b3e0bd6" translate="yes" xml:space="preserve">
          <source>Conditional requests are HTTP requests [&lt;a href=&quot;https://tools.ietf.org/html/rfc7231&quot;&gt;RFC7231&lt;/a&gt;] that include one or
   more header fields indicating a precondition to be tested before
   applying the method semantics to the target resource.  This document
   defines the HTTP/1.1 conditional request mechanisms in terms of the
   architecture, syntax notation, and conformance criteria defined in
   [&lt;a href=&quot;https://tools.ietf.org/html/rfc7230&quot;&gt;RFC7230&lt;/a&gt;].

   Conditional GET requests are the most efficient mechanism for HTTP
   cache updates [&lt;a href=&quot;https://tools.ietf.org/html/rfc7234&quot;&gt;RFC7234&lt;/a&gt;].  Conditionals can also be applied to
   state-changing methods, such as PUT and DELETE, to prevent the &quot;lost
   update&quot; problem: one client accidentally overwriting the work of
   another client that has been acting in parallel.

   Conditional request preconditions are based on the state of the
   target resource as a whole (its current value set) or the state as
   observed in a previously obtained representation (one value in that
   set).  A resource might have multiple current representations, each
   with its own observable state.  The conditional request mechanisms
   assume that the mapping of requests to a &quot;selected representation&quot;
   (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-3&quot;&gt;Section&amp;nbsp;3 of [RFC7231]&lt;/a&gt;) will be consistent over time if the server
   intends to take advantage of conditionals.  Regardless, if the
   mapping is inconsistent and the server is unable to select the
   appropriate representation, then no harm will result when the
   precondition evaluates to false.

   The conditional request preconditions defined by this specification
   (&lt;a href=&quot;#section-3&quot;&gt;Section 3&lt;/a&gt;) are evaluated when applicable to the recipient
   (&lt;a href=&quot;#section-5&quot;&gt;Section 5&lt;/a&gt;) according to their order of precedence (&lt;a href=&quot;#section-6&quot;&gt;Section 6&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c4083d3ac1096a523190657f90870d3b790d6a" translate="yes" xml:space="preserve">
          <source>Conditional requests are a key feature of HTTP, and allow the building of efficient and complex applications. For caching or resuming downloads, the only work required for webmasters is to configure the server correctly; setting correct etags in some environments can be tricky. Once achieved, the browser will serve the expected conditional requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a56385d0729f6ff4bf27671cc845cb6f2cfde5" translate="yes" xml:space="preserve">
          <source>Conditionals</source>
          <target state="translated">Conditionals</target>
        </trans-unit>
        <trans-unit id="168256d8522ab8aa1e488cbca9a371a273b318a6" translate="yes" xml:space="preserve">
          <source>Confidential or sensitive information should never be stored or transmitted in HTTP Cookies, as the entire mechanism is inherently insecure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f09b9822b4fcc7ee7448f402f4626bb6d634c3" translate="yes" xml:space="preserve">
          <source>Configuring Apache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa009cf30d646a189a2b32b2e2f211086ce4d68" translate="yes" xml:space="preserve">
          <source>Configuring Content Security Policy involves adding the &lt;a href=&quot;headers/content-security-policy&quot;&gt;&lt;code&gt;Content-Security-Policy&lt;/code&gt;&lt;/a&gt; HTTP header to a web page and giving it values to control resources the user agent is allowed to load for that page. For example, a page that uploads and displays images could allow images from anywhere, but restrict a form action to a specific endpoint. A properly designed Content Security Policy helps protect a page against a cross site scripting attack. This article explains how to construct such headers properly, and provides examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f39d4583059888ab118eae8d20c986e51f1274e" translate="yes" xml:space="preserve">
          <source>Configuring HAProxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70d5fc578cb203b115c05b384a205e2f62a043b" translate="yes" xml:space="preserve">
          <source>Configuring IIS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2031ab4ee84e7e349fa32c5b2095aa6cafb6bd65" translate="yes" xml:space="preserve">
          <source>Configuring nginx</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532521e6c325d8d9c38dfb2c90ab768c58d19d39" translate="yes" xml:space="preserve">
          <source>Configuring prefetching in the browser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe2338ad9f0d231c9e7e937eb36ba083fe3da49" translate="yes" xml:space="preserve">
          <source>Configuring redirects in common servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82949d3ffebaebf9aadf54999c74e7c2fdc71165" translate="yes" xml:space="preserve">
          <source>Conflicts are most likely to occur in response to a &lt;a href=&quot;../methods/put&quot;&gt;&lt;code&gt;PUT&lt;/code&gt;&lt;/a&gt; request. For example, you may get a 409 response when uploading a file which is older than the one already on the server resulting in a version control conflict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6512ee1541e9a6c52d5bf7cf465332e8df25ea3c" translate="yes" xml:space="preserve">
          <source>Connection</source>
          <target state="translated">Connection</target>
        </trans-unit>
        <trans-unit id="32e5f579d6704066fd06ba7fbc38b931e1dbb869" translate="yes" xml:space="preserve">
          <source>Connection (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3fc181701dc7eaafa3f89e076f2b6541c863f2" translate="yes" xml:space="preserve">
          <source>Connection Management (RFC 7230)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f35038b27fc876a57591119e37327c7b80eb76" translate="yes" xml:space="preserve">
          <source>Connection management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e280c573f66ef8d6ccfd66829478dd956d810c" translate="yes" xml:space="preserve">
          <source>Connection management in HTTP 1.x</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990f921e1f05ae3668d86bed8ec78ce685923ba2" translate="yes" xml:space="preserve">
          <source>Connection management in HTTP/1.x</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26cd7de0355631b3af679ee8c4f387ae6c0345d" translate="yes" xml:space="preserve">
          <source>Connection management in HTTP/2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eefea8ffbb95e9e96d5a01166af470e8ec510898" translate="yes" xml:space="preserve">
          <source>Connection management is a key topic in HTTP: opening and maintaining connections largely impacts the performance of Web sites and Web applications. In HTTP/1.x, there are several models: &lt;em&gt;short-lived connections&lt;/em&gt;, &lt;em&gt;persistent connections&lt;/em&gt;, and &lt;em&gt;HTTP pipelining. &lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a58d7aa5a546a742dab251e82c3cdd41f9f9f74" translate="yes" xml:space="preserve">
          <source>Connection-specific header fields such as &lt;code&gt;Connection&lt;/code&gt; must not be used with HTTP/2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b3d90f6ebaf8967f6fdf65affbfced1f355cf1" translate="yes" xml:space="preserve">
          <source>Connections (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f1b9f6cf26210329e4ae7de5efdbca18c92386" translate="yes" xml:space="preserve">
          <source>Connections can be closed at any time, with or without intention.
   Implementations ought to anticipate the need to recover from
   asynchronous close events. 

   When an inbound connection is closed prematurely, a client MAY open a
   new connection and automatically retransmit an aborted sequence of
   requests if all of those requests have idempotent methods (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.2&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.2&quot;&gt;4.2.2 of [RFC7231]&lt;/a&gt;).  A proxy MUST NOT automatically retry
   non-idempotent requests.

   A user agent MUST NOT automatically retry a request with a non-
   idempotent method unless it has some means to know that the request
   semantics are actually idempotent, regardless of the method, or some
   means to detect that the original request was never applied.  For
   example, a user agent that knows (through design or configuration)
   that a POST request to a given resource is safe can repeat that
   request automatically.  Likewise, a user agent designed specifically
   to operate on a version control repository might be able to recover
   from partial failure conditions by checking the target resource
   revision(s) after a failed connection, reverting or fixing any
   changes that were partially applied, and then automatically retrying
   the requests that failed.

   A client SHOULD NOT automatically retry a failed automatic retry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd0d4a07d58840f12a945e2fbf5da173a233595" translate="yes" xml:space="preserve">
          <source>Connections should be made directly, without any proxies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2d5c68194fbc69ab147c44c40d78e1dcf5fbc9" translate="yes" xml:space="preserve">
          <source>Consider a collection &quot;/locked&quot; with an exclusive, depth-infinity
   write lock, and an attempt to delete an internal member &quot;/locked/
   member&quot;:

   &amp;gt;&amp;gt;Request

     DELETE /locked/member HTTP/1.1
     Host: example.com

   &amp;gt;&amp;gt;Response

     HTTP/1.1 423 Locked
     Content-Type: application/xml; charset=&quot;utf-8&quot;
     Content-Length: xxxx

     &amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&amp;gt;
     &amp;lt;D:error xmlns:D=&quot;DAV:&quot;&amp;gt;
       &amp;lt;D:lock-token-submitted&amp;gt;
         &amp;lt;D:href&amp;gt;/locked/&amp;lt;/D:href&amp;gt;
       &amp;lt;/D:lock-token-submitted&amp;gt;
     &amp;lt;/D:error&amp;gt;

   Thus, the client would need to submit the lock token with the request
   to make it succeed.  To do that, various forms of the If header (see
   &lt;a href=&quot;#section-10.4&quot;&gt;Section 10.4&lt;/a&gt;) could be used.

   &quot;No-Tag-List&quot; format:

     If: (&amp;lt;urn:uuid:150852e2-3847-42d5-8cbe-0f4f296f26cf&amp;gt;)

   &quot;Tagged-List&quot; format, for &quot;http://example.com/locked/&quot;:

     If: &amp;lt;http://example.com/locked/&amp;gt;
         (&amp;lt;urn:uuid:150852e2-3847-42d5-8cbe-0f4f296f26cf&amp;gt;)

   &quot;Tagged-List&quot; format, for &quot;http://example.com/locked/member&quot;:

     If: &amp;lt;http://example.com/locked/member&amp;gt;
         (&amp;lt;urn:uuid:150852e2-3847-42d5-8cbe-0f4f296f26cf&amp;gt;)

   Note that, for the purpose of submitting the lock token, the actual
   form doesn't matter; what's relevant is that the lock token appears
   in the If header, and that the If header itself evaluates to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f85970b05a5509092afce550578f210339e815" translate="yes" xml:space="preserve">
          <source>Consider a collection &quot;/specs&quot; that does not contain the member
   &quot;/specs/rfc2518.doc&quot;.  In this case, the If header

     If: &amp;lt;/specs/rfc2518.doc&amp;gt; ([&quot;4217&quot;]) 

   will evaluate to false (the URI isn't mapped, thus the resource
   identified by the URI doesn't have an entity matching the ETag
   &quot;4217&quot;).

   On the other hand, an If header of

     If: &amp;lt;/specs/rfc2518.doc&amp;gt; (Not [&quot;4217&quot;])

   will consequently evaluate to true.

   Note that, as defined above in &lt;a href=&quot;#section-10.4.4&quot;&gt;Section 10.4.4&lt;/a&gt;, the same
   considerations apply to matching state tokens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23582c32438d3d52d4683ca327de9b64f0a5219" translate="yes" xml:space="preserve">
          <source>Consider a dead property 'author' created by the client as follows:

     &amp;lt;D:prop xml:lang=&quot;en&quot; xmlns:D=&quot;DAV:&quot;&amp;gt;
       &amp;lt;x:author xmlns:x='http://example.com/ns'&amp;gt;
         &amp;lt;x:name&amp;gt;Jane Doe&amp;lt;/x:name&amp;gt;
         &amp;lt;!-- Jane's contact info --&amp;gt;
         &amp;lt;x:uri type='email'
                added='2005-11-26'&amp;gt;mailto:jane.doe@example.com&amp;lt;/x:uri&amp;gt;
         &amp;lt;x:uri type='web'
                added='2005-11-27'&amp;gt;http://www.example.com&amp;lt;/x:uri&amp;gt;
         &amp;lt;x:notes xmlns:h='http://www.w3.org/1999/xhtml'&amp;gt;
           Jane has been working way &amp;lt;h:em&amp;gt;too&amp;lt;/h:em&amp;gt; long on the
           long-awaited revision of &amp;lt;![CDATA[&amp;lt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC2518&lt;/a&gt;&amp;gt;]]&amp;gt;.
         &amp;lt;/x:notes&amp;gt;
       &amp;lt;/x:author&amp;gt;
     &amp;lt;/D:prop&amp;gt; 

   When this property is requested, a server might return:

     &amp;lt;D:prop xmlns:D='DAV:'&amp;gt;&amp;lt;author
             xml:lang='en'
             xmlns:x='http://example.com/ns'
             xmlns='http://example.com/ns'
             xmlns:h='http://www.w3.org/1999/xhtml'&amp;gt;
         &amp;lt;x:name&amp;gt;Jane Doe&amp;lt;/x:name&amp;gt;
         &amp;lt;x:uri   added=&quot;2005-11-26&quot; type=&quot;email&quot;
           &amp;gt;mailto:jane.doe@example.com&amp;lt;/x:uri&amp;gt;
         &amp;lt;x:uri   added=&quot;2005-11-27&quot; type=&quot;web&quot;
           &amp;gt;http://www.example.com&amp;lt;/x:uri&amp;gt;
         &amp;lt;x:notes&amp;gt;
           Jane has been working way &amp;lt;h:em&amp;gt;too&amp;lt;/h:em&amp;gt; long on the
           long-awaited revision of &amp;amp;lt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC2518&lt;/a&gt;&amp;amp;gt;.
         &amp;lt;/x:notes&amp;gt;
       &amp;lt;/author&amp;gt;
     &amp;lt;/D:prop&amp;gt;

   Note in this example:

   o  The [&lt;a href=&quot;#ref-prefix&quot;&gt;prefix&lt;/a&gt;] for the property name itself was not preserved, being
      non-significant, whereas all other [&lt;a href=&quot;#ref-prefix&quot;&gt;prefix&lt;/a&gt;] values have been
      preserved,

   o  attribute values have been rewritten with double quotes instead of
      single quotes (quoting style is not significant), and attribute
      order has not been preserved,

   o  the xml:lang attribute has been returned on the property name
      element itself (it was in scope when the property was set, but the
      exact position in the response is not considered significant as
      long as it is in scope),

   o  whitespace between tags has been preserved everywhere (whitespace
      between attributes not so),

   o  CDATA encapsulation was replaced with character escaping (the
      reverse would also be legal),

   o  the comment item was stripped (as would have been a processing
      instruction item).

   Implementation note: there are cases such as editing scenarios where
   clients may require that XML content is preserved character by
   character (such as attribute ordering or quoting style).  In this
   case, clients should consider using a text-only property value by
   escaping all characters that have a special meaning in XML parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c337f19c7a431435fa528ee91669cbeb85a727" translate="yes" xml:space="preserve">
          <source>Consider a resource that is subject to content negotiation (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-3.4&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-3.4&quot;&gt;3.4 of [RFC7231]&lt;/a&gt;), and where the representations sent in response to
   a GET request vary based on the Accept-Encoding request header field
   (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-5.3.4&quot;&gt;Section&amp;nbsp;5.3.4 of [RFC7231]&lt;/a&gt;):

   &amp;gt;&amp;gt; Request:

     GET /index HTTP/1.1
     Host: www.example.com
     Accept-Encoding: gzip


   In this case, the response might or might not use the gzip content
   coding.  If it does not, the response might look like:

   &amp;gt;&amp;gt; Response:

     HTTP/1.1 200 OK
     Date: Fri, 26 Mar 2010 00:05:00 GMT
     ETag: &quot;123-a&quot;
     Content-Length: 70
     Vary: Accept-Encoding
     Content-Type: text/plain

     Hello World!
     Hello World!
     Hello World!
     Hello World!
     Hello World! 

   An alternative representation that does use gzip content coding would
   be:

   &amp;gt;&amp;gt; Response:

     HTTP/1.1 200 OK
     Date: Fri, 26 Mar 2010 00:05:00 GMT
     ETag: &quot;123-b&quot;
     Content-Length: 43
     Vary: Accept-Encoding
     Content-Type: text/plain
     Content-Encoding: gzip

     ...binary data

      Note: Content codings are a property of the representation data,
      so a strong entity-tag for a content-encoded representation has to
      be distinct from the entity tag of an unencoded representation to
      prevent potential conflicts during cache updates and range
      requests.  In contrast, transfer codings (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-4&quot;&gt;Section&amp;nbsp;4 of [RFC7230]&lt;/a&gt;)
      apply only during message transfer and do not result in distinct
      entity-tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e43a23782a33a985e1bc3186720dae5d4153667" translate="yes" xml:space="preserve">
          <source>Consider the collection http://example.com/sample/ with the internal
   member URL http://example.com/sample/a%20test and the PROPFIND
   request below:

   &amp;gt;&amp;gt;Request:

     PROPFIND /sample/ HTTP/1.1
     Host: example.com
     Depth: 1 

   In this case, the server should return two 'href' elements containing
   either

   o  'http://example.com/sample/' and
      'http://example.com/sample/a%20test', or

   o  '/sample/' and '/sample/a%20test'

   Note that even though the server may be storing the member resource
   internally as 'a test', it has to be percent-encoded when used inside
   a URI reference (see &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-2.1&quot;&gt;Section&amp;nbsp;2.1 of [RFC3986]&lt;/a&gt;).  Also note that a
   legal URI may still contain characters that need to be escaped within
   XML character data, such as the ampersand character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae234f9da44bbb747d248a8b0463849803c2ef9" translate="yes" xml:space="preserve">
          <source>Considerations before using browser detection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc04292338529e168650b1a683b9f7b5faa66b25" translate="yes" xml:space="preserve">
          <source>Considering that a resource could be anything, and that the uniform
   interface provided by HTTP is similar to a window through which one
   can observe and act upon such a thing only through the communication
   of messages to some independent actor on the other side, an
   abstraction is needed to represent (&quot;take the place of&quot;) the current
   or desired state of that thing in our communications.  That
   abstraction is called a representation [&lt;a href=&quot;#ref-REST&quot;&gt;REST&lt;/a&gt;].

   For the purposes of HTTP, a &quot;representation&quot; is information that is
   intended to reflect a past, current, or desired state of a given
   resource, in a format that can be readily communicated via the
   protocol, and that consists of a set of representation metadata and a
   potentially unbounded stream of representation data.

   An origin server might be provided with, or be capable of generating,
   multiple representations that are each intended to reflect the
   current state of a target resource.  In such cases, some algorithm is
   used by the origin server to select one of those representations as
   most applicable to a given request, usually based on content
   negotiation.  This &quot;selected representation&quot; is used to provide the 

   data and metadata for evaluating conditional requests [&lt;a href=&quot;https://tools.ietf.org/html/rfc7232&quot;&gt;RFC7232&lt;/a&gt;] and
   constructing the payload for 200 (OK) and 304 (Not Modified)
   responses to GET (&lt;a href=&quot;#section-4.3.1&quot;&gt;Section 4.3.1&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503931284b8b68d6bc14e90b6c4905f14d5db9ea" translate="yes" xml:space="preserve">
          <source>Consultation of the Firefox HSTS preload list : &lt;a href=&quot;https://hg.mozilla.org/mozilla-central/raw-file/tip/security/manager/ssl/nsSTSPreloadList.inc&quot;&gt;nsSTSPreloadList.inc&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a176a49cd00ac69dc42d62f9486553ed667d32" translate="yes" xml:space="preserve">
          <source>Contains a characteristic string that allows the network protocol peers to identify the application type, operating system, software vendor or software version of the requesting software user agent. See also the &lt;a href=&quot;headers/user-agent/firefox&quot;&gt;Firefox user agent string reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="678663d831db43602dfe9e9fe92a1082ef2ddcdc" translate="yes" xml:space="preserve">
          <source>Contains an Internet email address for a human user who controls the requesting user agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ec5fb0cc93b949db34830428879d6e35ebba4f" translate="yes" xml:space="preserve">
          <source>Contains information about the software used by the origin server to handle the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9443e137eb11efd975a99e7a6baf4f8fefbd6e73" translate="yes" xml:space="preserve">
          <source>Contains information from the client-facing side of proxy servers that is altered or lost when a proxy is involved in the path of the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01817f2d5174ccee88e198d1a76e36a24cb4116" translate="yes" xml:space="preserve">
          <source>Contains stored &lt;a href=&quot;cookies&quot;&gt;HTTP cookies&lt;/a&gt; previously sent by the server with the &lt;a href=&quot;headers/set-cookie&quot;&gt;&lt;code&gt;Set-Cookie&lt;/code&gt;&lt;/a&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22154a749d666606c925ef3ace61124ddf37d2d" translate="yes" xml:space="preserve">
          <source>Contains the credentials to authenticate a user agent with a proxy server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0dd1d4108f089ea071b064909e6365375782a7" translate="yes" xml:space="preserve">
          <source>Contains the credentials to authenticate a user agent with a server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="646d3ac3228513e4b35e7031f18b79c0c606ba5e" translate="yes" xml:space="preserve">
          <source>Contains the date and time at which the message was originated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c972be02b8446556687c87408ab05f0b8d7ed048" translate="yes" xml:space="preserve">
          <source>Content Negotiation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9467b47a4c1c395a32212b34980c2b8e5ec9fc6f" translate="yes" xml:space="preserve">
          <source>Content Negotiation (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b75e5aad879ad6ec045903a7957a2840d359e8" translate="yes" xml:space="preserve">
          <source>Content Security Policy 1.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744b2e4fde3764da03b4f91ab9ad14b2b88d3dc7" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de84b0734aa5b5664a072e3bd6ce77277f90ee70" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 2&lt;br/&gt;&lt;small&gt;The definition of 'base-uri' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77ecbcdd05d27677c66c634731a718f7490330e" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 2&lt;br/&gt;&lt;small&gt;The definition of 'child-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1efc9bfab09c9137a7131aba5b96d2a65e1bf9d0" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 2&lt;br/&gt;&lt;small&gt;The definition of 'connect-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a215cd212f5c6119c03770dc2d37c4c3f8236c4d" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 2&lt;br/&gt;&lt;small&gt;The definition of 'default-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40adb1f918d1e9da2930bd08fad3585af0ae2635" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 2&lt;br/&gt;&lt;small&gt;The definition of 'font-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01d7d0c778dcbb0abffa3e96f74a05b9d9b4eb4" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 2&lt;br/&gt;&lt;small&gt;The definition of 'form-action' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b51b5facd3c7edbc765fa2e61d4b85a228481f" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 2&lt;br/&gt;&lt;small&gt;The definition of 'frame-ancestors' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc50334cda4bae9b1e65a11eb8433d6c0b6affc0" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 2&lt;br/&gt;&lt;small&gt;The definition of 'frame-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2ac1f7840e12d8a297ae6f31c3efa1a0f9b5ce" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 2&lt;br/&gt;&lt;small&gt;The definition of 'img-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc311776a76f26d73819991b7454d60674414c69" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 2&lt;br/&gt;&lt;small&gt;The definition of 'media-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96d49b039c8e8aac7d2bcf96bfd8323ea11bb02" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 2&lt;br/&gt;&lt;small&gt;The definition of 'object-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a40acbf8869a5bb62907e52fcf5475974b648c4" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 2&lt;br/&gt;&lt;small&gt;The definition of 'plugin-types' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82763265d692d0689796691aa4161eb86d67d73d" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 2&lt;br/&gt;&lt;small&gt;The definition of 'report-uri' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f80e4089f6e2d795ed9d5eef35e8e6066044dbe" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 2&lt;br/&gt;&lt;small&gt;The definition of 'sandbox' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337615e1189b16d5ec187c77654b4c744a3e74fa" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 2&lt;br/&gt;&lt;small&gt;The definition of 'script-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a40362260841fa8d99974c1e734d3db45744108" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 2&lt;br/&gt;&lt;small&gt;The definition of 'style-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b466953d7f58f1aa6afa13c5b9a5609db6afa8" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f94b90206e031f041992df3858bc60077885f0" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 3&lt;br/&gt;&lt;small&gt;The definition of 'base-uri' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="128279b22442e841128762c19782b182b67635ed" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 3&lt;br/&gt;&lt;small&gt;The definition of 'child-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5ad27411d401ecd3bbbd31196bf16a2f090bd0" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 3&lt;br/&gt;&lt;small&gt;The definition of 'connect-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf68fe192431b63fa5f159e56cdf442e1c61336" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 3&lt;br/&gt;&lt;small&gt;The definition of 'default-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d762aa5435ccc61ea607f93ac01b69a3aa902b4d" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 3&lt;br/&gt;&lt;small&gt;The definition of 'font-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6087a9c2bd7e3ea78b14dc382a71fb4687205527" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 3&lt;br/&gt;&lt;small&gt;The definition of 'form-action' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d79529f1b2623d864d16f2ea09e061cb356c85e" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 3&lt;br/&gt;&lt;small&gt;The definition of 'frame-ancestors' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1362e6550bea3c68cb3524922fc5bbb7eeff9d15" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 3&lt;br/&gt;&lt;small&gt;The definition of 'frame-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7902a3f4f99ee4aea2b74436f194eeee64212da4" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 3&lt;br/&gt;&lt;small&gt;The definition of 'img-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5ce99864043556f235d705cc59c25c20615ba7" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 3&lt;br/&gt;&lt;small&gt;The definition of 'manifest-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebcd4ffecb60694953c330e36cd11e280e26a482" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 3&lt;br/&gt;&lt;small&gt;The definition of 'media-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fde3978274adeca0c06e89d861d9f72dfd0fddf" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 3&lt;br/&gt;&lt;small&gt;The definition of 'object-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c32bbb6ed52e84afc0dfa1986157687a0397d84" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 3&lt;br/&gt;&lt;small&gt;The definition of 'plugin-types' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e75a9cfcc5a5bfcae11548966500c9209f6c138" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 3&lt;br/&gt;&lt;small&gt;The definition of 'report-uri' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a341685199c43bd76301876cdf4c8a2c9e2ca55" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 3&lt;br/&gt;&lt;small&gt;The definition of 'sandbox' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dbc2dfda4d80c713e92eb350cf45d1d751211b4" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 3&lt;br/&gt;&lt;small&gt;The definition of 'script-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a7ad3d24df15f55a31284d1e4f6d851f50d4b3" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 3&lt;br/&gt;&lt;small&gt;The definition of 'style-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361b4e13b04dfda2a7798ca7524fe7b547c718f8" translate="yes" xml:space="preserve">
          <source>Content Security Policy Level 3&lt;br/&gt;&lt;small&gt;The definition of 'worker-src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85a336fb359e2ed47630d1553708bd5584c771e" translate="yes" xml:space="preserve">
          <source>Content Security in WebExtensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7c0c2f53cfff2204f61ed692c5ee482ca589fd" translate="yes" xml:space="preserve">
          <source>Content coding registrations MUST include the following fields:

   o  Name

   o  Description

   o  Pointer to specification text

   Names of content codings MUST NOT overlap with names of transfer
   codings (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-4&quot;&gt;Section&amp;nbsp;4 of [RFC7230]&lt;/a&gt;), unless the encoding transformation
   is identical (as is the case for the compression codings defined in
   &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-4.2&quot;&gt;Section&amp;nbsp;4.2 of [RFC7230]&lt;/a&gt;).

   Values to be added to this namespace require IETF Review (see &lt;a href=&quot;https://tools.ietf.org/html/rfc5226#section-4.1&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc5226#section-4.1&quot;&gt;4.1 of [RFC5226]&lt;/a&gt;) and MUST conform to the purpose of content coding
   defined in this section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a8c2c57f9cec5c5f1fd4c38177f2f3dcf6c114" translate="yes" xml:space="preserve">
          <source>Content coding values indicate an encoding transformation that has
   been or can be applied to a representation.  Content codings are
   primarily used to allow a representation to be compressed or
   otherwise usefully transformed without losing the identity of its
   underlying media type and without loss of information.  Frequently,
   the representation is stored in coded form, transmitted directly, and
   only decoded by the final recipient.

     content-coding   = token

   All content-coding values are case-insensitive and ought to be
   registered within the &quot;HTTP Content Coding Registry&quot;, as defined in
   &lt;a href=&quot;#section-8.4&quot;&gt;Section 8.4&lt;/a&gt;.  They are used in the Accept-Encoding (&lt;a href=&quot;#section-5.3.4&quot;&gt;Section 5.3.4&lt;/a&gt;)
   and Content-Encoding (&lt;a href=&quot;#section-3.1.2.2&quot;&gt;Section 3.1.2.2&lt;/a&gt;) header fields. 

   The following content-coding values are defined by this
   specification:

      compress (and x-compress): See &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-4.2.1&quot;&gt;Section&amp;nbsp;4.2.1 of [RFC7230]&lt;/a&gt;.

      deflate: See &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-4.2.2&quot;&gt;Section&amp;nbsp;4.2.2 of [RFC7230]&lt;/a&gt;.

      gzip (and x-gzip): See &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-4.2.3&quot;&gt;Section&amp;nbsp;4.2.3 of [RFC7230]&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c17efa818e7d90c017ba8ae7336014b6232bd1" translate="yes" xml:space="preserve">
          <source>Content coding values indicate an encoding transformation that has
   been or can be applied to an entity. Content codings are primarily
   used to allow a document to be compressed or otherwise usefully
   transformed without losing the identity of its underlying media type
   and without loss of information. Frequently, the entity is stored in
   coded form, transmitted directly, and only decoded by the recipient.

       content-coding   = token

   All content-coding values are case-insensitive. HTTP/1.1 uses
   content-coding values in the Accept-Encoding (&lt;a href=&quot;#section-14.3&quot;&gt;section 14.3&lt;/a&gt;) and
   Content-Encoding (&lt;a href=&quot;#section-14.11&quot;&gt;section 14.11&lt;/a&gt;) header fields. Although the value
   describes the content-coding, what is more important is that it
   indicates what decoding mechanism will be required to remove the
   encoding.

   The Internet Assigned Numbers Authority (IANA) acts as a registry for
   content-coding value tokens. Initially, the registry contains the
   following tokens:

   gzip An encoding format produced by the file compression program
        &quot;gzip&quot; (GNU zip) as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc1952&quot;&gt;RFC 1952&lt;/a&gt; [&lt;a href=&quot;#ref-25&quot;&gt;25&lt;/a&gt;]. This format is a
        Lempel-Ziv coding (LZ77) with a 32 bit CRC.

   compress
        The encoding format produced by the common UNIX file compression
        program &quot;compress&quot;. This format is an adaptive Lempel-Ziv-Welch
        coding (LZW).

        Use of program names for the identification of encoding formats
        is not desirable and is discouraged for future encodings. Their
        use here is representative of historical practice, not good
        design. For compatibility with previous implementations of HTTP,
        applications SHOULD consider &quot;x-gzip&quot; and &quot;x-compress&quot; to be
        equivalent to &quot;gzip&quot; and &quot;compress&quot; respectively.

   deflate
        The &quot;zlib&quot; format defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc1950&quot;&gt;RFC 1950&lt;/a&gt; [&lt;a href=&quot;#ref-31&quot;&gt;31&lt;/a&gt;] in combination with
        the &quot;deflate&quot; compression mechanism described in &lt;a href=&quot;https://tools.ietf.org/html/rfc1951&quot;&gt;RFC 1951&lt;/a&gt; [&lt;a href=&quot;#ref-29&quot;&gt;29&lt;/a&gt;]. 

   identity
        The default (identity) encoding; the use of no transformation
        whatsoever. This content-coding is used only in the Accept-
        Encoding header, and SHOULD NOT be used in the Content-Encoding
        header.

   New content-coding value tokens SHOULD be registered; to allow
   interoperability between clients and servers, specifications of the
   content coding algorithms needed to implement a new value SHOULD be
   publicly available and adequate for independent implementation, and
   conform to the purpose of content coding defined in this section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a5b02fc5865df6d33b3a0dd8b7b5896602250e" translate="yes" xml:space="preserve">
          <source>Content negotiation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad9e2aa6a776962d54ea0e8266b877ba9808464" translate="yes" xml:space="preserve">
          <source>Content negotiation, including language, encoding, or type, has been introduced, and allows a client and a server to agree on the most adequate content to exchange.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c43819e89750da40b3f249f2a7274028712e51" translate="yes" xml:space="preserve">
          <source>Content negotiation: List of default Accept values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9e385e174bfc0fb44fb0f9f1c81c6953fc87a3" translate="yes" xml:space="preserve">
          <source>Content-Disposition</source>
          <target state="translated">Content-Disposition</target>
        </trans-unit>
        <trans-unit id="dc573a47aca875aaa79618871337d7f6c56fa72f" translate="yes" xml:space="preserve">
          <source>Content-Encoding</source>
          <target state="translated">Content-Encoding</target>
        </trans-unit>
        <trans-unit id="d576f32a1637c27920e0aa99b9861b41ea961a2e" translate="yes" xml:space="preserve">
          <source>Content-Encoding (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91fd1dfed8364f154a419bb30f47511380d2a0e0" translate="yes" xml:space="preserve">
          <source>Content-Language</source>
          <target state="translated">Content-Language</target>
        </trans-unit>
        <trans-unit id="4616d0365c21d5eec516f5dcd1d027ee04a73143" translate="yes" xml:space="preserve">
          <source>Content-Language (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba83d8699910039b5b5f1d3bd60b1f43b1c39fa" translate="yes" xml:space="preserve">
          <source>Content-Length</source>
          <target state="translated">Content-Length</target>
        </trans-unit>
        <trans-unit id="6dd6315aed8ec185fa633f204e88a630ad7c1803" translate="yes" xml:space="preserve">
          <source>Content-Length (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be591269e96263fe450ef74421a96c4ad9175eb9" translate="yes" xml:space="preserve">
          <source>Content-Location</source>
          <target state="translated">Content-Location</target>
        </trans-unit>
        <trans-unit id="5e6cb580b31308b4f7473920450456de573bddd2" translate="yes" xml:space="preserve">
          <source>Content-Location (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7779c8ff02503885588d1fc2857bfaa26cbb5a4" translate="yes" xml:space="preserve">
          <source>Content-MD5 (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a137c21303d5cdfaf674a6d77269e2b8a33d34" translate="yes" xml:space="preserve">
          <source>Content-Range</source>
          <target state="translated">Content-Range</target>
        </trans-unit>
        <trans-unit id="1efb03f0a3f829cd647788ed88395c1cbb17eecb" translate="yes" xml:space="preserve">
          <source>Content-Range (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba9bd7d16f41138d6ef1ee2472e03fa95d898cc" translate="yes" xml:space="preserve">
          <source>Content-Range (RFC 7233)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0428e68d9eaf42516ac76fd67879cedb4dc7527" translate="yes" xml:space="preserve">
          <source>Content-Security-Policy</source>
          <target state="translated">Content-Security-Policy</target>
        </trans-unit>
        <trans-unit id="5f1be90e8e76ec51dcb3eb171966e90922c07042" translate="yes" xml:space="preserve">
          <source>Content-Security-Policy-Report-Only</source>
          <target state="translated">Content-Security-Policy-Report-Only</target>
        </trans-unit>
        <trans-unit id="77d12b97ba61ffccb079e0dd2ef6809c1e957255" translate="yes" xml:space="preserve">
          <source>Content-Type</source>
          <target state="translated">Content-Type</target>
        </trans-unit>
        <trans-unit id="d0851aff9fbb6357b097a2a4659c5d0a87fd411c" translate="yes" xml:space="preserve">
          <source>Content-Type (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">Contributing</target>
        </trans-unit>
        <trans-unit id="64523d58f5f4352d5b29f271f23a0e87568fd23d" translate="yes" xml:space="preserve">
          <source>Controlling caching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798bd40b182b5dd7f82bea36f550de4033c8cf8c" translate="yes" xml:space="preserve">
          <source>Controlling the XSS Filter &amp;ndash; Microsoft</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee75ca77f753e4846b455441733f6641c4bf287" translate="yes" xml:space="preserve">
          <source>Controls</source>
          <target state="translated">Controls</target>
        </trans-unit>
        <trans-unit id="16b2ba7a8e06814dd8879d419d6bd4a2bf445be1" translate="yes" xml:space="preserve">
          <source>Controls DNS prefetching, a feature by which browsers proactively perform domain name resolution on both links that the user may choose to follow as well as URLs for items referenced by the document, including images, CSS, JavaScript, and so forth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b77d88288fa4eaf881c8daf4ca0b484b388e304" translate="yes" xml:space="preserve">
          <source>Controls are request header fields that direct specific handling of
   the request.

   +-------------------+--------------------------+
   | Header Field Name | Defined in...            |
   +-------------------+--------------------------+
   | Cache-Control     | &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.2&quot;&gt;Section&amp;nbsp;5.2 of [RFC7234]&lt;/a&gt; |
   | Expect            | &lt;a href=&quot;#section-5.1.1&quot;&gt;Section 5.1.1&lt;/a&gt;            |
   | Host              | &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.4&quot;&gt;Section&amp;nbsp;5.4 of [RFC7230]&lt;/a&gt; |
   | Max-Forwards      | &lt;a href=&quot;#section-5.1.2&quot;&gt;Section 5.1.2&lt;/a&gt;            |
   | Pragma            | &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.4&quot;&gt;Section&amp;nbsp;5.4 of [RFC7234]&lt;/a&gt; |
   | Range             | &lt;a href=&quot;https://tools.ietf.org/html/rfc7233#section-3.1&quot;&gt;Section&amp;nbsp;3.1 of [RFC7233]&lt;/a&gt; |
   | TE                | &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-4.3&quot;&gt;Section&amp;nbsp;4.3 of [RFC7230]&lt;/a&gt; |
   +-------------------+--------------------------+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d06120fe46a8c6ac20b8de7e14b6d44333371d9" translate="yes" xml:space="preserve">
          <source>Controls how long a persistent connection should stay open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc6dc0f076d68850b51c1e2a31ab3a36167fd05" translate="yes" xml:space="preserve">
          <source>Controls resources the user agent is allowed to load for a given page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3f38a7c5429ea4c2ee3ff6d144a4d13ce4d280" translate="yes" xml:space="preserve">
          <source>Controls whether the current document is allowed to autoplay media requested through the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt; interface. When this policy is enabled and there were no user gestures, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; returned by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/play&quot;&gt;&lt;code&gt;HTMLMediaElement.play()&lt;/code&gt;&lt;/a&gt; will reject with a &lt;code&gt;DOMException&lt;/code&gt;. The autoplay attribute on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; elements will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748e7d094a079d99b0802a42160d70909daba7be" translate="yes" xml:space="preserve">
          <source>Controls whether the current document is allowed to set &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/domain&quot;&gt;&lt;code&gt;document.domain&lt;/code&gt;&lt;/a&gt;. When this policy is enabled, attempting to set &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/domain&quot;&gt;&lt;code&gt;document.domain&lt;/code&gt;&lt;/a&gt; will fail and cause a &lt;code&gt;SecurityError&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DOMException&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; to be be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9202005c3fefb7070dc1aada747763c58586ef" translate="yes" xml:space="preserve">
          <source>Controls whether the current document is allowed to use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen&quot;&gt;&lt;code&gt;Element.requestFullScreen()&lt;/code&gt;&lt;/a&gt;. When this policy is enabled, the returned &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; rejects with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a16fce94be173408927f96a4f686a21d250565" translate="yes" xml:space="preserve">
          <source>Controls whether the current document is allowed to use audio input devices. When this policy is enabled, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; returned by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia&quot;&gt;&lt;code&gt;MediaDevices.getUserMedia()&lt;/code&gt;&lt;/a&gt; will reject with a &lt;code&gt;NotAllowedError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92efbe775efd4caa0ee38521482152734ab90cb" translate="yes" xml:space="preserve">
          <source>Controls whether the current document is allowed to use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Encrypted_Media_Extensions_API&quot;&gt;Encrypted Media Extensions&lt;/a&gt; API (EME). When this policy is enabled, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; returned by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Navigator/requestMediaKeySystemAccess&quot;&gt;&lt;code&gt;Navigator.requestMediaKeySystemAccess()&lt;/code&gt;&lt;/a&gt; will reject with a &lt;code&gt;DOMException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701785c55f133c899083afb053d95de0933dda9a" translate="yes" xml:space="preserve">
          <source>Controls whether the current document is allowed to use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Geolocation&quot;&gt;&lt;code&gt;Geolocation&lt;/code&gt;&lt;/a&gt; Interface. When this policy is enabled, calls to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/getCurrentPosition&quot;&gt;&lt;code&gt;getCurrentPosition()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/watchPosition&quot;&gt;&lt;code&gt;watchPosition()&lt;/code&gt;&lt;/a&gt; will cause those functions' callbacks to be invoked with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PositionError&quot;&gt;&lt;code&gt;PositionError&lt;/code&gt;&lt;/a&gt; code of &lt;code&gt;PERMISSION_DENIED&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752d091b5728fa4e90146dcd0afbbef74aa2ea04" translate="yes" xml:space="preserve">
          <source>Controls whether the current document is allowed to use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Payment_Request_API&quot;&gt;Payment Request API&lt;/a&gt;. When this policy is enabled, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest&quot;&gt;&lt;code&gt;PaymentRequest()&lt;/code&gt;&lt;/a&gt; constructor will throw a &lt;code&gt;SecurityError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b27ce47572c5040012ca8991495c5806658d1e6" translate="yes" xml:space="preserve">
          <source>Controls whether the current document is allowed to use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebVR_API&quot;&gt;WebVR API&lt;/a&gt;. When this policy is enabled, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; returned by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Navigator/getVRDisplays&quot;&gt;&lt;code&gt;Navigator.getVRDisplays()&lt;/code&gt;&lt;/a&gt; will reject with a &lt;code&gt;DOMException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae9d9c6793eb58eccf5ef121d0c49fbd7c8a639" translate="yes" xml:space="preserve">
          <source>Controls whether the current document is allowed to use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_MIDI_API&quot;&gt;Web MIDI API&lt;/a&gt;. When this policy is enabled, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; returned by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Navigator/requestMIDIAccess&quot;&gt;&lt;code&gt;Navigator.requestMIDIAccess()&lt;/code&gt;&lt;/a&gt; will reject with a &lt;code&gt;DOMException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea6ab0ebb775b4c68719f38fb0405118793f8dbe" translate="yes" xml:space="preserve">
          <source>Controls whether the current document is allowed to use video input devices. When this policy is enabled, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; returned by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia&quot;&gt;&lt;code&gt;MediaDevices.getUserMedia()&lt;/code&gt;&lt;/a&gt; will reject with a &lt;code&gt;NotAllowedError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d72dbdfe89f740578ebd46d1f8f6b24c1d1af3" translate="yes" xml:space="preserve">
          <source>Controls whether the network connection stays open after the current transaction finishes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f81994fed009c24d31efd799e2d47a74a60f1f" translate="yes" xml:space="preserve">
          <source>Cookie</source>
          <target state="translated">Cookie</target>
        </trans-unit>
        <trans-unit id="855f1aeb408d41040efd6bbe7a5a5c78896102b3" translate="yes" xml:space="preserve">
          <source>Cookie Prefixes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46e4672dad67b91c720df5978c33bbcda250091" translate="yes" xml:space="preserve">
          <source>Cookie Prefixes, Same-Site Cookies, and Strict Secure Cookies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5226227dfaff67e00d2cefffad8b01e5623c9199" translate="yes" xml:space="preserve">
          <source>Cookie prefixes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b73f03a198c808fd48e167f5e51ed71bf152aa" translate="yes" xml:space="preserve">
          <source>Cookie specification: RFC 6265</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69edf6707c7791d5cad0815a8e3ec1ade501e5e" translate="yes" xml:space="preserve">
          <source>Cookie2</source>
          <target state="translated">Cookie2</target>
        </trans-unit>
        <trans-unit id="524cf50b5df5f29161c0600989922de48abede70" translate="yes" xml:space="preserve">
          <source>Cookies</source>
          <target state="translated">Cookies</target>
        </trans-unit>
        <trans-unit id="91726d4662df032620c2a9c6bee269a6ec9cd611" translate="yes" xml:space="preserve">
          <source>Cookies are mainly used for three purposes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be35828dda62eab3ec5d2bb08a6078f2394c4ca" translate="yes" xml:space="preserve">
          <source>Cookies are often used in web application to identify a user and their authenticated session, so stealing a cookie can lead to hijacking the authenticated user's session. Common ways to steal cookies include Social Engineering or exploiting an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/XSS&quot;&gt;XSS&lt;/a&gt; vulnerability in the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4a309c1073db6339a4d7df640e5378d16ed49f" translate="yes" xml:space="preserve">
          <source>Cookies have a domain associated to them. If this domain is the same as the domain of the page you are on, the cookies is said to be a &lt;em&gt;first-party cookie&lt;/em&gt;. If the domain is different, it is said to be a &lt;em&gt;third-party cookie&lt;/em&gt;. While first-party cookies are sent only to the server setting them, a web page may contain images or other components stored on servers in other domains (like ad banners). Cookies that are sent through these third-party components are called third-party cookies and are mainly used for advertising and tracking across the web. See for example the &lt;a href=&quot;https://www.google.com/policies/technologies/types/&quot;&gt;types of cookies used by Google&lt;/a&gt;. Most browsers allow third-party cookies by default, but there are add-ons available to block them (for example, &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/privacy-badger-firefox/&quot;&gt;Privacy Badger&lt;/a&gt; by the &lt;a href=&quot;https://www.eff.org/&quot;&gt;EFF&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69278be125dc5efc1b72b11d16c28693744e9b5" translate="yes" xml:space="preserve">
          <source>Cookies names with the prefixes &lt;code&gt;__Secure-&lt;/code&gt; and &lt;code&gt;__Host-&lt;/code&gt; can be used only if they are set with the &lt;code&gt;secure&lt;/code&gt; directive from a secure (HTTPS) origin. In addition, cookies with the &lt;code&gt;__Host-&lt;/code&gt; prefix must have a path of &quot;/&quot; (the entire host) and must not have a domain attribute. For clients that don't implement cookie prefixes, you cannot count on having these additional assurances and the cookies will always be accepted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4b213146883434308b211be44163c0d5123aa7" translate="yes" xml:space="preserve">
          <source>Cookies that are used for sensitive actions should have a short lifetime only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a68f999d90e10d874702ce7449ad09e886cc58" translate="yes" xml:space="preserve">
          <source>Cookies were once used for general client-side storage. While this was legitimate when they were the only way to store data on the client, it is recommended nowadays to prefer modern storage APIs. Cookies are sent with every request, so they can worsen performance (especially for mobile data connections). Modern APIs for client storage are the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API&quot;&gt;Web storage API&lt;/a&gt; (&lt;code&gt;localStorage&lt;/code&gt; and &lt;code&gt;sessionStorage&lt;/code&gt;) and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API&quot;&gt;IndexedDB&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d30283e462307cf7cf0e834f8cb357fdc77708b" translate="yes" xml:space="preserve">
          <source>Copyright (C) The Internet Society (1999).  All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works.  However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assigns.

   This document and the information contained herein is provided on an
   &quot;AS IS&quot; basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION
   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

Acknowledgement

   Funding for the RFC Editor function is currently provided by the
   Internet Society.


Fielding, et al.            Standards Track                   [Page 176]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceea4db1706574d34f4d5faeb7d3f3edb1935c88" translate="yes" xml:space="preserve">
          <source>Crawler and bot UA strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86062bc58f269be1dbc0f328e7c90ff13b9e907" translate="yes" xml:space="preserve">
          <source>Creates a conditional range request that is only fulfilled if the given etag or date matches the remote resource. Used to prevent downloading two ranges from incompatible version of the resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76eb9f2d57de8bd2b8c062b8223a88e83fb499fa" translate="yes" xml:space="preserve">
          <source>Creating cookies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df7b9c4955c3b374d3da07a58b10444962289d8" translate="yes" xml:space="preserve">
          <source>Credentialed requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f2c6abb6553670b6ef790150334c72849c2d10f" translate="yes" xml:space="preserve">
          <source>Credentialed requests and wildcards</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbab18ad35d9f0a9db06382222fe5ee8bacb518e" translate="yes" xml:space="preserve">
          <source>Credentials are cookies, authorization headers or TLS client certificates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea3f9a457f64dcc44f448b6b5de50c2d9273cb5" translate="yes" xml:space="preserve">
          <source>Cross-Origin Read Blocking (CORB)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b9a88f9edb34ac8c57459a8c292f1807950214" translate="yes" xml:space="preserve">
          <source>Cross-Origin Resource Sharing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f6982752260490391736749366d8f03f7cc06a" translate="yes" xml:space="preserve">
          <source>Cross-Origin Resource Sharing (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORS&lt;/a&gt;) is a mechanism that uses additional &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTTP&quot;&gt;HTTP&lt;/a&gt; headers to tell a browser to let a web application running at one origin (domain) have permission to access selected resources from a server at a different origin. A web application makes a &lt;strong&gt;cross-origin HTTP request&lt;/strong&gt; when it requests a resource that has a different origin (domain, protocol, and port) than its own origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18fc2f97599c6123f77e230a7df453afa9545e6c" translate="yes" xml:space="preserve">
          <source>Cross-Origin Resource Sharing (CORS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49e7291e12824614e74d4daefc78b28f509ce7d" translate="yes" xml:space="preserve">
          <source>Cross-Origin Resource Sharing From a Server-Side Perspective (PHP, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35658dac4ac5e56d5f36e49f34856d93c2523dde" translate="yes" xml:space="preserve">
          <source>Cross-site request forgery (CSRF)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="039084e72450bd4fe9b884cd413d798482a45b58" translate="yes" xml:space="preserve">
          <source>Custom design is a good thing, in moderation. Feel free to make your 404 page humorous and human, but don't confuse your users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e21be22a3254b4156b2e56b573050add0cefc03" translate="yes" xml:space="preserve">
          <source>Custom error pages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3930132543dcc21e58398598affcb6d10f1fdded" translate="yes" xml:space="preserve">
          <source>Custom proprietary headers can be added using the 'X-' prefix, but this convention was deprecated in June 2012, because of the inconveniences it caused when non-standard fields became standard in &lt;a href=&quot;https://tools.ietf.org/html/rfc6648&quot;&gt;RFC 6648&lt;/a&gt;; others are listed in an &lt;a href=&quot;http://www.iana.org/assignments/message-headers/perm-headers.html&quot;&gt;IANA registry&lt;/a&gt;, whose original content was defined in &lt;a href=&quot;http://tools.ietf.org/html/rfc4229&quot;&gt;RFC 4229&lt;/a&gt;. IANA also maintains a &lt;a href=&quot;http://www.iana.org/assignments/message-headers/prov-headers.html&quot;&gt;registry of proposed new HTTP message headers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c9e8d5fc98727b4bbc93cf5d64a68db647f04f" translate="yes" xml:space="preserve">
          <source>D</source>
          <target state="translated">D</target>
        </trans-unit>
        <trans-unit id="64df6f40d36dc3579a69d70da5a5421dddd930c9" translate="yes" xml:space="preserve">
          <source>D.1.  Guidance for Clients Using LOCK to Create Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba6a0553575985fd50f55f28ad9e49527c369965" translate="yes" xml:space="preserve">
          <source>DAV              = &quot;DAV&quot; &quot;:&quot; #( compliance-class )
    compliance-class = ( &quot;1&quot; | &quot;2&quot; | &quot;3&quot; | extend )
    extend           = Coded-URL | token
                       ; token is defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-2.2&quot;&gt;RFC 2616, Section&amp;nbsp;2.2&lt;/a&gt;
    Coded-URL        = &quot;&amp;lt;&quot; absolute-URI &quot;&amp;gt;&quot;
                       ; No linear whitespace (LWS) allowed in Coded-URL
                       ; absolute-URI defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-4.3&quot;&gt;RFC 3986, Section&amp;nbsp;4.3&lt;/a&gt; 

   This general-header appearing in the response indicates that the
   resource supports the DAV schema and protocol as specified.  All DAV-
   compliant resources MUST return the DAV header with compliance-class
   &quot;1&quot; on all OPTIONS responses.  In cases where WebDAV is only
   supported in part of the server namespace, an OPTIONS request to non-
   WebDAV resources (including &quot;/&quot;) SHOULD NOT advertise WebDAV support.

   The value is a comma-separated list of all compliance class
   identifiers that the resource supports.  Class identifiers may be
   Coded-URLs or tokens (as defined by [&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;]).  Identifiers can
   appear in any order.  Identifiers that are standardized through the
   IETF RFC process are tokens, but other identifiers SHOULD be Coded-
   URLs to encourage uniqueness.

   A resource must show class 1 compliance if it shows class 2 or 3
   compliance.  In general, support for one compliance class does not
   entail support for any other, and in particular, support for
   compliance class 3 does not require support for compliance class 2.
   Please refer to &lt;a href=&quot;#section-18&quot;&gt;Section 18&lt;/a&gt; for more details on compliance classes
   defined in this specification.

   Note that many WebDAV servers do not advertise WebDAV support in
   response to &quot;OPTIONS *&quot;.

   As a request header, this header allows the client to advertise
   compliance with named features when the server needs that
   information.  Clients SHOULD NOT send this header unless a standards
   track specification requires it.  Any extension that makes use of
   this as a request header will need to carefully consider caching
   implications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f5636098cd458ce9d22939f8e3e8deab0e9bd0" translate="yes" xml:space="preserve">
          <source>DELETE</source>
          <target state="translated">DELETE</target>
        </trans-unit>
        <trans-unit id="71d0df144e49808ea5b30cff2e0cfbdfbdfed7a6" translate="yes" xml:space="preserve">
          <source>DELETE (RFC 7231)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0fc5d87b0f45142f270cb1776553749e02e284" translate="yes" xml:space="preserve">
          <source>DELETE /specs/rfc2518.txt HTTP/1.1
     Host: www.example.com
     If: &amp;lt;http://www.example.com/specs/&amp;gt;
       (&amp;lt;urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2&amp;gt;)

   For this example, the lock token must be compared to the identified
   resource, which is the 'specs' collection identified by the URL in
   the tagged list production.  If the 'specs' collection is not locked
   by a lock with the specified lock token, the request MUST fail.
   Otherwise, this request could succeed, because the If header
   evaluates to true, and because the lock token for the lock affecting
   the affected resource has been submitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4e42170be0b73687189267ec6aa44fd7fb50dc" translate="yes" xml:space="preserve">
          <source>DELETE is defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-9.7&quot;&gt;[RFC2616], Section&amp;nbsp;9.7&lt;/a&gt;, to &quot;delete the resource
   identified by the Request-URI&quot;.  However, WebDAV changes some DELETE
   handling requirements.

   A server processing a successful DELETE request:

      MUST destroy locks rooted on the deleted resource

      MUST remove the mapping from the Request-URI to any resource.

   Thus, after a successful DELETE operation (and in the absence of
   other actions), a subsequent GET/HEAD/PROPFIND request to the target
   Request-URI MUST return 404 (Not Found).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622a6565387c8a9193ab691a610d7533ff392068" translate="yes" xml:space="preserve">
          <source>DIRECT</source>
          <target state="translated">DIRECT</target>
        </trans-unit>
        <trans-unit id="87ede6aa90d5a4c2897ed65eb85b7f66b5b9e4aa" translate="yes" xml:space="preserve">
          <source>DNS Prefetching for Firefox (blog post)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9a4d54a21c7a39b39b93fd274052b6eea40ba3" translate="yes" xml:space="preserve">
          <source>DNS requests are very small in terms of bandwidth, but latency can be quite high, especially on mobile networks. By speculatively prefetching DNS results, latency can be reduced significantly at certain times, such as when the user clicks the link. In some cases, latency can be reduced by a second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a9eac6a1f6b760dd9330fe9781a84bd533acde" translate="yes" xml:space="preserve">
          <source>DNT</source>
          <target state="translated">DNT</target>
        </trans-unit>
        <trans-unit id="b4851340e5f371052dedce4854148247d2d7059f" translate="yes" xml:space="preserve">
          <source>DNT browser settings help:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb0149117b0787ecd3bdc916006d4cb72a58458" translate="yes" xml:space="preserve">
          <source>DNT header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d02a8a39932fc753e1f327a5d18be785a02a400" translate="yes" xml:space="preserve">
          <source>Data URIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad3591ce326cc06b7118a498640ac09b0acbc3b" translate="yes" xml:space="preserve">
          <source>Data URLs are composed of four parts: a prefix (&lt;code&gt;data:&lt;/code&gt;), a MIME type indicating the type of data, an optional &lt;code&gt;base64&lt;/code&gt; token if non-textual, and the data itself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd580fd32a456f469a180a09b2377cb1a21d03a6" translate="yes" xml:space="preserve">
          <source>Data is sent in a series of chunks. The &lt;a href=&quot;content-length&quot;&gt;&lt;code&gt;Content-Length&lt;/code&gt;&lt;/a&gt; header is omitted in this case and at the beginning of each chunk you need to add the length of the current chunk in hexadecimal format, followed by '&lt;code&gt;\r\n&lt;/code&gt;' and then the chunk itself, followed by another '&lt;code&gt;\r\n&lt;/code&gt;'. The terminating chunk is a regular chunk, with the exception that its length is zero. It is followed by the trailer, which consists of a (possibly empty) sequence of entity header fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9a4bc1c0c153e4e4b042a79113b815b7e3021d" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="translated">Date</target>
        </trans-unit>
        <trans-unit id="fb6ad00eeb633a9b18034eebfa372bab17fad22d" translate="yes" xml:space="preserve">
          <source>Date (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a419cf773491778e745bd51f870ec2d08c0233" translate="yes" xml:space="preserve">
          <source>Dealing with scheduled downtime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f5d7ac8c0029928dbf3672e84d1b9dee1eca44" translate="yes" xml:space="preserve">
          <source>Dealing with the first upload of a resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="730b3581cc47dac8cfc7d93febfe61d28b27d4f0" translate="yes" xml:space="preserve">
          <source>Deciding the case</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e034cbbe2b8762f796d4892d08bbfed1145d3ef8" translate="yes" xml:space="preserve">
          <source>Default values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab39d71630263cb06de73047fe986abf13013e75" translate="yes" xml:space="preserve">
          <source>Defines &lt;code&gt;connect-src&lt;/code&gt;, &lt;code&gt;default-src&lt;/code&gt;, &lt;code&gt;font-src&lt;/code&gt;, &lt;code&gt;frame-src&lt;/code&gt;, &lt;code&gt;img-src&lt;/code&gt;, &lt;code&gt;media-src&lt;/code&gt;, &lt;code&gt;object-src&lt;/code&gt;, report-uri, &lt;code&gt;sandbox&lt;/code&gt;, &lt;code&gt;script-src,&lt;/code&gt; and &lt;code&gt;style-src&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eacb52986e3e740e8c70b75c3e7482999a612bff" translate="yes" xml:space="preserve">
          <source>Defines the &lt;code&gt;fullscreen&lt;/code&gt; policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b169a4830ca101a24b3e67607bce56b1c91720" translate="yes" xml:space="preserve">
          <source>Defines the authentication method that should be used to gain access to a resource behind a Proxy server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6543a340c8cdd818ac73a63a94d4fd7de57aba8d" translate="yes" xml:space="preserve">
          <source>Defines the authentication method that should be used to gain access to a resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8dcc75b63979f2db11f899a91470adab4ff1cb6" translate="yes" xml:space="preserve">
          <source>Defines the valid sources for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;web workers&lt;/a&gt; and nested browsing contexts loaded using elements such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame&quot;&gt;&lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64b866be84f841a370d95030a45025c6a3e04e9" translate="yes" xml:space="preserve">
          <source>Denial-of-service attacks are of special concern to WebDAV servers.
   WebDAV plus HTTP enables denial-of-service attacks on every part of a
   system's resources.

   o  The underlying storage can be attacked by PUTting extremely large
      files.

   o  Asking for recursive operations on large collections can attack
      processing time.

   o  Making multiple pipelined requests on multiple connections can
      attack network connections.

   WebDAV servers need to be aware of the possibility of a denial-of-
   service attack at all levels.  The proper response to such an attack
   MAY be to simply drop the connection.  Or, if the server is able to
   make a response, the server MAY use a 400-level status request such
   as 400 (Bad Request) and indicate why the request was refused (a 500-
   level status response would indicate that the problem is with the
   server, whereas unintentional DoS attacks are something the client is
   capable of remedying).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89de95bda785091ad4670c2c51c5dd042349d3eb" translate="yes" xml:space="preserve">
          <source>Deprecate modification of 'secure' cookies from non-secure origins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb41926689d64456523d9abd88a8e204ff7906a" translate="yes" xml:space="preserve">
          <source>Deprecates &lt;code&gt;frame-src&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f0c7b98ab40a4d967b59248a69752d5ae464d4" translate="yes" xml:space="preserve">
          <source>Depth = &quot;Depth&quot; &quot;:&quot; (&quot;0&quot; | &quot;1&quot; | &quot;infinity&quot;)

   The Depth request header is used with methods executed on resources
   that could potentially have internal members to indicate whether the
   method is to be applied only to the resource (&quot;Depth: 0&quot;), to the
   resource and its internal members only (&quot;Depth: 1&quot;), or the resource
   and all its members (&quot;Depth: infinity&quot;).

   The Depth header is only supported if a method's definition
   explicitly provides for such support.

   The following rules are the default behavior for any method that
   supports the Depth header.  A method may override these defaults by
   defining different behavior in its definition. 

   Methods that support the Depth header may choose not to support all
   of the header's values and may define, on a case-by-case basis, the
   behavior of the method if a Depth header is not present.  For
   example, the MOVE method only supports &quot;Depth: infinity&quot;, and if a
   Depth header is not present, it will act as if a &quot;Depth: infinity&quot;
   header had been applied.

   Clients MUST NOT rely upon methods executing on members of their
   hierarchies in any particular order or on the execution being atomic
   unless the particular method explicitly provides such guarantees.

   Upon execution, a method with a Depth header will perform as much of
   its assigned task as possible and then return a response specifying
   what it was able to accomplish and what it failed to do.

   So, for example, an attempt to COPY a hierarchy may result in some of
   the members being copied and some not.

   By default, the Depth header does not interact with other headers.
   That is, each header on a request with a Depth header MUST be applied
   only to the Request-URI if it applies to any resource, unless
   specific Depth behavior is defined for that header.

   If a source or destination resource within the scope of the Depth
   header is locked in such a way as to prevent the successful execution
   of the method, then the lock token for that resource MUST be
   submitted with the request in the If request header.

   The Depth header only specifies the behavior of the method with
   regards to internal members.  If a resource does not have internal
   members, then the Depth header MUST be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f35f2651dfb57ad3dbd2465104d1927bb97b16" translate="yes" xml:space="preserve">
          <source>Describes how Web resources are referenced and how to locate them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c9f2b9944695efcc3168d72ca8c97f9659ed15" translate="yes" xml:space="preserve">
          <source>Describes the language(s) intended for the audience, so that it allows a user to differentiate according to the users' own preferred language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ca427b8a632e16915ddd1ca200bfe11ba09ba7" translate="yes" xml:space="preserve">
          <source>Describes the three connection management models available in HTTP/1.x, their strengths, and their weaknesses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a26ce3467081341f2f33fd2f385b9b4b5a76b7" translate="yes" xml:space="preserve">
          <source>Describes the type and structure of the different kind of messages of HTTP/1.x and HTTP/2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045b1f4c38aa570756046a04e9ca60247fc160b5" translate="yes" xml:space="preserve">
          <source>Describes what HTTP is and its role in the Web architecture, its position in the protocol stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="6011dbf6cfab599fb1f5bc7fc964691bbd1b3180" translate="yes" xml:space="preserve">
          <source>Designed in the early 1990s, HTTP is an extensible protocol which has evolved over time. It is an application layer protocol that is sent over &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TCP&quot;&gt;TCP&lt;/a&gt;, or over a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TLS&quot;&gt;TLS&lt;/a&gt;-encrypted TCP connection, though any reliable transport protocol could theoretically be used. Due to its extensibility, it is used to not only fetch hypertext documents, but also images and videos or to post content to servers, like with HTML form results. HTTP can also be used to fetch parts of documents to update Web pages on demand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532c67fe1b5afae15d2d08fba7a78de0f63cc4b5" translate="yes" xml:space="preserve">
          <source>Desktop</source>
          <target state="translated">Desktop</target>
        </trans-unit>
        <trans-unit id="dfd0263c11d50bfbcd6f11a03ba9f3544f34bf13" translate="yes" xml:space="preserve">
          <source>Despite &lt;code&gt;image/vnd.microsoft.icon&lt;/code&gt; being &lt;a href=&quot;https://www.iana.org/assignments/media-types/image/vnd.microsoft.icon&quot;&gt;registered with IANA&lt;/a&gt;, it is largely unsupported, and &lt;code&gt;image/x-icon&lt;/code&gt; is being used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9a54d2465a44e3b40b84b59d11de3a6c0cadc8" translate="yes" xml:space="preserve">
          <source>Determines how to match future request headers to decide whether a cached response can be used rather than requesting a fresh one from the origin server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e965db93ca2d2ed880afa222771550e11edd88c" translate="yes" xml:space="preserve">
          <source>Device-specific</source>
          <target state="translated">Device-specific</target>
        </trans-unit>
        <trans-unit id="504f16935ab18165c15c8ac0d71a7134e267a656" translate="yes" xml:space="preserve">
          <source>Device-specific user agent strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb4688658b58abe9c95bf427c98e66f4be1e7a3" translate="yes" xml:space="preserve">
          <source>Different kinds of caches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca0ed6389159c54076291dfd79987d9f92fb6b6" translate="yes" xml:space="preserve">
          <source>Directive type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c82071e940360118b0611d5c912a71c32a0100" translate="yes" xml:space="preserve">
          <source>Directives</source>
          <target state="translated">Directives</target>
        </trans-unit>
        <trans-unit id="f4f4473df8cb59f0a369aebee3d1509adc0151c6" translate="yes" xml:space="preserve">
          <source>Disabled</source>
          <target state="translated">Disabled</target>
        </trans-unit>
        <trans-unit id="b23e78cd51ef4c7696b73e65f06fc0fba687013d" translate="yes" xml:space="preserve">
          <source>Disabled From version 49: this feature is behind the &lt;code&gt;security.csp.experimentalEnabled&lt;/code&gt; preference (needs to be set to &lt;code&gt;true&lt;/code&gt;). To change preferences in Firefox, visit about:config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7790dccb9f3d88c21e6418f32f87789fb463366" translate="yes" xml:space="preserve">
          <source>Disabled From version 52: this feature is behind the &lt;code&gt;#enable-experimental-productivity-features&lt;/code&gt; preference (needs to be set to &lt;code&gt;Enabled&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad350d06e4ae5e37d57c0405b7c8e1fbfca3f705" translate="yes" xml:space="preserve">
          <source>Disabled From version 53: this feature is behind the &lt;code&gt;#enable-experimental-productivity-features&lt;/code&gt; preference (needs to be set to &lt;code&gt;Enabled&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d0cf4c918a77e56e449b4d149616907d38849e" translate="yes" xml:space="preserve">
          <source>Disabled From version 55: this feature is behind the &lt;code&gt;#enable-experimental-productivity-features&lt;/code&gt; preference (needs to be set to &lt;code&gt;Enabled&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02423b2163f75291aa5854698bba6b1f6a5052f1" translate="yes" xml:space="preserve">
          <source>Disabled From version 56: this feature is behind the &lt;code&gt;#enable-experimental-productivity-features&lt;/code&gt; preference (needs to be set to &lt;code&gt;Enabled&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b34d34dcaec154df6181d68e5bec4643debe21c" translate="yes" xml:space="preserve">
          <source>Disabled From version 59: this feature is behind the &lt;code&gt;network.http.sendOriginHeader&lt;/code&gt; preference (needs to be set to &lt;code&gt;true&lt;/code&gt;). To change preferences in Firefox, visit about:config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73719b598079cc354ff255d41acbbe0b420ae879" translate="yes" xml:space="preserve">
          <source>Disabled From version 62: this feature is behind the &lt;code&gt;dom.clearSiteData.enabled&lt;/code&gt; preference (needs to be set to &lt;code&gt;true&lt;/code&gt;). To change preferences in Firefox, visit about:config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7847ec1580ce5ad83ab59a78912ccb3ab21e102b" translate="yes" xml:space="preserve">
          <source>Disabled From version 65: this feature is behind the &lt;code&gt;#enable-experimental-productivity-features&lt;/code&gt; preference (needs to be set to &lt;code&gt;Enabled&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a54bae2672ba58fd0d7d8cd35ca056cf1ce8f92" translate="yes" xml:space="preserve">
          <source>Disabled From version 65: this feature is behind the &lt;code&gt;#enable-experimental-productivity-features&lt;/code&gt; preference (needs to be set to &lt;code&gt;Enabled&lt;/code&gt;). To change preferences in Chrome, visit chrome://flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726ec65869fe460716d9db41541949cae8c24c4e" translate="yes" xml:space="preserve">
          <source>Disabled From version 66: this feature is behind the &lt;code&gt;#enable-experimental-productivity-features&lt;/code&gt; preference (needs to be set to &lt;code&gt;Enabled&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aebc6632a71f5502b11ed22ad8c5755ec1c88bfe" translate="yes" xml:space="preserve">
          <source>Disabled From version 66: this feature is behind the &lt;code&gt;#enable-experimental-productivity-features&lt;/code&gt; preference (needs to be set to &lt;code&gt;Enabled&lt;/code&gt;). To change preferences in Chrome, visit chrome://flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56705b66ed39339d0a4b894306b2ecabb3efd7c6" translate="yes" xml:space="preserve">
          <source>Disabled From version 68: this feature is behind the &lt;code&gt;#enable-experimental-productivity-features&lt;/code&gt; preference (needs to be set to &lt;code&gt;Enabled&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dcbb985ceab20f02611932df74cc051d6062ad2" translate="yes" xml:space="preserve">
          <source>Disabled From version 68: this feature is behind the &lt;code&gt;#enable-experimental-productivity-features&lt;/code&gt; preference (needs to be set to &lt;code&gt;Enabled&lt;/code&gt;). To change preferences in Chrome, visit chrome://flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28e2d242fc0c32d88a4828425be70d8d4e9386c" translate="yes" xml:space="preserve">
          <source>Disabled From version 69: this feature is behind the &lt;code&gt;#enable-experimental-productivity-features&lt;/code&gt; preference (needs to be set to &lt;code&gt;Enabled&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc43adf822f8071bf38b741b4c8b4ff8caa87dd2" translate="yes" xml:space="preserve">
          <source>Disabled From version 69: this feature is behind the &lt;code&gt;#enable-experimental-productivity-features&lt;/code&gt; preference (needs to be set to &lt;code&gt;Enabled&lt;/code&gt;). To change preferences in Chrome, visit chrome://flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efbf731d4f27dd707439b02e0fcf767655467961" translate="yes" xml:space="preserve">
          <source>Disables DNS prefetching. This is useful if you don't control the link on the pages, or know that you don't want to leak information to these domains.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f5f4ebc16939ddad056d1835f255075e38be52" translate="yes" xml:space="preserve">
          <source>Disables MIME sniffing and forces browser to use the type given in &lt;a href=&quot;headers/content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c27076a7d462b5b7f6f1b44922f1242a3e46ba5" translate="yes" xml:space="preserve">
          <source>Disables XSS filtering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57822983bbd8b7a6c9f3de16f7fe5eab989d06a5" translate="yes" xml:space="preserve">
          <source>Disabling a feature in a policy is a one-way toggle. If a feature has been disabled for a child frame by its parent frame, the child cannot re-enable it, and neither can any of the child's descendants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95dd3eb6900d93a418238bf7a5a3a1a746e7c86" translate="yes" xml:space="preserve">
          <source>Disallowing plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93902c2eda1c4f4fa6e24f3a214f7642478627b6" translate="yes" xml:space="preserve">
          <source>Disconnected Operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5bdaaa9046da0ea03b3b9660b87425b983b09dd" translate="yes" xml:space="preserve">
          <source>Discrete types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69e4d6aad6c625810f7014dfc3dfbd01898d5b3" translate="yes" xml:space="preserve">
          <source>Discussion of HTTP headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7414bd7b2a8ae1b4152a32e27208f6ea5703ede" translate="yes" xml:space="preserve">
          <source>Display security and privacy policies In Firefox Developer Tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78de940f6bf90261043cb8bd08624772df60547" translate="yes" xml:space="preserve">
          <source>Disregarding DNT. The origin server is unable or unwilling to respect a tracking preference received from the requesting user agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1de6fc43e38e089c17a80c82ba419f8f473962" translate="yes" xml:space="preserve">
          <source>Do &lt;strong&gt;not&lt;/strong&gt; use this meta element like this for stating a document language:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c25376cd1e5d495d8c85d1b29c113dcd4496160" translate="yes" xml:space="preserve">
          <source>Do Not Track</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f963907a2dc441e4078146477cb1ac975253ce" translate="yes" xml:space="preserve">
          <source>Do Not Track on Wikipedia</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de6d660ffd0c31bb077df9301609dfb8cf69667" translate="yes" xml:space="preserve">
          <source>Do you want to provide different HTML depending on which browser is being used?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d09f4b8e17c5718c2731ce7ab9928e287257a4" translate="yes" xml:space="preserve">
          <source>Do-Not-Track</source>
          <target state="translated">Do-Not-Track</target>
        </trans-unit>
        <trans-unit id="e214b8a29923056887b7edf6635d90dcbb2abe88" translate="yes" xml:space="preserve">
          <source>Document</source>
          <target state="translated">Document</target>
        </trans-unit>
        <trans-unit id="54500ed3527305b0f92d5cf278622f552f491a43" translate="yes" xml:space="preserve">
          <source>Document directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2213ce4b36d0f4e6e226bd21f16b5d5bf80dcba" translate="yes" xml:space="preserve">
          <source>Document directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6b0754c2e6157428f7e2691227c09de666ec35" translate="yes" xml:space="preserve">
          <source>Document directives govern the properties of a document or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;worker&lt;/a&gt; environment to which a policy applies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6dfa8179f4637130555f525186dd9377736169" translate="yes" xml:space="preserve">
          <source>Does not work on Windows 7 and Windows 8.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea664539e7e07c3b3cb2d4e3bb71cc99d18e5b5b" translate="yes" xml:space="preserve">
          <source>Domain aliasing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b549bffd9a85f8fa78b065a75e77e845bc42471" translate="yes" xml:space="preserve">
          <source>Domain aliasing can be done for several reasons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690d7332b26bc38eab02d6b1abf316a940401914" translate="yes" xml:space="preserve">
          <source>Domain sharding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c61580d55d642952fbec533e8d3f2630a7d8e94" translate="yes" xml:space="preserve">
          <source>Domain=&amp;lt;domain-value&amp;gt; Optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4653bff510cf1118951874eb552343ce4eeea4" translate="yes" xml:space="preserve">
          <source>Download resumption in Internet Explorer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a862c2b21b5e1337de2b76d5e43ae1375117d34d" translate="yes" xml:space="preserve">
          <source>Downloads</source>
          <target state="translated">Downloads</target>
        </trans-unit>
        <trans-unit id="23d33e22acfcb9ecddb4a85f10607dc4ff49e23c" translate="yes" xml:space="preserve">
          <source>Draft</source>
          <target state="translated">Draft</target>
        </trans-unit>
        <trans-unit id="13ae8e0a7cb29b1ff62023de94998bfc639787c9" translate="yes" xml:space="preserve">
          <source>Draft document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc6d4101d699284c4ee49346220f3fb8a444994" translate="yes" xml:space="preserve">
          <source>Draft spec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8aba5130fcc62311d7ddc3b7380514a11ed8fe" translate="yes" xml:space="preserve">
          <source>Due to the &lt;a href=&quot;https://www.eff.org/deeplinks/2010/01/primer-information-theory-and-privacy&quot;&gt;configuration-based entropy&lt;/a&gt; increase, a modified value can be used to fingerprint the user, it is not recommended to change it and a Web site cannot trust this value to reflect the actual wish of the user. Site designers must not be over-zealous by using language detection via this header as it can lead to a poor user experience:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408eba332fcca84c3bed5ec905d05209bce63d2e" translate="yes" xml:space="preserve">
          <source>Due to their emphasis on authoring, WebDAV servers need to use
   authentication technology to protect not just access to a network
   resource, but the integrity of the resource as well.  Furthermore,
   the introduction of locking functionality requires support for
   authentication.

   A password sent in the clear over an insecure channel is an
   inadequate means for protecting the accessibility and integrity of a
   resource as the password may be intercepted.  Since Basic
   authentication for HTTP/1.1 performs essentially clear text
   transmission of a password, Basic authentication MUST NOT be used to
   authenticate a WebDAV client to a server unless the connection is
   secure.  Furthermore, a WebDAV server MUST NOT send a Basic
   authentication challenge in a WWW-Authenticate header unless the
   connection is secure.  An example of a secure connection would be a
   Transport Layer Security (TLS) connection employing a strong cipher
   suite and server authentication. 

   WebDAV applications MUST support the Digest authentication scheme
   [&lt;a href=&quot;https://tools.ietf.org/html/rfc2617&quot;&gt;RFC2617&lt;/a&gt;].  Since Digest authentication verifies that both parties to
   a communication know a shared secret, a password, without having to
   send that secret in the clear, Digest authentication avoids the
   security problems inherent in Basic authentication while providing a
   level of authentication that is useful in a wide range of scenarios.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997743d612e18993ff8dc7080968428d093101a4" translate="yes" xml:space="preserve">
          <source>During the same time, the need for an encrypted transport layer raised: the Web left the relative trustiness of a mostly academic network, to a jungle where advertisers, random individuals or criminals compete to get as much private information about people, try to impersonate them or even to replace data transmitted by altered ones. As the applications built over HTTP became more and more powerful, having access to more and more private information like address books, e-mail, or the geographic position of the user, the need to have TLS became ubiquitous even outside the e-commerce use case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b3251ec6e19bc2e780b0b452fffbe79113def2" translate="yes" xml:space="preserve">
          <source>Dynamic serving</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57313c5dd0c9956db75ecb6a66db1c8dbb3f5fdf" translate="yes" xml:space="preserve">
          <source>Dynamic. The origin server needs more information to determine tracking status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705ecd20fdc7a1a80cbce38adda833a8e258328f" translate="yes" xml:space="preserve">
          <source>ECMAScript (&lt;a href=&quot;https://www.iana.org/assignments/media-types/application/ecmascript&quot;&gt;&lt;em&gt;&lt;abbr&gt;IANA&lt;/abbr&gt; Specification&lt;/em&gt;&lt;/a&gt;) (&lt;a href=&quot;https://tools.ietf.org/html/rfc4329#section-8.2&quot;&gt;RFC 4329 Section 8.2&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d00f6ed181afbae6281cf892e585dcee85b274" translate="yes" xml:space="preserve">
          <source>ETag</source>
          <target state="translated">ETag</target>
        </trans-unit>
        <trans-unit id="a9cf203d9639d2de24fc7e1aabf9a3f1d1b216fd" translate="yes" xml:space="preserve">
          <source>ETag (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c187693ac73afbe58b0355bda0f434ddd57b14" translate="yes" xml:space="preserve">
          <source>ETag (RFC 7232)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2586de7225abd1a31095cd8e2595f05492c55926" translate="yes" xml:space="preserve">
          <source>ETags</source>
          <target state="translated">ETags</target>
        </trans-unit>
        <trans-unit id="91b64bf36619dc548bb6dc82aa7a3172dcb0fa4a" translate="yes" xml:space="preserve">
          <source>EU cookie directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aacf5c8fecb249d308c1a10d329efa9aa9c43e95" translate="yes" xml:space="preserve">
          <source>Each Hypertext Transfer Protocol (HTTP) message is either a request
   or a response.  A server listens on a connection for a request,
   parses each message received, interprets the message semantics in
   relation to the identified request target, and responds to that
   request with one or more response messages.  A client constructs
   request messages to communicate specific intentions, examines
   received responses to see if the intentions were carried out, and
   determines how to interpret the results.  This document defines
   HTTP/1.1 request and response semantics in terms of the architecture
   defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc7230&quot;&gt;RFC7230&lt;/a&gt;].

   HTTP provides a uniform interface for interacting with a resource
   (&lt;a href=&quot;#section-2&quot;&gt;Section 2&lt;/a&gt;), regardless of its type, nature, or implementation, via
   the manipulation and transfer of representations (&lt;a href=&quot;#section-3&quot;&gt;Section 3&lt;/a&gt;).

   HTTP semantics include the intentions defined by each request method
   (&lt;a href=&quot;#section-4&quot;&gt;Section 4&lt;/a&gt;), extensions to those semantics that might be described in
   request header fields (&lt;a href=&quot;#section-5&quot;&gt;Section 5&lt;/a&gt;), the meaning of status codes to
   indicate a machine-readable response (&lt;a href=&quot;#section-6&quot;&gt;Section 6&lt;/a&gt;), and the meaning of
   other control data and resource metadata that might be given in
   response header fields (&lt;a href=&quot;#section-7&quot;&gt;Section 7&lt;/a&gt;).

   This document also defines representation metadata that describe how
   a payload is intended to be interpreted by a recipient, the request
   header fields that might influence content selection, and the various
   selection algorithms that are collectively referred to as &quot;content
   negotiation&quot; (&lt;a href=&quot;#section-3.4&quot;&gt;Section 3.4&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057e4721fb960e50e6bc2f172224db4e1bf70d8b" translate="yes" xml:space="preserve">
          <source>Each Status-Code is described below, including a description of which
   method(s) it can follow and any metainformation required in the
   response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bafccf37828f0cf81554847666fb3201e53972e" translate="yes" xml:space="preserve">
          <source>Each browser performs MIME sniffing differently and under different circumstances. (For example, Safari will look at the file extension in the URL if the sent MIME type is unsuitable.) There are security concerns as some MIME types represent executable content. Servers can prevent MIME sniffing by sending the &lt;a href=&quot;../headers/x-content-type-options&quot;&gt;&lt;code&gt;X-Content-Type-Options&lt;/code&gt;&lt;/a&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82fa8700dcf214b80fbd4de6e7bf762e538223a6" translate="yes" xml:space="preserve">
          <source>Each client in the request chain may have its own cache, so it is
   common for a cache at an intermediary to receive conditional requests
   from other (outbound) caches.  Likewise, some user agents make use of
   conditional requests to limit data transfers to recently modified
   representations or to complete the transfer of a partially retrieved
   representation.

   If a cache receives a request that can be satisfied by reusing one of
   its stored 200 (OK) or 206 (Partial Content) responses, the cache
   SHOULD evaluate any applicable conditional header field preconditions
   received in that request with respect to the corresponding validators
   contained within the selected response.  A cache MUST NOT evaluate 

   conditional header fields that are only applicable to an origin
   server, found in a request with semantics that cannot be satisfied
   with a cached response, or applied to a target resource for which it
   has no stored responses; such preconditions are likely intended for
   some other (inbound) server.

   The proper evaluation of conditional requests by a cache depends on
   the received precondition header fields and their precedence, as
   defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-6&quot;&gt;Section&amp;nbsp;6 of [RFC7232]&lt;/a&gt;.  The If-Match and
   If-Unmodified-Since conditional header fields are not applicable to a
   cache.

   A request containing an If-None-Match header field (&lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-3.2&quot;&gt;Section&amp;nbsp;3.2 of
   [RFC7232]&lt;/a&gt;) indicates that the client wants to validate one or more of
   its own stored responses in comparison to whichever stored response
   is selected by the cache.  If the field-value is &quot;*&quot;, or if the
   field-value is a list of entity-tags and at least one of them matches
   the entity-tag of the selected stored response, a cache recipient
   SHOULD generate a 304 (Not Modified) response (using the metadata of
   the selected stored response) instead of sending that stored
   response.

   When a cache decides to revalidate its own stored responses for a
   request that contains an If-None-Match list of entity-tags, the cache
   MAY combine the received list with a list of entity-tags from its own
   stored set of responses (fresh or stale) and send the union of the
   two lists as a replacement If-None-Match header field value in the
   forwarded request.  If a stored response contains only partial
   content, the cache MUST NOT include its entity-tag in the union
   unless the request is for a range that would be fully satisfied by
   that partial stored response.  If the response to the forwarded
   request is 304 (Not Modified) and has an ETag header field value with
   an entity-tag that is not in the client's list, the cache MUST
   generate a 200 (OK) response for the client by reusing its
   corresponding stored response, as updated by the 304 response
   metadata (&lt;a href=&quot;#section-4.3.4&quot;&gt;Section 4.3.4&lt;/a&gt;).

   If an If-None-Match header field is not present, a request containing
   an If-Modified-Since header field (&lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-3.3&quot;&gt;Section&amp;nbsp;3.3 of [RFC7232]&lt;/a&gt;)
   indicates that the client wants to validate one or more of its own
   stored responses by modification date.  A cache recipient SHOULD
   generate a 304 (Not Modified) response (using the metadata of the
   selected stored response) if one of the following cases is true: 1)
   the selected stored response has a Last-Modified field-value that is
   earlier than or equal to the conditional timestamp; 2) no
   Last-Modified field is present in the selected stored response, but
   it has a Date field-value that is earlier than or equal to the
   conditional timestamp; or, 3) neither Last-Modified nor Date is 

   present in the selected stored response, but the cache recorded it as
   having been received at a time earlier than or equal to the
   conditional timestamp.

   A cache that implements partial responses to range requests, as
   defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc7233&quot;&gt;RFC7233&lt;/a&gt;], also needs to evaluate a received If-Range
   header field (&lt;a href=&quot;https://tools.ietf.org/html/rfc7233#section-3.2&quot;&gt;Section&amp;nbsp;3.2 of [RFC7233]&lt;/a&gt;) with respect to its selected
   stored response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdfff658f8638be3f51c025575b0ddaed39961ef" translate="yes" xml:space="preserve">
          <source>Each data type has some redundancy, that is &lt;em&gt;wasted space&lt;/em&gt;, in it. If text can typically have as much as 60% redundancy, this rate can be much higher for some other media like audio and video. Unlike text, these other media types are taking a lot of space to store and the need to regain this wasted space appeared very early. Engineers designed the optimized compression algorithm used by file formats designed for this specific purpose. Compression algorithms used for files can be grouped into two broad categories:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c418e981dde2783c397a4ab8566b1987e0ddccd" translate="yes" xml:space="preserve">
          <source>Each header field consists of a case-insensitive field name followed
   by a colon (&quot;:&quot;), optional leading whitespace, the field value, and
   optional trailing whitespace. 

     header-field   = field-name &quot;:&quot; OWS field-value OWS

     field-name     = token
     field-value    = *( field-content / obs-fold )
     field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]
     field-vchar    = VCHAR / obs-text

     obs-fold       = CRLF 1*( SP / HTAB )
                    ; obsolete line folding
                    ; see &lt;a href=&quot;#section-3.2.4&quot;&gt;Section 3.2.4&lt;/a&gt;

   The field-name token labels the corresponding field-value as having
   the semantics defined by that header field.  For example, the Date
   header field is defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1.1.2&quot;&gt;Section&amp;nbsp;7.1.1.2 of [RFC7231]&lt;/a&gt; as containing
   the origination timestamp for the message in which it appears.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa9777361801f65cdbd5d095a27001848c440f6" translate="yes" xml:space="preserve">
          <source>Each individual request is sent to a server, which will handle it and provide an answer, called the &lt;em&gt;response&lt;/em&gt;. Between this request and response there are numerous entities, collectively designated as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Proxy_server&quot;&gt;proxies&lt;/a&gt;, which perform different operations and act as gateways or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Cache&quot;&gt;caches&lt;/a&gt;, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d47e568ac317d800ba83293a6e6b145c10f0e3f" translate="yes" xml:space="preserve">
          <source>Each registered protocol name is associated with contact information
   and an optional set of specifications that details how the connection
   will be processed after it has been upgraded.

   Registrations happen on a &quot;First Come First Served&quot; basis (see
   &lt;a href=&quot;https://tools.ietf.org/html/rfc5226#section-4.1&quot;&gt;Section&amp;nbsp;4.1 of [RFC5226]&lt;/a&gt;) and are subject to the following rules:

   1.  A protocol-name token, once registered, stays registered forever.

   2.  The registration MUST name a responsible party for the
       registration.

   3.  The registration MUST name a point of contact.

   4.  The registration MAY name a set of specifications associated with
       that token.  Such specifications need not be publicly available.

   5.  The registration SHOULD name a set of expected &quot;protocol-version&quot;
       tokens associated with that token at the time of registration. 

   6.  The responsible party MAY change the registration at any time.
       The IANA will keep a record of all such changes, and make them
       available upon request.

   7.  The IESG MAY reassign responsibility for a protocol token.  This
       will normally only be used in the case when a responsible party
       cannot be contacted.

   This registration procedure for HTTP Upgrade Tokens replaces that
   previously defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2817#section-7.2&quot;&gt;Section&amp;nbsp;7.2 of [RFC2817]&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb1874585ee277130e7dcc804818855ef02a2e2" translate="yes" xml:space="preserve">
          <source>Each request for a URL is supposed to be treated as a unique and uncacheable request. A better way to indicate this is to use &lt;a href=&quot;cache-control&quot;&gt;&lt;code&gt;Cache-Control&lt;/code&gt;&lt;/a&gt;&lt;code&gt;: private&lt;/code&gt;, which is clearer to read and also signals that the object shouldn't be stored ever.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083351d889941c99f11bdb7f8dc5b5a5a90e3651" translate="yes" xml:space="preserve">
          <source>Early-Data</source>
          <target state="translated">Early-Data</target>
        </trans-unit>
        <trans-unit id="8440b9eb7d03917b2509b5baeab2a299ce257eb0" translate="yes" xml:space="preserve">
          <source>Edge</source>
          <target state="translated">Edge</target>
        </trans-unit>
        <trans-unit id="aa5e3465605004afca0f330dee1d92d60e4608d6" translate="yes" xml:space="preserve">
          <source>Edge 17 skips the &lt;a href=&quot;script-src&quot;&gt;&lt;code&gt;script-src&lt;/code&gt;&lt;/a&gt; directive (&lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/17415478/&quot;&gt;bug&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40943d342558e930e5fd4552c5671ad9d18db865" translate="yes" xml:space="preserve">
          <source>Edge Mobile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add94fac827b3ed02fee4c1b72173331645c25b8" translate="yes" xml:space="preserve">
          <source>Edit this page on MDN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a769fc9fd1bf50a69b3839fd2f92626878d5b626" translate="yes" xml:space="preserve">
          <source>Editor's Draft</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0aaf1ff183fe38a130caadf7977863f8e2a59f3" translate="yes" xml:space="preserve">
          <source>Editor's draft</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b56ed596b137c9da80b986161d0bd1c8d62cba" translate="yes" xml:space="preserve">
          <source>Editor's draft / Candidate recommendation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fcd0c7316a8c31f4e9ceb1db446cf33c197f076" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;&quot;enforce&quot;&lt;/code&gt; or &lt;code&gt;&quot;reporting&quot;&lt;/code&gt; depending on whether the &lt;a href=&quot;content-security-policy&quot;&gt;&lt;code&gt;Content-Security-Policy&lt;/code&gt;&lt;/a&gt; header or the &lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt; header is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d9968b1d7df53b6e4cf681453c3df54edc30bf" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;&quot;enforce&quot;&lt;/code&gt; or &lt;code&gt;&quot;reporting&quot;&lt;/code&gt; depending on whether the &lt;a href=&quot;headers/content-security-policy-report-only&quot;&gt;&lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt;&lt;/a&gt; header or the &lt;code&gt;Content-Security-Policy&lt;/code&gt; header is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa29e4650b1639a98c0c8f55d262398a02155fba" translate="yes" xml:space="preserve">
          <source>Either the string &quot;GMT&quot; for GMT timezone, or not specified, for local timezone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec5a0a958a1fbddcf0daab821af65ae5b6cc34b" translate="yes" xml:space="preserve">
          <source>Electronic mail address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98f953a2a328bdea00e564fed7dfd322a69cd6d" translate="yes" xml:space="preserve">
          <source>Electronic publication (EPUB)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70620ad9a50dbab17deb7f1669beeb98b33e7dd5" translate="yes" xml:space="preserve">
          <source>Enable CORS: I want to add CORS support to my server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a23cd75e8cc48555a5cc4d39dc5d353f54219c1" translate="yes" xml:space="preserve">
          <source>Enables DNS prefetching. This is what browsers do, if they support the feature, when this header is not present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f6f232156085ea4d4637fb11cb65dea424795d" translate="yes" xml:space="preserve">
          <source>Enables XSS filtering (usually default in browsers). If a cross-site scripting attack is detected, the browser will sanitize the page (remove the unsafe parts).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2afff7cdf670cfcd98e1bf3804e6db1cd9978584" translate="yes" xml:space="preserve">
          <source>Enables XSS filtering. If a cross-site scripting attack is detected, the browser will sanitize the page and report the violation. This uses the functionality of the CSP &lt;a href=&quot;content-security-policy/report-uri&quot;&gt;&lt;code&gt;report-uri&lt;/code&gt;&lt;/a&gt; directive to send a report.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c90c3404283e6479b83c3594ac6645fd7a76cf" translate="yes" xml:space="preserve">
          <source>Enables XSS filtering. Rather than sanitizing the page, the browser will prevent rendering of the page if an attack is detected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ebba1e22e214dfdd20ecfca28bb3fc46c19982" translate="yes" xml:space="preserve">
          <source>Enables a sandbox for the requested resource similar to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox&quot;&gt;sandbox&lt;/a&gt;&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c536a9d2dc890eb3a315dacecf7bf8af2ea7a0" translate="yes" xml:space="preserve">
          <source>Enables cross-site scripting filtering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f217de833d7c0f4da332bd436a93307529d3b5" translate="yes" xml:space="preserve">
          <source>Enabling HPKP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd97d929640fde2abf473682141dfee61b906111" translate="yes" xml:space="preserve">
          <source>Enabling reporting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51a5760383324ea2ced3708f0c4f21b3b6433db" translate="yes" xml:space="preserve">
          <source>Encoding data into base64 format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b844634b78bbf66c2386fb7400b4efd46ba2fc" translate="yes" xml:space="preserve">
          <source>Encrypted media</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb7917263fb0376ecaaebc6aea8b04a067f36021" translate="yes" xml:space="preserve">
          <source>End-to-end compression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93b3f3b09d62b69cd48fa61fb8317033f43c87d" translate="yes" xml:space="preserve">
          <source>End-to-end headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a78c23ebe3e022d382e262e5bb0fac3b0c04eb" translate="yes" xml:space="preserve">
          <source>Enforcing best practices for good user experiences</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="434a202c7ecffe7d7bd9b742b730a5afd1676889" translate="yes" xml:space="preserve">
          <source>Enforcing best practices for good user experiences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa0f5134bbe5f9da939c45f920a197f4634fba1" translate="yes" xml:space="preserve">
          <source>Ensure images are sized properly and are not too big for the viewport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a6cc6b1ec9b8b2e989114255b4da3ce2b2f166e" translate="yes" xml:space="preserve">
          <source>Ensures a resource will disown its opener when navigated to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f61151d2512a5c88d23bfe8d6fbd9a0947b4f37" translate="yes" xml:space="preserve">
          <source>Entity (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234e8581d4bf52bbea04d4ae883867b5f00f2402" translate="yes" xml:space="preserve">
          <source>Entity header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9024c46dde9f89740b2171b9280d89a9caba4424" translate="yes" xml:space="preserve">
          <source>Entity tags are used for comparing two or more entities from the same
   requested resource. HTTP/1.1 uses entity tags in the ETag (&lt;a href=&quot;#section-14.19&quot;&gt;section&lt;/a&gt;&lt;a href=&quot;#section-14.19&quot;&gt;14.19&lt;/a&gt;), If-Match (&lt;a href=&quot;#section-14.24&quot;&gt;section 14.24&lt;/a&gt;), If-None-Match (&lt;a href=&quot;#section-14.26&quot;&gt;section 14.26&lt;/a&gt;), and
   If-Range (&lt;a href=&quot;#section-14.27&quot;&gt;section 14.27&lt;/a&gt;) header fields. The definition of how they
   are used and compared as cache validators is in &lt;a href=&quot;#section-13.3.3&quot;&gt;section 13.3.3&lt;/a&gt;. An
   entity tag consists of an opaque quoted string, possibly prefixed by
   a weakness indicator.

      entity-tag = [ weak ] opaque-tag
      weak       = &quot;W/&quot;
      opaque-tag = quoted-string

   A &quot;strong entity tag&quot; MAY be shared by two entities of a resource
   only if they are equivalent by octet equality.

   A &quot;weak entity tag,&quot; indicated by the &quot;W/&quot; prefix, MAY be shared by
   two entities of a resource only if the entities are equivalent and
   could be substituted for each other with no significant change in
   semantics. A weak entity tag can only be used for weak comparison.

   An entity tag MUST be unique across all versions of all entities
   associated with a particular resource. A given entity tag value MAY
   be used for entities obtained by requests on different URIs. The use
   of the same entity tag value in conjunction with entities obtained by
   requests on different URIs does not imply the equivalence of those
   entities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="843ca4f28f9ce3aa7d78cfc1dd5d180a8db20d61" translate="yes" xml:space="preserve">
          <source>Entity tags uniquely representing the requested resources. They are a string of ASCII characters placed between double quotes (Like &lt;code&gt;&quot;675af34563dc-tr34&quot;&lt;/code&gt;) and may be prefixed by &lt;code&gt;W/&lt;/code&gt; to indicate that the weak comparison algorithm should be used (This is useless with &lt;code&gt;If-None-Match&lt;/code&gt; as it only uses that algorithm).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4831ed8a07834c227f88278424a465acad3a5a" translate="yes" xml:space="preserve">
          <source>Entity tags uniquely representing the requested resources. They are a string of ASCII characters placed between double quotes (Like &lt;code&gt;&quot;675af34563dc-tr34&quot;&lt;/code&gt;) and may be prefixed by &lt;code&gt;W/&lt;/code&gt; to indicate that the weak comparison algorithm should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f511403ebe3ad82f8791c9cc50f7078c288954a3" translate="yes" xml:space="preserve">
          <source>Entity tags uniquely representing the requested resources. They are a string of ASCII characters placed between double quotes (Like &lt;code&gt;&quot;675af34563dc-tr34&quot;&lt;/code&gt;). The method by which &lt;code&gt;ETag&lt;/code&gt; values are generated is not specified. Oftentimes, a hash of the content, a hash of the last modification timestamp, or just a revision number is used. For example, MDN uses a hash of hexadecimal digits of the wiki content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d3b3c670a7def682fbdd286ebd5fcf01de31d4" translate="yes" xml:space="preserve">
          <source>Entity-header fields define metainformation about the entity-body or,
   if no body is present, about the resource identified by the request.
   Some of this metainformation is OPTIONAL; some might be REQUIRED by
   portions of this specification.

       entity-header  = Allow                    ; &lt;a href=&quot;#section-14.7&quot;&gt;Section 14.7&lt;/a&gt;
                      | Content-Encoding         ; &lt;a href=&quot;#section-14.11&quot;&gt;Section 14.11&lt;/a&gt;
                      | Content-Language         ; &lt;a href=&quot;#section-14.12&quot;&gt;Section 14.12&lt;/a&gt;
                      | Content-Length           ; &lt;a href=&quot;#section-14.13&quot;&gt;Section 14.13&lt;/a&gt;
                      | Content-Location         ; &lt;a href=&quot;#section-14.14&quot;&gt;Section 14.14&lt;/a&gt;
                      | Content-MD5              ; &lt;a href=&quot;#section-14.15&quot;&gt;Section 14.15&lt;/a&gt;
                      | Content-Range            ; &lt;a href=&quot;#section-14.16&quot;&gt;Section 14.16&lt;/a&gt;
                      | Content-Type             ; &lt;a href=&quot;#section-14.17&quot;&gt;Section 14.17&lt;/a&gt;
                      | Expires                  ; &lt;a href=&quot;#section-14.21&quot;&gt;Section 14.21&lt;/a&gt;
                      | Last-Modified            ; &lt;a href=&quot;#section-14.29&quot;&gt;Section 14.29&lt;/a&gt;
                      | extension-header

       extension-header = message-header

   The extension-header mechanism allows additional entity-header fields
   to be defined without changing the protocol, but these fields cannot
   be assumed to be recognizable by the recipient. Unrecognized header
   fields SHOULD be ignored by the recipient and MUST be forwarded by
   transparent proxies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc77c92755cf792527e0b3edc88e46b61f8087b7" translate="yes" xml:space="preserve">
          <source>Error responses: a &lt;a href=&quot;status/404&quot;&gt;&lt;code&gt;404&lt;/code&gt;&lt;/a&gt; (Not Found) result page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">Errors</target>
        </trans-unit>
        <trans-unit id="ec4322ae064b7f4e2416acd40d4d58f17e5f8f12" translate="yes" xml:space="preserve">
          <source>Errors: CORSAllowOriginNotMatchingOrigin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4087c6aa16b5abf1735ae9f8137528c87023309b" translate="yes" xml:space="preserve">
          <source>Errors: CORSDidNotSucceed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1110c379846585f2593a508b8c164b5bd8320b76" translate="yes" xml:space="preserve">
          <source>Errors: CORSDisabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac4e756c8a76cbef1b33dca607cb3bc5b771e95" translate="yes" xml:space="preserve">
          <source>Errors: CORSExternalRedirectNotAllowed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce973b3c74a1ebbfbbd6d7dec66c6bb20ce1f763" translate="yes" xml:space="preserve">
          <source>Errors: CORSInvalidAllowHeader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a282fd28c28a400d13afa18351e51568b54396d2" translate="yes" xml:space="preserve">
          <source>Errors: CORSInvalidAllowMethod</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d43e50964c1cfd887f4afc94b47bcdd5d69570" translate="yes" xml:space="preserve">
          <source>Errors: CORSMIssingAllowCredentials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710e0ccb5287b4319b0c5fdee5593e1d13fa6e37" translate="yes" xml:space="preserve">
          <source>Errors: CORSMethodNotFound</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a307f601e16873b1a5a1472fa793e47e1b28b743" translate="yes" xml:space="preserve">
          <source>Errors: CORSMissingAllowHeaderFromPreflight</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d47284892dc16fb82eea87c1c413d4b5c528c8b" translate="yes" xml:space="preserve">
          <source>Errors: CORSMissingAllowOrigin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e949130b0899712b1a17c6d46a1f58dc1ad38e" translate="yes" xml:space="preserve">
          <source>Errors: CORSMultipleAllowOriginNotAllowed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe11294cab619d12140db3bf906980249f0d9b51" translate="yes" xml:space="preserve">
          <source>Errors: CORSNotSupportingCredentials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d941c8ccc9202a89b0022d5ed88c86d19e065a4" translate="yes" xml:space="preserve">
          <source>Errors: CORSOriginHeaderNotAdded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2583c03a065a201e0c7af7eb778cf128afcc99" translate="yes" xml:space="preserve">
          <source>Errors: CORSPreflightDidNotSucceed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a43f3bb8e46c7f4d0e112510dc95499734debf0d" translate="yes" xml:space="preserve">
          <source>Errors: CORSRequestNotHttp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e3d52572cfb5f282f24af08ceb3c93515e0c23" translate="yes" xml:space="preserve">
          <source>Establishing a connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c2c223b0f7d2f2a1d0a4ab149a50dae5eaf1dd" translate="yes" xml:space="preserve">
          <source>Evaluation (RFC 7232)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016549bb81a6b73cbdac91b27317bed690bbaf39" translate="yes" xml:space="preserve">
          <source>Even if both the client and the server supports the same compression algorithms, the server may choose not to compress the body of a response, if the identity value is also acceptable. Two common cases lead to this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e1dc57ed79bde6d7d9296899ff80637127740c" translate="yes" xml:space="preserve">
          <source>Even if identity and location are both described using a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/URL&quot;&gt;URL&lt;/a&gt;, they are two different concepts and it is useful sometimes to distinguished between them. This article introduces the &lt;a href=&quot;headers/alt-svc&quot;&gt;&lt;code&gt;Alt-Svc&lt;/code&gt;&lt;/a&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11701203cf55bb28a83c78028e1b759782a7ab9" translate="yes" xml:space="preserve">
          <source>Even if server-driven content negotiation is the most common way to agree on a specific representation of a resource, it has several drawbacks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b58599d2ecd8aca415a34fd71768d962e8e310" translate="yes" xml:space="preserve">
          <source>Even if the specification requires the method (and the body) not to be altered when the redirection is performed, not all user-agents align with it - you can still find this type of bugged software out there. It is therefore recommended to use the &lt;code&gt;301&lt;/code&gt; code only as a response for &lt;a href=&quot;../methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../methods/head&quot;&gt;&lt;code&gt;HEAD&lt;/code&gt;&lt;/a&gt; methods and to use the &lt;a href=&quot;308&quot;&gt;&lt;code&gt;308 Permanent Redirect&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;../methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; methods instead, as the method change is explicitly prohibited with this status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e9e00953556ca6c857baf9a61ba9002b374a14" translate="yes" xml:space="preserve">
          <source>Even if the specification requires the method (and the body) not to be altered when the redirection is performed, not all user-agents conform here - you can still find this type of bugged software out there. It is therefore recommended to set the &lt;code&gt;302&lt;/code&gt; code only as a response for &lt;a href=&quot;../methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../methods/head&quot;&gt;&lt;code&gt;HEAD&lt;/code&gt;&lt;/a&gt; methods and to use &lt;a href=&quot;307&quot;&gt;&lt;code&gt;307 Temporary Redirect&lt;/code&gt;&lt;/a&gt; instead, as the method change is explicitly prohibited in that case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41dab3c71327a38803685ef6e3cebc869962fcfb" translate="yes" xml:space="preserve">
          <source>Even if this method works, it adds an extra response/request exchange when the document has been changed. This impairs performance, and HTTP has a specific header to avoid this scenario: &lt;a href=&quot;headers/if-range&quot;&gt;&lt;code&gt;If-Range&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b284eb5d595f914af47d2a8c3a9cef82f913efb4" translate="yes" xml:space="preserve">
          <source>Even if this technique also works for internal links, you should try to avoid having internal redirects. A redirect has a significant performance cost (as an extra HTTP request is done) and if you can avoid it by correcting internal links, you should fix these links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58665e4007bca0cad4410abfb11d1a4668903330" translate="yes" xml:space="preserve">
          <source>Even with more complexity, introduced in HTTP/2 by encapsulating HTTP messages into frames, HTTP is generally designed to be simple and human readable. HTTP messages can be read and understood by humans, providing easier developer testing, and reduced complexity for new-comers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b42fb3b1821d636c208455d3a9009fab5579ed3" translate="yes" xml:space="preserve">
          <source>Evercookie by Samy Kamkar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b5a8683f9a1cf2ee2d67f073ba064ecc576032" translate="yes" xml:space="preserve">
          <source>Everyone, really.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49a3e37d7614909e74abaad869cfa8d5952bf40" translate="yes" xml:space="preserve">
          <source>Evolution of HTTP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="6dcd3f46d09547b62bf07ba9b2943c95d53ddae3" translate="yes" xml:space="preserve">
          <source>Example 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c56ea49918b9baed94cf4bc0ee9f324efc8841a" translate="yes" xml:space="preserve">
          <source>Example 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf4dab701189a344fa5ab06d7b87c11a74e3da0" translate="yes" xml:space="preserve">
          <source>Example 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4cd3ef194759e6a1bf205a2958b720d8edb10da" translate="yes" xml:space="preserve">
          <source>Example 4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcb2a7f833e9a3ee29881cf3f00069ceeab20571" translate="yes" xml:space="preserve">
          <source>Example 5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69126e599801a8577cf34e537a3e5b119797d966" translate="yes" xml:space="preserve">
          <source>Example 6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad75d0ce8eb620d0eb8c90ad36bb1d3ba100630" translate="yes" xml:space="preserve">
          <source>Example HPKP Header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f262b0de6886f68de9a7f3020d9645e1a46ad07" translate="yes" xml:space="preserve">
          <source>Example of typical subtypes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987339acda1c7e11edad694279b3ef232cafa98c" translate="yes" xml:space="preserve">
          <source>Example preflight request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1937f18faac9b560d6b0ad0c27d8e5021d3c2ec8" translate="yes" xml:space="preserve">
          <source>Example requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101e766cdf474de8672fa38603435f2c2f88941b" translate="yes" xml:space="preserve">
          <source>Example response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9047fddfc8910797ad5dcc2be127acbfe08b7f" translate="yes" xml:space="preserve">
          <source>Example responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="1391352a916b067bd98f31a68d100a8e123a5170" translate="yes" xml:space="preserve">
          <source>Example: Disable unsafe inline/eval, only allow loading of resources (images, fonts, scripts, etc.) over https:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179aebe7be456d632b5d789d99331eede78b73e3" translate="yes" xml:space="preserve">
          <source>Example: Don't implement the above policy yet; instead just report violations that would have occurred:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17700dcd76dcab4611e46cba8a84a5260c2c790" translate="yes" xml:space="preserve">
          <source>Example: Pre-existing site that uses too much inline code to fix but wants to ensure resources are loaded only over https and disable plugins:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="cd077131fc10d919fcb4af0bc52b5d5dc3bff60d" translate="yes" xml:space="preserve">
          <source>Examples of Access Control in Action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b05d16ad1706c69b98dcd1d0beab7d996df8be" translate="yes" xml:space="preserve">
          <source>Examples of access control scenarios</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6959ab8197d951dfd31c9bfb60d608f8853eea" translate="yes" xml:space="preserve">
          <source>Examples of this usage can be &lt;a href=&quot;#Preflighted_requests&quot;&gt;found above.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a7ed9127c8003c7810083e7bbc1569d8b66810" translate="yes" xml:space="preserve">
          <source>Examples of this usage can be &lt;a href=&quot;#Preflighted_requests&quot;&gt;found above&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47abb8e5ca6a2e13e7aa85756a29b3a05a3d8d7b" translate="yes" xml:space="preserve">
          <source>Examples of what you can do with Feature Policy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="57e9b7197782a4e7584bbc9820ab7355aa88a3d3" translate="yes" xml:space="preserve">
          <source>Examples: Common use cases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997886ce9b39820b9d7574fbb168082bb6c4cfb9" translate="yes" xml:space="preserve">
          <source>Except for the standard hop-by-hop headers (&lt;a href=&quot;keep-alive&quot;&gt;&lt;code&gt;Keep-Alive&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;transfer-encoding&quot;&gt;&lt;code&gt;Transfer-Encoding&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;te&quot;&gt;&lt;code&gt;TE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;trailer&quot;&gt;&lt;code&gt;Trailer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Upgrade&quot;&gt;&lt;code&gt;Upgrade&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;proxy-authorization&quot;&gt;&lt;code&gt;Proxy-Authorization&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;proxy-authenticate&quot;&gt;&lt;code&gt;Proxy-Authenticate&lt;/code&gt;&lt;/a&gt;), any hop-by-hop headers used by the message must be listed in the &lt;code&gt;Connection&lt;/code&gt; header, so that the first proxy knows it has to consume them and not forward them further. Standard hop-by-hop headers can be listed too (it is often the case of &lt;a href=&quot;keep-alive&quot;&gt;&lt;code&gt;Keep-Alive&lt;/code&gt;&lt;/a&gt;, but this is not mandatory).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7233a11fc2426584ed01a173a4d930d34926020b" translate="yes" xml:space="preserve">
          <source>Except when excluded below, a recipient cache or origin server MUST
   evaluate received request preconditions after it has successfully
   performed its normal request checks and just before it would perform
   the action associated with the request method.  A server MUST ignore
   all received preconditions if its response to the same request
   without those conditions would have been a status code other than a
   2xx (Successful) or 412 (Precondition Failed).  In other words,
   redirects and failures take precedence over the evaluation of
   preconditions in conditional requests. 

   A server that is not the origin server for the target resource and
   cannot act as a cache for requests on the target resource MUST NOT
   evaluate the conditional request header fields defined by this
   specification, and it MUST forward them if the request is forwarded,
   since the generating client intends that they be evaluated by a
   server that can provide a current representation.  Likewise, a server
   MUST ignore the conditional request header fields defined by this
   specification when received with a request method that does not
   involve the selection or modification of a selected representation,
   such as CONNECT, OPTIONS, or TRACE.

   Conditional request header fields that are defined by extensions to
   HTTP might place conditions on all recipients, on the state of the
   target resource in general, or on a group of resources.  For
   instance, the &quot;If&quot; header field in WebDAV can make a request
   conditional on various aspects of multiple resources, such as locks,
   if the recipient understands and implements that field (&lt;a href=&quot;https://tools.ietf.org/html/rfc4918#section-10.4&quot;&gt;[RFC4918],
   Section&amp;nbsp;10.4&lt;/a&gt;).

   Although conditional request header fields are defined as being
   usable with the HEAD method (to keep HEAD's semantics consistent with
   those of GET), there is no point in sending a conditional HEAD
   because a successful response is around the same size as a 304 (Not
   Modified) response and more useful than a 412 (Precondition Failed)
   response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c9949f0e8e682737f53bb3d3d209c13c6e1d5b" translate="yes" xml:space="preserve">
          <source>Executable script is only allowed from userscripts.example.com.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d47895b1210b1ebd4fa933059d36aed26cda284" translate="yes" xml:space="preserve">
          <source>Existing HTTP clients and user agents typically retain authentication
   information indefinitely.  HTTP does not provide a mechanism for the
   origin server to direct clients to discard these cached credentials,
   since the protocol has no awareness of how credentials are obtained 

   or managed by the user agent.  The mechanisms for expiring or
   revoking credentials can be specified as part of an authentication
   scheme definition.

   Circumstances under which credential caching can interfere with the
   application's security model include but are not limited to:

   o  Clients that have been idle for an extended period, following
      which the server might wish to cause the client to re-prompt the
      user for credentials.

   o  Applications that include a session termination indication (such
      as a &quot;logout&quot; or &quot;commit&quot; button on a page) after which the server
      side of the application &quot;knows&quot; that there is no further reason
      for the client to retain the credentials.

   User agents that cache credentials are encouraged to provide a
   readily accessible mechanism for discarding cached credentials under
   user control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ccac52b5d4274914636579bf1636b1d5fa966cc" translate="yes" xml:space="preserve">
          <source>Existing HTTP clients and user agents typically retain authentication
   information indefinitely. HTTP/1.1. does not provide a method for a
   server to direct clients to discard these cached credentials. This is
   a significant defect that requires further extensions to HTTP.
   Circumstances under which credential caching can interfere with the
   application's security model include but are not limited to:

      - Clients which have been idle for an extended period following
        which the server might wish to cause the client to reprompt the
        user for credentials.

      - Applications which include a session termination indication
        (such as a `logout' or `commit' button on a page) after which
        the server side of the application `knows' that there is no
        further reason for the client to retain the credentials.

   This is currently under separate study. There are a number of work-
   arounds to parts of this problem, and we encourage the use of
   password protection in screen savers, idle time-outs, and other
   methods which mitigate the security problems inherent in this
   problem. In particular, user agents which cache credentials are
   encouraged to provide a readily accessible mechanism for discarding
   cached credentials under user control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a76f4ceddd2c24dfba52fcd6415b4a5d7627655" translate="yes" xml:space="preserve">
          <source>Expanding the reach of your site. A common case is when your site resides under the &lt;code&gt;www.example.com&lt;/code&gt; domain and accessing your pages from &lt;code&gt;example.com&lt;/code&gt; should be possible, too. Redirections for &lt;code&gt;example.com&lt;/code&gt; pages to &lt;code&gt;www.example.com&lt;/code&gt; are set up in this case. You might also provide commonly used synonym names or frequent typos of your domain names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fc1be971a32518b08bb4967f47c3e29fc379b9" translate="yes" xml:space="preserve">
          <source>Expect</source>
          <target state="translated">Expect</target>
        </trans-unit>
        <trans-unit id="994027919b14e63b028676f8e18f24f8c3412b5f" translate="yes" xml:space="preserve">
          <source>Expect (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f1bb33df8415879d9607269fadc4b08f7884fc" translate="yes" xml:space="preserve">
          <source>Expect (RFC 7231)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac7eb9f8e739ef71916b8aa6eabe504d21db9ae" translate="yes" xml:space="preserve">
          <source>Expect-CT</source>
          <target state="translated">Expect-CT</target>
        </trans-unit>
        <trans-unit id="1782a86fff7281c9294c0d3eefa4ab6846695cc2" translate="yes" xml:space="preserve">
          <source>Expect-CT Extension for HTTP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79322ef6edc1926ecbca88fd7e24b3ff46c3ac45" translate="yes" xml:space="preserve">
          <source>Experimental spec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549fb9eb005687c11bca9c3462372257a7683df5" translate="yes" xml:space="preserve">
          <source>Experiments are in progress to design a better transport protocol more suited to HTTP. For example, Google is experimenting with &lt;a href=&quot;https://en.wikipedia.org/wiki/QUIC&quot;&gt;QUIC&lt;/a&gt; which builds on UDP to provide a more reliable and efficient transport protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c82119c31678afc6233c719096414eef0fb22b6" translate="yes" xml:space="preserve">
          <source>Expiration</source>
          <target state="translated">Expiration</target>
        </trans-unit>
        <trans-unit id="a99be3da0c9da2f3c64500b5ef8a8e48f503d127" translate="yes" xml:space="preserve">
          <source>Expires</source>
          <target state="translated">Expires</target>
        </trans-unit>
        <trans-unit id="cc75acb2b0ea3b677a15b0b6b818f64332802b2f" translate="yes" xml:space="preserve">
          <source>Expires (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668c321a385a7ec5effd27dc4959016e1b54db8c" translate="yes" xml:space="preserve">
          <source>Expires (RFC 7234)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798d2fe08024167fc3592a3e1fdd8f0482db3150" translate="yes" xml:space="preserve">
          <source>Expires=&amp;lt;date&amp;gt; Optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440f936591556c4ab22d4ca93b07905600bf80fc" translate="yes" xml:space="preserve">
          <source>Explains how a client and a server can negotiate a specific HTTP version and eventually upgrade the protocol version used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a639e6f336caa1c98ebcd19c35befb40a19c9aca" translate="yes" xml:space="preserve">
          <source>Extending a database through an append operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659087d3ca23db6ae11e0a43579b5f4a260dda11" translate="yes" xml:space="preserve">
          <source>Extension</source>
          <target state="translated">Extension</target>
        </trans-unit>
        <trans-unit id="a5be9d96e47f86f30faca0b0c0d8cd92b6b591df" translate="yes" xml:space="preserve">
          <source>Extension &lt;code&gt;Cache-Control&lt;/code&gt; directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef92b354ef2777bc846bf834005b52b7dd4a00e" translate="yes" xml:space="preserve">
          <source>Extension &lt;code&gt;Cache-Control&lt;/code&gt; directives are not part of the core HTTP caching standards document. Be sure to check the &lt;a href=&quot;#Browser_compatibility&quot;&gt;compatibility table&lt;/a&gt; for their support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9618205d36acb2ec9a802339b387cf754ed53de" translate="yes" xml:space="preserve">
          <source>External CSS stylesheets use the default policy (&lt;code&gt;no-referrer-when-downgrade&lt;/code&gt;) unless it's overwritten via an HTTP header that is set for a CSS stylesheet specifically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b4519004830e628fefbfc612f64b245ab37406" translate="yes" xml:space="preserve">
          <source>Extracting the Base64 encoded public key information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ca99fbea5a5ea4d775520c3099a29adbd2bbf4" translate="yes" xml:space="preserve">
          <source>F.1.  Changes for Both Client and Server Implementations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3444e81a7c395eacc8d894f9505a6b6ec9ed898" translate="yes" xml:space="preserve">
          <source>F.2.  Changes for Server Implementations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6a58de84dd929ed244644a2cc93d7d20768fb2" translate="yes" xml:space="preserve">
          <source>F.3.  Other Changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22da6d41863afa4c87a7a2a96539883a5b235c05" translate="yes" xml:space="preserve">
          <source>FTP is still acceptable at the top level (such as typed directly into the browser's URL bar, or the target of a link), although some browsers may delegate loading FTP content to another application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92fe61c3f61162d432bcc18c5c3c2721f89c4867" translate="yes" xml:space="preserve">
          <source>Faced with this error, browsers usually either abort the operation (for example, a download will be considered as non-resumable) or ask for the whole document again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a100ebc4c1820c605bd96d9dd279ff888640e2" translate="yes" xml:space="preserve">
          <source>Fallback</source>
          <target state="translated">Fallback</target>
        </trans-unit>
        <trans-unit id="eba72e67a897b4f1538c1c559bf91bf79d26f8df" translate="yes" xml:space="preserve">
          <source>FastCorp Inc. wants to disable &lt;code&gt;fullscreen&lt;/code&gt; for all cross-origin child frames, except for a specific &amp;lt;iframe&amp;gt;. It can do so by delivering the following HTTP response header to define a feature policy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c4b13be3aa4b1468bedb0d443187e381399c80" translate="yes" xml:space="preserve">
          <source>FastCorp Inc. wants to disable &lt;code&gt;geolocation&lt;/code&gt; for all cross-origin child frames, except for a specific &amp;lt;iframe&amp;gt;. It can do so by delivering the following HTTP response header to define a feature policy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b02ecda0275dbc6a16322d0aa2715bb1b0c7f16" translate="yes" xml:space="preserve">
          <source>Feature Policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="116ce4ea97fc76a7402a5b9f210f36fadfbb4c2b" translate="yes" xml:space="preserve">
          <source>Feature Policy allows web developers to selectively enable, disable, and modify the behavior of certain features and APIs in the browser. It is similar to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CSP&quot;&gt;Content Security Policy&lt;/a&gt; but controls features instead of security behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53bb4cebead9ce42d5d5eff5bdc667fd91758b5" translate="yes" xml:space="preserve">
          <source>Feature Policy allows you to control which origins can use which features, both in the top-level page and in embedded frames. Essentially, you write a policy, which is an allowed list of origins for each feature. For every feature controlled by Feature Policy, the feature is only enabled in the current document or frame if its origin matches the allowed list of origins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23cd7a78a2dc77e19ba57e025deceab5b480ee5d" translate="yes" xml:space="preserve">
          <source>Feature Policy provides a mechanism to explicitly declare what functionality is used (or not used), throughout your website. This allows you to lock in best practices, even as the codebase evolves over time &amp;mdash; as well as to more safely compose third-party content &amp;mdash; by limiting which features are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92799190c0f4fe5ecaee2952ecf286aa6cce9ac3" translate="yes" xml:space="preserve">
          <source>Feature Policy provides two ways to specify policies to control features:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0847c40e72979da8866a8e8b3f1f0cc411a2dad3" translate="yes" xml:space="preserve">
          <source>Feature Policy: Using Feature Policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcae4ecf5da500dd00bf9572a09b7e678697d109" translate="yes" xml:space="preserve">
          <source>Feature Policy&lt;br/&gt;&lt;small&gt;The definition of 'Feature-Policy' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294d4d9a4eaac5449bf61242940545b797efd4f7" translate="yes" xml:space="preserve">
          <source>Feature detection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cfcbb2b685a05f07291909f36952c99a4e2fe7b" translate="yes" xml:space="preserve">
          <source>Feature detection is where you don't try to figure out which browser is rendering your page, but instead, you check to see if the specific feature you need is available. If it's not, you use a fallback. There are never any rare cases where you should use the user agent string, such as to detect a browser which implements the behavior of an API differently. Rather, in such rare cases, you should implement a test to detect how the browser implements the API and then determine when and how to use it instead. A good current example of feature detection is as follows. Recently, Chrome has added experimental look behind support to regular expressions, but no other browser currently supports this. So, you might incorrectly assume you should do this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c726252d0d002492bfb760d3686808998bb8df" translate="yes" xml:space="preserve">
          <source>Feature policies on www.chromestatus.com</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7fb77650eb9c4f73d9377f06679ca2cd28df471" translate="yes" xml:space="preserve">
          <source>Feature-Policy</source>
          <target state="translated">Feature-Policy</target>
        </trans-unit>
        <trans-unit id="a6ee4ffa583da7bdf223c2ffed9d85ab239371e0" translate="yes" xml:space="preserve">
          <source>Feature-Policy: autoplay</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f9ca897eb5c9f44de8842f2516fb02a54faa2e" translate="yes" xml:space="preserve">
          <source>Feature-Policy: camera</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf16c6ee691c8e9ca8e2dbe87a3f347fcb570cc7" translate="yes" xml:space="preserve">
          <source>Feature-Policy: document-domain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe796e681d5c63dcc531be776ac43685da71889f" translate="yes" xml:space="preserve">
          <source>Feature-Policy: encrypted-media</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37767aecde5e9787909f7866d3735071b1ccad3d" translate="yes" xml:space="preserve">
          <source>Feature-Policy: fullscreen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9488de5430b2b3fc9fd436b5e2d0c394e296837e" translate="yes" xml:space="preserve">
          <source>Feature-Policy: geolocation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c61ebc183f28f44ab1b2b148b5d57942442df26" translate="yes" xml:space="preserve">
          <source>Feature-Policy: microphone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596057da4c0cdcb20ea8b614fd43950671e7a493" translate="yes" xml:space="preserve">
          <source>Feature-Policy: midi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae2a5e94ce91f2de51637745788fb01a6ad53dc" translate="yes" xml:space="preserve">
          <source>Feature-Policy: payment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6392e975cf7e0435d78f4e6d61f8527537c58cfd" translate="yes" xml:space="preserve">
          <source>Feature-Policy: vr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088204f1105dd468d38881f2fd12a0b4aa4c7aab" translate="yes" xml:space="preserve">
          <source>Feature-Policy:fullscreen</source>
          <target state="translated">Feature-Policy:fullscreen</target>
        </trans-unit>
        <trans-unit id="d710338755da08a83c18e218bac6cbaa1e2a4fd1" translate="yes" xml:space="preserve">
          <source>Feature-Policy:geolocation</source>
          <target state="translated">Feature-Policy:geolocation</target>
        </trans-unit>
        <trans-unit id="9d7e13756d87f97651352edd83fe4becad54f376" translate="yes" xml:space="preserve">
          <source>Feature-Policy:microphone</source>
          <target state="translated">Feature-Policy:microphone</target>
        </trans-unit>
        <trans-unit id="e7e6e3dcff550300eec2d95910564a70e893cba4" translate="yes" xml:space="preserve">
          <source>Features are each defined to have a default allowlist, which is one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e28fef517be6e0fc21d5716c7662e4801ad299" translate="yes" xml:space="preserve">
          <source>Fetch API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c16479e5749d322208146b5b5f7624d72ebd140" translate="yes" xml:space="preserve">
          <source>Fetch directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e53b45c9af742d503a22c70314dddb7873195091" translate="yes" xml:space="preserve">
          <source>Fetch directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5dfae050f11fd6283650bfb92f289b86d2ac98" translate="yes" xml:space="preserve">
          <source>Fetch directives control locations from which certain resource types may be loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916f35ff813a6743346055125d97c6cbba1aaedc" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'Access-Control-Allow-Credentials' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0678866e50722f12e36a5dc2fec0748a692fe2ca" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'Access-Control-Allow-Headers' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf87afd008c8c6a087d3cc6f98ba0277b9043b7" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'Access-Control-Allow-Methods' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f7ed2d1134249b47bfd1f0ca53f80515e1563f" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'Access-Control-Allow-Origin' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d65973f43b54eb3f3ef47447a2bae6cff6fe97" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'Access-Control-Expose-Headers' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8089c31c9e26d8f2db19edbf9e44a130bc5eddd3" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'Access-Control-Max-Age' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9397823a091bbc18047f30f651f6476462ab4fa8" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'Access-Control-Request-Headers' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f6f83e1801614fce5a5524369fe1de50f85da5" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'Access-Control-Request-Method' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1eb076c3812c097fec7c1be9899bd085c5fbf1" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'CORS' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe63ee35db7f3102d616e69a27e101cdcc18b63a" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'Origin header' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1446331a1b71bc30148510fc4d99d0e0ec91086f" translate="yes" xml:space="preserve">
          <source>Fetch&lt;br/&gt;&lt;small&gt;The definition of 'X-Content-Type-Options definition' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918815e8513a9d78892a5b82f5db40dddb1a7f3b" translate="yes" xml:space="preserve">
          <source>Fetching the root page of developer.mozilla.org, i.e. &lt;a href=&quot;https://developer.mozilla.org/&quot;&gt;http://developer.mozilla.org/&lt;/a&gt;, and telling the server that the user-agent would prefer the page in French, if possible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3253d0b90d63fd1a7b31fd3494e21aaa52e7e42e" translate="yes" xml:space="preserve">
          <source>File Transfer Protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7b57a8f84d5b2b2d5abb274bb773348457c9ea" translate="yes" xml:space="preserve">
          <source>File format compression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57fa91ed93807da407d7147d7099ef87d3eef96c" translate="yes" xml:space="preserve">
          <source>Filename suffixes are sometimes used, especially on Microsoft Windows. Not all operating systems consider these suffixes meaningful (such as Linux and MacOS), and there is no guarantee they are correct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1888d033ef09f73993a1ae6180b384a516770e4" translate="yes" xml:space="preserve">
          <source>Filtration based on &lt;a href=&quot;headers/origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt;, if any at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b7b1f402f1dad5cba5d5c6f4047891c00d3834" translate="yes" xml:space="preserve">
          <source>Finally, &lt;a href=&quot;headers/access-control-max-age&quot;&gt;&lt;code&gt;Access-Control-Max-Age&lt;/code&gt;&lt;/a&gt; gives the value in seconds for how long the response to the preflight request can be cached for without sending another preflight request. In this case, 86400 seconds is 24 hours. Note that each browser has a &lt;a href=&quot;headers/access-control-max-age&quot;&gt;maximum internal value&lt;/a&gt; that takes precedence when the &lt;code&gt;Access-Control-Max-Age&lt;/code&gt; is greater.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c162123e6b08c6245b8c567094309cf3046a7d6" translate="yes" xml:space="preserve">
          <source>Finding insecure requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ee6522335b033249255b4cc1d572993282aafb" translate="yes" xml:space="preserve">
          <source>Firefox</source>
          <target state="translated">Firefox</target>
        </trans-unit>
        <trans-unit id="3d69145991747b3ff98ca2ac235bf9a2b6c0b22b" translate="yes" xml:space="preserve">
          <source>Firefox 3.6 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a053be79e5c0ac7481cbdffd78827759a3ed9f5" translate="yes" xml:space="preserve">
          <source>Firefox 4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e75eacacb146d953aa91455b2699bff5088fb836" translate="yes" xml:space="preserve">
          <source>Firefox 5 handles the &lt;code&gt;Content-Disposition&lt;/code&gt; HTTP response header more effectively if both the &lt;code&gt;filename&lt;/code&gt; and &lt;code&gt;filename*&lt;/code&gt; parameters are provided; it looks through all provided names, using the &lt;code&gt;filename*&lt;/code&gt; parameter if one is available, even if a &lt;code&gt;filename&lt;/code&gt; parameter is included first. Previously, the first matching parameter would be used, thereby preventing a more appropriate name from being used. See &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=588781&quot;&gt;bug 588781&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389872f22235d2e890d3e24f0e0fb6d81e0c8a59" translate="yes" xml:space="preserve">
          <source>Firefox &lt;a href=&quot;https://dxr.mozilla.org/mozilla-central/rev/7ae377917236b7e6111146aa9fb4c073c0efc7f4/netwerk/protocol/http/nsCORSListenerProxy.cpp#1131&quot;&gt;caps this at 24 hours&lt;/a&gt; (86400 seconds) and Chromium at &lt;a href=&quot;https://cs.chromium.org/chromium/src/services/network/public/cpp/cors/preflight_result.cc?l=36&amp;amp;rcl=52002151773d8cd9ffc5f557cd7cc880fddcae3e&quot;&gt;10 minutes&lt;/a&gt; (600 seconds). Chromium also specifies a default value of 5 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1444ac74d1094f6f34b49da3ee9966b7b93f1731" translate="yes" xml:space="preserve">
          <source>Firefox Developer Tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f300fd41a795a419c45aee9c6cb726e738e71b7e" translate="yes" xml:space="preserve">
          <source>Firefox Developer Tools: using a source map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b319de38dd3b5708092c79d821e3e2547bbfeb" translate="yes" xml:space="preserve">
          <source>Firefox OS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b98a32baa6ee15d09f718291f659a3f7d5a387" translate="yes" xml:space="preserve">
          <source>Firefox OS devices identify themselves without any operating system indication; for example: &quot;Mozilla/5.0 (Mobile; rv:15.0) Gecko/15.0 Firefox/15.0&quot;. The web is the platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096d24033e6a963360da3b94208e68f8d97b00a8" translate="yes" xml:space="preserve">
          <source>Firefox OS has a four-digit version number:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0b8d61fb018abae298ec4b7eb6bf2ea815cea8" translate="yes" xml:space="preserve">
          <source>Firefox OS version number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b43f7fedde8c737f31357ef6642b9b7dec844af" translate="yes" xml:space="preserve">
          <source>Firefox UA string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5ecb0a55376afe3b1ad82fbe8b4cecc9e76924" translate="yes" xml:space="preserve">
          <source>Firefox Web Runtime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c516be8bc16e485b9c5dea3cac5637b2be7f8c3" translate="yes" xml:space="preserve">
          <source>Firefox and Chrome&lt;strong&gt; disable pin validation&lt;/strong&gt; for pinned hosts whose validated certificate chain terminates at a &lt;strong&gt;user-defined trust anchor&lt;/strong&gt; (rather than a built-in trust anchor). This means that for users who imported custom root certificates all pinning violations are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f46b1448185527825780f84cfe778a2558ec052f" translate="yes" xml:space="preserve">
          <source>Firefox currently only supports the &lt;code&gt;Large-Allocation&lt;/code&gt; header in our 32-bit Windows builds, as memory fragmentation is not an issue in 64-bit builds. If you are running a non-win32 version of Firefox, this error will appear. This check can be disabled with the &quot;dom.largeAllocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd814d6c03ca30a65e6eae11a110b64dbd4091ec" translate="yes" xml:space="preserve">
          <source>Firefox earlier than 3.6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e08ebaf6a034e084ac621e4a8de400a08ba9e7" translate="yes" xml:space="preserve">
          <source>Firefox for Android</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3b609703588318cf5eddb907cb036af5b8fa9f" translate="yes" xml:space="preserve">
          <source>Firefox for Echo Show</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70bde33b11b3ebf831139347906ee55c0954e773" translate="yes" xml:space="preserve">
          <source>Firefox for Fire TV</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa1b6f07af81be5e73ca90848517f82656d9b533" translate="yes" xml:space="preserve">
          <source>Firefox for Maemo (Nokia N900)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d796cd118178bed42189a33b56788596ce709a40" translate="yes" xml:space="preserve">
          <source>Firefox for iOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1947cf48de07acf77d4542c741b3b264b1d589" translate="yes" xml:space="preserve">
          <source>Firefox for iOS user agent string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520f59d4c4564c36ce2dffd8248ed3f436481f50" translate="yes" xml:space="preserve">
          <source>Firefox for iOS uses the default Mobile Safari UA string, with an additional &lt;strong&gt;FxiOS/&amp;lt;version&amp;gt;&lt;/strong&gt; token, similar to how &lt;a href=&quot;https://developer.chrome.com/multidevice/user-agent#chrome_for_ios_user_agent&quot;&gt;Chrome for iOS identifies itself&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d9b72ae732fc5ec0d2b8c7b9205f083804989f" translate="yes" xml:space="preserve">
          <source>Firefox has moved to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Multiprocess_Firefox&quot;&gt;multiprocess architecture&lt;/a&gt;, and this architecture is required in order to support the &lt;code&gt;Large-Allocation&lt;/code&gt; header. Some &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/SDK&quot;&gt;legacy Addons&lt;/a&gt; can prevent Firefox from using this new, faster, multiprocess architecture. If you have one of these Addons installed, then we will continue to use the old single process architecuture for compatibility, and cannot handle the &lt;code&gt;Large-Allocation&lt;/code&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74fa353bc27c77608b28b6a494fb71634a8d1229" translate="yes" xml:space="preserve">
          <source>Firefox user agent string reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824138edb7e10e6cc870e036060b42fe43828628" translate="yes" xml:space="preserve">
          <source>Firefox's console displays messages in its console when requests fail due to CORS. Part of the error text is a &quot;reason&quot; message that provides added insight into what went wrong. The reason messages are listed below; click the message to open an article explaining the error in more detail and offering possible solutions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1c6e60d05a2c5211575867279c806da9425465" translate="yes" xml:space="preserve">
          <source>Firefox, Chrome and Safari do not support multiple origins in the Access-Control-Allow-Origin header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be168c2fee1a2d9fa42cc62fef4298c4cbcefbf2" translate="yes" xml:space="preserve">
          <source>Firefox/xyz</source>
          <target state="translated">Firefox/xyz</target>
        </trans-unit>
        <trans-unit id="f614dfafdbd42e06d5c689e2cc52f2820578b824" translate="yes" xml:space="preserve">
          <source>Firefox: &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1309358&quot;&gt;bug 1309358&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0200dffc7bdc64d4a349f323b1653382469567" translate="yes" xml:space="preserve">
          <source>Fires a &lt;code&gt;SecurityPolicyViolationEvent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b748324a443374f003fb0c40ffc43547df0d368f" translate="yes" xml:space="preserve">
          <source>First you need to extract the public key information from your certificate or key file and encode them using Base64.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c56777de18c704b8472efc7f29607549036e406b" translate="yes" xml:space="preserve">
          <source>First, the request. The preflight request is an &lt;a href=&quot;../methods/options&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt; request which includes some combination of the three preflight request headers: &lt;a href=&quot;access-control-request-method&quot;&gt;&lt;code&gt;Access-Control-Request-Method&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;access-control-request-headers&quot;&gt;&lt;code&gt;Access-Control-Request-Headers&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt;, such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1856a70ba04296bbf62c2e423de0fbdcfb0f5adf" translate="yes" xml:space="preserve">
          <source>Flow of an HTTP session</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbad51a46a03dbd80a644d3f941e3c1172162b3" translate="yes" xml:space="preserve">
          <source>Focus Version (Rendering Engine)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c6a4ca5cb7ee3279f46162d43efe44a37848d9" translate="yes" xml:space="preserve">
          <source>Focus for Android</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c96a14d8cf5e47753d46702539d3958d06bb67a" translate="yes" xml:space="preserve">
          <source>Focus for iOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5bdfcda9154f616d3599ff8019fe359c3f4231" translate="yes" xml:space="preserve">
          <source>Followed by a second connection and request to fetch the image (followed by a response to that request):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1d332ceb92dcde1fcd283f80c52096a5c624f8" translate="yes" xml:space="preserve">
          <source>Footnote 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e8427dcb2cd9ff2779aa2b38c7e477133f780c" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;../methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../methods/head&quot;&gt;&lt;code&gt;HEAD&lt;/code&gt;&lt;/a&gt; methods, to update a cached entity that has an associated &lt;a href=&quot;etag&quot;&gt;&lt;code&gt;ETag&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523ad4bead51d0b08a4fff5dbbe8221c7a8666b5" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;../methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../methods/head&quot;&gt;&lt;code&gt;HEAD&lt;/code&gt;&lt;/a&gt; methods, used in combination with an &lt;a href=&quot;range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; header, it can guarantee that the new ranges requested comes from the same resource than the previous one. If it doesn't match, then a &lt;a href=&quot;../status/416&quot;&gt;&lt;code&gt;416&lt;/code&gt;&lt;/a&gt;(Range Not Satisfiable) response is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a5e026c5b9f4e6d8669a37e565175368c88cdf" translate="yes" xml:space="preserve">
          <source>For DAV properties, the name of the property is also the same as the
   name of the XML element that contains its value.  In the section
   below, the final line of each section gives the element type
   declaration using the format defined in [&lt;a href=&quot;#ref-REC-XML&quot;&gt;REC-XML&lt;/a&gt;].  The &quot;Value&quot;
   field, where present, specifies further restrictions on the allowable
   contents of the XML element using BNF (i.e., to further restrict the
   values of a PCDATA element).

   A protected property is one that cannot be changed with a PROPPATCH
   request.  There may be other requests that would result in a change
   to a protected property (as when a LOCK request affects the value of
   DAV:lockdiscovery).  Note that a given property could be protected on
   one type of resource, but not protected on another type of resource.

   A computed property is one with a value defined in terms of a
   computation (based on the content and other properties of that
   resource, or even of some other resource).  A computed property is
   always a protected property.

   COPY and MOVE behavior refers to local COPY and MOVE operations.

   For properties defined based on HTTP GET response headers (DAV:get*),
   the header value could include LWS as defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;], &lt;a href=&quot;#section-4.2&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;.  Server implementors SHOULD strip LWS from these values before
   using as WebDAV property values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7578507963f5f6a92a4ce0b4b4477e8db695266c" translate="yes" xml:space="preserve">
          <source>For Nginx, the command to set up this header is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1714ef110b1269230d283611695b8af7bcd041c3" translate="yes" xml:space="preserve">
          <source>For an example of a custom 404 page, see &lt;a href=&quot;https://developer.mozilla.org/en-US/404&quot;&gt;MDN's 404 page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da755a1735ea720fcbdf190446a592e95aff7a8" translate="yes" xml:space="preserve">
          <source>For authoring to commence, a client needs to discover the
   capabilities and locations of the available Collections.  Service
   Documents are designed to support this discovery process.

   How Service Documents are discovered is not defined in this
   specification. 

   Service Documents are identified with the &quot;application/atomsvc+xml&quot;
   media type (see &lt;a href=&quot;#section-16.2&quot;&gt;Section 16.2&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc6e3c719ad40719899f3731172d36e94077ff2" translate="yes" xml:space="preserve">
          <source>For compression, end-to-end compression is where the largest performance improvements of Web sites reside. End-to-end compression refers to a compression of the body of a message that is done by the server and will last unchanged until it reaches the client. Whatever the intermediate nodes are, they leave the body untouched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f988728409b019db831b62218300a55ac3d394" translate="yes" xml:space="preserve">
          <source>For convenience, this protocol can be referred to as the &quot;Atom
   Protocol&quot; or &quot;AtomPub&quot;.  The following terminology is used by this
   specification:

   o  URI - A Uniform Resource Identifier as defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;RFC3986&lt;/a&gt;].  In
      this specification, the phrase &quot;the URI of a document&quot; is
      shorthand for &quot;a URI which, when dereferenced, is expected to
      produce that document as a representation&quot;.

   o  IRI - An Internationalized Resource Identifier as defined in
      [&lt;a href=&quot;https://tools.ietf.org/html/rfc3987&quot;&gt;RFC3987&lt;/a&gt;].  Before an IRI found in a document is used by HTTP, the
      IRI is first converted to a URI.  See &lt;a href=&quot;#section-4.1&quot;&gt;Section 4.1&lt;/a&gt;.

   o  Resource - A network-accessible data object or service identified
      by an IRI, as defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;].  See [&lt;a href=&quot;#ref-REC-webarch&quot;&gt;REC-webarch&lt;/a&gt;] for further
      discussion on Resources.

   o  relation (or &quot;relation of&quot;) - Refers to the &quot;rel&quot; attribute value
      of an atom:link element.

   o  Representation - An entity included with a request or response as
      defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;].

   o  Collection - A Resource that contains a set of Member Resources.
      Collections are represented as Atom Feeds.  See &lt;a href=&quot;#section-9&quot;&gt;Section 9&lt;/a&gt;. 

   o  Member (or Member Resource) - A Resource whose IRI is listed in a
      Collection by an atom:link element with a relation of &quot;edit&quot; or
      &quot;edit-media&quot;.  See &lt;a href=&quot;#section-9.1&quot;&gt;Section 9.1&lt;/a&gt;.  The protocol defines two kinds of
      Members:

      *  Entry Resource - Members of a Collection that are represented
         as Atom Entry Documents, as defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;RFC4287&lt;/a&gt;].

      *  Media Resource - Members of a Collection that have
         representations other than Atom Entry Documents.

   o  Media Link Entry - An Entry Resource that contains metadata about
      a Media Resource.  See &lt;a href=&quot;#section-9.6&quot;&gt;Section 9.6&lt;/a&gt;.

   o  Workspace - A named group of Collections.  See &lt;a href=&quot;#section-8.1&quot;&gt;Section 8.1&lt;/a&gt;.

   o  Service Document - A document that describes the location and
      capabilities of one or more Collections, grouped into Workspaces.
      See &lt;a href=&quot;#section-8&quot;&gt;Section 8&lt;/a&gt;.

   o  Category Document - A document that describes the categories
      allowed in a Collection.  See &lt;a href=&quot;#section-7&quot;&gt;Section 7&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef31d3a1350a01572c86bb4dfa3d00e0c975e26" translate="yes" xml:space="preserve">
          <source>For each policy-controlled feature, the browser maintains a list of origins for which the feature is enabled, known as an allowlist. If you do not specify a policy for a feature, then a default allowlist will be used. The default allowlist is specific to each feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbfd900d40adcb99301092c21f8010e24f933f46" translate="yes" xml:space="preserve">
          <source>For example when editing MDN, the current wiki content is hashed and put into an &lt;code&gt;Etag&lt;/code&gt; in the response:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9445e49e152cffd5d9a04a8f80bbd49732b55bc8" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;https://www.browserleaks.com/firefox&quot;&gt;a script on Browserleaks&lt;/a&gt; highlights what Firefox reveals when queried by a simple script running on the site (you can find the code in &lt;a href=&quot;https://browserleaks.com/firefox#more&quot;&gt;https://browserleaks.com/firefox#more&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b899bc979c38aad573a87de3d6fa69123c484f" translate="yes" xml:space="preserve">
          <source>For example, allow all browsing contexts within this iframe to use fullscreen:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b715bba658a875ffba997c7f848a3f6b1c1f7c" translate="yes" xml:space="preserve">
          <source>For example, if &quot;&lt;code&gt;Content-Language: de-DE&lt;/code&gt;&quot; is set, it says that the document is intended for German language speakers (however, it doesn't indicate the document is written in German. For example, it might be written in English as part of a language course for German speakers).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6412826a466b2db302aa194f4e3daf55e5d61efd" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;Domain=mozilla.org&lt;/code&gt; is set, then cookies are included on subdomains like &lt;code&gt;developer.mozilla.org&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0625b9fc57344582bbde2ab4696157ad3f42eb" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;Path=/docs&lt;/code&gt; is set, these paths will match:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa9700b85e0e01538fcca2eb77f677f69026288f" translate="yes" xml:space="preserve">
          <source>For example, if the page &lt;code&gt;https://service.tld/fetchdata&lt;/code&gt; were requested, and the HTTP response is &quot;301 Moved Permanently&quot;, &quot;307 Temporary Redirect&quot;, or &quot;308 Permanent Redirect&quot; with a &lt;code&gt;Location&lt;/code&gt; of &lt;code&gt;https://anotherservice.net/getdata&lt;/code&gt;, the CORS request will fail in this manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b87738a4c88c7a7b6a1a09e51a26bf1a734d5d4" translate="yes" xml:space="preserve">
          <source>For example, if the response includes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e0a70fb691c18fbdd0bd050b60e272a1fe413f" translate="yes" xml:space="preserve">
          <source>For example, in Apache, add a line such as the following to the server's configuration (within the appropriate &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;Files&amp;gt;&lt;/code&gt;, or &lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt; section). The configuration is typically found in a &lt;code&gt;.conf&lt;/code&gt; file (&lt;code&gt;httpd.conf&lt;/code&gt; and &lt;code&gt;apache.conf&lt;/code&gt; are common names for these), or in an &lt;code&gt;.htaccess&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619f3c064cc0ce3bc00c710809c1ce33e001a212" translate="yes" xml:space="preserve">
          <source>For example, sending the result of a form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b184b5ed58eb6819039876c32250bc43b4bad555" translate="yes" xml:space="preserve">
          <source>For example, suppose web content on domain &lt;code&gt;http://foo.example&lt;/code&gt; wishes to invoke content on domain &lt;code&gt;http://bar.other&lt;/code&gt;. Code of this sort might be used within JavaScript deployed on foo.example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20e4a9531f0f953723ad2bce29ba67c92820b20" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;CONNECT&lt;/code&gt; method can be used to access websites that use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SSL&quot;&gt;SSL&lt;/a&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTTPS&quot;&gt;HTTPS&lt;/a&gt;). The client asks an HTTP Proxy server to tunnel the TCP connection to the desired destination. The server then proceeds to make the connection on behalf of the client. Once the connection has been established by the server, the Proxy server continues to proxy the TCP stream to and from the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71916a917e381d9f4baa72eb7d0f481b27298684" translate="yes" xml:space="preserve">
          <source>For example, the following are equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32905633351c047f12f27629c2b7dbcbd3258eb" translate="yes" xml:space="preserve">
          <source>For example, the server may reject a request if its &lt;a href=&quot;content-length&quot;&gt;&lt;code&gt;Content-Length&lt;/code&gt;&lt;/a&gt; is too large.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d63752de4fee204887b96a1631e06acc76c5193f" translate="yes" xml:space="preserve">
          <source>For example, this blocks the &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; from using the camera and microphone:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="667503768ab9f00b3c857611676b705bf222dc50" translate="yes" xml:space="preserve">
          <source>For example, to allow a site at https://amazing.site to access the resource using CORS, the header should be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1f722176891e42941f464101332b2ba20f6189" translate="yes" xml:space="preserve">
          <source>For example, to allow code from the origin &lt;code&gt;http://mozilla.org&lt;/code&gt; to access the resource, you can specify:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c8dcd604f2bec51e5cc439af7d8b146ce60c0ce" translate="yes" xml:space="preserve">
          <source>For example, to block all content from using the Geolocation API across your site:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc7ca2973a124b54e9384bba7dd4138b39eb2ca" translate="yes" xml:space="preserve">
          <source>For images, &lt;code&gt;gif&lt;/code&gt; or &lt;code&gt;png&lt;/code&gt; are using loss-less compression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96d0e055aab7967e098e229f35a70f7d0cf4499" translate="yes" xml:space="preserve">
          <source>For inline styles or styles created from APIs like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style&quot;&gt;&lt;code&gt;HTMLElement.style&lt;/code&gt;&lt;/a&gt;, the owner document's referrer policy is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84bf50840f620c842f8d504aeebea80f2ae78a0a" translate="yes" xml:space="preserve">
          <source>For locking mechanisms, it is the opposite: Web developers need to issue a request with the proper headers, while webmasters can mostly rely on the application to carry out the checks for them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05bc2f18a1040cbebb023b0b22da7d3057050814" translate="yes" xml:space="preserve">
          <source>For more details on Firefox and Gecko based user agent strings, see the &lt;a href=&quot;user-agent/firefox&quot;&gt;Firefox user agent string reference&lt;/a&gt;. The UA string of Firefox itself is broken down into four components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d24847af6c0b28f664c1b1ecd25eca36f5dc16" translate="yes" xml:space="preserve">
          <source>For more details see &lt;a href=&quot;feature_policy/using_feature_policy&quot;&gt;Using Feature Policy&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f2fd29856862ed0ab79e6861cc4858f4155a7dc" translate="yes" xml:space="preserve">
          <source>For more details, see also the &lt;a href=&quot;#Freshness&quot;&gt;Freshness&lt;/a&gt; section below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a6b38e5e421526b3d5933f3b867e718bd90436" translate="yes" xml:space="preserve">
          <source>For more information, see also this article on &lt;a href=&quot;../csp&quot;&gt;Content Security Policy (CSP)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3aa6b680bc6518edc5c36b2eb482864b073f5d2" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;../public_key_pinning&quot;&gt;HTTP Public Key Pinning&lt;/a&gt; article.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6388d0122d4c6699e1cf73b26f4fab54e1e4ece" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;public-key-pins&quot;&gt;&lt;code&gt;Public-Key-Pins&lt;/code&gt;&lt;/a&gt; header reference page and the &lt;a href=&quot;../public_key_pinning&quot;&gt;HTTP Public Key Pinning&lt;/a&gt; article.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d858e940de2d5add12c93eacce99796fbd8dc3" translate="yes" xml:space="preserve">
          <source>For more information, see the guide on &lt;a href=&quot;../cookies&quot;&gt;HTTP cookies&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf003bb7d49f08a37fe6d4505f868da1702a5d5" translate="yes" xml:space="preserve">
          <source>For more information, see the main &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTTP/Feature_Policy&quot;&gt;Feature Policy&lt;/a&gt; article.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c13a01882beedd60ef040f694851d73933cf613" translate="yes" xml:space="preserve">
          <source>For more prevention tips, see the &lt;a href=&quot;https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)_Prevention_Cheat_Sheet&quot;&gt;OWASP CSRF prevention cheat sheet&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b991665d6c852df1848b14e1c2237629d3e471a4" translate="yes" xml:space="preserve">
          <source>For more, see &lt;a href=&quot;https://en.wikipedia.org/wiki/HTTP_cookie#EU_cookie_directive&quot;&gt;this Wikipedia section&lt;/a&gt; and consult state laws for the latest and most accurate information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16bc316a5e9428e01ce42d164953682ad4eeadaf" translate="yes" xml:space="preserve">
          <source>For multipart entities the &lt;code&gt;boundary&lt;/code&gt; directive is required, which consists of 1 to 70 characters from a set of characters known to be very robust through email gateways, and not ending with white space. It is used to encapsulate the boundaries of the multiple parts of the message. Often the header boundary is prepended by two dashes in the body and the final boundary also have a two dashes appended to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093b1094cde6e7f4f4d8f8b971af7a8990963019" translate="yes" xml:space="preserve">
          <source>For new content, you can start developing with a policy that disables all the features. This approach ensures that none of the functionality is introduced. When applying a policy to existing content, testing is likely required to verify it continues to work as expected. This is especially important for embedded or third-party content that you do not control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f39ad9de038e309432fa2abc7e02992cadbd96a" translate="yes" xml:space="preserve">
          <source>For nginx, you will need to specify a location that you are going to protect and the &lt;code&gt;auth_basic&lt;/code&gt; directive that provides the name to the password-protected area. The &lt;code&gt;auth_basic_user_file&lt;/code&gt; directive then points to a .htpasswd file containing the encrypted user credentials, just like in the Apache example above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70553b80e8be103814c1eb5f51fa3a904090e239" translate="yes" xml:space="preserve">
          <source>For other methods, and in particular for &lt;a href=&quot;../methods/put&quot;&gt;&lt;code&gt;PUT&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;If-Match&lt;/code&gt; can be used to prevent the &lt;a href=&quot;https://www.w3.org/1999/04/Editing/#3.1&quot;&gt;lost update problem&lt;/a&gt;. It can check if the modification of a resource that the user wants to upload will not override another change that has been done since the original resource was fetched. If the request cannot be fulfilled, the &lt;a href=&quot;../status/412&quot;&gt;&lt;code&gt;412&lt;/code&gt;&lt;/a&gt; (Precondition Failed) response is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538225086d2d3b055913158dd5b4c3b9bfc1f097" translate="yes" xml:space="preserve">
          <source>For other methods, and in particular for &lt;a href=&quot;../methods/put&quot;&gt;&lt;code&gt;PUT&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;If-None-Match&lt;/code&gt; used with the &lt;code&gt;*&lt;/code&gt; value can be used to save a file not known to exist, guaranteeing that another upload didn't happen before, losing the data of the previous put; this problem is a variation of the &lt;a href=&quot;https://www.w3.org/1999/04/Editing/#3.1&quot;&gt;lost update problem&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89936fcb3c720f2a1e2c92027641b334e9357ffd" translate="yes" xml:space="preserve">
          <source>For other products based on Gecko, the string can take one of two forms, where the tokens have the same meaning except those noted below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907135173500e7b45556d497127edb70bd3fb716" translate="yes" xml:space="preserve">
          <source>For reasons of security and privacy, it is necessary to make a
   distinction between &quot;shared&quot; and &quot;non-shared&quot; caches. A non-shared
   cache is one that is accessible only to a single user. Accessibility
   in this case SHOULD be enforced by appropriate security mechanisms.
   All other caches are considered to be &quot;shared.&quot; Other sections of 

   this specification place certain constraints on the operation of
   shared caches in order to prevent loss of privacy or failure of
   access controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257548a557c142ce44b1aa876c1f52d0b2cfeb6c" translate="yes" xml:space="preserve">
          <source>For requests &lt;em&gt;without credentials&lt;/em&gt;, the literal value &quot;*&quot; can be specified, as a wildcard; the value tells browsers to allow requesting code from any origin to access the resource. Attempting to use the wildcard with credentials &lt;a href=&quot;../cors/errors/corsnotsupportingcredentials&quot;&gt;will result in an error&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351e6c404b20eecdc808fd67608ccc7928ea6386" translate="yes" xml:space="preserve">
          <source>For security reasons, browsers restrict cross-origin HTTP requests initiated from within scripts. For example, &lt;code&gt;XMLHttpRequest&lt;/code&gt; and the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch API&lt;/a&gt; follow the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;same-origin policy&lt;/a&gt;. This means that a web application using those APIs can only request HTTP resources from the same origin the application was loaded from, unless the response from the other origin includes the right CORS headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3a9635da3f4811be8395ffd6f2c7c100ed7868" translate="yes" xml:space="preserve">
          <source>For text documents without a specific subtype, &lt;code&gt;text/plain&lt;/code&gt; should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01fd2dd2707385a8305b768f33bb65eb7bcb3f6d" translate="yes" xml:space="preserve">
          <source>For the files in the application that will not change, you can usually add aggressive caching by sending the response header below. This includes static files that are served by the application such as images, CSS files and JavaScript files, for example. In addition, see also the &lt;code&gt;Expires&lt;/code&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f9208ec82cf7fb7519a3acacb255f0ed8d2472" translate="yes" xml:space="preserve">
          <source>For the purpose of defining the behavior of caches and non-caching
   proxies, we divide HTTP headers into two categories:

      - End-to-end headers, which are  transmitted to the ultimate
        recipient of a request or response. End-to-end headers in
        responses MUST be stored as part of a cache entry and MUST be
        transmitted in any response formed from a cache entry.

      - Hop-by-hop headers, which are meaningful only for a single
        transport-level connection, and are not stored by caches or
        forwarded by proxies.

   The following HTTP/1.1 headers are hop-by-hop headers:

      - Connection
      - Keep-Alive
      - Proxy-Authenticate
      - Proxy-Authorization
      - TE
      - Trailers
      - Transfer-Encoding
      - Upgrade

   All other headers defined by HTTP/1.1 are end-to-end headers.

   Other hop-by-hop headers MUST be listed in a Connection header,
   (&lt;a href=&quot;#section-14.10&quot;&gt;section 14.10&lt;/a&gt;) to be introduced into HTTP/1.1 (or later).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21bafa062922688ae091d5ac581f85b2253ab9b7" translate="yes" xml:space="preserve">
          <source>For these reasons, pipelining has been superseded by a better algorithm, &lt;em&gt;multiplexing&lt;/em&gt;, that is used by HTTP/2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0fe7bfcb91231799d489fc2723d6dd4bbc0c043" translate="yes" xml:space="preserve">
          <source>Forbidden header name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b412bc69411dace0d04398d6ef301aa1c667a968" translate="yes" xml:space="preserve">
          <source>Force communication using HTTPS instead of HTTP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef9c57759e4f6a908b3d969fe32e4b1fa5c2a10" translate="yes" xml:space="preserve">
          <source>Forced prefetching of hostnames might be useful, for example, on the homepage of a site to force pre-resolution of domain names that are referenced frequently throughout the site even though they are not used on the home page itself. This will improve the overall performance of site even though the performance of the home page may not be affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c90eda5719a0767b7585d1fae63b890d2df734" translate="yes" xml:space="preserve">
          <source>Forces caches to submit the request to the origin server for validation before releasing a cached copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4634694667d40eda0bbe0a5024383a25099b93b8" translate="yes" xml:space="preserve">
          <source>Forcing HTTPS. Requests to the HTTP version of your site will be redirected to the HTTPS version of your site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65113ef7489ad2e3e6bcd61586a5a6e130fc3a1" translate="yes" xml:space="preserve">
          <source>Forcing lookup of specific hostnames</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab88e44a21e56a74ea52f9806dd114accfebc6fd" translate="yes" xml:space="preserve">
          <source>Form factor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4287342eaedf156edc375518b5469130015c5b1" translate="yes" xml:space="preserve">
          <source>Formatting in HTML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72574aaae0c03841c4924b83ccaa181535815a29" translate="yes" xml:space="preserve">
          <source>Fortunately, as long as you have access to the server's configuration, fixing this is easy. The &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header supports multiple origins, separated by commas, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88300ac449331e8942e45db76cb6c950d0433ba5" translate="yes" xml:space="preserve">
          <source>Forward proxies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39bbf5e0d44588e0ee44ca9d11dbdff07723664" translate="yes" xml:space="preserve">
          <source>Forward proxies can also be anonymous proxies and allow users to hide their IP address while browsing the Web or using other Internet services. &lt;a href=&quot;https://www.torproject.org/&quot;&gt;TOR&lt;/a&gt; (The Onion Router), routes internet traffic through multiple proxies for anonymity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e96e7529d107df0e1753fe21bd01b67d79778d3" translate="yes" xml:space="preserve">
          <source>Forwarded</source>
          <target state="translated">Forwarded</target>
        </trans-unit>
        <trans-unit id="879b7cb814cbc842f6566b4b5009e2ae4c5e4256" translate="yes" xml:space="preserve">
          <source>Forwarded HTTP Extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a751a7c6f5ebc769cdda2c0d60519a9100785f00" translate="yes" xml:space="preserve">
          <source>Forwarding client information through proxies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f19d616ab1973eab54443edad1f469f67e51a95" translate="yes" xml:space="preserve">
          <source>Fragment</source>
          <target state="translated">Fragment</target>
        </trans-unit>
        <trans-unit id="7bf6780ba1203e0c37a2bbe6f2b29b2481023856" translate="yes" xml:space="preserve">
          <source>Frame and message structure in HTTP/2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b968bd2c47b3621328bcde661b5d00bbb234e51" translate="yes" xml:space="preserve">
          <source>Freshness</source>
          <target state="translated">Freshness</target>
        </trans-unit>
        <trans-unit id="71fec796b8ce84752a371f57c6e5fa7e23101e6f" translate="yes" xml:space="preserve">
          <source>Freshness (RFC 7234)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f66052a107eaf9bae7cad0f61fb462f47ec2c47" translate="yes" xml:space="preserve">
          <source>From</source>
          <target state="translated">From</target>
        </trans-unit>
        <trans-unit id="061140cd8957c1a20500ec4735145a4823d87854" translate="yes" xml:space="preserve">
          <source>From (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab25ccd00949ff6aec782bce24f64f443ae8183b" translate="yes" xml:space="preserve">
          <source>From (RFC 7231)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8df84d4beeac0f9b5f8d6d828c77f7b287a76a" translate="yes" xml:space="preserve">
          <source>From the beginnings of HTTP, the protocol allowed another negotiation type: &lt;em&gt;agent-driven negotiation&lt;/em&gt; or &lt;em&gt;reactive negotiation&lt;/em&gt;. In this negotiation, when facing an ambiguous request, the server sends back a page containing links to the available alternative resources. The user is presented the resources and choose the one to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0830997625a669017113736869c02cdf00c6fb" translate="yes" xml:space="preserve">
          <source>From version 1, Focus is powered by Android WebView and uses the following user agent string format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf2dddbd41ffb807d3f91b7c00d45658b62cbe7d" translate="yes" xml:space="preserve">
          <source>From version 1.1, Firefox for Echo Show uses a user agent string with the following format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634b1e47168d224b18cc5d200468a1a666ff4f5b" translate="yes" xml:space="preserve">
          <source>From version 53 onwards, Gecko has a pref available in &lt;code&gt;about:config&lt;/code&gt; to allow users to set their default &lt;code&gt;Referrer-Policy&lt;/code&gt;&amp;mdash; &lt;code&gt;network.http.referer.userControlPolicy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f46e7fd368eae55073e0a8f47aee34fcd932ec29" translate="yes" xml:space="preserve">
          <source>From version 59 onwards (See &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=587523&quot;&gt;#587523&lt;/a&gt;), this has been replaced by &lt;code&gt;network.http.referer.defaultPolicy&lt;/code&gt; and &lt;code&gt;network.http.referer.defaultPolicy.pbmode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb08d10b00a6114f53ac03b662cd5c0fa2fadf2c" translate="yes" xml:space="preserve">
          <source>Fullscreen</source>
          <target state="translated">Fullscreen</target>
        </trans-unit>
        <trans-unit id="d1c21c81f5e9278875fd7faba9e8ce5fee900412" translate="yes" xml:space="preserve">
          <source>Fullscreen API&lt;br/&gt;&lt;small&gt;The definition of 'Fullscreen' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf4076ad8ca1d493e56ac7306efcb34aa07f0cd" translate="yes" xml:space="preserve">
          <source>Fully qualified hostname to match against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70e18d39d91b0bb23213a714597ec6ac0a18898d" translate="yes" xml:space="preserve">
          <source>Functional overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859debff3eb6a95e21550e12eaa3e9501db63349" translate="yes" xml:space="preserve">
          <source>Further extensions to the request are required for the server to fulfill it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09cf39e0efd384b99059d76f22ce0c68ab74478" translate="yes" xml:space="preserve">
          <source>Furthermore, some default values of preferences differ between build configurations, such as platform and locale, which means web sites could identify individual users using this information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36a6718f54524d846894fb04b5b885b4e43e63b" translate="yes" xml:space="preserve">
          <source>G</source>
          <target state="translated">G</target>
        </trans-unit>
        <trans-unit id="f030bbbd32966cde41037b98a8849c46b76e4bc1" translate="yes" xml:space="preserve">
          <source>GET</source>
          <target state="translated">GET</target>
        </trans-unit>
        <trans-unit id="828d617ffbd78d6822f9aa5a1a25e2e9a6f4041d" translate="yes" xml:space="preserve">
          <source>GET (RFC 7231)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889241fb06a8d7a9634f3ef3d8c354487e92626b" translate="yes" xml:space="preserve">
          <source>GET: The resource has been fetched and is transmitted in the message body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad6e940d0a1449c3f043c3a92ac96eacb89d1691" translate="yes" xml:space="preserve">
          <source>GIF images (lossless compression, superseded by PNG)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d84234ce9f95c2df9a9cb91648dc0629d7b55a78" translate="yes" xml:space="preserve">
          <source>GMT</source>
          <target state="translated">GMT</target>
        </trans-unit>
        <trans-unit id="30b0db79f60240a0079907f498493dc26899f285" translate="yes" xml:space="preserve">
          <source>Gateway or multiple parties. The server is acting as a gateway to an exchange involving multiple parties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75402c80a4e4ffb05b2e1744866544933eef7e16" translate="yes" xml:space="preserve">
          <source>Gecko</source>
          <target state="translated">Gecko</target>
        </trans-unit>
        <trans-unit id="d377c8358e2e4b422fb5f7dadb1f64fb8c95cca2" translate="yes" xml:space="preserve">
          <source>Gecko user agent string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f2d81db08b8b5b6d065aef938e7abd5e149546" translate="yes" xml:space="preserve">
          <source>Gecko version number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab051d4c4633073d92cf5eecdf9929aa43fd1d4b" translate="yes" xml:space="preserve">
          <source>Gecko/xyz</source>
          <target state="translated">Gecko/xyz</target>
        </trans-unit>
        <trans-unit id="40fe0205052be8e7ff127e8675aa5f542d969bde" translate="yes" xml:space="preserve">
          <source>General example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fccc069576bf17f5e7e17b4b3c176d69ed30562" translate="yes" xml:space="preserve">
          <source>General form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e2a5611d6d492bfc81f68a60efadd4f6151c4e" translate="yes" xml:space="preserve">
          <source>General header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7515fe427724c3a8ec1e689f1513ade3494a01" translate="yes" xml:space="preserve">
          <source>General structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee8f734456eeec6f1528c29e7b9dd676c82ba5c" translate="yes" xml:space="preserve">
          <source>Geolocation</source>
          <target state="translated">Geolocation</target>
        </trans-unit>
        <trans-unit id="85b8d61e7354b7736b7ec8ca91e1105f85435b65" translate="yes" xml:space="preserve">
          <source>Given this CSP header:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8b70f78453a41b0760bb603aa5281fa0436163" translate="yes" xml:space="preserve">
          <source>Glossary: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORS&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad9e9df904c73f497b664b045343bef194565df" translate="yes" xml:space="preserve">
          <source>Google Chrome handles DNS prefetching control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e389ee93fcba3ef467be442186c13f4427744a6" translate="yes" xml:space="preserve">
          <source>Google Webmaster blog: How to deal with planned site downtime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0c0aed6cf9a0c5b577d1e3a89cbf79500b4710" translate="yes" xml:space="preserve">
          <source>Google maintains &lt;a href=&quot;https://hstspreload.appspot.com/&quot;&gt;an HSTS preload service&lt;/a&gt;. By following the guidelines and successfully submitting your domain, browsers will never connect to your domain using an insecure connection. While the service is hosted by Google, all browsers have stated an intent to use (or actually started using) the preload list. However, it is not part of the HSTS specification and should not be treated as official.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef239b0e9b523a211062dd9a992489254f2934aa" translate="yes" xml:space="preserve">
          <source>Governs which referrer information sent in the &lt;a href=&quot;headers/referer&quot;&gt;&lt;code&gt;Referer&lt;/code&gt;&lt;/a&gt; header should be included with requests made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="360bdb2acc65ada59d8a23e434964675641d9c45" translate="yes" xml:space="preserve">
          <source>Graceful degradation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d1e14f4035027adcdfb20a1541aae1745796ae" translate="yes" xml:space="preserve">
          <source>Granular control over certain features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94265c1a4efc21014ed0c288b4d4deab23d58e6c" translate="yes" xml:space="preserve">
          <source>Graphics Interchange Format (GIF)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07dad8754dab2f22b2c67d2717531b2161e04c97" translate="yes" xml:space="preserve">
          <source>Greenwich Mean Time. HTTP dates are always expressed in GMT, never in local time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="82ee9a2ace2ff133591d7f8cb5b72ca9b839fcd4" translate="yes" xml:space="preserve">
          <source>Guides: Basics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e029883c1d4de187688b7e7b2376708429e4061" translate="yes" xml:space="preserve">
          <source>Gyroscope</source>
          <target state="translated">Gyroscope</target>
        </trans-unit>
        <trans-unit id="7138a51661947b19b5088da5a2bfede2876f49b9" translate="yes" xml:space="preserve">
          <source>HEAD</source>
          <target state="translated">HEAD</target>
        </trans-unit>
        <trans-unit id="780c90e89bccb7fed5c8548e6fe499017ad97ffb" translate="yes" xml:space="preserve">
          <source>HEAD (RFC 7231)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562b472b05f04a6dd479541dc3fcef670a17fed9" translate="yes" xml:space="preserve">
          <source>HEAD: The entity headers are in the message body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c194c3625b9314d21fe00e2a5b33960d2235d75a" translate="yes" xml:space="preserve">
          <source>HPACK: Header Compression for HTTP/2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ce8cef0273faa8edf023797bff38c190bc758e" translate="yes" xml:space="preserve">
          <source>HPKP has the potential to lock out users for a long time if used incorrectly! The use of backup certificates and/or pinning the CA certificate is recommend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0a0d888f6e163542c2141a305027befded2018" translate="yes" xml:space="preserve">
          <source>HPKP has the potential to lock out users for a long time if used incorrectly! The use of backup certificates and/or pinning the CA certificate is recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a71b290916b9c6df149f326df62ff64346f837" translate="yes" xml:space="preserve">
          <source>HPKP is a &lt;em&gt;Trust on First Use&lt;/em&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TOFU&quot;&gt;TOFU&lt;/a&gt;) technique. The first time a web server tells a client via a special HTTP header which public keys belong to it, the client stores this information for a given period of time. When the client visits the server again, it expects at least one certificate in the certificate chain to contain a public key whose fingerprint is already known via HPKP. If the server delivers an unknown public key, the client should present a warning to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f738ce8457f291b18ee47e665e96baa84f38fcd" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="translated">HTML</target>
        </trans-unit>
        <trans-unit id="57b74ec0b3fb709ed009e59e071a8ce0a9039c38" translate="yes" xml:space="preserve">
          <source>HTML Forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abbe4c282803f8a491f6e980e7fc519bd5a7483" translate="yes" xml:space="preserve">
          <source>HTML Living Standard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7098c07bc2151e34df998ef11bad7237b20c9ba" translate="yes" xml:space="preserve">
          <source>HTML Living Standard&lt;br/&gt;&lt;small&gt;The definition of 'document-domain' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d5d7015a5c0d8f94531cdc381221d904d7cbf2" translate="yes" xml:space="preserve">
          <source>HTML files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6390be00d32679564fc38130d4ea8471a4d82c91" translate="yes" xml:space="preserve">
          <source>HTML redirections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7508e59dac25653bfafc78c94cdfff1f91c75f89" translate="yes" xml:space="preserve">
          <source>HTML redirects (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta&quot;&gt;&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;&lt;/a&gt;) are executed if there weren't any HTTP redirects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40b27d6b8b9a4fc3827264c1da16a04ecf4d094" translate="yes" xml:space="preserve">
          <source>HTTP</source>
          <target state="translated">HTTP</target>
        </trans-unit>
        <trans-unit id="83ef326d5040783a2304cd9c3d4b2741d50432d8" translate="yes" xml:space="preserve">
          <source>HTTP 1.1 recommends the use of ETags rather than modification dates,
   for cache control, and there are even stronger reasons to prefer
   ETags for authoring.  Correct use of ETags is even more important in
   a distributed authoring environment, because ETags are necessary
   along with locks to avoid the lost-update problem.  A client might
   fail to renew a lock, for example, when the lock times out and the
   client is accidentally offline or in the middle of a long upload.
   When a client fails to renew the lock, it's quite possible the
   resource can still be relocked and the user can go on editing, as
   long as no changes were made in the meantime.  ETags are required for
   the client to be able to distinguish this case.  Otherwise, the 

   client is forced to ask the user whether to overwrite the resource on
   the server without even being able to tell the user if it has
   changed.  Timestamps do not solve this problem nearly as well as
   ETags.

   Strong ETags are much more useful for authoring use cases than weak
   ETags (see &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-13.3.3&quot;&gt;Section&amp;nbsp;13.3.3 of [RFC2616]&lt;/a&gt;).  Semantic equivalence can be
   a useful concept but that depends on the document type and the
   application type, and interoperability might require some agreement
   or standard outside the scope of this specification and HTTP.  Note
   also that weak ETags have certain restrictions in HTTP, e.g., these
   cannot be used in If-Match headers.

   Note that the meaning of an ETag in a PUT response is not clearly
   defined either in this document or in &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt; (i.e., whether the
   ETag means that the resource is octet-for-octet equivalent to the
   body of the PUT request, or whether the server could have made minor
   changes in the formatting or content of the document upon storage).
   This is an HTTP issue, not purely a WebDAV issue.

   Because clients may be forced to prompt users or throw away changed
   content if the ETag changes, a WebDAV server SHOULD NOT change the
   ETag (or the Last-Modified time) for a resource that has an unchanged
   body and location.  The ETag represents the state of the body or
   contents of the resource.  There is no similar way to tell if
   properties have changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056cc5e9a537351fb174e8ebbb3ca2b1700c2d47" translate="yes" xml:space="preserve">
          <source>HTTP &lt;a href=&quot;../content_negotiation&quot;&gt;content negotiation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392079fd3fa793eb6c0e1335885b8cddafea9ef8" translate="yes" xml:space="preserve">
          <source>HTTP &lt;a href=&quot;headers&quot;&gt;headers&lt;/a&gt;, like those for requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2ed3fe8a3093e057602abdf74477e83473a214" translate="yes" xml:space="preserve">
          <source>HTTP &lt;em&gt;host:port&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae47637ce45f4b16c54404dff4cb129bfbe68800" translate="yes" xml:space="preserve">
          <source>HTTP Access Control covering the HTTP headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d601b5bb2c1cad46bb9aa46a3ee39b64315236e7" translate="yes" xml:space="preserve">
          <source>HTTP Alternative Services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965e2184c8e7927a43f2bee90d3f5ececba434b6" translate="yes" xml:space="preserve">
          <source>HTTP Cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54d56b271b9875e48fe27b600b0dc067a9f284e" translate="yes" xml:space="preserve">
          <source>HTTP Cache-Control Extensions for Stale Content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1e735662c0178e6f3fe960f4930ffeabb6f7fe" translate="yes" xml:space="preserve">
          <source>HTTP Caching FAQ</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0260299fa380d7d3a7ccc7edbf8a208c829f61" translate="yes" xml:space="preserve">
          <source>HTTP Client Hints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e0afd9e45a02ae60f6b6aed60a68bef13f3af0" translate="yes" xml:space="preserve">
          <source>HTTP Conditional Requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186213537e6fba63d1dd994c6c9b358b6f840caf" translate="yes" xml:space="preserve">
          <source>HTTP Cookies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2fa3648597031d5a833b5724263dbfd920c241" translate="yes" xml:space="preserve">
          <source>HTTP Extensions for Web Distributed Authoring and Versioning (WebDAV)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cee8a3bc57d158b257c68ed73852449cb27b716" translate="yes" xml:space="preserve">
          <source>HTTP Header Field X-Frame-Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88eb2164f3dbd137bca83f451898992e6e6b039" translate="yes" xml:space="preserve">
          <source>HTTP Header Field X-Frame-Options - RFC 7034</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc46670cd995848df63f3703c3400f81060dd482" translate="yes" xml:space="preserve">
          <source>HTTP Headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d09479cf8d4e2b8c35798b4a19c06e1f5461b3" translate="yes" xml:space="preserve">
          <source>HTTP Immutable Responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc68b45ed9f862b4a9cd7aa0be2cfbc7e016a6ef" translate="yes" xml:space="preserve">
          <source>HTTP Message (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645acbbc29e90c2c68542670b051cdcea02987bc" translate="yes" xml:space="preserve">
          <source>HTTP Messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="583d9f510824dc860b8faad49ebe7579ffd29c0b" translate="yes" xml:space="preserve">
          <source>HTTP Messages transmitted during requests or responses have a very clear structure; this introductory article describes this structure, its purpose and its possibilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94fdc3e6f5c751d82295ac7ade9d715a4814c0d4" translate="yes" xml:space="preserve">
          <source>HTTP Request Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147cce8975179e5500fc1bb079891e026beac7f0" translate="yes" xml:space="preserve">
          <source>HTTP Requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7402660b7ec42f5008e637f7d416a9463ae2ce2f" translate="yes" xml:space="preserve">
          <source>HTTP Responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3c49a8c708be92f5037401d92246426a46dc11" translate="yes" xml:space="preserve">
          <source>HTTP State Management Mechanism</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fc269de1ce9034a5e3e1936288b84520462ea3" translate="yes" xml:space="preserve">
          <source>HTTP Status Response Codes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b092172a89d9cb7710c23a35bcf58905e6ddfd" translate="yes" xml:space="preserve">
          <source>HTTP Strict Transport Security (HSTS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc09a66647a44074ee04da1ac1771e8479c9d8b" translate="yes" xml:space="preserve">
          <source>HTTP allows a browser, or another &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt;, to a communicate with different &lt;em&gt;resources&lt;/em&gt; on Internet: to do this the browser needs both the &lt;em&gt;identity&lt;/em&gt; and the &lt;em&gt;location&lt;/em&gt; of the resources. These two bits of information are described by a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/URI&quot;&gt;URI&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d82f24e44e689920296a131052df78d102bbaff" translate="yes" xml:space="preserve">
          <source>HTTP and WebDAV did not use the bodies of most error responses for
   machine-parsable information until the specification for Versioning
   Extensions to WebDAV introduced a mechanism to include more specific
   information in the body of an error response (&lt;a href=&quot;https://tools.ietf.org/html/rfc3253#section-1.6&quot;&gt;Section&amp;nbsp;1.6 of
   [RFC3253]&lt;/a&gt;).  The error body mechanism is appropriate to use with any
   error response that may take a body but does not already have a body
   defined.  The mechanism is particularly appropriate when a status
   code can mean many things (for example, 400 Bad Request can mean
   required headers are missing, headers are incorrectly formatted, or
   much more).  This error body mechanism is covered in &lt;a href=&quot;#section-16&quot;&gt;Section 16&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170502bb0d853c3d72e45f0eef9c00311f2253c6" translate="yes" xml:space="preserve">
          <source>HTTP and connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70e2789624d7913484672252eb44130b859ad66a" translate="yes" xml:space="preserve">
          <source>HTTP applications have historically allowed three different formats
   for the representation of date/time stamps:

      Sun, 06 Nov 1994 08:49:37 GMT  ; &lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;RFC 822&lt;/a&gt;, updated by &lt;a href=&quot;https://tools.ietf.org/html/rfc1123&quot;&gt;RFC 1123&lt;/a&gt;
      Sunday, 06-Nov-94 08:49:37 GMT ; &lt;a href=&quot;https://tools.ietf.org/html/rfc850&quot;&gt;RFC 850&lt;/a&gt;, obsoleted by &lt;a href=&quot;https://tools.ietf.org/html/rfc1036&quot;&gt;RFC 1036&lt;/a&gt;
      Sun Nov  6 08:49:37 1994       ; ANSI C's asctime() format

   The first format is preferred as an Internet standard and represents
   a fixed-length subset of that defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc1123&quot;&gt;RFC 1123&lt;/a&gt; [&lt;a href=&quot;#ref-8&quot;&gt;8&lt;/a&gt;] (an update to
   &lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;RFC 822&lt;/a&gt; [&lt;a href=&quot;#ref-9&quot;&gt;9&lt;/a&gt;]). The second format is in common use, but is based on the
   obsolete &lt;a href=&quot;https://tools.ietf.org/html/rfc850&quot;&gt;RFC 850&lt;/a&gt; [&lt;a href=&quot;#ref-12&quot;&gt;12&lt;/a&gt;] date format and lacks a four-digit year.
   HTTP/1.1 clients and servers that parse the date value MUST accept
   all three formats (for compatibility with HTTP/1.0), though they MUST
   only generate the &lt;a href=&quot;https://tools.ietf.org/html/rfc1123&quot;&gt;RFC 1123&lt;/a&gt; format for representing HTTP-date values
   in header fields. See &lt;a href=&quot;#section-19.3&quot;&gt;section 19.3&lt;/a&gt; for further information.

      Note: Recipients of date values are encouraged to be robust in
      accepting date values that may have been sent by non-HTTP
      applications, as is sometimes the case when retrieving or posting
      messages via proxies/gateways to SMTP or NNTP. 

   All HTTP date/time stamps MUST be represented in Greenwich Mean Time
   (GMT), without exception. For the purposes of HTTP, GMT is exactly
   equal to UTC (Coordinated Universal Time). This is indicated in the
   first two formats by the inclusion of &quot;GMT&quot; as the three-letter
   abbreviation for time zone, and MUST be assumed when reading the
   asctime format. HTTP-date is case sensitive and MUST NOT include
   additional LWS beyond that specifically included as SP in the
   grammar.

       HTTP-date    = &lt;a href=&quot;https://tools.ietf.org/html/rfc1123&quot;&gt;rfc1123&lt;/a&gt;-date | &lt;a href=&quot;https://tools.ietf.org/html/rfc850&quot;&gt;rfc850&lt;/a&gt;-date | asctime-date
       &lt;a href=&quot;https://tools.ietf.org/html/rfc1123&quot;&gt;rfc1123&lt;/a&gt;-date = wkday &quot;,&quot; SP date1 SP time SP &quot;GMT&quot;
       &lt;a href=&quot;https://tools.ietf.org/html/rfc850&quot;&gt;rfc850&lt;/a&gt;-date  = weekday &quot;,&quot; SP date2 SP time SP &quot;GMT&quot;
       asctime-date = wkday SP date3 SP time SP 4DIGIT
       date1        = 2DIGIT SP month SP 4DIGIT
                      ; day month year (e.g., 02 Jun 1982)
       date2        = 2DIGIT &quot;-&quot; month &quot;-&quot; 2DIGIT
                      ; day-month-year (e.g., 02-Jun-82)
       date3        = month SP ( 2DIGIT | ( SP 1DIGIT ))
                      ; month day (e.g., Jun  2)
       time         = 2DIGIT &quot;:&quot; 2DIGIT &quot;:&quot; 2DIGIT
                      ; 00:00:00 - 23:59:59
       wkday        = &quot;Mon&quot; | &quot;Tue&quot; | &quot;Wed&quot;
                    | &quot;Thu&quot; | &quot;Fri&quot; | &quot;Sat&quot; | &quot;Sun&quot;
       weekday      = &quot;Monday&quot; | &quot;Tuesday&quot; | &quot;Wednesday&quot;
                    | &quot;Thursday&quot; | &quot;Friday&quot; | &quot;Saturday&quot; | &quot;Sunday&quot;
       month        = &quot;Jan&quot; | &quot;Feb&quot; | &quot;Mar&quot; | &quot;Apr&quot;
                    | &quot;May&quot; | &quot;Jun&quot; | &quot;Jul&quot; | &quot;Aug&quot;
                    | &quot;Sep&quot; | &quot;Oct&quot; | &quot;Nov&quot; | &quot;Dec&quot;

      Note: HTTP requirements for the date/time stamp format apply only
      to their usage within the protocol stream. Clients and servers are
      not required to use these formats for user presentation, request
      logging, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd45603fb781257153f9081597101ece177c7d0" translate="yes" xml:space="preserve">
          <source>HTTP authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4ed2ef5f3094275f004bff5889feddcf0ad10a" translate="yes" xml:space="preserve">
          <source>HTTP caching &amp;ndash; Ilya Grigorik</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0f4dfb9b0a4bec403f49cd2c2239e560902813" translate="yes" xml:space="preserve">
          <source>HTTP caching is optional, but reusing a cached resource is usually desirable. However, common HTTP caches are typically limited to caching responses to &lt;a href=&quot;methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; and may decline other methods. The primary cache key consists of the request method and target URI (oftentimes only the URI is used as only GET requests are caching targets). Common forms of caching entries are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f23433ac676ea06e9a1900351a7ac4a13f68a1" translate="yes" xml:space="preserve">
          <source>HTTP caching works best when caches can entirely avoid making
   requests to the origin server. The primary mechanism for avoiding
   requests is for an origin server to provide an explicit expiration
   time in the future, indicating that a response MAY be used to satisfy
   subsequent requests. In other words, a cache can return a fresh
   response without first contacting the server.

   Our expectation is that servers will assign future explicit
   expiration times to responses in the belief that the entity is not
   likely to change, in a semantically significant way, before the
   expiration time is reached. This normally preserves semantic
   transparency, as long as the server's expiration times are carefully
   chosen. 

   The expiration mechanism applies only to responses taken from a cache
   and not to first-hand responses forwarded immediately to the
   requesting client.

   If an origin server wishes to force a semantically transparent cache
   to validate every request, it MAY assign an explicit expiration time
   in the past. This means that the response is always stale, and so the
   cache SHOULD validate it before using it for subsequent requests. See
   &lt;a href=&quot;#section-14.9.4&quot;&gt;section 14.9.4&lt;/a&gt; for a more restrictive way to force revalidation.

   If an origin server wishes to force any HTTP/1.1 cache, no matter how
   it is configured, to validate every request, it SHOULD use the &quot;must-
   revalidate&quot; cache-control directive (see &lt;a href=&quot;#section-14.9&quot;&gt;section 14.9&lt;/a&gt;).

   Servers specify explicit expiration times using either the Expires
   header, or the max-age directive of the Cache-Control header.

   An expiration time cannot be used to force a user agent to refresh
   its display or reload a resource; its semantics apply only to caching
   mechanisms, and such mechanisms need only check a resource's
   expiration status when a new request for that resource is initiated.
   See &lt;a href=&quot;#section-13.13&quot;&gt;section 13.13&lt;/a&gt; for an explanation of the difference between caches
   and history mechanisms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f76c971673910b6c1b10deaca8522002aada40e" translate="yes" xml:space="preserve">
          <source>HTTP clients are often privy to large amounts of personal information
   (e.g. the user's name, location, mail address, passwords, encryption
   keys, etc.), and SHOULD be very careful to prevent unintentional
   leakage of this information via the HTTP protocol to other sources.
   We very strongly recommend that a convenient interface be provided
   for the user to control dissemination of such information, and that
   designers and implementors be particularly careful in this area.
   History shows that errors in this area often create serious security
   and/or privacy problems and generate highly adverse publicity for the
   implementor's company.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0593fb953516cec3cb50e486b7c0cd80aa7ff135" translate="yes" xml:space="preserve">
          <source>HTTP conditional requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24d61eed6303644578268bb7ece0c747329e619" translate="yes" xml:space="preserve">
          <source>HTTP conditional requests are requests that are executed differently, depending on the value of specific headers. These headers define a precondition, and the result of the request will be different if the precondition is matched or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb9523b16d3c9a97f6ddd095333da9f953ccd3f" translate="yes" xml:space="preserve">
          <source>HTTP content negotiation (&lt;a href=&quot;#section-12&quot;&gt;section 12&lt;/a&gt;) uses short &quot;floating point&quot;
   numbers to indicate the relative importance (&quot;weight&quot;) of various
   negotiable parameters.  A weight is normalized to a real number in
   the range 0 through 1, where 0 is the minimum and 1 the maximum
   value. If a parameter has a quality value of 0, then content with
   this parameter is `not acceptable' for the client. HTTP/1.1
   applications MUST NOT generate more than three digits after the
   decimal point. User configuration of these values SHOULD also be
   limited in this fashion.

       qvalue         = ( &quot;0&quot; [ &quot;.&quot; 0*3DIGIT ] )
                      | ( &quot;1&quot; [ &quot;.&quot; 0*3(&quot;0&quot;) ] )

   &quot;Quality values&quot; is a misnomer, since these values merely represent
   relative degradation in desired quality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b89b9e50093443d13f8d95c6b289f93dce89159" translate="yes" xml:space="preserve">
          <source>HTTP cookie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49bceea2f43dd4ce87f70babc4ac786f9373fb9b" translate="yes" xml:space="preserve">
          <source>HTTP cookie on Wikipedia</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d913ef28f4b5c9d1334d825b1c91fdfabe426299" translate="yes" xml:space="preserve">
          <source>HTTP cookies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d449bb5c3598a5a64c8ae94493892b59bad9bafe" translate="yes" xml:space="preserve">
          <source>HTTP defines a set of &lt;a href=&quot;methods&quot;&gt;request methods&lt;/a&gt; indicating the desired action to be performed upon a resource. Although they can also be nouns, these requests methods are sometimes referred as HTTP verbs. The most common requests are &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;POST&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ad447e6db12c17885856bdde1f5bd54513584a" translate="yes" xml:space="preserve">
          <source>HTTP defines a set of &lt;strong&gt;request methods&lt;/strong&gt; to indicate the desired action to be performed for a given resource. Although they can also be nouns, these request methods are sometimes referred as &lt;em&gt;HTTP verbs&lt;/em&gt;. Each of them implements a different semantic, but some common features are shared by a group of them: e.g. a request method can be &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/safe&quot;&gt;safe&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/idempotent&quot;&gt;idempotent&lt;/a&gt;, or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/cacheable&quot;&gt;cacheable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3823907860c4fbcb228c6adf9d8a7633b5e997" translate="yes" xml:space="preserve">
          <source>HTTP defines many headers that can be used in WebDAV requests and
   responses.  Not all of these are appropriate in all situations and
   some interactions may be undefined.  Note that HTTP 1.1 requires the
   Date header in all responses if possible (see &lt;a href=&quot;#section-14.18&quot;&gt;Section 14.18&lt;/a&gt;,
   [&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;]).

   The server MUST do authorization checks before checking any HTTP
   conditional header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a133de8128e059a1d8a37cda84e730f09f27e2d" translate="yes" xml:space="preserve">
          <source>HTTP defines the Location header to indicate a preferred URL for the
   resource that was addressed in the Request-URI (e.g., in response to
   successful PUT requests or in redirect responses).  However, use of
   this header creates ambiguity when there are URLs in the body of the
   response, as with Multi-Status.  Thus, use of the Location header
   with the Multi-Status response is intentionally undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a87bd3891b7e9c3d201f6e5eb6fa13e129baa69" translate="yes" xml:space="preserve">
          <source>HTTP didn't stop evolving upon the release of HTTP/2. Like with HTTP/1.x previously, HTTP's extensibility is still being used to add new features. Notably, we can cite new extensions of the HTTP protocol appearing in 2016:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88a5eff6f325b12d08c43e0aa22f6a60e181d3d" translate="yes" xml:space="preserve">
          <source>HTTP does not define a specific mechanism for ensuring message
   integrity, instead relying on the error-detection ability of
   underlying transport protocols and the use of length or
   chunk-delimited framing to detect completeness.  Additional integrity
   mechanisms, such as hash functions or digital signatures applied to
   the content, can be selectively added to messages via extensible 

   metadata header fields.  Historically, the lack of a single integrity
   mechanism has been justified by the informal nature of most HTTP
   communication.  However, the prevalence of HTTP as an information
   access mechanism has resulted in its increasing use within
   environments where verification of message integrity is crucial.

   User agents are encouraged to implement configurable means for
   detecting and reporting failures of message integrity such that those
   means can be enabled within environments for which integrity is
   necessary.  For example, a browser being used to view medical history
   or drug interaction information needs to indicate to the user when
   such information is detected by the protocol to be incomplete,
   expired, or corrupted during transfer.  Such mechanisms might be
   selectively enabled via user agent extensions or the presence of
   message integrity metadata in a response.  At a minimum, user agents
   ought to provide some indication that allows a user to distinguish
   between a complete and incomplete response message (&lt;a href=&quot;#section-3.4&quot;&gt;Section 3.4&lt;/a&gt;) when
   such verification is desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d2894d742e24a75af2f1ab57c0987684b7ec4b" translate="yes" xml:space="preserve">
          <source>HTTP does not include a request identifier for associating a given
   request message with its corresponding one or more response messages.
   Hence, it relies on the order of response arrival to correspond
   exactly to the order in which requests are made on the same
   connection.  More than one response message per request only occurs
   when one or more informational responses (1xx, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.2&quot;&gt;Section&amp;nbsp;6.2 of
   [RFC7231]&lt;/a&gt;) precede a final response to the same request. 

   A client that has more than one outstanding request on a connection
   MUST maintain a list of outstanding requests in the order sent and
   MUST associate each received response message on that connection to
   the highest ordered request that has not yet received a final
   (non-1xx) response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125fe50c360004e5dcd111f8af56cce35d120574" translate="yes" xml:space="preserve">
          <source>HTTP does not place a predefined limit on the length of each header
   field or on the length of the header section as a whole, as described
   in &lt;a href=&quot;#section-2.5&quot;&gt;Section 2.5&lt;/a&gt;.  Various ad hoc limitations on individual header
   field length are found in practice, often depending on the specific
   field semantics.

   A server that receives a request header field, or set of fields,
   larger than it wishes to process MUST respond with an appropriate 4xx
   (Client Error) status code.  Ignoring such header fields would
   increase the server's vulnerability to request smuggling attacks
   (&lt;a href=&quot;#section-9.5&quot;&gt;Section 9.5&lt;/a&gt;).

   A client MAY discard or truncate received header fields that are
   larger than the client wishes to process if the field semantics are
   such that the dropped value(s) can be safely ignored without changing
   the message framing or response semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af78e2e7197dc15cd8324e0e4f1f29b3b33d7e4" translate="yes" xml:space="preserve">
          <source>HTTP does not use the Content-Transfer-Encoding (CTE) field of &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;2045&lt;/a&gt;. Proxies and gateways from MIME-compliant protocols to HTTP MUST
   remove any non-identity CTE (&quot;quoted-printable&quot; or &quot;base64&quot;) encoding
   prior to delivering the response message to an HTTP client.

   Proxies and gateways from HTTP to MIME-compliant protocols are
   responsible for ensuring that the message is in the correct format
   and encoding for safe transport on that protocol, where &quot;safe 

   transport&quot; is defined by the limitations of the protocol being used.
   Such a proxy or gateway SHOULD label the data with an appropriate
   Content-Transfer-Encoding if doing so will improve the likelihood of
   safe transport over the destination protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983fa6dde64a744fecec4d6eaeb6ead62114677a" translate="yes" xml:space="preserve">
          <source>HTTP does not use the Content-Transfer-Encoding field of MIME.
   Proxies and gateways from MIME-compliant protocols to HTTP need to
   remove any Content-Transfer-Encoding prior to delivering the response
   message to an HTTP client.

   Proxies and gateways from HTTP to MIME-compliant protocols are
   responsible for ensuring that the message is in the correct format
   and encoding for safe transport on that protocol, where &quot;safe
   transport&quot; is defined by the limitations of the protocol being used.
   Such a proxy or gateway ought to transform and label the data with an
   appropriate Content-Transfer-Encoding if doing so will improve the
   likelihood of safe transport over the destination protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9046bf180bf7e78db825b7e37fce06636dac2f9" translate="yes" xml:space="preserve">
          <source>HTTP enables the use of intermediaries to satisfy requests through a
   chain of connections.  There are three common forms of HTTP
   intermediary: proxy, gateway, and tunnel.  In some cases, a single
   intermediary might act as an origin server, proxy, gateway, or
   tunnel, switching behavior based on the nature of each request.

            &amp;gt;             &amp;gt;             &amp;gt;             &amp;gt;
       UA =========== A =========== B =========== C =========== O
                  &amp;lt;             &amp;lt;             &amp;lt;             &amp;lt;

   The figure above shows three intermediaries (A, B, and C) between the
   user agent and origin server.  A request or response message that
   travels the whole chain will pass through four separate connections.
   Some HTTP communication options might apply only to the connection
   with the nearest, non-tunnel neighbor, only to the endpoints of the
   chain, or to all connections along the chain.  Although the diagram
   is linear, each participant might be engaged in multiple,
   simultaneous communications.  For example, B might be receiving
   requests from many clients other than A, and/or forwarding requests
   to servers other than C, at the same time that it is handling A's 

   request.  Likewise, later requests might be sent through a different
   path of connections, often based on dynamic configuration for load
   balancing.

   The terms &quot;upstream&quot; and &quot;downstream&quot; are used to describe
   directional requirements in relation to the message flow: all
   messages flow from upstream to downstream.  The terms &quot;inbound&quot; and
   &quot;outbound&quot; are used to describe directional requirements in relation
   to the request route: &quot;inbound&quot; means toward the origin server and
   &quot;outbound&quot; means toward the user agent.

   A &quot;proxy&quot; is a message-forwarding agent that is selected by the
   client, usually via local configuration rules, to receive requests
   for some type(s) of absolute URI and attempt to satisfy those
   requests via translation through the HTTP interface.  Some
   translations are minimal, such as for proxy requests for &quot;http&quot; URIs,
   whereas other requests might require translation to and from entirely
   different application-level protocols.  Proxies are often used to
   group an organization's HTTP requests through a common intermediary
   for the sake of security, annotation services, or shared caching.
   Some proxies are designed to apply transformations to selected
   messages or payloads while they are being forwarded, as described in
   &lt;a href=&quot;#section-5.7.2&quot;&gt;Section 5.7.2&lt;/a&gt;.

   A &quot;gateway&quot; (a.k.a. &quot;reverse proxy&quot;) is an intermediary that acts as
   an origin server for the outbound connection but translates received
   requests and forwards them inbound to another server or servers.
   Gateways are often used to encapsulate legacy or untrusted
   information services, to improve server performance through
   &quot;accelerator&quot; caching, and to enable partitioning or load balancing
   of HTTP services across multiple machines.

   All HTTP requirements applicable to an origin server also apply to
   the outbound communication of a gateway.  A gateway communicates with
   inbound servers using any protocol that it desires, including private
   extensions to HTTP that are outside the scope of this specification.
   However, an HTTP-to-HTTP gateway that wishes to interoperate with
   third-party HTTP servers ought to conform to user agent requirements
   on the gateway's inbound connection.

   A &quot;tunnel&quot; acts as a blind relay between two connections without
   changing the messages.  Once active, a tunnel is not considered a
   party to the HTTP communication, though the tunnel might have been
   initiated by an HTTP request.  A tunnel ceases to exist when both
   ends of the relayed connection are closed.  Tunnels are used to
   extend a virtual connection through an intermediary, such as when
   Transport Layer Security (TLS, [&lt;a href=&quot;https://tools.ietf.org/html/rfc5246&quot;&gt;RFC5246&lt;/a&gt;]) is used to establish
   confidential communication through a shared firewall proxy. 

   The above categories for intermediary only consider those acting as
   participants in the HTTP communication.  There are also
   intermediaries that can act on lower layers of the network protocol
   stack, filtering or redirecting HTTP traffic without the knowledge or
   permission of message senders.  Network intermediaries are
   indistinguishable (at a protocol level) from a man-in-the-middle
   attack, often introducing security flaws or interoperability problems
   due to mistakenly violating HTTP semantics.

   For example, an &quot;interception proxy&quot; [&lt;a href=&quot;https://tools.ietf.org/html/rfc3040&quot;&gt;RFC3040&lt;/a&gt;] (also commonly known
   as a &quot;transparent proxy&quot; [&lt;a href=&quot;https://tools.ietf.org/html/rfc1919&quot;&gt;RFC1919&lt;/a&gt;] or &quot;captive portal&quot;) differs from
   an HTTP proxy because it is not selected by the client.  Instead, an
   interception proxy filters or redirects outgoing TCP port 80 packets
   (and occasionally other common port traffic).  Interception proxies
   are commonly found on public network access points, as a means of
   enforcing account subscription prior to allowing use of non-local
   Internet services, and within corporate firewalls to enforce network
   usage policies.

   HTTP is defined as a stateless protocol, meaning that each request
   message can be understood in isolation.  Many implementations depend
   on HTTP's stateless design in order to reuse proxied connections or
   dynamically load balance requests across multiple servers.  Hence, a
   server MUST NOT assume that two requests on the same connection are
   from the same user agent unless the connection is secured and
   specific to that agent.  Some non-standard HTTP extensions (e.g.,
   [&lt;a href=&quot;https://tools.ietf.org/html/rfc4559&quot;&gt;RFC4559&lt;/a&gt;]) have been known to violate this requirement, resulting in
   security and interoperability problems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db8a2b5c25cf2c27eaf8a47b284cc3768fbc846" translate="yes" xml:space="preserve">
          <source>HTTP flow</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
