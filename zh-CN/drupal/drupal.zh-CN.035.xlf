<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="drupal">
    <body>
      <group id="drupal">
        <trans-unit id="26a3b2968aea6ec6633037201ff32b3c11ebde80" translate="yes" xml:space="preserve">
          <source>The relative pathname of the extension (e.g., 'core/modules/node/node.info.yml').</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c17269e58539b82d6b79308bd723cbde4e62181" translate="yes" xml:space="preserve">
          <source>The remainder of this documentation will assume Annotation-based discovery, since this is the most common method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a146d1ad399947130f898c2b819494b8c282cd8" translate="yes" xml:space="preserve">
          <source>The render array should be placeholdered if its cacheability either has a cache context with too high cardinality, a cache tag with a too high invalidation rate, or a max-age that is too low. Either of these would make caching ineffective, and thus we choose to placeholder instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8405f736bb0e44e5261b8dca10c7ed1d7106a5e" translate="yes" xml:space="preserve">
          <source>The render cache service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b3ab6d6ed66f50ea370d4b20e45ad32184ab01" translate="yes" xml:space="preserve">
          <source>The render context collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9bd3eff7a887401eb3f9c4f902fbce307241860" translate="yes" xml:space="preserve">
          <source>The render context: a stack containing bubbleable rendering metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d565e885f018637fe2dc3b9bbd77c739130c72a8" translate="yes" xml:space="preserve">
          <source>The render pipeline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41efb2749c8173dcd5281f36fb7cd2aa78932c1" translate="yes" xml:space="preserve">
          <source>The rendered element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f272e0fd2ac798d3586ef8816add2fff8f677e1" translate="yes" xml:space="preserve">
          <source>The rendered parent page select element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c858fed0bcb812a70ffb960af81642f2ec1d642" translate="yes" xml:space="preserve">
          <source>The renderer configuration array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee5ea0cdff59141a2a8bca814c68a798310e6de" translate="yes" xml:space="preserve">
          <source>The renderer service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b2b0ca7f1445dfb5f095f78475e901cf42c5f9" translate="yes" xml:space="preserve">
          <source>The renderer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599eaf9f8513ec088bf6bceba020cf2affdce3b5" translate="yes" xml:space="preserve">
          <source>The rendering of this element is now complete. The next step will be render caching. So this is the perfect time to update the stack. At this point, children of this element (if any), have been rendered also, and if there were any, their bubbleable rendering metadata will have been bubbled up into the stack frame for the element that is currently being rendered. The render cache item for this element must contain the bubbleable rendering metadata for this element and all of its children. However, right now, the topmost stack frame (the one for this element) currently only contains the metadata for the children. Therefore, the topmost stack frame is updated with this element's metadata, and then the element's metadata is replaced with the metadata in the topmost stack frame. This element now contains all bubbleable rendering metadata for this element and all its children, so it's now ready for render caching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ee70aebdf426cc057fdddf74e511918c24c018" translate="yes" xml:space="preserve">
          <source>The request context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d249e1d6df5369fc1e1b90f881d9902c5820a2e0" translate="yes" xml:space="preserve">
          <source>The request method must be set to the REST method you are using (POST, GET, PATCH, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11c8fe7b06aed4b26d234c9fa361ee2d875dd14" translate="yes" xml:space="preserve">
          <source>The request policy is evaluated in order to determine whether delivery of a cached page should be attempted. The caller should do so if static::ALLOW is returned from the check() method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cba1bf17cf8a364223a9b8576fc8f1795fc23db" translate="yes" xml:space="preserve">
          <source>The request stack object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd6acf348d4d3bea8f5cffafc084c28d9e9adde2" translate="yes" xml:space="preserve">
          <source>The request stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3376764db42b4b92e83d2e421143e57c83b060b" translate="yes" xml:space="preserve">
          <source>The response policy is evaluated in order to determine whether a page should be stored a in the cache. Calling code should do so unless static::DENY is returned from the check() method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd4c9aa565c4f8a28dbf7c3cb33bedf18f77c55" translate="yes" xml:space="preserve">
          <source>The response to be enforced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278173b30bcaeff1f658501420e3c96a855b1b4b" translate="yes" xml:space="preserve">
          <source>The result of \Drupal\Core\Form|FormStateInterface::getRedirect() determines where to redirect the user. See the possible return values listed there. If the result is FALSE, then the user will not be redirected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3826d217e4ef7a99c751f12fce7cdce5d624f4a" translate="yes" xml:space="preserve">
          <source>The result of merging config_export annotation with the defaults.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e11f30272c8378fc2f4441eb13a772f67fda055" translate="yes" xml:space="preserve">
          <source>The resulting dimensions can be smaller for one or both target dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8490fac5003f4450a9588ed8fcd131775bf8f418" translate="yes" xml:space="preserve">
          <source>The resulting grants are then checked against the records stored in the {node_access} table to determine if the operation may be completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c56fce4eb19b9b1c83d46745b05be1c707907482" translate="yes" xml:space="preserve">
          <source>The resulting image always has the exact target dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ce17127286d7ef6d63e674bea1844f3b5befcd" translate="yes" xml:space="preserve">
          <source>The resulting image can be smaller for one or both target dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1088ede1f4db4cc9a796662e19124cad096ccc" translate="yes" xml:space="preserve">
          <source>The resulting output is a fully themed field with label and multiple values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b5e57eddfbe6a809a456f445e0830054db668a" translate="yes" xml:space="preserve">
          <source>The results are recorded in the vectors $this-&amp;gt;{x,y}changed[], by storing a 1 in the element for each line that is an insertion or deletion (ie. is not in the LCS).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d45df16c308e143a9c2694153622ffd0d2ffe5" translate="yes" xml:space="preserve">
          <source>The results of this function are expensive to compute, especially on sites with lots of modules or themes, since it involves a lot of comparisons and other operations. Therefore, we store the results. However, since this is not the data about available updates fetched from the network, it is ok to invalidate it somewhat quickly. If we keep this data for very long, site administrators are more likely to see incorrect results if they upgrade to a newer version of a module or theme but do not visit certain pages that automatically clear this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6ff646a88adb0e1323f6b0bd1055ee17a9b953" translate="yes" xml:space="preserve">
          <source>The results of this hook are cached, however modules may use &lt;a href=&quot;../hook_js_settings_alter/8.1.x&quot;&gt;hook_js_settings_alter&lt;/a&gt;() to dynamically alter settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d163584f5b2f3da243e55707e215112b84ab2a12" translate="yes" xml:space="preserve">
          <source>The results of this hook will be cached if the entity type supports it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425653135c4041d5648bdbf062188e3939015c78" translate="yes" xml:space="preserve">
          <source>The results of this hook will be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87140d73cdaad91f327ea22218173d08f82738a1" translate="yes" xml:space="preserve">
          <source>The retrieved array can be cached safely and then passed to this container via the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa61f34bf2eb605b4855715b6f821d8f1deca40" translate="yes" xml:space="preserve">
          <source>The returned contents are compressed removing white space and comments only when CSS aggregation is enabled. This optimization will not apply for &lt;a href=&quot;../../../core-modules-color-color.module/8.1.x&quot;&gt;color.module&lt;/a&gt; enabled themes with CSS aggregation turned off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ea3184b6e500bb08a8f4f3708393a0fc7f667d" translate="yes" xml:space="preserve">
          <source>The returned links are not ordered, and visible children will be included even if they have parent that is not enabled or ancestor so would not normally appear in a rendered tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341ca1113408468887ba708f478048c7a4476237" translate="yes" xml:space="preserve">
          <source>The returned links are structured like those from loadTreeData().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9786ba0070eef463071288eb1986d20a7076e4d3" translate="yes" xml:space="preserve">
          <source>The returned object just has violations attached to the provided fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff1c17555f3ba8deae9ff38ff76f0a575c06c18" translate="yes" xml:space="preserve">
          <source>The returned translation has to be of the same type than this typed data object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257d55a755cfddd7bdbe15be249de85568808503" translate="yes" xml:space="preserve">
          <source>The returned typed data object wraps this entity and allows dealing with entities based on the generic typed data API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a99153b5cde86799801bcf85760358b32dd210" translate="yes" xml:space="preserve">
          <source>The returned validator adds all generated violations to the given context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0dc828731d290763b7fb2675ee9e3518da61cc0" translate="yes" xml:space="preserve">
          <source>The returned validator collects all violations generated within its context. You can access these violations with the {@link &lt;a href=&quot;https://api.drupal.org/api/drupal/vendor%21symfony%21validator%21Validator%21ContextualValidatorInterface.php/function/ContextualValidatorInterface%3A%3AgetViolations/8.1.x&quot;&gt;ContextualValidatorInterface::getViolations&lt;/a&gt;()} method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b39f8f2d8fa5c28c7e86a5a1e90810b0180cbd0a" translate="yes" xml:space="preserve">
          <source>The revision identifier of the entity, or NULL if the entity does not have a revision identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0074b47144baa5aa57e6abc821522d2a10cf22" translate="yes" xml:space="preserve">
          <source>The root URL of the host, excluding the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012281e58e9ab3707302d7782862c1c53b003ef3" translate="yes" xml:space="preserve">
          <source>The root directory under which new projects will be copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041e339cc37709736bca3479bab91cc307dde6cc" translate="yes" xml:space="preserve">
          <source>The root path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e61308acc27c68b30ec5827f0e8724bf8bc63e42" translate="yes" xml:space="preserve">
          <source>The root value of the validated object graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4a202f19ae858f7f9e891355fb0fb47ad72754" translate="yes" xml:space="preserve">
          <source>The route admin context to determine whether a route is an admin one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2033d62e08fe8143e9e20bf683b9e736e00835f" translate="yes" xml:space="preserve">
          <source>The route builder to rebuild the routes if a theme is installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cd672ab7119307b7db9abf7844b3cdeb007ea5" translate="yes" xml:space="preserve">
          <source>The route building service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8411575dd5950bb75a0fb9b803dcc9dbbea473fc" translate="yes" xml:space="preserve">
          <source>The route collection during the rebuild.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4d429aef6dcb0a75a4c587813e6400e8929041" translate="yes" xml:space="preserve">
          <source>The route collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19302a4f78a3ff8df2cc722f89851d530902d54a" translate="yes" xml:space="preserve">
          <source>The route match object contains useful information about the selected route as well as the raw and upcast parameters derived from the incoming request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd19f6c6cccb524583b3bf36df1c182e4113f7f7" translate="yes" xml:space="preserve">
          <source>The route match object for the current page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bdf139fabb5dc679bf477efdd1e45c7a8ad0d63" translate="yes" xml:space="preserve">
          <source>The route match should only be statically cached once routing is finished. Any code that uses a route match during routing may be incorrectly assumed to be acting after routing has completed. This method gives that code the ability to fix the static cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f174a5ed533e9483e1018662146493fb0ab10c" translate="yes" xml:space="preserve">
          <source>The route match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9bb9a2aaa6368099a63a05132af09301e3cfa7d" translate="yes" xml:space="preserve">
          <source>The route name for a confirmation form for this action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94254239befdee5eaf1f2b46b53b00609b973ac8" translate="yes" xml:space="preserve">
          <source>The route name used by field UI to attach its management pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde08a1efb55cd925db4037d318754948bdabef3" translate="yes" xml:space="preserve">
          <source>The route name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f72116d70afe5e6cd0dfcaddc9f40e6b1465a2b" translate="yes" xml:space="preserve">
          <source>The route parameters and options are encoded as query strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4844fa9a72a9cbbb7fa424409d605edd713b39" translate="yes" xml:space="preserve">
          <source>The route parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99194d38a94d31f067b11d94a3cc49b2da37ae63" translate="yes" xml:space="preserve">
          <source>The route processor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3ba493be31532bafa3d12d6292446313942f07" translate="yes" xml:space="preserve">
          <source>The route provider service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6110fc0001bc125e74871fb781dfbb14cc659f" translate="yes" xml:space="preserve">
          <source>The route provider to load routes by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc58eaeaa50c8ccf6fa3b2986672159383f01b9" translate="yes" xml:space="preserve">
          <source>The route provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74c922833c5cba60b9416d745715fa83f033e63" translate="yes" xml:space="preserve">
          <source>The route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf67d74c88a95bc00d449496ab497d37619cd8b" translate="yes" xml:space="preserve">
          <source>The routes to be dumped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9d7ec9c292dc8e95706c1030f5781e28632698" translate="yes" xml:space="preserve">
          <source>The safe one cannot accidentally redirect to an external URL, unless actively wanted (see TrustedRedirectResponse).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9a5a1ac3d4c3ad560e3d0118ec6a29135165e4" translate="yes" xml:space="preserve">
          <source>The safe string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd3141e0fbe3e5e199a6de891a3797b42ffca4c" translate="yes" xml:space="preserve">
          <source>The same array with the new keys for each module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1936c98d9247dd4726b42b81c5b0a2009a6784a1" translate="yes" xml:space="preserve">
          <source>The sanitized field name string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1856afea709e58a74f1ddc56d78e778a41c06401" translate="yes" xml:space="preserve">
          <source>The save() method is not used in ContentEntityConfirmFormBase. This overrides the default implementation that saves the entity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225e09fac0b979cb9268859641707df7de62069e" translate="yes" xml:space="preserve">
          <source>The save() method is not used in ContentEntityConfirmFormBase. This overrides the default implementation that saves the entity. &lt;em&gt;Overrides &lt;a href=&quot;../../../core-lib-drupal-core-entity-entityform.php/function/entityform-save/8.1.x&quot;&gt;EntityForm::save&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78b1d8d2864147ac713e4ebc8ebf682b7f86d54" translate="yes" xml:space="preserve">
          <source>The save() method is not used in EntityConfirmFormBase. This overrides the default implementation that saves the entity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208c01b181ee164123a02a2a8c5024e7e6f1c235" translate="yes" xml:space="preserve">
          <source>The save() method is not used in EntityConfirmFormBase. This overrides the default implementation that saves the entity. &lt;em&gt;Overrides &lt;a href=&quot;../../../core-lib-drupal-core-entity-entityform.php/function/entityform-save/8.1.x&quot;&gt;EntityForm::save&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb147ceefba11bdf3b3080913ef0349f708c9da" translate="yes" xml:space="preserve">
          <source>The schema object for this connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eee360ff9bc067b38826e5cca3cdaecd9c08f74" translate="yes" xml:space="preserve">
          <source>The schema wrapper is dependent on the configuration name and the whole data structure, so if the name or the data changes in any way, the wrapper should be reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e04aa4770b5b5a6b95d9aa44ff32ed9678dc021" translate="yes" xml:space="preserve">
          <source>The scheme determines the stream wrapper class that should be used by consulting the stream wrapper registry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629e99fa76ac0d2922dd49296b5403969301f30a" translate="yes" xml:space="preserve">
          <source>The scheme, host and base path, for example &quot;http://example.com/d8&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade4ee43a1b7ca06f494ba8eacb46c92c0f2724d" translate="yes" xml:space="preserve">
          <source>The script template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9aff6d1e6d2c599c9bd936c27e4f167910cca10" translate="yes" xml:space="preserve">
          <source>The second level of sub-elements is converted into columns for the corresponding first-level table row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1827e96a416b19c4b675d4e643ccb4bb311e881c" translate="yes" xml:space="preserve">
          <source>The second template is determined by the style selected for the view. Note that certain aspects of the view can also change which style is used; for example, arguments which provide a summary view might change the style to one of the special summary styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff79b922d1a4af3fcfbf850c6932dba55c943c8" translate="yes" xml:space="preserve">
          <source>The secret used in the HMAC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76ad8a93914c69adff2815ca2d257c523bcf538" translate="yes" xml:space="preserve">
          <source>The sections below have more information about entities and the Entity API; for more detailed information, see &lt;a href=&quot;https://www.drupal.org/developing/api/entity&quot;&gt;https://www.drupal.org/developing/api/entity&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7c8ad3fec05e02988a356b2bda3da34c461c4d" translate="yes" xml:space="preserve">
          <source>The secure base URL of the Drupal installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6785b390e7107fb79764bbdb73e6b97fd3014cc6" translate="yes" xml:space="preserve">
          <source>The selected page display variant plugin ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ccbfb8fbeac20c4c822fe876ee3e299957a388" translate="yes" xml:space="preserve">
          <source>The selection of a particular implementation is controlled via the config 'system.mail.interface', which is a keyed array. The default implementation is the mail plugin whose ID is the value of 'default' key. A more specific match first to key and then to module will be used in preference to the default. To specify a different plugin for all mail sent by one module, set the plugin ID as the value for the key corresponding to the module name. To specify a plugin for a particular message sent by one module, set the plugin ID as the value for the array key that is the message ID, which is &quot;${module}_${key}&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44da0d9d3641ddf059371bb1ded90f37bcaae3b" translate="yes" xml:space="preserve">
          <source>The selection plugin group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9b69b994ae275a7c16fbd0ab91f3eb42973945" translate="yes" xml:space="preserve">
          <source>The selector of the dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac76172b63f55a484f5363ff4cba1aa072b265b" translate="yes" xml:space="preserve">
          <source>The serialization class to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568240dd20d0a969a0e00fb509789af742f62ee3" translate="yes" xml:space="preserve">
          <source>The service container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41614f7d089fe3b544a5e4c832149e7ccccb3762" translate="yes" xml:space="preserve">
          <source>The service definitions of the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3432e3b69e33847625c5ab1b0a6559569b8349bd" translate="yes" xml:space="preserve">
          <source>The service name of the consistent backend factory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323f291c3c7d3cffc9f70cc3c275a056b3e031c8" translate="yes" xml:space="preserve">
          <source>The service name of the fast backend factory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eae16d51d6aa4335a768ab7a505bad2e01b0e2a" translate="yes" xml:space="preserve">
          <source>The services exposed here are those that it is reasonable for a well-behaved controller to leverage. A controller that needs other services may need to be refactored into a thin controller and a dependent unit-testable service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d974bfa2f260eb5ef499c78cb45309505406a627" translate="yes" xml:space="preserve">
          <source>The session configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e004a2869197d1ba7c5f24bf978bdae609981dda" translate="yes" xml:space="preserve">
          <source>The session metadata bag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4fd7a8eceb5e4b9286e2496c2bd02838a2e919e" translate="yes" xml:space="preserve">
          <source>The session service name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb7f381a5c201b89570fb8d312f20d859bb7960" translate="yes" xml:space="preserve">
          <source>The set of asset libraries that the client has already loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3712a9a2acc2998e9496073187df7fc96d3229" translate="yes" xml:space="preserve">
          <source>The settings array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35596eeb375cb4be18ee8ebc69d35b073b72f69b" translate="yes" xml:space="preserve">
          <source>The settings object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b371109d25dd0896060a582a3128b68f76a2b95e" translate="yes" xml:space="preserve">
          <source>The settings read only object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40bd69083b139d5b3a6277947b918b10a00bd608" translate="yes" xml:space="preserve">
          <source>The simple configuration API should be used for information that will always have exactly one copy or version. For instance, if your module has a setting that is either on or off, then this is only defined once, and it would be a Boolean-valued simple configuration setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90af0f61b74a853a8a473ffa068b22a61b276c2" translate="yes" xml:space="preserve">
          <source>The simple presence of this update function clears cached field definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4102b90082461a99df7abde6f1cdc20303ce68" translate="yes" xml:space="preserve">
          <source>The site directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7845120993f931877de0f8ff366929629240221" translate="yes" xml:space="preserve">
          <source>The site path is injectable from the site.path service:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ac9a591682d455b7f21d16bce117a0edcd81e1" translate="yes" xml:space="preserve">
          <source>The site path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec13516e9a5ac76357bcad841a72536a09475bd9" translate="yes" xml:space="preserve">
          <source>The site prefix string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bad91fda0b19e8cdd7f2e88c5642017ad58642f" translate="yes" xml:space="preserve">
          <source>The site settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5134b85559b7f151e4c86d29cd40c22ff63c3807" translate="yes" xml:space="preserve">
          <source>The snapshot storage used to write configuration changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b35dd4a1419247df2d3db3cc87d5cb1428ea97" translate="yes" xml:space="preserve">
          <source>The source storage used to discover configuration changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7684fd83d0b80d050c2f0fa52081004a3348800e" translate="yes" xml:space="preserve">
          <source>The source storages keyed by collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004597577e60da2407f94b0cd35e5e47a2974dd5" translate="yes" xml:space="preserve">
          <source>The source string or array of strings if it has plurals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb85172d880bbbde6181a7879ba6e2ba2bf8f67f" translate="yes" xml:space="preserve">
          <source>The specific setting name prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3515975cbd2577974bb24cc15ce5bade8971d65" translate="yes" xml:space="preserve">
          <source>The specific type of form element will vary depending on the implementation, but callers will normally need to set the #title for the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f68b7a4b80b3bcc0d9e7a56fb936e9ac5ca0d6" translate="yes" xml:space="preserve">
          <source>The standard behavior of this method can be changed if a button provides the #limit_validation_errors property. Multistep forms not wanting to validate the whole form can set #limit_validation_errors on buttons to limit validation errors to only certain elements. For example, pressing the &quot;Previous&quot; button in a multistep form should not fire validation errors just because the current step has invalid values. If #limit_validation_errors is set on a clicked button, the button must also define a #submit property (may be set to an empty array). Any #submit handlers will be executed even if there is invalid input, so extreme care should be taken with respect to any actions taken by them. This is typically not a problem with buttons like &quot;Previous&quot; or &quot;Add more&quot; that do not invoke persistent storage of the submitted form values. Do not use the #limit_validation_errors property on buttons that trigger saving of form values to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa57d44bbc3c3825a63b8130fea09e21cfda70a" translate="yes" xml:space="preserve">
          <source>The state backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3330d774f836962be04cc9ce8e4ac59072d5ce7" translate="yes" xml:space="preserve">
          <source>The state key value store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80458a8f37505bf38f60bdfed9261c0cc61fe8f" translate="yes" xml:space="preserve">
          <source>The state key/value store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fed4734c261fc58f812405c9a5a514c8ae0a72" translate="yes" xml:space="preserve">
          <source>The state service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab345b32e922b70cc7799981ef1e76b747d4f17" translate="yes" xml:space="preserve">
          <source>The state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f8154194d3463f3fc16154d53bf2241c910729" translate="yes" xml:space="preserve">
          <source>The static menu link service used to store updates to weight/parent etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b528f91adc911a4b3866df723825b34381df9afe" translate="yes" xml:space="preserve">
          <source>The storage collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0e36e1168ba37f38ce4308e6d090d7ae460a8a" translate="yes" xml:space="preserve">
          <source>The storage comparer used to discover configuration changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c1478fe1cabf0e2a1ad67c539506397173e4f4" translate="yes" xml:space="preserve">
          <source>The storage field definitions for this entity type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a720b9f67ecdaf033e2f1c6ca40efdd3322a87" translate="yes" xml:space="preserve">
          <source>The storage may choose to delete expired or invalidated items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a4311e2d21821ac671c7571845af9493d1d2cd" translate="yes" xml:space="preserve">
          <source>The storage object for the given entity type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d8cdd7aa6beaf46e5c6566a93721347c4a170b" translate="yes" xml:space="preserve">
          <source>The storage used to load and save this configuration object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c4ba5e55b612febb3d63dab8ef3eee133b49ee" translate="yes" xml:space="preserve">
          <source>The strategy employed by this class is to use LINK tags for all aggregate files and for all files that cannot be aggregated (e.g., if 'preprocess' is set to FALSE or the type is 'external'), and to use STYLE tags for groups of files that could be aggregated together but aren't (e.g., if the site-wide aggregation setting is disabled). This results in all LINK tags when aggregation is enabled, a guarantee that as many or only slightly more tags are used with aggregation disabled than enabled (so that if the limit were to be crossed with aggregation enabled, the site developer would also notice the problem while aggregation is disabled), and an easy way for a developer to view HTML source while aggregation is disabled and know what files will be aggregated together when aggregation becomes enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d38b0c7eeaa8d824f7c40ff8e34e367fc412fd" translate="yes" xml:space="preserve">
          <source>The stream wrapper manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14cf03e630a089eb5b7290b873434e331ea294f2" translate="yes" xml:space="preserve">
          <source>The string &quot;foo/bar/baz&quot; has 3 parts, regardless of how many of them are placeholders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfd14b298ae94757d0fb28b7ba197b29d6084db" translate="yes" xml:space="preserve">
          <source>The string for the plural case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb9af5df8d020e12e9bcc1eaa768cb41d7c7379" translate="yes" xml:space="preserve">
          <source>The string for the singular case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f891b78ab23ee5c8f7dabe7b1c59eb3eb7341bb" translate="yes" xml:space="preserve">
          <source>The string parsed from inside the quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7369c86eaaf7f1618f7c29cf56c4b304bb643fa4" translate="yes" xml:space="preserve">
          <source>The string should be wrapped in a @Translation().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb66c71b7c7b2421edf5b7d77002d6bae2429a0" translate="yes" xml:space="preserve">
          <source>The string to append to the configuration static cache name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68de2775cb1f2cb30859de75138d93105f5b1cb5" translate="yes" xml:space="preserve">
          <source>The string to be translated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f699e06f4e3610f395c456cc98975500cc68ca7" translate="yes" xml:space="preserve">
          <source>The string to escape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a5804220e23cd88d64dd5628f86801d058686de" translate="yes" xml:space="preserve">
          <source>The string translation object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5bbd2373c4fbeb2d1d9a035d15409817d605bad" translate="yes" xml:space="preserve">
          <source>The string translation service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552600d9a93ce8b65d373c0c611ccabf6f411980" translate="yes" xml:space="preserve">
          <source>The string value of the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11b97204d13e0afa98b799dcc857a948aec90ac" translate="yes" xml:space="preserve">
          <source>The string will always start with a letter. The letters may be upper or lower case. This method is better for restricted inputs that do not accept certain characters. For example, when testing input fields that require machine readable values (i.e. without spaces and non-standard characters) this method is best.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c02318161a1a94e9c0e57b0b5e0b59bde8257b1" translate="yes" xml:space="preserve">
          <source>The strings are not safe for output. Keys and values of the array should be sanitized through &lt;a href=&quot;../../../core-lib-drupal-core-field-allowedtagsxsstrait.php/function/allowedtagsxsstrait-fieldfilterxss/8.1.x&quot;&gt;\Drupal\Core\Field\AllowedTagsXssTrait::fieldFilterXss&lt;/a&gt;() before being displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac13595d2ab251d98ee342fdb69e452192c5f4d" translate="yes" xml:space="preserve">
          <source>The structure for the logging array is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785a0a5c706c43cb14fd6875c01f5b30937b6370" translate="yes" xml:space="preserve">
          <source>The stub implementation is needed for synchronizing configuration during installation of a module, in which case all configuration being shipped with the module is known to be new. Therefore, the module installation process is able to short-circuit the full diff against the active configuration; the diff would yield all currently available configuration as items to remove, since they do not exist in the module's default configuration directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2451651d5e2565d87dd4c48c86c5a00f20cb24de" translate="yes" xml:space="preserve">
          <source>The stub implementation is needed when database access is not yet available. Because Drupal's caching system never requires that cached data be present, these stub functions can short-circuit the process and sidestep the need for any persistent storage. Using this cache implementation during normal operations would have a negative impact on performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31be6f90b91a7be3dcbffacb3892ecad1356ec34" translate="yes" xml:space="preserve">
          <source>The stylesheets which are set to be removed by the theme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9dbab394911f9be7cfacf5a8439a6d8fd64224" translate="yes" xml:space="preserve">
          <source>The subarray for each module can contain the following keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5ea839e5d56108998c49490b9c39160ab4dd65" translate="yes" xml:space="preserve">
          <source>The subdirectory within a namespace to look for plugins, or FALSE if the plugins are in the top level of the namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ade8fb692ea9e8224488e03abf8280942ece7d4" translate="yes" xml:space="preserve">
          <source>The submission information will be displayed in the forum list and topic list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6b0165e57620eb1040b2ba5d567c81075420b6" translate="yes" xml:space="preserve">
          <source>The submission string indicates when and by whom a topic was submitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f9adc81c30c14fe23dd3d5bca31c2a4e0d9b77" translate="yes" xml:space="preserve">
          <source>The submitted value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b64347049414a14a50a15b37e97ef3a390f32d6" translate="yes" xml:space="preserve">
          <source>The subsequence of file 0 is [XOFF, XLIM) and likewise for file 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197a5cdd6b2bb6781bc6f91d36dd88fb5fceea6d" translate="yes" xml:space="preserve">
          <source>The subtree of this element in the menu link tree (this link's children).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cbc589d14a43b1dcbd7306c4610d13b93ff2fa" translate="yes" xml:space="preserve">
          <source>The suffix for the file cache key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a4fbc6f5f1864c0ae6482e307999bb62acb4e3" translate="yes" xml:space="preserve">
          <source>The summary prints a single record from a row, with fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e7405cf897c27b82ceb0dacf75eb5e050d385a" translate="yes" xml:space="preserve">
          <source>The table and fields are processed in Views using various plugins. See the &lt;a href=&quot;../../group/views_plugins/8.1.x&quot;&gt;Views plugins topic&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc322074ce19ccdbb70a76a7959cf98a68964df" translate="yes" xml:space="preserve">
          <source>The table for the url_alias storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34335aa224d3ecc4ee0f7997cf8ae830f832012" translate="yes" xml:space="preserve">
          <source>The table from which to delete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229a01ff9da57a551e8fc44567cf0def49642ee0" translate="yes" xml:space="preserve">
          <source>The table on which to insert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed9cacf07dbf0161587e386ff9ea442f0944359" translate="yes" xml:space="preserve">
          <source>The table or subquery to be used for the condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367c8386859dcfda3395a939d8051cc94c52edde" translate="yes" xml:space="preserve">
          <source>The table that stores properties, if the entity has multilingual support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d161971c662576d03b402db85912600ded350af6" translate="yes" xml:space="preserve">
          <source>The table that stores revision field data if the entity supports revisions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ee14f5920eb07fd66cf37cd2e325312dc50af4" translate="yes" xml:space="preserve">
          <source>The table that stores revisions, if the entity supports revisions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7d31ab925062ba41c455e0690cbc02829cf08b" translate="yes" xml:space="preserve">
          <source>The table to be used for INSERT and UPDATE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922ee5975f8794fdda37623792835c223c852604" translate="yes" xml:space="preserve">
          <source>The table to truncate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0dbccbae55c13fa4da729f571656d0349b49493" translate="yes" xml:space="preserve">
          <source>The table to update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c0f91e18c59d91e25e3145d716e0146b248c19" translate="yes" xml:space="preserve">
          <source>The tables against which to JOIN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8483079377d8a766192b2140580176d25f9eb394" translate="yes" xml:space="preserve">
          <source>The tables declared by this hook will be automatically created when the module is installed, and removed when the module is uninstalled. This happens before &lt;a href=&quot;../../../core-lib-drupal-core-extension-module.api.php/function/hook_install/8.1.x&quot;&gt;hook_install&lt;/a&gt;() is invoked, and after &lt;a href=&quot;../../../core-lib-drupal-core-extension-module.api.php/function/hook_uninstall/8.1.x&quot;&gt;hook_uninstall&lt;/a&gt;() is invoked, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf14ab7b6fc40a4c85dd6d331d9c06e405d4f00" translate="yes" xml:space="preserve">
          <source>The tag to cache token info with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983e0d597e6d7ed90289eda57bd4553cd659787c" translate="yes" xml:space="preserve">
          <source>The target of the connection object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485c224a11586f86032583b5a9e0527331789639" translate="yes" xml:space="preserve">
          <source>The target storage used to write configuration changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8acaf589a0af7250e93bbef806f1c61892ad4e5" translate="yes" xml:space="preserve">
          <source>The target storages keyed by collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ffe56880c13b5f14719d5038bcf732fe012e27" translate="yes" xml:space="preserve">
          <source>The target_id property differs from other data definitions in that it is required at the storage level, but not at the validation level. This is because its value can be set just-in-time using the preSave() method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9959d7b2bd9766c39570c21f700dbdc50846ba85" translate="yes" xml:space="preserve">
          <source>The task function is treated specially if it defines a form or requires batch processing; in that case, you should return either the form API definition or batch API array, as appropriate. See below for more information on the 'type' key that you must define in the task definition to inform the installer that your task falls into one of those two categories. It is important to use these APIs directly, since the installer may be run non-interactively (for example, via a command line script), all in one page request; in that case, the installer will automatically take care of submitting forms and processing batches correctly for both types of installations. You can inspect the $install_state['interactive'] boolean to see whether or not the current installation is interactive, if you need access to this information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e982d0cc87e92e0f0443165d12ee08d3c94f33ed" translate="yes" xml:space="preserve">
          <source>The template cache filename prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c11de128d3fde581f55ccd4da5dcc09afd823f" translate="yes" xml:space="preserve">
          <source>The term &quot;render pipeline&quot; refers to the process Drupal uses to take information provided by modules and render it into a response. See &lt;a href=&quot;https://www.drupal.org/developing/api/8/render&quot;&gt;https://www.drupal.org/developing/api/8/render&lt;/a&gt; for more details on this process. For background on routing concepts, see &lt;a href=&quot;../../../core-lib-drupal-core-routing-routing.api.php/group/routing/8.1.x&quot;&gt;Routing API.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a56a68ecacaa7b929c2dd2aa69e6a47e4950504e" translate="yes" xml:space="preserve">
          <source>The term name to be used as the page title.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02da3c61da7deb7865f85d227b5914911d08483c" translate="yes" xml:space="preserve">
          <source>The text editor is safe from XSS,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7c55ba82a2145e54cbc493ffd24ec8432fdae3f" translate="yes" xml:space="preserve">
          <source>The text format does not use any XSS protection filters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68666a86fb5451d349f2601e8852624ade4edb6c" translate="yes" xml:space="preserve">
          <source>The text of the link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073eda19a6dc4d1c0aeb47c1156399e311ea49b1" translate="yes" xml:space="preserve">
          <source>The text to be displayed in the alert box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349feb0a379f62ff77d666b245ec9337c1799b2d" translate="yes" xml:space="preserve">
          <source>The theme handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8dc0e1c90b6f94502293d6c0e7d569914dd1ee" translate="yes" xml:space="preserve">
          <source>The theme initialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848804c3680d374928306b939302b909f0721ac6" translate="yes" xml:space="preserve">
          <source>The theme manager will store the active theme object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5035fce6e13c26fe1b38508c634a3b84b4f698e7" translate="yes" xml:space="preserve">
          <source>The theme manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b73760a3c34ba29e97a26c6ce90663fe16ee1f" translate="yes" xml:space="preserve">
          <source>The theme negotiator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb17e4cd06894bc1423bd9921d699e9b2d2e064a" translate="yes" xml:space="preserve">
          <source>The theme object representing the active theme for this registry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5511e4fa13cf92bdd9d5ec6035a0b5211e87e225" translate="yes" xml:space="preserve">
          <source>The theme of the theme settings object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3851462f8e2f0489f38af2741d9e6f37d297f116" translate="yes" xml:space="preserve">
          <source>The theme registry stores information about all available theme hooks, including which callback functions those hooks will call when triggered, what template files are exposed by these hooks, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22dc5f17e92093ee2f3f706ddcd59aa5596f89b" translate="yes" xml:space="preserve">
          <source>The theme registry used to render an output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c37a09bdf2b2fb1981568c4e16a4e77c12334b" translate="yes" xml:space="preserve">
          <source>The theme system allows for nearly all output of the Drupal system to be customized by user themes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52cd024cb68a7e8a9113e8863a0ca671b17f05f" translate="yes" xml:space="preserve">
          <source>The theme system is invoked in &lt;a href=&quot;../../../core-lib-drupal-core-render-renderer.php/function/renderer-dorender/8.1.x&quot;&gt;\Drupal\Core\Render\Renderer::doRender&lt;/a&gt;() by calling the &lt;a href=&quot;../../../core-lib-drupal-core-theme-thememanagerinterface.php/function/thememanagerinterface-render/8.1.x&quot;&gt;\Drupal\Core\Theme\ThemeManagerInterface::render&lt;/a&gt;() function, which operates on the concept of &quot;theme hooks&quot;. Theme hooks define how a particular type of data should be rendered. They are registered by modules by implementing &lt;a href=&quot;../../function/hook_theme/8.1.x&quot;&gt;hook_theme&lt;/a&gt;(), which specifies the name of the hook, the input &quot;variables&quot; used to provide data and options, and other information. Modules implementing &lt;a href=&quot;../../function/hook_theme/8.1.x&quot;&gt;hook_theme&lt;/a&gt;() also need to provide a default implementation for each of their theme hooks, normally in a Twig file, and they may also provide preprocessing functions. For example, the core Search module defines a theme hook for a search result item in &lt;a href=&quot;../../../core-modules-search-search.module/function/search_theme/8.1.x&quot;&gt;search_theme&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34216e4c6fc0e26d106535ce096c1ed8f05459be" translate="yes" xml:space="preserve">
          <source>The theme system, which controls the output of Drupal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8588dc6250e7d62579fc007ea5adaca2c7f761e1" translate="yes" xml:space="preserve">
          <source>The time at which the last write to this cache bin happened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5e88f070ff8e65d2385ec10f0e0056b61973f5" translate="yes" xml:space="preserve">
          <source>The time cutoff for comments marked as read for entity types other node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3811e2ba27aa2f6a9e56d25229d0d5f1385529ee" translate="yes" xml:space="preserve">
          <source>The timestamp property of the source objects are used to determine which is the newer one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251e52f9b4fb524311f6150a7d58a6269fa7acec" translate="yes" xml:space="preserve">
          <source>The timestamp when the account last accessed the site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4a394685a3b4bb147a9c0a39f83621ba9cbab0" translate="yes" xml:space="preserve">
          <source>The timestamp when the account last accessed the site. &lt;em&gt;Overrides &lt;a href=&quot;../../../core-lib-drupal-core-session-accountinterface.php/function/accountinterface-getlastaccessedtime/8.1.x&quot;&gt;AccountInterface::getLastAccessedTime&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7909df9921fcc8ce077ee323a4d898d2649177c3" translate="yes" xml:space="preserve">
          <source>The timezone of a timestamp is always UTC. The timezone for a timestamp indicates the timezone used by the format() method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e282fd960c64d346390e20459951dfedb19f5a69" translate="yes" xml:space="preserve">
          <source>The timezone of this account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42911703f8381aef062daf4d0fcde32913282913" translate="yes" xml:space="preserve">
          <source>The title of the dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a228fe394ee46e81a0e66a5045b10fc38651936" translate="yes" xml:space="preserve">
          <source>The title of the image toolkit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f4490eff425a34ff2b9e4c23a77eb21645d605" translate="yes" xml:space="preserve">
          <source>The title resolver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5eaf478da331722c33fc76a9e1842a4235efe59" translate="yes" xml:space="preserve">
          <source>The toString operation is how we compile a query object to a prepared statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4862e56ac2a50954e0cc4f449fa21b0886d1221" translate="yes" xml:space="preserve">
          <source>The token cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001c1d7893ceed808a782936b8db3eafec628079" translate="yes" xml:space="preserve">
          <source>The token parser converts a token stream created from template source code into an Abstract Syntax Tree (AST). The AST will later be compiled into PHP code usable for runtime execution of the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf7eb5ece93bee38eb07f6f1793563544d5b452" translate="yes" xml:space="preserve">
          <source>The toolbar is a container for administrative and site-global interactive components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4ab140440e10425ca94f46460d06bbcb9dcdac" translate="yes" xml:space="preserve">
          <source>The toolbar provides a common styling for items denoted by the .toolbar-tab class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1efca95f604fa802113c6876871fa8f686ab8ca1" translate="yes" xml:space="preserve">
          <source>The toolbar provides a construct called a 'tray'. The tray is a container for content. The tray may be associated with a toggle in the administration bar. The toggle shows or hides the tray and is optimized for small and large screens. To create this association, &lt;a href=&quot;8.1.x&quot;&gt;hook_toolbar&lt;/a&gt;() returns one or more render elements of type 'toolbar_item', containing the toggle and tray elements in its 'tab' and 'tray' properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a8ca2b820c58f40550491e6c83735976f29de39" translate="yes" xml:space="preserve">
          <source>The total number of configuration objects to process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304d5a89e83946f82cde2269de440b0e1f2e0737" translate="yes" xml:space="preserve">
          <source>The total number of extensions to process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3194d920ecbee7af74f539a34737d7351bdc44f9" translate="yes" xml:space="preserve">
          <source>The trail of property names relative to the root of the typed data tree, separated by dots; e.g. 'field_text.0.format'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd610b2a6591dad11a5d1958064990afd145eaec" translate="yes" xml:space="preserve">
          <source>The transaction will remain open for as long as the variable $txn remains in scope; when $txn is destroyed, the transaction will be committed. If your transaction is nested inside of another then Drupal will track each transaction and only commit the outer-most transaction when the last transaction object goes out out of scope (when all relevant queries have completed successfully).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8425b27d66b2c945a7ba6b8839aec9a2d9e17e" translate="yes" xml:space="preserve">
          <source>The translated entity will be a clone of the current entity with the specified $langcode. All translations share the same field data structures to ensure that all of them deal with fresh data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b5dae5085a39428a020899a6a2b98258b4e885" translate="yes" xml:space="preserve">
          <source>The translated markup without placeholder replacements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed4c5b877116ea0623c5c5149231a1dffbce2c1" translate="yes" xml:space="preserve">
          <source>The translation domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65ba46659f2c628c04c2454fac6be82e1b3ce14" translate="yes" xml:space="preserve">
          <source>The translation options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643a5de26348e78a2c3b9aac99c1d7aed41af8a2" translate="yes" xml:space="preserve">
          <source>The translation string or array of strings if it has plurals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e600a2453f5c1624ddbf1bd05332a92d11199071" translate="yes" xml:space="preserve">
          <source>The translator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0ffd0aa8794754353dd315068c2db84e2e19a7" translate="yes" xml:space="preserve">
          <source>The transliteration service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e5367f3b5af7efb3e1bec281c7bd381e9f381d2" translate="yes" xml:space="preserve">
          <source>The tree contains a hierarchy of menu links which have an ID as well as a route name or external URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fdbe458e7970f2bb066dfd6600d95483848cde5" translate="yes" xml:space="preserve">
          <source>The tree order is maintained using an optimized algorithm, for example by storing each parent in an individual field, see &lt;a href=&quot;https://www.drupal.org/node/141866&quot;&gt;https://www.drupal.org/node/141866&lt;/a&gt; for more details. However, any details of the storage should not be relied upon since it may be swapped with a different implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3140c4584f9ae2ada44f7e01c6bcf181c50f19e0" translate="yes" xml:space="preserve">
          <source>The type of entities for which this view builder is instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448e68115e9e153234f2aab15f11261651dd71b5" translate="yes" xml:space="preserve">
          <source>The type of language used for URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351a926a888407bd914fc3ee4dc58b663469c3cd" translate="yes" xml:space="preserve">
          <source>The type of language used to define the content language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7f187ac0a255df8bc4c2b8abd1e04ac4798860" translate="yes" xml:space="preserve">
          <source>The type of language used to select the user interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc020faf2a81d7d8251d84df134d1e7558f9b61" translate="yes" xml:space="preserve">
          <source>The type of the extension (e.g., 'module').</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f45896cae93251d953663039364b8e35da5e46f" translate="yes" xml:space="preserve">
          <source>The typed config manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82138fbd8decb3fb86e2f217ef2bcff72c16db9f" translate="yes" xml:space="preserve">
          <source>The typed configuration manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d16c85348392c4f839dbdee0a9871a9cc71c36b" translate="yes" xml:space="preserve">
          <source>The typed data API allows modules to support any kind of data based upon pre-defined primitive types and interfaces for complex data and lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aae9bc52a666de3e090969f4fb5156a5dd2d847" translate="yes" xml:space="preserve">
          <source>The typed data class used for wrapping multiple data items of the type. Must implement the &lt;a href=&quot;../../../core-lib-drupal-core-typeddata-listinterface.php/interface/listinterface/8.1.x&quot;&gt;\Drupal\Core\TypedData\ListInterface&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1263d91391d307be2b1b442e495d6b29f320a879" translate="yes" xml:space="preserve">
          <source>The typed data class used for wrapping multiple data items of the type. Must implement the &lt;a href=&quot;../../../core-lib-drupal-core-typeddata-listinterface.php/interface/listinterface/8.1.x&quot;&gt;\Drupal\Core\TypedData\ListInterface&lt;/a&gt;. &lt;em&gt;Overrides &lt;a href=&quot;../../../core-lib-drupal-core-typeddata-annotation-datatype.php/property/datatype-list_class/8.1.x&quot;&gt;DataType::$list_class&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5019bb124e6d89883cb4ef307ffcb59bed95a193" translate="yes" xml:space="preserve">
          <source>The typed data manager used for creating the data types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce02bfe6565986997ead64ff78519e1bd0b547fb" translate="yes" xml:space="preserve">
          <source>The typed data manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6058161c5fe90b8b6890f30e92fa1a7a8870f090" translate="yes" xml:space="preserve">
          <source>The typed data object the metadata is about.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2843dbe0e8c919297a09c0216c781152b453995" translate="yes" xml:space="preserve">
          <source>The underlying ArchiveTar instance that does the heavy lifting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400f184a3aac9859a59b12d0e350c99950c83de0" translate="yes" xml:space="preserve">
          <source>The underlying ZipArchive instance that does the heavy lifting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726b0fe61c967dacd6d5a008aa0f66673cba8e9b" translate="yes" xml:space="preserve">
          <source>The uninstall hook must be implemented in the module's .install file. It will fire when the module gets uninstalled but before the module's database tables are removed, allowing your module to query its own tables during this routine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064ae04a31eeae072ab83fe2988b103b4b553289" translate="yes" xml:space="preserve">
          <source>The uninstall validators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd90c3bedf6d3527195d4e389b4ffe678994287" translate="yes" xml:space="preserve">
          <source>The unique ID of this pager on this page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44800878ddd18a4c5ffa83ecbdddad27681ed45f" translate="yes" xml:space="preserve">
          <source>The unique alias that was assigned for this expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a31ea08ee52594a66d6b89766328f9c6dcb01c" translate="yes" xml:space="preserve">
          <source>The unique alias that was assigned for this field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a3efb11b8cc251272e1b12f177703d8280e539" translate="yes" xml:space="preserve">
          <source>The unique alias that was assigned for this table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="346973157fa9bac6458516464b8161bc3bbf25a6" translate="yes" xml:space="preserve">
          <source>The unique cache tag associated with this menu link override.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cab8954cebc4b04eb470e8c7fdef54f6df0ce3b" translate="yes" xml:space="preserve">
          <source>The unique cache tag associated with this menu link override. &lt;em&gt;Overrides &lt;a href=&quot;../../../core-lib-drupal-core-menu-staticmenulinkoverridesinterface.php/function/staticmenulinkoverridesinterface-getcachetags/8.1.x&quot;&gt;StaticMenuLinkOverridesInterface::getCacheTags&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cff344a9654c18a94f34e1029015ac7c56e9b28" translate="yes" xml:space="preserve">
          <source>The unique identifier of this entity type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a16b1835b68b2769aa687f35219b15ebaad2a7" translate="yes" xml:space="preserve">
          <source>The unique or primary key of the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36d5b7916adfde1d1b0a08874fb237cc8090ec7" translate="yes" xml:space="preserve">
          <source>The unrouted URL assembler service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d22de8c57653c713ff0f2501fc3c9953a95d6dbb" translate="yes" xml:space="preserve">
          <source>The unrouted URL assembler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec84877feee67826b90cfd83d3d07f3c3bc4932" translate="yes" xml:space="preserve">
          <source>The url generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83cf9b01068880b4616c2e1bd1e4409676f26117" translate="yes" xml:space="preserve">
          <source>The use of this method is discouraged, because it does not work for remote URIs. Except in rare cases, URIs should not be manually resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db8fec6f91011a42f2adad7aec3b4757833654b" translate="yes" xml:space="preserve">
          <source>The used lock backend instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1b363073c0b489d39b622512b67c25bd3c96ef" translate="yes" xml:space="preserve">
          <source>The used update name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766257a73e452ab1222d174df39988d9a927ec43" translate="yes" xml:space="preserve">
          <source>The user just logged in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7dcbfc719b2163c69b7aeabd12b228a75e9a76" translate="yes" xml:space="preserve">
          <source>The user just logged out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f05d2e24e7c13307eb78143c53d4c59b034d839" translate="yes" xml:space="preserve">
          <source>The user storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337c1cbba71f3944a325118a51e7f892f4039e67" translate="yes" xml:space="preserve">
          <source>The user will go back to using whatever default set applies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="defb1da1315f9ac8e4cb93eea8577b8c0d37ffa9" translate="yes" xml:space="preserve">
          <source>The username for this file transfer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58211d6a0185a2a3ae0a6a91e7ad59de1fdfb75b" translate="yes" xml:space="preserve">
          <source>The validation constraint manager is used to instantiate validation constraint plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa2900354def1988ad498e8c2cfd05e130c09bd" translate="yes" xml:space="preserve">
          <source>The validation constraint manager to use for instantiating constraints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6773ccfba90d1351a47f109d614d4df3279155a9" translate="yes" xml:space="preserve">
          <source>The validation constraints of a definition consist of any for it defined constraints and default constraints, which are generated based on the definition and its data type. See &lt;a href=&quot;../../../core-lib-drupal-core-typeddata-typeddatamanager.php/function/typeddatamanager-getdefaultconstraints/8.1.x&quot;&gt;\Drupal\Core\TypedData\TypedDataManager::getDefaultConstraints&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2965d30c3137b47b71beb1c35ff655e1db576c59" translate="yes" xml:space="preserve">
          <source>The validation functions and submit functions use this array for nearly all their decision making. (Note that #tree determines whether the values are a flat array or an array whose structure parallels the $form array. See &lt;a href=&quot;../../../core-lib-drupal-core-render-element-formelement.php/class/formelement/8.1.x&quot;&gt;\Drupal\Core\Render\Element\FormElement&lt;/a&gt; for more information.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b0119f8e245b91df5e18259b0606d32980aaa7" translate="yes" xml:space="preserve">
          <source>The validator used for validating typed data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f843a28693a76b01d1932ce7594041e4d4038ee2" translate="yes" xml:space="preserve">
          <source>The value can either be a string or an array of strings. The string values should be the path of a directory to scan.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daae95595ae272195fc5c8a58e473ffc35146f93" translate="yes" xml:space="preserve">
          <source>The value corresponding to each machine name key is an associative array that may contain the following key-value pairs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1654808e722e3bddaa0c245693e48ce6de34cb" translate="yes" xml:space="preserve">
          <source>The value is either the configuration factory override that is responsible for the collection or null if there is not one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6cd0c29312822e62134e833999bf7918ad49387" translate="yes" xml:space="preserve">
          <source>The value itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7d5aa6f26f3ea10f6a61e7fed57111e4031ace" translate="yes" xml:space="preserve">
          <source>The value of #dropbutton denotes the dropbutton to group the child element into. For example, two different values of 'foo' and 'bar' on child elements would generate two separate dropbuttons, which each contain the corresponding buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5ce84da379915201a976a92b48d68fd7bd77b0" translate="yes" xml:space="preserve">
          <source>The value of #tag is escaped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e196ba0904dcd73e599e02d23757d32afd91157" translate="yes" xml:space="preserve">
          <source>The value of the data to be attached to elements matched by the selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37cc5fc139346cf2b2f419deea3d2a81a346e51b" translate="yes" xml:space="preserve">
          <source>The value of the flag identifying the default translation object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01386359aa27e422979d434dbdd539fb20bfc318" translate="yes" xml:space="preserve">
          <source>The value of the format passed to the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a89a1a226c2813a199048ed0c2a1d2998c4e98" translate="yes" xml:space="preserve">
          <source>The value of the language code passed to the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049706f84341e6e6e22319d2e39d66fb5edb3c89" translate="yes" xml:space="preserve">
          <source>The value of the requested setting, NULL if the setting does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2012775b0ba31660b9f7884b1119cf4ada1d5c50" translate="yes" xml:space="preserve">
          <source>The value of the time value passed to the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a753c205f3e491a0a1551d06ee9321e83985453" translate="yes" xml:space="preserve">
          <source>The value of the timezone passed to the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d9cdd84675faea2bccf78c3657871eb7efd89c" translate="yes" xml:space="preserve">
          <source>The values in the #cache key of the renderable array are used to determine if a cache entry exists for the entity's rendered output. Ideally only values that pertain to caching should be altered in this hook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ed4a2772d4f5b9815f87d4a7a5e0b4d8fe27af" translate="yes" xml:space="preserve">
          <source>The values in the sandbox are stored and updated in the database between http requests until the batch finishes processing. This avoids problems if the user navigates away from the page before the batch finishes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d299eeaaa5d25005394795dfeff8f1747bb0787" translate="yes" xml:space="preserve">
          <source>The values to use to instantiate the default language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df43fa5ad2a8a119b525646d51a3e756d669994" translate="yes" xml:space="preserve">
          <source>The values under the 'drupalSettings' key are merged in a special way, to match the behavior of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96527d4f1e28b61b91e5c33cbdbfdc5242ed612a" translate="yes" xml:space="preserve">
          <source>The variant can contain cacheability metadata for the configuration that was passed in setConfiguration(). In the build() method, this should be added to the render array that is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c091e378d33b27e2139f783b4c7797756c9ec7d5" translate="yes" xml:space="preserve">
          <source>The view mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a75bd2960b03f6b36ba4dfc3f097611255de09" translate="yes" xml:space="preserve">
          <source>The view preview information is optionally displayed when a view is previewed in the administrative UI. It includes query and performance statistics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c7f35823fa97e74dfb0492c4ff387b7df1686c" translate="yes" xml:space="preserve">
          <source>The violation message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beac5c60bcf1034fdb3b0ebbe7ff35858fb16eb4" translate="yes" xml:space="preserve">
          <source>The violations generated in the current context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7801d9bc42452cc2c48f32880e2079f89cc23c2" translate="yes" xml:space="preserve">
          <source>The way configuration is handled and configuration forms are built is likely to change in order for the plugin to be of use for Rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38683a0f5ecfa6b4f3d9f7b4c6b9ee2899be90e" translate="yes" xml:space="preserve">
          <source>The weight of the plugin in it's group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0bd214d8ae12cad6e1667af27ba156a6d8d7c38" translate="yes" xml:space="preserve">
          <source>The weight of uninstalled modules cannot be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1efc0e91d70f0ba7bd37549e90147dbd00eb4b" translate="yes" xml:space="preserve">
          <source>The weight, used for ordering languages in lists, like selects or tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f80d0abd39d083e5915ca713b0d26205eaaf6a" translate="yes" xml:space="preserve">
          <source>The whitelist contains the first element of the router paths of all aliases. For example, if /node/12345 has an alias then &quot;node&quot; is added to the whitelist. This optimization allows skipping the lookup for every /user/{user} path if &quot;user&quot; is not in the whitelist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ea098f2dcd5519f0baa9b0301b04cbad2aa810" translate="yes" xml:space="preserve">
          <source>The widget settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e8e468b3626172bdd96c819e85f14e0302eca7" translate="yes" xml:space="preserve">
          <source>The widget settings. &lt;em&gt;Overrides &lt;a href=&quot;https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Field%21PluginSettingsBase.php/property/PluginSettingsBase%3A%3Asettings/8.1.x&quot;&gt;PluginSettingsBase::$settings&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2c416974bccd0586e44050aef6e229f6e513e1" translate="yes" xml:space="preserve">
          <source>The width descriptor here is &quot;100w&quot;. This way the browser knows this image is 100px wide without having to load it. According to the spec, a multiplier can not be present if a width descriptor is. For example: Valid:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="813557b86f006a10571adfdf18590fcd4f204235" translate="yes" xml:space="preserve">
          <source>The wildcard characters &quot;%&quot; and &quot;_&quot; as well as backslash are prefixed with a backslash. Use this to do a search for a verbatim string without any wildcard behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0419c890c31f1164177a1bb614440f8e57dc84" translate="yes" xml:space="preserve">
          <source>The wrapped HTTP kernel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834959f58f92192b8b16e2d4f3466e9d4e7ac137" translate="yes" xml:space="preserve">
          <source>The wrapped menu link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed4afcc1d1b32d2ff9f5af408db3fec094026608" translate="yes" xml:space="preserve">
          <source>The wrapped response object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="985774384fad032d1ea028cbd1dddcae7efd71f5" translate="yes" xml:space="preserve">
          <source>The wrapper format determines how the HTML is wrapped, for example in a modal dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d749e29f5e8d1b4a4b55127c4259bfb21f8b9e" translate="yes" xml:space="preserve">
          <source>The write safe session handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573574647e20d1eb7a9c854cb384063486ad8ae0" translate="yes" xml:space="preserve">
          <source>The write-safe session handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a797e30923ac1be590300ce6b08e63b4e6dc6688" translate="yes" xml:space="preserve">
          <source>Theme</source>
          <target state="translated">Theme</target>
        </trans-unit>
        <trans-unit id="6d66ef58e64546d18ae9558bdd1a11142f543c88" translate="yes" xml:space="preserve">
          <source>Theme Hooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85703ae8d1069fcb41a7e19fb01c79bb0bd4d648" translate="yes" xml:space="preserve">
          <source>Theme data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706c3a88b74100b616d93209be2881196fdde63f" translate="yes" xml:space="preserve">
          <source>Theme engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d009b54264712c055d6bd3897c3e20e336bf26" translate="yes" xml:space="preserve">
          <source>Theme hook definitions are collected in the following order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee943ac16819ceeffa33df9453347401609ef16" translate="yes" xml:space="preserve">
          <source>Theme hook suggestions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9287770435ee96d864fec37bc035712cea241eb9" translate="yes" xml:space="preserve">
          <source>Theme override for the modules listing page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6458a9d0cb4c5bdfd54f61a33bff269271fec2c3" translate="yes" xml:space="preserve">
          <source>Theme override for the modules uninstall page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c24e135633fa56ff2b3f1c40d2dff884547e79" translate="yes" xml:space="preserve">
          <source>Theme override to display an item in a views RSS feed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4c542fde004505365b47cd46fbb04e470ea282" translate="yes" xml:space="preserve">
          <source>Theme override to display node links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c864b8119096da4bdac6b923c0b972d606fa2fe5" translate="yes" xml:space="preserve">
          <source>Theme registry is expected to be used only internally since every &lt;a href=&quot;../../../core-lib-drupal-core-render-theme.api.php/function/hook_theme/8.1.x&quot;&gt;hook_theme&lt;/a&gt;() implementation depends on the way this class is built. This class may get new features in minor releases so this class should be considered internal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782d11980ef9e85ece7cf5177a226a035ab00c5c" translate="yes" xml:space="preserve">
          <source>Theme settings use configuration for base values but the runtime theme settings are calculated based on various site settings and are therefore not persisted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136e8ac2b9fb26591988b0c61b1647a8d7c0a9b5" translate="yes" xml:space="preserve">
          <source>Theme system overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8df8133930dd97814703405409d2f9ae6456b2b" translate="yes" xml:space="preserve">
          <source>Theme::canUpdate</source>
          <target state="translated">Theme::canUpdate</target>
        </trans-unit>
        <trans-unit id="9fd07d209b19fd1701d71305e2ae0ddd9eccfe6d" translate="yes" xml:space="preserve">
          <source>Theme::canUpdateDirectory</source>
          <target state="translated">Theme::canUpdateDirectory</target>
        </trans-unit>
        <trans-unit id="6a11daba92eaa6518a8df2c8ba63c9b820cc9a17" translate="yes" xml:space="preserve">
          <source>Theme::getInstallDirectory</source>
          <target state="translated">Theme::getInstallDirectory</target>
        </trans-unit>
        <trans-unit id="d52496f45d416ade5f4746e1d1355273f757fdb1" translate="yes" xml:space="preserve">
          <source>Theme::getRootDirectoryRelativePath</source>
          <target state="translated">Theme::getRootDirectoryRelativePath</target>
        </trans-unit>
        <trans-unit id="80658d96efd467a6dee6892724a4d57ee58149b5" translate="yes" xml:space="preserve">
          <source>Theme::isInstalled</source>
          <target state="translated">Theme::isInstalled</target>
        </trans-unit>
        <trans-unit id="0f04682048ae9f65b3f44e8f1aa2176a5a237e5e" translate="yes" xml:space="preserve">
          <source>Theme::postInstall</source>
          <target state="translated">Theme::postInstall</target>
        </trans-unit>
        <trans-unit id="86e70109ae4be9b06d5377907a115bb621ad0c1e" translate="yes" xml:space="preserve">
          <source>Theme::postInstallTasks</source>
          <target state="translated">Theme::postInstallTasks</target>
        </trans-unit>
        <trans-unit id="82d6996abb43967c7831257340ac3ff731251996" translate="yes" xml:space="preserve">
          <source>ThemeCacheContext</source>
          <target state="translated">ThemeCacheContext</target>
        </trans-unit>
        <trans-unit id="85f0bd287610868158281970c5f035ddd6aa4bdf" translate="yes" xml:space="preserve">
          <source>ThemeCacheContext::$themeManager</source>
          <target state="translated">ThemeCacheContext::$themeManager</target>
        </trans-unit>
        <trans-unit id="1e6a61191afaac18d3f9cfb60fb2a6cdd38209cf" translate="yes" xml:space="preserve">
          <source>ThemeCacheContext::__construct</source>
          <target state="translated">ThemeCacheContext::__construct</target>
        </trans-unit>
        <trans-unit id="a85dfcbd8d08243e54e5fb457dbab98a56d0b404" translate="yes" xml:space="preserve">
          <source>ThemeCacheContext::getCacheableMetadata</source>
          <target state="translated">ThemeCacheContext::getCacheableMetadata</target>
        </trans-unit>
        <trans-unit id="efea49a99bc3bce1af7eb24e66f5686dfbda960f" translate="yes" xml:space="preserve">
          <source>ThemeCacheContext::getContext</source>
          <target state="translated">ThemeCacheContext::getContext</target>
        </trans-unit>
        <trans-unit id="80e87cc91feba263c751a093a30993df356e6061" translate="yes" xml:space="preserve">
          <source>ThemeCacheContext::getLabel</source>
          <target state="translated">ThemeCacheContext::getLabel</target>
        </trans-unit>
        <trans-unit id="ee96f4b73e3a4a92580eafcba255a804e293b82c" translate="yes" xml:space="preserve">
          <source>ThemeHandler</source>
          <target state="translated">ThemeHandler</target>
        </trans-unit>
        <trans-unit id="a04ca933268137df3365cf1b4d37484db6d47802" translate="yes" xml:space="preserve">
          <source>ThemeHandler::$configFactory</source>
          <target state="translated">ThemeHandler::$configFactory</target>
        </trans-unit>
        <trans-unit id="fc4f0aa98ce8c9aa448f30915193c6b6bd09b914" translate="yes" xml:space="preserve">
          <source>ThemeHandler::$configInstaller</source>
          <target state="translated">ThemeHandler::$configInstaller</target>
        </trans-unit>
        <trans-unit id="5a8303f1e126530ff285d2c54bb31716dfc82524" translate="yes" xml:space="preserve">
          <source>ThemeHandler::$configManager</source>
          <target state="translated">ThemeHandler::$configManager</target>
        </trans-unit>
        <trans-unit id="46fcafe73906fc568803deeeecf0b1a6b1181a60" translate="yes" xml:space="preserve">
          <source>ThemeHandler::$cssCollectionOptimizer</source>
          <target state="translated">ThemeHandler::$cssCollectionOptimizer</target>
        </trans-unit>
        <trans-unit id="1e0f8f7c3bec27159ada9303bb6e15c779a61c06" translate="yes" xml:space="preserve">
          <source>ThemeHandler::$defaultFeatures</source>
          <target state="translated">ThemeHandler::$defaultFeatures</target>
        </trans-unit>
        <trans-unit id="78747cce11e118962543b0f89b58023bfd3a9054" translate="yes" xml:space="preserve">
          <source>ThemeHandler::$extensionDiscovery</source>
          <target state="translated">ThemeHandler::$extensionDiscovery</target>
        </trans-unit>
        <trans-unit id="7f22bb94424e77e769385233b677ee92aa371f54" translate="yes" xml:space="preserve">
          <source>ThemeHandler::$infoParser</source>
          <target state="translated">ThemeHandler::$infoParser</target>
        </trans-unit>
        <trans-unit id="6f5cdf796175e1dfa25a34c7352a2b65a7110f38" translate="yes" xml:space="preserve">
          <source>ThemeHandler::$list</source>
          <target state="translated">ThemeHandler::$list</target>
        </trans-unit>
        <trans-unit id="470f24d04d0c72d2061cc7412ba24aaa53036091" translate="yes" xml:space="preserve">
          <source>ThemeHandler::$logger</source>
          <target state="translated">ThemeHandler::$logger</target>
        </trans-unit>
        <trans-unit id="b694db0cab59a30aea18206047b02bbe59ba550f" translate="yes" xml:space="preserve">
          <source>ThemeHandler::$moduleHandler</source>
          <target state="translated">ThemeHandler::$moduleHandler</target>
        </trans-unit>
        <trans-unit id="82c43f536a2346d5544b0c12a533a03b7c1ca83c" translate="yes" xml:space="preserve">
          <source>ThemeHandler::$root</source>
          <target state="translated">ThemeHandler::$root</target>
        </trans-unit>
        <trans-unit id="11e11f447794e89eee46be54055d384bb99ff00a" translate="yes" xml:space="preserve">
          <source>ThemeHandler::$routeBuilder</source>
          <target state="translated">ThemeHandler::$routeBuilder</target>
        </trans-unit>
        <trans-unit id="f963aaf579ba5c2f5794aefcfc503fd8a4766c6d" translate="yes" xml:space="preserve">
          <source>ThemeHandler::$state</source>
          <target state="translated">ThemeHandler::$state</target>
        </trans-unit>
        <trans-unit id="aea4c116a8b7829f4dd3238ae608061159ce98a3" translate="yes" xml:space="preserve">
          <source>ThemeHandler::__construct</source>
          <target state="translated">ThemeHandler::__construct</target>
        </trans-unit>
        <trans-unit id="c1ec5f3fe92f3e16c49b4d7912651902dda761aa" translate="yes" xml:space="preserve">
          <source>ThemeHandler::addTheme</source>
          <target state="translated">ThemeHandler::addTheme</target>
        </trans-unit>
        <trans-unit id="f4fbbe853d5a67e2242deb2e75b97b95fbfe788b" translate="yes" xml:space="preserve">
          <source>ThemeHandler::doGetBaseThemes</source>
          <target state="translated">ThemeHandler::doGetBaseThemes</target>
        </trans-unit>
        <trans-unit id="3e4360d074f58967bf9ebde2db8a28c3c9f08a29" translate="yes" xml:space="preserve">
          <source>ThemeHandler::getBaseThemes</source>
          <target state="translated">ThemeHandler::getBaseThemes</target>
        </trans-unit>
        <trans-unit id="f6f9f4787012560fadfc443ca16477a0df6db8a9" translate="yes" xml:space="preserve">
          <source>ThemeHandler::getDefault</source>
          <target state="translated">ThemeHandler::getDefault</target>
        </trans-unit>
        <trans-unit id="90cbf1563f2a91546a375a1820584d10ca7a1463" translate="yes" xml:space="preserve">
          <source>ThemeHandler::getExtensionDiscovery</source>
          <target state="translated">ThemeHandler::getExtensionDiscovery</target>
        </trans-unit>
        <trans-unit id="ed864c748e943e69f807e4978454a36993735362" translate="yes" xml:space="preserve">
          <source>ThemeHandler::getName</source>
          <target state="translated">ThemeHandler::getName</target>
        </trans-unit>
        <trans-unit id="94b03d1ad3dbf242ee305eda85235247cd077911" translate="yes" xml:space="preserve">
          <source>ThemeHandler::getTheme</source>
          <target state="translated">ThemeHandler::getTheme</target>
        </trans-unit>
        <trans-unit id="cc4b35a94603b24107e8dc59444cad4f945cb96e" translate="yes" xml:space="preserve">
          <source>ThemeHandler::getThemeDirectories</source>
          <target state="translated">ThemeHandler::getThemeDirectories</target>
        </trans-unit>
        <trans-unit id="ced105640ecaec8552941650a8ac0b3f59874682" translate="yes" xml:space="preserve">
          <source>ThemeHandler::hasUi</source>
          <target state="translated">ThemeHandler::hasUi</target>
        </trans-unit>
        <trans-unit id="ab6d53b60d68f47904caf5538268fb7007d9fed2" translate="yes" xml:space="preserve">
          <source>ThemeHandler::install</source>
          <target state="translated">ThemeHandler::install</target>
        </trans-unit>
        <trans-unit id="21bdff2e1f5a6b59e8eb9c952860c010f41600ff" translate="yes" xml:space="preserve">
          <source>ThemeHandler::listInfo</source>
          <target state="translated">ThemeHandler::listInfo</target>
        </trans-unit>
        <trans-unit id="49a782cad1dab135dae8ff9ac3668cc0bf4714cd" translate="yes" xml:space="preserve">
          <source>ThemeHandler::rebuildThemeData</source>
          <target state="translated">ThemeHandler::rebuildThemeData</target>
        </trans-unit>
        <trans-unit id="020bf6edeadab5e6f70f65576d56eb4f05ed51f5" translate="yes" xml:space="preserve">
          <source>ThemeHandler::refreshInfo</source>
          <target state="translated">ThemeHandler::refreshInfo</target>
        </trans-unit>
        <trans-unit id="38c5951c6ddca4e3b072c9ab737c9961d6c28959" translate="yes" xml:space="preserve">
          <source>ThemeHandler::reset</source>
          <target state="translated">ThemeHandler::reset</target>
        </trans-unit>
        <trans-unit id="700bd66d9ae47b87e603364952bd3aa5dbedd0df" translate="yes" xml:space="preserve">
          <source>ThemeHandler::setDefault</source>
          <target state="translated">ThemeHandler::setDefault</target>
        </trans-unit>
        <trans-unit id="9d4c7a4cfcea16cfe586d730a37d884fc2a18d99" translate="yes" xml:space="preserve">
          <source>ThemeHandler::systemListReset</source>
          <target state="translated">ThemeHandler::systemListReset</target>
        </trans-unit>
        <trans-unit id="5ef7c21c8ef3f782d78448fb1c670cd6b1da1c23" translate="yes" xml:space="preserve">
          <source>ThemeHandler::systemThemeList</source>
          <target state="translated">ThemeHandler::systemThemeList</target>
        </trans-unit>
        <trans-unit id="776765dcdc0a519de786d4d7d04da8331e0427dc" translate="yes" xml:space="preserve">
          <source>ThemeHandler::themeExists</source>
          <target state="translated">ThemeHandler::themeExists</target>
        </trans-unit>
        <trans-unit id="d647c20bdd1bf8371a5b8cb08262352c4f200ae6" translate="yes" xml:space="preserve">
          <source>ThemeHandler::uninstall</source>
          <target state="translated">ThemeHandler::uninstall</target>
        </trans-unit>
        <trans-unit id="5fb37f9d3b31b002b23bdba22cb52a654aff39c4" translate="yes" xml:space="preserve">
          <source>ThemeHandlerInterface</source>
          <target state="translated">ThemeHandlerInterface</target>
        </trans-unit>
        <trans-unit id="8b0c776ae50b3e91e10948e183588be8b93a7a89" translate="yes" xml:space="preserve">
          <source>ThemeHandlerInterface::addTheme</source>
          <target state="translated">ThemeHandlerInterface::addTheme</target>
        </trans-unit>
        <trans-unit id="b19173098f6c9c1ca98dddf64bfae6f8531baa89" translate="yes" xml:space="preserve">
          <source>ThemeHandlerInterface::getBaseThemes</source>
          <target state="translated">ThemeHandlerInterface::getBaseThemes</target>
        </trans-unit>
        <trans-unit id="d0e44c45747114619cdf5bc43fe6764c8904f401" translate="yes" xml:space="preserve">
          <source>ThemeHandlerInterface::getDefault</source>
          <target state="translated">ThemeHandlerInterface::getDefault</target>
        </trans-unit>
        <trans-unit id="e0b96112002a662bec8f4c1b82931c60e80bc853" translate="yes" xml:space="preserve">
          <source>ThemeHandlerInterface::getName</source>
          <target state="translated">ThemeHandlerInterface::getName</target>
        </trans-unit>
        <trans-unit id="1f5057a6f2670382ca4cbaa71d142094d196f2d8" translate="yes" xml:space="preserve">
          <source>ThemeHandlerInterface::getTheme</source>
          <target state="translated">ThemeHandlerInterface::getTheme</target>
        </trans-unit>
        <trans-unit id="4fc3a22b8201963c1410539bc463d8af04c883d0" translate="yes" xml:space="preserve">
          <source>ThemeHandlerInterface::getThemeDirectories</source>
          <target state="translated">ThemeHandlerInterface::getThemeDirectories</target>
        </trans-unit>
        <trans-unit id="b427188ba67121d22ee84d41978ab7f61bf261e2" translate="yes" xml:space="preserve">
          <source>ThemeHandlerInterface::hasUi</source>
          <target state="translated">ThemeHandlerInterface::hasUi</target>
        </trans-unit>
        <trans-unit id="074289f0f00ba3f9ef4171cd3b8f8a7ac7e20afc" translate="yes" xml:space="preserve">
          <source>ThemeHandlerInterface::install</source>
          <target state="translated">ThemeHandlerInterface::install</target>
        </trans-unit>
        <trans-unit id="262e2462c6bc4fcabaeb58ef124c3f08e14b3217" translate="yes" xml:space="preserve">
          <source>ThemeHandlerInterface::listInfo</source>
          <target state="translated">ThemeHandlerInterface::listInfo</target>
        </trans-unit>
        <trans-unit id="a287345c3a4eab8fdf36a50d696c26abc96c4e86" translate="yes" xml:space="preserve">
          <source>ThemeHandlerInterface::rebuildThemeData</source>
          <target state="translated">ThemeHandlerInterface::rebuildThemeData</target>
        </trans-unit>
        <trans-unit id="3bd584e3bfaa45a18ffbaa95a9ea55a4dc16594a" translate="yes" xml:space="preserve">
          <source>ThemeHandlerInterface::refreshInfo</source>
          <target state="translated">ThemeHandlerInterface::refreshInfo</target>
        </trans-unit>
        <trans-unit id="7e330cb670080308bbbe00f19f011dd1a0aec06d" translate="yes" xml:space="preserve">
          <source>ThemeHandlerInterface::reset</source>
          <target state="translated">ThemeHandlerInterface::reset</target>
        </trans-unit>
        <trans-unit id="5d44f5048f65a6d38c9c2fb2fadd7b1d0989e22c" translate="yes" xml:space="preserve">
          <source>ThemeHandlerInterface::setDefault</source>
          <target state="translated">ThemeHandlerInterface::setDefault</target>
        </trans-unit>
        <trans-unit id="a3165e26dba9d9fce1222e81f6135f3af8d0cdf0" translate="yes" xml:space="preserve">
          <source>ThemeHandlerInterface::themeExists</source>
          <target state="translated">ThemeHandlerInterface::themeExists</target>
        </trans-unit>
        <trans-unit id="6d71304a5182a075e391f27d59df782f2c235930" translate="yes" xml:space="preserve">
          <source>ThemeHandlerInterface::uninstall</source>
          <target state="translated">ThemeHandlerInterface::uninstall</target>
        </trans-unit>
        <trans-unit id="d346fa53da8318029ce8949d89ad3adb730fcfeb" translate="yes" xml:space="preserve">
          <source>ThemeInitialization</source>
          <target state="translated">ThemeInitialization</target>
        </trans-unit>
        <trans-unit id="b573a4c547bf7cf49a849a5966ff391830c1b158" translate="yes" xml:space="preserve">
          <source>ThemeInitialization::$cache</source>
          <target state="translated">ThemeInitialization::$cache</target>
        </trans-unit>
        <trans-unit id="bc79063216cef39efe261368db2a3940ee9d2886" translate="yes" xml:space="preserve">
          <source>ThemeInitialization::$extensions</source>
          <target state="translated">ThemeInitialization::$extensions</target>
        </trans-unit>
        <trans-unit id="6ef75d13429a79ab6eebac936791ce4c47b5db58" translate="yes" xml:space="preserve">
          <source>ThemeInitialization::$root</source>
          <target state="translated">ThemeInitialization::$root</target>
        </trans-unit>
        <trans-unit id="d3b2eed55a4f5ccae5209036f45639376173258f" translate="yes" xml:space="preserve">
          <source>ThemeInitialization::$themeHandler</source>
          <target state="translated">ThemeInitialization::$themeHandler</target>
        </trans-unit>
        <trans-unit id="86def39f7a38322b9472772f0112d1f8a83ecc81" translate="yes" xml:space="preserve">
          <source>ThemeInitialization::__construct</source>
          <target state="translated">ThemeInitialization::__construct</target>
        </trans-unit>
        <trans-unit id="c57aa70de4f25c4b248ddaba94995aeed73eb517" translate="yes" xml:space="preserve">
          <source>ThemeInitialization::getActiveTheme</source>
          <target state="translated">ThemeInitialization::getActiveTheme</target>
        </trans-unit>
        <trans-unit id="e2abcfcd7232e9c7dfe0c59a8783c7279c7b8d81" translate="yes" xml:space="preserve">
          <source>ThemeInitialization::getActiveThemeByName</source>
          <target state="translated">ThemeInitialization::getActiveThemeByName</target>
        </trans-unit>
        <trans-unit id="4bf6061e13c4de3935b100b3f51f53fa9e2f91bc" translate="yes" xml:space="preserve">
          <source>ThemeInitialization::getExtensions</source>
          <target state="translated">ThemeInitialization::getExtensions</target>
        </trans-unit>
        <trans-unit id="aa597741af7274a9fe1e16ed3c860b62c7974e18" translate="yes" xml:space="preserve">
          <source>ThemeInitialization::initTheme</source>
          <target state="translated">ThemeInitialization::initTheme</target>
        </trans-unit>
        <trans-unit id="9395c2adb0dcff5f48c8df5d7c798cb1da499dec" translate="yes" xml:space="preserve">
          <source>ThemeInitialization::loadActiveTheme</source>
          <target state="translated">ThemeInitialization::loadActiveTheme</target>
        </trans-unit>
        <trans-unit id="68c322c068b1b12ec378937e4ed0c62642ab2ae4" translate="yes" xml:space="preserve">
          <source>ThemeInitialization::prepareStylesheetsRemove</source>
          <target state="translated">ThemeInitialization::prepareStylesheetsRemove</target>
        </trans-unit>
        <trans-unit id="01264097f473d142f83aa8dc07d289a7f4d3ec6b" translate="yes" xml:space="preserve">
          <source>ThemeInitialization::resolveStyleSheetPlaceholders</source>
          <target state="translated">ThemeInitialization::resolveStyleSheetPlaceholders</target>
        </trans-unit>
        <trans-unit id="bf9aca4bb5a7a64a185e01ca8bd12a8854feeab8" translate="yes" xml:space="preserve">
          <source>ThemeInitializationInterface</source>
          <target state="translated">ThemeInitializationInterface</target>
        </trans-unit>
        <trans-unit id="8f44dae31b558a17d6c2741ce338e15011b20f5b" translate="yes" xml:space="preserve">
          <source>ThemeInitializationInterface::getActiveTheme</source>
          <target state="translated">ThemeInitializationInterface::getActiveTheme</target>
        </trans-unit>
        <trans-unit id="57ded83ca91c053d538e6faf2dc0b62877228bba" translate="yes" xml:space="preserve">
          <source>ThemeInitializationInterface::getActiveThemeByName</source>
          <target state="translated">ThemeInitializationInterface::getActiveThemeByName</target>
        </trans-unit>
        <trans-unit id="27542ba282d96b5a6784c90f07ceedebdf01a75b" translate="yes" xml:space="preserve">
          <source>ThemeInitializationInterface::initTheme</source>
          <target state="translated">ThemeInitializationInterface::initTheme</target>
        </trans-unit>
        <trans-unit id="1ae0f7a2fb117d09c15d70aa69533cbbc5fa7d6a" translate="yes" xml:space="preserve">
          <source>ThemeInitializationInterface::loadActiveTheme</source>
          <target state="translated">ThemeInitializationInterface::loadActiveTheme</target>
        </trans-unit>
        <trans-unit id="0558c0d281a2bc68d3bbf78ffd3a1c0376ce5391" translate="yes" xml:space="preserve">
          <source>ThemeInstaller</source>
          <target state="translated">ThemeInstaller</target>
        </trans-unit>
        <trans-unit id="12c69d5db7f03fba6f7db5342824cb9e5fa9dff0" translate="yes" xml:space="preserve">
          <source>ThemeInstaller::$configFactory</source>
          <target state="translated">ThemeInstaller::$configFactory</target>
        </trans-unit>
        <trans-unit id="0f0b66b86216e27a4431a35d6ec144a6db30e7d0" translate="yes" xml:space="preserve">
          <source>ThemeInstaller::$configInstaller</source>
          <target state="translated">ThemeInstaller::$configInstaller</target>
        </trans-unit>
        <trans-unit id="aecfff67103518601c2f2ca1ee1680c4e2ee6f70" translate="yes" xml:space="preserve">
          <source>ThemeInstaller::$configManager</source>
          <target state="translated">ThemeInstaller::$configManager</target>
        </trans-unit>
        <trans-unit id="15005b7724d9ffaba5ce2fb130345ea3d65f476c" translate="yes" xml:space="preserve">
          <source>ThemeInstaller::$cssCollectionOptimizer</source>
          <target state="translated">ThemeInstaller::$cssCollectionOptimizer</target>
        </trans-unit>
        <trans-unit id="f9c1bc10a3a68a7e57136f948e153882601ce987" translate="yes" xml:space="preserve">
          <source>ThemeInstaller::$logger</source>
          <target state="translated">ThemeInstaller::$logger</target>
        </trans-unit>
        <trans-unit id="a22c14dcffe8d099d32f47cf10ddf9de494f930e" translate="yes" xml:space="preserve">
          <source>ThemeInstaller::$moduleHandler</source>
          <target state="translated">ThemeInstaller::$moduleHandler</target>
        </trans-unit>
        <trans-unit id="5158046853641753fec9d1a45e49f694527039a0" translate="yes" xml:space="preserve">
          <source>ThemeInstaller::$routeBuilder</source>
          <target state="translated">ThemeInstaller::$routeBuilder</target>
        </trans-unit>
        <trans-unit id="aa8527d6efd2d841c3b2e491575a26a1efd2ca29" translate="yes" xml:space="preserve">
          <source>ThemeInstaller::$state</source>
          <target state="translated">ThemeInstaller::$state</target>
        </trans-unit>
        <trans-unit id="d25ff05af7407d646e4c2014bd7f8f2a1e84ba45" translate="yes" xml:space="preserve">
          <source>ThemeInstaller::__construct</source>
          <target state="translated">ThemeInstaller::__construct</target>
        </trans-unit>
        <trans-unit id="308e2af3a6eda511d825980673aa0e250dd763a5" translate="yes" xml:space="preserve">
          <source>ThemeInstaller::install</source>
          <target state="translated">ThemeInstaller::install</target>
        </trans-unit>
        <trans-unit id="c957a319a785ea5dfa520679a8cd8cc4a018a760" translate="yes" xml:space="preserve">
          <source>ThemeInstaller::resetSystem</source>
          <target state="translated">ThemeInstaller::resetSystem</target>
        </trans-unit>
        <trans-unit id="f082150a6a1da8943ed6f326313e432da81037bc" translate="yes" xml:space="preserve">
          <source>ThemeInstaller::systemListReset</source>
          <target state="translated">ThemeInstaller::systemListReset</target>
        </trans-unit>
        <trans-unit id="4c1d67f070f6d99a1ff75f490e03bd47c836fd0d" translate="yes" xml:space="preserve">
          <source>ThemeInstaller::themeRegistryRebuild</source>
          <target state="translated">ThemeInstaller::themeRegistryRebuild</target>
        </trans-unit>
        <trans-unit id="63012b148ef64ee06f89754926d0b082b17d79b8" translate="yes" xml:space="preserve">
          <source>ThemeInstaller::uninstall</source>
          <target state="translated">ThemeInstaller::uninstall</target>
        </trans-unit>
        <trans-unit id="0e3246cb6b9835665cf90c7664556e0dc7002c1b" translate="yes" xml:space="preserve">
          <source>ThemeInstallerInterface</source>
          <target state="translated">ThemeInstallerInterface</target>
        </trans-unit>
        <trans-unit id="d5d56b07d904f1072d96a61e48e3396d19192fd6" translate="yes" xml:space="preserve">
          <source>ThemeInstallerInterface::install</source>
          <target state="translated">ThemeInstallerInterface::install</target>
        </trans-unit>
        <trans-unit id="7f387f6b30de1a26b0a45ea2e11e7557cd5a2913" translate="yes" xml:space="preserve">
          <source>ThemeInstallerInterface::uninstall</source>
          <target state="translated">ThemeInstallerInterface::uninstall</target>
        </trans-unit>
        <trans-unit id="be76d15249430246541fb3922b4d0ef21ec73639" translate="yes" xml:space="preserve">
          <source>ThemeManager</source>
          <target state="translated">ThemeManager</target>
        </trans-unit>
        <trans-unit id="7afddfef9c4984a871156b1db26510e0ddf608a2" translate="yes" xml:space="preserve">
          <source>ThemeManager::$activeTheme</source>
          <target state="translated">ThemeManager::$activeTheme</target>
        </trans-unit>
        <trans-unit id="0f8b77181791daa964413af8a5a55964cd08f976" translate="yes" xml:space="preserve">
          <source>ThemeManager::$moduleHandler</source>
          <target state="translated">ThemeManager::$moduleHandler</target>
        </trans-unit>
        <trans-unit id="3c5dadaf6e02255ef7994f389abb01855e9cf2cf" translate="yes" xml:space="preserve">
          <source>ThemeManager::$root</source>
          <target state="translated">ThemeManager::$root</target>
        </trans-unit>
        <trans-unit id="07b658fcee028b4011ff4b6978ae4a1b46af3a19" translate="yes" xml:space="preserve">
          <source>ThemeManager::$themeInitialization</source>
          <target state="translated">ThemeManager::$themeInitialization</target>
        </trans-unit>
        <trans-unit id="d8e55a835db0619b84a7033a436f02192241d4da" translate="yes" xml:space="preserve">
          <source>ThemeManager::$themeNegotiator</source>
          <target state="translated">ThemeManager::$themeNegotiator</target>
        </trans-unit>
        <trans-unit id="15aef2af4afe978ef599b7c125f50751be2397f6" translate="yes" xml:space="preserve">
          <source>ThemeManager::$themeRegistry</source>
          <target state="translated">ThemeManager::$themeRegistry</target>
        </trans-unit>
        <trans-unit id="65278cea826d6c4c93dd793d98f180b900ab5bb2" translate="yes" xml:space="preserve">
          <source>ThemeManager::__construct</source>
          <target state="translated">ThemeManager::__construct</target>
        </trans-unit>
        <trans-unit id="ed533f58f5dac39a126a4c293f439b6e0b1a95e1" translate="yes" xml:space="preserve">
          <source>ThemeManager::alter</source>
          <target state="translated">ThemeManager::alter</target>
        </trans-unit>
        <trans-unit id="cd9abdc531e14e09fbe4761f918f354a7e3adb0e" translate="yes" xml:space="preserve">
          <source>ThemeManager::alterForTheme</source>
          <target state="translated">ThemeManager::alterForTheme</target>
        </trans-unit>
        <trans-unit id="b492c6e4f1a2407a434bc511fce56725a3e22d2f" translate="yes" xml:space="preserve">
          <source>ThemeManager::getActiveTheme</source>
          <target state="translated">ThemeManager::getActiveTheme</target>
        </trans-unit>
        <trans-unit id="308ab5d6c7e522cfefb4a358e7e508491132ffcc" translate="yes" xml:space="preserve">
          <source>ThemeManager::hasActiveTheme</source>
          <target state="translated">ThemeManager::hasActiveTheme</target>
        </trans-unit>
        <trans-unit id="c0dd3d4ec93d8ceebaa08425cb31b8a9780c0045" translate="yes" xml:space="preserve">
          <source>ThemeManager::initTheme</source>
          <target state="translated">ThemeManager::initTheme</target>
        </trans-unit>
        <trans-unit id="8c4dc8516be59ab4fd89f58e515a414b23594125" translate="yes" xml:space="preserve">
          <source>ThemeManager::render</source>
          <target state="translated">ThemeManager::render</target>
        </trans-unit>
        <trans-unit id="4cf3baaada40e9bbc9f727e38d1226d1c2c2d602" translate="yes" xml:space="preserve">
          <source>ThemeManager::resetActiveTheme</source>
          <target state="translated">ThemeManager::resetActiveTheme</target>
        </trans-unit>
        <trans-unit id="dfa890397554f28f5147c9685dc07c03bb308e5d" translate="yes" xml:space="preserve">
          <source>ThemeManager::setActiveTheme</source>
          <target state="translated">ThemeManager::setActiveTheme</target>
        </trans-unit>
        <trans-unit id="3bd0c76bf80a6c884f11f2c90718d30323c97f28" translate="yes" xml:space="preserve">
          <source>ThemeManager::setThemeRegistry</source>
          <target state="translated">ThemeManager::setThemeRegistry</target>
        </trans-unit>
        <trans-unit id="2e31d452aa05990111d0d7398512741c28390bef" translate="yes" xml:space="preserve">
          <source>ThemeManagerInterface</source>
          <target state="translated">ThemeManagerInterface</target>
        </trans-unit>
        <trans-unit id="ba8b34c7da3793958c269ea017039547f607c478" translate="yes" xml:space="preserve">
          <source>ThemeManagerInterface::alter</source>
          <target state="translated">ThemeManagerInterface::alter</target>
        </trans-unit>
        <trans-unit id="d710460dbd65d45657ad05013287ae3d97d024ab" translate="yes" xml:space="preserve">
          <source>ThemeManagerInterface::alterForTheme</source>
          <target state="translated">ThemeManagerInterface::alterForTheme</target>
        </trans-unit>
        <trans-unit id="d9218acc6be8ce231c3ad08ad926189b17ca8183" translate="yes" xml:space="preserve">
          <source>ThemeManagerInterface::getActiveTheme</source>
          <target state="translated">ThemeManagerInterface::getActiveTheme</target>
        </trans-unit>
        <trans-unit id="662e531de11c88c3d54a0e9ed773c30864c87151" translate="yes" xml:space="preserve">
          <source>ThemeManagerInterface::hasActiveTheme</source>
          <target state="translated">ThemeManagerInterface::hasActiveTheme</target>
        </trans-unit>
        <trans-unit id="d274ec97580805e31195e50ce1eb14637a2de0ee" translate="yes" xml:space="preserve">
          <source>ThemeManagerInterface::render</source>
          <target state="translated">ThemeManagerInterface::render</target>
        </trans-unit>
        <trans-unit id="8c0bd0837d9eb97677a43e89b44653be4e70874a" translate="yes" xml:space="preserve">
          <source>ThemeManagerInterface::resetActiveTheme</source>
          <target state="translated">ThemeManagerInterface::resetActiveTheme</target>
        </trans-unit>
        <trans-unit id="d3f5743a1f7d3ebdef33ddf8ca38a37eedb6d86d" translate="yes" xml:space="preserve">
          <source>ThemeManagerInterface::setActiveTheme</source>
          <target state="translated">ThemeManagerInterface::setActiveTheme</target>
        </trans-unit>
        <trans-unit id="f30a35b18ee22853830f1d39485a9820d4565438" translate="yes" xml:space="preserve">
          <source>ThemeNegotiatorInterface</source>
          <target state="translated">ThemeNegotiatorInterface</target>
        </trans-unit>
        <trans-unit id="ed09b339aff84521530ae546410bc4a81857b9f3" translate="yes" xml:space="preserve">
          <source>ThemeNegotiatorInterface::applies</source>
          <target state="translated">ThemeNegotiatorInterface::applies</target>
        </trans-unit>
        <trans-unit id="ded09b5c410b2e8ad07b0afe34c601d251231616" translate="yes" xml:space="preserve">
          <source>ThemeNegotiatorInterface::determineActiveTheme</source>
          <target state="translated">ThemeNegotiatorInterface::determineActiveTheme</target>
        </trans-unit>
        <trans-unit id="c8acf3c36b8cd5ded1b78780cf5e7a82021f8fb4" translate="yes" xml:space="preserve">
          <source>ThemeRegistry</source>
          <target state="translated">ThemeRegistry</target>
        </trans-unit>
        <trans-unit id="bdd3a04445b976e4770aa455cb43f93ef30bc38a" translate="yes" xml:space="preserve">
          <source>ThemeRegistry::$completeRegistry</source>
          <target state="translated">ThemeRegistry::$completeRegistry</target>
        </trans-unit>
        <trans-unit id="e8cb24429c3aa2ac1e6453b57ae1c943a9a6c86c" translate="yes" xml:space="preserve">
          <source>ThemeRegistry::$persistable</source>
          <target state="translated">ThemeRegistry::$persistable</target>
        </trans-unit>
        <trans-unit id="f34eb307ea9ac73d28186f3473df48bdeabfcb90" translate="yes" xml:space="preserve">
          <source>ThemeRegistry::__construct</source>
          <target state="translated">ThemeRegistry::__construct</target>
        </trans-unit>
        <trans-unit id="a1c287de507b7a589864f08bce6dc32865a9222d" translate="yes" xml:space="preserve">
          <source>ThemeRegistry::get</source>
          <target state="translated">ThemeRegistry::get</target>
        </trans-unit>
        <trans-unit id="1b3f7992e414aee82f44c1851b546066b8c44dbc" translate="yes" xml:space="preserve">
          <source>ThemeRegistry::has</source>
          <target state="translated">ThemeRegistry::has</target>
        </trans-unit>
        <trans-unit id="e1f4263615d52c46dc7619b3d456a95de77b8dfc" translate="yes" xml:space="preserve">
          <source>ThemeRegistry::initializeRegistry</source>
          <target state="translated">ThemeRegistry::initializeRegistry</target>
        </trans-unit>
        <trans-unit id="f0b9c81db3fd1d185338d5e303790efd0fd9bfa0" translate="yes" xml:space="preserve">
          <source>ThemeRegistry::resolveCacheMiss</source>
          <target state="translated">ThemeRegistry::resolveCacheMiss</target>
        </trans-unit>
        <trans-unit id="90c0c6074f2f52140012c8c3e4e4a330dfb01db8" translate="yes" xml:space="preserve">
          <source>ThemeRegistry::updateCache</source>
          <target state="translated">ThemeRegistry::updateCache</target>
        </trans-unit>
        <trans-unit id="8438e0500cb65394ed9c8684bc44f99761d7f0b0" translate="yes" xml:space="preserve">
          <source>ThemeSettings</source>
          <target state="translated">ThemeSettings</target>
        </trans-unit>
        <trans-unit id="2a18f31c1e2edda426e8759569f220628cc8cf6d" translate="yes" xml:space="preserve">
          <source>ThemeSettings::$theme</source>
          <target state="translated">ThemeSettings::$theme</target>
        </trans-unit>
        <trans-unit id="e6b468cc6c9a15c95cddb4c6cc73cab14fab05f2" translate="yes" xml:space="preserve">
          <source>ThemeSettings::__construct</source>
          <target state="translated">ThemeSettings::__construct</target>
        </trans-unit>
        <trans-unit id="9dde73fd654ba5f33739ee5b119188a74b0cb5c9" translate="yes" xml:space="preserve">
          <source>ThemeSettings::getCacheTags</source>
          <target state="translated">ThemeSettings::getCacheTags</target>
        </trans-unit>
        <trans-unit id="a921e400da61dcf8e1f38fd63c89b8ba991d1659" translate="yes" xml:space="preserve">
          <source>ThemeSettings::getTheme</source>
          <target state="translated">ThemeSettings::getTheme</target>
        </trans-unit>
        <trans-unit id="0ef6d5cddc89273d41422116fa3f3e45065ed621" translate="yes" xml:space="preserve">
          <source>Themes can inherit templates and function implementations from earlier themes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177bd7cb224d06b864f2cf01f32365ee17dc3164" translate="yes" xml:space="preserve">
          <source>Themes may register new theme hooks within a &lt;a href=&quot;../../function/hook_theme/8.1.x&quot;&gt;hook_theme&lt;/a&gt;() implementation, but it is more common for themes to override default implementations provided by modules than to register entirely new theme hooks. Themes can override a default implementation by creating a template file with the same name as the default implementation; for example, to override the display of search results, a theme would add a file called &lt;a href=&quot;../../../core-modules-search-templates-search-result.html.twig/8.1.x&quot;&gt;search-result.html.twig&lt;/a&gt; to its templates directory. A good starting point for doing this is normally to copy the default implementation template, and then modifying it as desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad44e174332f04c96f72645c00f708eebeffc06" translate="yes" xml:space="preserve">
          <source>Themes may replace module-defined CSS files by adding a stylesheet with the same filename. For example, themes/bartik/system-menus.css would replace modules/system/system-menus.css. This allows themes to override complete CSS files, rather than specific selectors, when necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea97e6a9c27b442eb56ea570dc621509e1ead08a" translate="yes" xml:space="preserve">
          <source>Themes may specify iframe-specific CSS files for use with CKEditor by including a &quot;ckeditor_stylesheets&quot; key in their .info.yml file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c50376d81bc4b0a829f2d86455b69f3ca45b72" translate="yes" xml:space="preserve">
          <source>Theming for maintenance pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54cd988d0eec1d9f0d590ed0b5e786b5e189c58" translate="yes" xml:space="preserve">
          <source>Then you can filter out via $query-&amp;gt;condition('level1.*.level3', 1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2429c1bd719ae2ad3cb6a2959ec327170271725" translate="yes" xml:space="preserve">
          <source>Then, to build and render the entity:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae33b87f1d75a63bd6dc15b67bbf507972dc87e9" translate="yes" xml:space="preserve">
          <source>Then, we make sure that at least one module included in the archive file has an .info.yml file which claims that the code is compatible with the current version of Drupal core.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f21c686b1e0939d72cc6b71fb327530f23cbb60" translate="yes" xml:space="preserve">
          <source>There are also methods to join to other tables, add fields with aliases, &lt;a href=&quot;https://api.drupal.org/api/drupal/vendor%21phpunit%21phpunit%21src%21Framework%21Assert%21Functions.php/function/isNull/8.1.x&quot;&gt;isNull&lt;/a&gt;() to have a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ef86a47cc51cf7b7c3dccb1287b282b129f6c9" translate="yes" xml:space="preserve">
          <source>There are also several block-related hooks, which allow you to affect the content and access permissions for blocks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25463f3e3f01817bd7c7937723eea7cad10fba1" translate="yes" xml:space="preserve">
          <source>There are contributed modules available for integrating many third-party sites into Drupal. Search on &lt;a href=&quot;https://www.drupal.org/project/project_module&quot;&gt;https://www.drupal.org/project/project_module&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4241e4573b2476f86b18bbc1438ff5664a410e25" translate="yes" xml:space="preserve">
          <source>There are existing entities, but none with existing values for this field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33cec100660e4eb403f10e4782f7547b796dd79e" translate="yes" xml:space="preserve">
          <source>There are existing entities, but the schema changes can be applied without losing their data (e.g., if the schema changes can be performed by altering tables rather than dropping and recreating them).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451107dba3a9808f7928fb8a5cfb639c6f8bbbde" translate="yes" xml:space="preserve">
          <source>There are existing field values, but the schema changes can be applied without losing them (e.g., if the schema changes can be performed by altering tables rather than dropping and recreating them).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26b614af4c954269bc14d413bff23e78cfde7bb" translate="yes" xml:space="preserve">
          <source>There are in fact multiple render pipelines:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27fe3f52825e3ae35a32a28b0acffb14d5ed01dc" translate="yes" xml:space="preserve">
          <source>There are many ways that a merge query could be malformed. They should all throw this exception and set an appropriately descriptive message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139fbcb9c65c0c5ba37246a20b409a5caa75524f" translate="yes" xml:space="preserve">
          <source>There are no existing entities for the entity type to which this field is attached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee39e558014d274647ecc8b147fc599b9aa25647" translate="yes" xml:space="preserve">
          <source>There are no existing entities for the entity type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceac80f585c592de0d7ab8224d3df1403129546b" translate="yes" xml:space="preserve">
          <source>There are no strict requirements as to the string to be used to identify the plugin, since discovery of the appropriate operation plugin to be used to apply an operation is based on the values of the 'toolkit' and the 'operation' annotation values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47832b346ff65bdb6227495b60f2ad98a3218a7" translate="yes" xml:space="preserve">
          <source>There are project-wide coding standards for OO code, including naming: &lt;a href=&quot;https://www.drupal.org/node/608152&quot;&gt;https://www.drupal.org/node/608152&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e6c5a9de64a247ab3c0fdd06d7700b70726c5a" translate="yes" xml:space="preserve">
          <source>There are several classes and functions that are useful for interacting with web services:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f44159c9c34485a7bb6edc0ea8b5268f5a2fb06" translate="yes" xml:space="preserve">
          <source>There are several good examples of this in Drupal Core:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e964691641b0990b24884ad070c608b2a18d9c28" translate="yes" xml:space="preserve">
          <source>There are several reasons for this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055cffe7b4c864ebe053598852fe3dbeba24727a" translate="yes" xml:space="preserve">
          <source>There are several things a module developer may need to do with plugins:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008a4a4186aa54aeb3ca59bd0a507e99b3823942" translate="yes" xml:space="preserve">
          <source>There are similar properties containing callback functions invoked by self::doValidateForm() and &lt;a href=&quot;../../../core-includes-common.inc/function/drupal_render/8.1.x&quot;&gt;drupal_render&lt;/a&gt;(), appropriate for those operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40539c019f31e56e4b1b223b3fe6c9e3ee70a32b" translate="yes" xml:space="preserve">
          <source>There are three kinds of typed data: primitive, complex, and list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c882b936efddfbd39b6747facfd72e1060577d" translate="yes" xml:space="preserve">
          <source>There are three valid cases for the returned CacheableMetadata object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b879cd1dba22aeedbffb08f78590df31159c681f" translate="yes" xml:space="preserve">
          <source>There are two kinds of local files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55066ccbbf5d1735a32fbeef280d1fa1cffeca82" translate="yes" xml:space="preserve">
          <source>There are two kinds of queue backends available: reliable, which preserves the order of messages and guarantees that every item will be executed at least once. The non-reliable kind only does a best effort to preserve order in messages and to execute them at least once but there is a small chance that some items get lost. For example, some distributed back-ends like Amazon SQS will be managing jobs for a large set of producers and consumers where a strict FIFO ordering will likely not be preserved. Another example would be an in-memory queue backend which might lose items if it crashes. However, such a backend would be able to deal with significantly more writes than a reliable queue and for many tasks this is more important. See &lt;a href=&quot;../../../core-modules-aggregator-aggregator.module/function/aggregator_cron/8.1.x&quot;&gt;aggregator_cron&lt;/a&gt;() for an example of how to effectively use a non-reliable queue. Another example is doing Twitter statistics -- the small possibility of losing a few items is insignificant next to power of the queue being able to keep up with writes. As described in the processing section, regardless of the queue being reliable or not, the processing code should be aware that an item might be handed over for processing more than once (because the processing code might time out before it finishes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="debcd4cae6042b6a996f553a384645c9aa2947c1" translate="yes" xml:space="preserve">
          <source>There are two ways to interact with the search system:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f7106d39522942012dd285de9974200f51879a" translate="yes" xml:space="preserve">
          <source>There are two ways to remove an item from the cache:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3564926758f01b4dffd2e564eae33538bbd33dc" translate="yes" xml:space="preserve">
          <source>There are use cases for modules to act both before and after form language being updated, thus the update is performed through an entity builder callback, which allows to support both cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861e715b13bccce64a7a97b1a8dd2866ea8898e6" translate="yes" xml:space="preserve">
          <source>There is also a shortcut method on entity classes, which creates an entity with an array of provided property values: \Drupal\Core\Entity::create().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65324eec52d445755f930ff131acbd080991a27f" translate="yes" xml:space="preserve">
          <source>There is no return value, but you can check to see if there are errors by calling $form_state-&amp;gt;getErrors().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be3c841b295da3c99a452dd174c52adf852bcf4" translate="yes" xml:space="preserve">
          <source>There may be nested configuration keys separated by dots or more complex patterns like '%parent.name' which references the 'name' value of the parent element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c2aecac626c34807aa8fcdb5c59e6372bcbaa5" translate="yes" xml:space="preserve">
          <source>There must be a scheme and it must be a Drupal-provided scheme like 'public', 'private', 'temporary', or an extension provided with hook_stream_wrappers().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e80d359dbfb453614f298c41aebb15df40eab72" translate="yes" xml:space="preserve">
          <source>There was a failure fetching available update data for this project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ccdef07b35f658792dc51c496a50f3a85413a80" translate="yes" xml:space="preserve">
          <source>There will also be a single array entry of #conjunction, which is the conjunction that will be applied to the array, such as AND.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67426c34542a27513cd5a00513bbff76f4b84365" translate="yes" xml:space="preserve">
          <source>Therefore it looks up in all bundles to find the most used field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d983e6ff97951760e0ec48081a5aef75893e0e67" translate="yes" xml:space="preserve">
          <source>Therefore specify '_theme: ajax_base_page' as part of the router options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca914f158cf686af262616fef609403c90bed5cc" translate="yes" xml:space="preserve">
          <source>Therefore, when using a PathValidatorInterface to validate 'internal:' URIs, we must map:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30775c17dcefd57cf03a04dd378e63fc795b4c3b" translate="yes" xml:space="preserve">
          <source>These &amp;lt;div&amp;gt; tags are used for drag and drop tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5df21cf9efa7907944554cc604cbb4a86ee718c" translate="yes" xml:space="preserve">
          <source>These are raw and unvalidated, so should not be used without a thorough understanding of security implications. In almost all cases, code should use self::getValues() and self::getValue() exclusively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c025c8ec950f37bccf93e66a248987dc732fc2" translate="yes" xml:space="preserve">
          <source>These are raw and unvalidated, so should not be used without a thorough understanding of security implications. In almost all cases, code should use the data in the 'values' array exclusively. The most common use of this key is for multi-step forms that need to clear some of the user input when setting 'rebuild'. The values correspond to &lt;a href=&quot;../../../core-lib-drupal.php/function/drupal-request/8.1.x&quot;&gt;\Drupal::request&lt;/a&gt;()-&amp;gt;request or &lt;a href=&quot;../../../core-lib-drupal.php/function/drupal-request/8.1.x&quot;&gt;\Drupal::request&lt;/a&gt;()-&amp;gt;query, depending on the 'method' chosen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da381e39ff789fe1f26d349ca025738c44610d7d" translate="yes" xml:space="preserve">
          <source>These are the global variables that Drupal uses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1943051a528893e7623f4a31093727dbb105693a" translate="yes" xml:space="preserve">
          <source>These database columns do not belong to any entity fields. Any normalized data that is stored should be associated with an entity field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499812d1ec45de19413581d190adc9ec7e721a78" translate="yes" xml:space="preserve">
          <source>These directories are globally ignored in the recursive filesystem scan; i.e., extensions (of all types) are not able to use any of these names, because their directory names will be skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d77c871e20472c8aec258318eb9a5b276c3c29" translate="yes" xml:space="preserve">
          <source>These error messages are shared by both &lt;a href=&quot;../../../core-modules-update-update.install/function/update_requirements/8.1.x&quot;&gt;update_requirements&lt;/a&gt;() for the site-wide status report at admin/reports/status and in the body of the notification email messages generated by &lt;a href=&quot;../update_cron/8.1.x&quot;&gt;update_cron&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27da36d711c69d20cddb3aac6bb6923067fb0437" translate="yes" xml:space="preserve">
          <source>These identify a specific variation/representation of the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8007c57214bed636cb9529199b01f49040cab22" translate="yes" xml:space="preserve">
          <source>These implementations have to be placed in a MODULE.post_update.php file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8563a4a3e886f8c207c70c54c6ce009c1b0c1f1d" translate="yes" xml:space="preserve">
          <source>These optional tags are used to group and set properties on columns within a table. For example, one may easily group three columns and apply same background style to all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b869e4848445317780cbd28853d1ee2abae3cd6a" translate="yes" xml:space="preserve">
          <source>These two variables are provided for context:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7422d8eee640c4dbccac1b404f50f526d7336a" translate="yes" xml:space="preserve">
          <source>These updates are executed after all &lt;a href=&quot;../hook_update_n/8.1.x&quot;&gt;hook_update_N&lt;/a&gt;() implementations. At this stage Drupal is already fully repaired so you can use any API as you wish.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7fe7f3f9687c1c490d706d828305f440861a10" translate="yes" xml:space="preserve">
          <source>These variables are provided to give context about the parent comment (if any):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f4ed73d1a0e132067694d850d7b4f872ebb7e9" translate="yes" xml:space="preserve">
          <source>They are the standard tag intended for linking to a resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfd1df4541e0d19249b3e1cc7ebebd5a3c18bad" translate="yes" xml:space="preserve">
          <source>Third party entity settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21418062163ed8d8820f9879ca23fbd8432a210d" translate="yes" xml:space="preserve">
          <source>ThirdPartySettingsInterface</source>
          <target state="translated">ThirdPartySettingsInterface</target>
        </trans-unit>
        <trans-unit id="72a819d8a2d3514e4b35f1e09781768fe393261e" translate="yes" xml:space="preserve">
          <source>ThirdPartySettingsInterface::getThirdPartyProviders</source>
          <target state="translated">ThirdPartySettingsInterface::getThirdPartyProviders</target>
        </trans-unit>
        <trans-unit id="bd4b597e7a967665071201d268eee29341e5c8d7" translate="yes" xml:space="preserve">
          <source>ThirdPartySettingsInterface::getThirdPartySetting</source>
          <target state="translated">ThirdPartySettingsInterface::getThirdPartySetting</target>
        </trans-unit>
        <trans-unit id="971f2a289488460ea98a31ea964487d52cecb219" translate="yes" xml:space="preserve">
          <source>ThirdPartySettingsInterface::getThirdPartySettings</source>
          <target state="translated">ThirdPartySettingsInterface::getThirdPartySettings</target>
        </trans-unit>
        <trans-unit id="2e129f2e14e4b879ba1ebc50fd7a7239052f23a9" translate="yes" xml:space="preserve">
          <source>ThirdPartySettingsInterface::setThirdPartySetting</source>
          <target state="translated">ThirdPartySettingsInterface::setThirdPartySetting</target>
        </trans-unit>
        <trans-unit id="3223e7013b7f3905a4591189f989b6c9b404c0c4" translate="yes" xml:space="preserve">
          <source>ThirdPartySettingsInterface::unsetThirdPartySetting</source>
          <target state="translated">ThirdPartySettingsInterface::unsetThirdPartySetting</target>
        </trans-unit>
        <trans-unit id="884eef6f7590fe7d8f23ce6b419b30c261930106" translate="yes" xml:space="preserve">
          <source>This #process handler is automatically invoked for 'password_confirm' form elements to add the JavaScript and string translations for dynamic password validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb18b55f98bdb50ceda0cbefd843e9b0c0167e93" translate="yes" xml:space="preserve">
          <source>This RenderCache implementation automatically replaces an element with a placeholder:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165e9253f29790e7e0f3d1569aaf629e0e7bdd72" translate="yes" xml:space="preserve">
          <source>This Twig extension was originally based on Twig i18n extension. It has been severely modified to work properly with the complexities of the Drupal translation system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f385014410cc85e9e1cf341db8b54e6c04d6bf" translate="yes" xml:space="preserve">
          <source>This abstract class provides the generic block configuration form, default block settings, and handling for general user-defined block visibility settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8c48514d2990c5d4c6cdfe1ef0515b22d04bb9" translate="yes" xml:space="preserve">
          <source>This accounts for drag-and-drop reordering of field values, and filtering of empty values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6c40419de41915959ef24181fa9fce21927fec" translate="yes" xml:space="preserve">
          <source>This allows &quot;undelayed&quot; variants of processes relying on the Queue interface. The queue data resides in memory. It should only be used for items that will be queued and dequeued within a given page request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec3495c1acde47ca36d54ee6707aab456c6975a" translate="yes" xml:space="preserve">
          <source>This allows a class implementing EntityTypeListenerInterface to subscribe and react to entity type events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822ec2343549f543fb15c4f382a069ccb7f7dc98" translate="yes" xml:space="preserve">
          <source>This allows a class implementing FieldStorageDefinitionListenerInterface to subscribe and react to field storage definition events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0e52cb03dd47622498e15a050493b10c80f902" translate="yes" xml:space="preserve">
          <source>This allows for safe switching of user accounts by ensuring that session data for one user is not leaked in to others. It also provides a stack that allows reverting to a previous user after switching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05bcc8c3b8e48b3b83d31b7fb0ec91d535495719" translate="yes" xml:space="preserve">
          <source>This allows site administrators with the 'administer software updates' permission to either upgrade existing projects, or download and install new ones, so long as the killswitch setting ('allow_authorize_operations') is not FALSE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1e85c9533fd49e879c793ccf73e37cedb62af2" translate="yes" xml:space="preserve">
          <source>This allows the implementation to manipulate the listing, like filtering or sorting the loaded entities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38ab564d1ee8dfc0bba9b75ac4b6ff002630c51" translate="yes" xml:space="preserve">
          <source>This allows us to avoid talking to the cache twice per auto-placeholdered element, or in case of an uncacheable element, to render it twice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0030070808077d1a04d925a0d07328aefec3d5" translate="yes" xml:space="preserve">
          <source>This allows you to set the URI. Generally is only called by the factory method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd0486cbf8e2f7e6cbc20e3032e6fc66e128e8a" translate="yes" xml:space="preserve">
          <source>This also allows inspecting a built container for debugging purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371b07e0fc58c1ffeeddc6282228f755140adc77" translate="yes" xml:space="preserve">
          <source>This also can be used for testing purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99447da1746f1d091d3c2af3ce37ade5327c38f3" translate="yes" xml:space="preserve">
          <source>This also implements libraries-overrides for entire libraries that have been specified by the LibraryDiscoveryParser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bff4956dbe89fa42b70fc979bb3e640edf93b26" translate="yes" xml:space="preserve">
          <source>This always holds the original, unchanged values of the entity. The values are keyed by language code, whereas LanguageInterface::LANGCODE_DEFAULT is used for values in default language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90124079c76c8ed88ef82424d55cc5694a2f3b0" translate="yes" xml:space="preserve">
          <source>This approach preserves compatibility with node/comment templates. Alternate user picture implementations (e.g., Gravatar) should provide their own add/edit/delete forms and populate the 'picture' variable during the preprocess stage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240b9821393137d7ce15d6af56ffce7d75526380" translate="yes" xml:space="preserve">
          <source>This array contains at most two entries: one for the data, one for the properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d7bf37bd92937751491ad82082d10a9747a400" translate="yes" xml:space="preserve">
          <source>This array contains one entry per field table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2474566f2111567cf48d4ad05c46cbaa23448213" translate="yes" xml:space="preserve">
          <source>This array is keyed by strings representing the unit (e.g. '1 year|@count years') and with the amount of values of the unit in seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ead3d471ddec3b23aee4e4393764330e16fd5b" translate="yes" xml:space="preserve">
          <source>This array will typically be passed through &lt;a href=&quot;../../../core-lib-drupal-core-template-attribute.php/class/attribute/8.1.x&quot;&gt;Drupal\Core\Template\Attribute&lt;/a&gt; to create the attributes variables that are available to template files. These include $attributes, $title_attributes, $content_attributes and the field-specific $item_attributes variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52f81added7201e1eef54d3ed8d921094fd869c" translate="yes" xml:space="preserve">
          <source>This automatic placeholdering is performed to ensure the containing elements and overarching response are as cacheable as possible. Elements whose subtree bubble either max-age=0 or high-cardinality cache contexts (such as 'user' and 'session') are considered poorly cacheable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03360388958c01a60ee10d3cf03efb5902fd8215" translate="yes" xml:space="preserve">
          <source>This base implementation just returns the array of arguments and thus does not need to be called by overriding methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9748cfc743a37cd95366fe54a16d4813d0fbc54" translate="yes" xml:space="preserve">
          <source>This callback iterates over all child elements of the #type 'actions' container to look for elements with a #dropbutton property, so as to group those elements into dropbuttons. As such, it works similar to #group, but is specialized for dropbuttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7bcf20cbebaedb7e14054585cc3801f58a1246" translate="yes" xml:space="preserve">
          <source>This callback may be specified in a batch to perform clean-up operations, or to analyze the results of the batch operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530aeaaac0aea0e591b83e1c178ddb594f57ab78" translate="yes" xml:space="preserve">
          <source>This can be typically used to pre-fill entity values or change the form state before the entity form is built. It is invoked just once when first building the entity form. Rebuilds will not trigger a new invocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad56b851285e68faa17ff68b857af8d600095a78" translate="yes" xml:space="preserve">
          <source>This can be used for example in really early installer phases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad89630bc96e33c2923001d3a4a18ca8f56a2b97" translate="yes" xml:space="preserve">
          <source>This can be used to compute things like case-insensitive diffs, or diffs which ignore changes in white-space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795088967400947b261abf4968ece7f4e73f9239" translate="yes" xml:space="preserve">
          <source>This can be used to indicate update functions from other modules that your module's update functions depend on, or vice versa. It is used by the update system to determine the appropriate order in which updates should be run, as well as to search for missing dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe54658a9ff6c99543c7cea175a80d6b802611b3" translate="yes" xml:space="preserve">
          <source>This can be used to mock a cache backend where one needs to know how many times a cache entry was set or requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a681c3ce1b5060e53abf55454fdfb3ea6975f22c" translate="yes" xml:space="preserve">
          <source>This can be used to skip running an installation task when certain conditions are met, even though the task may still show on the list of installation tasks presented to the user. For example, the Drupal installer uses this flag to skip over the database configuration form when valid database connection information is already available from settings.php. It also uses this flag to skip language import tasks when the installation is being performed in English.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a173d12f5695b6c12b180022cd39a3eb37f763f" translate="yes" xml:space="preserve">
          <source>This can be valuable to be able to cache a view and still have some level of dynamic output. In an ideal world, the actual output will include HTML comment-based tokens, and then the post process can replace those tokens. This hook can be used by themes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="182ceea805d39f16ad085ab18df3b93481e33ec4" translate="yes" xml:space="preserve">
          <source>This can lead to broken pages (missing assets), stale pages (missing cache tags causing a page not to be invalidated) or even security problems (missing cache contexts causing a cached page not to be varied sufficiently).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6633f3c778f7b2ad8af4a79b76e5ff52eebff44" translate="yes" xml:space="preserve">
          <source>This check does not need to look if the specific instance can be resolved to a route, only whether the router can generate routes from objects of this class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb0b6e2fc3c8c556128ad98f0ef602b59d8de58" translate="yes" xml:space="preserve">
          <source>This checks that the submitted value matches an active route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc1356e6ac07da08ccad33380f978e8bf56ae44" translate="yes" xml:space="preserve">
          <source>This checks that the submitted value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a1295106d8193b45a68e5e4dbaeaa06b0701ef3" translate="yes" xml:space="preserve">
          <source>This class acts as a wrapper for transactions. To begin a transaction, simply instantiate it. When the object goes out of scope and is destroyed it will automatically commit. It also will check to see if the specified connection supports transactions. If not, it will simply skip any transaction commands, allowing user-space code to proceed normally. The only difference is that rollbacks won't actually do anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60bf1a528be5babaa7511c01e0cd142a762b834" translate="yes" xml:space="preserve">
          <source>This class behaves very similar to a \PDOStatement but as it always fetches every row it is possible to manipulate those results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72dec864bf6a1f635046a7a70a36e1f4a8774ba" translate="yes" xml:space="preserve">
          <source>This class calls out to some methods on the execution context marked as internal. These methods are internal to the validator (which is implemented by this class) but should not be called by users. See &lt;a href=&quot;http://symfony.com/doc/current/contributing/code/bc.html&quot;&gt;http://symfony.com/doc/current/contributing/code/bc.html&lt;/a&gt; for more information about @internal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd4840d9029ab4ce164d839bf89ebbb54651a05" translate="yes" xml:space="preserve">
          <source>This class can be used as-is by most content entity types. Entity types requiring special handling can extend the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="181a8c3f9c2a6146880fb2b7ad34cac25bf90dc6" translate="yes" xml:space="preserve">
          <source>This class can be used to provide theme engine-like late escaping functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738c90c7b6bb5633c0b25fc9b3e483426124cbb9" translate="yes" xml:space="preserve">
          <source>This class can only be used with a table with a single unique index. Often, this will be the primary key. On such a table this class works like Insert except the rows will be set to the desired values even if the key existed before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aaa930203b6cf8a86af6b7be55aa4a5b6d3e959" translate="yes" xml:space="preserve">
          <source>This class does not protect against overwriting a file in-place (e.g. a malicious module that does a &lt;a href=&quot;http://php.net/file_put_contents&quot;&gt;file_put_contents&lt;/a&gt;()) since this will not change the mtime of the directory. MTimeProtectedFileStorage protects against this at the cost of an additional system call for every load() and exists().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18f4661e0219143ba9b338ddac36ca56e8a8b00" translate="yes" xml:space="preserve">
          <source>This class evaluates the aggregation enabled/disabled condition on a group by group basis by testing whether an aggregate file has been made for the group rather than by testing the site-wide aggregation setting. This allows this class to work correctly even if modules have implemented custom logic for grouping and aggregating files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d322ea2ae80263b361413db129686624a8657fe6" translate="yes" xml:space="preserve">
          <source>This class evaluates the aggregation enabled/disabled condition on a group by group basis by testing whether an aggregate file has been made for the group rather than by testing the site-wide aggregation setting. This allows this class to work&amp;hellip; &lt;em&gt;Overrides &lt;a href=&quot;../../../core-lib-drupal-core-asset-assetcollectionrendererinterface.php/function/assetcollectionrendererinterface-render/8.1.x&quot;&gt;AssetCollectionRendererInterface::render&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd96a61310216640a66ce6f2d4f093ad856e733" translate="yes" xml:space="preserve">
          <source>This class exists as a mid-point between dependency injection through ContainerInjectionInterface, and a less-structured use of traits which default to using the &lt;a href=&quot;../../../core-lib-drupal.php/class/drupal/8.1.x&quot;&gt;\Drupal&lt;/a&gt; accessor for service discovery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936ea788b87b4ffa6f21a947b8c5f6d91736b6b0" translate="yes" xml:space="preserve">
          <source>This class exists only to support legacy code that cannot be dependency injected. If your code needs it, consider refactoring it to be object oriented, if possible. When this is not possible, for instance in the case of hook implementations, and your code is more than a few non-reusable lines, it is recommended to instantiate an object implementing the actual logic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df29c286ab7ef52e5d1c0c897279db19f1d6e858" translate="yes" xml:space="preserve">
          <source>This class extends the basic component and adds in Drupal-specific handling, like translation of the format() method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86439cd0fd0c0c0b6b0b68683bb74d314fff4a8" translate="yes" xml:space="preserve">
          <source>This class extends the complete stream wrapper implementation in LocalStream. URIs such as &quot;public://example.txt&quot; are expanded to a normal filesystem path such as &quot;sites/default/files/example.txt&quot; and then PHP filesystem functions are invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6a6b3f919444d03112ab70ece9de543ab5dbd4" translate="yes" xml:space="preserve">
          <source>This class formats the diff in classic diff format. It is intended that this class be customized via inheritance, to obtain fancier outputs. @todo document @private @subpackage DifferenceEngine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="434ded5fe1da6f64d6fa03d3ce0d60068016d3ff" translate="yes" xml:space="preserve">
          <source>This class has no functionality of its own other than allowing all Entity Field API exceptions to be caught by a single catch block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b136fd675fc611bc0d8a63fd0d1360668bf81b26" translate="yes" xml:space="preserve">
          <source>This class implements the custom session management code inherited from Drupal 7 on top of the corresponding Symfony component. Regrettably the name NativeSessionStorage is not quite accurate. In fact the responsibility for storing and retrieving session data has been extracted from it in Symfony 2.1 but the class name was not changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601b2ff4477fbbb6f6d81a1e3c35fa4e5427e1a9" translate="yes" xml:space="preserve">
          <source>This class is container-aware to avoid initializing the 'menu.active_trails' service (and its dependencies) when it is not necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688cc5581a6e42589a619667e010cc0469af3cf1" translate="yes" xml:space="preserve">
          <source>This class is designed for formatting messages that are mostly text, not as an HTML template language. As such:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928756c923a7f08558b635e42259faa9a8ed2829" translate="yes" xml:space="preserve">
          <source>This class is designed to work on setups with multiple webheads using a local filesystem for the twig cache. When generating the cache key, a hash value depending on the enabled extensions is included. This prevents stale templates from being reused when twig extensions are enabled or disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7260eb325f31381533d4eecb7f59b31b52d2be5" translate="yes" xml:space="preserve">
          <source>This class is just a small wrapper around field definitions to expose metadata about field item's via the Typed Data API. As the work is done by the field definitions, this class does not benefit and thus does not extend from MapDefinition or ComplexDataDefinitionBase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac5db10cc57da25910b8062788971489a26d8b4" translate="yes" xml:space="preserve">
          <source>This class is less lenient than the DateTime class. It changes the default behavior for handling date values like '2011-00-00'. The DateTime class would convert that value to '2010-11-30' and report a warning but not an error. This extension treats that as an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd14e38b3176dee20a95286473f78bbabb244b4" translate="yes" xml:space="preserve">
          <source>This class is manually added by &lt;a href=&quot;../../../core-includes-install.core.inc/function/install_begin_request/8.1.x&quot;&gt;install_begin_request&lt;/a&gt;() via $conf['container_service_providers'] and required to prevent various services from trying to retrieve data from storages that do not exist yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef80375c1e95cf60b7a1ca0fc7aed46bdbac312f" translate="yes" xml:space="preserve">
          <source>This class is responsible for building the Dependency Injection Container and also deals with the registration of service providers. It allows registered service providers to add their services to the container. Core provides the CoreServiceProvider, which, in addition to registering any core services that cannot be registered in the core.services.yaml file, adds any compiler passes needed by core, e.g. for processing tagged services. Each module can add its own service provider, i.e. a class implementing Drupal\Core\DependencyInjection\ServiceProvider, to register services to the container, or modify existing services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad18ae74a432aff4704d8794a3551de04d0d2f91" translate="yes" xml:space="preserve">
          <source>This class is uninstantiatable and un-extendable. It acts to encapsulate all control and shepherding of database connections into a single location without the use of globals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa949e79865cef5e95e424d2ace3601df7fd7d97" translate="yes" xml:space="preserve">
          <source>This class is used by the Symfony validator to translate violation messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99079a3986d8351f5e3b806c55862b3d549a1fee" translate="yes" xml:space="preserve">
          <source>This class is used by the rendering service to process the #attached part of the render array, for HTML responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47515fb57f3a53262e3aef682997057d2cc36348" translate="yes" xml:space="preserve">
          <source>This class is used with APCu versions &amp;gt;= 4.0.0 and &amp;lt; 5.0.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3349b14b49a660fe0d565c104ab4ca591f0a127a" translate="yes" xml:space="preserve">
          <source>This class override ensures that the string loader behaves as expected in the loader chain. If Twig's string loader is used as is, any string (even a reference to a file-based Twig template) is treated as a valid template and is rendered instead of a &lt;a href=&quot;https://api.drupal.org/api/drupal/vendor%21twig%21twig%21lib%21Twig%21Error%21Loader.php/class/Twig_Error_Loader/8.1.x&quot;&gt;\Twig_Error_Loader&lt;/a&gt; exception being thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb28f13b6d93155217c80c6029423dd34f35ce48" translate="yes" xml:space="preserve">
          <source>This class provides a Drupal-specific extension of the PDO database abstraction class in PHP. Every database driver implementation must provide a concrete implementation of it to support special handling required by that database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c630251bcf60efa8b98c6ba50c4254c4cbbaccb6" translate="yes" xml:space="preserve">
          <source>This class provides a complete stream wrapper implementation. URIs such as &quot;public://example.txt&quot; are expanded to a normal filesystem path such as &quot;sites/default/files/example.txt&quot; and then PHP filesystem functions are invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6c06c33dd8d8fa4f8ed0f4726f583f167a3714" translate="yes" xml:space="preserve">
          <source>This class provides a minimal-read only stream wrapper implementation. Specifically, it only implements the writing classes and read classes where we need to restrict 'write-capable' arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ed2be2a82a2441e08b04029b5af7afa04e0c1c" translate="yes" xml:space="preserve">
          <source>This class provides menu link tree manipulators to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8e06c6f3cf3e57afe097a73eb227e55ecd2183" translate="yes" xml:space="preserve">
          <source>This class provides the following routes for entities, with title and access callbacks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394df86d28b3b37edf39fa978b9cd54aed7288cf" translate="yes" xml:space="preserve">
          <source>This class satisfies the requirements of being a database statement/result object, but does not actually contain data. It is useful when developers need to safely return an &quot;empty&quot; result set without connecting to an actual database. Calling code can then treat it the same as if it were an actual result set that happens to contain no records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3947c065a028aa44f59e60aef79828b6f440076c" translate="yes" xml:space="preserve">
          <source>This class will always wrap a PDOException.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a932e1ae3d20fa20e0d4206102d6dead606ac0" translate="yes" xml:space="preserve">
          <source>This class wraps the PHP DateTime class with more flexible initialization parameters, allowing a date to be created from an existing date object, a timestamp, a string with an unknown format, a string with a known format, or an array of date parts. It also adds an errors array and a __toString() method to the date object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5decccf5a6367205632f14cf1ab571856b722e13" translate="yes" xml:space="preserve">
          <source>This code does four things:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ff8c1a3dab5e5496ba33ca5f88f496ee9f966d" translate="yes" xml:space="preserve">
          <source>This code is identical to the Component in order to pick up a different Context class. &lt;em&gt;Overrides &lt;a href=&quot;https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Component%21Plugin%21ContextAwarePluginBase.php/function/ContextAwarePluginBase%3A%3AgetContext/8.1.x&quot;&gt;ContextAwarePluginBase::getContext&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5639c2977c7db59f8c48ad7120a481be500ef14" translate="yes" xml:space="preserve">
          <source>This command instructs the client to insert the given HTML using whichever jQuery DOM manipulation method has been specified in the #ajax['method'] variable of the element that triggered the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5aa99c9c6280e13d6d6950f67bc1bd8adc0d78" translate="yes" xml:space="preserve">
          <source>This command instructs the client to mark each of the elements matched by the given selector as 'ajax-changed'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c765751640abbca5d6c43d3606f56fe10946133a" translate="yes" xml:space="preserve">
          <source>This command is implemented by Drupal.AjaxCommands.prototype.add_css() defined in misc/ajax.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a7f8cbb7221c37ddccf5cc07d430092a651495" translate="yes" xml:space="preserve">
          <source>This command is implemented by Drupal.AjaxCommands.prototype.changed() defined in misc/ajax.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76660be5cfdd2ca30e13003aefe27932dcabee35" translate="yes" xml:space="preserve">
          <source>This command is implemented by Drupal.AjaxCommands.prototype.css() defined in misc/ajax.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d660105fd74ae7f952df3330dd1766477aef406" translate="yes" xml:space="preserve">
          <source>This command is implemented by Drupal.AjaxCommands.prototype.data() defined in misc/ajax.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e599762b423f54f49cb8cae9ec8d5a7b52ccd63c" translate="yes" xml:space="preserve">
          <source>This command is implemented by Drupal.AjaxCommands.prototype.insert() defined in misc/ajax.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ccf24d74550c7a21933e136eeba00f70e080f4" translate="yes" xml:space="preserve">
          <source>This command is implemented by Drupal.AjaxCommands.prototype.invoke() defined in misc/ajax.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4861bb876504eb89b13e19fa44618893649f59b2" translate="yes" xml:space="preserve">
          <source>This command is implemented by Drupal.AjaxCommands.prototype.remove() defined in misc/ajax.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbb9e7ac795f38a53bfacac275a44850bd673bd" translate="yes" xml:space="preserve">
          <source>This command is implemented by Drupal.AjaxCommands.prototype.restripe() defined in misc/ajax.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb336e357ab5c9f29a61fc6539e0a644c9e3a3ce" translate="yes" xml:space="preserve">
          <source>This command is implemented by Drupal.AjaxCommands.prototype.settings() defined in misc/ajax.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a1c597973508eafb1a98933492188e15aea4400" translate="yes" xml:space="preserve">
          <source>This command is implemented by Drupal.AjaxCommands.prototype.update_build_id() defined in misc/ajax.js. O</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5682ee1b6337b64a37bc6bdad05e6b674f87ff" translate="yes" xml:space="preserve">
          <source>This configuration can not be overridden by configuration overrides because menu links and these overrides are cached in a way that is not override aware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b228d422907f1e6bcc695b160d80912213cc7a" translate="yes" xml:space="preserve">
          <source>This constant is distinct from a &quot;drupal_ajax&quot; value for &lt;a href=&quot;../../../core-lib-drupal-core-eventsubscriber-maincontentviewsubscriber.php/class/maincontentviewsubscriber/8.1.x&quot;&gt;\Drupal\Core\EventSubscriber\MainContentViewSubscriber&lt;/a&gt;::WRAPPER_FORMAT, because that one is set for all AJAX submissions, including ones with dedicated routes for which self::buildForm() should not exit early via a &lt;a href=&quot;../../../core-lib-drupal-core-form-formajaxexception.php/class/formajaxexception/8.1.x&quot;&gt;\Drupal\Core\Form\FormAjaxException&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6ad0e665dc3f6300d4a761aa33e64a85c491cb" translate="yes" xml:space="preserve">
          <source>This container implementation is compatible with the default Symfony dependency injection container and similar to the Symfony ContainerBuilder class, but optimized for speed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e609cbdeb61f3f8a08b1d92ad1ef24f1288120db" translate="yes" xml:space="preserve">
          <source>This container is different in behavior from the default Symfony container in the following ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83e8d2184a9eda70640a4f2b91128a959a964a2" translate="yes" xml:space="preserve">
          <source>This converter applies only if the path is an admin path, the entity is a config entity, and the &quot;with_config_overrides&quot; element is not set to TRUE on the parameter definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3754cff08257b18f8792589b6be559e192e1e1a9" translate="yes" xml:space="preserve">
          <source>This corresponds to the return value of &lt;a href=&quot;../../../core-lib-drupal-core-entity-sql-tablemappinginterface.php/function/tablemappinginterface-getallcolumns/8.1.x&quot;&gt;TableMappingInterface::getAllColumns&lt;/a&gt;() except that this variable is additionally keyed by table name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f3db94f1758a9bf51a178fbe209ad7a0cce20f3" translate="yes" xml:space="preserve">
          <source>This corresponds to the return value of &lt;a href=&quot;../../../core-lib-drupal-core-entity-sql-tablemappinginterface.php/function/tablemappinginterface-getcolumnnames/8.1.x&quot;&gt;TableMappingInterface::getColumnNames&lt;/a&gt;() except that this variable is additionally keyed by field name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e004aea19cfceb26c20767aaf1e2b06b9eea76d5" translate="yes" xml:space="preserve">
          <source>This corresponds to the return value of &lt;a href=&quot;../../../core-lib-drupal-core-entity-sql-tablemappinginterface.php/function/tablemappinginterface-getextracolumns/8.1.x&quot;&gt;TableMappingInterface::getExtraColumns&lt;/a&gt;() except that this variable is additionally keyed by table name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db11bf0e83a66b9579aa93f5e1a3756f5bb4f19" translate="yes" xml:space="preserve">
          <source>This corresponds to the return value of &lt;a href=&quot;../../../core-lib-drupal-core-entity-sql-tablemappinginterface.php/function/tablemappinginterface-getfieldnames/8.1.x&quot;&gt;TableMappingInterface::getFieldNames&lt;/a&gt;() except that this variable is additionally keyed by table name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd47b066c2176ce4bea8d607b3bd2585cee623c" translate="yes" xml:space="preserve">
          <source>This could be for example used on exception pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278626c3fdbb9cca2599a9b47f24a6eaf7fc96d1" translate="yes" xml:space="preserve">
          <source>This data is derived from static::$storageDefinitions, but is stored separately to avoid repeated processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21db7d20b282b05a2b95a01dbe603fca9102cd92" translate="yes" xml:space="preserve">
          <source>This data is derived from static::$storageDefinitions, static::$fieldNames, and static::$extraColumns, but is stored separately to avoid repeated processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1612e7a3aa9b2bbbd7ee34faf33f78d5ce3c79" translate="yes" xml:space="preserve">
          <source>This data may be useful for more precise cache invalidation (especially on the client side) and concurrent editing locking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b80d57559c1908cb89768c8e99ca8620b50427" translate="yes" xml:space="preserve">
          <source>This defines how the field data is accessed from the entity. For example, if the field name is &quot;foo&quot;, then $entity-&amp;gt;foo returns its data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5272f8d2390b6c44c797e6c38a4d3ed40bcacf7" translate="yes" xml:space="preserve">
          <source>This detects button controls that trigger a form submission by being clicked and having the click processed by the browser rather than being captured by JavaScript. Essentially, it detects if the button's name and value are part of the POST data, but with extra code to deal with the convoluted way in which browsers submit data for image button clicks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919dc19a9daccb6b1338d53632cedf7efbe6aa2d" translate="yes" xml:space="preserve">
          <source>This detects button or non-button controls that trigger a form submission via Ajax or some other scriptable environment. These environments can set the special input key '_triggering_element_name' to identify the triggering element. If the name alone doesn't identify the element uniquely, the input key '_triggering_element_value' may also be set to require a match on element value. An example where this is needed is if there are several // buttons all named 'op', and only differing in their value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23887aabd51fd3996797a3b473ea4c4611fbcf77" translate="yes" xml:space="preserve">
          <source>This differs from $_SERVER['REQUEST_TIME'], which is stored as a float since PHP 5.4.0. Float timestamps confuse most PHP functions (including &lt;a href=&quot;http://php.net/date_create&quot;&gt;date_create&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7843c19ef1dd713c383acdc6bf85b12f42f972f9" translate="yes" xml:space="preserve">
          <source>This dispatch function hands off the passed-in variables to type-specific $theme_TYPE_alter() implementations in the active theme. It ensures a consistent interface for all altering operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d64487b7f67de88117d5c2fd538390ab2a89b93" translate="yes" xml:space="preserve">
          <source>This dispatch function hands off the passed-in variables to type-specific hook_TYPE_alter() implementations in modules. It ensures a consistent interface for all altering operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d35060d06c0745a7879c9bf46f123703a3b9dc23" translate="yes" xml:space="preserve">
          <source>This does not detect button clicks processed by Ajax (that is done in self::elementTriggeredScriptedSubmission()) and it does not detect form submissions from Internet Explorer in response to an ENTER key pressed in a textfield (self::doBuildForm() has extra code for that).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313650343ffc8e6df49fdc413a61f619023709dc" translate="yes" xml:space="preserve">
          <source>This does not render an actual form element, but always returns the value of the default language. It is then extended by Language module via &lt;a href=&quot;../../../core-modules-language-language.module/function/language_element_info_alter/8.1.x&quot;&gt;language_element_info_alter&lt;/a&gt;() to provide a proper language selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38711e75def6ea5f09a370c8f40138eeb58015ff" translate="yes" xml:space="preserve">
          <source>This does not use a batch, since installing themes is faster than modules and because an installation profile typically installs 1-3 themes only (default theme, base theme, admin theme).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f67d4c1b0c5a30741314dc6daa113b5df93b78c" translate="yes" xml:space="preserve">
          <source>This enables generic rendering of the field with widgets / formatters, including automated support for &quot;In place editing&quot;, and with optional configurability in the &quot;Manage display&quot; / &quot;Manage form display&quot; UI screens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36162cae185b29ea19cdb4b41b2f9d1a536f3d7e" translate="yes" xml:space="preserve">
          <source>This encapsulates logic related to generating placeholders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce796285cf9fb43f13afe0b3982ee788a60b062e" translate="yes" xml:space="preserve">
          <source>This ensures proper cascading of styles so themes can easily override module styles through CSS selectors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595167b7cfacd42456a5f751a449cb3f44ee0e19" translate="yes" xml:space="preserve">
          <source>This event allows modules to add to the list of configuration collections retrieved by &lt;a href=&quot;../../../core-lib-drupal-core-config-configmanager.php/function/configmanager-getconfigcollectioninfo/8.1.x&quot;&gt;\Drupal\Core\Config\ConfigManager::getConfigCollectionInfo&lt;/a&gt;(). The event listener method receives a &lt;a href=&quot;../../../core-lib-drupal-core-config-configcollectioninfo.php/class/configcollectioninfo/8.1.x&quot;&gt;\Drupal\Core\Config\ConfigCollectionInfo&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c83e7664a7fedac2e5899d001be01567ab08c75" translate="yes" xml:space="preserve">
          <source>This event allows modules to perform additional actions when configuration is imported. The event listener method receives a &lt;a href=&quot;../../../core-lib-drupal-core-config-configimporterevent.php/class/configimporterevent/8.1.x&quot;&gt;\Drupal\Core\Config\ConfigImporterEvent&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8884ababe401cb15f5c743eaff750e320600d76e" translate="yes" xml:space="preserve">
          <source>This event allows modules to perform additional validation operations when configuration is being imported. The event listener method receives a &lt;a href=&quot;../../../core-lib-drupal-core-config-configimporterevent.php/class/configimporterevent/8.1.x&quot;&gt;\Drupal\Core\Config\ConfigImporterEvent&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="212ef00961e7aefc4257e892a9640971f3221691" translate="yes" xml:space="preserve">
          <source>This event allows modules to perform an action whenever a configuration object is deleted. The event listener method receives a &lt;a href=&quot;../../../core-lib-drupal-core-config-configcrudevent.php/class/configcrudevent/8.1.x&quot;&gt;\Drupal\Core\Config\ConfigCrudEvent&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd61f3782ff1a29488966ac0caee6176f1e0f22" translate="yes" xml:space="preserve">
          <source>This event allows modules to perform an action whenever a configuration object is saved. The event listener method receives a &lt;a href=&quot;../../../core-lib-drupal-core-config-configcrudevent.php/class/configcrudevent/8.1.x&quot;&gt;\Drupal\Core\Config\ConfigCrudEvent&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40dd84194b26ce31726d3d0fa7cf51df02a9799" translate="yes" xml:space="preserve">
          <source>This event allows modules to perform an action whenever a configuration object's name is changed. The event listener method receives a &lt;a href=&quot;../../../core-lib-drupal-core-config-configrenameevent.php/class/configrenameevent/8.1.x&quot;&gt;\Drupal\Core\Config\ConfigRenameEvent&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6c5d978013495fbd1ee7188c4ef5e364b61b13" translate="yes" xml:space="preserve">
          <source>This event allows modules to react to a new entity type being created. The event listener method receives a &lt;a href=&quot;../../../core-lib-drupal-core-entity-entitytypeevent.php/class/entitytypeevent/8.1.x&quot;&gt;\Drupal\Core\Entity\EntityTypeEvent&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6777192bd8e0d20c04b68d9acae79074a52ddfa" translate="yes" xml:space="preserve">
          <source>This event allows modules to react whenever an existing entity type is deleted. The event listener method receives a &lt;a href=&quot;../../../core-lib-drupal-core-entity-entitytypeevent.php/class/entitytypeevent/8.1.x&quot;&gt;\Drupal\Core\Entity\EntityTypeEvent&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48240abb1a1fe7e87f06b79c32fd93c63b1f19a" translate="yes" xml:space="preserve">
          <source>This event allows modules to react whenever an existing entity type is updated. The event listener method receives a &lt;a href=&quot;../../../core-lib-drupal-core-entity-entitytypeevent.php/class/entitytypeevent/8.1.x&quot;&gt;\Drupal\Core\Entity\EntityTypeEvent&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0749d70b801d313e816decd8e91bee0c7fde0e4a" translate="yes" xml:space="preserve">
          <source>This event allows you to respond anytime a field storage definition is deleted. The event listener method receives a &lt;a href=&quot;../../../core-lib-drupal-core-field-fieldstoragedefinitionevent.php/class/fieldstoragedefinitionevent/8.1.x&quot;&gt;\Drupal\Core\Field\FieldStorageDefinitionEvent&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094f0f393c40e3d84a332f5380bc235cf578b613" translate="yes" xml:space="preserve">
          <source>This event allows you to respond anytime a field storage definition is updated. The event listener method receives a &lt;a href=&quot;../../../core-lib-drupal-core-field-fieldstoragedefinitionevent.php/class/fieldstoragedefinitionevent/8.1.x&quot;&gt;\Drupal\Core\Field\FieldStorageDefinitionEvent&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee5a2977268c61d189fc29ee1aae1effeb1c8d1" translate="yes" xml:space="preserve">
          <source>This event allows you to respond to the creation of a new field storage definition. The event listener method receives a &lt;a href=&quot;../../../core-lib-drupal-core-field-fieldstoragedefinitionevent.php/class/fieldstoragedefinitionevent/8.1.x&quot;&gt;\Drupal\Core\Field\FieldStorageDefinitionEvent&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76efbced08c9948d0ce0589a6c7cd07499dbcd36" translate="yes" xml:space="preserve">
          <source>This event allows you to select a different page display variant to use when rendering a page. The event listener method receives a &lt;a href=&quot;../../../core-lib-drupal-core-render-pagedisplayvariantselectionevent.php/class/pagedisplayvariantselectionevent/8.1.x&quot;&gt;\Drupal\Core\Render\PageDisplayVariantSelectionEvent&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="958a10c9c8de97e7e190bea45f36dea58a8de2b4" translate="yes" xml:space="preserve">
          <source>This event gives modules the opportunity to perform some action after route building has completed. The event listener receives a &lt;a href=&quot;https://api.drupal.org/api/drupal/vendor%21symfony%21event-dispatcher%21Event.php/class/Event/8.1.x&quot;&gt;\Symfony\Component\EventDispatcher\Event&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c39f770138637a242246e230bc319bc8f63666" translate="yes" xml:space="preserve">
          <source>This event is used to add new routes based upon existing routes, giving modules the opportunity to dynamically generate additional routes. The event listener method receives a &lt;a href=&quot;../../../core-lib-drupal-core-routing-routebuildevent.php/class/routebuildevent/8.1.x&quot;&gt;\Drupal\Core\Routing\RouteBuildEvent&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798269b98ef663e09b1ec139f623760d9c9008db" translate="yes" xml:space="preserve">
          <source>This event is used to process new routes before they get saved, giving modules the opportunity to alter routes provided by any other module. The event listener method receives a &lt;a href=&quot;../../../core-lib-drupal-core-routing-routebuildevent.php/class/routebuildevent/8.1.x&quot;&gt;\Drupal\Core\Routing\RouteBuildEvent&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017898e09b526b75f68bf543ae9538b96c473672" translate="yes" xml:space="preserve">
          <source>This event subscriber wraps all controller executions in a closure that sets up a render context. Consequently, any early rendering will have their bubbleable metadata (assets &amp;amp; cacheability) stored on that render context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ee8a036b2c3e830a6c9fabb388fa1f20cc6bf4" translate="yes" xml:space="preserve">
          <source>This exception is thrown e.g. when trying to have an IN condition with an empty array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9675f7a88d11647471d69c05cb60d32618a62769" translate="yes" xml:space="preserve">
          <source>This exception is thrown e.g. when trying to insert a row that would violate a unique key constraint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bb68f38e877db5b7bd283c76dd57327a71249a" translate="yes" xml:space="preserve">
          <source>This exception will be thrown when the PDO connection commit() is called. Code should never call this method directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a61799ba8f5647977a88f03b2e877c8c508161" translate="yes" xml:space="preserve">
          <source>This excludes any lingering simpletest tables generated during test runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06733e9a5bd90b5adc11af3b59edeb1462c75c77" translate="yes" xml:space="preserve">
          <source>This extends the interface used by the Symfony validator in order to indicate that the Drupal code is actually independent from the Symfony translation component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf65099f06357c64e764b3ebdc6c6c6e2dc0d759" translate="yes" xml:space="preserve">
          <source>This extends the library definitions with the those specified by the libraries-extend specifications for the active theme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b1aaaab738a3e02e13e6c69f76c20e0c325d93" translate="yes" xml:space="preserve">
          <source>This fake routing data is needed in order to make batch API work properly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d916f3f83601b53cbf8173a0acac1ce286937af" translate="yes" xml:space="preserve">
          <source>This figures out whether the field is stored in a dedicated or shared table and forwards the call to the proper handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73130cef6df7757c701396fc26815041c84dfa04" translate="yes" xml:space="preserve">
          <source>This file contains functions to perform database updates for a Drupal installation. It is included and used extensively by &lt;a href=&quot;https://api.drupal.org/api/drupal/update.php/8.1.x&quot;&gt;update.php&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6de587b66173945e6a23781eeedbd5e6b57257e" translate="yes" xml:space="preserve">
          <source>This file does NOT follow Drupal coding standards, so as to simplify future synchronizations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648684fabf7be53ffd7cc10542f03f31d9832f93" translate="yes" xml:space="preserve">
          <source>This file will not be renamed as this is a read-only stream wrapper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db4299013754499521bd8edc40c15513932e125f" translate="yes" xml:space="preserve">
          <source>This fills in default options for components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29eb35ad4b20ce4dfe4d29d7fd13c058c5f87523" translate="yes" xml:space="preserve">
          <source>This filter identifies and makes clickable three types of &quot;links&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e47d71c92472751136ce7afeb9af803a3cf507" translate="yes" xml:space="preserve">
          <source>This formatter must be available whenever the field type is available (i.e. provided by the field type module, or by a module the field type module depends on).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec5abe6df86336edb5c311d8170b8e371ad12f0" translate="yes" xml:space="preserve">
          <source>This function achieves the target aspect ratio by cropping the original image equally on both sides, or equally on the top and bottom. This function is useful to create uniform sized avatars from larger images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd42a61b3574cd4f4be2ec77c6cdfe4eefd7ff2" translate="yes" xml:space="preserve">
          <source>This function adds a default alt tag to the user_picture field to maintain accessibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ceb955d4038461ad5b074970c1ab9486121e86" translate="yes" xml:space="preserve">
          <source>This function allows you to supply values for form elements and submit a form for processing. Compare to self::getForm(), which also builds and processes a form, but does not allow you to supply values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a7106b15735c2621be125f6b2506a51a4abb3e" translate="yes" xml:space="preserve">
          <source>This function also handles cases where objects are passed as array values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b286208eadca3bd08d15646b0da5c749dc006b77" translate="yes" xml:space="preserve">
          <source>This function also records the latest change time on the .info.yml files for each module or theme, which is important data which is used when deciding if the available update data should be invalidated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60be7a8fae1f0d3f32b1058ab7e4059ede05d808" translate="yes" xml:space="preserve">
          <source>This function also resets the theme, which means it is not initialized anymore and all previously added JavaScript and CSS is gone. Normally, this function is called as an end-of-POST-request operation that is followed by a redirect, so this effect is not visible. Since the full reset is the whole point of this function, callers need to take care for backing up all needed variables and properly restoring or re-initializing them on their own. For convenience, this function automatically re-initializes the maintenance theme if it was initialized before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa94a5ec68bd23f5f8a72f8324f2136b72582eb7" translate="yes" xml:space="preserve">
          <source>This function assumes all data for the field has already been purged and should only be called by &lt;a href=&quot;../field_purge_batch/8.1.x&quot;&gt;field_purge_batch&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb1239625d4914a7423e12910234122e185c0f3" translate="yes" xml:space="preserve">
          <source>This function assumes all fields for the field storage has already been purged, and should only be called by &lt;a href=&quot;../field_purge_batch/8.1.x&quot;&gt;field_purge_batch&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf5957ca5997b0c00efe4ec2a2338df02b12256" translate="yes" xml:space="preserve">
          <source>This function assumes that the first lines of the specified portions of the two files do not match, and likewise that the last lines do not match. The caller must trim matching lines from the beginning and end of the portions it is going to specify.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207bd049f753e28058d2ccf63cf88bba9766cf0e" translate="yes" xml:space="preserve">
          <source>This function assumes that the provided URL points to a file archive of some sort. The URL can have any scheme that we have a file stream wrapper to support. The file is downloaded to a local cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe0390d074a5293ef81036157f56f004847ee3c" translate="yes" xml:space="preserve">
          <source>This function attempts to solve the problem by creating a \DOMDocumentFragment to comment the CDATA tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0afc588fd2f273bb10618ea625c14ad89dce743" translate="yes" xml:space="preserve">
          <source>This function calls itself recursively to obtain the values for each optgroup within the list of options and when the function encounters an object with an 'options' property inside $element['#options'].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ebe1f71a1d39c74b0673fa4aaf4a7f07994dfe" translate="yes" xml:space="preserve">
          <source>This function can be added as a pre_render callback for a renderable array, usually one which will be themed by &lt;a href=&quot;../../../core-modules-system-templates-links.html.twig/8.1.x&quot;&gt;links.html.twig&lt;/a&gt;. It iterates through all unrendered children of the element, collects any #links properties it finds, merges them into the parent element's #links array, and prevents those children from being rendered separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa59cae3c19bae76749a7c87f34625f957b36a7" translate="yes" xml:space="preserve">
          <source>This function can be called by low-level scripts (such as &lt;a href=&quot;https://api.drupal.org/api/drupal/core%21install.php/8.1.x&quot;&gt;install.php&lt;/a&gt; and &lt;a href=&quot;https://api.drupal.org/api/drupal/update.php/8.1.x&quot;&gt;update.php&lt;/a&gt;) and returns a URL that can be used to attempt to proceed to the next step of the script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74e6c9f807135a9f9265e32979cb055014a8691" translate="yes" xml:space="preserve">
          <source>This function can be called by low-level scripts (such as &lt;a href=&quot;https://api.drupal.org/api/drupal/core%21install.php/8.1.x&quot;&gt;install.php&lt;/a&gt; and &lt;a href=&quot;https://api.drupal.org/api/drupal/update.php/8.1.x&quot;&gt;update.php&lt;/a&gt;) and returns the URL of the current script. Existing query parameters are preserved by default, but new ones can optionally be merged in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3f3bbb3aa114401561c9723d46c5f7f7024223" translate="yes" xml:space="preserve">
          <source>This function can be used by third-party modules that need to output an isolated field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7148d80d1da37559fcfef13fd25fc478a56861e9" translate="yes" xml:space="preserve">
          <source>This function can be used to retrieve a schema specification in &lt;a href=&quot;../../../core-lib-drupal-core-database-database.api.php/function/hook_schema/8.1.x&quot;&gt;hook_schema&lt;/a&gt;(), so it allows you to derive your tables from existing specifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9741c84546493862ebeb3629202927c55f3fdc" translate="yes" xml:space="preserve">
          <source>This function can be used when a module wants to store all submitted form values, for example, by serializing them into a single database column. In such cases, all internal Form API values and all form button elements should not be contained, and this function allows their removal before the module proceeds to storage. Next to button elements, the following internal values are removed by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c77557ee98b17acef80b22042d893273b5bdc60" translate="yes" xml:space="preserve">
          <source>This function can replace one permission to several or even delete an old one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33fc8fdd76f8714ea35c2fe0846e8e3b949bf3d8" translate="yes" xml:space="preserve">
          <source>This function can return FALSE if any of these conditions apply:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aee74cfca9848f2fefdca75ae8c50933e05a35f" translate="yes" xml:space="preserve">
          <source>This function can return definitions both for bundle fields (fields that are not defined in $base_field_definitions, and therefore might not exist on some bundles) as well as bundle-specific overrides of base fields (fields that are defined in $base_field_definitions, and therefore exist for all bundles). However, bundle-specific base field overrides can also be provided by 'base_field_override' configuration entities, and that is the recommended approach except in cases where an entity type needs to provide a bundle-specific base field override that is decoupled from configuration. Note that for most entity types, the bundles themselves are derived from configuration (e.g., 'node' bundles are managed via 'node_type' configuration entities), so decoupling bundle-specific base field overrides from configuration only makes sense for entity types that also decouple their bundles from configuration. In cases where both this function returns a bundle-specific override of a base field and a 'base_field_override' configuration entity exists, the latter takes precedence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abcddaff4346ed1a6b306c25ff6400cb1884cbc8" translate="yes" xml:space="preserve">
          <source>This function checks all JavaScript files passed and invokes parsing if they have not yet been parsed for Drupal.t() and Drupal.formatPlural() calls. Also refreshes the JavaScript translation files if necessary, and returns the filepath to the translation file (if any).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57e3bc1ae5a749e3540854884bd593caa61ef89" translate="yes" xml:space="preserve">
          <source>This function converts sub-elements of an element of #type 'table' to be suitable for &lt;a href=&quot;../../../core-modules-system-templates-table.html.twig/8.1.x&quot;&gt;table.html.twig&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167a5a5924de622d868fe4375af645b274a36abe" translate="yes" xml:space="preserve">
          <source>This function creates a file path that includes a unique containing directory for the file and a file name that is a hash of the virtual file name, a cryptographic secret, and the containing directory mtime. If the file is overridden by an insecure upload script, the directory mtime gets modified, invalidating the file, thus protecting against untrusted code getting executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714531c98215f12e45aa666d8f161d8536d43eed" translate="yes" xml:space="preserve">
          <source>This function differs from &lt;a href=&quot;../hook_install/8.1.x&quot;&gt;hook_install&lt;/a&gt;() in that it gives all other modules a chance to perform actions when a module is installed, whereas &lt;a href=&quot;../hook_install/8.1.x&quot;&gt;hook_install&lt;/a&gt;() is only called on the module actually being installed. See \Drupal\Core\Extension\ModuleHandler::install() for a detailed description of the order in which install hooks are invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f06e49b33f196e871b46086408d2b4dc6dd0720" translate="yes" xml:space="preserve">
          <source>This function differs from &lt;a href=&quot;../hook_uninstall/8.1.x&quot;&gt;hook_uninstall&lt;/a&gt;() in that it gives all other modules a chance to perform actions when a module is uninstalled, whereas &lt;a href=&quot;../hook_uninstall/8.1.x&quot;&gt;hook_uninstall&lt;/a&gt;() is only called on the module actually being uninstalled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d31f2b9abe6d5a3c8944b36b8edd33ab1a5ace" translate="yes" xml:space="preserve">
          <source>This function does not support optgroups (when the elements of the #options array are themselves arrays), and will return FALSE if arrays are found. The caller must either flatten/restore or manually do their manipulations in this case, since returning the index is not sufficient, and supporting this would make the &quot;helper&quot; too complicated and cumbersome to be of any help.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33292410d6860ac8bdd91e8807a1047df41cbbcd" translate="yes" xml:space="preserve">
          <source>This function does the inverse of static::fieldSettingsToConfigData(). It's called when loading a field's settings from a configuration object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e114aad2f77c10ad155b9bb36a2a27e2516a27a5" translate="yes" xml:space="preserve">
          <source>This function does the inverse of static::storageSettingsToConfigData(). It's called when loading a field's settings from a configuration object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8e1611bd92a8777b1b7445dabae420b49c7c65" translate="yes" xml:space="preserve">
          <source>This function does to much magic, so it should be replaced by another services which holds the current active theme information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bdf94c716561c713d30dd1fa36e58ff5510d609" translate="yes" xml:space="preserve">
          <source>This function ensures that each passed HTML ID value only exists once on the page. By tracking the already returned ids, this function enables forms, blocks, and other content to be output multiple times on the same page, without breaking (X)HTML validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20309fce14afe2b2e9071c24a756ee987175bbd2" translate="yes" xml:space="preserve">
          <source>This function ensures that the string is pluralized correctly. Since &lt;a href=&quot;../../../core-lib-drupal-core-stringtranslation-translationinterface.php/function/translationinterface-translate/8.1.x&quot;&gt;TranslationInterface::translate&lt;/a&gt;() is called by this function, make sure not to pass already-localized strings to it. See &lt;a href=&quot;../../../core-lib-drupal-core-stringtranslation-pluraltranslatablemarkup.php/function/pluraltranslatablemarkup-createfromtranslatedstring/8.1.x&quot;&gt;PluralTranslatableMarkup::createFromTranslatedString&lt;/a&gt;() for that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddcc15de2d44f7d49e3b320b1da23af829fd6b46" translate="yes" xml:space="preserve">
          <source>This function ensures that the string is pluralized correctly. Since &lt;a href=&quot;../translationinterface-translate/8.1.x&quot;&gt;TranslationInterface::translate&lt;/a&gt;() is called by this function, make sure not to pass already-localized strings to it. See &lt;a href=&quot;../../../core-lib-drupal-core-stringtranslation-pluraltranslatablemarkup.php/function/pluraltranslatablemarkup-createfromtranslatedstring/8.1.x&quot;&gt;PluralTranslatableMarkup::createFromTranslatedString&lt;/a&gt;() for that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaebe23b06d8ebfbce9396e98a95a17fd341034f" translate="yes" xml:space="preserve">
          <source>This function inserts a wrapper around the region of the form that needs to be refreshed by AJAX, based on information stored in the corresponding submit button form element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253473231312877a3ba42f424ba1582652600b8c" translate="yes" xml:space="preserve">
          <source>This function is a noop since the configuration cannot be overridden by language unless the Language module is enabled. That replaces the default language manager with a configurable language manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc966c1048c5b8c515360e9d36e5271943d96e0" translate="yes" xml:space="preserve">
          <source>This function is a noop since the configuration cannot be overridden by language unless the Language module is enabled. That replaces the default language manager with a configurable language manager. &lt;em&gt;Overrides &lt;a href=&quot;../../../core-lib-drupal-core-language-languagemanagerinterface.php/function/languagemanagerinterface-setconfigoverridelanguage/8.1.x&quot;&gt;LanguageManagerInterface::setConfigOverrideLanguage&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a51b5ba13348941bc2da717b6dd0dc3b6fee28" translate="yes" xml:space="preserve">
          <source>This function is a wrapper around the PHP function &lt;a href=&quot;http://php.net/set_time_limit&quot;&gt;set_time_limit&lt;/a&gt;(). When called, &lt;a href=&quot;http://php.net/set_time_limit&quot;&gt;set_time_limit&lt;/a&gt;() restarts the timeout counter from zero. In other words, if the timeout is the default 30 seconds, and 25 seconds into script execution a call such as &lt;a href=&quot;http://php.net/set_time_limit&quot;&gt;set_time_limit&lt;/a&gt;(20) is made, the script will run for a total of 45 seconds before timing out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e55835072d58a036f638d9ad93692abe32c3fc" translate="yes" xml:space="preserve">
          <source>This function is assigned as a #pre_render callback in ::view().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2487a017827625c6dd7c8637fe74aea4acb3cee2" translate="yes" xml:space="preserve">
          <source>This function is assigned as a #pre_render callback in ::viewMultiple().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30eca191dd7f7aa83304d5ee6f49a04968416fa" translate="yes" xml:space="preserve">
          <source>This function is better than simply calling &lt;a href=&quot;http://php.net/mt_rand&quot;&gt;mt_rand&lt;/a&gt;() or any other built-in PHP function because it can return a long string of bytes (compared to &amp;lt; 4 bytes normally from &lt;a href=&quot;http://php.net/mt_rand&quot;&gt;mt_rand&lt;/a&gt;()) and uses the best available pseudo-random source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200cf63728951edfa274f387bc4b42b0be3e7cfd" translate="yes" xml:space="preserve">
          <source>This function is called for theme hooks implemented as templates only, not for theme hooks implemented as functions. This preprocess function is the first in the sequence of preprocessing functions that are called when preparing variables for a template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0c1e1e88de22fa378c5305ed6f57d95fa9cfd5" translate="yes" xml:space="preserve">
          <source>This function is called from the system_settings form to check all core file directories (file_public_path, file_private_path, file_temporary_path).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0f4e7be5828728be0ae54d0a367dc5d0829140" translate="yes" xml:space="preserve">
          <source>This function is called on shutdown to ensure that {search_total} is always up to date (even if cron times out or otherwise fails).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835b484ecc72f6a400632cebabc0f88d44b624be" translate="yes" xml:space="preserve">
          <source>This function is called the first time a new theme is installed. The new theme gets a copy of the default theme's blocks, with the difference that if a particular region isn't available in the new theme, the block is assigned to the new theme's default region.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1607080622f24589d1037e9edf9f3304a8c2644a" translate="yes" xml:space="preserve">
          <source>This function is called via Ajax when the selected book is changed on a node or book outline form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e01a6fd16aa88e151b34c2d2068e0146de44e8d" translate="yes" xml:space="preserve">
          <source>This function is called when a node listing query is tagged with 'node_access'; when this function returns TRUE, no node access joins are added to the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396131c0bdc08f28267f90931daaa44d25a645eb" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;a href=&quot;../nestedarray-mergedeep/8.1.x&quot;&gt;NestedArray::mergeDeep&lt;/a&gt;(), except the input arrays are passed as a single array parameter rather than a variable parameter list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d31e43a3436f81b950047bf5ab94819d43a504" translate="yes" xml:space="preserve">
          <source>This function is essentially \DOMDocument::normalizeDocument(), but operates on an HTML string instead of a \DOMDocument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64021d42f0d3ea034a7e596bec203a2dcf63d76c" translate="yes" xml:space="preserve">
          <source>This function is for when you want to know the prefix of a table. This is not used in prefixTables due to performance reasons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe921210db4159acf1421e308be5c74297a6cb9c" translate="yes" xml:space="preserve">
          <source>This function is generally not needed in form submit handlers; Form API takes care of batches that were set during form submission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef626b92de7a2886a22ee14e8b919bc80f349d6c" translate="yes" xml:space="preserve">
          <source>This function is identical to &lt;a href=&quot;../../../core-modules-file-file.module/function/file_save_data/8.1.x&quot;&gt;file_save_data&lt;/a&gt;() except the file will not be saved to the {file_managed} table and none of the file_* hooks will be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4f1f344710f287a75084fa97ab7dc063a54af5" translate="yes" xml:space="preserve">
          <source>This function is meant for use by search page plugins, or for building a user interface that lets users clear all or parts of the search index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a862e7813eb395fd3d3815aac64340216a5c03f" translate="yes" xml:space="preserve">
          <source>This function is meant for use by search page plugins, or for building a user interface that lets users mark all or parts of the search index for reindexing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1d175f87aadcb4123b0a158e9ca2e0cb4a3722" translate="yes" xml:space="preserve">
          <source>This function is meant to be called from PHP snippets, should one wish to embed a view in a node or something. It's meant to provide the simplest solution and doesn't really offer a lot of options, but breaking the function apart is pretty easy, and this provides a worthwhile guide to doing so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84b925311ecef050ad74778856ad16491f76d8f" translate="yes" xml:space="preserve">
          <source>This function is rarely necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccee823a96406b060e4505537bd6931f4c39d618" translate="yes" xml:space="preserve">
          <source>This function is responsible for invoking &lt;a href=&quot;../../../core-modules-update-update.api.php/function/hook_verify_update_archive/8.1.x&quot;&gt;hook_verify_update_archive&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622f1c350a8f37dd3e5e01f5ee9a827f734a7bf8" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;a href=&quot;../../../core-lib-drupal.php/function/drupal-modulehandler/8.1.x&quot;&gt;\Drupal::moduleHandler&lt;/a&gt;()-&amp;gt;invokeAll(), with the main difference that it does not require that a module be enabled to invoke its hook, only that it be installed. This allows the update system to properly perform updates even on modules that are currently disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711e34949fd65bfa04accccd9a7f09c3a4ff426f" translate="yes" xml:space="preserve">
          <source>This function is similar to PHP's &lt;a href=&quot;http://php.net/array_merge_recursive&quot;&gt;array_merge_recursive&lt;/a&gt;() function, but it handles non-array values differently. When merging values that are not both arrays, the latter value replaces the former rather than merging with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d0840cba9faae29c4f29c3151929f8875ab10f" translate="yes" xml:space="preserve">
          <source>This function is the heart of form API. The form gets built, validated and in appropriate cases, submitted and rebuilt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dba5b3a0540ba1c7c90d1bfae253a0a82d539db" translate="yes" xml:space="preserve">
          <source>This function is the heart of the update status feature. For each project it is invoked with, it first checks if the project has been flagged with a special status like &quot;unsupported&quot; or &quot;insecure&quot;, or if the project node itself has been unpublished. In any of those cases, the project is marked with an error and the next project is considered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d57619d53e3022aa5fe8a0811f48b45972624c" translate="yes" xml:space="preserve">
          <source>This function is used by &lt;a href=&quot;../../../core-lib-drupal-core-utility-token.php/function/token-replace/8.1.x&quot;&gt;\Drupal\Core\Utility\Token::replace&lt;/a&gt;() to set up some additional tokens that can be used in email messages generated by &lt;a href=&quot;../user_mail/8.1.x&quot;&gt;user_mail&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c0bdd47a4f840cdb34d94295675b4a801f9647" translate="yes" xml:space="preserve">
          <source>This function is used for recursive loading of stylesheets and returns the stylesheet content with all url() paths corrected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce37f8d0401336f517019cc64addc6631b22b117" translate="yes" xml:space="preserve">
          <source>This function is used when the script must maintain certain query parameters over multiple page requests in order to work correctly. In such cases (for example, &lt;a href=&quot;https://api.drupal.org/api/drupal/update.php/8.1.x&quot;&gt;update.php&lt;/a&gt;, which requires the 'continue=1' parameter to remain in the URL throughout the update process if there are any requirement warnings that need to be bypassed), using this function to generate the URL for links to the next steps of the script ensures that the links will work correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9e58753fc011493534d35a65e033023c6a8488" translate="yes" xml:space="preserve">
          <source>This function is useful if you need to modify the options that are already in a form element; for example, to remove choices which are not valid because of additional filters imposed by another module. One example might be altering the choices in a taxonomy selector. To correctly handle the case of a multiple hierarchy taxonomy, #options arrays can now hold an array of objects, instead of a direct mapping of keys to labels, so that multiple choices in the selector can have the same key (and label). This makes it difficult to manipulate directly, which is why this helper function exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a3005301a02f38bd59e06c3af3929423842e25" translate="yes" xml:space="preserve">
          <source>This function loads the body part of a partial (X)HTML document and returns a full \DOMDocument object that represents this document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec3d59b60992494be88b259d1e34461b9b9b115" translate="yes" xml:space="preserve">
          <source>This function may be used build the data for a menu tree only, for example to further massage the data manually before further processing happens. MenuLinkTree::checkAccess() needs to be invoked afterwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922c97e0c58c125248cda9c38c1e5685d9d36b6d" translate="yes" xml:space="preserve">
          <source>This function may be used to grant and revoke multiple permissions at once. For example, when a form exposes checkboxes to configure permissions for a role, the form submit handler may directly pass the submitted values for the checkboxes form element to this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c0dcbaa25c7c1641f66335d4f5657d6640a4ba" translate="yes" xml:space="preserve">
          <source>This function must be called for all URIs within user-entered input prior to being output to an HTML attribute value. It is often called as part of &lt;a href=&quot;../urlhelper-filterbadprotocol/8.1.x&quot;&gt;\Drupal\Component\Utility\UrlHelper::filterBadProtocol&lt;/a&gt;() or &lt;a href=&quot;../../../core-lib-drupal-component-utility-xss.php/function/xss-filter/8.1.x&quot;&gt;\Drupal\Component\Utility\Xss::filter&lt;/a&gt;(), but those functions return an HTML-encoded string, so this function can be called independently when the output needs to be a plain-text string for passing to functions that will call &lt;a href=&quot;../../../core-lib-drupal-component-utility-html.php/function/html-escape/8.1.x&quot;&gt;Html::escape&lt;/a&gt;() separately. The exact behavior depends on the value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9208357a1097afc795bb578cece5313ab27f6943" translate="yes" xml:space="preserve">
          <source>This function performs commands that must run at the beginning of every page request. It throws an exception if the installation should not proceed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2bf328a590e7f7b8a3aa9174deb37127d731d1" translate="yes" xml:space="preserve">
          <source>This function plays a key role in allowing Drupal's resources (modules and themes) to be located in different places depending on a site's configuration. For example, a module 'foo' may legally be located in any of these three places:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97cc870038a311d3d0ae29e9f2048a8ad6271d21" translate="yes" xml:space="preserve">
          <source>This function provides suitable alternatives for the following tags: &amp;lt;a&amp;gt; &amp;lt;em&amp;gt; &amp;lt;i&amp;gt; &amp;lt;strong&amp;gt; &amp;lt;b&amp;gt; &amp;lt;br&amp;gt; &amp;lt;p&amp;gt; &amp;lt;blockquote&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;ol&amp;gt; &amp;lt;li&amp;gt; &amp;lt;dl&amp;gt; &amp;lt;dt&amp;gt; &amp;lt;dd&amp;gt; &amp;lt;h1&amp;gt; &amp;lt;h2&amp;gt; &amp;lt;h3&amp;gt; &amp;lt;h4&amp;gt; &amp;lt;h5&amp;gt; &amp;lt;h6&amp;gt; &amp;lt;hr&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f4990e556aac27d50e2c96c79b8fece686228a" translate="yes" xml:space="preserve">
          <source>This function receives a list of requested module updates and determines an appropriate order to run them in such that all update dependencies are met. Any updates whose dependencies cannot be met are included in the returned array but have the key 'allowed' set to FALSE; the calling function should take responsibility for ensuring that these updates are ultimately not performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc28cb6b3514b38c6b0d8918c8608e77195327f7" translate="yes" xml:space="preserve">
          <source>This function relies on the fact that the .xml release history data comes sorted based on major version and patch level, then finally by release date if there are multiple releases such as betas from the same major.patch version (e.g., 5.x-1.5-beta1, 5.x-1.5-beta2, and 5.x-1.5). Development snapshots for a given major version are always listed last.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34db3deca660746f9777b79bfc10761959112f1e" translate="yes" xml:space="preserve">
          <source>This function renders an element. The top level element is shown with &lt;a href=&quot;../show/8.1.x&quot;&gt;show&lt;/a&gt;() before rendering, so it will always be rendered even if &lt;a href=&quot;../hide/8.1.x&quot;&gt;hide&lt;/a&gt;() had been previously used on it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bea15f974d4ce0390a212d4192ddec57bf23bed" translate="yes" xml:space="preserve">
          <source>This function replaces values in place if possible, even for multidimensional arrays. This way the old settings do not linger, overridden and also the doxygen on a value remains where it should be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed3fac58151d473e91e7692d678931b848a34ce" translate="yes" xml:space="preserve">
          <source>This function returns an associative array which contains a &quot;directed graph&quot; representation of the dependencies between a provided list of update functions, as well as any outside update functions that they directly depend on but that were not in the provided list. The vertices of the graph represent the update functions themselves, and each edge represents a requirement that the first update function needs to run before the second. For example, consider this graph:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362aceea0f51919420fa52fce5f0e097fce0eb9d" translate="yes" xml:space="preserve">
          <source>This function returns the contents of the .info.yml file for each installed module or theme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d204c019cbf468a8159a5a3df15544f75c7afd8" translate="yes" xml:space="preserve">
          <source>This function sets a refresh flag for a specified language, or all languages except English, if none specified. JavaScript translation files are rebuilt (with locale_update_js_files()) the next time a request is served in that language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17497baac45079d14464c75b803c3f04275bc0c" translate="yes" xml:space="preserve">
          <source>This function sets up the necessary global variables so that the render system will correctly process #type 'pager' render arrays to output pagers that correspond to the items being displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4887b1e0100b66bef63c4d7c9ad20d4de3ec76" translate="yes" xml:space="preserve">
          <source>This function should alter the URI, if it wants to rewrite the file URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b8b202c6e86ca42b06540a5f97c99f06c4471c" translate="yes" xml:space="preserve">
          <source>This function should be called when a view is being rendered in a particular location and you want to attach the appropriate contextual links (e.g., links for editing the view) to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccb883d81d9f944ffec74cc090d8e0d64fbce1a" translate="yes" xml:space="preserve">
          <source>This function should be called when modules are added to the system, or when a dynamic system needs to add more theme hooks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f9bf91b8fc9341f3594a902799258826d70637" translate="yes" xml:space="preserve">
          <source>This function should be used in place of calls to &lt;a href=&quot;http://php.net/realpath&quot;&gt;realpath&lt;/a&gt;() or similar functions when attempting to determine the location of a file. While functions like &lt;a href=&quot;http://php.net/realpath&quot;&gt;realpath&lt;/a&gt;() may return the location of a read-only file, this method may return a URI or path suitable for writing that is completely separate from the URI used for reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a65c0cbe61a1e8638a30256b14d17123549c12b" translate="yes" xml:space="preserve">
          <source>This function should be used instead of self::buildForm() when $form_state is not needed (i.e., when initially rendering the form) and is often used as a menu callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6311e60ea30f238154fe4249c24c87908fd52465" translate="yes" xml:space="preserve">
          <source>This function should be used when manipulating files that have records stored in the database. This is a powerful function that in many ways performs like an advanced version of &lt;a href=&quot;http://php.net/copy&quot;&gt;copy&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248578eb95579a152add4d02b75ca6ae9ca9485f" translate="yes" xml:space="preserve">
          <source>This function should be used when the file to be deleted does not have an entry recorded in the files table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31448e46b03b81329be8706ddc1566dee6e632a" translate="yes" xml:space="preserve">
          <source>This function should be used whenever you need to load more than one entity from the database. The entities are loaded into memory and will not require database access if loaded again during the same page request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d5128611f2191217d588650cf892d7922dd18e" translate="yes" xml:space="preserve">
          <source>This function should be used whenever you need to load more than one node from the database. Nodes are loaded into memory and will not require database access if loaded again during the same page request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e59b30ce04414302faa80a401e41b3db0e7d7f9" translate="yes" xml:space="preserve">
          <source>This function should be used whenever you need to load more than one term from the database. Terms are loaded into memory and will not require database access if loaded again during the same page request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eaf42fcac4152bb14c27d12ec02772c0af2ed77" translate="yes" xml:space="preserve">
          <source>This function should be used whenever you need to load more than one user from the database. Users are loaded into memory and will not require database access if loaded again during the same page request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0b2935b96f1d0131ec55bf3bac83a130807432" translate="yes" xml:space="preserve">
          <source>This function should be used whenever you need to load more than one vocabulary from the database. Terms are loaded into memory and will not require database access if loaded again during the same page request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c71813311ecccb3f697988a6d2e8afd57e7c7c" translate="yes" xml:space="preserve">
          <source>This function should only be used on actual URLs. It should not be used for Drupal menu paths, which can contain arbitrary characters. Valid values per RFC 3986.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b50f3f5e983133f9a8e6f3ecef55946aeaafb8" translate="yes" xml:space="preserve">
          <source>This function should only be used to get the current error level prior to the kernel being booted or before Drupal is installed. In all other situations the following code is preferred:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461b62788b782faa6e40e38e3af992710f053a12" translate="yes" xml:space="preserve">
          <source>This function should return a URL that can be embedded in a web page and accessed from a browser. For example, the external URL of &quot;youtube://xIpLd0WQKCY&quot; might be &quot;http://www.youtube.com/watch?v=xIpLd0WQKCY&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9327584c3730b4553c35b68cf23e62f5fab1c38b" translate="yes" xml:space="preserve">
          <source>This function splits both internal paths like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb6389a507e9bb4578cbe50cfe136834d9bd015" translate="yes" xml:space="preserve">
          <source>This function takes a form element and adds AJAX behaviors to it such that changing it triggers another part of the form to update automatically. It also adds a submit button to the form that appears next to the triggering element and that duplicates its functionality for users who do not have JavaScript enabled (the button is automatically hidden for users who do have JavaScript).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34be21ac88bda676de067f393f4275c3c9557e32" translate="yes" xml:space="preserve">
          <source>This function uses introspection methods provided by the database to create a schema array. This is useful, for example, during update when the old schema is not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0caddbb1a7b1abc7951dc52f48d979195a259d01" translate="yes" xml:space="preserve">
          <source>This function will not be called for elements with no labels, depending on #title_display. For elements that have an empty #title and are not required, this function will output no label (''). For required elements that have an empty #title, this will output the required marker alone within the label. The label will use the #id to associate the marker with the field that is required. That is especially important for screenreader users to know which field is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e110d8ad4a24dcd1d0a20d9e2ab3fe2fa12ae23e" translate="yes" xml:space="preserve">
          <source>This function will purge deleted field data in batches. The batch size is defined as an argument to the function, and once each batch is finished, it continues with the next batch until all have completed. If a deleted field with no remaining data records is found, the field itself will be purged. If a deleted field storage with no remaining fields is found, the field storage itself will be purged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07fe3f607ad34677dc4480a6753417ce66172df" translate="yes" xml:space="preserve">
          <source>This function will return tasks regardless of whether or not they are intended to run on the current page request. However, the list can change based on the installation state (for example, if an installation profile hasn't been selected yet, we don't yet know which profile tasks will be available).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6a313d84d167698388b1b081a91bac51350d4b" translate="yes" xml:space="preserve">
          <source>This function will start a batch to import translations for the added components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc0f657b032ca85a948669d42fa04e2b8856aee" translate="yes" xml:space="preserve">
          <source>This function will use the file_chmod_directory and file_chmod_file settings for the default modes for directories and uploaded/generated files. By default these will give everyone read access so that users accessing the files with a user account without the webserver group (e.g. via FTP) can read these files, and give group write permissions so webserver group members (e.g. a vhost account) can alter files uploaded and owned by the webserver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff27402ae8aa22469f848656f9219180ea283c9c" translate="yes" xml:space="preserve">
          <source>This generates default constraint definitions based on the data definition; for example, a NotNull constraint is generated if the data is defined as required. Besides that, any constraints defined for the data type (that is, below the 'constraint' key of the type's plugin definition) are taken into account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c49aafcaeaecb08b6d00d9e2e93dba06ee5d55f" translate="yes" xml:space="preserve">
          <source>This handler is run when JavaScript is disabled. It triggers the form to rebuild so that the &quot;Parent item&quot; options are changed to reflect the newly selected book. When JavaScript is enabled, the submit button that triggers this handler is hidden, and the &quot;Book&quot; dropdown directly triggers the &lt;a href=&quot;../book_form_update/8.1.x&quot;&gt;book_form_update&lt;/a&gt;() Ajax callback instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc754fe3f985bbd0ec39157eb985663105325f00" translate="yes" xml:space="preserve">
          <source>This handler will catch any exceptions not caught elsewhere and report them as an error page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac7f5a8406158a35aa48622ed76b75e9b3c9528" translate="yes" xml:space="preserve">
          <source>This has full revision support. For entities requiring special queries, the class can be extended, and the default query can be constructed by calling parent::buildQuery(). This is usually necessary when the object being loaded needs to be augmented with additional data from another table, such as loading node type into comments or vocabulary machine name into terms, however it can also support $conditions on different tables. See &lt;a href=&quot;8.1.x&quot;&gt;Drupal\comment\CommentStorage::buildQuery&lt;/a&gt;() for an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3f7dbafcee1a2cb3b9a9d9d8d2dbd7d22369fe" translate="yes" xml:space="preserve">
          <source>This hash is normally used to build a unique and secure URL that is sent to the user by email for purposes such as resetting the user's password. In order to validate the URL, the same hash can be generated again, from the same information, and compared to the hash value from the URL. The hash contains the time stamp, the user's last login time, the numeric user ID, and the user's email address. For a usage example, see &lt;a href=&quot;../user_cancel_url/8.1.x&quot;&gt;user_cancel_url&lt;/a&gt;() and &lt;a href=&quot;https://api.drupal.org/api/drupal/core%21modules%21user%21src%21Controller%21UserController.php/function/UserController%3A%3AconfirmCancel/8.1.x&quot;&gt;\Drupal\user\Controller\UserController::confirmCancel&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ecb66c8b0e85f96641008309f3a9d9f89e70c5a" translate="yes" xml:space="preserve">
          <source>This helper function should be used when the depth of the array element being retrieved may vary (that is, the number of parent keys is variable). It is primarily used for form structures and renderable arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a02d50ca33024d1371c46d7e37c1df677d9221c4" translate="yes" xml:space="preserve">
          <source>This helper function should be used when the depth of the array element to be checked may vary (that is, the number of parent keys is variable). See &lt;a href=&quot;../nestedarray-setvalue/8.1.x&quot;&gt;NestedArray::setValue&lt;/a&gt;() for details. It is primarily used for form structures and renderable arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="904cecb7dbe714947be25cf86f26a502526319a6" translate="yes" xml:space="preserve">
          <source>This helper function should be used when the depth of the array element you are changing may vary (that is, the number of parent keys is variable). It is primarily used for form structures and renderable arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c9b34bcb5a2450f3c620e6ebfef33e345b4983" translate="yes" xml:space="preserve">
          <source>This helper method returns a stream instance using a scheme. That is, the passed string does not contain a &quot;://&quot;. For example, &quot;public&quot; is a scheme but &quot;public://&quot; is a URI (stream). This is because the later contains both a scheme and target despite target being empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f30b4dc28c84d53595402fb6ec3774be4ffff5" translate="yes" xml:space="preserve">
          <source>This helps reduce ambiguity for user-entered links and paths, and supports user interfaces where users may normally use auto-completion to search for existing resources, but also may type one of these characters to link to (e.g.) a specific path on the site. (With regard to the URI specification, the user input is treated as a &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-4.2&quot;&gt;relative URI reference&lt;/a&gt; where the relative part is of type &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-3.3&quot;&gt;path-abempty&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6656da0689ebc96f9b7368f90b8ad8d09e421ac9" translate="yes" xml:space="preserve">
          <source>This hook allows any module or theme to provide alternative theme function or template name suggestions and reorder or remove suggestions provided by &lt;a href=&quot;../hook_theme_suggestions_hook/8.1.x&quot;&gt;hook_theme_suggestions_HOOK&lt;/a&gt;() or by earlier invocations of this hook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06dacd4767b7d2a3f0e585750e49058c1b67575" translate="yes" xml:space="preserve">
          <source>This hook allows modules to define default shortcut sets for a particular user that differ from the site-wide default (for example, a module may want to define default shortcuts on a per-role basis).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a971e3ad4d8c69b8b04922bb784cdfbd88682eee" translate="yes" xml:space="preserve">
          <source>This hook allows modules to enforce permissions on file downloads whenever Drupal is handling file download, as opposed to the web server bypassing Drupal and returning the file from a public directory. Modules can also provide headers to specify information like the file's name or MIME type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1690abf69013a4e2187486ff60d79dde6df2458c" translate="yes" xml:space="preserve">
          <source>This hook allows modules to preprocess theme variables for a specific theme hook. It should only be used if a module needs to override or add to the theme preprocessing for a theme hook it didn't define.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9952d9572b8b95c66fff91d7973a46aedfa1239" translate="yes" xml:space="preserve">
          <source>This hook allows modules to preprocess theme variables for theme templates. It is called for all theme hooks implemented as templates, but not for theme hooks implemented as functions. &lt;a href=&quot;../hook_preprocess_hook/8.1.x&quot;&gt;hook_preprocess_HOOK&lt;/a&gt;() can be used to preprocess variables for a specific theme hook, whether implemented as a template or function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef64aaf69ec52cc9f45486655c756b81e88607e" translate="yes" xml:space="preserve">
          <source>This hook allows modules to provide alternative theme function or template name suggestions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036566def896f5f2bd5fd833be97521ec3fca02d" translate="yes" xml:space="preserve">
          <source>This hook allows your module to rebuild its data based on the latest/current module data. It runs after &lt;a href=&quot;../hook_cache_flush/8.1.x&quot;&gt;hook_cache_flush&lt;/a&gt;() and after all module data has been updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff336b046dcc3088ada19b4a3e22ee7e9f1579c" translate="yes" xml:space="preserve">
          <source>This hook asks your module to clear all of its static caches, in order to ensure a clean environment for subsequently invoked data rebuilds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b4941385d69cbd39b28632b1dfd9ada68fb3ffb" translate="yes" xml:space="preserve">
          <source>This hook augments MODULE.config_translation.yml as well as THEME.config_translation.yml files to collect dynamic translation mapper information. If your information is static, just provide such a YAML file with your module containing the mapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a630004de8b5641c267d4465d0905c931a27a3" translate="yes" xml:space="preserve">
          <source>This hook can notably be used to change the label of the empty option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83bbe815cc210e45cd87bdef7171ca5e66f713f6" translate="yes" xml:space="preserve">
          <source>This hook enables modules to take effect when a style is being flushed (all images are being deleted from the server and regenerated). Any module-specific caches that contain information related to the style should be cleared using this hook. This hook is called whenever a style is updated, deleted, or any effect associated with the style is update or deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f04ba06508323cb2a7eb258a9e3b3df428b65c" translate="yes" xml:space="preserve">
          <source>This hook has three closely related uses, determined by the $phase argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd129da2f85c9ca76e57aa9c198213c1149c905" translate="yes" xml:space="preserve">
          <source>This hook is NOT invoked for the 'user_cancel_delete' account cancellation method. To react to that method, implement &lt;a href=&quot;../../../core-lib-drupal-core-entity-entity.api.php/function/hook_entity_type_predelete/8.1.x&quot;&gt;hook_ENTITY_TYPE_predelete&lt;/a&gt;() or &lt;a href=&quot;../../../core-lib-drupal-core-entity-entity.api.php/function/hook_entity_type_delete/8.1.x&quot;&gt;hook_ENTITY_TYPE_delete&lt;/a&gt;() for user entities instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e01cc3cfea2bc745c48d4d3652ccc1183133ebf" translate="yes" xml:space="preserve">
          <source>This hook is called after the content has been assembled in a structured array and may be used for doing processing which requires that the complete block content structure has been built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c465a355c306bb7d2172d7cd4ab05b5389b072f4" translate="yes" xml:space="preserve">
          <source>This hook is called after the content has been assembled in a structured array and may be used for doing processing which requires that the complete entity content structure has been built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231dad7c865d7c9b423039b961465882d5b12a00" translate="yes" xml:space="preserve">
          <source>This hook is called after the in-place editor plugins have been discovered, but before they are cached. Hence any alterations will be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01710d727835faa12a6902baf17e5561604b32e" translate="yes" xml:space="preserve">
          <source>This hook is called from &lt;a href=&quot;../../../core-includes-file.inc/function/file_create_url/8.1.x&quot;&gt;file_create_url&lt;/a&gt;(), and is called fairly frequently (10+ times per page), depending on how many files there are in a given page. If CSS and JS aggregation are disabled, this can become very frequently (50+ times per page) so performance is critical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe202bf318340b768266b3d47b75840384bf3a5" translate="yes" xml:space="preserve">
          <source>This hook is called from MailManagerInterface-&amp;gt;mail(). Note that &lt;a href=&quot;8.1.x&quot;&gt;hook_mail&lt;/a&gt;(), unlike &lt;a href=&quot;../hook_mail_alter/8.1.x&quot;&gt;hook_mail_alter&lt;/a&gt;(), is only called on the $module argument to MailManagerInterface-&amp;gt;mail(), not all modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5cc172344793b26e424917738584c0536626da" translate="yes" xml:space="preserve">
          <source>This hook is called to preprocess both the text added to the search index and the keywords users have submitted for searching. The same processing needs to be applied to both so that searches will find matches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6106d2aa71bd32aa71b1d54eb9412c6300174583" translate="yes" xml:space="preserve">
          <source>This hook is for implementation by node access modules. In this hook, the module grants a user different &quot;grant IDs&quot; within one or more &quot;realms&quot;. In &lt;a href=&quot;../hook_node_access_records/8.1.x&quot;&gt;hook_node_access_records&lt;/a&gt;(), the realms and grant IDs are associated with permission to view, edit, and delete individual nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf54275b1f784354591a9d0841edaae689256029" translate="yes" xml:space="preserve">
          <source>This hook is invoked after the operation has been performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f830d5d7836ac5d7c59d14536a45ac03e9ceb3cb" translate="yes" xml:space="preserve">
          <source>This hook is invoked by &lt;a href=&quot;../../../core-includes-common.inc/function/drupal_flush_all_caches/8.1.x&quot;&gt;drupal_flush_all_caches&lt;/a&gt;(). It runs before module data is updated and before &lt;a href=&quot;../hook_rebuild/8.1.x&quot;&gt;hook_rebuild&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aefc1d9df596db81dc0fb094e05f1152a518643b" translate="yes" xml:space="preserve">
          <source>This hook is invoked by &lt;a href=&quot;../../../core-includes-menu.inc/function/menu_local_tasks/8.1.x&quot;&gt;menu_local_tasks&lt;/a&gt;(). The system-determined tabs and actions are passed in by reference. Additional tabs may be added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a150e22f518ac812e1878263ae5fd2767e009aa3" translate="yes" xml:space="preserve">
          <source>This hook is invoked by &lt;a href=&quot;https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Menu%21ContextualLinkManager.php/function/ContextualLinkManager%3A%3AgetContextualLinkPluginsByGroup/8.1.x&quot;&gt;\Drupal\Core\Menu\ContextualLinkManager::getContextualLinkPluginsByGroup&lt;/a&gt;(). The system-determined contextual links are passed in by reference. Additional links may be added and existing links can be altered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e18cd390863ff7fc1bb2c515355a715e175ed3d" translate="yes" xml:space="preserve">
          <source>This hook is invoked by contextual_pre_render_links(). The renderable array of #type 'contextual_links', containing the entire contextual links data that is passed in by reference. Further links may be added or existing links can be altered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94aed9a03b86a2dcb5a8a4490d260187d2a62858" translate="yes" xml:space="preserve">
          <source>This hook is invoked by toolbar_view() immediately after &lt;a href=&quot;../hook_toolbar/8.1.x&quot;&gt;hook_toolbar&lt;/a&gt;(). The toolbar definitions are passed in by reference. Each element of the $items array is one item returned by a module from &lt;a href=&quot;../hook_toolbar/8.1.x&quot;&gt;hook_toolbar&lt;/a&gt;(). Additional items may be added, or existing items altered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028b276b75330bf225c39240197458f77baebdab" translate="yes" xml:space="preserve">
          <source>This hook is invoked during &lt;a href=&quot;../../../core-lib-drupal.php/function/drupal-modulehandler/8.1.x&quot;&gt;\Drupal::moduleHandler&lt;/a&gt;()-&amp;gt;getImplementations(). A module may implement this hook in order to reorder the implementing modules, which are otherwise ordered by the module's system weight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e289c2ca3a3aa10e25016336f1fb62de7062d60" translate="yes" xml:space="preserve">
          <source>This hook is invoked during search indexing, after loading, and after the result of rendering is added as $node-&amp;gt;rendered to the node object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9616d268e86d66734529980daf4df419a0aad735" translate="yes" xml:space="preserve">
          <source>This hook is invoked for all theme hooks, if you are targeting a specific theme hook it's best to use &lt;a href=&quot;../hook_theme_suggestions_hook_alter/8.1.x&quot;&gt;hook_theme_suggestions_HOOK_alter&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d003a8d3f2821aefc7be1933ff64e33aef3c528" translate="yes" xml:space="preserve">
          <source>This hook is invoked from &lt;a href=&quot;../../../core-lib-drupal-core-entity-entityaccesscontrolhandler.php/function/entityaccesscontrolhandler-fieldaccess/8.1.x&quot;&gt;\Drupal\Core\Entity\EntityAccessControlHandler::fieldAccess&lt;/a&gt;() to let modules grant or deny operations on fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9200d174df74af86d179b90d7cb2b010bb17333e" translate="yes" xml:space="preserve">
          <source>This hook is invoked from &lt;a href=&quot;../../../core-modules-user-user.module/function/user_cancel/8.1.x&quot;&gt;user_cancel&lt;/a&gt;() before a user account is canceled. Depending on the account cancellation method, the module should either do nothing, unpublish content, or anonymize content. See &lt;a href=&quot;../../../core-modules-user-user.module/function/user_cancel_methods/8.1.x&quot;&gt;user_cancel_methods&lt;/a&gt;() for the list of default account cancellation methods provided by User module. Modules may add further methods via &lt;a href=&quot;../hook_user_cancel_methods_alter/8.1.x&quot;&gt;hook_user_cancel_methods_alter&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805373da6d66219b4f214d37b69d00a1f115d897" translate="yes" xml:space="preserve">
          <source>This hook is invoked from the node search plugin during search execution, after loading and rendering the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9612a57bdf984a9bca153a9a2d5f7349ab4fed93" translate="yes" xml:space="preserve">
          <source>This hook is invoked in &lt;a href=&quot;../../../core-modules-system-system.module/function/_system_rebuild_module_data/8.1.x&quot;&gt;_system_rebuild_module_data&lt;/a&gt;() and in &lt;a href=&quot;../../../core-lib-drupal-core-extension-themehandlerinterface.php/function/themehandlerinterface-rebuildthemedata/8.1.x&quot;&gt;\Drupal\Core\Extension\ThemeHandlerInterface::rebuildThemeData&lt;/a&gt;(). A module may implement this hook in order to add to or alter the data generated by reading the .info.yml file with &lt;a href=&quot;../../../core-lib-drupal-core-extension-infoparser.php/class/infoparser/8.1.x&quot;&gt;\Drupal\Core\Extension\InfoParser&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca8b71494b2d88f1b14b617262d5525833415fe" translate="yes" xml:space="preserve">
          <source>This hook is invoked in toolbar_pre_render().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74847fff68519c59affb83eab65ea67d8d05985e" translate="yes" xml:space="preserve">
          <source>This hook is invoked on the install profile in &lt;a href=&quot;../../../core-includes-install.core.inc/function/install_tasks/8.1.x&quot;&gt;install_tasks&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3692f060169b3054658887931f4014184e3a39b9" translate="yes" xml:space="preserve">
          <source>This hook is invoked when someone calls &lt;a href=&quot;../../../core-lib-drupal-core-utility-token.php/function/token-replace/8.1.x&quot;&gt;\Drupal\Core\Utility\Token::replace&lt;/a&gt;(). That function first scans the text for [type:token] patterns, and splits the needed tokens into groups by type. Then &lt;a href=&quot;8.1.x&quot;&gt;hook_tokens&lt;/a&gt;() is invoked on each token-type group, allowing your module to respond by providing replacement text for any of the tokens in the group that your module knows how to process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f19daefc801f43b406d9782686fa0076ab6fd75" translate="yes" xml:space="preserve">
          <source>This hook is only invoked after the system has been completely cleared; i.e., all previously cached data is known to be gone and every API in the system is known to return current information, so your module can safely rely on all available data to rebuild its own.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c183e28a3dc608c36d1f57b53c994334bbb874" translate="yes" xml:space="preserve">
          <source>This hook is used in a theme engine implementation in the format of ENGINE_extension().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a956a33cfce6e73226aaf6b1463c82aa843c3bb" translate="yes" xml:space="preserve">
          <source>This hook is useful to extend existing configuration mappers with new configuration names, for example when altering existing forms with new settings stored elsewhere. This allows the translation experience to also reflect the compound form element in one screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5351f9d594ec5ea820f9c77250f93f80e27c057e" translate="yes" xml:space="preserve">
          <source>This hook lets modules perform additional validation on files. They're able to report a failure by returning one or more error messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e17e9a4bfb270b139837f4a6e2b3a70d07d9376" translate="yes" xml:space="preserve">
          <source>This hook may be used to modify handler properties after they have been specified by other modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237ac298e54dd3cf6233989f5bd2b4a0191b53af" translate="yes" xml:space="preserve">
          <source>This hook may be used to modify plugin properties after they have been specified by other modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1189a8bf5f32920d596038cf309b6a812ec76095" translate="yes" xml:space="preserve">
          <source>This hook runs after a new entity object has just been instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb40c41a03f1bc5a7012e715a376f231b8763de" translate="yes" xml:space="preserve">
          <source>This hook runs after a new entity object or a new entity translation object has just been instantiated. It can be used to set initial values, e.g. to provide defaults.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ff05755b6d72f349e2a05f4338462ac578b4de" translate="yes" xml:space="preserve">
          <source>This hook runs after a new entity translation object has just been instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2243e693d0eb897266c6427a3961bb1c5dc2f37" translate="yes" xml:space="preserve">
          <source>This hook runs once the entity has been deleted from the storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c78ae897c5c0bd3561f558b5ab61cc677f7456" translate="yes" xml:space="preserve">
          <source>This hook runs once the entity has been stored. Note that hook implementations may not alter the stored entity data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5ba23f579bfad8caf8ab7e3b0c2a4bf3e8122d" translate="yes" xml:space="preserve">
          <source>This hook runs once the entity revision has been deleted from the storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101743e9e5454381d3699674559478af78d5295d" translate="yes" xml:space="preserve">
          <source>This hook runs once the entity storage has been updated. Note that hook implementations may not alter the stored entity data. Get the original entity object from $entity-&amp;gt;original.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e54b4f192de2fb3369a54283e833d847edd4b4e" translate="yes" xml:space="preserve">
          <source>This hook runs once the entity translation has been deleted from storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf5dbf809defcc1090a4800ba1a4d8c1ced8ffa" translate="yes" xml:space="preserve">
          <source>This hook runs once the entity translation has been stored. Note that hook implementations may not alter the stored entity translation data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0ec580997c42082ae5a9bf7d94a76c7f01588d" translate="yes" xml:space="preserve">
          <source>This hook should be implemented in a .module file, not in an .install file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11dbf8f727de51fac9e0bd07d4a05a7b0fb30cb" translate="yes" xml:space="preserve">
          <source>This hook will fire whenever a view is enabled, disabled, created, updated, or deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1385adef150b5167ebf89bdae31872f834b3118" translate="yes" xml:space="preserve">
          <source>This implementation caches all active trail IDs per route match for *all* menus whose active trails are calculated on that page. This ensures 1 cache get for all active trails per page load, rather than N.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a2eeb6ca5888509ab79b5d4927848a966073bd" translate="yes" xml:space="preserve">
          <source>This implementation caches all active trail IDs per route match for *all* menus whose active trails are calculated on that page. This ensures 1 cache get for all active trails per page load, rather than N. &lt;em&gt;Overrides &lt;a href=&quot;../../../core-lib-drupal-core-menu-menuactivetrailinterface.php/function/menuactivetrailinterface-getactivetrailids/8.1.x&quot;&gt;MenuActiveTrailInterface::getActiveTrailIds&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84a0cd0e66154da0d8ff3849ae38c71f5b0e7dc" translate="yes" xml:space="preserve">
          <source>This implementation won't actually lock anything and will always succeed on lock attempts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="709f21a54c901e9bbae691ca5e3b784335aeacc6" translate="yes" xml:space="preserve">
          <source>This implementation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d53fef1e496e03b44c2eecd2d0b3fe5785e8637" translate="yes" xml:space="preserve">
          <source>This includes field definitions, base field definitions, and field storage definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb2960c8da2bf82fb712cc6c44e999ce9939eaa" translate="yes" xml:space="preserve">
          <source>This information can only be provided after it was added with addField().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3492bf41a68c8d95b11fb3e9ef6146d4cebe525" translate="yes" xml:space="preserve">
          <source>This information is exposed to all database drivers, although it is only useful on some of them. This method is table prefix-aware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b68ad46b0619571c05b8eb7caba99aac7dc2dd0" translate="yes" xml:space="preserve">
          <source>This instructs the client to attach the name=value pair of data to the selector via jQuery's data cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c3ee2735691c1253297903e8528603e7e35b20" translate="yes" xml:space="preserve">
          <source>This interface allows both configurable fields and overridden base fields to share a common interface. The interface also extends ConfigEntityInterface to ensure that implementations have the expected save() method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ebc18599603b0824c0d58b3d03eedebd0c7fafc" translate="yes" xml:space="preserve">
          <source>This interface also provides methods to retrieve instances of the definitions to be updated ready to be manipulated. In fact when definitions change in code the system needs to be notified about that and the definitions stored in state need to be reconciled with the ones living in code. This typically happens in Update API functions, which need to take the system from a known state to another known state. Relying on the definitions living in code might prevent this, as the system might transition directly to the last available state, and thus skipping the intermediate steps. Manipulating the definitions in state allows to avoid this and ensures that the various steps of the update process are predictable and repeatable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e638af128d7ef83763155126a699d9ef59aca5a" translate="yes" xml:space="preserve">
          <source>This interface builds upon the general interfaces provided by the typed data API, while extending them with entity-specific additions. I.e., fieldable entities implement the ComplexDataInterface among others, thus it is complex data containing fields as its data properties. The contained fields have to implement &lt;a href=&quot;../../../core-lib-drupal-core-field-fielditemlistinterface.php/interface/fielditemlistinterface/8.1.x&quot;&gt;\Drupal\Core\Field\FieldItemListInterface&lt;/a&gt;, which builds upon typed data interfaces as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0b1e481b1d3746c2326d6c312c6b8e78a039b6" translate="yes" xml:space="preserve">
          <source>This interface can be implemented by entity handlers that require dependency injection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ededc42117776123c87ceb6979af40c701b706" translate="yes" xml:space="preserve">
          <source>This interface defines the full behavior of the central Drupal logger facility. However, when writing code that does logging, use the generic &lt;a href=&quot;https://api.drupal.org/api/drupal/vendor%21psr%21log%21Psr%21Log%21LoggerInterface.php/interface/LoggerInterface/8.1.x&quot;&gt;\Psr\Log\LoggerInterface&lt;/a&gt; for typehinting instead (you shouldn't need the methods here).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37ee753622bcab7c5ccbbd84bbec22c14a9bfe8" translate="yes" xml:space="preserve">
          <source>This interface details base wrapping methods that most widget implementations will want to directly inherit from &lt;a href=&quot;../../../core-lib-drupal-core-field-widgetbase.php/class/widgetbase/8.1.x&quot;&gt;Drupal\Core\Field\WidgetBase&lt;/a&gt;. See &lt;a href=&quot;../../../core-lib-drupal-core-field-widgetinterface.php/interface/widgetinterface/8.1.x&quot;&gt;Drupal\Core\Field\WidgetInterface&lt;/a&gt; for methods that will more likely be overridden in actual widget implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322643ac8ee00cb7e7f0b462d7959fb5865abc01" translate="yes" xml:space="preserve">
          <source>This interface details the methods that most plugin implementations will want to override. See &lt;a href=&quot;../../../core-lib-drupal-core-field-widgetbaseinterface.php/interface/widgetbaseinterface/8.1.x&quot;&gt;Drupal\Core\Field\WidgetBaseInterface&lt;/a&gt; for base wrapping methods that should most likely be inherited directly from &lt;a href=&quot;../../../core-lib-drupal-core-field-widgetbase.php/class/widgetbase/8.1.x&quot;&gt;Drupal\Core\Field\WidgetBase&lt;/a&gt;..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b44059d1592d1a7c36bee4a98a37043c20a92f9" translate="yes" xml:space="preserve">
          <source>This interface extends Symfony's KernelInterface and adds methods for responding to modules being enabled or disabled during its lifetime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624bce13b29be47d48bae0f88f3f8b11dc72be74" translate="yes" xml:space="preserve">
          <source>This interface gives classes who need services a factory method for instantiation rather than defining a new service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4fbea72350726dbf143f5a949bdf55a0fc946d" translate="yes" xml:space="preserve">
          <source>This interface is present on a data definition if it describes a list. The actual lists implement the &lt;a href=&quot;../../../core-lib-drupal-core-typeddata-listinterface.php/interface/listinterface/8.1.x&quot;&gt;\Drupal\Core\TypedData\ListInterface&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc19fbbe5d6763f980ef12cac1431eba91bed16b" translate="yes" xml:space="preserve">
          <source>This interface must be implemented by every entity field, whereas contained field items must implement the FieldItemInterface. Some methods of the fields are delegated to the first contained item, in particular get() and set() as well as their magic equivalences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5409dd635338424c2ec06744f22ddbe9c18d7479" translate="yes" xml:space="preserve">
          <source>This involves the same hooks and operations as regular entity loading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad6e3870507e051ae9744bd909ee87f81d579d9" translate="yes" xml:space="preserve">
          <source>This is Drupal's default cache implementation. It uses the database to store cached data. Each cache bin corresponds to a database table by the same name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8efc2cec069bb7c8f81bfd59e467cc471fe1adc" translate="yes" xml:space="preserve">
          <source>This is Drupal's default key/value store implementation. It uses the database to store key/value data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84d0a645e8e659c27ca483c6d318a251cbb78f3" translate="yes" xml:space="preserve">
          <source>This is a PHP implementation of the drupal.active-link JavaScript library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5ea4bae7677b8e9b068d3f2ca962e6dbb37a7c" translate="yes" xml:space="preserve">
          <source>This is a cooperative, advisory lock system. Any long-running operation that could potentially be attempted in parallel by multiple requests should try to acquire a lock before proceeding. By obtaining a lock, one request notifies any other requests that a specific operation is in progress which must not be executed in parallel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb01ebe3adcbc2d613545df86cc480ac4f09589a" translate="yes" xml:space="preserve">
          <source>This is a factory method that returns a new instance of this class. The factory should pass any needed dependencies into the constructor of this class, but not the container itself. Every call to this method must return a new instance of this class; that is, it may not implement a singleton.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d477ed6522417cbcc539d56d756d0c951a8dae6" translate="yes" xml:space="preserve">
          <source>This is a factory method that returns a new instance of this object. The factory should pass any needed dependencies into the constructor of this object, but not the container itself. Every call to this method must return a new instance of this object; that is, it may not implement a singleton.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c432aa13ddeaffd9f3642efd4dbc2d7b4b1e91" translate="yes" xml:space="preserve">
          <source>This is a generic load hook called for all entity types loaded via the entity API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b20f7ff7516df221401521c64e1f69a8c20f63a" translate="yes" xml:space="preserve">
          <source>This is a helper function that calls buildExternalUrl() or buildLocalUrl() based on a check of whether the path is a valid external URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3926f1e80d5035b98df41be789cb70be6d19d933" translate="yes" xml:space="preserve">
          <source>This is a helper function that calls buildExternalUrl() or buildLocalUrl() based on a check of whether the path is a valid external URL. &lt;em&gt;Overrides &lt;a href=&quot;../../../core-lib-drupal-core-utility-unroutedurlassemblerinterface.php/function/unroutedurlassemblerinterface-assemble/8.1.x&quot;&gt;UnroutedUrlAssemblerInterface::assemble&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ad22e2fff281bcc1965c6024f7902aaa6709c1" translate="yes" xml:space="preserve">
          <source>This is a high performance way to provide a handful of string replacements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c973fb5f87250c03825c57fb1c9c8b2c056f6ae" translate="yes" xml:space="preserve">
          <source>This is a high performance way to provide a handful of string replacements. See settings.php for examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1c9333b0cb8120ad3a995a44e3b2e01aef4d0e" translate="yes" xml:space="preserve">
          <source>This is a kill switch &amp;mdash; both orIf() and andIf() will result in isForbidden() if either results are isForbidden().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55a55b50fffd1a5824ca985460a25fc182b7439" translate="yes" xml:space="preserve">
          <source>This is a multistep operation: we go through all nodes by packs of 20. The batch processing engine interrupts processing and sends progress feedback after 1 second execution time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa88893e79ea98764adbbf3c22b341023997c99e" translate="yes" xml:space="preserve">
          <source>This is a nested array whose top-level keys are 'app' and 'site', denoting the origin of a service provider. Site-specific providers have to be collected separately, because they need to be processed last, so as to be able to override services from application service providers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3024bcef8b5a5c9edf2bb8a9e4b381630bc89c" translate="yes" xml:space="preserve">
          <source>This is a powerful function that in many ways performs like an advanced version of &lt;a href=&quot;http://php.net/copy&quot;&gt;copy&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b385005522c736e1239bfd2f88d5f968156684b9" translate="yes" xml:space="preserve">
          <source>This is a powerful function that in many ways performs like an advanced version of &lt;a href=&quot;http://php.net/rename&quot;&gt;rename&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e60f15cb7f5c2db14600be502c6184eaca0898d" translate="yes" xml:space="preserve">
          <source>This is a publicly accessible static method to allow for alternative usages in data conversion scripts and also tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59177b763878fceeedf95b97c84dca13a04a6ae9" translate="yes" xml:space="preserve">
          <source>This is a ridiculously long set of constructor parameters, but as this object is little more than a collection of values it's not a serious problem. The parent Symfony class does the same, as well, making it difficult to override differently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2556c7df3a2a79849f45f195268bad7300cccb81" translate="yes" xml:space="preserve">
          <source>This is a setting name that will be used if the specific setting does not exist. The setting value will be the id of a service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb0d723af6c90cd3f3ba19e41c4a1391a47005c" translate="yes" xml:space="preserve">
          <source>This is a special case of &lt;a href=&quot;../../../core-lib-drupal-core-render-element-dropbutton.php/class/dropbutton/8.1.x&quot;&gt;\Drupal\Core\Render\Element\Dropbutton&lt;/a&gt;; the only difference is that it offers themes the possibility to render it differently through a theme suggestion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba75d594c9da0385901e1e6b8bdfef265330a7ac" translate="yes" xml:space="preserve">
          <source>This is a version of &lt;a href=&quot;http://php.net/array_diff_assoc&quot;&gt;array_diff_assoc&lt;/a&gt;() that supports multidimensional arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85de699569c3dbba609c76c6f5302e0cff3f096e" translate="yes" xml:space="preserve">
          <source>This is a wrapper around &lt;a href=&quot;http://php.net/xml_parser_create&quot;&gt;xml_parser_create&lt;/a&gt;() which extracts the encoding from the XML data first and sets the output encoding to UTF-8. This function should be used instead of &lt;a href=&quot;http://php.net/xml_parser_create&quot;&gt;xml_parser_create&lt;/a&gt;(), because PHP 4's XML parser doesn't check the input encoding itself. &quot;Starting from PHP 5, the input encoding is automatically detected, so that the encoding parameter specifies only the output encoding.&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069db90d0370a106985ff78d99f697e8ef8a3f3a" translate="yes" xml:space="preserve">
          <source>This is a wrapper logging function which automatically decodes an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1659fa246678cc0f28c937e3917eabf7d3ed63" translate="yes" xml:space="preserve">
          <source>This is also where unsupported encodings will be converted. Callers should take this into account: $data might have been changed after the call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100f1cb8e627c0b60138ab795fba24b70ce35f13" translate="yes" xml:space="preserve">
          <source>This is an array of menu link plugin IDs, representing the trail from the currently active menu link to the (&quot;real&quot;) root of that menu link's menu. This does not affect the way the tree is built. It is only used to set the value of the inActiveTrail property for each tree element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9470aae37c136edff40f7e25186fef2c33a45d4f" translate="yes" xml:space="preserve">
          <source>This is an associative array. The keys are the fields to order, and the value is the direction to order, either ASC or DESC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97efffc2644759322777072cb0b9e544813d9a2a" translate="yes" xml:space="preserve">
          <source>This is an internal element that is primarily used to render the radios form element. Refer to &lt;a href=&quot;../../../core-lib-drupal-core-render-element-radios.php/class/radios/8.1.x&quot;&gt;\Drupal\Core\Render\Element\Radios&lt;/a&gt; for more documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299a275dac79dac26ae1c3930f48eb61e7da2a9c" translate="yes" xml:space="preserve">
          <source>This is an override of &lt;a href=&quot;../core-modules-system-templates-field.html.twig/8.1.x&quot;&gt;field.html.twig&lt;/a&gt; for the node created field. See that template for documentation about its details and overrides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd244e01f90c558bb7cdde7d90d0d954c23cc8c" translate="yes" xml:space="preserve">
          <source>This is an override of &lt;a href=&quot;../core-modules-system-templates-field.html.twig/8.1.x&quot;&gt;field.html.twig&lt;/a&gt; for the node title field. See that template for documentation about its details and overrides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93e5f58954e6a92708677b9e89c677695ecb238" translate="yes" xml:space="preserve">
          <source>This is an override of &lt;a href=&quot;../core-modules-system-templates-field.html.twig/8.1.x&quot;&gt;field.html.twig&lt;/a&gt; for the node user field. See that template for documentation about its details and overrides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf6c93728514c9312aff452e8e64939fd5a9300" translate="yes" xml:space="preserve">
          <source>This is based on the number/range verification methods of webkit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d0217bd78a6ad92fe6345a68aeab79c2ac1d97" translate="yes" xml:space="preserve">
          <source>This is called on all modules even if there is no &lt;a href=&quot;../hook_field_views_data/8.1.x&quot;&gt;hook_field_views_data&lt;/a&gt;() implementation for the field, and therefore may be used to alter the default data that &lt;a href=&quot;../../../core-modules-views-views.views.inc/function/views_field_default_views_data/8.1.x&quot;&gt;views_field_default_views_data&lt;/a&gt;() supplies for the field storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c74ed7eb1ca7c90c867c0a25d64db2217a4bdee" translate="yes" xml:space="preserve">
          <source>This is called to leave the current scope, and move back to the parent scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8dabf4f5398efe49ca50e609f689d53715d58d6" translate="yes" xml:space="preserve">
          <source>This is called when you enter a scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68775ec81e6a4032554f4384731a8d9f725dd14b" translate="yes" xml:space="preserve">
          <source>This is centralized for a consistent method of creating these examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="376f923f9868449c19850262d40c216ae5500210" translate="yes" xml:space="preserve">
          <source>This is collected by DatabaseConnection_pgsql-&amp;gt;queryTableInformation(), by introspecting the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47edeb19036ba2973e64974d9082a8d80b6a4127" translate="yes" xml:space="preserve">
          <source>This is compatible with render caching, because of cache context bubbling: conditionally defined cache contexts (i.e. subtrees that are only accessible to some users) will bubble just like they do for render arrays. This is why inaccessible subtrees are deleted, except at the top-level inaccessible link: if we didn't keep the first (depth-wise) inaccessible link, we wouldn't be able to know which cache contexts would cause those subtrees to become accessible again, thus forcing us to conclude that that subtree is unconditionally inaccessible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dea115ad2191c98061a1dc41ee66a337573da57" translate="yes" xml:space="preserve">
          <source>This is displayed in addition to the label in places where additional descriptive information is helpful. For example, as help text below the form element in entity edit forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e6a0c43852d4f403472b3b34ad0d8d79c31623" translate="yes" xml:space="preserve">
          <source>This is done because config schema uses dots for its internal type hierarchy. Double underscores are converted to triple underscores to avoid accidental conflicts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a976bade53b45bef0839ebf74091e65c13904f" translate="yes" xml:space="preserve">
          <source>This is equivalent to checking whether the data definition implements the \Drupal\Core\TypedData\ListDefinitionInterface interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54199c9eb2195dad725f4f6a019eda87f0c4fcea" translate="yes" xml:space="preserve">
          <source>This is extracted verbatim from analyze.c (GNU diffutils-2.7).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd4c9f1d143a9a729581a2fdd94041edf43f20d" translate="yes" xml:space="preserve">
          <source>This is fast because of PHP's opcode caching mechanism. Once a file's content is stored in PHP's opcode cache, including it doesn't require reading the contents from a filesystem. Instead, PHP will use the already compiled opcodes stored in memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556528fd2e2c246bdb2ed21c4d5e8ceac8d037eb" translate="yes" xml:space="preserve">
          <source>This is for BC support only. @todo: Remove in &lt;a href=&quot;https://www.drupal.org/node/1928868&quot;&gt;https://www.drupal.org/node/1928868&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff2cef13cf2d0c4b98028b23354b8394e09bffc5" translate="yes" xml:space="preserve">
          <source>This is for the type of display variant, not the configured variant itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7e4ca93ce87bcf1de6c886e984c353e65fae5a" translate="yes" xml:space="preserve">
          <source>This is generally used to protect against cross-site forgeries. A token element is automatically added to each Drupal form by an implementation of &lt;a href=&quot;../../../core-lib-drupal-core-form-formbuilderinterface.php/function/formbuilderinterface-prepareform/8.1.x&quot;&gt;\Drupal\Core\Form\FormBuilderInterface::prepareForm&lt;/a&gt;() so you don't generally have to add one yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295467c4dc795270f433f4f3f25099a7b7374fa8" translate="yes" xml:space="preserve">
          <source>This is here only for debugging purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d5655092bd0a2c04cdb44915ca9fe76cb27119" translate="yes" xml:space="preserve">
          <source>This is identical to the base Exception class, we just give it a more specific name so that call sites that want to tell the difference can specifically catch these exceptions and treat them differently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2477047120940320dda4d70c5b85c395f70502" translate="yes" xml:space="preserve">
          <source>This is implemented by entities as well as by field item classes of entities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2b4ec8532f04d50116a0034134c9e37c253750" translate="yes" xml:space="preserve">
          <source>This is intended to provide a &quot;best guess&quot; count of the number of items in the queue. Depending on the implementation and the setup, the accuracy of the results of this function may vary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="575771bb0f06e35a689ab7cc844a187e128acc24" translate="yes" xml:space="preserve">
          <source>This is just a wrapper method to rollback whatever transaction stack we are currently in, which is managed by the connection object itself. Note that logging (preferable with &lt;a href=&quot;../../../core-includes-bootstrap.inc/function/watchdog_exception/8.1.x&quot;&gt;watchdog_exception&lt;/a&gt;()) needs to happen after a transaction has been rolled back or the log messages will be rolled back too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fffab0767364a0af6123212575168f7712645a2" translate="yes" xml:space="preserve">
          <source>This is less than or equal to the byte count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b5335ebbd27fdf8b568a8f2e1d35bc932254135" translate="yes" xml:space="preserve">
          <source>This is like &lt;a href=&quot;../../../core-lib-drupal-core-form-formbuilderinterface.php/interface/formbuilderinterface/8.1.x&quot;&gt;\Drupal\Core\Form\FormBuilderInterface&lt;/a&gt; but instead of looking up the form class by class name, it looks up the form class based on the entity type and operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0081871ef8a30e0019a82de9982bafcb252e10f9" translate="yes" xml:space="preserve">
          <source>This is mainly used in testing environments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fbc2c65c15717ab765faa49f04c6c3d5d87a511" translate="yes" xml:space="preserve">
          <source>This is merged (&lt;a href=&quot;../../../core-lib-drupal-component-utility-nestedarray.php/function/nestedarray-mergedeep/8.1.x&quot;&gt;\Drupal\Component\Utility\NestedArray::mergeDeep&lt;/a&gt;()) with &lt;a href=&quot;../../../core-lib-drupal-core-menu-menulinkinterface.php/function/menulinkinterface-getoptions/8.1.x&quot;&gt;\Drupal\Core\Menu\MenuLinkInterface::getOptions&lt;/a&gt;(), to allow menu link tree manipulators to add or override link options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b658f2df1475e423424f3689fd9fd0fb3eeacc4" translate="yes" xml:space="preserve">
          <source>This is mostly for diagnostic purposed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a55a9889bff8f2bcd25dd9567775b41d82c9c12" translate="yes" xml:space="preserve">
          <source>This is mostly used to change the override settings on the configuration factory. For example, changing the language, or turning all overrides on or off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b6f96c717430a895d002601ddb5a4a6fb21a91" translate="yes" xml:space="preserve">
          <source>This is needed for logging and auditing. It's sloppy to do in the constructor because the constructor for child classes has a different signature. We therefore also ensure that this function is only ever called once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105095d2c13b68730586b38d56ca6550dd4f7ce8" translate="yes" xml:space="preserve">
          <source>This is not a special key, and no specific support is provided for it in the Form API. By tradition it was the location where application-specific data was stored for communication between the submit, validation, and form builder functions, especially in a multi-step-style form. Form implementations may use any &lt;a href=&quot;http://php.net/key&quot;&gt;key&lt;/a&gt;(s) within $form_state (other than the keys listed here and other reserved ones used by Form API internals) for this kind of storage. The recommended way to ensure that the chosen key doesn't conflict with ones used by the Form API or other modules is to use the module name as the key name or a prefix for the key name. For example, the entity form classes use $this-&amp;gt;entity in entity forms, or $form_state-&amp;gt;getFormObject()-&amp;gt;getEntity() outside the controller, to store information about the entity being edited, and this information stays available across successive clicks of the &quot;Preview&quot; button (if available) as well as when the &quot;Save&quot; button is finally clicked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15d310bb1bf588687ec0d006989da18d7df21cf" translate="yes" xml:space="preserve">
          <source>This is not a special key, and no specific support is provided for it in the Form API. By tradition it was the location where application-specific data was stored for communication between the submit, validation, and form builder functions, especially&amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a03c33faeee2ee56fae7bdf771b1b8327608f3" translate="yes" xml:space="preserve">
          <source>This is not necessarily the same as the type of the database itself. For instance, there could be two MySQL drivers, mysql and mysql_mock. This function would return different values for each, but both would return &quot;mysql&quot; for databaseType().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70276906dc05019517dd76ecbb97687e10f0cc85" translate="yes" xml:space="preserve">
          <source>This is not persisted by default. In practice this means that setting a value will only apply while the object is in scope and will not be written back to the persistent cache. This follows a similar pattern to static vs. persistent caching in procedural code. Extending classes may wish to alter this behavior, for example by adding a call to persist().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d05871a6a592ebfdf2f94f6c511ec0f1ee7fb2" translate="yes" xml:space="preserve">
          <source>This is not provided manually, it will be added by the discovery mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a07b4405b2dbadf1b816b145e36511e42d14545" translate="yes" xml:space="preserve">
          <source>This is not to be confused with EntityDisplayModeBase::$entityType which is inherited from Entity::$entityType.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a749a670afa0393d1bb7b85860ba09df6f82a16a" translate="yes" xml:space="preserve">
          <source>This is not visible in the UI or accessible via web, but readable and writable; for instance, the temporary directory for file uploads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760643cdbc157ea2b25f19c2dbf903f776f8e18a" translate="yes" xml:space="preserve">
          <source>This is often used in the UI to ensure long strings fit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8abefc4771f64f0f23fe730a8879a7a074826ac4" translate="yes" xml:space="preserve">
          <source>This is one of the three primary functions that recursively iterates a form array. This one does it for completing the form building process. The other two are self::doValidateForm() (invoked via self::validateForm() and used to invoke validation logic for each element) and &lt;a href=&quot;../../../core-includes-common.inc/function/drupal_render/8.1.x&quot;&gt;drupal_render&lt;/a&gt;() (for rendering each element). Each of these three pipelines provides ample opportunity for modules to customize what happens. For example, during this function's life cycle, the following functions get called for each element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f373f8c6fe0280b24a94ce5f2b4d558de4353e51" translate="yes" xml:space="preserve">
          <source>This is only allowed if all modules and the request method is GET. _theme() should be very rarely called on POST requests and this avoids polluting the runtime cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f28d6c8d05a7879d31350124fab91eb16c967a" translate="yes" xml:space="preserve">
          <source>This is only called if there is no matching link template for the link relationship type, and there is no bundle-specific callback provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a388bed36394e6e186100a2f725445653ac0176a" translate="yes" xml:space="preserve">
          <source>This is only set if the class name is changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93f423c9ee943f92af24a73d6cc51a263c54586" translate="yes" xml:space="preserve">
          <source>This is only used by tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f9eb00ebb95614fb9c186363fa3f996f3b84a2" translate="yes" xml:space="preserve">
          <source>This is passed to all form related code so that the caller can use it to examine what in the form changed when the form submission process is complete. Furthermore, it may be used to store information related to the processed data in the form, which will persist across page requests when the 'cache' or 'rebuild' flag is set. See &lt;a href=&quot;../../../core-lib-drupal-core-form-formstate.php/class/formstate/8.1.x&quot;&gt;\Drupal\Core\Form\FormState&lt;/a&gt;::$internalStorage for documentation of the available flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c61f8e907448db2dffcb2c6c35d5dfe305f9b37" translate="yes" xml:space="preserve">
          <source>This is primarily used by the Drupal installer for bootstrap-related tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ace19f142d9335eee383ac3b96823af6e3a13a8" translate="yes" xml:space="preserve">
          <source>This is really shorthand for:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3623a28f2d2dda629e521a7ad5aa00e6fc9263c" translate="yes" xml:space="preserve">
          <source>This is shared for both core and contrib to generate the right elements in the array for &lt;a href=&quot;../../../core-lib-drupal-core-extension-module.api.php/function/hook_requirements/8.1.x&quot;&gt;hook_requirements&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea58d324f5c94ff9b3163306899c4559436b3fa" translate="yes" xml:space="preserve">
          <source>This is specific to Batch API and is not part of the &lt;a href=&quot;../../../core-lib-drupal-core-queue-queueinterface.php/interface/queueinterface/8.1.x&quot;&gt;\Drupal\Core\Queue\QueueInterface&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13168f8bccc1589130996efbf68d052f315e1cf0" translate="yes" xml:space="preserve">
          <source>This is stored on the class so that it does not have to be recalculated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2eb4ef765de09159520f39b349be52192802dfe" translate="yes" xml:space="preserve">
          <source>This is the &quot;default&quot; pager mechanism. It creates a paged query with a fixed number of entries per page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff7534fedf59bc068f001914574d32c415ec36d" translate="yes" xml:space="preserve">
          <source>This is the &lt;a href=&quot;../../../core-lib-drupal-core-database-database.api.php/function/hook_query_alter/8.1.x&quot;&gt;hook_query_alter&lt;/a&gt;() for queries tagged by Views and is used to add in substitutions from &lt;a href=&quot;../../../core-modules-views-views.api.php/function/hook_views_query_substitutions/8.1.x&quot;&gt;hook_views_query_substitutions&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccde676f232b8451b8d155592312b7c4bb844a70" translate="yes" xml:space="preserve">
          <source>This is the &lt;a href=&quot;../../../core-lib-drupal-core-database-database.api.php/function/hook_query_alter/8.1.x&quot;&gt;hook_query_alter&lt;/a&gt;() for queries tagged with 'node_access'. It adds node access checks for the user account given by the 'account' meta-data (or current user if not provided), for an operation given by the 'op' meta-data (or 'view' if not provided; other possible values are 'update' and 'delete').</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac6c1548886917e58e013f1753cf7fea9de7901" translate="yes" xml:space="preserve">
          <source>This is the Actions module for executing stored actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2bae8a6e3482f426ff5f62476f2d7313e8f71f1" translate="yes" xml:space="preserve">
          <source>This is the ETX (End of text) character and is used as a minimal means to separate singular and plural variants in source and translation text. It was found to be the most compatible delimiter for the supported databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e12686eba0748c8d36f2e5b797eed8833181915" translate="yes" xml:space="preserve">
          <source>This is the basic views analysis that checks for very minimal problems. There are other analysis tools in core specific sections, such as &lt;a href=&quot;https://api.drupal.org/api/drupal/core%21modules%21node%21node.views.inc/8.0.x&quot;&gt;node.views.inc&lt;/a&gt; as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6240a29ec6ea1863cd7207503c80ec659bd9c06a" translate="yes" xml:space="preserve">
          <source>This is the core method of this class. It grabs the value at the current array position in $this-&amp;gt;data and format it according to $this-&amp;gt;fetchStyle and $this-&amp;gt;fetchMode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7de6e19da1878b0f401bab16048b9c7e4c9c433" translate="yes" xml:space="preserve">
          <source>This is the default 'type' falg. This does not include StreamWrapperInterface::LOCAL, because PHP grants a greater trust level to local files (for example, they can be used in an &quot;include&quot; statement, regardless of the &quot;allow_url_include&quot; setting), so stream wrappers need to explicitly opt-in to this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6882483975bd8ade317fdd0e37882c3e4a609292" translate="yes" xml:space="preserve">
          <source>This is the default 'type' falg. This does not include StreamWrapperInterface::LOCAL, because PHP grants a greater trust level to local files (for example, they can be used in an &quot;include&quot; statement, regardless of the&amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8cd61a24f724f7f27a55515d9bfacebbd3324a" translate="yes" xml:space="preserve">
          <source>This is the default entity object builder function. It is called before any other submit handler to build the new entity object to be used by the following submit handlers. At this point of the form workflow the entity is validated and the form state can be updated, this way the subsequently invoked handlers can retrieve a regular entity object to act on. Generally this method should not be overridden unless the entity requires the same preparation for two actions, see &lt;a href=&quot;https://api.drupal.org/api/drupal/core%21modules%21comment%21src%21CommentForm.php/class/CommentForm/8.1.x&quot;&gt;\Drupal\comment\CommentForm&lt;/a&gt; for an example with the save and preview actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0a4a0050d8f316ae282f0f67a527c9f94503d7" translate="yes" xml:space="preserve">
          <source>This is the default entity object builder function. It is called before any other submit handler to build the new entity object to be used by the following submit handlers. At this point of the form workflow the entity is validated and the form state&amp;hellip; &lt;em&gt;Overrides &lt;a href=&quot;../../../core-lib-drupal-core-entity-entitydeleteformtrait.php/function/entitydeleteformtrait-submitform/8.1.x&quot;&gt;EntityDeleteFormTrait::submitForm&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d985497cd162e99e2e9cedcf7d402db0eb0cbe8" translate="yes" xml:space="preserve">
          <source>This is the default entity object builder function. It is called before any other submit handler to build the new entity object to be used by the following submit handlers. At this point of the form workflow the entity is validated and the form state&amp;hellip; &lt;em&gt;Overrides &lt;a href=&quot;../../../core-lib-drupal-core-entity-entityform.php/function/entityform-submitform/8.1.x&quot;&gt;EntityForm::submitForm&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c418843743b1c802a359d8fbc4dcff7171d9e7fc" translate="yes" xml:space="preserve">
          <source>This is the default entity object builder function. It is called before any other submit handler to build the new entity object to be used by the following submit handlers. At this point of the form workflow the entity is validated and the form state&amp;hellip; &lt;em&gt;Overrides &lt;a href=&quot;../../../core-lib-drupal-core-form-forminterface.php/function/forminterface-submitform/8.1.x&quot;&gt;FormInterface::submitForm&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657c40bb2ee83503444776f8299837cbef81842a" translate="yes" xml:space="preserve">
          <source>This is the default method for running tasks and should be used for most tasks that occur after the database is set up; these tasks will then run once and be marked complete once they are successfully finished. For example, the Drupal installer uses this flag for the batch installation of modules on the new site, and also for the configuration form that collects basic site information and sets up the site maintenance account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfe9cd325af33d283964e997284ad36e57a90e9" translate="yes" xml:space="preserve">
          <source>This is the key function for making multi-step forms advance from step to step. It is called by self::processForm() when all user input processing, including calling validation and submission handlers, for the request is finished. If a validate or submit handler set $form_state-&amp;gt;isRebuilding() to TRUE, and if other conditions don't preempt a rebuild from happening, then this function is called to generate a new $form, the next step in the form workflow, to be returned for rendering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0bc725cdbcbb3e4673b7073916990c69e570219" translate="yes" xml:space="preserve">
          <source>This is the language field accessors will use to determine which field values manipulate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faaa49dc14a77350f5f326e9328e8decca92df77" translate="yes" xml:space="preserve">
          <source>This is the last step where all of the attachments are placed into the response object's contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335d73e7c48ff2426d2d2ad5a71e308188192dfc" translate="yes" xml:space="preserve">
          <source>This is the main entry point to the configuration API. Calling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028faa1e936162eed72a096f8ad2d6c074d5c246" translate="yes" xml:space="preserve">
          <source>This is typically called during the login process when the plain text password is available. A new hash is needed when the desired iteration count has changed by a modification of the password-service in the dependency injection container or if the user's password hash was generated in an update like user_update_7000() (see the Drupal 7 documentation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c202b1c81d5ff53a887a7245fa37dbc6a2dfb2e" translate="yes" xml:space="preserve">
          <source>This is typically called for adding to the suggestions in &lt;a href=&quot;../../../core-lib-drupal-core-render-theme.api.php/function/hook_theme_suggestions_hook_alter/8.1.x&quot;&gt;hook_theme_suggestions_HOOK_alter&lt;/a&gt;() or adding to 'attributes' class key variables from within preprocess functions, when wanting to base the additional suggestions or classes on the path of the current page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24c6c91864b025ded78799e67d6273a69476a03" translate="yes" xml:space="preserve">
          <source>This is used as a pre render function for checkboxes and radios.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8d0acfbf11dfe4cad9b696bc94e6854814f8cb" translate="yes" xml:space="preserve">
          <source>This is used by the Entity reference field to promote an entity type in the add new field select list in Field UI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5368e013af199ba4cdfef346bc51ec2797b6bd" translate="yes" xml:space="preserve">
          <source>This is used during indexing (cron). Words that are dirty have outdated total counts in the search_total table, and need to be recounted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2986a0cfd2e3cf9ab16a6699a4ded6de20e088b" translate="yes" xml:space="preserve">
          <source>This is used for plugins not found through discovery to remove definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97b97bdf5bdc81f969875ea43775a256e81293f" translate="yes" xml:space="preserve">
          <source>This is used for queries that have no reasonable return value anyway, such as INSERT statements to a table without a serial primary key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd8e24019714f1dd57a68a1ac32241b6f22e1e5" translate="yes" xml:space="preserve">
          <source>This is used to check if an invalidated cache item has been overwritten in the meantime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3035081ef71cff1566b2bfe48272666a43f1ae1a" translate="yes" xml:space="preserve">
          <source>This is used to ensure that everything printed is wrapped via the TwigExtension-&amp;gt;renderVar() function in order to just write {{ content }} in templates instead of having to write {{ render_var(content) }}.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d491c35b81503f0183ceef2da6d72916ea397357" translate="yes" xml:space="preserve">
          <source>This is used to label the transaction savepoint. It will be overridden to 'drupal_transaction' if there is no transaction depth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828cc3eff5c64c89592d877229e8f34f808fe75d" translate="yes" xml:space="preserve">
          <source>This is useful for pages which want to show a specific revision, like &quot;/entity_example/{entity_example}/revision/{entity_example_revision}&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46544544bbdf69d1a71f970c95cfdd4346905607" translate="yes" xml:space="preserve">
          <source>This is useful for services that need to perform additional tasks to finalize operations or clean up after the response is sent and before the service is terminated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae4d6194f31dd814d36cb73a247786792adb3ee" translate="yes" xml:space="preserve">
          <source>This is useful in cases where the dynamic elements of the path can't be auto-determined; for example, if your path refers to multiple of the same type of entity (&quot;example/{node1}/foo/{node2}&quot;) or if the path can act on any entity type (&quot;example/{entity_type}/{entity}/foo&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024ff531c067ea629984696f90bb69911ae211f1" translate="yes" xml:space="preserve">
          <source>This is useful only in very specific situations to determine whether the system is already capable of collecting bubbleable metadata. Normally it should not be necessary to be concerned about this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44cd33caa37b1488813bf3fbaf7f0a3898f72bc" translate="yes" xml:space="preserve">
          <source>This is usually an identity function but if a key/index uses a column prefix specification, this function extracts just the name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc04480817adad7cb0949a6a73ba5d8e68b5389" translate="yes" xml:space="preserve">
          <source>This is what the form's &quot;method&quot; attribute should be, not necessarily what the current request's HTTP method is. For example, a form can have a method attribute of POST, but the request that initially builds it uses GET.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d4d48d1e0b94d43bdf9e6aa9cc71ea47286419" translate="yes" xml:space="preserve">
          <source>This is where Drupal core registers all of its compiler passes. The service definitions themselves are in core/core.services.yml with a few, documented exceptions (typically, install requirements).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40578c508d76253351e3c65363d8e569736636dd" translate="yes" xml:space="preserve">
          <source>This issues an on-site HTTP redirect. Messages (and errors) are erased.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9b07c4e6fc4b1e169cd3cf6928328c26ad37e1" translate="yes" xml:space="preserve">
          <source>This iterates over a list of the installed modules or themes and groups them by project and status. A few parts of this function assume that enabled modules and themes are always processed first, and if uninstalled modules or themes are being processed (there is a setting to control if uninstalled code should be included in the Available updates report or not),those are only processed after $projects has been populated with information about the enabled code. 'Hidden' modules and themes are ignored if they are not installed. 'Hidden' Modules and themes in the &quot;Testing&quot; package are ignored regardless of installation status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2b61d9fb262b521b8db40958524af582e87be7" translate="yes" xml:space="preserve">
          <source>This keeps the context of the link title ('settings' in the example) for translators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354fee2f815d0d7fc0b9457237f139d769e743cf" translate="yes" xml:space="preserve">
          <source>This key/value store implementation uses the database to store key/value data with an expire date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d56517da5c136ca840eeb109922a8058d574bd7" translate="yes" xml:space="preserve">
          <source>This legacy phase can only be booted once because it sets session INI settings. If a session has already been started, re-generating these settings would break the session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5b4049e41c5f03b986aeb933f8f26db3901995" translate="yes" xml:space="preserve">
          <source>This lets the callback restrict the set of allowed values or adjust the labels depending on some conditions on the containing entity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d4b1f90d047f90344ea1dfda38a0913e1acffe" translate="yes" xml:space="preserve">
          <source>This list can include types that are queued for addition or deletion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f407bc753caabbeb030f90f31916f6c4bde6870" translate="yes" xml:space="preserve">
          <source>This list is based on &lt;a href=&quot;http://www.un.org/en/sections/about-un/official-languages/index.html&quot;&gt;http://www.un.org/en/sections/about-un/official-languages/index.html&lt;/a&gt; and it uses the same format as getStandardLanguageList().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d06aff938593e63ce763a0fe911dba60e32a27" translate="yes" xml:space="preserve">
          <source>This list is derived from the &quot;East Asian Scripts&quot; section of &lt;a href=&quot;http://www.unicode.org/charts/index.html&quot;&gt;http://www.unicode.org/charts/index.html&lt;/a&gt;, as well as a comment on &lt;a href=&quot;http://unicode.org/reports/tr11/tr11-11.html&quot;&gt;http://unicode.org/reports/tr11/tr11-11.html&lt;/a&gt; listing some character ranges that are reserved for additional CJK ideographs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9720fb4a0887e30b79229a228c84c561b6b8c9af" translate="yes" xml:space="preserve">
          <source>This list is displayed on the Add content admin page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f6c5a52187d81f0e9b9711fc7bfa500a64d0ab" translate="yes" xml:space="preserve">
          <source>This loader is intended to be used in a Twig loader chain and whitelists string templates that begin with the following comment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d25b8f0a1cbc6bf663aabbbc99c93337822442" translate="yes" xml:space="preserve">
          <source>This loads the active theme, for example include its engine file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4695dc50d9edf326d5b2e6d73b4d92bf1c48b710" translate="yes" xml:space="preserve">
          <source>This manager finds plugins that are rendered as local tasks (usually tabs). Derivatives are supported for modules that wish to generate multiple tabs on behalf of something else.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8653790bacd9cecbc4fbb66f55b1ea78e6532d7e" translate="yes" xml:space="preserve">
          <source>This manager finds plugins that are rendered as menu links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6dbd41e5ac56e40b7b0efb7f0c6ce4015102bb1" translate="yes" xml:space="preserve">
          <source>This manipulator should be added before the generic ::checkAccess() one, because it provides a performance optimization for ::checkAccess().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854bb1e4a4ab71403eb580679912d56ce4f776ed" translate="yes" xml:space="preserve">
          <source>This maps a generic data type in combination with its data size to the engine-specific data type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2c4e2fe7318c344bde6499d41c24fc200b479f" translate="yes" xml:space="preserve">
          <source>This maps a generic data type in combination with its data size to the engine-specific data type. &lt;em&gt;Overrides &lt;a href=&quot;../../../core-lib-drupal-core-database-schema.php/function/schema-getfieldtypemap/8.1.x&quot;&gt;Schema::getFieldTypeMap&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1c423313697434c13161d35b81b39968a7861c" translate="yes" xml:space="preserve">
          <source>This may be stacked with other orderBy() calls. If so, the query will order by each specified field, including this one, in the order called. Although this method may be called multiple times on the same query, doing so is not particularly useful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27c3c9b43220bbc45e92f065ecd2f3d983ac0e9" translate="yes" xml:space="preserve">
          <source>This may return a mixed list of class instances, but all routes returned must extend the core symfony route. The classes may also implement RouteObjectInterface to link to a content document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e68b84fc9f313b0a40ddd26e0c8f6256e4a8b18" translate="yes" xml:space="preserve">
          <source>This means integer indices are preserved just like string indices are, rather than re-indexed as is common in PHP array merging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d788f0f4df4f36786b570b89982e28ecae8deefd" translate="yes" xml:space="preserve">
          <source>This means the entire system is reset so all caches and static variables are effectively empty. After that is guaranteed, information about the currently active code is updated, and rebuild operations are successively called in order to synchronize the active system according to the current information defined in code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37fa26328ea31d99af8c4c7313c6ba0d368abce" translate="yes" xml:space="preserve">
          <source>This mechanism allows a service to get multiple processor services injected, in order to establish an extensible architecture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2061aeb0bfdbfd8500d35cc0b35730e4dd3ecb94" translate="yes" xml:space="preserve">
          <source>This method allows base implementations to add general access restrictions that should apply to all extending block plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="305b14f421c6974ea527a99db4e087cd71982e80" translate="yes" xml:space="preserve">
          <source>This method allows configuration entities to remove dependencies instead of being deleted themselves. Configuration entities can use this method to avoid being unnecessarily deleted during an extension uninstallation. For example, entity displays remove references to widgets and formatters if the plugin that supplies them depends on a module that is being uninstalled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a591d6630e91f26a34909046c4860ff8525d95" translate="yes" xml:space="preserve">
          <source>This method allows to add new connections at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b711e72557e9216b8c531f7f7ccf1f1908fc88" translate="yes" xml:space="preserve">
          <source>This method also ends logging for the specified key. To get the query log to date without ending the logger request the logging object by starting it again (which does nothing to an open log key) and call methods on it as desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66116979a09e517517ee105f2a8629f52b0cdcba" translate="yes" xml:space="preserve">
          <source>This method caches prepared statements, reusing them when possible. It also prefixes tables names enclosed in curly-braces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d106a1de086d67bad61e2c2a9e3a7aef02351bf3" translate="yes" xml:space="preserve">
          <source>This method can take a variable number of parameters. If called with two parameters, they are taken as $field and $value with $operator having a value of =.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49cf433eb4828e62dcc2a994871ef00cfb0f58ce" translate="yes" xml:space="preserve">
          <source>This method can take a variable number of parameters. If called with two parameters, they are taken as $field and $value with $operator having a value of IN if $value is an array and = otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c54d3fadcbb87f735285d27d0475e1b54f2ff2e" translate="yes" xml:space="preserve">
          <source>This method checks the status of the site using the new data and, depending on the configuration of the site, notifies administrators via email if there are new releases or missing security updates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dddf446932f1372ff55610ed0225f0974837aa20" translate="yes" xml:space="preserve">
          <source>This method computes the runtime default value for a field in a given entity. To access the raw properties assigned to the field definition, ::getDefaultValueLiteral() or ::getDefaultValueCallback() should be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a482139248013d93fb68069c74afe526695145" translate="yes" xml:space="preserve">
          <source>This method converts the tree representation as array coming from the tree storage to a tree containing a list of MenuLinkTreeElement[].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c028cc9f36887a0447ecbab1729684a74daa3a12" translate="yes" xml:space="preserve">
          <source>This method corresponds to &lt;a href=&quot;http://php.net/PDOStatement::fetchObject&quot;&gt;PDOStatement::fetchObject&lt;/a&gt;(), but for associative arrays. For some reason PDOStatement does not have a corresponding array helper method, so one is added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af4ebf4449657f59c230c3f79d998636aa421df" translate="yes" xml:space="preserve">
          <source>This method detects whether a session was started during one of the previous requests from the same user agent. Session identifiers are normally passed along using cookies and hence a typical implementation checks whether the session cookie is on the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c08ad6c97862af801fd242f2741b43b595526e" translate="yes" xml:space="preserve">
          <source>This method does not determine whether access is granted to the entity itself, only the specific field. Callers are responsible for ensuring that entity access is also respected, for example by using &lt;a href=&quot;../../../core-lib-drupal-core-entity-entityaccesscontrolhandlerinterface.php/function/entityaccesscontrolhandlerinterface-access/8.1.x&quot;&gt;\Drupal\Core\Entity\EntityAccessControlHandlerInterface::access&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471fe8ac3db2f141f52f9ad147ee60cd188004fd" translate="yes" xml:space="preserve">
          <source>This method does not determine whether access is granted to the entity itself, only the specific field. Callers are responsible for ensuring that entity access is also respected, for example by using &lt;a href=&quot;../entityaccesscontrolhandlerinterface-access/8.1.x&quot;&gt;\Drupal\Core\Entity\EntityAccessControlHandlerInterface::access&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51aa0b76f8dc0ebbf6a775356e042ae8b569fc3" translate="yes" xml:space="preserve">
          <source>This method does not return anything, but simply prepares data to be retrieved via __toString() and arguments().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08cff129bede0ea7c59b5b7b25e122bae8def46" translate="yes" xml:space="preserve">
          <source>This method does not return the aliases set for the passed fields. In the majority of cases that is not a problem, as the alias will be the field name. However, if you do need to know the alias you can call getFields() and examine the result to determine what alias was created. Alternatively, simply use addField() for the few fields you care about and this method for the rest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2b424f5fba8e935c43b1d5aca1d55fc16f7fb8" translate="yes" xml:space="preserve">
          <source>This method does not stop logging, it simply clears the log. To stop logging, use the &lt;a href=&quot;http://php.net/end&quot;&gt;end&lt;/a&gt;() method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e35148dee25a6abd981e72ae5ed14333112f92b" translate="yes" xml:space="preserve">
          <source>This method does the &quot;hard&quot; work of queuing up a table to be joined against. In some cases, that may include dipping into the Schema API to find the necessary fields on which to join.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7792331e88dacbe174ad65df8fbc35293b42c1" translate="yes" xml:space="preserve">
          <source>This method ensures that the string is pluralized correctly. As opposed to the __construct() method, this method is designed to be invoked with a string already translated (such as with configuration translation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c22f198bd24f07249b5742be1248d8a6ab14ba" translate="yes" xml:space="preserve">
          <source>This method escapes HTML for sanitization purposes by replacing the following special characters with their HTML entity equivalents:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499f00a5ef00273fdace1b1c49fecdd6511fb834" translate="yes" xml:space="preserve">
          <source>This method exists in order to allow performance optimizations. It allows pre-loading serialized routes that may latter be retrieved using ::getRoutesByName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="433887280c6e63b0dd5da810caf22687c7e0433e" translate="yes" xml:space="preserve">
          <source>This method exists in order to allow performance optimizations. The simple implementation could be to just repeatedly call $this-&amp;gt;getRouteByName() while catching and ignoring eventual exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c446aa4789354ecd6255b41584ccf1760366d8d" translate="yes" xml:space="preserve">
          <source>This method exists so that it is easy to replace this functionality in a class that extends this one. For example, it could be used to make the scan recursive.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
