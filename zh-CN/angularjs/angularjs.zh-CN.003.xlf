<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="angularjs">
    <body>
      <group id="angularjs">
        <trans-unit id="78347206801a061c0decedac37c91767431b4537" translate="yes" xml:space="preserve">
          <source>Complex Models (objects or collections)</source>
          <target state="translated">复杂模型(对象或集合)</target>
        </trans-unit>
        <trans-unit id="c92c529e0731c57efd7550480196484040b33c3e" translate="yes" xml:space="preserve">
          <source>Component</source>
          <target state="translated">Component</target>
        </trans-unit>
        <trans-unit id="a85196f04b4052b5f8e757116e9ed52d626cea29" translate="yes" xml:space="preserve">
          <source>Component definition object (a simplified &lt;a href=&quot;../service/%24compile#directive-definition-object.html&quot;&gt;directive definition object&lt;/a&gt;)</source>
          <target state="translated">组件定义对象（简化的&lt;a href=&quot;../service/%24compile#directive-definition-object.html&quot;&gt;指令定义对象&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="52b1bdba92bb54788ab2cdeee061c0e16d336346" translate="yes" xml:space="preserve">
          <source>Component definition object (a simplified &lt;a href=&quot;../service/%24compile#directive-definition-object.html&quot;&gt;directive definition object&lt;/a&gt;), with the following properties (all optional):</source>
          <target state="translated">组件定义对象（简化的&lt;a href=&quot;../service/%24compile#directive-definition-object.html&quot;&gt;指令定义对象&lt;/a&gt;），具有以下属性（所有可选）：</target>
        </trans-unit>
        <trans-unit id="77dc9cfc7cb3b52a950028db1a5820bbb36a0ff5" translate="yes" xml:space="preserve">
          <source>Component definitions are very simple and do not require as much configuration as defining general directives. Component definitions usually consist only of a template and a controller backing it.</source>
          <target state="translated">组件的定义非常简单,不需要像定义一般指令那样进行大量的配置。组件定义通常只由一个模板和一个控制器支持组成。</target>
        </trans-unit>
        <trans-unit id="4fe71f615894962f769e3b09ee4b063dd3104c07" translate="yes" xml:space="preserve">
          <source>Component-based application architecture</source>
          <target state="translated">基于组件的应用架构</target>
        </trans-unit>
        <trans-unit id="412108d00dc3d78512b7f514b082a1dc5a2a25c0" translate="yes" xml:space="preserve">
          <source>ComponentInstruction</source>
          <target state="translated">ComponentInstruction</target>
        </trans-unit>
        <trans-unit id="9289473eeedaee09d76c8cf1b6994d8550debf46" translate="yes" xml:space="preserve">
          <source>Components</source>
          <target state="translated">Components</target>
        </trans-unit>
        <trans-unit id="052de9b4663f1da6b0dad6763f0e84f04970f1d5" translate="yes" xml:space="preserve">
          <source>Components are also useful as route templates (e.g. when using &lt;a href=&quot;../api/ngroute&quot;&gt;ngRoute&lt;/a&gt;). In a component-based application, every view is a component:</source>
          <target state="translated">组件也可用作路由模板（例如，使用&lt;a href=&quot;../api/ngroute&quot;&gt;ngRoute时&lt;/a&gt;）。在基于组件的应用程序中，每个视图都是一个组件：</target>
        </trans-unit>
        <trans-unit id="8baa065a5cba8d6c52c78a61ff9c9163ba5e3d7e" translate="yes" xml:space="preserve">
          <source>Components as route templates</source>
          <target state="translated">作为路线模板的组件</target>
        </trans-unit>
        <trans-unit id="bf44683e2124b402afd1667eddfc51003f631e51" translate="yes" xml:space="preserve">
          <source>Components can be registered using the &lt;a href=&quot;../api/ng/provider/%24compileprovider#component.html&quot;&gt;&lt;code&gt;.component()&lt;/code&gt;&lt;/a&gt; method of an AngularJS module (returned by &lt;a href=&quot;module&quot;&gt;&lt;code&gt;angular.module()&lt;/code&gt;&lt;/a&gt;). The method takes two arguments:</source>
          <target state="translated">可以使用AngularJS模块的&lt;a href=&quot;module&quot;&gt; &lt;code&gt;angular.module()&lt;/code&gt; &lt;/a&gt;方法注册&lt;a href=&quot;../api/ng/provider/%24compileprovider#component.html&quot;&gt; &lt;code&gt;.component()&lt;/code&gt; &lt;/a&gt;由angular.module（）返回）。该方法有两个参数：</target>
        </trans-unit>
        <trans-unit id="1ede4134b45566bbb53a326a5ba30ed2337d4b16" translate="yes" xml:space="preserve">
          <source>Components that have their dependencies injected allow them to be easily mocked on a test by test basis, without having to mess with any global variables that could inadvertently affect another test.</source>
          <target state="translated">注入了依赖关系的组件可以让它们很容易地在测试的基础上被嘲弄,而不必弄乱任何全局变量,以免无意中影响另一个测试。</target>
        </trans-unit>
        <trans-unit id="db2bb3f2d36cc8fea7cbf33806f6b7360ab29060" translate="yes" xml:space="preserve">
          <source>Comprehensive Directive API</source>
          <target state="translated">综合指令API</target>
        </trans-unit>
        <trans-unit id="c05bafdb56031bb64da1f1d1861f60118932c605" translate="yes" xml:space="preserve">
          <source>Concept</source>
          <target state="translated">Concept</target>
        </trans-unit>
        <trans-unit id="cc8d5c03c91b4ff4e34ca056bb24f3fb67fdffdd" translate="yes" xml:space="preserve">
          <source>Conceptual Overview</source>
          <target state="translated">概念性概述</target>
        </trans-unit>
        <trans-unit id="e39262defe80a83fac1b793497417432c8b1a879" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
          <target state="translated">Conclusion</target>
        </trans-unit>
        <trans-unit id="71c2b150a06049925dc940ff0b7ba9b28de4537b" translate="yes" xml:space="preserve">
          <source>Configure $http service to combine processing of multiple http responses received at around the same time via &lt;a href=&quot;../type/%24rootscope.scope#%24applyAsync.html&quot;&gt;$rootScope.$applyAsync&lt;/a&gt;. This can result in significant performance improvement for bigger applications that make many HTTP requests concurrently (common during application bootstrap).</source>
          <target state="translated">配置$ http服务以合并对通过&lt;a href=&quot;../type/%24rootscope.scope#%24applyAsync.html&quot;&gt;$ rootScope。$ applyAsync几乎&lt;/a&gt;同时接收到的多个http响应的处理。对于可以同时发出许多HTTP请求的较大应用程序，这可以显着提高性能（在应用程序引导期间很常见）。</target>
        </trans-unit>
        <trans-unit id="7896d76d615866e43aa8573a41f4d68ecbe909a3" translate="yes" xml:space="preserve">
          <source>Configure $parse service to add literal values that will be present as literal at expressions.</source>
          <target state="translated">配置$parse服务,以添加将在表达式中作为文字值出现的文字值。</target>
        </trans-unit>
        <trans-unit id="401014f049aff69ca01aa4c69560adc72e65a93d" translate="yes" xml:space="preserve">
          <source>Configure several aspects of error handling in AngularJS if used as a setter or return the current configuration if used as a getter. The following options are supported:</source>
          <target state="translated">如果作为setter使用,则配置AngularJS中错误处理的几个方面;如果作为getter使用,则返回当前配置。支持以下选项。</target>
        </trans-unit>
        <trans-unit id="7ed62ca7d00be1bd9be3f6f28effdd940c0a125d" translate="yes" xml:space="preserve">
          <source>Configures the mock implementation of &lt;a href=&quot;../../ng/service/%24exceptionhandler&quot;&gt;&lt;code&gt;$exceptionHandler&lt;/code&gt;&lt;/a&gt; to rethrow or to log errors passed to the &lt;code&gt;$exceptionHandler&lt;/code&gt;.</source>
          <target state="translated">将&lt;a href=&quot;../../ng/service/%24exceptionhandler&quot;&gt; &lt;code&gt;$exceptionHandler&lt;/code&gt; &lt;/a&gt;的模拟实现配置为重新抛出或记录传递给 &lt;code&gt;$exceptionHandler&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="fa7b44a578c9b66e6eac734e95b3a649678bb56b" translate="yes" xml:space="preserve">
          <source>Configures the mock implementation of &lt;a href=&quot;../ng/service/%24exceptionhandler&quot;&gt;&lt;code&gt;$exceptionHandler&lt;/code&gt;&lt;/a&gt; to rethrow or to log errors passed to the &lt;code&gt;$exceptionHandler&lt;/code&gt;.</source>
          <target state="translated">将&lt;a href=&quot;../ng/service/%24exceptionhandler&quot;&gt; &lt;code&gt;$exceptionHandler&lt;/code&gt; &lt;/a&gt;的模拟实现配置为重新抛出或记录传递给 &lt;code&gt;$exceptionHandler&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="ab33277d4bc70753dadfe4b4b47939a3bafacc65" translate="yes" xml:space="preserve">
          <source>Configures the mock implementation of &lt;a href=&quot;ng/service/%24exceptionhandler&quot;&gt;&lt;code&gt;$exceptionHandler&lt;/code&gt;&lt;/a&gt; to rethrow or to log errors passed to the &lt;code&gt;$exceptionHandler&lt;/code&gt;.</source>
          <target state="translated">将&lt;a href=&quot;ng/service/%24exceptionhandler&quot;&gt; &lt;code&gt;$exceptionHandler&lt;/code&gt; &lt;/a&gt;的模拟实现配置为重新抛出或记录传递给 &lt;code&gt;$exceptionHandler&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="ef688c3bf06b49c7583d5229b5b135310e872abe" translate="yes" xml:space="preserve">
          <source>Configuring ngPluralize</source>
          <target state="translated">配置ngPluralize</target>
        </trans-unit>
        <trans-unit id="25493fa5f58d0b23af0328cbcc8d72f1b7096ef8" translate="yes" xml:space="preserve">
          <source>Configuring ngPluralize with offset</source>
          <target state="translated">用偏移配置ngPluralize</target>
        </trans-unit>
        <trans-unit id="614cb97d5550e6a973dc4d4e5e71bacf0e254a0a" translate="yes" xml:space="preserve">
          <source>Connecting to the scope</source>
          <target state="translated">连接到范围</target>
        </trans-unit>
        <trans-unit id="bd1ca2146ad14cf9d26b89eef58c53c8846544f1" translate="yes" xml:space="preserve">
          <source>Consider a base href set as follows: &lt;code&gt;&amp;lt;base href=&quot;/base/&quot;&amp;gt;&lt;/code&gt; (i.e. the application exists in the &quot;folder&quot; called &lt;code&gt;/base&lt;/code&gt;). The URL &lt;code&gt;/base&lt;/code&gt; is actually outside the application (it refers to the &lt;code&gt;base&lt;/code&gt; file found in the root &lt;code&gt;/&lt;/code&gt; folder).</source>
          <target state="translated">考虑如下的基本href集： &lt;code&gt;&amp;lt;base href=&quot;/base/&quot;&amp;gt;&lt;/code&gt; （即，该应用程序存在于名为 &lt;code&gt;/base&lt;/code&gt; 的&amp;ldquo;文件夹&amp;rdquo;中）。 URL &lt;code&gt;/base&lt;/code&gt; 实际上在应用程序外部（它是指在根目录 &lt;code&gt;/&lt;/code&gt; 文件夹中找到的 &lt;code&gt;base&lt;/code&gt; 文件）。</target>
        </trans-unit>
        <trans-unit id="b75dc57f6ba4e3ce850116dfdcb6fffec204312d" translate="yes" xml:space="preserve">
          <source>Consider a text input with an autocomplete list (for fruit), where the items are objects with a name and an id. A user enters &lt;code&gt;ap&lt;/code&gt; and then selects &lt;code&gt;Apricot&lt;/code&gt; from the list. Based on this, the autocomplete widget will call &lt;code&gt;$setViewValue({name: 'Apricot', id: 443})&lt;/code&gt;, but the rendered value will still be &lt;code&gt;ap&lt;/code&gt;. The widget can then call &lt;code&gt;ctrl.$processModelValue()&lt;/code&gt; to run the model -&amp;gt; view pipeline again, which formats the object to the string &lt;code&gt;Apricot&lt;/code&gt;, then updates the &lt;code&gt;$viewValue&lt;/code&gt;, and finally renders it in the DOM.</source>
          <target state="translated">考虑带有自动完成列表（用于水果）的文本输入，其中的项目是具有名称和ID的对象。用户输入 &lt;code&gt;ap&lt;/code&gt; ，然后从列表中选择&amp;ldquo; &lt;code&gt;Apricot&lt;/code&gt; &amp;rdquo;。基于此，自动完成窗口小部件将调用 &lt;code&gt;$setViewValue({name: 'Apricot', id: 443})&lt;/code&gt; ，但是呈现的值仍为 &lt;code&gt;ap&lt;/code&gt; 。然后，小部件可以调用 &lt;code&gt;ctrl.$processModelValue()&lt;/code&gt; 再次运行模型-&amp;gt;视图管道，该管道将对象格式化为字符串 &lt;code&gt;Apricot&lt;/code&gt; ，然后更新 &lt;code&gt;$viewValue&lt;/code&gt; ，最后将其呈现在DOM中。</target>
        </trans-unit>
        <trans-unit id="a18df99124cdd530d7ee713a96afbde420b4e68f" translate="yes" xml:space="preserve">
          <source>Consider the following example, which illustrates a typical use case of &lt;code&gt;ngMessages&lt;/code&gt;. Within the form &lt;code&gt;myForm&lt;/code&gt; we have a text input named &lt;code&gt;myField&lt;/code&gt; which is bound to the scope variable &lt;code&gt;field&lt;/code&gt; using the &lt;a href=&quot;ng/directive/ngmodel&quot;&gt;ngModel&lt;/a&gt; directive.</source>
          <target state="translated">考虑以下示例，该示例说明了 &lt;code&gt;ngMessages&lt;/code&gt; 的典型用例。在 &lt;code&gt;myForm&lt;/code&gt; 表单中，我们有一个名为 &lt;code&gt;myField&lt;/code&gt; 的文本输入，它使用&lt;a href=&quot;ng/directive/ngmodel&quot;&gt;ngModel&lt;/a&gt;指令绑定到范围变量 &lt;code&gt;field&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="067758acc9cf591a779af4e3d644186dd0af02ba" translate="yes" xml:space="preserve">
          <source>Consider this module, which includes a &lt;code&gt;willBreak&lt;/code&gt; service that uses implicit DI:</source>
          <target state="translated">考虑以下模块，该模块包括使用隐式DI 的 &lt;code&gt;willBreak&lt;/code&gt; 服务：</target>
        </trans-unit>
        <trans-unit id="8067f2d7407363afa44d0fb08f79e6b26296396e" translate="yes" xml:space="preserve">
          <source>Consider using &lt;a href=&quot;../api/ng/directive/ngcsp&quot;&gt;CSP&lt;/a&gt; (but don't rely only on CSP)</source>
          <target state="translated">考虑使用&lt;a href=&quot;../api/ng/directive/ngcsp&quot;&gt;CSP&lt;/a&gt;（但不仅仅依赖CSP）</target>
        </trans-unit>
        <trans-unit id="733fd2b4c4e1bca4c7d0e3c2e1c341bcd1d34269" translate="yes" xml:space="preserve">
          <source>Constant</source>
          <target state="translated">Constant</target>
        </trans-unit>
        <trans-unit id="d694aced80a769dd56d5ff19d56f4662c3bdd367" translate="yes" xml:space="preserve">
          <source>Constant Recipe</source>
          <target state="translated">恒定配方</target>
        </trans-unit>
        <trans-unit id="baf6a951c27a9234a81559df8b9c866456740fa7" translate="yes" xml:space="preserve">
          <source>Constant value.</source>
          <target state="translated">定值:</target>
        </trans-unit>
        <trans-unit id="b99e72117469b9970f18ba5d75fe3d0de1866186" translate="yes" xml:space="preserve">
          <source>Constant, message, exception or an object representing the rejection reason.</source>
          <target state="translated">常量、消息、异常或代表拒绝原因的对象。</target>
        </trans-unit>
        <trans-unit id="64d5e2c2aff5afc784db4e0bcb2cdc6862d0f0f0" translate="yes" xml:space="preserve">
          <source>Construction function for creating new instance of the service.</source>
          <target state="translated">用于创建新的服务实例的构造函数。</target>
        </trans-unit>
        <trans-unit id="e4b290eee7ee9eca877a7e01bf49e3ec181e017e" translate="yes" xml:space="preserve">
          <source>Content Security Policy</source>
          <target state="translated">内容安全政策</target>
        </trans-unit>
        <trans-unit id="cc11b3a28fa30ae6d3d3ad1438824cbd5224ba5c" translate="yes" xml:space="preserve">
          <source>Context</source>
          <target state="translated">Context</target>
        </trans-unit>
        <trans-unit id="802338f12e55179b2d6cd860935bf05175261d07" translate="yes" xml:space="preserve">
          <source>Context which &lt;code&gt;fn&lt;/code&gt; should be evaluated in.</source>
          <target state="translated">应该在其中评估 &lt;code&gt;fn&lt;/code&gt; 的上下文。</target>
        </trans-unit>
        <trans-unit id="18b017e5b4b89d6ff684844a26fb098545f160cf" translate="yes" xml:space="preserve">
          <source>Contribute</source>
          <target state="translated">Contribute</target>
        </trans-unit>
        <trans-unit id="4e9871e0a8defabedbf3524a3226fa9d74385b59" translate="yes" xml:space="preserve">
          <source>Contributing to AngularJS</source>
          <target state="translated">对AngularJS的贡献</target>
        </trans-unit>
        <trans-unit id="86cf9b9a051872b3598a096da04f48dd25d0af73" translate="yes" xml:space="preserve">
          <source>Control of the AngularJS templates makes applications vulnerable even if there was a completely secure sandbox:</source>
          <target state="translated">对AngularJS模板的控制,即使有一个完全安全的沙盒,也会让应用变得脆弱。</target>
        </trans-unit>
        <trans-unit id="a36a5ffa6e0dcfb64fac1b2b3d6fb176de9689de" translate="yes" xml:space="preserve">
          <source>Controller</source>
          <target state="translated">Controller</target>
        </trans-unit>
        <trans-unit id="99ffd59ebbf0e37afa0e0d929b94eba513e392bc" translate="yes" xml:space="preserve">
          <source>Controller &amp;mdash; The &lt;code&gt;ngController&lt;/code&gt; directive specifies a Controller class; the class contains business logic behind the application to decorate the scope with functions and values</source>
          <target state="translated">Controller &amp;mdash; &lt;code&gt;ngController&lt;/code&gt; 指令指定一个Controller类；该类包含应用程序背后的业务逻辑，以使用功能和值来装饰范围</target>
        </trans-unit>
        <trans-unit id="ccb3847c75d985adc6744eb79ac9c9cee18abe79" translate="yes" xml:space="preserve">
          <source>Controller constructor fn (optionally decorated with DI annotations in the array notation).</source>
          <target state="translated">控制器构造函数fn(可选择在数组符号中用DI注释装饰)。</target>
        </trans-unit>
        <trans-unit id="c27dec249f237841f7387d65d26a7c0ce88c6c18" translate="yes" xml:space="preserve">
          <source>Controller constructor function.</source>
          <target state="translated">控制器构造函数。</target>
        </trans-unit>
        <trans-unit id="9d19a84c7ff095475b0ae33d1170893261391e4f" translate="yes" xml:space="preserve">
          <source>Controller constructor function. The controller is instantiated before the pre-linking phase and can be accessed by other directives (see &lt;code&gt;require&lt;/code&gt; attribute). This allows the directives to communicate with each other and augment each other's behavior. The controller is injectable (and supports bracket notation) with the following locals:</source>
          <target state="translated">控制器构造函数。控制器在预链接阶段之前实例化，并且可以由其他指令访问（请参阅 &lt;code&gt;require&lt;/code&gt; 属性）。这使指令可以相互通信并增强彼此的行为。控制器可通过以下本地注入（并支持括号表示法）：</target>
        </trans-unit>
        <trans-unit id="a9aaeb41d0885b4404238f900eeab9f49522f6e5" translate="yes" xml:space="preserve">
          <source>Controller methods can also take arguments, as demonstrated in the following variation of the previous example.</source>
          <target state="translated">控制器方法也可以接受参数,就像下面这个例子的变化一样。</target>
        </trans-unit>
        <trans-unit id="e71925aefd89c1562fed9afbd32f746da1e7c9c5" translate="yes" xml:space="preserve">
          <source>Controller methods can be created through direct assignment to scope (see the &lt;code&gt;chiliSpicy&lt;/code&gt; method)</source>
          <target state="translated">可以通过直接分配作用域来创建控制器方法（请参阅 &lt;code&gt;chiliSpicy&lt;/code&gt; 方法）</target>
        </trans-unit>
        <trans-unit id="abab164d91275a7c27f69b9901af5a808932f134" translate="yes" xml:space="preserve">
          <source>Controller name to check.</source>
          <target state="translated">要检查的控制器名称。</target>
        </trans-unit>
        <trans-unit id="d164658172a7f4d47214d163beff14e7b08173e9" translate="yes" xml:space="preserve">
          <source>Controller name, or an object map of controllers where the keys are the names and the values are the constructors.</source>
          <target state="translated">控制器名称,或控制器的对象图,其中键是名称,值是构造函数。</target>
        </trans-unit>
        <trans-unit id="fd28161568c4e8e181bf8b34d2eb64190067fd07" translate="yes" xml:space="preserve">
          <source>Controllers</source>
          <target state="translated">Controllers</target>
        </trans-unit>
        <trans-unit id="fbc681066b21fc1c3641cf2f3c220b9b2bb08d7e" translate="yes" xml:space="preserve">
          <source>Controllers and Scopes</source>
          <target state="translated">控制器和范围</target>
        </trans-unit>
        <trans-unit id="911140cd3f21770764dea61bf3752956262c1067" translate="yes" xml:space="preserve">
          <source>Controllers are &quot;classes&quot; or &quot;constructor functions&quot; that are responsible for providing the application behavior that supports the declarative markup in the template. The recommended way of declaring Controllers is using the array notation:</source>
          <target state="translated">Controllers是 &quot;类 &quot;或 &quot;构造函数&quot;,负责提供支持模板中声明性标记的应用行为。推荐使用数组符号来声明Controller的方式。</target>
        </trans-unit>
        <trans-unit id="5b5d98f528a42620b2cc0825785014474de8791d" translate="yes" xml:space="preserve">
          <source>Controllers can be attached to the DOM in different ways. For each of them, AngularJS will instantiate a new Controller object, using the specified Controller's &lt;strong&gt;constructor function&lt;/strong&gt;:</source>
          <target state="translated">控制器可以通过不同的方式连接到DOM。对于每一个，AngularJS将使用指定的Controller的&lt;strong&gt;构造函数&lt;/strong&gt;实例化一个新的Controller对象：</target>
        </trans-unit>
        <trans-unit id="1c6d830a012a42e0e3e98e8d7391642d69b5f9c0" translate="yes" xml:space="preserve">
          <source>Controllers define methods (behavior) that can mutate the model (properties on the scope).</source>
          <target state="translated">控制器定义了可以突变模型(范围上的属性)的方法(行为)。</target>
        </trans-unit>
        <trans-unit id="70c782bc574579d2517b6cec8967686212a0d454" translate="yes" xml:space="preserve">
          <source>Controllers may register &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watch.html&quot;&gt;watches&lt;/a&gt; on the model. These watches execute immediately after the controller behavior executes.</source>
          <target state="translated">控制器可以在模型上注册&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watch.html&quot;&gt;手表&lt;/a&gt;。这些监视将在执行控制器行为后立即执行。</target>
        </trans-unit>
        <trans-unit id="058997bd1ff2c8ff837142c06062cc669ac555e1" translate="yes" xml:space="preserve">
          <source>Controllers use scopes to expose controller methods to templates (see &lt;a href=&quot;../api/ng/directive/ngcontroller&quot;&gt;ng-controller&lt;/a&gt;).</source>
          <target state="translated">控制器使用范围将控制器方法公开给模板（请参阅&lt;a href=&quot;../api/ng/directive/ngcontroller&quot;&gt;ng-controller&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7dd94c9d2ce116f0c4c53ed1b007067b7b712d4c" translate="yes" xml:space="preserve">
          <source>Controls (&lt;code&gt;input&lt;/code&gt;, &lt;code&gt;select&lt;/code&gt;, &lt;code&gt;textarea&lt;/code&gt;) are ways for a user to enter data. A Form is a collection of controls for the purpose of grouping related controls together.</source>
          <target state="translated">控件（ &lt;code&gt;input&lt;/code&gt; ， &lt;code&gt;select&lt;/code&gt; ， &lt;code&gt;textarea&lt;/code&gt; ）是用户输入数据的方式。表单是控件的集合，用于将相关控件分组在一起。</target>
        </trans-unit>
        <trans-unit id="e170fcf2efd35c14b97e47909e1264edfdda6632" translate="yes" xml:space="preserve">
          <source>Convert the &lt;code&gt;:&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, or &lt;code&gt;_&lt;/code&gt;-delimited name to &lt;code&gt;camelCase&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;:&lt;/code&gt; ， &lt;code&gt;-&lt;/code&gt; 或 &lt;code&gt;_&lt;/code&gt; 分隔的名称转换为 &lt;code&gt;camelCase&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="933184608bdac4f3c6c004f83098137beaa3d86f" translate="yes" xml:space="preserve">
          <source>Converts AngularJS &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt; into a function.</source>
          <target state="translated">将AngularJS &lt;a href=&quot;../../../guide/expression&quot;&gt;表达式&lt;/a&gt;转换为函数。</target>
        </trans-unit>
        <trans-unit id="2eea8ad796d2916c4ebaeca90af5bde7b4d8a77a" translate="yes" xml:space="preserve">
          <source>Converts AngularJS &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt; into a function. This is like &lt;a href=&quot;%24parse&quot;&gt;$parse&lt;/a&gt; and is identical when the expression is a literal constant. Otherwise, it wraps the expression in a call to &lt;a href=&quot;%24sce#getTrusted.html&quot;&gt;$sce.getTrusted(&lt;em&gt;type&lt;/em&gt;, &lt;em&gt;result&lt;/em&gt;)&lt;/a&gt;</source>
          <target state="translated">将AngularJS &lt;a href=&quot;../../../guide/expression&quot;&gt;表达式&lt;/a&gt;转换为函数。就像&lt;a href=&quot;%24parse&quot;&gt;$ parse&lt;/a&gt;一样，当表达式是文字常量时也相同。否则，它将表达式包装在对&lt;a href=&quot;%24sce#getTrusted.html&quot;&gt;$ sce.getTrusted（&lt;/a&gt;&lt;em&gt;type&lt;/em&gt;，&lt;em&gt;result&lt;/em&gt;）的调用中&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f52436d3294322d69775a94b63db34d958c64e34" translate="yes" xml:space="preserve">
          <source>Converts AngularJS &lt;a href=&quot;../../guide/expression&quot;&gt;expression&lt;/a&gt; into a function.</source>
          <target state="translated">将AngularJS &lt;a href=&quot;../../guide/expression&quot;&gt;表达式&lt;/a&gt;转换为函数。</target>
        </trans-unit>
        <trans-unit id="241b70e1e8de1ff6cda970c4d284ff5a349664ae" translate="yes" xml:space="preserve">
          <source>Converts an attribute name (e.g. dash/colon/underscore-delimited string, optionally prefixed with &lt;code&gt;x-&lt;/code&gt; or &lt;code&gt;data-&lt;/code&gt;) to its normalized, camelCase form.</source>
          <target state="translated">将属性名称（例如，破折号/冒号/下划线分隔的字符串，可选以 &lt;code&gt;x-&lt;/code&gt; 或 &lt;code&gt;data-&lt;/code&gt; 前缀）转换为其规范化的camelCase形式。</target>
        </trans-unit>
        <trans-unit id="0849392d519f4aa3fac0a65873ae6d050016e1fe" translate="yes" xml:space="preserve">
          <source>Converts string to lowercase.</source>
          <target state="translated">将字符串转换为小写。</target>
        </trans-unit>
        <trans-unit id="b79ed60a960e0da09dfacee4601fd97afa217eb9" translate="yes" xml:space="preserve">
          <source>Converts string to uppercase.</source>
          <target state="translated">将字符串转换为大写字母。</target>
        </trans-unit>
        <trans-unit id="c872753511d558c4ce512746cf585786dd025a3c" translate="yes" xml:space="preserve">
          <source>Core Concepts</source>
          <target state="translated">核心概念</target>
        </trans-unit>
        <trans-unit id="2e84aab6976a7309d079e90c2b70df72a431d11c" translate="yes" xml:space="preserve">
          <source>Counts all the direct and indirect child scopes of the current scope.</source>
          <target state="translated">计算当前作用域的所有直接和间接子作用域。</target>
        </trans-unit>
        <trans-unit id="443961121af9afe27d68ec052ba843a27eaf31a0" translate="yes" xml:space="preserve">
          <source>Counts all the watchers of direct and indirect child scopes of the current scope.</source>
          <target state="translated">统计当前作用域的直接和间接子作用域的所有监视者。</target>
        </trans-unit>
        <trans-unit id="a16536d78dc34897436003938234d72482a1d526" translate="yes" xml:space="preserve">
          <source>Courses</source>
          <target state="translated">Courses</target>
        </trans-unit>
        <trans-unit id="389e36945902ac4da978f24ea80f3d5bbd64c891" translate="yes" xml:space="preserve">
          <source>Crawling your app</source>
          <target state="translated">抓取您的应用程序</target>
        </trans-unit>
        <trans-unit id="45608ebdcb44d27d42f32d60acd39e85de71b39c" translate="yes" xml:space="preserve">
          <source>Create a new injector that can provide components defined in our &lt;code&gt;myModule&lt;/code&gt; module and request our &lt;code&gt;greeter&lt;/code&gt; service from the injector. (This is usually done automatically by AngularJS bootstrap).</source>
          <target state="translated">创建一个新的注射器，该注射器可以提供在 &lt;code&gt;myModule&lt;/code&gt; 模块中定义的组件， &lt;code&gt;greeter&lt;/code&gt; 注射器请求我们的问候服务。（这通常由AngularJS引导程序自动完成）。</target>
        </trans-unit>
        <trans-unit id="971013bc0a9711b010a8dd9b707cb3697b7f4d5f" translate="yes" xml:space="preserve">
          <source>Create a new instance of JS type. The method takes a constructor function, invokes the new operator, and supplies all of the arguments to the constructor function as specified by the constructor annotation.</source>
          <target state="translated">创建一个JS类型的新实例。该方法接受一个构造函数,调用new操作符,并提供构造函数的所有参数,由构造函数注解指定。</target>
        </trans-unit>
        <trans-unit id="9cc6657b1652167630bc2a55c743f36c28dcc171" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Deferred&lt;/code&gt; object which represents a task which will finish in the future.</source>
          <target state="translated">创建一个 &lt;code&gt;Deferred&lt;/code&gt; 对象，该对象表示将在将来完成的任务。</target>
        </trans-unit>
        <trans-unit id="d11bba0687af96cbd2d8bb53eeba0343f2e22377" translate="yes" xml:space="preserve">
          <source>Creates a deep copy of &lt;code&gt;source&lt;/code&gt;, which should be an object or an array. This functions is used internally, mostly in the change-detection code. It is not intended as an all-purpose copy function, and has several limitations (see below).</source>
          <target state="translated">创建 &lt;code&gt;source&lt;/code&gt; 的深层副本，该副本应该是对象或数组。此函数在内部使用，主要在更改检测代码中使用。它不打算用作通用复制功能，并且有一些限制（请参阅下文）。</target>
        </trans-unit>
        <trans-unit id="afa1484b840a9ffabd1ceb69c929659784229740" translate="yes" xml:space="preserve">
          <source>Creates a new array or string containing only a specified number of elements. The elements are taken from either the beginning or the end of the source array, string or number, as specified by the value and sign (positive or negative) of &lt;code&gt;limit&lt;/code&gt;. Other array-like objects are also supported (e.g. array subclasses, NodeLists, jqLite/jQuery collections etc). If a number is used as input, it is converted to a string.</source>
          <target state="translated">创建仅包含指定数量的元素的新数组或字符串。元素从源数组，字符串或数字的开头或结尾开始，由 &lt;code&gt;limit&lt;/code&gt; 的值和符号（正或负）指定。还支持其他类似数组的对象（例如，数组子类，NodeList，jqLit​​e / jQuery集合等）。如果将数字用作输入，则会将其转换为字符串。</target>
        </trans-unit>
        <trans-unit id="be3c2e6c2da6bbf270113921436fdebc0aadccf9" translate="yes" xml:space="preserve">
          <source>Creates a new backend definition for DELETE requests. For more info see &lt;code&gt;when()&lt;/code&gt;.</source>
          <target state="translated">为DELETE请求创建一个新的后端定义。有关更多信息，请参见 &lt;code&gt;when()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e535501af031225c35fb51be3e57cd8b30dbbd81" translate="yes" xml:space="preserve">
          <source>Creates a new backend definition for GET requests. For more info see &lt;code&gt;when()&lt;/code&gt;.</source>
          <target state="translated">为GET请求创建一个新的后端定义。有关更多信息，请参见 &lt;code&gt;when()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="356cc2f1fc79ace6115ff3114750774f5192302f" translate="yes" xml:space="preserve">
          <source>Creates a new backend definition for HEAD requests. For more info see &lt;code&gt;when()&lt;/code&gt;.</source>
          <target state="translated">为HEAD请求创建一个新的后端定义。有关更多信息，请参见 &lt;code&gt;when()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="049cbbc849e59668c71cc30e7a114207708c87cf" translate="yes" xml:space="preserve">
          <source>Creates a new backend definition for JSONP requests. For more info see &lt;code&gt;when()&lt;/code&gt;.</source>
          <target state="translated">为JSONP请求创建新的后端定义。有关更多信息，请参见 &lt;code&gt;when()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a1e3e71e874615b87146e6893453eeadfaf6659" translate="yes" xml:space="preserve">
          <source>Creates a new backend definition for PATCH requests. For more info see &lt;code&gt;when()&lt;/code&gt;.</source>
          <target state="translated">为PATCH请求创建一个新的后端定义。有关更多信息，请参见 &lt;code&gt;when()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eda4d8b9cd6e902637dd9ad1e48fec7c8bb7cd5c" translate="yes" xml:space="preserve">
          <source>Creates a new backend definition for POST requests. For more info see &lt;code&gt;when()&lt;/code&gt;.</source>
          <target state="translated">为POST请求创建一个新的后端定义。有关更多信息，请参见 &lt;code&gt;when()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25a82e38306940d53cc0431c2027b19ad9784508" translate="yes" xml:space="preserve">
          <source>Creates a new backend definition for PUT requests. For more info see &lt;code&gt;when()&lt;/code&gt;.</source>
          <target state="translated">为PUT请求创建一个新的后端定义。有关更多信息，请参见 &lt;code&gt;when()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15f03f22d3c9680dc729ef2ccf8e1606ba4e48fa" translate="yes" xml:space="preserve">
          <source>Creates a new backend definition that compares only with the requested route.</source>
          <target state="translated">创建一个新的后端定义,该定义只与申请的途径进行比较。</target>
        </trans-unit>
        <trans-unit id="f48cdf8dae7db1d48c0c6ef4dea9caf8360e67d3" translate="yes" xml:space="preserve">
          <source>Creates a new backend definition.</source>
          <target state="translated">创建一个新的后台定义。</target>
        </trans-unit>
        <trans-unit id="e4122c824ad9684d95a45783de97719b5e6982d9" translate="yes" xml:space="preserve">
          <source>Creates a new child &lt;a href=&quot;%24rootscope.scope&quot;&gt;scope&lt;/a&gt;.</source>
          <target state="translated">创建一个新的子&lt;a href=&quot;%24rootscope.scope&quot;&gt;范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="de053e738e592f1089fb9a006cc3b78b9a9bb916" translate="yes" xml:space="preserve">
          <source>Creates a new request expectation for DELETE requests. For more info see &lt;code&gt;expect()&lt;/code&gt;.</source>
          <target state="translated">为DELETE请求创建一个新的请求期望。有关更多信息，请参见 &lt;code&gt;expect()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e36dcfb22e2a05490dc118fb61c929695cfc0cd2" translate="yes" xml:space="preserve">
          <source>Creates a new request expectation for GET requests. For more info see &lt;code&gt;expect()&lt;/code&gt;.</source>
          <target state="translated">为GET请求创建一个新的请求期望。有关更多信息，请参见 &lt;code&gt;expect()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="caa7758c7686ac3d104ccfccb9c7de838c640b7d" translate="yes" xml:space="preserve">
          <source>Creates a new request expectation for HEAD requests. For more info see &lt;code&gt;expect()&lt;/code&gt;.</source>
          <target state="translated">为HEAD请求创建一个新的请求期望。有关更多信息，请参见 &lt;code&gt;expect()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dbdab2ed8f022128732b490b699f2be275275bdd" translate="yes" xml:space="preserve">
          <source>Creates a new request expectation for JSONP requests. For more info see &lt;code&gt;expect()&lt;/code&gt;.</source>
          <target state="translated">为JSONP请求创建新的请求期望。有关更多信息，请参见 &lt;code&gt;expect()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a3d06136b6563a9d9eca8d2c71cc5612b1d724c" translate="yes" xml:space="preserve">
          <source>Creates a new request expectation for PATCH requests. For more info see &lt;code&gt;expect()&lt;/code&gt;.</source>
          <target state="translated">为PATCH请求创建新的请求期望。有关更多信息，请参见 &lt;code&gt;expect()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee017574d4a1cc6b2b83a364ba45ecf9253c34cd" translate="yes" xml:space="preserve">
          <source>Creates a new request expectation for POST requests. For more info see &lt;code&gt;expect()&lt;/code&gt;.</source>
          <target state="translated">为POST请求创建一个新的请求期望。有关更多信息，请参见 &lt;code&gt;expect()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5406609dce34fb161e5e19a023b5cd524a033c97" translate="yes" xml:space="preserve">
          <source>Creates a new request expectation for PUT requests. For more info see &lt;code&gt;expect()&lt;/code&gt;.</source>
          <target state="translated">为PUT请求创建一个新的请求期望。有关更多信息，请参见 &lt;code&gt;expect()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0be9180abbbad424813f1fc95de7b10c2c836e34" translate="yes" xml:space="preserve">
          <source>Creates a new request expectation that compares only with the requested route.</source>
          <target state="translated">创建一个新的请求期望值,该期望值仅与请求途径进行比较。</target>
        </trans-unit>
        <trans-unit id="a30b5b3ceb57067554cf2b1480796fa683e821bd" translate="yes" xml:space="preserve">
          <source>Creates a new request expectation.</source>
          <target state="translated">创建一个新的请求期望。</target>
        </trans-unit>
        <trans-unit id="b87ac50e12a922afd057ef55f3f8b4babfd88906" translate="yes" xml:space="preserve">
          <source>Creates a promise that is resolved as rejected with the specified &lt;code&gt;reason&lt;/code&gt;. This api should be used to forward rejection in a chain of promises. If you are dealing with the last promise in a promise chain, you don't need to worry about it.</source>
          <target state="translated">创建一个由于指定 &lt;code&gt;reason&lt;/code&gt; 而被拒绝的承诺。此api应该用于在承诺链中转发拒绝。如果您正在处理承诺链中的最后一个承诺，则无需担心。</target>
        </trans-unit>
        <trans-unit id="2d3b67b5019f3d6a71328d9460125c9c206f73df" translate="yes" xml:space="preserve">
          <source>Creates an injector object that can be used for retrieving services as well as for dependency injection (see &lt;a href=&quot;../../../guide/di&quot;&gt;dependency injection&lt;/a&gt;).</source>
          <target state="translated">创建一个注入器对象，该注入器对象可用于检索服务以及进行依赖项注入（请参阅&lt;a href=&quot;../../../guide/di&quot;&gt;依赖项注入&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7356a349c1f5567bb5bd540f22f1fb39ae0a858c" translate="yes" xml:space="preserve">
          <source>Creates an injector object that can be used for retrieving services as well as for dependency injection (see &lt;a href=&quot;../../guide/di&quot;&gt;dependency injection&lt;/a&gt;).</source>
          <target state="translated">创建一个注入器对象，该注入器对象可用于检索服务以及进行依赖项注入（请参阅&lt;a href=&quot;../../guide/di&quot;&gt;依赖项注入&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8695fdeaecdde9d69786b268e43f9db9c6275ac8" translate="yes" xml:space="preserve">
          <source>Creates and configures &lt;a href=&quot;../service/%24sanitize&quot;&gt;&lt;code&gt;$sanitize&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">创建并配置&lt;a href=&quot;../service/%24sanitize&quot;&gt; &lt;code&gt;$sanitize&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="02881b14df84f6433db6e90021eea6be086eb518" translate="yes" xml:space="preserve">
          <source>Creates and configures &lt;a href=&quot;ngsanitize/service/%24sanitize&quot;&gt;&lt;code&gt;$sanitize&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">创建并配置&lt;a href=&quot;ngsanitize/service/%24sanitize&quot;&gt; &lt;code&gt;$sanitize&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="7b5cfadde58f93508e998389a777198ca3f108c0" translate="yes" xml:space="preserve">
          <source>Creates and configures &lt;a href=&quot;service/%24sanitize&quot;&gt;&lt;code&gt;$sanitize&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">创建并配置&lt;a href=&quot;service/%24sanitize&quot;&gt; &lt;code&gt;$sanitize&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="edbda21e00ea49fe435ceaf70927ac4e177701c4" translate="yes" xml:space="preserve">
          <source>Creates and wires objects and functions</source>
          <target state="translated">创建和连接对象和功能</target>
        </trans-unit>
        <trans-unit id="ffcaf8830fe68d1b1f68ba57b8709c9d5b6199de" translate="yes" xml:space="preserve">
          <source>Creating Directives</source>
          <target state="translated">创建指令</target>
        </trans-unit>
        <trans-unit id="a700dae1bd51c2c95667196a1753a5f50b43b0b7" translate="yes" xml:space="preserve">
          <source>Creating Directives that Communicate</source>
          <target state="translated">创建传达指令</target>
        </trans-unit>
        <trans-unit id="8fbe66dd12a5b3a3552d7672f77f9a38a3123301" translate="yes" xml:space="preserve">
          <source>Creating Services</source>
          <target state="translated">创建服务</target>
        </trans-unit>
        <trans-unit id="c10c8a9d5669bca0e2013728d5dfd0cb881a0713" translate="yes" xml:space="preserve">
          <source>Creating a Directive that Adds Event Listeners</source>
          <target state="translated">创建一个添加事件监听器的指令</target>
        </trans-unit>
        <trans-unit id="f13dcfd72af44ef370551b4c95c6f4d5f8e82c46" translate="yes" xml:space="preserve">
          <source>Creating a Directive that Manipulates the DOM</source>
          <target state="translated">创建一个操纵DOM的指令。</target>
        </trans-unit>
        <trans-unit id="4908e625ec5c3fbe3253cd44e110565c0a03e356" translate="yes" xml:space="preserve">
          <source>Creating a Directive that Wraps Other Elements</source>
          <target state="translated">创建一个包裹其他元素的指令。</target>
        </trans-unit>
        <trans-unit id="00480fa3f76205fbcff45fe1d9ab6fe1895c433a" translate="yes" xml:space="preserve">
          <source>Creating aliases for these properties is possible with &lt;a href=&quot;nginit&quot;&gt;&lt;code&gt;ngInit&lt;/code&gt;&lt;/a&gt;. This may be useful when, for instance, nesting ngRepeats.</source>
          <target state="translated">可以使用&lt;a href=&quot;nginit&quot;&gt; &lt;code&gt;ngInit&lt;/code&gt; &lt;/a&gt;为这些属性创建别名。例如，在嵌套ngRepeats时，这可能很有用。</target>
        </trans-unit>
        <trans-unit id="4273e44c3ccf98604f4bbe4a2ea0575d5e6e7b94" translate="yes" xml:space="preserve">
          <source>Creating and configuring a Component</source>
          <target state="translated">创建和配置一个组件</target>
        </trans-unit>
        <trans-unit id="d2c811c7456325eb8da1fc874215e55532d587bd" translate="yes" xml:space="preserve">
          <source>Creating custom actions</source>
          <target state="translated">创建自定义动作</target>
        </trans-unit>
        <trans-unit id="b9844587b0d135a1f842558883719b722f871819" translate="yes" xml:space="preserve">
          <source>Creating custom filters</source>
          <target state="translated">创建自定义过滤器</target>
        </trans-unit>
        <trans-unit id="b5746d62259c2e464d484d43c4e1554d32d064d9" translate="yes" xml:space="preserve">
          <source>Creating local properties on widget scope creates two problems:</source>
          <target state="translated">在小组件范围上创建本地属性会产生两个问题。</target>
        </trans-unit>
        <trans-unit id="e2a4b56bb483692f538a3505e58481eb966e8ce9" translate="yes" xml:space="preserve">
          <source>Creation versus Retrieval</source>
          <target state="translated">创建与检索</target>
        </trans-unit>
        <trans-unit id="5af074006d430540128f3bf6a44cb8c6f303320b" translate="yes" xml:space="preserve">
          <source>Cross Site Request Forgery (XSRF) Protection</source>
          <target state="translated">跨站请求伪造(XSRF)保护措施</target>
        </trans-unit>
        <trans-unit id="c8673739ea7c8a0f8b25ce9b61f288f6a98b1451" translate="yes" xml:space="preserve">
          <source>Cross Site Request Forgery (XSRF/CSRF)</source>
          <target state="translated">跨站请求伪造(XSRF/CSRF)</target>
        </trans-unit>
        <trans-unit id="7fef8120d67245c18d2d3c23d1ec55c168fe972d" translate="yes" xml:space="preserve">
          <source>Currency symbol</source>
          <target state="translated">货币符号</target>
        </trans-unit>
        <trans-unit id="3dd4bbd8be3d3584f64ec9d144ad17acc82acc08" translate="yes" xml:space="preserve">
          <source>Currency symbol or identifier to be displayed.</source>
          <target state="translated">要显示的货币符号或标识符。</target>
        </trans-unit>
        <trans-unit id="8fc66fe26d9d8793cd1000496300cf9f2f548b32" translate="yes" xml:space="preserve">
          <source>Current RegExp if called without value or self for chaining otherwise.</source>
          <target state="translated">当前正则表达式,如果调用时没有值,或者调用自变量进行链式连接,否则。</target>
        </trans-unit>
        <trans-unit id="f226ae8b1558106c8adc6746637c3dbe2b31d834" translate="yes" xml:space="preserve">
          <source>Current route information.</source>
          <target state="translated">当前的路线信息。</target>
        </trans-unit>
        <trans-unit id="1c94bf3985b8bccc15be49b6d0743db478a47075" translate="yes" xml:space="preserve">
          <source>Current value when called without a new value or self for chaining otherwise.</source>
          <target state="translated">调用时的当前值,没有新的值,否则调用self进行连锁。</target>
        </trans-unit>
        <trans-unit id="6334d13a652b9fde3f48f69b6ce9c655418ee599" translate="yes" xml:space="preserve">
          <source>Current/previous route information.</source>
          <target state="translated">当前/以前的路线信息。</target>
        </trans-unit>
        <trans-unit id="0c6c0c1904e8345998b07d175a1de44245761ead" translate="yes" xml:space="preserve">
          <source>Currently, ngAria interfaces with the following directives:</source>
          <target state="translated">目前,ngAria与以下指令接口。</target>
        </trans-unit>
        <trans-unit id="4edef8165e277d94077897e6b7f0af7494905313" translate="yes" xml:space="preserve">
          <source>Currently, the &lt;strong&gt;Component Router&lt;/strong&gt; module must be installed via &lt;code&gt;npm&lt;/code&gt;/&lt;code&gt;yarn&lt;/code&gt;, it is not available on Bower or the Google CDN.</source>
          <target state="translated">当前，&lt;strong&gt;组件路由器&lt;/strong&gt;模块必须通过 &lt;code&gt;npm&lt;/code&gt; / &lt;code&gt;yarn&lt;/code&gt; 安装，在Bower或Google CDN上不可用。</target>
        </trans-unit>
        <trans-unit id="11e09346e5e227c0f25baf70a4c23438004527d4" translate="yes" xml:space="preserve">
          <source>Currently, the ngMessages module only contains the code for the &lt;code&gt;ngMessages&lt;/code&gt;, &lt;code&gt;ngMessagesInclude&lt;/code&gt;&lt;code&gt;ngMessage&lt;/code&gt;, &lt;code&gt;ngMessageExp&lt;/code&gt; and &lt;code&gt;ngMessageDefault&lt;/code&gt; directives.</source>
          <target state="translated">当前，ngMessages模块仅包含 &lt;code&gt;ngMessages&lt;/code&gt; ， &lt;code&gt;ngMessagesInclude&lt;/code&gt; &lt;code&gt;ngMessage&lt;/code&gt; ， &lt;code&gt;ngMessageExp&lt;/code&gt; 和 &lt;code&gt;ngMessageDefault&lt;/code&gt; 指令的代码。</target>
        </trans-unit>
        <trans-unit id="74d5d1b5bbf2644cec8eb6da6dea035b822c7813" translate="yes" xml:space="preserve">
          <source>Custom Validation</source>
          <target state="translated">自定义验证</target>
        </trans-unit>
        <trans-unit id="9b15bde65e9d230027d2d89ae778a8a3108d5df6" translate="yes" xml:space="preserve">
          <source>Custom error message displayed after the user interacted with a control (i.e. when &lt;code&gt;$touched&lt;/code&gt; is set)</source>
          <target state="translated">用户与控件交互后显示的自定义错误消息（即，设置了 &lt;code&gt;$touched&lt;/code&gt; 时）</target>
        </trans-unit>
        <trans-unit id="b78660829b757d40d1cf02c5a67f5153479dc66e" translate="yes" xml:space="preserve">
          <source>Custom error message displayed upon submitting the form (&lt;code&gt;$submitted&lt;/code&gt; is set), even if the user didn't interact with a control</source>
          <target state="translated">提交表单后会显示自定义错误消息（设置了 &lt;code&gt;$submitted&lt;/code&gt; ），即使用户未与控件进行交互</target>
        </trans-unit>
        <trans-unit id="d33be98b55db6c87b9f4e29aaa56cfc52eb74725" translate="yes" xml:space="preserve">
          <source>Custom model update triggers</source>
          <target state="translated">自定义模型更新触发</target>
        </trans-unit>
        <trans-unit id="7a16736ffe7d57250d06a87b758621a6d4a77ba3" translate="yes" xml:space="preserve">
          <source>DOM control structures for repeating, showing and hiding DOM fragments.</source>
          <target state="translated">用于重复、显示和隐藏DOM片段的DOM控制结构。</target>
        </trans-unit>
        <trans-unit id="9a03bb780a978fe1bf04b76b90365ca5e1cd807d" translate="yes" xml:space="preserve">
          <source>DOM element which is the root of AngularJS application.</source>
          <target state="translated">DOM元素,是AngularJS应用的根。</target>
        </trans-unit>
        <trans-unit id="854d235e232e068ef083bf90af82bc89c9fe562d" translate="yes" xml:space="preserve">
          <source>Dart</source>
          <target state="translated">Dart</target>
        </trans-unit>
        <trans-unit id="f20dcbd9b08fb9703f8879bef939587ab26fc293" translate="yes" xml:space="preserve">
          <source>Data Binding</source>
          <target state="translated">数据绑定</target>
        </trans-unit>
        <trans-unit id="7865e224a6bf57800137c76704b7833654f7c47d" translate="yes" xml:space="preserve">
          <source>Data Binding in AngularJS Templates</source>
          <target state="translated">AngularJS模板中的数据绑定</target>
        </trans-unit>
        <trans-unit id="1ab20277bfa22894e79f0856de3b27a40d577c50" translate="yes" xml:space="preserve">
          <source>Data Binding in Classical Template Systems</source>
          <target state="translated">经典模板系统中的数据绑定</target>
        </trans-unit>
        <trans-unit id="ac99f5c112abda52d4e6d7eedc74c9f89d12480b" translate="yes" xml:space="preserve">
          <source>Data Modeling &lt;a href=&quot;https://github.com/js-data/js-data-angular&quot;&gt;JS-Data-Angular&lt;/a&gt;</source>
          <target state="translated">数据建模&lt;a href=&quot;https://github.com/js-data/js-data-angular&quot;&gt;JS-Data-Angular&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d38cca5da9c7df446a12182ab09218cd420e4017" translate="yes" xml:space="preserve">
          <source>Data binding</source>
          <target state="translated">数据绑定</target>
        </trans-unit>
        <trans-unit id="156ab9c87cd161d279876149b77acd0b58d8fe2b" translate="yes" xml:space="preserve">
          <source>Data binding, as in &lt;code&gt;{{}}&lt;/code&gt;.</source>
          <target state="translated">数据绑定，如 &lt;code&gt;{{}}&lt;/code&gt; 中所示。</target>
        </trans-unit>
        <trans-unit id="e6ebec9e3c5afe4e96b7b5d0a2b400ca889458eb" translate="yes" xml:space="preserve">
          <source>Data properties used by the &lt;a href=&quot;../function/angular.element#methods.html&quot;&gt;&lt;code&gt;scope()&lt;/code&gt;/&lt;code&gt;isolateScope()&lt;/code&gt; methods&lt;/a&gt; to return the element's scope.</source>
          <target state="translated">&lt;a href=&quot;../function/angular.element#methods.html&quot;&gt; &lt;code&gt;scope()&lt;/code&gt; / &lt;code&gt;isolateScope()&lt;/code&gt; 方法&lt;/a&gt;用于返回元素范围的数据属性。</target>
        </trans-unit>
        <trans-unit id="f722ccac00c1317dd3e7eb7f3ac23bac8fb4eb14" translate="yes" xml:space="preserve">
          <source>Data-binding in AngularJS apps is the automatic synchronization of data between the model and view components. The way that AngularJS implements data-binding lets you treat the model as the single-source-of-truth in your application. The view is a projection of the model at all times. When the model changes, the view reflects the change, and vice versa.</source>
          <target state="translated">AngularJS应用程序中的数据绑定是模型和视图组件之间数据的自动同步。AngularJS实现数据绑定的方式让您可以将模型视为应用程序中的单一真实来源。视图在任何时候都是模型的投影。当模型发生变化时,视图就会反映出这种变化,反之亦然。</target>
        </trans-unit>
        <trans-unit id="77a57d575cbd23f1439b67b6fdff07165e77bcc2" translate="yes" xml:space="preserve">
          <source>Date to format either as Date object, milliseconds (string or number) or various ISO 8601 datetime string formats (e.g. yyyy-MM-ddTHH:mm:ss.sssZ and its shorter versions like yyyy-MM-ddTHH:mmZ, yyyy-MM-dd or yyyyMMddTHHmmssZ). If no timezone is specified in the string input, the time is considered to be in the local timezone.</source>
          <target state="translated">日期要格式化为Date对象、毫秒(字符串或数字)或各种ISO 8601日期时间字符串格式(例如yyyy-MM-ddTHH:mm:ss.ssZ及其更短的版本,如yyyy-MM-ddTHH:mmZ、yyyy-MM-dd或yyyyMMddTHHmmssZ)。如果在输入的字符串中没有指定时区,时间将被认为是当地时区。</target>
        </trans-unit>
        <trans-unit id="1ebe58a75d08e8dfda58bd2413fc709aa1379c08" translate="yes" xml:space="preserve">
          <source>Debouncing updates</source>
          <target state="translated">退弹更新</target>
        </trans-unit>
        <trans-unit id="a2e23b650a15e5c693ca1445133d5ee60d9d20b4" translate="yes" xml:space="preserve">
          <source>Decorators</source>
          <target state="translated">Decorators</target>
        </trans-unit>
        <trans-unit id="5e42ebfd421aa36ad532cb84814016fb095d849b" translate="yes" xml:space="preserve">
          <source>Decorators are a design pattern that is used to separate modification or &lt;em&gt;decoration&lt;/em&gt; of a class without modifying the original source code. In AngularJS, decorators are functions that allow a service, directive or filter to be modified prior to its usage.</source>
          <target state="translated">装饰器是一种设计模式，用于分隔类的修改或&lt;em&gt;修饰&lt;/em&gt;而无需修改原始源代码。在AngularJS中，装饰器是允许在使用服务，指令或过滤器之前对其进行修改的函数。</target>
        </trans-unit>
        <trans-unit id="a7868dadf07f1c7850edc7089cb77140b698014a" translate="yes" xml:space="preserve">
          <source>Decorators have different rules for different services. This is because services are registered in different ways. Services are selected by name, however filters and directives are selected by appending &lt;code&gt;&quot;Filter&quot;&lt;/code&gt; or &lt;code&gt;&quot;Directive&quot;&lt;/code&gt; to the end of the name. The &lt;code&gt;$delegate&lt;/code&gt; provided is dictated by the type of service.</source>
          <target state="translated">装饰器针对不同的服务具有不同的规则。这是因为服务是以不同的方式注册的。通过名称选择服务，但是通过在名称末尾附加 &lt;code&gt;&quot;Filter&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;Directive&quot;&lt;/code&gt; 来选择过滤器和指令。提供的 &lt;code&gt;$delegate&lt;/code&gt; 由服务类型决定。</target>
        </trans-unit>
        <trans-unit id="09211fe2da464fdb5a53e646de8838c5aaa9ef4f" translate="yes" xml:space="preserve">
          <source>Deeply extends the destination object &lt;code&gt;dst&lt;/code&gt; by copying own enumerable properties from the &lt;code&gt;src&lt;/code&gt; object(s) to &lt;code&gt;dst&lt;/code&gt;. You can specify multiple &lt;code&gt;src&lt;/code&gt; objects. If you want to preserve original objects, you can do so by passing an empty object as the target: &lt;code&gt;var object = angular.merge({}, object1, object2)&lt;/code&gt;.</source>
          <target state="translated">通过将自己的可枚举属性从 &lt;code&gt;src&lt;/code&gt; 对象复制到 &lt;code&gt;dst&lt;/code&gt; 来深度扩展目标对象 &lt;code&gt;dst&lt;/code&gt; 。您可以指定多个 &lt;code&gt;src&lt;/code&gt; 对象。如果要保留原始对象，可以通过传递一个空对象作为目标来实现： &lt;code&gt;var object = angular.merge({}, object1, object2)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48d349eb48cca72baf0fba3472796293caf10dff" translate="yes" xml:space="preserve">
          <source>Default &lt;a href=&quot;%24http&quot;&gt;&lt;code&gt;$http&lt;/code&gt;&lt;/a&gt; params serializer that converts objects to strings according to the following rules:</source>
          <target state="translated">默认的&lt;a href=&quot;%24http&quot;&gt; &lt;code&gt;$http&lt;/code&gt; &lt;/a&gt; params序列化程序，根据以下规则将对象转换为字符串：</target>
        </trans-unit>
        <trans-unit id="e18582a087571d146a0e46c24129165fcade2bbe" translate="yes" xml:space="preserve">
          <source>Default &lt;a href=&quot;service/%24http&quot;&gt;&lt;code&gt;$http&lt;/code&gt;&lt;/a&gt; params serializer that converts objects to strings according to the following rules:</source>
          <target state="translated">默认的&lt;a href=&quot;service/%24http&quot;&gt; &lt;code&gt;$http&lt;/code&gt; &lt;/a&gt; params序列化程序，根据以下规则将对象转换为字符串：</target>
        </trans-unit>
        <trans-unit id="272d05ca374dc5c4d632482aeb433788c4ec30ec" translate="yes" xml:space="preserve">
          <source>Default Transformations</source>
          <target state="translated">默认变换</target>
        </trans-unit>
        <trans-unit id="e5f063eb61d4592c613ead4c13dd985673caf4ef" translate="yes" xml:space="preserve">
          <source>Default events, extra triggers, and catch-all debounce values</source>
          <target state="translated">默认事件,额外的触发器,以及覆盖性的debounce值。</target>
        </trans-unit>
        <trans-unit id="31d4d566cb937a1de4b2420380b5397c1828e7ea" translate="yes" xml:space="preserve">
          <source>Default implementation of $animate that doesn't perform any animations, instead just synchronously performs DOM updates and resolves the returned runner promise.</source>
          <target state="translated">默认实现$animate不执行任何动画,而只是同步执行DOM更新并解析返回的runner承诺。</target>
        </trans-unit>
        <trans-unit id="2c5bb4ffb680656f0530a451ee96703523ca759b" translate="yes" xml:space="preserve">
          <source>Default values for &lt;code&gt;url&lt;/code&gt; parameters. These can be overridden in &lt;code&gt;actions&lt;/code&gt; methods. If a parameter value is a function, it will be called every time a param value needs to be obtained for a request (unless the param was overridden). The function will be passed the current data value as an argument.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 参数的默认值。这些可以在 &lt;code&gt;actions&lt;/code&gt; 方法中覆盖。如果参数值是一个函数，则每次需要为请求获取参数值时都将调用该参数值（除非该参数被覆盖）。该函数将作为参数传递当前数据值。</target>
        </trans-unit>
        <trans-unit id="317bbd656753a9dd8ea52dce97e89a2822b25653" translate="yes" xml:space="preserve">
          <source>Default:</source>
          <target state="translated">Default:</target>
        </trans-unit>
        <trans-unit id="1edc1c012a2ea4113df21912c28c7ea3c9ec3a61" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'!'&lt;/code&gt;</source>
          <target state="translated">默认值： &lt;code&gt;'!'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f38409cbc5f1ef34d4d1682cfb27697f30ae623" translate="yes" xml:space="preserve">
          <source>Default: true. When used without argument, it returns the current value.</source>
          <target state="translated">默认值:true。在没有参数的情况下使用时,返回当前值。</target>
        </trans-unit>
        <trans-unit id="f8652ebd1a1875dc842cac2cb6d36ca46a049174" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="797eed95d0237127f8eda8c263a529ceb7fafcb9" translate="yes" xml:space="preserve">
          <source>Defaults to false. If no value is specified, returns the current configured value.</source>
          <target state="translated">默认值为false,如果没有指定值,则返回当前配置值。如果没有指定数值,则返回当前配置的数值。</target>
        </trans-unit>
        <trans-unit id="fcabacc99098c666fe2451c159c66618bff14d10" translate="yes" xml:space="preserve">
          <source>Deferred Bootstrap</source>
          <target state="translated">推迟的Bootstrap</target>
        </trans-unit>
        <trans-unit id="74c52f18a0d6437fe8a1f390cd629d4d1f6fb607" translate="yes" xml:space="preserve">
          <source>Define an animation on the affected elements.</source>
          <target state="translated">在受影响的元素上定义一个动画。</target>
        </trans-unit>
        <trans-unit id="0d1872060c4b7a4227a5bb96f09173f2a080f3cf" translate="yes" xml:space="preserve">
          <source>Defines an animation hook that can be later used with &lt;a href=&quot;../service/%24animate&quot;&gt;$animate&lt;/a&gt; service and directives that use this service.</source>
          <target state="translated">定义一个动画钩子，以后可以与&lt;a href=&quot;../service/%24animate&quot;&gt;$ animate&lt;/a&gt;服务和使用该服务的指令一起使用。</target>
        </trans-unit>
        <trans-unit id="6cbc7c52232bf21d30296e7e147625b5fda618ff" translate="yes" xml:space="preserve">
          <source>Defines the security context for DOM properties bound by ng-prop-*.</source>
          <target state="translated">定义了由ng-prop-*绑定的DOM属性的安全上下文。</target>
        </trans-unit>
        <trans-unit id="32989cdf0067cee754e3070b85d64e05afb480b3" translate="yes" xml:space="preserve">
          <source>Delay in milliseconds.</source>
          <target state="translated">延迟时间为毫秒。</target>
        </trans-unit>
        <trans-unit id="3302581e2ec4f0f6eeb35f27969f476b33fc5b38" translate="yes" xml:space="preserve">
          <source>Delegates to &lt;a href=&quot;%24scedelegate#getTrusted.html&quot;&gt;&lt;code&gt;$sceDelegate.getTrusted&lt;/code&gt;&lt;/a&gt;. As such, takes any input, and either returns a value that's safe to use in the specified context, or throws an exception. This function is aware of trusted values created by the &lt;code&gt;trustAs&lt;/code&gt; function and its shorthands, and when contexts are appropriate, returns the unwrapped value as-is. Finally, this function can also throw when there is no way to turn &lt;code&gt;maybeTrusted&lt;/code&gt; in a safe value (e.g., no sanitization is available or possible.)</source>
          <target state="translated">代表&lt;a href=&quot;%24scedelegate#getTrusted.html&quot;&gt; &lt;code&gt;$sceDelegate.getTrusted&lt;/code&gt; &lt;/a&gt;。这样，可以接受任何输入，并返回可以在指定上下文中安全使用的值，或者引发异常。该函数知道 &lt;code&gt;trustAs&lt;/code&gt; 函数及其速记创建的可信值，并且当上下文合适时，按原样返回未包装的值。最后，当无法将 &lt;code&gt;maybeTrusted&lt;/code&gt; 为安全值时（例如，没有可用的或可能的消毒方法），此函数也可能引发。</target>
        </trans-unit>
        <trans-unit id="f25baa776bc468f235f2d35f9972a7ad7ed42aa2" translate="yes" xml:space="preserve">
          <source>Delegates to &lt;a href=&quot;%24scedelegate#trustAs.html&quot;&gt;&lt;code&gt;$sceDelegate.trustAs&lt;/code&gt;&lt;/a&gt;. As such, returns a wrapped object that represents your value, and the trust you have in its safety for the given context. AngularJS can then use that value as-is in bindings of the specified secure context. This is used in bindings for &lt;code&gt;ng-bind-html&lt;/code&gt;, &lt;code&gt;ng-include&lt;/code&gt;, and most &lt;code&gt;src&lt;/code&gt; attribute interpolations. See &lt;a href=&quot;%24sce&quot;&gt;$sce&lt;/a&gt; for strict contextual escaping.</source>
          <target state="translated">代表&lt;a href=&quot;%24scedelegate#trustAs.html&quot;&gt; &lt;code&gt;$sceDelegate.trustAs&lt;/code&gt; &lt;/a&gt;。这样，将返回一个包装的对象，该对象表示您的值，以及在给定上下文中对其安全性所具有的信任。然后，AngularJS可以在指定的安全上下文的绑定中按原样使用该值。在 &lt;code&gt;ng-bind-html&lt;/code&gt; ， &lt;code&gt;ng-include&lt;/code&gt; 和大多数 &lt;code&gt;src&lt;/code&gt; 属性插值的绑定中使用。请参阅&lt;a href=&quot;%24sce&quot;&gt;$ sce&lt;/a&gt;以获取严格的上下文转义。</target>
        </trans-unit>
        <trans-unit id="37499fbdb55b6f4f8b4ca5691cd7ea820e28edff" translate="yes" xml:space="preserve">
          <source>Demonstration of nesting</source>
          <target state="translated">筑巢示范</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="6e0ef472d186db187fa4eb4f242e7f5f04004e20" translate="yes" xml:space="preserve">
          <source>Dependencies and Order of execution</source>
          <target state="translated">依赖性和执行顺序</target>
        </trans-unit>
        <trans-unit id="83a3432efddfe802976a8d09a38d176492fb9172" translate="yes" xml:space="preserve">
          <source>Dependency Annotation</source>
          <target state="translated">依赖性注解</target>
        </trans-unit>
        <trans-unit id="3aefbe2f210572802298b2ad0347dc9e423d2690" translate="yes" xml:space="preserve">
          <source>Dependency Injection</source>
          <target state="translated">依赖性注入</target>
        </trans-unit>
        <trans-unit id="bac2d51482e3737a082e50bda9cc403b422810db" translate="yes" xml:space="preserve">
          <source>Dependency Injection (DI) is a software design pattern that deals with how components get hold of their dependencies.</source>
          <target state="translated">依赖注入(DI)是一种软件设计模式,它涉及到组件如何获得他们的依赖关系。</target>
        </trans-unit>
        <trans-unit id="6a2482ebf1a4a0d728e1de1670f37f634d9570f4" translate="yes" xml:space="preserve">
          <source>Dependency Injection in AngularJS</source>
          <target state="translated">AngularJS中的依赖注入</target>
        </trans-unit>
        <trans-unit id="4047c105d9cf170d730f33a2033d59df30b22746" translate="yes" xml:space="preserve">
          <source>Dependency Injection is pervasive throughout AngularJS. You can use it when defining components or when providing &lt;code&gt;run&lt;/code&gt; and &lt;code&gt;config&lt;/code&gt; blocks for a module.</source>
          <target state="translated">依赖注入遍及整个AngularJS。您可以在定义组件或为模块提供 &lt;code&gt;run&lt;/code&gt; 和 &lt;code&gt;config&lt;/code&gt; 块时使用它。</target>
        </trans-unit>
        <trans-unit id="327a55f82dc6818877a68e37b722bb7f2360b633" translate="yes" xml:space="preserve">
          <source>Deployment</source>
          <target state="translated">Deployment</target>
        </trans-unit>
        <trans-unit id="8201f6ff0e5004a4bfccdbd8144af27f2013f8eb" translate="yes" xml:space="preserve">
          <source>Deregister a control from the form.</source>
          <target state="translated">从表格中取消注册一个控件。</target>
        </trans-unit>
        <trans-unit id="2af89a89cef15b822c0d0acc729909c302781d81" translate="yes" xml:space="preserve">
          <source>Deregisters an event listener based on the event which has been associated with the provided element. This method can be used in three different ways depending on the arguments:</source>
          <target state="translated">根据与所提供的元素相关联的事件,取消注册一个事件监听器。根据参数的不同,这个方法有三种不同的使用方式。</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="e3f132e020453df1a9acbebf0586c70543cd8c33" translate="yes" xml:space="preserve">
          <source>Deserialized JSON string.</source>
          <target state="translated">反序列化JSON字符串。</target>
        </trans-unit>
        <trans-unit id="4cd052d554151d1dc02fd9731f9a485e9108a179" translate="yes" xml:space="preserve">
          <source>Deserialized cookie value.</source>
          <target state="translated">反序列化的cookie值。</target>
        </trans-unit>
        <trans-unit id="1a80bbcd8ea1a814fe2e5d77c9178e1038921990" translate="yes" xml:space="preserve">
          <source>Deserializes a JSON string.</source>
          <target state="translated">反序列化JSON字符串。</target>
        </trans-unit>
        <trans-unit id="c27667616e652be84cc2c1b6b99515c219d63d79" translate="yes" xml:space="preserve">
          <source>Design Principles of AngularJS (video)</source>
          <target state="translated">AngularJS的设计原理(视频</target>
        </trans-unit>
        <trans-unit id="dfc06cd40e8bbe5fdfe5911a99ffee939388a01e" translate="yes" xml:space="preserve">
          <source>Destination into which the source is copied. If provided, must be of the same type as &lt;code&gt;source&lt;/code&gt;.</source>
          <target state="translated">源复制到的目标。如果提供，则必须与 &lt;code&gt;source&lt;/code&gt; 具有相同的类型。</target>
        </trans-unit>
        <trans-unit id="888c51c1c5c27c5b36b8738901ae380a900d1853" translate="yes" xml:space="preserve">
          <source>Destination object.</source>
          <target state="translated">目的地对象:</target>
        </trans-unit>
        <trans-unit id="a1e2c0b92bdd88f0fcb0c37a3c357ef7f0dfaccb" translate="yes" xml:space="preserve">
          <source>Destroys the &lt;a href=&quot;%24cachefactory.cache&quot;&gt;Cache&lt;/a&gt; object entirely, removing it from the &lt;a href=&quot;../service/%24cachefactory&quot;&gt;$cacheFactory&lt;/a&gt; set.</source>
          <target state="translated">完全销毁&lt;a href=&quot;%24cachefactory.cache&quot;&gt;Cache&lt;/a&gt;对象，将其从&lt;a href=&quot;../service/%24cachefactory&quot;&gt;$ cacheFactory&lt;/a&gt;集中删除。</target>
        </trans-unit>
        <trans-unit id="dc3decbb93847518f1a049dcf49d0d7c6560bcc6" translate="yes" xml:space="preserve">
          <source>Details</source>
          <target state="translated">Details</target>
        </trans-unit>
        <trans-unit id="3d2a0d7f87ba443d5d9d80e16047385ccffb8fd6" translate="yes" xml:space="preserve">
          <source>Determines if a reference is a &lt;code&gt;Function&lt;/code&gt;.</source>
          <target state="translated">确定引用是否为 &lt;code&gt;Function&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4113c903a447369d1069839fa1070f046a4c3170" translate="yes" xml:space="preserve">
          <source>Determines if a reference is a &lt;code&gt;Number&lt;/code&gt;.</source>
          <target state="translated">确定引用是否为 &lt;code&gt;Number&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e163b7686cbd75d6ac0afa43f59a2a1afdecef9a" translate="yes" xml:space="preserve">
          <source>Determines if a reference is a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">确定引用是否为 &lt;code&gt;String&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1cf350f5a8069497935175567e278f51b713aa42" translate="yes" xml:space="preserve">
          <source>Determines if a reference is a DOM element (or wrapped jQuery element).</source>
          <target state="translated">确定一个引用是否是一个DOM元素(或封装的jQuery元素)。</target>
        </trans-unit>
        <trans-unit id="d525fdf8b5a9d0d2c0f715b9068dd493ccd6f25b" translate="yes" xml:space="preserve">
          <source>Determines if a reference is an &lt;code&gt;Array&lt;/code&gt;.</source>
          <target state="translated">确定引用是否为 &lt;code&gt;Array&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2be2458af6292b2bcac1469ec435b958dd083b5" translate="yes" xml:space="preserve">
          <source>Determines if a reference is an &lt;code&gt;Object&lt;/code&gt;. Unlike &lt;code&gt;typeof&lt;/code&gt; in JavaScript, &lt;code&gt;null&lt;/code&gt;s are not considered to be objects. Note that JavaScript arrays are objects.</source>
          <target state="translated">确定引用是否为 &lt;code&gt;Object&lt;/code&gt; 。与JavaScript中的 &lt;code&gt;typeof&lt;/code&gt; 不同， &lt;code&gt;null&lt;/code&gt; 不被视为对象。请注意，JavaScript数组是对象。</target>
        </trans-unit>
        <trans-unit id="f1973ee38e2820392df6987b25ac623a3df111fa" translate="yes" xml:space="preserve">
          <source>Determines if a reference is defined.</source>
          <target state="translated">确定是否定义了一个引用。</target>
        </trans-unit>
        <trans-unit id="5acbddde98e2e5498cdcbbd393b69655ebfab3fd" translate="yes" xml:space="preserve">
          <source>Determines if a reference is undefined.</source>
          <target state="translated">确定一个引用是否未定义。</target>
        </trans-unit>
        <trans-unit id="f3d374285cfc5534564499c4ffd11134b73c0553" translate="yes" xml:space="preserve">
          <source>Determines if a value is a date.</source>
          <target state="translated">确定一个值是否为日期。</target>
        </trans-unit>
        <trans-unit id="03fe2f186b89e2d26eec4a0369aec723c0e6b2e2" translate="yes" xml:space="preserve">
          <source>Determines if two objects or two values are equivalent. Supports value types, regular expressions, arrays and objects.</source>
          <target state="translated">判断两个对象或两个值是否相等。支持值类型、正则表达式、数组和对象。</target>
        </trans-unit>
        <trans-unit id="9e4bd027f55486bc01eb5c3e7f889479826c89f5" translate="yes" xml:space="preserve">
          <source>Develop</source>
          <target state="translated">Develop</target>
        </trans-unit>
        <trans-unit id="45e199c34f2e47d26bd6cf3b0bc418229f9353d7" translate="yes" xml:space="preserve">
          <source>Developer Guide</source>
          <target state="translated">开发者指南</target>
        </trans-unit>
        <trans-unit id="8b51dbd8f299bc7c073294b641b3f766d5ad2466" translate="yes" xml:space="preserve">
          <source>Didn't find what you're looking for here? Check out the &lt;a href=&quot;guide/external-resources&quot;&gt;External AngularJS resources guide&lt;/a&gt;.</source>
          <target state="translated">找不到您想要的东西吗？查阅《&lt;a href=&quot;guide/external-resources&quot;&gt;外部AngularJS》资源指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2886baaf05b749277028afeb9b687e96ffae3fa3" translate="yes" xml:space="preserve">
          <source>Differences between Kris Kowal's Q and $q</source>
          <target state="translated">Kris Kowal的Q和$q之间的差异。</target>
        </trans-unit>
        <trans-unit id="0a4e32e999a601265a21ab8df0f84e0f0c01e628" translate="yes" xml:space="preserve">
          <source>Differences from the ICU MessageFormat syntax</source>
          <target state="translated">与ICU MessageFormat语法的区别</target>
        </trans-unit>
        <trans-unit id="82ee6eee6c53c6516212864425aaba8fdf0037c2" translate="yes" xml:space="preserve">
          <source>Different DOM between &lt;code&gt;template&lt;/code&gt; and &lt;code&gt;templateUrl&lt;/code&gt;: &lt;a href=&quot;https://github.com/angular/angular.js/issues/14326&quot;&gt;#10612&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;template&lt;/code&gt; 之间的不同DOM和 &lt;code&gt;templateUrl&lt;/code&gt; ：&lt;a href=&quot;https://github.com/angular/angular.js/issues/14326&quot;&gt;＃10612&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="164e0b79063f11a2936cf830fb48b8c7054cc118" translate="yes" xml:space="preserve">
          <source>Directive</source>
          <target state="translated">Directive</target>
        </trans-unit>
        <trans-unit id="fda754562558210f994489b54b2697a96dc73fa2" translate="yes" xml:space="preserve">
          <source>Directive Definition Object</source>
          <target state="translated">指令定义对象</target>
        </trans-unit>
        <trans-unit id="e9cd5ca17a7c95f80bd097f0322c1ccdcc4c3d5b" translate="yes" xml:space="preserve">
          <source>Directive Info</source>
          <target state="translated">指令信息</target>
        </trans-unit>
        <trans-unit id="67e1beffb6df3ce747606244ee286332d2ea20a6" translate="yes" xml:space="preserve">
          <source>Directive Support</source>
          <target state="translated">指令支持</target>
        </trans-unit>
        <trans-unit id="1f833a7af0a6aaa31ef34696128cfbeafe3eed41" translate="yes" xml:space="preserve">
          <source>Directive components in ng</source>
          <target state="translated">ng中的指令组件</target>
        </trans-unit>
        <trans-unit id="4cc0bdd0eee78ccef5ca412ee771d3f81c05f4a4" translate="yes" xml:space="preserve">
          <source>Directive components in ngAnimate</source>
          <target state="translated">ngAnimate中的指令组件</target>
        </trans-unit>
        <trans-unit id="844df4f4bdaa7d4d1ccd12b056cbe1adfcc021cb" translate="yes" xml:space="preserve">
          <source>Directive components in ngComponentRouter</source>
          <target state="translated">ngComponentRouter中的指令组件。</target>
        </trans-unit>
        <trans-unit id="de98d7620ad6306ead111be196ed86e3671c7290" translate="yes" xml:space="preserve">
          <source>Directive components in ngMessages</source>
          <target state="translated">ngMessages中的指令组件</target>
        </trans-unit>
        <trans-unit id="3e59659ae9dccbcaae81c53c6bc245083968f924" translate="yes" xml:space="preserve">
          <source>Directive components in ngRoute</source>
          <target state="translated">ngRoute中的指令组件</target>
        </trans-unit>
        <trans-unit id="91447be933b3e2599ebeeeffc119c8212eeed0af" translate="yes" xml:space="preserve">
          <source>Directive components in ngTouch</source>
          <target state="translated">ngTouch中的指令组件</target>
        </trans-unit>
        <trans-unit id="d6115f4adc06b0e052bc4ff5724424c7b78aeddd" translate="yes" xml:space="preserve">
          <source>Directive controllers can provide the following methods that are called by AngularJS at points in the life-cycle of the directive:</source>
          <target state="translated">指令控制器可以提供以下方法,这些方法在指令的生命周期中的各个点被AngularJS调用。</target>
        </trans-unit>
        <trans-unit id="302daa750770cb865e5e869c5d3fb8ea941e26e5" translate="yes" xml:space="preserve">
          <source>Directive name, or an object map of directives where the keys are the names and the values are the factories.</source>
          <target state="translated">指令名称,或指令的对象图,其中键是名称,值是工厂。</target>
        </trans-unit>
        <trans-unit id="7490be6dee2947f333e03a7200032b150a8f8592" translate="yes" xml:space="preserve">
          <source>Directive that instantiates &lt;a href=&quot;../type/form.formcontroller&quot;&gt;FormController&lt;/a&gt;.</source>
          <target state="translated">实例化&lt;a href=&quot;../type/form.formcontroller&quot;&gt;FormController的&lt;/a&gt;指令。</target>
        </trans-unit>
        <trans-unit id="d24b0ceb64605261d7559cd1d1e867e4d882600f" translate="yes" xml:space="preserve">
          <source>Directive that instantiates &lt;a href=&quot;type/form.formcontroller&quot;&gt;FormController&lt;/a&gt;.</source>
          <target state="translated">实例化的指令 &lt;a href=&quot;type/form.formcontroller&quot;&gt;FormController的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8735ba9d320dcda668a0816d217511ecea07ecf0" translate="yes" xml:space="preserve">
          <source>Directive that marks the insertion point for the transcluded DOM of the nearest parent directive that uses transclusion.</source>
          <target state="translated">标记使用transclusion的最近的父指令的transcluded DOM的插入点的指令。</target>
        </trans-unit>
        <trans-unit id="746cc62cda06834c2b42e5ffe56a1badbb306cd7" translate="yes" xml:space="preserve">
          <source>Directive types</source>
          <target state="translated">指令类型</target>
        </trans-unit>
        <trans-unit id="28c82071e940360118b0611d5c912a71c32a0100" translate="yes" xml:space="preserve">
          <source>Directives</source>
          <target state="translated">Directives</target>
        </trans-unit>
        <trans-unit id="336c7042caff79e8e52e079db85c30958078de48" translate="yes" xml:space="preserve">
          <source>Directives are not deduplicated before compilation</source>
          <target state="translated">指令在编译前没有被重复复制。</target>
        </trans-unit>
        <trans-unit id="0050d5ca31968a90a87b0b2b5fe12a4a6f033632" translate="yes" xml:space="preserve">
          <source>Directives are not re-compiled</source>
          <target state="translated">指令不会被重新编译</target>
        </trans-unit>
        <trans-unit id="8d67d16379fb0c5fb472d4b6392bed6f0a88bbfa" translate="yes" xml:space="preserve">
          <source>Directives can require the controllers of other directives to enable communication between each other. This can be achieved in a component by providing an object mapping for the &lt;code&gt;require&lt;/code&gt; property. The object keys specify the property names under which the required controllers (object values) will be bound to the requiring component's controller.</source>
          <target state="translated">指令可能需要其他指令的控制器来实现彼此之间的通信。这可以通过为组件提供对象映射来在组件中实现。 &lt;code&gt;require&lt;/code&gt; 属性。对象键指定属性名称，在这些属性名称下，所需的控制器（对象值）将绑定到所需组件的控制器。</target>
        </trans-unit>
        <trans-unit id="b5ec19ceda57dbf701f9e59456ca25e9c7b1a674" translate="yes" xml:space="preserve">
          <source>Directives in AngularJS are responsible for encapsulating complex functionality within custom HTML tags, attributes, classes or comments. Unit tests are very important for directives because the components you create with directives may be used throughout your application and in many different contexts.</source>
          <target state="translated">AngularJS中的指令负责将复杂的功能封装在自定义HTML标签、属性、类或注释中。单元测试对于指令来说非常重要,因为您使用指令创建的组件可能会在整个应用程序中和许多不同的上下文中使用。</target>
        </trans-unit>
        <trans-unit id="bdc211594d3e011463f460b1b6ff16a3553721bd" translate="yes" xml:space="preserve">
          <source>Directives like &lt;a href=&quot;../api/ng/directive/ngclick&quot;&gt;&lt;code&gt;ngClick&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../api/ng/directive/ngfocus&quot;&gt;&lt;code&gt;ngFocus&lt;/code&gt;&lt;/a&gt; expose a &lt;code&gt;$event&lt;/code&gt; object within the scope of that expression. The object is an instance of a &lt;a href=&quot;http://api.jquery.com/category/events/event-object/&quot;&gt;jQuery Event Object&lt;/a&gt; when jQuery is present or a similar jqLite object.</source>
          <target state="translated">&lt;a href=&quot;../api/ng/directive/ngclick&quot;&gt; &lt;code&gt;ngClick&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../api/ng/directive/ngfocus&quot;&gt; &lt;code&gt;ngFocus&lt;/code&gt; &lt;/a&gt;等指令公开了 &lt;code&gt;$event&lt;/code&gt; 在该表达式的范围内对象。当存在jQuery或类似的jqLit​​e对象时，该对象是&lt;a href=&quot;http://api.jquery.com/category/events/event-object/&quot;&gt;jQuery事件对象&lt;/a&gt;的实例。</target>
        </trans-unit>
        <trans-unit id="6434913d2a02f2df51c8dfef0163eab8e24c7df1" translate="yes" xml:space="preserve">
          <source>Directives often have a &lt;strong&gt;link function&lt;/strong&gt;. A link function allows the directive to register listeners to the specific cloned DOM element instance as well as to copy content into the DOM from the scope.</source>
          <target state="translated">指令通常有一个 &lt;strong&gt;链接功能&lt;/strong&gt;。链接功能允许指令将侦听器注册到特定的克隆DOM元素实例，以及将内容从作用域复制到DOM中。</target>
        </trans-unit>
        <trans-unit id="033d63aa44ddfb57d03dea3272e0203cf62b3238" translate="yes" xml:space="preserve">
          <source>Directives that Create Scopes</source>
          <target state="translated">创建作用域的指令</target>
        </trans-unit>
        <trans-unit id="a74321a33161090e50af4b36d898258f47549ad8" translate="yes" xml:space="preserve">
          <source>Directives that use transclusion are treated specially by the compiler. Before their compile function is called, the contents of the directive's element are removed from the element and provided via a transclusion function. The directive's template is then appended to the directive's element, to which it can then insert the transcluded content into its template.</source>
          <target state="translated">使用transclusion的指令会被编译器特殊处理。在调用它们的编译函数之前,指令的元素的内容被从元素中删除,并通过transclusion函数提供。然后将指令的模板附加到指令的元素上,再将转包容的内容插入到其模板中。</target>
        </trans-unit>
        <trans-unit id="4bdab4ccc71e22e8ec90abeea9ccfd1df46ff179" translate="yes" xml:space="preserve">
          <source>Directives that want to modify the DOM typically use the &lt;code&gt;link&lt;/code&gt; option to register DOM listeners as well as update the DOM. It is executed after the template has been cloned and is where directive logic will be put.</source>
          <target state="translated">想要修改DOM的指令通常使用 &lt;code&gt;link&lt;/code&gt; 选项来注册DOM侦听器以及更新DOM。它是在克隆模板之后执行的，并且将在其中放置指令逻辑。</target>
        </trans-unit>
        <trans-unit id="e5140a8ef3a9bc2683f73052c7fd79865733a8ce" translate="yes" xml:space="preserve">
          <source>Dirty checking can be done with three strategies: By reference, by collection contents, and by value. The strategies differ in the kinds of changes they detect, and in their performance characteristics.</source>
          <target state="translated">查脏可以用三种策略。通过参考,通过集合内容,和通过价值。这些策略在检测变化的种类和性能特征上有所不同。</target>
        </trans-unit>
        <trans-unit id="f7eed9ee6c74c9630f8e771d832431d6115feaf3" translate="yes" xml:space="preserve">
          <source>Dirty checking the scope for property changes is a common operation in AngularJS and for this reason the dirty checking function must be efficient. Care should be taken that the dirty checking function does not do any DOM access, as DOM access is orders of magnitude slower than property access on JavaScript object.</source>
          <target state="translated">对属性变化的作用域进行脏检查是AngularJS中常见的操作,为此脏检查函数必须高效。需要注意的是,dirty检查函数不做任何DOM访问,因为DOM访问比JavaScript对象上的属性访问要慢几个数量级。</target>
        </trans-unit>
        <trans-unit id="14f2ccf9e7d630a13a9a51eb1a154be01aba9e61" translate="yes" xml:space="preserve">
          <source>Disable comment and css class directives</source>
          <target state="translated">禁用注释和css类指令</target>
        </trans-unit>
        <trans-unit id="17f67c438b25665408ced77a0f973ff152910ec2" translate="yes" xml:space="preserve">
          <source>Disabling Debug Data</source>
          <target state="translated">禁用调试数据</target>
        </trans-unit>
        <trans-unit id="4c52842f01d8ff2a00e9728305157459d5a938ec" translate="yes" xml:space="preserve">
          <source>Disabling Specific Attributes</source>
          <target state="translated">禁用特定属性</target>
        </trans-unit>
        <trans-unit id="de84716cee60c5cb4c6d2f6f25d3ac55ddcd7e00" translate="yes" xml:space="preserve">
          <source>Disabling attributes</source>
          <target state="translated">禁用属性</target>
        </trans-unit>
        <trans-unit id="20ef6ef888eb023c4461090d2f38a7acea56c9fa" translate="yes" xml:space="preserve">
          <source>Disabling auto-escaping is extremely dangerous, it usually creates a Cross Site Scripting (XSS) vulnerability in your application.</source>
          <target state="translated">禁用自动逃逸是非常危险的,它通常会在你的应用程序中创建一个跨站点脚本(XSS)漏洞。</target>
        </trans-unit>
        <trans-unit id="1f51a2a3fb5aa9f0b2bf05d11e6cc36721611e66" translate="yes" xml:space="preserve">
          <source>Disabling ngAria on Specific Elements</source>
          <target state="translated">在特定元素上禁用ngAria</target>
        </trans-unit>
        <trans-unit id="e408de586a7e2622fd333d5e79f8788540adc05a" translate="yes" xml:space="preserve">
          <source>Disallow argument name annotation inference.</source>
          <target state="translated">不允许参数名注解推理。</target>
        </trans-unit>
        <trans-unit id="85016ac7fabd0f269f3323d663fd847b3d8b64a4" translate="yes" xml:space="preserve">
          <source>Discuss</source>
          <target state="translated">Discuss</target>
        </trans-unit>
        <trans-unit id="22d9c848e577ae1fec59456eee03bc9ea644ba34" translate="yes" xml:space="preserve">
          <source>Dispatches an event &lt;code&gt;name&lt;/code&gt; downwards to all child scopes (and their children) notifying the registered &lt;a href=&quot;%24rootscope.scope#%24on.html&quot;&gt;&lt;code&gt;$rootScope.Scope&lt;/code&gt;&lt;/a&gt; listeners.</source>
          <target state="translated">向所有子范围（及其子范围）向下分配事件 &lt;code&gt;name&lt;/code&gt; ，通知已注册的&lt;a href=&quot;%24rootscope.scope#%24on.html&quot;&gt; &lt;code&gt;$rootScope.Scope&lt;/code&gt; &lt;/a&gt;侦听器。</target>
        </trans-unit>
        <trans-unit id="522ab92da5006452539dc8ace74860c58110db39" translate="yes" xml:space="preserve">
          <source>Dispatches an event &lt;code&gt;name&lt;/code&gt; upwards through the scope hierarchy notifying the registered &lt;a href=&quot;%24rootscope.scope#%24on.html&quot;&gt;&lt;code&gt;$rootScope.Scope&lt;/code&gt;&lt;/a&gt; listeners.</source>
          <target state="translated">通过作用域层次结构向上调度事件 &lt;code&gt;name&lt;/code&gt; 通知已注册的&lt;a href=&quot;%24rootscope.scope#%24on.html&quot;&gt; &lt;code&gt;$rootScope.Scope&lt;/code&gt; &lt;/a&gt;侦听器。</target>
        </trans-unit>
        <trans-unit id="d77fffba57484870bc54fe43094d3c654c48c5c8" translate="yes" xml:space="preserve">
          <source>Displaying a default message</source>
          <target state="translated">显示默认信息</target>
        </trans-unit>
        <trans-unit id="6a1d6df1044462482aefb148d802e6a902833016" translate="yes" xml:space="preserve">
          <source>Displaying multiple messages at the same time</source>
          <target state="translated">同时显示多个信息</target>
        </trans-unit>
        <trans-unit id="8fcd11662cedbe647c35df6e222817acbf87bac8" translate="yes" xml:space="preserve">
          <source>Do not bootstrap your app on an element with a directive that uses &lt;a href=&quot;../api/ng/service/%24compile#transclusion.html&quot;&gt;transclusion&lt;/a&gt;, such as &lt;a href=&quot;../api/ng/directive/ngif&quot;&gt;&lt;code&gt;ngIf&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../api/ng/directive/nginclude&quot;&gt;&lt;code&gt;ngInclude&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../api/ngroute/directive/ngview&quot;&gt;&lt;code&gt;ngView&lt;/code&gt;&lt;/a&gt;. Doing this misplaces the app &lt;a href=&quot;../api/ng/service/%24rootelement&quot;&gt;&lt;code&gt;$rootElement&lt;/code&gt;&lt;/a&gt; and the app's &lt;a href=&quot;../api/auto/service/%24injector&quot;&gt;injector&lt;/a&gt;, causing animations to stop working and making the injector inaccessible from outside the app.</source>
          <target state="translated">不要将应用程序引导到使用&lt;a href=&quot;../api/ng/service/%24compile#transclusion.html&quot;&gt;包含&lt;/a&gt;&lt;a href=&quot;../api/ng/directive/ngif&quot;&gt; &lt;code&gt;ngIf&lt;/code&gt; &lt;/a&gt;指令的元素（例如ngIf，&lt;a href=&quot;../api/ng/directive/nginclude&quot;&gt; &lt;code&gt;ngInclude&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../api/ngroute/directive/ngview&quot;&gt; &lt;code&gt;ngView&lt;/code&gt; )上&lt;/a&gt;。这样做会放错应用程序&lt;a href=&quot;../api/ng/service/%24rootelement&quot;&gt; &lt;code&gt;$rootElement&lt;/code&gt; &lt;/a&gt;和应用程序的&lt;a href=&quot;../api/auto/service/%24injector&quot;&gt;注射器的位置&lt;/a&gt;，从而导致动画停止工作并使注射器无法从应用程序外部访问。</target>
        </trans-unit>
        <trans-unit id="734e169c6f35eeaf3a86656e7f1c0d72ba2de6cc" translate="yes" xml:space="preserve">
          <source>Do not mix client and server templates</source>
          <target state="translated">不要混合客户端和服务器模板</target>
        </trans-unit>
        <trans-unit id="19e892e136c9dc029952e0d0040cde8bbcc0893d" translate="yes" xml:space="preserve">
          <source>Do not run user input through &lt;code&gt;$scope.$eval&lt;/code&gt; (or any of the other expression parsing functions listed above)</source>
          <target state="translated">不要通过 &lt;code&gt;$scope.$eval&lt;/code&gt; （或上面列出的任何其他其他表达式解析函数）运行用户输入</target>
        </trans-unit>
        <trans-unit id="a1222a753c501c7c58fabe9476767ef0ea0a4fda" translate="yes" xml:space="preserve">
          <source>Do not use a directive that uses &lt;a href=&quot;../service/%24compile#transclusion.html&quot;&gt;transclusion&lt;/a&gt; on the same element as &lt;code&gt;ngApp&lt;/code&gt;. This includes directives such as &lt;a href=&quot;ngif&quot;&gt;&lt;code&gt;ngIf&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;nginclude&quot;&gt;&lt;code&gt;ngInclude&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ngroute/directive/ngview&quot;&gt;&lt;code&gt;ngView&lt;/code&gt;&lt;/a&gt;. Doing this misplaces the app &lt;a href=&quot;../service/%24rootelement&quot;&gt;&lt;code&gt;$rootElement&lt;/code&gt;&lt;/a&gt; and the app's &lt;a href=&quot;../../auto/service/%24injector&quot;&gt;injector&lt;/a&gt;, causing animations to stop working and making the injector inaccessible from outside the app.</source>
          <target state="translated">请勿使用在与 &lt;code&gt;ngApp&lt;/code&gt; 相同的元素上使用&lt;a href=&quot;../service/%24compile#transclusion.html&quot;&gt;包含&lt;/a&gt;的指令。这包括&lt;a href=&quot;ngif&quot;&gt; &lt;code&gt;ngIf&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;nginclude&quot;&gt; &lt;code&gt;ngInclude&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ngroute/directive/ngview&quot;&gt; &lt;code&gt;ngView&lt;/code&gt; &lt;/a&gt;等指令。这样做会放错应用程序&lt;a href=&quot;../service/%24rootelement&quot;&gt; &lt;code&gt;$rootElement&lt;/code&gt; &lt;/a&gt;和应用程序的&lt;a href=&quot;../../auto/service/%24injector&quot;&gt;注射器的位置&lt;/a&gt;，从而导致动画停止工作并使注射器无法从应用程序外部访问。</target>
        </trans-unit>
        <trans-unit id="a6b92442e50d6cf9ef2638015c4dcbb08c6765ea" translate="yes" xml:space="preserve">
          <source>Do not use controllers to:</source>
          <target state="translated">不要用控制器来。</target>
        </trans-unit>
        <trans-unit id="c4e0abe2eab7806b524f5f539063aa767372787f" translate="yes" xml:space="preserve">
          <source>Do not use user input to generate templates dynamically</source>
          <target state="translated">不要使用用户输入来动态生成模板。</target>
        </trans-unit>
        <trans-unit id="cd9568f76d3ffc3f4943b3b399abc721db51ae70" translate="yes" xml:space="preserve">
          <source>Does this mean that CSS and JS animations cannot be used together? Do JS-based animations always have higher priority? We can make up for the lack of CSS animations by using the &lt;code&gt;$animateCss&lt;/code&gt; service to trigger our own tweaked-out, CSS-based animations directly from our own JS-based animation code:</source>
          <target state="translated">这是否意味着CSS和JS动画不能同时使用？基于JS的动画是否总是具有更高的优先级？我们可以通过使用 &lt;code&gt;$animateCss&lt;/code&gt; 服务直接从我们自己的基于JS的动画代码中触发经过调整的基于CSS的动画来弥补CSS动画的不足：</target>
        </trans-unit>
        <trans-unit id="13dee9f67e174a94349cf987cddd8a72fc3af4b8" translate="yes" xml:space="preserve">
          <source>Double Compilation</source>
          <target state="translated">双合集</target>
        </trans-unit>
        <trans-unit id="46cf9c3355e52010c4d12ff1852420f2537d0b53" translate="yes" xml:space="preserve">
          <source>Double Compilation, and how to avoid it</source>
          <target state="translated">双重汇编,以及如何避免它</target>
        </trans-unit>
        <trans-unit id="c28ddab1c668724f14783f5d982dad57dfddbb6f" translate="yes" xml:space="preserve">
          <source>Double compilation occurs when an already compiled part of the DOM gets compiled again. This is an undesired effect and can lead to misbehaving directives, performance issues, and memory leaks. A common scenario where this happens is a directive that calls &lt;code&gt;$compile&lt;/code&gt; in a directive link function on the directive element. In the following &lt;strong&gt;faulty example&lt;/strong&gt;, a directive adds a mouseover behavior to a button with &lt;code&gt;ngClick&lt;/code&gt; on it:</source>
          <target state="translated">当DOM的一个已编译部分再次被编译时，就会发生双重编译。这是不希望的结果，并可能导致指令行为不当，性能问题和内存泄漏。发生这种情况的常见情况是在指令元素上的指令链接函数中调用 &lt;code&gt;$compile&lt;/code&gt; 的指令。在以下&lt;strong&gt;错误示例中&lt;/strong&gt;，指令将鼠标悬停行为添加到带有 &lt;code&gt;ngClick&lt;/code&gt; 的按钮上：</target>
        </trans-unit>
        <trans-unit id="2fe3ba6f7aec148d2830c036bfffa7e3396f913f" translate="yes" xml:space="preserve">
          <source>Double compilation occurs when an already compiled part of the DOM gets compiled again. This is an undesired effect and can lead to misbehaving directives, performance issues, and memory leaks. Refer to the Compiler Guide &lt;a href=&quot;../../../guide/compiler#double-compilation-and-how-to-avoid-it.html&quot;&gt;section on double compilation&lt;/a&gt; for an in-depth explanation and ways to avoid it.</source>
          <target state="translated">当DOM的一个已编译部分再次被编译时，就会发生双重编译。这是不希望的结果，并可能导致指令行为不当，性能问题和内存泄漏。有关详细说明和避免方法，请参阅&lt;a href=&quot;../../../guide/compiler#double-compilation-and-how-to-avoid-it.html&quot;&gt;双重编译&lt;/a&gt;的《编译器指南》部分。</target>
        </trans-unit>
        <trans-unit id="b56ef3a0351d8185f34ae1615da191674f9fba40" translate="yes" xml:space="preserve">
          <source>Double compilation should therefore be avoided. In the above example, only the new element should be compiled:</source>
          <target state="translated">因此,应避免重复编译。在上面的例子中,只有新的元素应该被编译。</target>
        </trans-unit>
        <trans-unit id="a479c9c34e878d07b4d67a73a48f432ad7dc53c8" translate="yes" xml:space="preserve">
          <source>Download</source>
          <target state="translated">Download</target>
        </trans-unit>
        <trans-unit id="6591272ff03229f7f47a34cd608993dac9711a87" translate="yes" xml:space="preserve">
          <source>Due to the differences in change-detection, you may get many more calls to &lt;code&gt;$doCheck&lt;/code&gt; in AngularJS than you would to &lt;code&gt;ngDoCheck&lt;/code&gt; in Angular.</source>
          <target state="translated">由于更改检测的差异，在AngularJS中对 &lt;code&gt;$doCheck&lt;/code&gt; 调用可能比在Angular中对 &lt;code&gt;ngDoCheck&lt;/code&gt; 的调用更多。</target>
        </trans-unit>
        <trans-unit id="690ee2fd00601f8dae9435fe866cd934f63d5b6f" translate="yes" xml:space="preserve">
          <source>During a property comparison, properties of &lt;code&gt;function&lt;/code&gt; type and properties with names that begin with &lt;code&gt;$&lt;/code&gt; are ignored.</source>
          <target state="translated">在属性比较期间，将忽略 &lt;code&gt;function&lt;/code&gt; 类型的属性和名称以 &lt;code&gt;$&lt;/code&gt; 开头的属性。</target>
        </trans-unit>
        <trans-unit id="d17774f2703ffb3b3466892ed055619a54364b52" translate="yes" xml:space="preserve">
          <source>During application bootstrap, before AngularJS goes off creating all services, it configures and instantiates all providers. We call this the configuration phase of the application life-cycle. During this phase, services aren't accessible because they haven't been created yet.</source>
          <target state="translated">在应用引导期间,在AngularJS去创建所有服务之前,它会配置和实例化所有的提供者。我们将此称为应用生命周期的配置阶段。在这个阶段,服务是无法访问的,因为它们还没有被创建。</target>
        </trans-unit>
        <trans-unit id="291ab189948f99ffa87d61aff0be223080b9841a" translate="yes" xml:space="preserve">
          <source>During template linking, directives register &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watch.html&quot;&gt;watches&lt;/a&gt; on the scope. These watches will be used to propagate model values to the DOM.</source>
          <target state="translated">在模板链接期间，伪指令在作用域上注册&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watch.html&quot;&gt;监视&lt;/a&gt;。这些监视将用于将模型值传播到DOM。</target>
        </trans-unit>
        <trans-unit id="45531da9cbed4e6e4ee65fe4cf35c23297ce9dea" translate="yes" xml:space="preserve">
          <source>During testing this implementation is swapped with &lt;a href=&quot;../../ngmock/service/%24httpbackend&quot;&gt;mock $httpBackend&lt;/a&gt; which can be trained with responses.</source>
          <target state="translated">在测试过程中，此实现与&lt;a href=&quot;../../ngmock/service/%24httpbackend&quot;&gt;模拟$ httpBackend&lt;/a&gt;交换，后者可以通过响应进行训练。</target>
        </trans-unit>
        <trans-unit id="84cba5a8d27805fd2532e7744606781e2d24ef87" translate="yes" xml:space="preserve">
          <source>During the compilation phase, the &lt;a href=&quot;compiler&quot;&gt;compiler&lt;/a&gt; matches &lt;a href=&quot;../api/ng/provider/%24compileprovider#directive.html&quot;&gt;directives&lt;/a&gt; against the DOM template. The directives usually fall into one of two categories:</source>
          <target state="translated">在编译阶段，&lt;a href=&quot;compiler&quot;&gt;编译器&lt;/a&gt;将&lt;a href=&quot;../api/ng/provider/%24compileprovider#directive.html&quot;&gt;指令&lt;/a&gt;与DOM模板进行匹配。指令通常分为两类之一：</target>
        </trans-unit>
        <trans-unit id="552c6c3ebea05d341417ee364fae8ea2af019067" translate="yes" xml:space="preserve">
          <source>During the compilation phase:</source>
          <target state="translated">在汇编阶段:</target>
        </trans-unit>
        <trans-unit id="a493125bd9c880c4ca97eb29a7017d3a9e3e64ce" translate="yes" xml:space="preserve">
          <source>During the compilation process the &lt;a href=&quot;../api/ng/service/%24compile&quot;&gt;compiler&lt;/a&gt; uses the &lt;a href=&quot;../api/ng/service/%24interpolate&quot;&gt;$interpolate&lt;/a&gt; service to see if text nodes and element attributes contain interpolation markup with embedded expressions.</source>
          <target state="translated">在编译过程中，&lt;a href=&quot;../api/ng/service/%24compile&quot;&gt;编译器&lt;/a&gt;使用&lt;a href=&quot;../api/ng/service/%24interpolate&quot;&gt;$ interpolate&lt;/a&gt;服务查看文本节点和元素属性是否包含带有嵌入式表达式的插值标记。</target>
        </trans-unit>
        <trans-unit id="6439c34c3206ba861da0f9bf5fc84e0b928b58c7" translate="yes" xml:space="preserve">
          <source>During the config: &lt;a href=&quot;../api/ng/provider/%24animateprovider#classNameFilter.html&quot;&gt;$animateProvider.classNameFilter()&lt;/a&gt;</source>
          <target state="translated">在配置过程中：&lt;a href=&quot;../api/ng/provider/%24animateprovider#classNameFilter.html&quot;&gt;$ animateProvider.classNameFilter（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60166faf8b960cb144a5a5dfe16f5efce800297f" translate="yes" xml:space="preserve">
          <source>During the config: &lt;a href=&quot;../api/ng/provider/%24animateprovider#customFilter.html&quot;&gt;$animateProvider.customFilter()&lt;/a&gt;</source>
          <target state="translated">在配置过程中：&lt;a href=&quot;../api/ng/provider/%24animateprovider#customFilter.html&quot;&gt;$ animateProvider.customFilter（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88d16957e61a3abc0b2789679717c815f5765897" translate="yes" xml:space="preserve">
          <source>During the runtime phase:</source>
          <target state="translated">在运行阶段。</target>
        </trans-unit>
        <trans-unit id="ac637ea8f1b2151f1dfdc40a4954ea8a48a7d7d3" translate="yes" xml:space="preserve">
          <source>During unit testing, we want our unit tests to run quickly and have no external dependencies so we don&amp;rsquo;t want to send &lt;a href=&quot;https://developer.mozilla.org/en/xmlhttprequest&quot;&gt;XHR&lt;/a&gt; or &lt;a href=&quot;http://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt; requests to a real server. All we really need is to verify whether a certain request has been sent or not, or alternatively just let the application make requests, respond with pre-trained responses and assert that the end result is what we expect it to be.</source>
          <target state="translated">在单元测试期间，我们希望单元测试能够快速运行并且没有外部依赖性，因此我们不想将&lt;a href=&quot;https://developer.mozilla.org/en/xmlhttprequest&quot;&gt;XHR&lt;/a&gt;或&lt;a href=&quot;http://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt;请求发送到真实服务器。我们真正需要做的只是验证是否已发送某个请求，或者只是让应用程序发出请求，以经过预先训练的响应进行响应，并断言最终结果就是我们期望的结果。</target>
        </trans-unit>
        <trans-unit id="871ea4da49e00d79d13d56d3eec2853372598b41" translate="yes" xml:space="preserve">
          <source>Dynamic Messaging</source>
          <target state="translated">动态消息传递</target>
        </trans-unit>
        <trans-unit id="bac036281464cca8457fab7f160594b9b956bffb" translate="yes" xml:space="preserve">
          <source>Dynamic responses</source>
          <target state="translated">动态反应</target>
        </trans-unit>
        <trans-unit id="ddfdb597e007e1dc4eda14345e693ee956382336" translate="yes" xml:space="preserve">
          <source>Dynamically changing an interpolated value</source>
          <target state="translated">动态改变内插值</target>
        </trans-unit>
        <trans-unit id="7ffa068184121937557c12ca97fdaa8b198c8c8e" translate="yes" xml:space="preserve">
          <source>E.g. the markup &lt;code&gt;{{ 12 | currency }}&lt;/code&gt; formats the number 12 as a currency using the &lt;a href=&quot;../api/ng/filter/currency&quot;&gt;&lt;code&gt;currency&lt;/code&gt;&lt;/a&gt; filter. The resulting value is &lt;code&gt;$12.00&lt;/code&gt;.</source>
          <target state="translated">例如，标记 &lt;code&gt;{{ 12 | currency }}&lt;/code&gt; 使用&lt;a href=&quot;../api/ng/filter/currency&quot;&gt; &lt;code&gt;currency&lt;/code&gt; &lt;/a&gt;过滤器将数字12格式化为货币。结果为 &lt;code&gt;$12.00&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="706f3f2c466550baf6f8cff74045985c0b276d2f" translate="yes" xml:space="preserve">
          <source>E.g. the markup &lt;code&gt;{{ 1234 | number:2 }}&lt;/code&gt; formats the number 1234 with 2 decimal points using the &lt;a href=&quot;../api/ng/filter/number&quot;&gt;&lt;code&gt;number&lt;/code&gt;&lt;/a&gt; filter. The resulting value is &lt;code&gt;1,234.00&lt;/code&gt;.</source>
          <target state="translated">例如标记 &lt;code&gt;{{ 1234 | number:2 }}&lt;/code&gt; 使用&lt;a href=&quot;../api/ng/filter/number&quot;&gt; &lt;code&gt;number&lt;/code&gt; &lt;/a&gt;过滤器将数字1234格式化为2个小数点。结果为 &lt;code&gt;1,234.00&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a2a94632ee79f879ff70c670fc140a79667aac46" translate="yes" xml:space="preserve">
          <source>E2E Testing</source>
          <target state="translated">E2E测试</target>
        </trans-unit>
        <trans-unit id="46cb077541331f9a16fef73d47f33279ef781780" translate="yes" xml:space="preserve">
          <source>ES6, Webpack, and JSPM Starter Project</source>
          <target state="translated">ES6、Webpack和JSPM入门项目</target>
        </trans-unit>
        <trans-unit id="ba63fe9fd9974e102c02ef7d910d4b8dddc1fa17" translate="yes" xml:space="preserve">
          <source>ES6/Typescript Best Practices</source>
          <target state="translated">ES6/Typeescript最佳实践</target>
        </trans-unit>
        <trans-unit id="648a21d0cd9f5c2567ffd87e39c8a17cf279fb77" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;../directive/form&quot;&gt;form&lt;/a&gt; directive creates an instance of &lt;code&gt;FormController&lt;/code&gt;.</source>
          <target state="translated">每个&lt;a href=&quot;../directive/form&quot;&gt;form&lt;/a&gt;指令创建一个 &lt;code&gt;FormController&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="d1c0d67675138588c0dc00ee3cda517b7f653e50" translate="yes" xml:space="preserve">
          <source>Each AngularJS application has exactly one &lt;a href=&quot;../api/ng/service/%24rootscope&quot;&gt;root scope&lt;/a&gt;, but may have any number of child scopes.</source>
          <target state="translated">每个AngularJS应用程序都只有一个&lt;a href=&quot;../api/ng/service/%24rootscope&quot;&gt;根范围&lt;/a&gt;，但可以具有任意数量的子范围。</target>
        </trans-unit>
        <trans-unit id="829715aa8f2829bcf5c7f7ab2b1d5e696bd672e1" translate="yes" xml:space="preserve">
          <source>Each directive's &lt;code&gt;compile&lt;/code&gt; functions are executed. Each &lt;code&gt;compile&lt;/code&gt; function has a chance to modify the DOM. Each &lt;code&gt;compile&lt;/code&gt; function returns a &lt;code&gt;link&lt;/code&gt; function. These functions are composed into a &quot;combined&quot; link function, which invokes each directive's returned &lt;code&gt;link&lt;/code&gt; function.</source>
          <target state="translated">每个指令的 &lt;code&gt;compile&lt;/code&gt; 功能都将执行。每个 &lt;code&gt;compile&lt;/code&gt; 功能都有机会修改DOM。每个 &lt;code&gt;compile&lt;/code&gt; 函数都返回一个 &lt;code&gt;link&lt;/code&gt; 函数。这些函数组成一个&amp;ldquo;组合&amp;rdquo;链接函数，该函数调用每个指令的返回 &lt;code&gt;link&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="03ce87fe012858dd28022ce0344110a91c5c56e7" translate="yes" xml:space="preserve">
          <source>Each element in these arrays must be one of the following:</source>
          <target state="translated">这些数组中的每一个元素必须是下列之一:</target>
        </trans-unit>
        <trans-unit id="0788a57602c88bc63b92f1ea44577c3c1372677f" translate="yes" xml:space="preserve">
          <source>Each function in the &lt;code&gt;$validators&lt;/code&gt; object receives the &lt;code&gt;modelValue&lt;/code&gt; and the &lt;code&gt;viewValue&lt;/code&gt; as parameters. AngularJS will then call &lt;code&gt;$setValidity&lt;/code&gt; internally with the function's return value (&lt;code&gt;true&lt;/code&gt;: valid, &lt;code&gt;false&lt;/code&gt;: invalid). The validation functions are executed every time an input is changed (&lt;code&gt;$setViewValue&lt;/code&gt; is called) or whenever the bound &lt;code&gt;model&lt;/code&gt; changes. Validation happens after successfully running &lt;code&gt;$parsers&lt;/code&gt; and &lt;code&gt;$formatters&lt;/code&gt;, respectively. Failed validators are stored by key in &lt;a href=&quot;../api/ng/type/ngmodel.ngmodelcontroller#%24error&quot;&gt;&lt;code&gt;ngModelController.$error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;$validators&lt;/code&gt; 对象中的每个函数都将 &lt;code&gt;modelValue&lt;/code&gt; 和 &lt;code&gt;viewValue&lt;/code&gt; 作为参数。然后，AngularJS将使用函数的返回值在内部调用 &lt;code&gt;$setValidity&lt;/code&gt; （ &lt;code&gt;true&lt;/code&gt; ：有效， &lt;code&gt;false&lt;/code&gt; ：无效）。每次更改输入（调用 &lt;code&gt;$setViewValue&lt;/code&gt; ）或绑定 &lt;code&gt;model&lt;/code&gt; 更改时，都会执行验证函数。分别在成功运行 &lt;code&gt;$parsers&lt;/code&gt; 和 &lt;code&gt;$formatters&lt;/code&gt; 之后进行验证。验证器失败通过密钥存储在&lt;a href=&quot;../api/ng/type/ngmodel.ngmodelcontroller#%24error&quot;&gt; &lt;code&gt;ngModelController.$error&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1a059e84dcbee7d4310b371af5bf3f354749be0d" translate="yes" xml:space="preserve">
          <source>Each item in the &lt;strong&gt;RouteConfig&lt;/strong&gt; for a &lt;strong&gt;Routing Component&lt;/strong&gt; is an instance of this type. It can have the following properties:</source>
          <target state="translated">&lt;strong&gt;路由组件&lt;/strong&gt;的&lt;strong&gt;RouteConfig&lt;/strong&gt;中的每个项目都是这种类型的实例。它可以具有以下属性：&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="72b188f1d17688bd4f986f5bc1d938df3660b4a5" translate="yes" xml:space="preserve">
          <source>Each key value in the parameter object is first bound to url template if present and then any excess keys are appended to the url search query after the &lt;code&gt;?&lt;/code&gt;.</source>
          <target state="translated">如果存在，则将参数对象中的每个键值首先绑定到url模板，然后将所有多余的键附加到 &lt;code&gt;?&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4db4dc45436f4f1a0c0c82c0e2621975a9bac1c" translate="yes" xml:space="preserve">
          <source>Each module can only be loaded once per injector. Usually an AngularJS app has only one injector and modules are only loaded once. Each test has its own injector and modules are loaded multiple times.</source>
          <target state="translated">每个模块在每个注入器中只能加载一次。通常一个AngularJS应用只有一个注入器,模块只能加载一次。每个测试都有自己的注入器,模块会被多次加载。</target>
        </trans-unit>
        <trans-unit id="b8c6e4ddcbc08750f981caaf013164d265bbf24d" translate="yes" xml:space="preserve">
          <source>Each provide access to a &lt;code&gt;$delegate&lt;/code&gt;, which is the instantiated service/directive/filter, prior to being passed to the service that required it.</source>
          <target state="translated">每个对象都提供对 &lt;code&gt;$delegate&lt;/code&gt; 访问权，该$ delegate是实例化的服务/指令/过滤器，然后再传递给需要它的服务。</target>
        </trans-unit>
        <trans-unit id="dda93b9c00ecb491f2d026174b8fa5dbb60e68ea" translate="yes" xml:space="preserve">
          <source>Each recipe belongs to an &lt;a href=&quot;../api/ng/type/angular.module&quot;&gt;AngularJS module&lt;/a&gt;. An AngularJS module is a bag that holds one or more recipes. And since manually keeping track of module dependencies is no fun, a module can contain information about dependencies on other modules as well.</source>
          <target state="translated">每个配方都属于&lt;a href=&quot;../api/ng/type/angular.module&quot;&gt;AngularJS模块&lt;/a&gt;。AngularJS模块是一个包含一个或多个配方的包。而且，由于手动跟踪模块的依赖性并不好玩，因此模块也可以包含有关其他模块的依赖性的信息。</target>
        </trans-unit>
        <trans-unit id="9f3ae98a5b0c131a547a93b487b4c98012168788" translate="yes" xml:space="preserve">
          <source>Each version of AngularJS 1 up to, but not including 1.6, contained an expression sandbox, which reduced the surface area of the vulnerability but never removed it. &lt;strong&gt;In AngularJS 1.6 we removed this sandbox as developers kept relying upon it as a security feature even though it was always possible to access arbitrary JavaScript code if one could control the AngularJS templates or expressions of applications.&lt;/strong&gt;</source>
          <target state="translated">直到但不包括1.6的每个AngularJS 1版本都包含一个表达式沙箱，该沙箱减少了漏洞的表面积，但从未删除。&lt;strong&gt;在AngularJS 1.6中，我们删除了此沙箱，因为即使有人可以控制AngularJS模板或应用程序的表达，始终可以访问任意JavaScript代码，但开发人员一直依赖它作为安全功能。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b51b7017f03b60f98505f01afc9017f64fb597b6" translate="yes" xml:space="preserve">
          <source>Each web application you build is composed of objects that collaborate to get stuff done. These objects need to be instantiated and wired together for the app to work. In AngularJS apps most of these objects are instantiated and wired together automatically by the &lt;a href=&quot;../api/auto/service/%24injector&quot;&gt;injector service&lt;/a&gt;.</source>
          <target state="translated">您构建的每个Web应用程序均由协作完成工作的对象组成。这些对象需要实例化并连接在一起才能使应用程序正常工作。在AngularJS应用程序中，大多数这些对象都被&lt;a href=&quot;../api/auto/service/%24injector&quot;&gt;注入器服务&lt;/a&gt;实例化并自动连接在一起。</target>
        </trans-unit>
        <trans-unit id="e08245380fe45ed1dc1a39461e8430df197a0e09" translate="yes" xml:space="preserve">
          <source>Earlier we mentioned that we also have special purpose objects that are different from services. These objects extend the framework as plugins and therefore must implement interfaces specified by AngularJS. These interfaces are Controller, Directive, Filter and Animation.</source>
          <target state="translated">前面我们提到,我们还有不同于服务的特殊目的对象。这些对象作为插件扩展了框架,因此必须实现AngularJS指定的接口。这些接口分别是Controller、Directive、Filter和Animation。</target>
        </trans-unit>
        <trans-unit id="dca48544769c52bf3b58c672f5cd3b5c747bc2f2" translate="yes" xml:space="preserve">
          <source>Effects of DOM Element re-use</source>
          <target state="translated">DOM元素重复使用的效果</target>
        </trans-unit>
        <trans-unit id="c199d835c658f8ab6c23a79e307ea446a630dc73" translate="yes" xml:space="preserve">
          <source>Either a wrapped jQuery/jqLite node or a DOMElement</source>
          <target state="translated">无论是一个封装的jQuery/jqLite节点,还是一个DOME元素。</target>
        </trans-unit>
        <trans-unit id="c5dbec72523ae614966440682a91c6aefb466e1e" translate="yes" xml:space="preserve">
          <source>Element or HTML string to compile into a template function.</source>
          <target state="translated">要编译成模板函数的元素或HTML字符串。</target>
        </trans-unit>
        <trans-unit id="9cbfd00aa5e38787a6022e42110687cd2450a209" translate="yes" xml:space="preserve">
          <source>Else compare the types themselves alphabetically.</source>
          <target state="translated">否则按字母顺序比较类型本身。</target>
        </trans-unit>
        <trans-unit id="92f004dc1ae3f95af43091d25f176aad7eb1a397" translate="yes" xml:space="preserve">
          <source>Else if one of the values is null, consider it &quot;greater than&quot; the other.</source>
          <target state="translated">如果其中一个值为空,则认为它 &quot;大于 &quot;另一个值。</target>
        </trans-unit>
        <trans-unit id="55716b221770b19d94c322e504ec2f031d1a376c" translate="yes" xml:space="preserve">
          <source>Email us at &lt;a href=&quot;mailto:security@angularjs.org&quot;&gt;security@angularjs.org&lt;/a&gt; to report any potential security issues in AngularJS.</source>
          <target state="translated">给我们发送电子邮件至&lt;a href=&quot;mailto:security@angularjs.org&quot;&gt;security@angularjs.org，&lt;/a&gt;以报告AngularJS中的任何潜在安全问题。</target>
        </trans-unit>
        <trans-unit id="099bc2374fc25e458767acd089b2e0b4bbe06521" translate="yes" xml:space="preserve">
          <source>Embedding interpolation markup inside expressions</source>
          <target state="translated">在表达式中嵌入插值标记</target>
        </trans-unit>
        <trans-unit id="b2d9626fab94fe46dbc23e11d5145543e8c891df" translate="yes" xml:space="preserve">
          <source>Emitted every time the ngInclude content is reloaded.</source>
          <target state="translated">每当ngInclude内容被重新加载时发出。</target>
        </trans-unit>
        <trans-unit id="d69747c18e6a7823e2827479f46edbc548e716c8" translate="yes" xml:space="preserve">
          <source>Emitted every time the ngInclude content is requested.</source>
          <target state="translated">每当请求ngInclude内容时就会发出。</target>
        </trans-unit>
        <trans-unit id="ccb5524240b958659fec098886cb27f13b421044" translate="yes" xml:space="preserve">
          <source>Emitted every time the ngView content is reloaded.</source>
          <target state="translated">每当ngView内容被重新加载时发出。</target>
        </trans-unit>
        <trans-unit id="5352199744d0f4dd2b1904c169630303a8240bd4" translate="yes" xml:space="preserve">
          <source>Emitted when a template HTTP request yields an erroneous response (status &amp;lt; 200 || status &amp;gt; 299)</source>
          <target state="translated">当模板HTTP请求产生错误响应时发出（状态&amp;lt;200 ||状态&amp;gt; 299）</target>
        </trans-unit>
        <trans-unit id="faf2ad99147d30fa634f5fda5836e1dedfa19477" translate="yes" xml:space="preserve">
          <source>Enable animations outside of the application DOM tree: &lt;a href=&quot;../api/ng/service/%24animate#pin.html&quot;&gt;$animate.pin()&lt;/a&gt;</source>
          <target state="translated">在应用程序DOM树之外启用动画：&lt;a href=&quot;../api/ng/service/%24animate#pin.html&quot;&gt;$ animate.pin（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2ab88d7ccb6db7d12a00ccd002d5025b4173f0a" translate="yes" xml:space="preserve">
          <source>Enable or disable SVG support in the sanitizer.</source>
          <target state="translated">在 sanitizer 中启用或禁用 SVG 支持。</target>
        </trans-unit>
        <trans-unit id="f1d9379845b51d7e57e166ae34919d84964f1127" translate="yes" xml:space="preserve">
          <source>Enables a subset of svg to be supported by the sanitizer.</source>
          <target state="translated">启用svg的一个子集,以被消毒器支持。</target>
        </trans-unit>
        <trans-unit id="143c725b84ea6f36aaaba38361a8a7f2268adbf9" translate="yes" xml:space="preserve">
          <source>Enables binding AngularJS expressions to onsubmit events.</source>
          <target state="translated">可以将AngularJS表达式绑定到onsubmit事件。</target>
        </trans-unit>
        <trans-unit id="c80853334b84e1e011526ce6f6d2efcbb632d3b2" translate="yes" xml:space="preserve">
          <source>Enables/disables SCE and returns the current value.</source>
          <target state="translated">启用/禁用SCE并返回当前值。</target>
        </trans-unit>
        <trans-unit id="1bfefb111e5dac345b0aa3b3c4a4f406e1870b9d" translate="yes" xml:space="preserve">
          <source>Enables/disables various ARIA attributes</source>
          <target state="translated">启用/禁用各种ARIA属性</target>
        </trans-unit>
        <trans-unit id="7abd6ccf643ae77e58fc651912d7d14afe3ed6be" translate="yes" xml:space="preserve">
          <source>End-to-end tests can use modules to override configuration.</source>
          <target state="translated">端到端测试可以使用模块来覆盖配置。</target>
        </trans-unit>
        <trans-unit id="fe10676ae39073acdfb80a439f4190fce12dba21" translate="yes" xml:space="preserve">
          <source>Enter a name in the Live Preview text box; the greeting below the text box changes instantly.</source>
          <target state="translated">在 &quot;实时预览 &quot;文本框中输入名称,文本框下方的问候语会立即改变。</target>
        </trans-unit>
        <trans-unit id="205fcd69afe3a8ebda34fa883e6cd9e9b086948b" translate="yes" xml:space="preserve">
          <source>Enter the AngularJS execution context by calling &lt;a href=&quot;scope&quot;&gt;scope&lt;/a&gt;&lt;code&gt;.&lt;/code&gt;&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24apply.html&quot;&gt;$apply&lt;/a&gt;&lt;code&gt;(stimulusFn)&lt;/code&gt;, where &lt;code&gt;stimulusFn&lt;/code&gt; is the work you wish to do in the AngularJS execution context.</source>
          <target state="translated">通过调用&lt;a href=&quot;scope&quot;&gt;scope&lt;/a&gt;输入AngularJS执行上下文 &lt;code&gt;.&lt;/code&gt; &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24apply.html&quot;&gt;$ apply &lt;/a&gt; &lt;code&gt;(stimulusFn)&lt;/code&gt; ，其中 &lt;code&gt;stimulusFn&lt;/code&gt; 是您希望在AngularJS执行上下文中进行的工作。</target>
        </trans-unit>
        <trans-unit id="a5a37a82bd01c55087378b21c459ede66319d8f7" translate="yes" xml:space="preserve">
          <source>Error Reference</source>
          <target state="translated">错误参考</target>
        </trans-unit>
        <trans-unit id="a25c35bd8f4f9cad8579a43221ea776b2a563e82" translate="yes" xml:space="preserve">
          <source>Escaped Interpolation</source>
          <target state="translated">逃逸插值</target>
        </trans-unit>
        <trans-unit id="218d2e528de2ed5dec55ef5059999f6d6c7e1a86" translate="yes" xml:space="preserve">
          <source>Escaped interpolation markers are only replaced with the actual interpolation markers in rendered output when the $interpolate service processes the text. So, for HTML elements interpolated by &lt;a href=&quot;%24compile&quot;&gt;$compile&lt;/a&gt;, or otherwise interpolated with the &lt;code&gt;mustHaveExpression&lt;/code&gt; parameter set to &lt;code&gt;true&lt;/code&gt;, the interpolated text must contain an unescaped interpolation expression. As such, this is typically useful only when user-data is used in rendering a template from the server, or when otherwise untrusted data is used by a directive.</source>
          <target state="translated">当$ interpolate服务处理文本时，转义的插值标记仅在呈现的输出中替换为实际的插值标记。因此，对于通过&lt;a href=&quot;%24compile&quot;&gt;$ compile&lt;/a&gt;插值的HTML元素，或通过 &lt;code&gt;mustHaveExpression&lt;/code&gt; 参数设置为 &lt;code&gt;true&lt;/code&gt; 插值的HTML元素，插值的文本必须包含未转义的插值表达式。因此，这通常仅在用户数据用于从服务器渲染模板时使用，或者在指令使用不信任数据时才有用。</target>
        </trans-unit>
        <trans-unit id="4d57d4ba2f3a7f358a90f37c48fff5bd229f3431" translate="yes" xml:space="preserve">
          <source>Escaping / Quoting</source>
          <target state="translated">逃避/引用</target>
        </trans-unit>
        <trans-unit id="fea6dd1103565fa6cc8bae9d51b299f77b6e645c" translate="yes" xml:space="preserve">
          <source>Evaluate the &lt;code&gt;greeting&lt;/code&gt;&lt;a href=&quot;expression&quot;&gt;expression&lt;/a&gt; against the scope retrieved above, and assign the result to the text of the enclosing DOM element.</source>
          <target state="translated">根据上面检索的范围评估 &lt;code&gt;greeting&lt;/code&gt; &lt;a href=&quot;expression&quot;&gt;表达式&lt;/a&gt;，并将结果分配给封闭的DOM元素的文本。</target>
        </trans-unit>
        <trans-unit id="cda22f8a7b7689be1d88d76ef009399f12f6bf88" translate="yes" xml:space="preserve">
          <source>Evaluate the given expression when the user changes the input. The expression is evaluated immediately, unlike the JavaScript onchange event which only triggers at the end of a change (usually, when the user leaves the form element or presses the return key).</source>
          <target state="translated">当用户更改输入时,对给定的表达式进行评估。表达式会立即被评估,不像JavaScript的onchange事件,它只在更改结束时触发(通常是在用户离开表单元素或按下返回键时)。</target>
        </trans-unit>
        <trans-unit id="f056dd1c6d8bd104d6ba75bafcd760d12a08ca72" translate="yes" xml:space="preserve">
          <source>Evaluated as &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt;. The expression value should evaluate to an object or an array which is observed on each &lt;a href=&quot;%24rootscope.scope#%24digest.html&quot;&gt;$digest&lt;/a&gt; cycle. Any shallow change within the collection will trigger a call to the &lt;code&gt;listener&lt;/code&gt;.</source>
          <target state="translated">评估为&lt;a href=&quot;../../../guide/expression&quot;&gt;表达式&lt;/a&gt;。表达式值应计算为在每个&lt;a href=&quot;%24rootscope.scope#%24digest.html&quot;&gt;$ digest&lt;/a&gt;循环中观察到的对象或数组。集合中的任何浅层更改都会触发对 &lt;code&gt;listener&lt;/code&gt; 的调用。</target>
        </trans-unit>
        <trans-unit id="a86c33fdabaa7b7c9f6110edee9f0ffd2acc28e1" translate="yes" xml:space="preserve">
          <source>Evaluates the expression and inserts the resulting HTML into the element in a secure way. By default, the resulting HTML content will be sanitized using the &lt;a href=&quot;../../ngsanitize/service/%24sanitize&quot;&gt;$sanitize&lt;/a&gt; service. To utilize this functionality, ensure that &lt;code&gt;$sanitize&lt;/code&gt; is available, for example, by including &lt;a href=&quot;../../ngsanitize&quot;&gt;&lt;code&gt;ngSanitize&lt;/code&gt;&lt;/a&gt; in your module's dependencies (not in core AngularJS). In order to use &lt;a href=&quot;../../ngsanitize&quot;&gt;&lt;code&gt;ngSanitize&lt;/code&gt;&lt;/a&gt; in your module's dependencies, you need to include &quot;angular-sanitize.js&quot; in your application.</source>
          <target state="translated">计算表达式并将生成的HTML以安全的方式插入到元素中。默认情况下，将使用&lt;a href=&quot;../../ngsanitize/service/%24sanitize&quot;&gt;$ sanitize&lt;/a&gt;服务对生成的HTML内容进行清理。要利用此功能，请确保 &lt;code&gt;$sanitize&lt;/code&gt; 可用，例如，通过将&lt;a href=&quot;../../ngsanitize&quot;&gt; &lt;code&gt;ngSanitize&lt;/code&gt; &lt;/a&gt;包含在模块的依赖项中（而不是在核心AngularJS中）。为了在模块的依赖&lt;a href=&quot;../../ngsanitize&quot;&gt; &lt;code&gt;ngSanitize&lt;/code&gt; &lt;/a&gt;中使用ngSanitize，您需要在应用程序中包含&amp;ldquo; angular-sanitize.js&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="9076a3c6b5f726943b0322ab3cf79864f11e9902" translate="yes" xml:space="preserve">
          <source>Evaluates the expression and inserts the resulting HTML into the element in a secure way. By default, the resulting HTML content will be sanitized using the &lt;a href=&quot;../ngsanitize/service/%24sanitize&quot;&gt;$sanitize&lt;/a&gt; service. To utilize this functionality, ensure that &lt;code&gt;$sanitize&lt;/code&gt; is available, for example, by including &lt;a href=&quot;../ngsanitize&quot;&gt;&lt;code&gt;ngSanitize&lt;/code&gt;&lt;/a&gt; in your module's dependencies (not in core AngularJS). In order to use &lt;a href=&quot;../ngsanitize&quot;&gt;&lt;code&gt;ngSanitize&lt;/code&gt;&lt;/a&gt; in your module's dependencies, you need to include &quot;angular-sanitize.js&quot; in your application.</source>
          <target state="translated">计算表达式并将生成的HTML以安全的方式插入到元素中。默认情况下，将使用&lt;a href=&quot;../ngsanitize/service/%24sanitize&quot;&gt;$ sanitize&lt;/a&gt;服务对生成的HTML内容进行清理。要利用此功能，请确保 &lt;code&gt;$sanitize&lt;/code&gt; 可用，例如，通过将&lt;a href=&quot;../ngsanitize&quot;&gt; &lt;code&gt;ngSanitize&lt;/code&gt; &lt;/a&gt;包含在模块的依赖项中（而不是在核心AngularJS中）。为了在模块的依赖&lt;a href=&quot;../ngsanitize&quot;&gt; &lt;code&gt;ngSanitize&lt;/code&gt; &lt;/a&gt;中使用ngSanitize，您需要在应用程序中包含&amp;ldquo; angular-sanitize.js&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="4fae0324b81717cfd0179935deb08738f4958c28" translate="yes" xml:space="preserve">
          <source>Event name to broadcast.</source>
          <target state="translated">要广播的事件名称。</target>
        </trans-unit>
        <trans-unit id="9ae944309054d536d760fa0eef00f071c6363b43" translate="yes" xml:space="preserve">
          <source>Event name to emit.</source>
          <target state="translated">要发出的事件名称。</target>
        </trans-unit>
        <trans-unit id="9a3b19e98675ab2f955bd6ef73c0dffd2dc79c70" translate="yes" xml:space="preserve">
          <source>Event name to listen on.</source>
          <target state="translated">要收听的事件名称。</target>
        </trans-unit>
        <trans-unit id="efd8912106134f28159a082b13ebc510cdb36ce0" translate="yes" xml:space="preserve">
          <source>Event object (see &lt;a href=&quot;%24rootscope.scope#%24on.html&quot;&gt;&lt;code&gt;$rootScope.Scope&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">事件对象（请参阅&lt;a href=&quot;%24rootscope.scope#%24on.html&quot;&gt; &lt;code&gt;$rootScope.Scope&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5256cf2d05f2a2afff96813dfafbe9056fe17f54" translate="yes" xml:space="preserve">
          <source>Event object, see &lt;a href=&quot;%24rootscope.scope#%24on.html&quot;&gt;&lt;code&gt;$rootScope.Scope&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">事件对象，请参见&lt;a href=&quot;%24rootscope.scope#%24on.html&quot;&gt; &lt;code&gt;$rootScope.Scope&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89991e609ea2e58df8701321c81f1c2b67ca16f0" translate="yes" xml:space="preserve">
          <source>Event that triggered the update.</source>
          <target state="translated">触发更新的事件。</target>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="dc6ee5b710b84a06b1994d13c09750db60be49d9" translate="yes" xml:space="preserve">
          <source>Every application has a single root &lt;a href=&quot;../type/%24rootscope.scope&quot;&gt;scope&lt;/a&gt;. All other scopes are descendant scopes of the root scope. Scopes provide separation between the model and the view, via a mechanism for watching the model for changes. They also provide event emission/broadcast and subscription facility. See the &lt;a href=&quot;../../../guide/scope&quot;&gt;developer guide on scopes&lt;/a&gt;.</source>
          <target state="translated">每个应用程序都有一个根&lt;a href=&quot;../type/%24rootscope.scope&quot;&gt;范围&lt;/a&gt;。所有其他作用域是根作用域的后代作用域。范围通过监视模型变化的机制提供了模型和视图之间的分离。他们还提供事件发射/广播和订阅功能。请参阅&lt;a href=&quot;../../../guide/scope&quot;&gt;有关范围&lt;/a&gt;的开发人员指南。</target>
        </trans-unit>
        <trans-unit id="c6fed10186b9a7e4a176e17c80c83b6d2a93e97a" translate="yes" xml:space="preserve">
          <source>Every application has a single root &lt;a href=&quot;type/%24rootscope.scope&quot;&gt;scope&lt;/a&gt;. All other scopes are descendant scopes of the root scope. Scopes provide separation between the model and the view, via a mechanism for watching the model for changes. They also provide event emission/broadcast and subscription facility. See the &lt;a href=&quot;../../guide/scope&quot;&gt;developer guide on scopes&lt;/a&gt;.</source>
          <target state="translated">每个应用程序都有一个根&lt;a href=&quot;type/%24rootscope.scope&quot;&gt;范围&lt;/a&gt;。所有其他作用域是根作用域的后代作用域。范围通过监视模型变化的机制提供了模型和视图之间的分离。他们还提供事件发射/广播和订阅功能。请参阅&lt;a href=&quot;../../guide/scope&quot;&gt;有关范围&lt;/a&gt;的开发人员指南。</target>
        </trans-unit>
        <trans-unit id="8932161648474502d4579225b7a5010ba4feeb3a" translate="yes" xml:space="preserve">
          <source>Everything you need to build a CRUD app in a cohesive set: Data-binding, basic templating directives, form validation, routing, deep-linking, reusable components and dependency injection.</source>
          <target state="translated">构建一个CRUD应用程序所需的一切都在一个凝聚的集合中。数据绑定、基本模板指令、表单验证、路由、深度链接、可重用组件和依赖注入。</target>
        </trans-unit>
        <trans-unit id="9eed938865a4ca53d208e8ce6cf848543e153677" translate="yes" xml:space="preserve">
          <source>Exact matches always win over keyword matches. Therefore, if you define both &lt;code&gt;=0&lt;/code&gt; and &lt;code&gt;zero&lt;/code&gt;, when the value of the expression is zero, the &lt;code&gt;=0&lt;/code&gt; message is the one that will be selected. (The duplicate keyword categories are helpful when used with the optional &lt;code&gt;offset&lt;/code&gt; syntax described later.)</source>
          <target state="translated">完全匹配始终会胜过关键字匹配。因此，如果同时定义 &lt;code&gt;=0&lt;/code&gt; 和 &lt;code&gt;zero&lt;/code&gt; ，则当表达式的值为零时，将选择 &lt;code&gt;=0&lt;/code&gt; 消息。（与稍后描述的可选 &lt;code&gt;offset&lt;/code&gt; 语法一起使用时，重复的关键字类别会很有帮助。）</target>
        </trans-unit>
        <trans-unit id="1b2e441413acb202181b009a7cb2e30e8082e0bf" translate="yes" xml:space="preserve">
          <source>Exact matches are written as the equal sign followed by the exact value. &lt;code&gt;=0&lt;/code&gt;, &lt;code&gt;=1&lt;/code&gt;, &lt;code&gt;=2&lt;/code&gt; and &lt;code&gt;=123&lt;/code&gt; are all examples of exact matches. Note that there should be no space between the equal sign and the numeric value.</source>
          <target state="translated">精确匹配记为等号，后跟精确值。 &lt;code&gt;=0&lt;/code&gt; ， &lt;code&gt;=1&lt;/code&gt; ， &lt;code&gt;=2&lt;/code&gt; 和 &lt;code&gt;=123&lt;/code&gt; 都是完全匹配的示例。请注意，等号和数值之间不应有空格。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="17aeb04f751fae1ae3f4ad0b2a7c8e59cbb96c5e" translate="yes" xml:space="preserve">
          <source>Example Applications</source>
          <target state="translated">应用实例</target>
        </trans-unit>
        <trans-unit id="7c784376e50e16848980dbe227261dcf8fd3cd3c" translate="yes" xml:space="preserve">
          <source>Example configuration</source>
          <target state="translated">配置示例</target>
        </trans-unit>
        <trans-unit id="916ba94adedad329829de9e3198135460b08ea09" translate="yes" xml:space="preserve">
          <source>Example of a component tree</source>
          <target state="translated">组件树的例子</target>
        </trans-unit>
        <trans-unit id="1ee0a88badf0098cd9392d2a3a772e37baa2fda5" translate="yes" xml:space="preserve">
          <source>Example of what a typical jasmine tests looks like with the inject method.</source>
          <target state="translated">一个典型的茉莉花测试的例子是什么样子的注入方法。</target>
        </trans-unit>
        <trans-unit id="07f064f0c6b85d5dffb3101177b89f9992c1c9c7" translate="yes" xml:space="preserve">
          <source>Example test:</source>
          <target state="translated">测试示例:</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="62dfa7f10882e77a87092f507d379f2402d87987" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;&amp;lt;a href=&quot;/ext/link?a=b&quot; target=&quot;_self&quot;&amp;gt;link&amp;lt;/a&amp;gt;&lt;/code&gt;</source>
          <target state="translated">示例： &lt;code&gt;&amp;lt;a href=&quot;/ext/link?a=b&quot; target=&quot;_self&quot;&amp;gt;link&amp;lt;/a&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c32374b44f69dd61e35af260b06e3345095cb0e9" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;&amp;lt;a href=&quot;/not-my-base/link&quot;&amp;gt;link&amp;lt;/a&amp;gt;&lt;/code&gt;</source>
          <target state="translated">示例： &lt;code&gt;&amp;lt;a href=&quot;/not-my-base/link&quot;&amp;gt;link&amp;lt;/a&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5706b247d2f0a121689f2b656388525706d03e11" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;&amp;lt;a href=&quot;http://angularjs.org/&quot;&amp;gt;link&amp;lt;/a&amp;gt;&lt;/code&gt;</source>
          <target state="translated">示例： &lt;code&gt;&amp;lt;a href=&quot;http://angularjs.org/&quot;&amp;gt;link&amp;lt;/a&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="7bb6af775c57b33034454a0b76f9d211912e7f56" translate="yes" xml:space="preserve">
          <source>Exception associated with the error.</source>
          <target state="translated">与错误相关的异常。</target>
        </trans-unit>
        <trans-unit id="3c931b480d9d9bfc8842e1d02f1f24126be988bc" translate="yes" xml:space="preserve">
          <source>Execute this function after injector creation. Useful for application initialization.</source>
          <target state="translated">在创建注射器后执行此函数。用于应用程序的初始化。</target>
        </trans-unit>
        <trans-unit id="086045d75cb70d0de25ecacb2e252ee609998080" translate="yes" xml:space="preserve">
          <source>Execute this function on module load. Useful for service configuration.</source>
          <target state="translated">在模块加载时执行此功能。用于服务配置。</target>
        </trans-unit>
        <trans-unit id="60db8af3d71e63425912639e5639bd857a345c69" translate="yes" xml:space="preserve">
          <source>Executed after the child elements are linked.</source>
          <target state="translated">在子元素被链接后执行。</target>
        </trans-unit>
        <trans-unit id="2f8e9afcb55d879e3172b4ff3edb0f541f0a203d" translate="yes" xml:space="preserve">
          <source>Executed before the child elements are linked. Not safe to do DOM transformation since the compiler linking function will fail to locate the correct elements for linking.</source>
          <target state="translated">在子元素被链接之前执行。做DOM转换时不安全,因为编译器的链接函数将无法找到正确的元素进行链接。</target>
        </trans-unit>
        <trans-unit id="a474756a35892f6f1337f53303e90f0d73ff2f19" translate="yes" xml:space="preserve">
          <source>Executes the &lt;code&gt;expression&lt;/code&gt; on the current scope and returns the result. Any exceptions in the expression are propagated (uncaught). This is useful when evaluating AngularJS expressions.</source>
          <target state="translated">在当前作用域上执行 &lt;code&gt;expression&lt;/code&gt; 并返回结果。表达式中的任何异常都会传播（未捕获）。这在评估AngularJS表达式时很有用。</target>
        </trans-unit>
        <trans-unit id="4d7dabbbb9314a685e95e955e06bc8dd0125cef5" translate="yes" xml:space="preserve">
          <source>Executes the expression on the current scope at a later point in time.</source>
          <target state="translated">在以后的时间点执行当前作用域的表达式。</target>
        </trans-unit>
        <trans-unit id="9df4399b6f3ff9926ed5500724ef427c968e367d" translate="yes" xml:space="preserve">
          <source>Exposes the current URL in the browser address bar, so you can</source>
          <target state="translated">在浏览器地址栏中显示当前的URL,所以你可以</target>
        </trans-unit>
        <trans-unit id="628cde53fd14624d568dab4d3637fdef86c20b64" translate="yes" xml:space="preserve">
          <source>Expression evaluation is forgiving to undefined and null. In JavaScript, evaluating &lt;code&gt;a.b.c&lt;/code&gt; throws an exception if &lt;code&gt;a&lt;/code&gt; is not an object. While this makes sense for a general purpose language, the expression evaluations are primarily used for data binding, which often look like this:</source>
          <target state="translated">表达式评估宽恕undefined和null。在JavaScript中，如果 &lt;code&gt;a&lt;/code&gt; 不是对象，则评估 &lt;code&gt;a.b.c&lt;/code&gt; 会引发异常。尽管这对于通用语言是有意义的，但是表达式评估主要用于数据绑定，通常看起来像这样：</target>
        </trans-unit>
        <trans-unit id="0accf77dcec253c18fdfdc78fc6ec09ea004edfb" translate="yes" xml:space="preserve">
          <source>Expression that is evaluated on each &lt;a href=&quot;%24rootscope.scope#%24digest.html&quot;&gt;$digest&lt;/a&gt; cycle. A change in the return value triggers a call to the &lt;code&gt;listener&lt;/code&gt;.</source>
          <target state="translated">在每个&lt;a href=&quot;%24rootscope.scope#%24digest.html&quot;&gt;$ digest&lt;/a&gt;循环上评估的表达式。返回值的更改会触发对 &lt;code&gt;listener&lt;/code&gt; 的调用。</target>
        </trans-unit>
        <trans-unit id="85ae6863e6e6040f384b4b6dc569f9eb4a64e58c" translate="yes" xml:space="preserve">
          <source>Expression to evaluate when a new partial is loaded.</source>
          <target state="translated">当一个新的部分被加载时要评估的表达式。</target>
        </trans-unit>
        <trans-unit id="77456688d291ad4f5b4e8d91f041eeb7a5e2de52" translate="yes" xml:space="preserve">
          <source>Expression to evaluate whenever the view updates.</source>
          <target state="translated">每当视图更新时要评估的表达式。</target>
        </trans-unit>
        <trans-unit id="ae5fccd8dcd8fc317f8edfc8259af86cd2967a29" translate="yes" xml:space="preserve">
          <source>Expressions</source>
          <target state="translated">Expressions</target>
        </trans-unit>
        <trans-unit id="cf78f62fb7990fb89d458935ffb1846f90b586a1" translate="yes" xml:space="preserve">
          <source>Expressions, like the one defined for the &lt;code&gt;ngClick&lt;/code&gt; directive in the example below, are evaluated with respect to the current scope. Therefore, there is no risk of inadvertently coding in a dependency on a global value in such an expression.</source>
          <target state="translated">表达式（如以下示例中为 &lt;code&gt;ngClick&lt;/code&gt; 指令定义的表达式）将根据当前作用域进行求值。因此，不存在在这样的表达式中无意地依赖于全局值进行编码的风险。</target>
        </trans-unit>
        <trans-unit id="7baf9e4023c205c51428907b8b5f7094a18f4b9f" translate="yes" xml:space="preserve">
          <source>Extends the built-in list of valid attributes, i.e. attributes that are considered safe and are not stripped off during sanitization.</source>
          <target state="translated">扩展了内置的有效属性列表,即被认为是安全的属性,在消毒过程中不会被剥离。</target>
        </trans-unit>
        <trans-unit id="c966928e5c88a4a9f1ab15febec0c95a059f8e2a" translate="yes" xml:space="preserve">
          <source>Extends the built-in lists of valid HTML/SVG elements, i.e. elements that are considered safe and are not stripped off during sanitization. You can extend the following lists of elements:</source>
          <target state="translated">扩展有效的HTML/SVG元素的内置列表,即那些被认为是安全的元素,在消毒过程中不会被剥离。您可以扩展以下元素列表。</target>
        </trans-unit>
        <trans-unit id="2b14b339ebedbd999c77e9b9f5c7d22127b40d2f" translate="yes" xml:space="preserve">
          <source>Extends the destination object &lt;code&gt;dst&lt;/code&gt; by copying own enumerable properties from the &lt;code&gt;src&lt;/code&gt; object(s) to &lt;code&gt;dst&lt;/code&gt;. You can specify multiple &lt;code&gt;src&lt;/code&gt; objects. If you want to preserve original objects, you can do so by passing an empty object as the target: &lt;code&gt;var object = angular.extend({}, object1, object2)&lt;/code&gt;.</source>
          <target state="translated">通过将自己的可枚举属性从 &lt;code&gt;src&lt;/code&gt; 对象复制到 &lt;code&gt;dst&lt;/code&gt; 来扩展目标对象 &lt;code&gt;dst&lt;/code&gt; 。您可以指定多个 &lt;code&gt;src&lt;/code&gt; 对象。如果要保留原始对象，可以通过传递一个空对象作为目标来实现： &lt;code&gt;var object = angular.extend({}, object1, object2)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed06ca00010de70fa6e3ffdb999c3f9e5c99bcb6" translate="yes" xml:space="preserve">
          <source>External AngularJS resources</source>
          <target state="translated">外部AngularJS资源</target>
        </trans-unit>
        <trans-unit id="be313f8149a2d30f8327ee70864cf3d4946285a6" translate="yes" xml:space="preserve">
          <source>External Resources</source>
          <target state="translated">外部资源</target>
        </trans-unit>
        <trans-unit id="39ad1c4756a089e469b5ec792fe50629bec8336f" translate="yes" xml:space="preserve">
          <source>Extract the contents of the element where the directive appears and make it available to the directive. The contents are compiled and provided to the directive as a &lt;strong&gt;transclusion function&lt;/strong&gt;. See the &lt;a href=&quot;%24compile#transclusion.html&quot;&gt;Transclusion&lt;/a&gt; section below.</source>
          <target state="translated">提取指令出现的元素的内容，并使其可用于指令。内容被编译并作为&lt;strong&gt;包含函数&lt;/strong&gt;提供给指令。见&lt;a href=&quot;%24compile#transclusion.html&quot;&gt;Transclusion&lt;/a&gt;节。</target>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="e47b9b1021034a56b7d5f70d92d0481524e78f69" translate="yes" xml:space="preserve">
          <source>Factory</source>
          <target state="translated">Factory</target>
        </trans-unit>
        <trans-unit id="3156b346a064c1db3b4dfdc8e539af534a00f477" translate="yes" xml:space="preserve">
          <source>Factory Methods</source>
          <target state="translated">工厂方法</target>
        </trans-unit>
        <trans-unit id="ef4319d2d02cf8972a8e4e597c5b497d7352cc3d" translate="yes" xml:space="preserve">
          <source>Factory Recipe</source>
          <target state="translated">工厂配方</target>
        </trans-unit>
        <trans-unit id="c8e6696140d2e75575a027e3db926b81e7fa86b8" translate="yes" xml:space="preserve">
          <source>Factory and Service are the most commonly used recipes. The only difference between them is that the Service recipe works better for objects of a custom type, while the Factory can produce JavaScript primitives and functions.</source>
          <target state="translated">Factory和Service是最常用的配方。它们之间唯一的区别是,Service配方对自定义类型的对象效果更好,而Factory可以产生JavaScript基元和函数。</target>
        </trans-unit>
        <trans-unit id="028dd1450ba58561838de3f298fd05498d14e273" translate="yes" xml:space="preserve">
          <source>Factory function for creating new instance of an animation.</source>
          <target state="translated">工厂函数,用于创建新的动画实例。</target>
        </trans-unit>
        <trans-unit id="3ee6fd00a202d032c40a78907b76870f53db49dc" translate="yes" xml:space="preserve">
          <source>Factory function for creating new instance of directives.</source>
          <target state="translated">用于创建新的指令实例的工厂函数。</target>
        </trans-unit>
        <trans-unit id="00b5e72ae89de1590849f21e6c25c0567db4d3f8" translate="yes" xml:space="preserve">
          <source>Factory function for creating new instance of filter.</source>
          <target state="translated">用于创建新的过滤器实例的工厂函数。</target>
        </trans-unit>
        <trans-unit id="cc3812a493330e545d9923589baae8e606e23d7f" translate="yes" xml:space="preserve">
          <source>Factory function used to create XMLHttpRequest objects.</source>
          <target state="translated">用于创建XMLHttpRequest对象的工厂函数。</target>
        </trans-unit>
        <trans-unit id="66507c8df90678391bccbb22d7912a1e54a7b768" translate="yes" xml:space="preserve">
          <source>Factory that constructs &lt;a href=&quot;../type/%24cachefactory.cache&quot;&gt;Cache&lt;/a&gt; objects and gives access to them.</source>
          <target state="translated">构造&lt;a href=&quot;../type/%24cachefactory.cache&quot;&gt;Cache&lt;/a&gt;对象并提供对其访问权限的工厂。</target>
        </trans-unit>
        <trans-unit id="6a2e0291c6da34749a8ac6df7b544977c583fc48" translate="yes" xml:space="preserve">
          <source>Factory that constructs &lt;a href=&quot;type/%24cachefactory.cache&quot;&gt;Cache&lt;/a&gt; objects and gives access to them.</source>
          <target state="translated">构造&lt;a href=&quot;type/%24cachefactory.cache&quot;&gt;Cache&lt;/a&gt;对象并提供对其访问权限的工厂。</target>
        </trans-unit>
        <trans-unit id="33ad5a927dac4ab275ae4ea2e1b605163a18a5a6" translate="yes" xml:space="preserve">
          <source>Failed interpolated expressions in &lt;code&gt;ng-href&lt;/code&gt; attributes can easily go unnoticed. We can decorate &lt;code&gt;ngHref&lt;/code&gt; to warn us of those conditions.</source>
          <target state="translated">&lt;code&gt;ng-href&lt;/code&gt; 属性中失败的插值表达式很容易被忽略。我们可以装饰 &lt;code&gt;ngHref&lt;/code&gt; 来警告我们这些情况。</target>
        </trans-unit>
        <trans-unit id="022a478813680131790030507e1c1390d5280b3b" translate="yes" xml:space="preserve">
          <source>Fake HTTP backend implementation suitable for end-to-end testing or backend-less development of applications that use the &lt;a href=&quot;../../ng/service/%24http&quot;&gt;$http service&lt;/a&gt;.</source>
          <target state="translated">伪HTTP后端实现，适用于使用&lt;a href=&quot;../../ng/service/%24http&quot;&gt;$ http服务&lt;/a&gt;的应用程序的端到端测试或无后端开发。</target>
        </trans-unit>
        <trans-unit id="576115681ace0f2ae10133aafeaa28843f3bceae" translate="yes" xml:space="preserve">
          <source>Fake HTTP backend implementation suitable for end-to-end testing or backend-less development of applications that use the &lt;a href=&quot;../ng/service/%24http&quot;&gt;$http service&lt;/a&gt;.</source>
          <target state="translated">伪HTTP后端实现，适用于使用&lt;a href=&quot;../ng/service/%24http&quot;&gt;$ http服务&lt;/a&gt;的应用程序的端到端测试或无后端开发。</target>
        </trans-unit>
        <trans-unit id="b961aa07954a84612068135eb6d91115ca7b9b12" translate="yes" xml:space="preserve">
          <source>Fake HTTP backend implementation suitable for end-to-end testing or backend-less development of applications that use the &lt;a href=&quot;ng/service/%24http&quot;&gt;$http service&lt;/a&gt;.</source>
          <target state="translated">伪HTTP后端实现，适用于使用&lt;a href=&quot;ng/service/%24http&quot;&gt;$ http服务&lt;/a&gt;的应用程序的端到端测试或无后端开发。</target>
        </trans-unit>
        <trans-unit id="2bea11d5d7c3b57fb31b4af107d8e23ff5f192ac" translate="yes" xml:space="preserve">
          <source>Fake HTTP backend implementation suitable for unit testing applications that use the &lt;a href=&quot;../../ng/service/%24http&quot;&gt;$http service&lt;/a&gt;.</source>
          <target state="translated">伪HTTP后端实现，适用于使用&lt;a href=&quot;../../ng/service/%24http&quot;&gt;$ http服务的&lt;/a&gt;单元测试应用程序。</target>
        </trans-unit>
        <trans-unit id="dc58c413dd761b834fc17ee464cbf2c2b1de608e" translate="yes" xml:space="preserve">
          <source>Fake HTTP backend implementation suitable for unit testing applications that use the &lt;a href=&quot;../ng/service/%24http&quot;&gt;$http service&lt;/a&gt;.</source>
          <target state="translated">伪HTTP后端实现，适用于使用&lt;a href=&quot;../ng/service/%24http&quot;&gt;$ http服务的&lt;/a&gt;单元测试应用程序。</target>
        </trans-unit>
        <trans-unit id="0f28b305a959cfe601c149a9dfacea0ea1a23943" translate="yes" xml:space="preserve">
          <source>Fake HTTP backend implementation suitable for unit testing applications that use the &lt;a href=&quot;ng/service/%24http&quot;&gt;$http service&lt;/a&gt;.</source>
          <target state="translated">伪HTTP后端实现，适用于使用&lt;a href=&quot;ng/service/%24http&quot;&gt;$ http服务的&lt;/a&gt;单元测试应用程序。</target>
        </trans-unit>
        <trans-unit id="2b6546af28f173c1cc2dec94a741c3e78cbdbce9" translate="yes" xml:space="preserve">
          <source>Fallback for legacy browsers</source>
          <target state="translated">传统浏览器的回退</target>
        </trans-unit>
        <trans-unit id="28db5b5a50621fb409af99bca4f8b752427e4a5c" translate="yes" xml:space="preserve">
          <source>Feature &amp;amp; Bug Tracker</source>
          <target state="translated">功能和错误跟踪器</target>
        </trans-unit>
        <trans-unit id="37565aacce4ed29b047384a80a69fe751d32457a" translate="yes" xml:space="preserve">
          <source>Features / Recipe type</source>
          <target state="translated">特点/配方类型</target>
        </trans-unit>
        <trans-unit id="04e7c6a718bae0ab2d3f26efc985083798ff0736" translate="yes" xml:space="preserve">
          <source>Feel free also mix transitions and keyframes together as well as any other CSS classes on the same element.</source>
          <target state="translated">也可以自由地将过渡和关键帧混合在一起,以及在同一元素上的任何其他CSS类。</target>
        </trans-unit>
        <trans-unit id="5c17b605508aeec026cd4b0eba633087d6e85345" translate="yes" xml:space="preserve">
          <source>Feel free to use other structural directives such as ng-if and ng-switch to further control what messages are active and when. Be careful, if you place ng-message on the same element as these structural directives, AngularJS may not be able to determine if a message is active or not. Therefore it is best to place the ng-message on a child element of the structural directive.</source>
          <target state="translated">可以自由使用其他结构指令,如ng-if和ng-switch来进一步控制什么消息是激活的,什么时候激活。要注意,如果你把ng-message和这些结构指令放在同一个元素上,AngularJS可能无法确定消息是否处于激活状态。因此最好将ng-message放在结构指令的子元素上。</target>
        </trans-unit>
        <trans-unit id="b5c660cb22aa8077dd6a3d7e39e98d1eba6cd24e" translate="yes" xml:space="preserve">
          <source>Fetches, compiles and includes an external HTML fragment.</source>
          <target state="translated">获取、编译并包含一个外部HTML片段。</target>
        </trans-unit>
        <trans-unit id="d7decf1aa22b02ae8abf9a96849ee423eee838e4" translate="yes" xml:space="preserve">
          <source>Filter</source>
          <target state="translated">Filter</target>
        </trans-unit>
        <trans-unit id="958cb2148933330b690b4c6657039b40197736c4" translate="yes" xml:space="preserve">
          <source>Filter components in ng</source>
          <target state="translated">ng中的过滤器组件</target>
        </trans-unit>
        <trans-unit id="313a96c8d6aa3fcf071911deb5c09c4a10f87451" translate="yes" xml:space="preserve">
          <source>Filter components in ngSanitize</source>
          <target state="translated">ngSanitize中的过滤组件</target>
        </trans-unit>
        <trans-unit id="0fa8c3951ddd4bf377d1a463b75966dd0eab1fcd" translate="yes" xml:space="preserve">
          <source>Filter name - this must be a valid AngularJS expression identifier</source>
          <target state="translated">过滤器名称--这必须是一个有效的AngularJS表达式标识。</target>
        </trans-unit>
        <trans-unit id="590dca26d3697ff206c7510b4a1ea098ac9d1127" translate="yes" xml:space="preserve">
          <source>Filter output &amp;mdash; Use &lt;a href=&quot;filter&quot;&gt;AngularJS filters&lt;/a&gt; instead.</source>
          <target state="translated">过滤器输出-改用&lt;a href=&quot;filter&quot;&gt;AngularJS过滤器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="96e578211aa295317cf257310712fa28ccd8f6c6" translate="yes" xml:space="preserve">
          <source>Filters</source>
          <target state="translated">Filters</target>
        </trans-unit>
        <trans-unit id="699dd39da1d524706c0ac40e80676a65a7ee3d75" translate="yes" xml:space="preserve">
          <source>Filters are just functions which transform input to an output. However filters need to be Dependency Injected. To achieve this a filter definition consists of a factory function which is annotated with dependencies and is responsible for creating a filter function.</source>
          <target state="translated">过滤器只是将输入转化为输出的函数。然而,过滤器需要被注入依赖关系(Dependency Injected)。为了达到这个目的,过滤器的定义由一个工厂函数组成,这个工厂函数被注解为依赖关系,并负责创建一个过滤器函数。</target>
        </trans-unit>
        <trans-unit id="4f123f5fc885990f073d8e875ec587859f544592" translate="yes" xml:space="preserve">
          <source>Filters are used for formatting data displayed to the user.</source>
          <target state="translated">过滤器用于格式化显示给用户的数据。</target>
        </trans-unit>
        <trans-unit id="529dad0d0ff38bfbf459af3aac0d7bf3af26d043" translate="yes" xml:space="preserve">
          <source>Filters can be applied to expressions in view templates using the following syntax:</source>
          <target state="translated">可以使用以下语法将过滤器应用于视图模板中的表达式。</target>
        </trans-unit>
        <trans-unit id="b0c6a437ea6f5579b59312d1da2316b3e28c48c6" translate="yes" xml:space="preserve">
          <source>Filters can be applied to the result of another filter. This is called &quot;chaining&quot; and uses the following syntax:</source>
          <target state="translated">过滤器可以应用于另一个过滤器的结果。这就是所谓的 &quot;链式&quot;,使用的语法如下:</target>
        </trans-unit>
        <trans-unit id="55335aa85bcb3866e73d19fd2d724a8e66a43b7f" translate="yes" xml:space="preserve">
          <source>Filters format the value of an expression for display to the user. They can be used in view templates, controllers or services. AngularJS comes with a collection of &lt;a href=&quot;../api/ng/filter&quot;&gt;built-in filters&lt;/a&gt;, but it is easy to define your own as well.</source>
          <target state="translated">筛选器格式化表达式的值以显示给用户。它们可以在视图模板，控制器或服务中使用。AngularJS附带了一组&lt;a href=&quot;../api/ng/filter&quot;&gt;内置过滤器&lt;/a&gt;，但是定义自己的过滤器也很容易。</target>
        </trans-unit>
        <trans-unit id="682562f1b49ae6b0a648c1ac925de5d406869964" translate="yes" xml:space="preserve">
          <source>Filters may have arguments. The syntax for this is</source>
          <target state="translated">过滤器可以有参数。这方面的语法是</target>
        </trans-unit>
        <trans-unit id="30c736d62b49c588e1fe0f61717e96ddba143772" translate="yes" xml:space="preserve">
          <source>Filters that are marked as &lt;code&gt;$stateful&lt;/code&gt; are also executed on each $digest. See &lt;a href=&quot;filter#stateful-filters.html&quot;&gt;Stateful filters&lt;/a&gt; for more information. Note that no AngularJS core filters are $stateful.</source>
          <target state="translated">标记为 &lt;code&gt;$stateful&lt;/code&gt; 过滤器也会在每个$ digest上执行。有关更多信息，请参见&lt;a href=&quot;filter#stateful-filters.html&quot;&gt;有状态过滤器&lt;/a&gt;。请注意，没有AngularJS核心过滤器是有状态的。</target>
        </trans-unit>
        <trans-unit id="66c30abd8d699d84caba4d7a205c80691b2213c7" translate="yes" xml:space="preserve">
          <source>Finally, &lt;strong&gt;the blacklist overrides the whitelist&lt;/strong&gt; and has the final say.</source>
          <target state="translated">最后，&lt;strong&gt;黑名单将覆盖白名单&lt;/strong&gt;并拥有最终发言权。</target>
        </trans-unit>
        <trans-unit id="3b6d818fbadda9b37e12f8c2201c1880d5bffeaf" translate="yes" xml:space="preserve">
          <source>Finally, Jasmine provides matchers which let you make assertions:</source>
          <target state="translated">最后,Jasmine提供了匹配器,让你进行断言。</target>
        </trans-unit>
        <trans-unit id="b20b914a19775c7d6d718aa11a19eb2c2aea25c1" translate="yes" xml:space="preserve">
          <source>Finally, in an attempt to simplify things, if a predicate returns an object as the extracted value for an item, &lt;code&gt;orderBy&lt;/code&gt; will try to convert that object to a primitive value, before passing it to the comparator. The following rules govern the conversion:</source>
          <target state="translated">最后，为简化操作，如果谓词返回对象作为项目的提取值，则 &lt;code&gt;orderBy&lt;/code&gt; 将尝试将该对象转换为原始值，然后再将其传递给比较器。以下规则控制转换：</target>
        </trans-unit>
        <trans-unit id="07f4fb01f5ca9fb0f54a74c5ff4ac147e27960d5" translate="yes" xml:space="preserve">
          <source>Finally, load the module in your application by adding it as a dependent module:</source>
          <target state="translated">最后,将该模块作为一个依赖模块添加到你的应用程序中。</target>
        </trans-unit>
        <trans-unit id="fdccbab2920c960c12560765b2c4dd6408e9e441" translate="yes" xml:space="preserve">
          <source>Find out more information about each directive by reading the &lt;a href=&quot;../guide/accessibility&quot;&gt;ngAria Developer Guide&lt;/a&gt;.</source>
          <target state="translated">阅读《&lt;a href=&quot;../guide/accessibility&quot;&gt;ngAria开发人员指南》&lt;/a&gt;以找到有关每个指令的更多信息。</target>
        </trans-unit>
        <trans-unit id="ffa9aa79cbd2923d9b3db7b608c702e52b23423e" translate="yes" xml:space="preserve">
          <source>Finds links in text input and turns them into html links. Supports &lt;code&gt;http/https/ftp/sftp/mailto&lt;/code&gt; and plain email address links.</source>
          <target state="translated">在文本输入中查找链接，并将其转换为html链接。支持 &lt;code&gt;http/https/ftp/sftp/mailto&lt;/code&gt; 和纯电子邮件地址链接。</target>
        </trans-unit>
        <trans-unit id="b477acda5b9a9fa11e6ec90588718df5fca3ceb9" translate="yes" xml:space="preserve">
          <source>Fire up a screen reader such as VoiceOver or NVDA to check for ARIA support. &lt;a href=&quot;http://webaim.org/articles/screenreader_testing/&quot;&gt;Helpful screen reader tips.&lt;/a&gt;</source>
          <target state="translated">启动屏幕阅读器，例如VoiceOver或NVDA，以检查是否支持ARIA。&lt;a href=&quot;http://webaim.org/articles/screenreader_testing/&quot;&gt;有用的屏幕阅读器提示。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="255e96fff7006defdcfa0768091004d2cadf02d1" translate="yes" xml:space="preserve">
          <source>First create an AngularJS module that will hold the service definition. (The empty array passed as the second parameter means that this module does not depend on any other modules.)</source>
          <target state="translated">首先创建一个AngularJS模块,用来存放服务定义。(作为第二个参数传递的空数组意味着这个模块不依赖于任何其他模块。)</target>
        </trans-unit>
        <trans-unit id="d323989dc2db49f0060887626146a6c49dae68b2" translate="yes" xml:space="preserve">
          <source>First let's talk about the &lt;a href=&quot;../api/ng/provider/%24compileprovider#directive.html&quot;&gt;API for registering directives&lt;/a&gt;. Much like controllers, directives are registered on modules. To register a directive, you use the &lt;code&gt;module.directive&lt;/code&gt; API. &lt;code&gt;module.directive&lt;/code&gt; takes the &lt;a href=&quot;directive#matching-directives.html&quot;&gt;normalized&lt;/a&gt; directive name followed by a &lt;strong&gt;factory function.&lt;/strong&gt; This factory function should return an object with the different options to tell &lt;code&gt;$compile&lt;/code&gt; how the directive should behave when matched.</source>
          <target state="translated">首先，让我们谈谈&lt;a href=&quot;../api/ng/provider/%24compileprovider#directive.html&quot;&gt;注册指令&lt;/a&gt;的API。就像控制器一样，指令在模块上注册。要注册指令，请使用 &lt;code&gt;module.directive&lt;/code&gt; API。 &lt;code&gt;module.directive&lt;/code&gt; 采用&lt;a href=&quot;directive#matching-directives.html&quot;&gt;标准化的&lt;/a&gt;指令名称，后跟&lt;strong&gt;工厂函数。&lt;/strong&gt;这个工厂函数应该返回一个带有不同选项的对象来告诉 &lt;code&gt;$compile&lt;/code&gt; 该指令在匹配时应如何表现。</target>
        </trans-unit>
        <trans-unit id="ae0317278d634cdf9897fb0dfd8c37d7e85a15db" translate="yes" xml:space="preserve">
          <source>First, download the file:</source>
          <target state="translated">首先,下载文件。</target>
        </trans-unit>
        <trans-unit id="4eed0a516dc6dad6334d232395f61bdc71c7a4f5" translate="yes" xml:space="preserve">
          <source>First, get the file:</source>
          <target state="translated">首先,获取文件。</target>
        </trans-unit>
        <trans-unit id="9c40c3b47461dae52bbb2ce1715c3e7c4122872e" translate="yes" xml:space="preserve">
          <source>First, there is a new JavaScript file that contains a &lt;a href=&quot;controller&quot;&gt;controller&lt;/a&gt;. More accurately, the file specifies a constructor function that will be used to create the actual controller instance. The purpose of controllers is to expose variables and functionality to expressions and directives.</source>
          <target state="translated">首先，有一个包含&lt;a href=&quot;controller&quot;&gt;controller&lt;/a&gt;的新JavaScript文件。更准确地说，该文件指定了一个构造函数，该函数将用于创建实际的控制器实例。控制器的目的是将变量和功能公开给表达式和指令。</target>
        </trans-unit>
        <trans-unit id="77d9204eade0f099f5e0ab2bbd55d4646d3a83bf" translate="yes" xml:space="preserve">
          <source>Flickering when using ngHide to toggle between elements</source>
          <target state="translated">当使用ngHide在元素之间切换时,会出现闪烁。</target>
        </trans-unit>
        <trans-unit id="b5ab32c1bf51cc481c9ab3c08fe93a1b77113b2e" translate="yes" xml:space="preserve">
          <source>Flickering when using ngShow to toggle between elements</source>
          <target state="translated">当使用ngShow在元素之间切换时,会出现闪烁。</target>
        </trans-unit>
        <trans-unit id="dd43887b63ddf9f9facc6f00c39c0b0cb59061d5" translate="yes" xml:space="preserve">
          <source>Flushes all currently pending tasks and executes the corresponding callbacks.</source>
          <target state="translated">刷新所有当前待处理的任务,并执行相应的回调。</target>
        </trans-unit>
        <trans-unit id="a90504300f4ff98f08eb7ca5fb07f8b7ddb64a04" translate="yes" xml:space="preserve">
          <source>Flushes pending requests using the trained responses. Requests are flushed in the order they were made, but it is also possible to skip one or more requests (for example to have them flushed later). This is useful for simulating scenarios where responses arrive from the server in any order.</source>
          <target state="translated">使用训练有素的响应来刷新待处理的请求。请求按其发出的顺序刷新,但也可以跳过一个或多个请求(例如,稍后再刷新)。这对于模拟响应以任何顺序从服务器到达的场景非常有用。</target>
        </trans-unit>
        <trans-unit id="638b971934a555c5935d2b23812b0728737ef511" translate="yes" xml:space="preserve">
          <source>Flushes the queue of pending tasks.</source>
          <target state="translated">清空待处理任务的队列。</target>
        </trans-unit>
        <trans-unit id="8fccbd9b557140b0032b7f8e325d55f44d855fc4" translate="yes" xml:space="preserve">
          <source>Flushing HTTP requests</source>
          <target state="translated">刷新HTTP请求</target>
        </trans-unit>
        <trans-unit id="a9fc15bcc3e40c2b04001a849fdf3aa1b08d270c" translate="yes" xml:space="preserve">
          <source>Follow &lt;a href=&quot;../service/%24sce#resourceUrlPatternItem.html&quot;&gt;this link&lt;/a&gt; for a description of the items allowed in this array.</source>
          <target state="translated">单击&lt;a href=&quot;../service/%24sce#resourceUrlPatternItem.html&quot;&gt;此链接&lt;/a&gt;以获取此数组中允许的项目的描述。</target>
        </trans-unit>
        <trans-unit id="094d6476ce6c9b2413458a029d80353731b269a4" translate="yes" xml:space="preserve">
          <source>Following the AngularJS expression, you would denote the plural extension syntax by the &lt;code&gt;, plural,&lt;/code&gt; syntax element. The spaces there are optional.</source>
          <target state="translated">继AngularJS表达，你会表示由复数扩展语法 &lt;code&gt;, plural,&lt;/code&gt; 语法元素。那里的空格是可选的。</target>
        </trans-unit>
        <trans-unit id="77b5d91136a3bc63a58e377a55c5cfbbe4b179c4" translate="yes" xml:space="preserve">
          <source>For CSS that's safe to source into the application. Currently unused. Feel free to use it in your own directives.</source>
          <target state="translated">对于可以安全的源码到应用程序中的CSS。目前尚未使用。可以在自己的指令中随意使用。</target>
        </trans-unit>
        <trans-unit id="93453f79c27232e1015010a01e85d73371266175" translate="yes" xml:space="preserve">
          <source>For HTML that's safe to source into the application. The &lt;a href=&quot;../directive/ngbindhtml&quot;&gt;ngBindHtml&lt;/a&gt; directive uses this context for bindings. If an unsafe value is encountered and the &lt;a href=&quot;../../ngsanitize&quot;&gt;$sanitize&lt;/a&gt; module is present this will sanitize the value instead of throwing an error.</source>
          <target state="translated">对于可以安全地导入到应用程序中的HTML。该&lt;a href=&quot;../directive/ngbindhtml&quot;&gt;ngBindHtml&lt;/a&gt;指令使用该环境的绑定。如果遇到不安全的值并且存在&lt;a href=&quot;../../ngsanitize&quot;&gt;$ sanitize&lt;/a&gt;模块，这将对值进行消毒，而不是引发错误。</target>
        </trans-unit>
        <trans-unit id="26c9ca3b2c358ad13d5820190c1ba8d9939ab41e" translate="yes" xml:space="preserve">
          <source>For JavaScript that is safe to execute in your application's context. Currently unused. Feel free to use it in your own directives.</source>
          <target state="translated">用于在你的应用程序的上下文中安全执行的JavaScript。目前尚未使用。欢迎在你自己的指令中使用它。</target>
        </trans-unit>
        <trans-unit id="c53dc4f36928109e16191d24a777b2f91435bd6c" translate="yes" xml:space="preserve">
          <source>For URLs that are not only safe to follow as links, but whose contents are also safe to include in your application. Examples include &lt;code&gt;ng-include&lt;/code&gt;, &lt;code&gt;src&lt;/code&gt; / &lt;code&gt;ngSrc&lt;/code&gt; bindings for tags other than &lt;code&gt;IMG&lt;/code&gt; (e.g. &lt;code&gt;IFRAME&lt;/code&gt;, &lt;code&gt;OBJECT&lt;/code&gt;, etc.)</source>
          <target state="translated">对于不仅可以安全地用作链接的URL，而且其内容也可以安全地包含在应用程序中的URL。示例包括除 &lt;code&gt;IMG&lt;/code&gt; 之外的其他标签（例如 &lt;code&gt;IFRAME&lt;/code&gt; ， &lt;code&gt;OBJECT&lt;/code&gt; 等）的 &lt;code&gt;ng-include&lt;/code&gt; ， &lt;code&gt;src&lt;/code&gt; / &lt;code&gt;ngSrc&lt;/code&gt; 绑定</target>
        </trans-unit>
        <trans-unit id="679d8901367dd69ff1b551c6d19359134975c76f" translate="yes" xml:space="preserve">
          <source>For URLs that are safe to follow as links. Is automatically converted from string by sanitizing when needed. Note that &lt;code&gt;$sce.URL&lt;/code&gt; makes a stronger statement about the URL than &lt;code&gt;$sce.MEDIA_URL&lt;/code&gt; does and therefore contexts requiring values trusted for &lt;code&gt;$sce.URL&lt;/code&gt; can be used anywhere that values trusted for &lt;code&gt;$sce.MEDIA_URL&lt;/code&gt; are required.</source>
          <target state="translated">对于可以安全作为链接的URL。在需要时通过清除从字符串自动转换。需要注意的是 &lt;code&gt;$sce.URL&lt;/code&gt; 使有关的URL不是一个强硬的声明 &lt;code&gt;$sce.MEDIA_URL&lt;/code&gt; 做，因此需要值上下文值得信赖的 &lt;code&gt;$sce.URL&lt;/code&gt; 可以在任何地方使用，价值观值得信赖的 &lt;code&gt;$sce.MEDIA_URL&lt;/code&gt; 是必需的。</target>
        </trans-unit>
        <trans-unit id="460be5bd6859be623406a9b95efc4d427c933c3d" translate="yes" xml:space="preserve">
          <source>For URLs that are safe to render as media. Is automatically converted from string by sanitizing when needed.</source>
          <target state="translated">对于可以安全呈现为媒体的URL。在需要的时候,会自动从字符串中经过消毒转换。</target>
        </trans-unit>
        <trans-unit id="56a3631774eba60c1d32538706994f443230d184" translate="yes" xml:space="preserve">
          <source>For a full breakdown of each method available on &lt;code&gt;$animate&lt;/code&gt;, see the &lt;a href=&quot;../api/ng/service/%24animate&quot;&gt;API documentation&lt;/a&gt;.</source>
          <target state="translated">有关 &lt;code&gt;$animate&lt;/code&gt; 上可用的每种方法的完整细分，请参阅&lt;a href=&quot;../api/ng/service/%24animate&quot;&gt;API文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ee537291a987f36791c6713c21d3132becf867bb" translate="yes" xml:space="preserve">
          <source>For a full breakdown of the steps involved during each animation event, refer to the &lt;a href=&quot;../api/ng/service/%24animate&quot;&gt;&lt;code&gt;$animate&lt;/code&gt; API docs&lt;/a&gt;.</source>
          <target state="translated">有关每个动画事件所涉及步骤的完整细分，请参阅&lt;a href=&quot;../api/ng/service/%24animate&quot;&gt; &lt;code&gt;$animate&lt;/code&gt; API文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0c2ee5a6e688447faa7359cb736c719caeff0771" translate="yes" xml:space="preserve">
          <source>For a full breakdown of the steps involved during each animation event, refer to the &lt;a href=&quot;ng/service/%24animate&quot;&gt;&lt;code&gt;$animate&lt;/code&gt; API docs&lt;/a&gt;.</source>
          <target state="translated">有关每个动画事件所涉及步骤的完整细分，请参阅&lt;a href=&quot;ng/service/%24animate&quot;&gt; &lt;code&gt;$animate&lt;/code&gt; API文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9eb4e7bb485c4f2c498bc194e7c524491dc3a750" translate="yes" xml:space="preserve">
          <source>For a higher level of abstraction, please check out the &lt;a href=&quot;../../ngresource/service/%24resource&quot;&gt;$resource&lt;/a&gt; service.</source>
          <target state="translated">要获得更高的抽象水平，请查看&lt;a href=&quot;../../ngresource/service/%24resource&quot;&gt;$ resource&lt;/a&gt;服务。</target>
        </trans-unit>
        <trans-unit id="d076559b1af0412b2156be6fe715805d27e234d9" translate="yes" xml:space="preserve">
          <source>For an overview of this service and the functionnality it provides in AngularJS, see the main page for &lt;a href=&quot;%24sce&quot;&gt;SCE&lt;/a&gt;. The current page is targeted for developers who need to alter how SCE works in their application, which shouldn't be needed in most cases.</source>
          <target state="translated">有关此服务及其在AngularJS中提供的功能的概述，请参见&lt;a href=&quot;%24sce&quot;&gt;SCE&lt;/a&gt;主页。当前页面面向需要更改SCE在其应用程序中的工作方式的开发人员，而在大多数情况下则不需要。</target>
        </trans-unit>
        <trans-unit id="b35f9509f0816b491b39c105cf33a4c232d76568" translate="yes" xml:space="preserve">
          <source>For basic examples, how to use &lt;code&gt;ngModel&lt;/code&gt;, see:</source>
          <target state="translated">有关基本示例，如何使用 &lt;code&gt;ngModel&lt;/code&gt; ，请参见：</target>
        </trans-unit>
        <trans-unit id="18cb02d5b2d6faa6bcd2abc7c6cf94b02170c3a3" translate="yes" xml:space="preserve">
          <source>For best practices on using &lt;code&gt;ngModel&lt;/code&gt;, see:</source>
          <target state="translated">有关使用 &lt;code&gt;ngModel&lt;/code&gt; 的最佳实践，请参阅：</target>
        </trans-unit>
        <trans-unit id="77d34f60b8e72f532f193ec3320fc033253270d4" translate="yes" xml:space="preserve">
          <source>For browsers that support the HTML5 history API, &lt;code&gt;$location&lt;/code&gt; uses the HTML5 history API to write path and search. If the history API is not supported by a browser, &lt;code&gt;$location&lt;/code&gt; supplies a Hashbang URL. This frees you from having to worry about whether the browser viewing your app supports the history API or not; the &lt;code&gt;$location&lt;/code&gt; service makes this transparent to you.</source>
          <target state="translated">对于支持HTML5历史记录API的浏览器， &lt;code&gt;$location&lt;/code&gt; 使用HTML5历史记录API来编写路径和搜索。如果浏览器不支持历史记录API，则 &lt;code&gt;$location&lt;/code&gt; 提供一个Hashbang URL。这使您不必担心查看应用程序的浏览器是否支持历史API。在 &lt;code&gt;$location&lt;/code&gt; 服务使这个透明的你。</target>
        </trans-unit>
        <trans-unit id="667b86f65118c83e9387d50ae6fab23e51925cb5" translate="yes" xml:space="preserve">
          <source>For cases where the attribute name is the same as the value you want to bind to inside the directive's scope, you can use this shorthand syntax:</source>
          <target state="translated">对于属性名与你想在指令的作用域内绑定的值相同的情况,你可以使用这个速记语法。</target>
        </trans-unit>
        <trans-unit id="214f9ccc5f52486bf94285f84eb26c0f1f87ae2a" translate="yes" xml:space="preserve">
          <source>For dynamically creating &lt;code&gt;href&lt;/code&gt; attributes for a tags, see the &lt;a href=&quot;nghref&quot;&gt;&lt;code&gt;ngHref&lt;/code&gt;&lt;/a&gt; directive.</source>
          <target state="translated">有关为标签动态创建 &lt;code&gt;href&lt;/code&gt; 属性的信息，请参见&lt;a href=&quot;nghref&quot;&gt; &lt;code&gt;ngHref&lt;/code&gt; &lt;/a&gt;指令。</target>
        </trans-unit>
        <trans-unit id="d2cb21c62c7124bee8beb4118b76b5e301e11b61" translate="yes" xml:space="preserve">
          <source>For example consider a directive that uses transclusion and isolated scope. The DOM hierarchy might look like this:</source>
          <target state="translated">例如,考虑一个使用transclusion和隔离范围的指令。DOM的层次结构可能是这样的。</target>
        </trans-unit>
        <trans-unit id="37c999fd77efd0888b9cb38aaca6a3de81ed8a47" translate="yes" xml:space="preserve">
          <source>For example given the following fragment of HTML</source>
          <target state="translated">例如给定以下HTML片段</target>
        </trans-unit>
        <trans-unit id="7928c96ad76339cd8a1a495f2757512494975f25" translate="yes" xml:space="preserve">
          <source>For example if we wanted to do a CSS animation for &lt;code&gt;ngHide&lt;/code&gt; then we place an animation on the &lt;code&gt;.ng-hide&lt;/code&gt; CSS class:</source>
          <target state="translated">例如，如果我们想为 &lt;code&gt;ngHide&lt;/code&gt; 制作CSS动画，则将动画放在 &lt;code&gt;.ng-hide&lt;/code&gt; CSS类上：</target>
        </trans-unit>
        <trans-unit id="68db25a901df945b32772fe453b1fa47d47a8252" translate="yes" xml:space="preserve">
          <source>For example if your server needs to return:</source>
          <target state="translated">例如,如果你的服务器需要返回。</target>
        </trans-unit>
        <trans-unit id="da9cd80863fc9d60fc99be6bca25f3975ab8cf3f" translate="yes" xml:space="preserve">
          <source>For example on *nix, to create an angular.js file that contains localization rules for german locale, you can do the following:</source>
          <target state="translated">例如,在*nix上,要创建一个包含德语本地化规则的angular.js文件,你可以执行以下操作。</target>
        </trans-unit>
        <trans-unit id="e64d608c66f058026befe85feab000c0e8eb56f7" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;[{id: 'foo'}, {id: 'bar'}] | orderBy:'id'&lt;/code&gt; would result in &lt;code&gt;[{id: 'bar'}, {id: 'foo'}]&lt;/code&gt;.</source>
          <target state="translated">例如， &lt;code&gt;[{id: 'foo'}, {id: 'bar'}] | orderBy:'id'&lt;/code&gt; 将导致 &lt;code&gt;[{id: 'bar'}, {id: 'foo'}]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8dd342ed97c8f1fdb9f8a8fbf2799eee0ccdcc8c" translate="yes" xml:space="preserve">
          <source>For example, an element acts as a loading spinner. It has an infinite css animation on it, and also an &lt;a href=&quot;../api/ng/directive/ngif&quot;&gt;&lt;code&gt;ngIf&lt;/code&gt;&lt;/a&gt; directive, for which no animations are defined:</source>
          <target state="translated">例如，一个元素充当加载微调器。它上面有一个无限的css动画，还有一个&lt;a href=&quot;../api/ng/directive/ngif&quot;&gt; &lt;code&gt;ngIf&lt;/code&gt; &lt;/a&gt;指令，没有为其定义动画：</target>
        </trans-unit>
        <trans-unit id="7cf18d17856b16f1490eddc7ee8f166885da6706" translate="yes" xml:space="preserve">
          <source>For example, considering this template:</source>
          <target state="translated">例如,考虑到这个模板。</target>
        </trans-unit>
        <trans-unit id="5c917b642410469c8ea7e90f8a294d625b0e2286" translate="yes" xml:space="preserve">
          <source>For example, given &lt;code&gt;&amp;lt;my-component my-attr=&quot;parentModel&quot;&amp;gt;&lt;/code&gt; and directive definition of &lt;code&gt;scope: { localModel:'&amp;lt;myAttr' }&lt;/code&gt;, then the isolated scope property &lt;code&gt;localModel&lt;/code&gt; will reflect the value of &lt;code&gt;parentModel&lt;/code&gt; on the parent scope. Any changes to &lt;code&gt;parentModel&lt;/code&gt; will be reflected in &lt;code&gt;localModel&lt;/code&gt;, but changes in &lt;code&gt;localModel&lt;/code&gt; will not reflect in &lt;code&gt;parentModel&lt;/code&gt;. There are however two caveats:</source>
          <target state="translated">例如，给定 &lt;code&gt;&amp;lt;my-component my-attr=&quot;parentModel&quot;&amp;gt;&lt;/code&gt; 和的指令定义 &lt;code&gt;scope: { localModel:'&amp;lt;myAttr' }&lt;/code&gt; ，那么分离的范围属性 &lt;code&gt;localModel&lt;/code&gt; 将反映的值 &lt;code&gt;parentModel&lt;/code&gt; 上的父范围。对 &lt;code&gt;parentModel&lt;/code&gt; 的任何更改都将反映在 &lt;code&gt;localModel&lt;/code&gt; 中，但是 &lt;code&gt;localModel&lt;/code&gt; 中的更改将不会反映在 &lt;code&gt;parentModel&lt;/code&gt; 中。但是，有两个警告：</target>
        </trans-unit>
        <trans-unit id="f49496495571ad1faf93be95dab230558d27e175" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;mode.rewriteLinks&lt;/code&gt; is set to &lt;code&gt;'internal-link'&lt;/code&gt;:</source>
          <target state="translated">例如，如果 &lt;code&gt;mode.rewriteLinks&lt;/code&gt; 设置为 &lt;code&gt;'internal-link'&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c8160364ec09deefcb004bae9314f54d4f6ba323" translate="yes" xml:space="preserve">
          <source>For example, if an input control is added that is already &lt;code&gt;$dirty&lt;/code&gt; and has &lt;code&gt;$error&lt;/code&gt; properties, calling &lt;code&gt;$setDirty()&lt;/code&gt; and &lt;code&gt;$validate()&lt;/code&gt; afterwards will propagate the state to the parent form.</source>
          <target state="translated">例如，如果添加的输入控件已经是 &lt;code&gt;$dirty&lt;/code&gt; 并且具有 &lt;code&gt;$error&lt;/code&gt; 属性，则随后调用 &lt;code&gt;$setDirty()&lt;/code&gt; 和 &lt;code&gt;$validate()&lt;/code&gt; 会将状态传播到父窗体。</target>
        </trans-unit>
        <trans-unit id="4100a3af8d122712b1181599580e9e97e167970c" translate="yes" xml:space="preserve">
          <source>For example, it can be used for specifying the &quot;Accept&quot; header that is sent to the server, when requesting a template.</source>
          <target state="translated">例如,当请求模板时,它可以用来指定发送给服务器的 &quot;接受 &quot;头。</target>
        </trans-unit>
        <trans-unit id="b6c81880bfa28e2a7d53ec485327343074412001" translate="yes" xml:space="preserve">
          <source>For example, routes like &lt;code&gt;/color/:color/largecode/:largecode*\/edit&lt;/code&gt; will match &lt;code&gt;/color/brown/largecode/code/with/slashes/edit&lt;/code&gt; and extract:</source>
          <target state="translated">例如， &lt;code&gt;/color/:color/largecode/:largecode*\/edit&lt;/code&gt; 将匹配 &lt;code&gt;/color/brown/largecode/code/with/slashes/edit&lt;/code&gt; 并提取：</target>
        </trans-unit>
        <trans-unit id="1b54425e1ee99911055acc84ab0ce4f407e3493d" translate="yes" xml:space="preserve">
          <source>For example, the following forms are all equivalent and match the &lt;a href=&quot;../api/ng/directive/ngbind&quot;&gt;&lt;code&gt;ngBind&lt;/code&gt;&lt;/a&gt; directive:</source>
          <target state="translated">例如，以下形式都是等效的，并且与&lt;a href=&quot;../api/ng/directive/ngbind&quot;&gt; &lt;code&gt;ngBind&lt;/code&gt; &lt;/a&gt;指令匹配：</target>
        </trans-unit>
        <trans-unit id="8a1d556c82b4cdccf6ac8ff718e0e8e16f73d570" translate="yes" xml:space="preserve">
          <source>For example, the parameter &lt;code&gt;_myService_&lt;/code&gt; would be resolved as the reference &lt;code&gt;myService&lt;/code&gt;. Since it is available in the function body as &lt;code&gt;_myService_&lt;/code&gt;, we can then assign it to a variable defined in an outer scope.</source>
          <target state="translated">例如，参数 &lt;code&gt;_myService_&lt;/code&gt; 将解析为引用 &lt;code&gt;myService&lt;/code&gt; 。由于它在函数体中以 &lt;code&gt;_myService_&lt;/code&gt; 的形式提供，因此我们可以将其分配给在外部作用域中定义的变量。</target>
        </trans-unit>
        <trans-unit id="0c9ab0c654c0f4dd1405a9253a4855d8cd4a37ec" translate="yes" xml:space="preserve">
          <source>For example, the transclude object &lt;code&gt;{ slotA: '?myCustomElement' }&lt;/code&gt; maps &lt;code&gt;&amp;lt;my-custom-element&amp;gt;&lt;/code&gt; elements to the &lt;code&gt;slotA&lt;/code&gt; slot, which can be accessed via the &lt;code&gt;$transclude&lt;/code&gt; function or via the &lt;a href=&quot;../directive/ngtransclude&quot;&gt;&lt;code&gt;ngTransclude&lt;/code&gt;&lt;/a&gt; directive.</source>
          <target state="translated">例如， &lt;code&gt;{ slotA: '?myCustomElement' }&lt;/code&gt; 对象{slotA：'？myCustomElement'}将 &lt;code&gt;&amp;lt;my-custom-element&amp;gt;&lt;/code&gt; 元素映射到 &lt;code&gt;slotA&lt;/code&gt; 插槽，可以通过 &lt;code&gt;$transclude&lt;/code&gt; &lt;a href=&quot;../directive/ngtransclude&quot;&gt; &lt;code&gt;ngTransclude&lt;/code&gt; &lt;/a&gt;函数或ngTransclude指令对其进行访问。</target>
        </trans-unit>
        <trans-unit id="63e8ba7e3633e731a37f59a5f71a0246863d5260" translate="yes" xml:space="preserve">
          <source>For example, these are valid expressions in AngularJS:</source>
          <target state="translated">例如,这些都是AngularJS中的有效表达式。</target>
        </trans-unit>
        <trans-unit id="96705da955a8375dd1945d20693b46a51ee66c61" translate="yes" xml:space="preserve">
          <source>For example, to bind to &lt;code&gt;viewBox&lt;/code&gt;, we can write:</source>
          <target state="translated">例如，要绑定到 &lt;code&gt;viewBox&lt;/code&gt; ，我们可以编写：</target>
        </trans-unit>
        <trans-unit id="0ccfc76b489a9482967cab3c080c55bf14ba5ead" translate="yes" xml:space="preserve">
          <source>For example, we could fix the example above by instead writing:</source>
          <target state="translated">例如,我们可以修正上面的例子,改写。</target>
        </trans-unit>
        <trans-unit id="e7d01ec6314e26035b376c51a5d51073e752c597" translate="yes" xml:space="preserve">
          <source>For example, you can specify a new &lt;code&gt;update&lt;/code&gt; action that uses the &lt;code&gt;PUT&lt;/code&gt; HTTP verb:</source>
          <target state="translated">例如，您可以指定一个新的使用 &lt;code&gt;PUT&lt;/code&gt; HTTP动词的 &lt;code&gt;update&lt;/code&gt; 操作：</target>
        </trans-unit>
        <trans-unit id="24b9b4933809e915effa8985612fb6a246c52bde" translate="yes" xml:space="preserve">
          <source>For example, you should not use interpolation in the value of the &lt;code&gt;style&lt;/code&gt; attribute (e.g. &lt;code&gt;style=&quot;color: {{ 'orange' }}; font-weight: {{ 'bold' }};&quot;&lt;/code&gt;) &lt;strong&gt;and&lt;/strong&gt; at the same time use a directive that changes the content of that attribute, such as &lt;code&gt;ngStyle&lt;/code&gt;.</source>
          <target state="translated">例如，不应该在的值中使用的内插 &lt;code&gt;style&lt;/code&gt; 属性（例如 &lt;code&gt;style=&quot;color: {{ 'orange' }}; font-weight: {{ 'bold' }};&quot;&lt;/code&gt; ）&lt;strong&gt;和&lt;/strong&gt;在同一时间使用更改该属性内容的指令，例如 &lt;code&gt;ngStyle&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="3d34c040e0936e358901f3aa689af5cf27ff974b" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;(name, age) in {'adam':10, 'amalie':12}&lt;/code&gt;.</source>
          <target state="translated">例如： &lt;code&gt;(name, age) in {'adam':10, 'amalie':12}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed802f940e232dd5f65c3ca8779aee1a29358982" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;album in artist.albums&lt;/code&gt;.</source>
          <target state="translated">例如： &lt;code&gt;album in artist.albums&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="681d399129810dbe00c67bb783ff5c6fc3cb9abd" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;item in items | filter : x | orderBy : order | limitTo : limit as results track by item.id&lt;/code&gt; .</source>
          <target state="translated">例如： &lt;code&gt;item in items | filter : x | orderBy : order | limitTo : limit as results track by item.id&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3361e3ce4a7b68bb7099adb908017c58b77d7659" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;item in items | filter:x as results&lt;/code&gt; will store the fragment of the repeated items as &lt;code&gt;results&lt;/code&gt;, but only after the items have been processed through the filter.</source>
          <target state="translated">例如： &lt;code&gt;item in items | filter:x as results&lt;/code&gt; 将重复项的片段存储为 &lt;code&gt;results&lt;/code&gt; ，但仅在通过过滤器处理了这些项之后。</target>
        </trans-unit>
        <trans-unit id="94485d1a8b6086205e13bc75af843d115c8cdeb9" translate="yes" xml:space="preserve">
          <source>For extra convenience, &lt;code&gt;whenRoute&lt;/code&gt; and &lt;code&gt;expectRoute&lt;/code&gt; shortcuts are available. These methods offer colon delimited matching of the url path, ignoring the query string and trailing slashes. This allows declarations similar to how application routes are configured with &lt;code&gt;$routeProvider&lt;/code&gt;. Because these methods convert the definition url to regex, declaration order is important. Combined with query parameter parsing, the following is possible:</source>
          <target state="translated">为了提供更多便利，当 &lt;code&gt;whenRoute&lt;/code&gt; 和 &lt;code&gt;expectRoute&lt;/code&gt; 快捷方式可用时。这些方法提供了URL路径的冒号分隔匹配，而忽略了查询字符串和尾部斜杠。这允许进行类似于使用 &lt;code&gt;$routeProvider&lt;/code&gt; 配置应用程序路由的声明。由于这些方法将定义url转换为regex，因此声明顺序很重要。与查询参数解析结合使用，可能会发生以下情况：</target>
        </trans-unit>
        <trans-unit id="072be915c36eea0008ba664485e0bec787e012a1" translate="yes" xml:space="preserve">
          <source>For folks with a jQuery background</source>
          <target state="translated">对于有jQuery背景的人来说</target>
        </trans-unit>
        <trans-unit id="d4be5a755dc40ef55c3ed316c05fba77165d707c" translate="yes" xml:space="preserve">
          <source>For further information check out the guide on &lt;a href=&quot;../../../guide/directive#matching-directives.html&quot;&gt;Matching Directives&lt;/a&gt;</source>
          <target state="translated">有关更多信息，请查看&amp;ldquo; &lt;a href=&quot;../../../guide/directive#matching-directives.html&quot;&gt;匹配指令&lt;/a&gt; &amp;rdquo;指南</target>
        </trans-unit>
        <trans-unit id="4b43ddc504c929290eacba4d8a365ed1210996ec" translate="yes" xml:space="preserve">
          <source>For historical reasons, this method will also flush non-&lt;code&gt;$timeout&lt;/code&gt; pending tasks, such as &lt;a href=&quot;../../ng/service/%24q&quot;&gt;&lt;code&gt;$q&lt;/code&gt;&lt;/a&gt; promises and tasks scheduled via &lt;a href=&quot;../../ng/type/%24rootscope.scope#%24applyAsync.html&quot;&gt;$applyAsync&lt;/a&gt; and &lt;a href=&quot;../../ng/type/%24rootscope.scope#%24evalAsync.html&quot;&gt;$evalAsync&lt;/a&gt;.</source>
          <target state="translated">由于历史原因，该方法还将刷新非 &lt;code&gt;$timeout&lt;/code&gt; 挂起的任务，例如&lt;a href=&quot;../../ng/service/%24q&quot;&gt; &lt;code&gt;$q&lt;/code&gt; &lt;/a&gt; promise和通过&lt;a href=&quot;../../ng/type/%24rootscope.scope#%24applyAsync.html&quot;&gt;$ applyAsync&lt;/a&gt;和&lt;a href=&quot;../../ng/type/%24rootscope.scope#%24evalAsync.html&quot;&gt;$ evalAsync&lt;/a&gt;调度的任务。</target>
        </trans-unit>
        <trans-unit id="96d5709584b09a9673009d4b874368aa832eb8de" translate="yes" xml:space="preserve">
          <source>For historical reasons, this method will also verify non-&lt;code&gt;$timeout&lt;/code&gt; pending tasks, such as pending &lt;a href=&quot;../../ng/service/%24http&quot;&gt;&lt;code&gt;$http&lt;/code&gt;&lt;/a&gt; requests, in-progress &lt;a href=&quot;../../ngroute/service/%24route&quot;&gt;&lt;code&gt;$route&lt;/code&gt;&lt;/a&gt; transitions, unresolved &lt;a href=&quot;../../ng/service/%24q&quot;&gt;&lt;code&gt;$q&lt;/code&gt;&lt;/a&gt; promises and tasks scheduled via &lt;a href=&quot;../../ng/type/%24rootscope.scope#%24applyAsync.html&quot;&gt;$applyAsync&lt;/a&gt; and &lt;a href=&quot;../../ng/type/%24rootscope.scope#%24evalAsync.html&quot;&gt;$evalAsync&lt;/a&gt;.</source>
          <target state="translated">由于历史原因，此方法还将验证非 &lt;code&gt;$timeout&lt;/code&gt; 待处理任务，例如待处理的&lt;a href=&quot;../../ng/service/%24http&quot;&gt; &lt;code&gt;$http&lt;/code&gt; &lt;/a&gt;请求，进行中的&lt;a href=&quot;../../ngroute/service/%24route&quot;&gt; &lt;code&gt;$route&lt;/code&gt; &lt;/a&gt;转换，未解决的&lt;a href=&quot;../../ng/service/%24q&quot;&gt; &lt;code&gt;$q&lt;/code&gt; &lt;/a&gt; promise和通过&lt;a href=&quot;../../ng/type/%24rootscope.scope#%24applyAsync.html&quot;&gt;$ applyAsync&lt;/a&gt;和&lt;a href=&quot;../../ng/type/%24rootscope.scope#%24evalAsync.html&quot;&gt;$ evalAsync&lt;/a&gt;计划的任务。</target>
        </trans-unit>
        <trans-unit id="e79547ae737496ef4b830c418e98203529ffd5b3" translate="yes" xml:space="preserve">
          <source>For in-depth discussion about DI, see &lt;a href=&quot;http://en.wikipedia.org/wiki/Dependency_injection&quot;&gt;Dependency Injection&lt;/a&gt; at Wikipedia, &lt;a href=&quot;http://martinfowler.com/articles/injection.html&quot;&gt;Inversion of Control&lt;/a&gt; by Martin Fowler, or read about DI in your favorite software design pattern book.</source>
          <target state="translated">有关DI的深入讨论，请参阅Wikipedia上的&lt;a href=&quot;http://en.wikipedia.org/wiki/Dependency_injection&quot;&gt;依赖注入&lt;/a&gt;，Martin Fowler &lt;a href=&quot;http://martinfowler.com/articles/injection.html&quot;&gt;的控制反转&lt;/a&gt;，或在您喜欢的软件设计模式书中阅读有关DI的内容。</target>
        </trans-unit>
        <trans-unit id="4c4430f0a9c683776764888172731ad0be5f3a21" translate="yes" xml:space="preserve">
          <source>For information on how the compiler works, see the &lt;a href=&quot;../../../guide/compiler&quot;&gt;AngularJS HTML Compiler&lt;/a&gt; section of the Developer Guide.</source>
          <target state="translated">有关编译器如何工作的信息，请参阅《开发人员指南》的&amp;ldquo; &lt;a href=&quot;../../../guide/compiler&quot;&gt;AngularJS HTML编译器&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="fcbd9cf327acae20f4980fb68635ba5be10e8a9e" translate="yes" xml:space="preserve">
          <source>For instance in a long running Single Page Application (SPA), one user may &quot;log out&quot;, but then another user may access the application without refreshing, in which case all the cached data is still available.</source>
          <target state="translated">例如在一个长期运行的单页应用程序(SPA)中,一个用户可能会 &quot;注销&quot;,但另一个用户可能会在不刷新的情况下访问该应用程序,在这种情况下,所有的缓存数据仍然可用。</target>
        </trans-unit>
        <trans-unit id="9c5ae6d931fb112afe199ee277a04174d9d1b69e" translate="yes" xml:space="preserve">
          <source>For instance, the required directive does this to work out if the input has data or not.</source>
          <target state="translated">例如,所需指令这样做是为了计算出输入是否有数据。</target>
        </trans-unit>
        <trans-unit id="1ed68e337042bafa1e8676ab786bd6c545ca56f2" translate="yes" xml:space="preserve">
          <source>For instance, what if we wanted to create a directive that lets a user drag an element?</source>
          <target state="translated">例如,如果我们想创建一个允许用户拖动元素的指令,该怎么办?</target>
        </trans-unit>
        <trans-unit id="83e081f1429ea35f9cc98daf2caa2c7900084512" translate="yes" xml:space="preserve">
          <source>For more about how to configure services, see &lt;a href=&quot;../../../guide/providers#provider-recipe.html&quot;&gt;Provider Recipe&lt;/a&gt;.</source>
          <target state="translated">有关如何配置服务的更多信息，请参见&lt;a href=&quot;../../../guide/providers#provider-recipe.html&quot;&gt;提供者食谱&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c9f8258461de9d031c72dc478ab759f9f3d6a71" translate="yes" xml:space="preserve">
          <source>For more details on the &lt;code&gt;link&lt;/code&gt; option refer to the &lt;a href=&quot;../api/ng/service/%24compile#-link-.html&quot;&gt;&lt;code&gt;$compile&lt;/code&gt; API&lt;/a&gt; page.</source>
          <target state="translated">有关 &lt;code&gt;link&lt;/code&gt; 选项的更多详细信息，请参见&lt;a href=&quot;../api/ng/service/%24compile#-link-.html&quot;&gt; &lt;code&gt;$compile&lt;/code&gt; API&lt;/a&gt;页面。</target>
        </trans-unit>
        <trans-unit id="03fb612774d8f4c26b5bffdddde2f8da0d09c268" translate="yes" xml:space="preserve">
          <source>For more details, please refer to our &lt;a href=&quot;https://docs.google.com/a/google.com/document/d/1pbtW2yvtmFBikfRrJd8VAsabiFkKezmYZ_PbgdjQOVU/edit&quot;&gt;design doc&lt;/a&gt;. You can read more about the ICU MessageFormat syntax at &lt;a href=&quot;http://userguide.icu-project.org/formatparse/messages#TOC-MessageFormat&quot;&gt;Formatting Messages | ICU User Guide&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，请参阅我们的&lt;a href=&quot;https://docs.google.com/a/google.com/document/d/1pbtW2yvtmFBikfRrJd8VAsabiFkKezmYZ_PbgdjQOVU/edit&quot;&gt;设计文档&lt;/a&gt;。您可以在&amp;ldquo; &lt;a href=&quot;http://userguide.icu-project.org/formatparse/messages#TOC-MessageFormat&quot;&gt;设置消息格式&amp;rdquo; |&amp;ldquo;&lt;/a&gt;更多信息&amp;rdquo;中了解有关ICU MessageFormat语法的更多信息。ICU用户指南。</target>
        </trans-unit>
        <trans-unit id="f6b5d56555aab13e3ab69162ff339401d9009f51" translate="yes" xml:space="preserve">
          <source>For more examples, and an in-depth guide, see the &lt;a href=&quot;../../../guide/component&quot;&gt;component guide&lt;/a&gt;.</source>
          <target state="translated">有关更多示例和深入指南，请参阅&lt;a href=&quot;../../../guide/component&quot;&gt;组件指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e45ef233283f4eb561fb40a1c85a858803109abf" translate="yes" xml:space="preserve">
          <source>For more information about how AngularJS filters work, and how to create your own filters, see &lt;a href=&quot;../../../guide/filter&quot;&gt;Filters&lt;/a&gt; in the AngularJS Developer Guide.</source>
          <target state="translated">有关AngularJS过滤器如何工作以及如何创建自己的过滤器的更多信息，请参阅《 AngularJS开发人员指南》中的&lt;a href=&quot;../../../guide/filter&quot;&gt;过滤器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b5c7cb088f3bf1b4252226980a33761384c56cfe" translate="yes" xml:space="preserve">
          <source>For more information on Protractor, view &lt;a href=&quot;http://angular.github.io/protractor/#/getting-started&quot;&gt;getting started&lt;/a&gt; or the &lt;a href=&quot;http://angular.github.io/protractor/#/api&quot;&gt;api docs&lt;/a&gt;.</source>
          <target state="translated">有关量角器的更多信息，请查看&lt;a href=&quot;http://angular.github.io/protractor/#/getting-started&quot;&gt;入门&lt;/a&gt;或&lt;a href=&quot;http://angular.github.io/protractor/#/api&quot;&gt;api docs&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f7d9777dd9e23921be5e65fe03cbf4547e45948c" translate="yes" xml:space="preserve">
          <source>For more information please visit &lt;a href=&quot;../api/ng/service/%24sce&quot;&gt;&lt;code&gt;$sce&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../api/ngsanitize/service/%24sanitize&quot;&gt;&lt;code&gt;$sanitize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请访问&lt;a href=&quot;../api/ng/service/%24sce&quot;&gt; &lt;code&gt;$sce&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../api/ngsanitize/service/%24sanitize&quot;&gt; &lt;code&gt;$sanitize&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5007e5f43b46ae511f7cfe86c43883e38fb85306" translate="yes" xml:space="preserve">
          <source>For more information please visit &lt;a href=&quot;https://www.whitehatsec.com/blog/web-storage-security/&quot;&gt;Web Storage Security&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请访问&lt;a href=&quot;https://www.whitehatsec.com/blog/web-storage-security/&quot;&gt;Web存储安全性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="17050d011e437da353406dbb3de303d540a80ce8" translate="yes" xml:space="preserve">
          <source>For more information see &lt;a href=&quot;../../../guide/%24location&quot;&gt;Developer Guide: Using $location&lt;/a&gt;</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;../../../guide/%24location&quot;&gt;开发人员指南：使用$ location。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d42a33c1c8d9f173d6a9033c03f236de6cab9c91" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;../../../guide/bootstrap&quot;&gt;Bootstrap guide&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;../../../guide/bootstrap&quot;&gt;Bootstrap指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="84f28113af9b7c7d485ded6f76a10650aebf1bfa" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;di#using-strict-dependency-injection.html&quot;&gt;DI Guide&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;di#using-strict-dependency-injection.html&quot;&gt;DI指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9ec0f18a27efe3a5bbaaa7c9a76fdead7442a493" translate="yes" xml:space="preserve">
          <source>For more on dependencies, see the &lt;a href=&quot;di&quot;&gt;dependency injection&lt;/a&gt; docs.</source>
          <target state="translated">有关依赖的更多信息，请参见&lt;a href=&quot;di&quot;&gt;依赖注入&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="ae1dd7c814f6a02ea749e951d697e01de287e16d" translate="yes" xml:space="preserve">
          <source>For more on the &lt;code&gt;restrict&lt;/code&gt; property, see the &lt;a href=&quot;../api/ng/service/%24compile#directive-definition-object.html&quot;&gt;API docs&lt;/a&gt;.</source>
          <target state="translated">有关 &lt;code&gt;restrict&lt;/code&gt; 属性的更多信息，请参阅&lt;a href=&quot;../api/ng/service/%24compile#directive-definition-object.html&quot;&gt;API docs&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="08deef231a5f13117b873e36e123085e74358098" translate="yes" xml:space="preserve">
          <source>For more see the docs pages on &lt;a href=&quot;../api/ng/provider/%24compileprovider#commentDirectivesEnabled.html&quot;&gt;&lt;code&gt;$compileProvider.commentDirectivesEnabled&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../api/ng/provider/%24compileprovider#cssClassDirectivesEnabled.html&quot;&gt;&lt;code&gt;$compileProvider.cssClassDirectivesEnabled&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;../api/ng/provider/%24compileprovider#commentDirectivesEnabled.html&quot;&gt; &lt;code&gt;$compileProvider.commentDirectivesEnabled&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../api/ng/provider/%24compileprovider#cssClassDirectivesEnabled.html&quot;&gt; &lt;code&gt;$compileProvider.cssClassDirectivesEnabled&lt;/code&gt; &lt;/a&gt;上的文档页面。</target>
        </trans-unit>
        <trans-unit id="1b9e3aa3cc39fa5b8b3356d069b3b85b223b9d68" translate="yes" xml:space="preserve">
          <source>For more see the docs pages on &lt;a href=&quot;../api/ng/provider/%24compileprovider#debugInfoEnabled.html&quot;&gt;&lt;code&gt;$compileProvider&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../api/ng/function/angular.reloadwithdebuginfo&quot;&gt;&lt;code&gt;angular.reloadWithDebugInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;../api/ng/provider/%24compileprovider#debugInfoEnabled.html&quot;&gt; &lt;code&gt;$compileProvider&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../api/ng/function/angular.reloadwithdebuginfo&quot;&gt; &lt;code&gt;angular.reloadWithDebugInfo&lt;/code&gt; &lt;/a&gt;上的文档页面。</target>
        </trans-unit>
        <trans-unit id="fb0970fb80040dd5e4119122a4b3d870ad0ab13b" translate="yes" xml:space="preserve">
          <source>For mutations to be properly observed, you should make them only within the &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24apply.html&quot;&gt;scope.$apply()&lt;/a&gt;. AngularJS APIs do this implicitly, so no extra &lt;code&gt;$apply&lt;/code&gt; call is needed when doing synchronous work in controllers, or asynchronous work with &lt;a href=&quot;../api/ng/service/%24http&quot;&gt;$http&lt;/a&gt;, &lt;a href=&quot;../api/ng/service/%24timeout&quot;&gt;$timeout&lt;/a&gt; or &lt;a href=&quot;../api/ng/service/%24interval&quot;&gt;$interval&lt;/a&gt; services.</source>
          <target state="translated">为了正确观察到突变，应仅在&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24apply.html&quot;&gt;scope。$ apply（）中&lt;/a&gt;进行突变。AngularJS API隐式地执行此操作，因此在控制器中进行同步工作或使用&lt;a href=&quot;../api/ng/service/%24http&quot;&gt;$ http&lt;/a&gt;，&lt;a href=&quot;../api/ng/service/%24timeout&quot;&gt;$ timeout&lt;/a&gt;或&lt;a href=&quot;../api/ng/service/%24interval&quot;&gt;$ interval&lt;/a&gt;服务进行异步工作时，不需要额外的 &lt;code&gt;$apply&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="70cabd8c2e94395b437f880992a54a0646b1ec62" translate="yes" xml:space="preserve">
          <source>For ngAria to do its magic, simply include the module &lt;code&gt;ngAria&lt;/code&gt; as a dependency. The following directives are supported: &lt;code&gt;ngModel&lt;/code&gt;, &lt;code&gt;ngChecked&lt;/code&gt;, &lt;code&gt;ngReadonly&lt;/code&gt;, &lt;code&gt;ngRequired&lt;/code&gt;, &lt;code&gt;ngValue&lt;/code&gt;, &lt;code&gt;ngDisabled&lt;/code&gt;, &lt;code&gt;ngShow&lt;/code&gt;, &lt;code&gt;ngHide&lt;/code&gt;, &lt;code&gt;ngClick&lt;/code&gt;, &lt;code&gt;ngDblClick&lt;/code&gt;, and &lt;code&gt;ngMessages&lt;/code&gt;.</source>
          <target state="translated">为了使ngAria发挥作用，只需将 &lt;code&gt;ngAria&lt;/code&gt; 模块作为依赖项即可。支持以下指令： &lt;code&gt;ngModel&lt;/code&gt; ， &lt;code&gt;ngChecked&lt;/code&gt; ， &lt;code&gt;ngReadonly&lt;/code&gt; ， &lt;code&gt;ngRequired&lt;/code&gt; ， &lt;code&gt;ngValue&lt;/code&gt; ， &lt;code&gt;ngDisabled&lt;/code&gt; ， &lt;code&gt;ngShow&lt;/code&gt; ， &lt;code&gt;ngHide&lt;/code&gt; ， &lt;code&gt;ngClick&lt;/code&gt; ， &lt;code&gt;ngDblClick&lt;/code&gt; 和 &lt;code&gt;ngMessages&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7935b6948cbce976a835b91d5bd505582812c0c4" translate="yes" xml:space="preserve">
          <source>For purposes of global error handling, authentication, or any kind of synchronous or asynchronous pre-processing of request or postprocessing of responses, it is desirable to be able to intercept requests before they are handed to the server and responses before they are handed over to the application code that initiated these requests. The interceptors leverage the &lt;a href=&quot;%24q&quot;&gt;promise APIs&lt;/a&gt; to fulfill this need for both synchronous and asynchronous pre-processing.</source>
          <target state="translated">出于全局错误处理，身份验证或请求的任何同步或异步预处理或响应的后处理目的，希望能够在将请求移交给服务器之前拦截请求，并在将请求移交给服务器之前将响应拦截发起这些请求的应用程序代码。拦截器利用&lt;a href=&quot;%24q&quot;&gt;promise API&lt;/a&gt;满足同步和异步预处理的这一需求。</target>
        </trans-unit>
        <trans-unit id="b64ebc99af83053596191ba8428a4a73a05f9e05" translate="yes" xml:space="preserve">
          <source>For testing AngularJS applications there are certain tools that you should use that will make testing much easier to set up and run.</source>
          <target state="translated">对于测试AngularJS应用程序,你应该使用某些工具,这些工具将使测试更容易设置和运行。</target>
        </trans-unit>
        <trans-unit id="a0981365eff2fc36be0abaf1d7aab40944bee960" translate="yes" xml:space="preserve">
          <source>For the best result, the &lt;code&gt;angular.js&lt;/code&gt; script must be loaded in the head section of the html document; alternatively, the css rule above must be included in the external stylesheet of the application.</source>
          <target state="translated">为了获得最佳结果，必须将 &lt;code&gt;angular.js&lt;/code&gt; 脚本加载到html文档的头部；或者，上述css规则必须包含在应用程序的外部样式表中。</target>
        </trans-unit>
        <trans-unit id="1cbfa677b41097f6715ec9bae88d486586566c4e" translate="yes" xml:space="preserve">
          <source>For the case of HTML, you might use a library, either on the client side, or on the server side, to sanitize unsafe HTML before binding to the value and rendering it in the document.</source>
          <target state="translated">对于HTML,你可以在客户端或服务器端使用一个库,在绑定到值并在文档中呈现之前,对不安全的HTML进行消毒。</target>
        </trans-unit>
        <trans-unit id="807df2e76c7472af78eccb593edb0cfe6ff5aaf1" translate="yes" xml:space="preserve">
          <source>For the following examples, we'll use the prefix &lt;code&gt;my&lt;/code&gt; (e.g. &lt;code&gt;myCustomer&lt;/code&gt;).</source>
          <target state="translated">对于以下示例，我们将使用前缀 &lt;code&gt;my&lt;/code&gt; （例如 &lt;code&gt;myCustomer&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="960d746344ec6d94fdf45b4493cec7cf2ec6fcad" translate="yes" xml:space="preserve">
          <source>For the general details about this service in AngularJS, read the main page for &lt;a href=&quot;../service/%24sce&quot;&gt;Strict Contextual Escaping (SCE)&lt;/a&gt;.</source>
          <target state="translated">有关AngularJS中此服务的一般详细信息，请阅读&lt;a href=&quot;../service/%24sce&quot;&gt;Strict Contextual Escaping（SCE）的&lt;/a&gt;主页。</target>
        </trans-unit>
        <trans-unit id="18276b32129c935a3f68b3699c65cc3ed663b628" translate="yes" xml:space="preserve">
          <source>For this reason, AngularJS prevents the default action (form submission to the server) unless the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element has an &lt;code&gt;action&lt;/code&gt; attribute specified.</source>
          <target state="translated">因此，除非 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 元素指定了 &lt;code&gt;action&lt;/code&gt; 属性，否则AngularJS会阻止默认操作（将表单提交到服务器）。</target>
        </trans-unit>
        <trans-unit id="59a0dc0f6babb8c929909c5324c52ffba8f70e1b" translate="yes" xml:space="preserve">
          <source>For this reason, AngularJS provides special &lt;code&gt;ng&lt;/code&gt;-prefixed directives for the following boolean attributes: &lt;a href=&quot;../api/ng/directive/ngdisabled&quot;&gt;&lt;code&gt;disabled&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../api/ng/directive/ngrequired&quot;&gt;&lt;code&gt;required&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../api/ng/directive/ngselected&quot;&gt;&lt;code&gt;selected&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../api/ng/directive/ngchecked&quot;&gt;&lt;code&gt;checked&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../api/ng/directive/ngreadonly&quot;&gt;&lt;code&gt;readOnly&lt;/code&gt;&lt;/a&gt; , and &lt;a href=&quot;../api/ng/directive/ngopen&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">因此，AngularJS为以下布尔属性提供特殊的 &lt;code&gt;ng&lt;/code&gt; 前缀指令：&lt;a href=&quot;../api/ng/directive/ngdisabled&quot;&gt; &lt;code&gt;disabled&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../api/ng/directive/ngrequired&quot;&gt; &lt;code&gt;required&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../api/ng/directive/ngselected&quot;&gt; &lt;code&gt;selected&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../api/ng/directive/ngchecked&quot;&gt; &lt;code&gt;checked&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../api/ng/directive/ngreadonly&quot;&gt; &lt;code&gt;readOnly&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../api/ng/directive/ngopen&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3230a2f947a8018219006b3929f539fd927003d2" translate="yes" xml:space="preserve">
          <source>For this, inject a dependency with the name &lt;code&gt;&amp;lt;filterName&amp;gt;Filter&lt;/code&gt; into your controller/service/directive. E.g. a filter called &lt;code&gt;number&lt;/code&gt; is injected by using the dependency &lt;code&gt;numberFilter&lt;/code&gt;. The injected argument is a function that takes the value to format as first argument, and filter parameters starting with the second argument.</source>
          <target state="translated">为此，将名称为 &lt;code&gt;&amp;lt;filterName&amp;gt;Filter&lt;/code&gt; 的依赖项注入到控制器/服务/指令中。例如，通过使用依赖项 &lt;code&gt;numberFilter&lt;/code&gt; 注入了一个名为 &lt;code&gt;number&lt;/code&gt; 的过滤器。注入的参数是一个函数，该函数将要格式化的值用作第一个参数，并从第二个参数开始过滤参数。</target>
        </trans-unit>
        <trans-unit id="79c0422145c2571f4818e372784001318ee45548" translate="yes" xml:space="preserve">
          <source>For those elements using ngModel, ngAria will dynamically bind and update the following ARIA attributes (if they have not been explicitly specified by the developer):</source>
          <target state="translated">对于那些使用ngModel的元素,ngAria将动态绑定并更新以下ARIA属性(如果开发者没有明确指定)。</target>
        </trans-unit>
        <trans-unit id="5364d19c24f92cd90b7c73685bff662a0a4cfa1a" translate="yes" xml:space="preserve">
          <source>For unit testing applications that use &lt;code&gt;$http&lt;/code&gt; service, see &lt;a href=&quot;../../ngmock/service/%24httpbackend&quot;&gt;$httpBackend mock&lt;/a&gt;.</source>
          <target state="translated">有关使用 &lt;code&gt;$http&lt;/code&gt; 服务的单元测试应用程序，请参见&lt;a href=&quot;../../ngmock/service/%24httpbackend&quot;&gt;$ httpBackend模拟&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="052fb3b37ae2bbf010c88dd3bc6c08df91652edd" translate="yes" xml:space="preserve">
          <source>Forgiving</source>
          <target state="translated">Forgiving</target>
        </trans-unit>
        <trans-unit id="abc67155e14921e60c9bacfaf13e79f8e7ecfc81" translate="yes" xml:space="preserve">
          <source>Form and controls provide validation services, so that the user can be notified of invalid input before submitting a form. This provides a better user experience than server-side validation alone because the user gets instant feedback on how to correct the error. Keep in mind that while client-side validation plays an important role in providing good user experience, it can easily be circumvented and thus can not be trusted. Server-side validation is still necessary for a secure application.</source>
          <target state="translated">表单和控件提供验证服务,以便在提交表单之前通知用户无效的输入。这比单纯的服务器端验证提供了更好的用户体验,因为用户可以得到关于如何纠正错误的即时反馈。请记住,虽然客户端验证在提供良好的用户体验方面发挥了重要作用,但它很容易被规避,因此不能被信任。服务器端验证对于一个安全的应用来说仍然是必要的。</target>
        </trans-unit>
        <trans-unit id="1eedca47903886a532d39ee2257b013bc5c557cd" translate="yes" xml:space="preserve">
          <source>Format input &amp;mdash; Use &lt;a href=&quot;forms&quot;&gt;AngularJS form controls&lt;/a&gt; instead.</source>
          <target state="translated">格式输入-改用&lt;a href=&quot;forms&quot;&gt;AngularJS表单控件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b9fd294ed8b67f7239254353f7b9ddfee62002f1" translate="yes" xml:space="preserve">
          <source>Format of items in &lt;a href=&quot;../provider/%24scedelegateprovider#resourceUrlWhitelist.html&quot;&gt;resourceUrlWhitelist&lt;/a&gt;/&lt;a href=&quot;../provider/%24scedelegateprovider#resourceUrlBlacklist.html&quot;&gt;Blacklist&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../provider/%24scedelegateprovider#resourceUrlWhitelist.html&quot;&gt;resourceUrlWhitelist&lt;/a&gt; / &lt;a href=&quot;../provider/%24scedelegateprovider#resourceUrlBlacklist.html&quot;&gt;Blacklist&lt;/a&gt;中项目的格式</target>
        </trans-unit>
        <trans-unit id="8e17b9df66528716e814be197136b7a326516c1c" translate="yes" xml:space="preserve">
          <source>Formats &lt;code&gt;date&lt;/code&gt; to a string based on the requested &lt;code&gt;format&lt;/code&gt;.</source>
          <target state="translated">根据请求的 &lt;code&gt;format&lt;/code&gt; 将 &lt;code&gt;date&lt;/code&gt; 格式化为字符串。</target>
        </trans-unit>
        <trans-unit id="eb856525f448d550db676ecb20ddcdce2f9183a5" translate="yes" xml:space="preserve">
          <source>Formats a number as a currency (ie $1,234.56). When no currency symbol is provided, default symbol for current locale is used.</source>
          <target state="translated">将一个数字格式化为货币(例如:1,234.56美元)。当没有提供货币符号时,将使用当前地区的默认符号。</target>
        </trans-unit>
        <trans-unit id="69675ca3093ae5e95c7f23454bbb0ec2a3e3a132" translate="yes" xml:space="preserve">
          <source>Formats a number as text.</source>
          <target state="translated">将数字格式化为文本。</target>
        </trans-unit>
        <trans-unit id="43567c9dea743d47cb7123053dbe369243a548e8" translate="yes" xml:space="preserve">
          <source>Formatted number.</source>
          <target state="translated">格式化的数字。</target>
        </trans-unit>
        <trans-unit id="a511d54043ebc3e9c36c28add78796a0f3f9f424" translate="yes" xml:space="preserve">
          <source>Formatted string or the input if input is not recognized as date/millis.</source>
          <target state="translated">格式化的字符串或输入,如果输入不被识别为日期/千分表。</target>
        </trans-unit>
        <trans-unit id="feaca5c695540ca4a17380a6775827911844a0ef" translate="yes" xml:space="preserve">
          <source>Formatters are used to format / convert the &lt;a href=&quot;ngmodel.ngmodelcontroller#%24modelValue.html&quot;&gt;&lt;code&gt;$modelValue&lt;/code&gt;&lt;/a&gt; for display in the control.</source>
          <target state="translated">格式化程序用于格式化/转换&lt;a href=&quot;ngmodel.ngmodelcontroller#%24modelValue.html&quot;&gt; &lt;code&gt;$modelValue&lt;/code&gt; &lt;/a&gt;以便在控件中显示。</target>
        </trans-unit>
        <trans-unit id="e6e18ee88ca6b32cea05d0e3080d8f655d9521b6" translate="yes" xml:space="preserve">
          <source>Formatting rules (see Description). If not specified, &lt;code&gt;mediumDate&lt;/code&gt; is used.</source>
          <target state="translated">格式化规则（请参阅描述）。如果未指定，则使用 &lt;code&gt;mediumDate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f0b06a027f8381260596b559c5a0e8d57007109" translate="yes" xml:space="preserve">
          <source>Formatting the value of time and datetime-local</source>
          <target state="translated">格式化时间和日期时间-本地的值。</target>
        </trans-unit>
        <trans-unit id="4bec9575721b2739ed1e7c56eb6c8471084fcbcf" translate="yes" xml:space="preserve">
          <source>Forms</source>
          <target state="translated">Forms</target>
        </trans-unit>
        <trans-unit id="34e426cd3274227d580489998337e732030d7d3c" translate="yes" xml:space="preserve">
          <source>Free Course</source>
          <target state="translated">免费课程</target>
        </trans-unit>
        <trans-unit id="b1cc7a14b45bb59084312de228fdaae722b439c3" translate="yes" xml:space="preserve">
          <source>From a testability point of view, the separation of the controller and the view is desirable, because it allows us to test the behavior without being distracted by the rendering details.</source>
          <target state="translated">从可测试性的角度来看,控制器和视图的分离是可取的,因为它允许我们测试行为而不被渲染细节所干扰。</target>
        </trans-unit>
        <trans-unit id="ff161838502e7c8b317b65fb969c906dab1f4586" translate="yes" xml:space="preserve">
          <source>From the perspective of dealing with error handling, deferred and promise APIs are to asynchronous programming what &lt;code&gt;try&lt;/code&gt;, &lt;code&gt;catch&lt;/code&gt; and &lt;code&gt;throw&lt;/code&gt; keywords are to synchronous programming.</source>
          <target state="translated">从处理错误处理的角度来看，延迟和承诺API对于异步编程而言是 &lt;code&gt;try&lt;/code&gt; ， &lt;code&gt;catch&lt;/code&gt; 和 &lt;code&gt;throw&lt;/code&gt; 关键字对于异步编程而言。</target>
        </trans-unit>
        <trans-unit id="d73e691376909588e8dda5cc25ad70145db6e2ea" translate="yes" xml:space="preserve">
          <source>Fulfills multiple requests</source>
          <target state="translated">满足多个请求</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="7e9e8ac7651cc9a1d61043f76ffdf8a16490138a" translate="yes" xml:space="preserve">
          <source>Function components in ng</source>
          <target state="translated">ng中的功能组件</target>
        </trans-unit>
        <trans-unit id="299be8740244752c39ca3ccf8a970cee133c25c2" translate="yes" xml:space="preserve">
          <source>Function components in ngMock</source>
          <target state="translated">ngMock中的功能组件</target>
        </trans-unit>
        <trans-unit id="c76a84b175d34bf214149af2c9e8f9e13e2e4fcc" translate="yes" xml:space="preserve">
          <source>Function for creating new instance of the service.</source>
          <target state="translated">用于创建新的服务实例的功能。</target>
        </trans-unit>
        <trans-unit id="7090d50b6c70bb19d3d516b59283dff809cdae61" translate="yes" xml:space="preserve">
          <source>Function for which dependent service names need to be retrieved as described above.</source>
          <target state="translated">如上所述,需要检索依赖服务名称的功能。</target>
        </trans-unit>
        <trans-unit id="c4ac49e1d1511eed6fbb89bab7baa0e4b33a477d" translate="yes" xml:space="preserve">
          <source>Function that will be called whenever the interpolated value of the attribute changes. See the &lt;a href=&quot;../../../guide/interpolation#how-text-and-attribute-bindings-work.html&quot;&gt;Interpolation guide&lt;/a&gt; for more info.</source>
          <target state="translated">每当属性的插值更改时将调用的函数。有关更多信息，请参见&lt;a href=&quot;../../../guide/interpolation#how-text-and-attribute-bindings-work.html&quot;&gt;插值指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b463c12a5f308c5c4aafc3e574eff48f177aef97" translate="yes" xml:space="preserve">
          <source>Function that wraps the &lt;code&gt;fn&lt;/code&gt; with all the specified bindings.</source>
          <target state="translated">用所有指定的绑定包装 &lt;code&gt;fn&lt;/code&gt; 的函数。</target>
        </trans-unit>
        <trans-unit id="fca9f3655fbd49d7d73e9fc899dae1611e2d1e66" translate="yes" xml:space="preserve">
          <source>Function to be bound.</source>
          <target state="translated">要绑定的功能。</target>
        </trans-unit>
        <trans-unit id="719583f650cbb51ca93d209fd7733efacca091e6" translate="yes" xml:space="preserve">
          <source>Function to call when the event is emitted.</source>
          <target state="translated">事件发生时调用的函数。</target>
        </trans-unit>
        <trans-unit id="195099197fbc90af0bf8f3534cf2c2ffbe52076f" translate="yes" xml:space="preserve">
          <source>Function which is responsible for resolving or rejecting the newly created promise. The first parameter is a function which resolves the promise, the second parameter is a function which rejects the promise.</source>
          <target state="translated">负责解析或拒绝新创建的承诺的函数。第一个参数是解析承诺的函数,第二个参数是拒绝承诺的函数。</target>
        </trans-unit>
        <trans-unit id="dbcc17581b648df6a6e5ecca84fd052cd7f998ad" translate="yes" xml:space="preserve">
          <source>Fundamentals in 60 Minutes (video)</source>
          <target state="translated">60分钟的基础知识(视频</target>
        </trans-unit>
        <trans-unit id="bafd4b54282745a2bed1442852b73f4b3189a77a" translate="yes" xml:space="preserve">
          <source>Further Reading</source>
          <target state="translated">进一步阅读</target>
        </trans-unit>
        <trans-unit id="03be4828bd04065e742a929df12bd3febf535195" translate="yes" xml:space="preserve">
          <source>Future route information.</source>
          <target state="translated">未来的路线信息。</target>
        </trans-unit>
        <trans-unit id="4f00f495f1b31beea48aec4250e15a8cb8f378e0" translate="yes" xml:space="preserve">
          <source>Games and GUI editors are examples of applications with intensive and tricky DOM manipulation. These kinds of apps are different from CRUD apps, and as a result are probably not a good fit for AngularJS. In these cases it may be better to use a library with a lower level of abstraction, such as &lt;code&gt;jQuery&lt;/code&gt;.</source>
          <target state="translated">游戏和GUI编辑器是具有密集而棘手的DOM操作的应用程序示例。这些应用程序与CRUD应用程序不同，因此可能不适合AngularJS。在这些情况下，最好使用抽象级别较低的库，例如 &lt;code&gt;jQuery&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a754c61c2ced0c5ff79a1827e02c9d643d6d926" translate="yes" xml:space="preserve">
          <source>Gender</source>
          <target state="translated">Gender</target>
        </trans-unit>
        <trans-unit id="022ad2aec8e03d3aeffcc6353469c736894859fc" translate="yes" xml:space="preserve">
          <source>Gender (aka select) Syntax</source>
          <target state="translated">性别(又称选择)语法</target>
        </trans-unit>
        <trans-unit id="9239ee2cda84eca4c3440e2a7b50148af67da3d4" translate="yes" xml:space="preserve">
          <source>General</source>
          <target state="translated">General</target>
        </trans-unit>
        <trans-unit id="37a13a917db9fd6aaad1b1420d262dd85b0845b4" translate="yes" xml:space="preserve">
          <source>General Learning Resources</source>
          <target state="translated">一般学习资源</target>
        </trans-unit>
        <trans-unit id="fbfff011ffdaef489b35073be8fbf243896fd8d0" translate="yes" xml:space="preserve">
          <source>General Use</source>
          <target state="translated">一般用途</target>
        </trans-unit>
        <trans-unit id="ed7feb5b4fe5b0b70af5a852a8c4193e523ae7ea" translate="yes" xml:space="preserve">
          <source>General overview of the API</source>
          <target state="translated">API概述</target>
        </trans-unit>
        <trans-unit id="098a776c18aed363a9dd217893658630e8cd72e8" translate="yes" xml:space="preserve">
          <source>General usage</source>
          <target state="translated">一般用途</target>
        </trans-unit>
        <trans-unit id="8245f1469399dc21184c708cfafeb02fe22720e6" translate="yes" xml:space="preserve">
          <source>Get access to a cache object by the &lt;code&gt;cacheId&lt;/code&gt; used when it was created.</source>
          <target state="translated">通过创建时使用的 &lt;code&gt;cacheId&lt;/code&gt; 获取对缓存对象的访问。</target>
        </trans-unit>
        <trans-unit id="e2634d2ab675dfb52782612c8c407712d90ab4ae" translate="yes" xml:space="preserve">
          <source>Get information about all the caches that have been created</source>
          <target state="translated">获取所有已创建的缓存信息。</target>
        </trans-unit>
        <trans-unit id="b7660cf3196f07e0a3ec7d200a945203c052a995" translate="yes" xml:space="preserve">
          <source>Getter and setter methods</source>
          <target state="translated">Getter和setter方法</target>
        </trans-unit>
        <trans-unit id="9633645141a566c014c4723a2e74a10b5b9548d9" translate="yes" xml:space="preserve">
          <source>Getters (calls to methods without parameters) return decoded values for the following methods &lt;code&gt;path()&lt;/code&gt;, &lt;code&gt;search()&lt;/code&gt;, &lt;code&gt;hash()&lt;/code&gt;.</source>
          <target state="translated">Getter（对不带参数的方法的调用）返回以下方法 &lt;code&gt;path()&lt;/code&gt; ， &lt;code&gt;search()&lt;/code&gt; ， &lt;code&gt;hash()&lt;/code&gt; 的解码值。</target>
        </trans-unit>
        <trans-unit id="9a0f73ca6aa746ede1e77153dd3bf5bb16e841ab" translate="yes" xml:space="preserve">
          <source>Getting Help</source>
          <target state="translated">获得帮助</target>
        </trans-unit>
        <trans-unit id="5442e2b64fa09764b9f593867e59a97292c84059" translate="yes" xml:space="preserve">
          <source>GitHub</source>
          <target state="translated">GitHub</target>
        </trans-unit>
        <trans-unit id="125fce7f6e4e46718b4324a9e531f51dac5b5239" translate="yes" xml:space="preserve">
          <source>Gitter</source>
          <target state="translated">Gitter</target>
        </trans-unit>
        <trans-unit id="8f89c3a7b049617c085d0669638c1304642c269d" translate="yes" xml:space="preserve">
          <source>Give your directive the &lt;code&gt;terminal&lt;/code&gt; property and a higher priority than directives that should not be compiled twice. In the example, the compiler will only compile directives which have a priority of 100 or higher.</source>
          <target state="translated">给您的指令以 &lt;code&gt;terminal&lt;/code&gt; 属性和比不应编译两次的指令更高的优先级。在该示例中，编译器将仅编译优先级为100或更高的指令。</target>
        </trans-unit>
        <trans-unit id="a4944830e9ab64a911c6a61e799488b1d408b662" translate="yes" xml:space="preserve">
          <source>Given a function, the injector can infer the names of the services to inject by examining the function declaration and extracting the parameter names. In the above example, &lt;code&gt;$scope&lt;/code&gt; and &lt;code&gt;greeter&lt;/code&gt; are two services which need to be injected into the function.</source>
          <target state="translated">给定一个函数，注入器可以通过检查函数声明并提取参数名称来推断要注入的服务的名称。在上面的示例中， &lt;code&gt;$scope&lt;/code&gt; 和 &lt;code&gt;greeter&lt;/code&gt; 是需要注入到函数中的两个服务。</target>
        </trans-unit>
        <trans-unit id="8e22639ca85295c0d8a371689da6f4b5266c177d" translate="yes" xml:space="preserve">
          <source>Given a template &lt;code&gt;/path/:verb&lt;/code&gt; and parameter &lt;code&gt;{verb: 'greet', salutation: 'Hello'}&lt;/code&gt; results in URL &lt;code&gt;/path/greet?salutation=Hello&lt;/code&gt;.</source>
          <target state="translated">给定模板 &lt;code&gt;/path/:verb&lt;/code&gt; 和参数 &lt;code&gt;{verb: 'greet', salutation: 'Hello'}&lt;/code&gt; 会生成URL &lt;code&gt;/path/greet?salutation=Hello&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="da53969ab67a277a2236b7677eabc9291e416b28" translate="yes" xml:space="preserve">
          <source>Given an expression that starts with &lt;code&gt;::&lt;/code&gt;, when a digest loop is entered and expression is dirty-checked, store the value as V</source>
          <target state="translated">给定一个以 &lt;code&gt;::&lt;/code&gt; 开头的表达式，当进入摘要循环并且对该表达式进行脏检查时，将该值存储为V</target>
        </trans-unit>
        <trans-unit id="fd29881d160148e4919339fe869d1ba4998c6ef7" translate="yes" xml:space="preserve">
          <source>Given an object and a security context in which to assign it, returns a value that's safe to use in this context, which was represented by the parameter. To do so, this function either unwraps the safe type it has been given (for instance, a &lt;a href=&quot;%24scedelegate#trustAs.html&quot;&gt;&lt;code&gt;$sceDelegate.trustAs&lt;/code&gt;&lt;/a&gt; result), or it might try to sanitize the value given, depending on the context and sanitizer availablility.</source>
          <target state="translated">给定对象和在其中分配对象的安全上下文，将返回一个可以在该上下文中安全使用的值，该值由参数表示。为此，此函数要么解开已给定的安全类型（例如，&lt;a href=&quot;%24scedelegate#trustAs.html&quot;&gt; &lt;code&gt;$sceDelegate.trustAs&lt;/code&gt; &lt;/a&gt;结果），要么根据上下文和清理程序的可用性尝试清理给定的值。</target>
        </trans-unit>
        <trans-unit id="9a257da8c321c097fe8fe5cc955c19057fa2bffc" translate="yes" xml:space="preserve">
          <source>Given the following error object for our example (which informs us that the field &lt;code&gt;myField&lt;/code&gt; currently has both the &lt;code&gt;required&lt;/code&gt; and &lt;code&gt;email&lt;/code&gt; errors):</source>
          <target state="translated">对于我们的示例，给出以下错误对象（它通知我们 &lt;code&gt;myField&lt;/code&gt; 字段当前同时具有 &lt;code&gt;required&lt;/code&gt; 和 &lt;code&gt;email&lt;/code&gt; 错误）：</target>
        </trans-unit>
        <trans-unit id="f9f18e9100167b3cbe391107f9b9896237d584ce" translate="yes" xml:space="preserve">
          <source>Given the nature of &lt;code&gt;ngModelOptions&lt;/code&gt;, the value displayed inside input fields in the view might be different from the value in the actual model. This means that if you update the model you should also invoke &lt;a href=&quot;../type/ngmodel.ngmodelcontroller#%24rollbackViewValue.html&quot;&gt;&lt;code&gt;ngModel.NgModelController&lt;/code&gt;&lt;/a&gt; on the relevant input field in order to make sure it is synchronized with the model and that any debounced action is canceled.</source>
          <target state="translated">鉴于 &lt;code&gt;ngModelOptions&lt;/code&gt; 的性质，视图中输入字段内显示的值可能与实际模型中的值不同。这意味着，如果更新模型，还应该在相关的输入字段上调用&lt;a href=&quot;../type/ngmodel.ngmodelcontroller#%24rollbackViewValue.html&quot;&gt; &lt;code&gt;ngModel.NgModelController&lt;/code&gt; &lt;/a&gt;，以确保它与模型同步并且取消了任何反跳动作。</target>
        </trans-unit>
        <trans-unit id="120a32f853f560c1d2bd012c26941580cd618e1e" translate="yes" xml:space="preserve">
          <source>Given this array of items on the $scope:</source>
          <target state="translated">鉴于$scope上的这个项目数组。</target>
        </trans-unit>
        <trans-unit id="660a89b0fbdf53826bcc57234ddbd04675201f3d" translate="yes" xml:space="preserve">
          <source>Given this complex combination of CSS classes, styles and options, &lt;code&gt;$animateCss&lt;/code&gt; will figure everything out and make the animation happen.</source>
          <target state="translated">鉴于CSS类，样式和选项的这种复杂组合， &lt;code&gt;$animateCss&lt;/code&gt; 将解决所有问题并使动画发生。</target>
        </trans-unit>
        <trans-unit id="f77562ae0f3df5f61f357418891b85a82b5f1b10" translate="yes" xml:space="preserve">
          <source>Google+</source>
          <target state="translated">Google+</target>
        </trans-unit>
        <trans-unit id="99e8c59f379e7741fc044ae1510082583a27eb98" translate="yes" xml:space="preserve">
          <source>Grouping of HTML into reusable components.</source>
          <target state="translated">将HTML分组为可重复使用的组件。</target>
        </trans-unit>
        <trans-unit id="3ba448f1c251a3f30a4894252c910f2f06e1790f" translate="yes" xml:space="preserve">
          <source>Grouping related tests within &lt;code&gt;describe&lt;/code&gt; blocks and describing each individual test within an &lt;code&gt;it&lt;/code&gt; call keeps your tests self documenting.</source>
          <target state="translated">在 &lt;code&gt;describe&lt;/code&gt; 块内对相关测试进行分组，并在 &lt;code&gt;it&lt;/code&gt; 调用内描述每个测试，以使您的测试能够自我记录。</target>
        </trans-unit>
        <trans-unit id="bf073fae640ded81eeb7a4cee70faff4a623c16c" translate="yes" xml:space="preserve">
          <source>Guide</source>
          <target state="translated">Guide</target>
        </trans-unit>
        <trans-unit id="4857fab7166afc1434fd0e5b087340d9d836a21f" translate="yes" xml:space="preserve">
          <source>Guide: Forms</source>
          <target state="translated">指南。表格</target>
        </trans-unit>
        <trans-unit id="082638bfa9b018580d30a942ed8e17ec72bfee8f" translate="yes" xml:space="preserve">
          <source>HTML &lt;code&gt;select&lt;/code&gt; element with AngularJS data-binding.</source>
          <target state="translated">具有AngularJS数据绑定的HTML &lt;code&gt;select&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="1ed7cdfdbf49bfaa13fce98fe7cec3a1c300e160" translate="yes" xml:space="preserve">
          <source>HTML Compiler</source>
          <target state="translated">HTML编译器</target>
        </trans-unit>
        <trans-unit id="8103e94886ef5d4fe535735e02a17a98d0a0dda5" translate="yes" xml:space="preserve">
          <source>HTML Sanitization</source>
          <target state="translated">HTML消毒</target>
        </trans-unit>
        <trans-unit id="956dfc4aa08de7e5a58a5878e750adab8be1a7a5" translate="yes" xml:space="preserve">
          <source>HTML compilation happens in three phases:</source>
          <target state="translated">HTML编译分三个阶段进行。</target>
        </trans-unit>
        <trans-unit id="365711f3aa530a2399266a71af0d94bbd34fb790" translate="yes" xml:space="preserve">
          <source>HTML compiler</source>
          <target state="translated">HTML编译器</target>
        </trans-unit>
        <trans-unit id="9eb40b7d07d13c87ed32d2291d04e9ac3fc3ab1c" translate="yes" xml:space="preserve">
          <source>HTML has a lot of constructs for formatting the HTML for static documents in a declarative fashion. For example if something needs to be centered, there is no need to provide instructions to the browser how the window size needs to be divided in half so that the center is found, and that this center needs to be aligned with the text's center. Simply add an &lt;code&gt;align=&quot;center&quot;&lt;/code&gt; attribute to any element to achieve the desired behavior. Such is the power of declarative language.</source>
          <target state="translated">HTML具有许多用于以声明方式格式化静态文档的HTML的结构。例如，如果某些内容需要居中，则无需向浏览器提供说明如何将窗口大小分成两半才能找到中心，并且该中心必须与文本的中心对齐。只需将 &lt;code&gt;align=&quot;center&quot;&lt;/code&gt; 属性添加到任何元素即可实现所需的行为。这就是声明性语言的力量。</target>
        </trans-unit>
        <trans-unit id="bd11a5d2ff3115a84c7177fab98a96885225b6f0" translate="yes" xml:space="preserve">
          <source>HTML input element control. When used together with &lt;a href=&quot;directive/ngmodel&quot;&gt;&lt;code&gt;ngModel&lt;/code&gt;&lt;/a&gt;, it provides data-binding, input state control, and validation. Input control follows HTML5 input types and polyfills the HTML5 validation behavior for older browsers.</source>
          <target state="translated">HTML输入元素控件。与&lt;a href=&quot;directive/ngmodel&quot;&gt; &lt;code&gt;ngModel&lt;/code&gt; &lt;/a&gt;一起使用时，它提供数据绑定，输入状态控制和验证。输入控件遵循HTML5输入类型，并填充旧浏览器的HTML5验证行为。</target>
        </trans-unit>
        <trans-unit id="75cd325edf2be9c413b3f9e3b95e9fce9dfbe8ca" translate="yes" xml:space="preserve">
          <source>HTML input element control. When used together with &lt;a href=&quot;ngmodel&quot;&gt;&lt;code&gt;ngModel&lt;/code&gt;&lt;/a&gt;, it provides data-binding, input state control, and validation. Input control follows HTML5 input types and polyfills the HTML5 validation behavior for older browsers.</source>
          <target state="translated">HTML输入元素控件。与&lt;a href=&quot;ngmodel&quot;&gt; &lt;code&gt;ngModel&lt;/code&gt; &lt;/a&gt;一起使用时，它提供数据绑定，输入状态控制和验证。输入控件遵循HTML5输入类型，并填充旧浏览器的HTML5验证行为。</target>
        </trans-unit>
        <trans-unit id="b52ce58ede873fa3ffe8c4f4b95938da98b79e53" translate="yes" xml:space="preserve">
          <source>HTML input.</source>
          <target state="translated">HTML输入。</target>
        </trans-unit>
        <trans-unit id="3002c557c6e602f4fc52a7ef3b7fe2ffd052cecd" translate="yes" xml:space="preserve">
          <source>HTML link rewriting</source>
          <target state="translated">HTML链接重写</target>
        </trans-unit>
        <trans-unit id="0e0f1476dcc9c91e2471380aac237c3c16762a4f" translate="yes" xml:space="preserve">
          <source>HTML markup that may:</source>
          <target state="translated">HTML标记,可。</target>
        </trans-unit>
        <trans-unit id="673e4be38003649fd68400ae693d19b8570e48ea" translate="yes" xml:space="preserve">
          <source>HTML string or DOMElement to be wrapped into jQuery.</source>
          <target state="translated">将HTML字符串或DOME元素封装到jQuery中。</target>
        </trans-unit>
        <trans-unit id="28dfba92f8df7dc9094d96723e46d403afe9cf5f" translate="yes" xml:space="preserve">
          <source>HTML textarea element control with AngularJS data-binding. The data-binding and validation properties of this element are exactly the same as those of the &lt;a href=&quot;directive/input&quot;&gt;input element&lt;/a&gt;.</source>
          <target state="translated">带有AngularJS数据绑定的HTML textarea元素控件。此元素的数据绑定和验证属性与&lt;a href=&quot;directive/input&quot;&gt;input元素&lt;/a&gt;的数据绑定和验证属性完全相同。</target>
        </trans-unit>
        <trans-unit id="90fae27fbf7cecfb835c5ded77341c01b96b78d4" translate="yes" xml:space="preserve">
          <source>HTML textarea element control with AngularJS data-binding. The data-binding and validation properties of this element are exactly the same as those of the &lt;a href=&quot;input&quot;&gt;input element&lt;/a&gt;.</source>
          <target state="translated">带有AngularJS数据绑定的HTML textarea元素控件。此元素的数据绑定和验证属性与&lt;a href=&quot;input&quot;&gt;input元素&lt;/a&gt;的数据绑定和验证属性完全相同。</target>
        </trans-unit>
        <trans-unit id="380dca5d29ff8bcbe21b89ea209d96e274ac2a42" translate="yes" xml:space="preserve">
          <source>HTML with additional markup</source>
          <target state="translated">带附加标记的HTML</target>
        </trans-unit>
        <trans-unit id="919928d7bcf7b5802913b51423e1f3fc331681f0" translate="yes" xml:space="preserve">
          <source>HTML5 mode</source>
          <target state="translated">HTML5模式</target>
        </trans-unit>
        <trans-unit id="147cce8975179e5500fc1bb079891e026beac7f0" translate="yes" xml:space="preserve">
          <source>HTTP Requests</source>
          <target state="translated">HTTP请求</target>
        </trans-unit>
        <trans-unit id="6e5a031619e754e2aaded2be7edff5361ccb3202" translate="yes" xml:space="preserve">
          <source>HTTP backend used by the &lt;a href=&quot;%24http&quot;&gt;service&lt;/a&gt; that delegates to XMLHttpRequest object or JSONP and deals with browser incompatibilities.</source>
          <target state="translated">委托给XMLHttpRequest对象或JSONP并处理浏览器不兼容性的&lt;a href=&quot;%24http&quot;&gt;服务&lt;/a&gt;使用的HTTP后端。</target>
        </trans-unit>
        <trans-unit id="0843ce217fdeb5d4a43dd425f0f9a5e92422e97d" translate="yes" xml:space="preserve">
          <source>HTTP backend used by the &lt;a href=&quot;service/%24http&quot;&gt;service&lt;/a&gt; that delegates to XMLHttpRequest object or JSONP and deals with browser incompatibilities.</source>
          <target state="translated">委托给XMLHttpRequest对象或JSONP并处理浏览器不兼容性的&lt;a href=&quot;service/%24http&quot;&gt;服务&lt;/a&gt;使用的HTTP后端。</target>
        </trans-unit>
        <trans-unit id="11ed26cd0ecb017842889c5368f7817eb65b4c04" translate="yes" xml:space="preserve">
          <source>HTTP headers or function that receives http header object and returns true if the headers match the current definition.</source>
          <target state="translated">HTTP头文件或接收http头文件对象的函数,如果头文件符合当前定义,则返回true。</target>
        </trans-unit>
        <trans-unit id="e9f0ada937e7482930d25244a71bfc57dc18e31b" translate="yes" xml:space="preserve">
          <source>HTTP headers or function that receives http header object and returns true if the headers match the current expectation.</source>
          <target state="translated">HTTP头文件或接收http头文件对象的函数,如果头文件符合当前的期望,则返回true。</target>
        </trans-unit>
        <trans-unit id="4da8efbb95087f4efaddd53fa5a5d02998d8073e" translate="yes" xml:space="preserve">
          <source>HTTP headers.</source>
          <target state="translated">HTTP头文件。</target>
        </trans-unit>
        <trans-unit id="69dcbdcaea66e534100430f491b74862af6545a6" translate="yes" xml:space="preserve">
          <source>HTTP method of the request (GET, POST, PUT, ..)</source>
          <target state="translated">请求的HTTP方法(GET,POST,PUT,...)。</target>
        </trans-unit>
        <trans-unit id="e7f701abbb4892632f63163af61f703f4d792e54" translate="yes" xml:space="preserve">
          <source>HTTP method.</source>
          <target state="translated">HTTP方法。</target>
        </trans-unit>
        <trans-unit id="739b34082ae180864afd2da55be339a290e09a21" translate="yes" xml:space="preserve">
          <source>HTTP request body or function that receives data string and returns true if the data is as expected, or Object if request body is in JSON format.</source>
          <target state="translated">接收数据字符串的HTTP请求体或函数,如果数据符合预期,则返回true,如果请求体是JSON格式,则返回Object。</target>
        </trans-unit>
        <trans-unit id="d86c6c3cef60e8657176cf9663c203f4df35ae7e" translate="yes" xml:space="preserve">
          <source>HTTP request body or function that receives data string and returns true if the data is as expected.</source>
          <target state="translated">接收数据字符串的HTTP请求体或函数,如果数据符合预期,则返回true。</target>
        </trans-unit>
        <trans-unit id="b3becea06d0acfa7255eb772d6dcbbb225cf0343" translate="yes" xml:space="preserve">
          <source>HTTP url or function that receives a url and returns true if the url matches the current definition.</source>
          <target state="translated">HTTP url或接收url的函数,如果url符合当前定义,则返回true。</target>
        </trans-unit>
        <trans-unit id="f52106e31df4471f850e4bc7609166aea45564e9" translate="yes" xml:space="preserve">
          <source>HTTP url or function that receives a url and returns true if the url matches the current expectation.</source>
          <target state="translated">HTTP url或函数,接收一个url,如果url符合当前的期望,则返回true。</target>
        </trans-unit>
        <trans-unit id="99507adf96330288819643c1bf1b9641131bf84a" translate="yes" xml:space="preserve">
          <source>HTTP url or function that receives an url and returns true if the url matches the current expectation.</source>
          <target state="translated">HTTP url或函数,接收一个url,如果url符合当前的期望,则返回true。</target>
        </trans-unit>
        <trans-unit id="ce3a987c846205d185fc2edc4fe91e7d5c5a336c" translate="yes" xml:space="preserve">
          <source>HTTP url string that supports colon param matching.</source>
          <target state="translated">支持冒号匹配的HTTP url字符串。</target>
        </trans-unit>
        <trans-unit id="f9d5d6116a9799462a571a9c71dd9f844beb5ac1" translate="yes" xml:space="preserve">
          <source>Hash with custom settings that should extend the default &lt;code&gt;$resourceProvider&lt;/code&gt; behavior. The supported options are:</source>
          <target state="translated">使用自定义设置进行哈希处理，以扩展默认的 &lt;code&gt;$resourceProvider&lt;/code&gt; 行为。支持的选项有：</target>
        </trans-unit>
        <trans-unit id="23feba264c938cd5a816b433a94ce03d183ea1f6" translate="yes" xml:space="preserve">
          <source>Hash with declaration of custom actions that will be available in addition to the default set of resource actions (see below). If a custom action has the same key as a default action (e.g. &lt;code&gt;save&lt;/code&gt;), then the default action will be &lt;em&gt;overwritten&lt;/em&gt;, and not extended.</source>
          <target state="translated">除了默认的资源操作集（请参阅下文）之外，还提供带有自定义操作的声明的散列。如果自定义动作与默认动作具有相同的键（例如 &lt;code&gt;save&lt;/code&gt; ），则默认动作将被&lt;em&gt;覆盖&lt;/em&gt;，并且不会扩展。</target>
        </trans-unit>
        <trans-unit id="cfaff8179045261bcc9e2cdcac0ab24460c6b352" translate="yes" xml:space="preserve">
          <source>Hashbang and HTML5 Modes</source>
          <target state="translated">Hashbang和HTML5模式</target>
        </trans-unit>
        <trans-unit id="1b0dd8a962c1421c7d52d29272d65b7f22a06a41" translate="yes" xml:space="preserve">
          <source>Hashbang mode</source>
          <target state="translated">散列式模式</target>
        </trans-unit>
        <trans-unit id="152790ca6a4f5a814b879804ca53c1db52354436" translate="yes" xml:space="preserve">
          <source>Hashbang mode (default mode)</source>
          <target state="translated">杂项模式(默认模式</target>
        </trans-unit>
        <trans-unit id="dc65de69cf1204a0d8f6a65f23b5cbdc59c7f6f2" translate="yes" xml:space="preserve">
          <source>Helper directive that makes it possible to create control groups inside a &lt;a href=&quot;directive/form&quot;&gt;&lt;code&gt;form&lt;/code&gt;&lt;/a&gt; directive. These &quot;child forms&quot; can be used, for example, to determine the validity of a sub-group of controls.</source>
          <target state="translated">Helper指令，可以在&lt;a href=&quot;directive/form&quot;&gt; &lt;code&gt;form&lt;/code&gt; &lt;/a&gt;指令内创建控制组。这些&amp;ldquo;子形式&amp;rdquo;可用于例如确定控件子组的有效性。</target>
        </trans-unit>
        <trans-unit id="15d728397a26dc6b863f20082f5868fb493c86c9" translate="yes" xml:space="preserve">
          <source>Helper directive that makes it possible to create control groups inside a &lt;a href=&quot;form&quot;&gt;&lt;code&gt;form&lt;/code&gt;&lt;/a&gt; directive. These &quot;child forms&quot; can be used, for example, to determine the validity of a sub-group of controls.</source>
          <target state="translated">Helper指令，可以在&lt;a href=&quot;form&quot;&gt; &lt;code&gt;form&lt;/code&gt; &lt;/a&gt;指令内创建控制组。这些&amp;ldquo;子形式&amp;rdquo;可用于例如确定控件子组的有效性。</target>
        </trans-unit>
        <trans-unit id="eace3f9f2323bbf0fc546742d11cd0621ca25ee4" translate="yes" xml:space="preserve">
          <source>Here a some examples of creating constants:</source>
          <target state="translated">这里有一些创建常量的例子。</target>
        </trans-unit>
        <trans-unit id="5e4c893051b4707f0e5b1249e7e81bc432fd4fb1" translate="yes" xml:space="preserve">
          <source>Here are a few examples of how you would usually define components:</source>
          <target state="translated">下面是几个例子,说明你通常如何定义组件。</target>
        </trans-unit>
        <trans-unit id="22cfeeec8cbcab5dc8c92c408c3caa8cfedfcb3d" translate="yes" xml:space="preserve">
          <source>Here are some examples of creating value services.</source>
          <target state="translated">下面是一些创造价值服务的例子。</target>
        </trans-unit>
        <trans-unit id="2572f0dbd83dbe653e314f42e4e17d11e1e31488" translate="yes" xml:space="preserve">
          <source>Here is a directive which makes any element draggable. Notice the &lt;code&gt;draggable&lt;/code&gt; attribute on the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">这是一个使任何元素都可拖动的指令。注意 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 元素上的 &lt;code&gt;draggable&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="62a4417e4f911e91ec77edfd2357c79ffed4f432" translate="yes" xml:space="preserve">
          <source>Here is a simple form for editing user contact information. Adding, removing, clearing, and greeting are methods declared on the controller (see source tab). These methods can easily be called from the AngularJS markup. Any changes to the data are automatically reflected in the View without the need for a manual update.</source>
          <target state="translated">这里是一个简单的编辑用户联系信息的表单。添加、删除、清除和问候是在控制器上声明的方法(见源标签)。这些方法可以从AngularJS标记中轻松调用。对数据的任何更改都会自动反映在View中,而不需要手动更新。</target>
        </trans-unit>
        <trans-unit id="34352a17a8a9151e3590aa194b3aa02094f7b560" translate="yes" xml:space="preserve">
          <source>Here is a tab pane example built from components:</source>
          <target state="translated">这里是一个由组件构建的标签窗格示例。</target>
        </trans-unit>
        <trans-unit id="1d069503fae353633f357af5e3a2b89070c3ed31" translate="yes" xml:space="preserve">
          <source>Here is an example of a simple test:</source>
          <target state="translated">下面是一个简单测试的例子。</target>
        </trans-unit>
        <trans-unit id="50474d9c5b7e0f79dfee63bb5d1c04123879a0cc" translate="yes" xml:space="preserve">
          <source>Here is an example of loading a bundle of modules, with a utility method called &lt;code&gt;getScript&lt;/code&gt;:</source>
          <target state="translated">这是一个使用名为 &lt;code&gt;getScript&lt;/code&gt; 的实用程序方法加载模块捆绑包的示例：</target>
        </trans-unit>
        <trans-unit id="5880ff63c8f632463ae878d297d5b56bfbfbdc24" translate="yes" xml:space="preserve">
          <source>Here is an example of manually initializing AngularJS:</source>
          <target state="translated">下面是一个手动初始化AngularJS的例子。</target>
        </trans-unit>
        <trans-unit id="8c04abad1ef15232b7d33e41e2d2c33485dde663" translate="yes" xml:space="preserve">
          <source>Here is an example of registering a service</source>
          <target state="translated">下面是一个注册服务的例子</target>
        </trans-unit>
        <trans-unit id="5e759d842c3481da215b710834ed2ca1a95f87df" translate="yes" xml:space="preserve">
          <source>Here is an example of registering a service using &lt;a href=&quot;%24provide#service.html&quot;&gt;$provide.service(class)&lt;/a&gt;.</source>
          <target state="translated">这是使用&lt;a href=&quot;%24provide#service.html&quot;&gt;$ provide.service（class）&lt;/a&gt;注册服务的示例。</target>
        </trans-unit>
        <trans-unit id="1a29f24b6a2342f727b445e40478dc68dee15260" translate="yes" xml:space="preserve">
          <source>Here is an example of using the injector service:</source>
          <target state="translated">下面是一个使用注射器服务的例子。</target>
        </trans-unit>
        <trans-unit id="c6658c30a573eda1a06af398c5b3162bb3669f48" translate="yes" xml:space="preserve">
          <source>Here is an example of what the template definition for the &lt;code&gt;dialog&lt;/code&gt; widget may look like.</source>
          <target state="translated">这是 &lt;code&gt;dialog&lt;/code&gt; 小部件的模板定义的示例。</target>
        </trans-unit>
        <trans-unit id="efb89522d8e99553f459d6f83b6cca9501f43b08" translate="yes" xml:space="preserve">
          <source>Here is the explanation of how the &lt;code&gt;Hello world&lt;/code&gt; example achieves the data-binding effect when the user enters text into the text field.</source>
          <target state="translated">这是当用户在文本字段中输入文本时， &lt;code&gt;Hello world&lt;/code&gt; 示例如何实现数据绑定效果的说明。</target>
        </trans-unit>
        <trans-unit id="dddbe54fb40a9da471f8ece2fdb9b87dab4acbf1" translate="yes" xml:space="preserve">
          <source>Here is what a secure configuration for this scenario might look like:</source>
          <target state="translated">以下是这种情况下的安全配置可能是这样的。</target>
        </trans-unit>
        <trans-unit id="e3c1dfdb750e0373bfa4303b6efe8294d9bfd88d" translate="yes" xml:space="preserve">
          <source>Here we decorate the &lt;a href=&quot;../../ng/service/%24log&quot;&gt;$log&lt;/a&gt; service to convert warnings to errors by intercepting calls to &lt;a href=&quot;../../ng/service/%24log#error.html&quot;&gt;$log.warn()&lt;/a&gt;.</source>
          <target state="translated">在这里，我们装饰&lt;a href=&quot;../../ng/service/%24log&quot;&gt;$ log&lt;/a&gt;服务，以通过拦截对&lt;a href=&quot;../../ng/service/%24log#error.html&quot;&gt;$ log.warn（）的&lt;/a&gt;调用将警告转换为错误。</target>
        </trans-unit>
        <trans-unit id="e815a124520499322845f10059e60c7b540cfceb" translate="yes" xml:space="preserve">
          <source>Here we pass an array whose elements consist of a list of strings (the names of the dependencies) followed by the function itself.</source>
          <target state="translated">这里我们传递一个数组,其元素由一个字符串列表(依赖关系的名称)和函数本身组成。</target>
        </trans-unit>
        <trans-unit id="68c7479252208403902f6aa1ed6ea1da9bebafb9" translate="yes" xml:space="preserve">
          <source>Here we've seen the main use cases for directives. Each of these samples acts as a good starting point for creating your own directives.</source>
          <target state="translated">在这里我们已经看到了指令的主要用例。这些示例中的每一个都是创建你自己的指令的良好起点。</target>
        </trans-unit>
        <trans-unit id="60e05935ab8bb78195f78bcb2800807eccda1fc0" translate="yes" xml:space="preserve">
          <source>Here you can see two &lt;code&gt;$location&lt;/code&gt; instances that show the difference between &lt;strong&gt;Html5 mode&lt;/strong&gt; and &lt;strong&gt;Html5 Fallback mode&lt;/strong&gt;. Note that to simulate different levels of browser support, the &lt;code&gt;$location&lt;/code&gt; instances are connected to a fakeBrowser service, which you don't have to set up in actual projects.</source>
          <target state="translated">在这里，您可以看到两个 &lt;code&gt;$location&lt;/code&gt; 实例，它们显示了&lt;strong&gt;Html5模式&lt;/strong&gt;和&lt;strong&gt;Html5后备模式&lt;/strong&gt;之间的区别。请注意，要模拟不同级别的浏览器支持，将 &lt;code&gt;$location&lt;/code&gt; 实例连接到fakeBrowser服务，您无需在实际项目中进行设置。</target>
        </trans-unit>
        <trans-unit id="85689592e66dcddab07a025f0a7c7fa876676daf" translate="yes" xml:space="preserve">
          <source>Here's an example directive declared with a Directive Definition Object:</source>
          <target state="translated">下面是一个用指令定义对象声明的指令示例。</target>
        </trans-unit>
        <trans-unit id="98ab52376054b0ae6a09ea8fc36acb184a3cb5d2" translate="yes" xml:space="preserve">
          <source>Here's an example of a binding in a privileged context:</source>
          <target state="translated">下面是一个在特权上下文中绑定的例子。</target>
        </trans-unit>
        <trans-unit id="bc027285afdb7e2491e24d412648e4821006ff8a" translate="yes" xml:space="preserve">
          <source>Here's an example where you might see flickering:</source>
          <target state="translated">下面是一个你可能看到闪烁的例子。</target>
        </trans-unit>
        <trans-unit id="7c311fcba1d54c9fe55032b814cda6cb881db5cd" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;EXPRESSION&lt;/code&gt; is an AngularJS expression that evaluates to the gender of the person that is used to select the message that should be displayed.</source>
          <target state="translated">在这里， &lt;code&gt;EXPRESSION&lt;/code&gt; 是一个AngularJS表达式，其值用于评估用于选择应显示的消息的人员的性别。</target>
        </trans-unit>
        <trans-unit id="e23108d1c2e1059fd8d1e90bb0a080a1d96f5b9d" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;NUMERIC_EXPRESSION&lt;/code&gt; is an expression that evaluates to a numeric value based on which the displayed message should change based on pluralization rules.</source>
          <target state="translated">此处， &lt;code&gt;NUMERIC_EXPRESSION&lt;/code&gt; 是一个表达式，其计算结果为数值，基于该数值，显示的消息应基于复数规则进行更改。</target>
        </trans-unit>
        <trans-unit id="73eb7dfae55511c85ac87046d8ad655d3b07d514" translate="yes" xml:space="preserve">
          <source>History state object that was before it was changed.</source>
          <target state="translated">历史状态的对象,在它被改变之前是。</target>
        </trans-unit>
        <trans-unit id="b5c1c159a3e483ad357e69c27c87a0816f3f5eba" translate="yes" xml:space="preserve">
          <source>Holds the list of modules which the injector will load before the current module is loaded.</source>
          <target state="translated">保存在当前模块被加载之前,喷射器将加载的模块列表。</target>
        </trans-unit>
        <trans-unit id="c20a5f818418ae5d1d96d68d2a880b61a688edbd" translate="yes" xml:space="preserve">
          <source>How directives are compiled</source>
          <target state="translated">指令是如何编译的</target>
        </trans-unit>
        <trans-unit id="b4be41c74e5a460177988dde73728bedd08a211a" translate="yes" xml:space="preserve">
          <source>How do I use animations in my own directives?</source>
          <target state="translated">如何在自己的指令中使用动画?</target>
        </trans-unit>
        <trans-unit id="683b2a3eb2b6d989ff0fc60d2e062d97e39208a2" translate="yes" xml:space="preserve">
          <source>How does AngularJS support i18n/l10n?</source>
          <target state="translated">AngularJS如何支持i18n/l10n?</target>
        </trans-unit>
        <trans-unit id="e21860bf37328b97ebb0ddd904694c78e4a7b382" translate="yes" xml:space="preserve">
          <source>How does it work?</source>
          <target state="translated">它是如何工作的?</target>
        </trans-unit>
        <trans-unit id="88ed97b08c81463ee06f53f3b6c1779c600aa1c6" translate="yes" xml:space="preserve">
          <source>How is the element transported?</source>
          <target state="translated">元素是如何运输的?</target>
        </trans-unit>
        <trans-unit id="8faafbf047891a8907eb94c858a2397c59b48b6b" translate="yes" xml:space="preserve">
          <source>How is the morphing handled?</source>
          <target state="translated">如何处理变形?</target>
        </trans-unit>
        <trans-unit id="f0b1fc1ac088c2160c01191d7d56a0bae6f8e3aa" translate="yes" xml:space="preserve">
          <source>How text and attribute bindings work</source>
          <target state="translated">文本和属性绑定如何工作</target>
        </trans-unit>
        <trans-unit id="6348c07b83ad0bb6dae1ec6cd1b77c21662b9a62" translate="yes" xml:space="preserve">
          <source>How the Options are handled</source>
          <target state="translated">如何处理期权</target>
        </trans-unit>
        <trans-unit id="2a6cb3a378b1a04b05ce40f114a5850c30af8933" translate="yes" xml:space="preserve">
          <source>How the string representation is computed</source>
          <target state="translated">字符串表示法是如何计算的</target>
        </trans-unit>
        <trans-unit id="4aa425ac030122afe10e7f53638d920844d71819" translate="yes" xml:space="preserve">
          <source>How they work</source>
          <target state="translated">它们是如何工作的</target>
        </trans-unit>
        <trans-unit id="6e13b2dba241833a9f148d24533b2b4f0e74bb53" translate="yes" xml:space="preserve">
          <source>How to (selectively) enable, disable and skip animations</source>
          <target state="translated">如何(有选择地)启用、禁用和跳过动画。</target>
        </trans-unit>
        <trans-unit id="a25fb8be7987e971198c72036edd9325e925e49a" translate="yes" xml:space="preserve">
          <source>How to benefit from one-time binding</source>
          <target state="translated">如何从一次性约束中获益</target>
        </trans-unit>
        <trans-unit id="cd8d1af145e22f4071b3803ea34db2257342448d" translate="yes" xml:space="preserve">
          <source>How to use decorators</source>
          <target state="translated">如何使用装饰剂</target>
        </trans-unit>
        <trans-unit id="c2a2f74412612724a85fc7c3904fcb3d54c23855" translate="yes" xml:space="preserve">
          <source>How would you ensure that every place that used these types of bindings was bound to a value that was sanitized by your library (or returned as safe for rendering by your server?) How can you ensure that you didn't accidentally delete the line that sanitized the value, or renamed some properties/fields and forgot to update the binding to the sanitized value?</source>
          <target state="translated">你如何确保每一个使用这些类型的绑定的地方都绑定到一个被你的库sanitized的值上(或者被你的服务器作为安全的渲染返回?)你如何确保你不会不小心删除了sanitized值的行,或者重命名了一些属性/字段,而忘记更新绑定到sanitized值?</target>
        </trans-unit>
        <trans-unit id="69e8e5e39cfe987166eee61d96837365193ccc8b" translate="yes" xml:space="preserve">
          <source>However &lt;code&gt;isolated&lt;/code&gt; scope creates a new problem: if a transcluded DOM is a child of the widget isolated scope then it will not be able to bind to anything. For this reason the transcluded scope is a child of the original scope, before the widget created an isolated scope for its local variables. This makes the transcluded and widget isolated scope siblings.</source>
          <target state="translated">但是， &lt;code&gt;isolated&lt;/code&gt; 范围会带来一个新问题：如果被嵌入的DOM是小部件隔离范围的子级，那么它将无法绑定到任何东西。因此，在小部件为其局部变量创建隔离范围之前，已包含范围是原始范围的子级。这将使包含在内且与窗口小部件隔离的作用域同级。</target>
        </trans-unit>
        <trans-unit id="60975c6582a2823450029e613dcd8a25e14ebad5" translate="yes" xml:space="preserve">
          <source>However it's more likely that you'll just use &lt;a href=&quot;../directive/ngapp&quot;&gt;ngApp&lt;/a&gt; or &lt;a href=&quot;angular.bootstrap&quot;&gt;&lt;code&gt;angular.bootstrap&lt;/code&gt;&lt;/a&gt; to simplify this process for you.</source>
          <target state="translated">但是，您更有可能仅使用&lt;a href=&quot;../directive/ngapp&quot;&gt;ngApp&lt;/a&gt;或&lt;a href=&quot;angular.bootstrap&quot;&gt; &lt;code&gt;angular.bootstrap&lt;/code&gt; &lt;/a&gt;为您简化此过程。</target>
        </trans-unit>
        <trans-unit id="999f598a92635af8c6759e6c95a25535ddb1aa15" translate="yes" xml:space="preserve">
          <source>However this method will not work with JavaScript minifiers/obfuscators because of how they rename parameters.</source>
          <target state="translated">然而,这个方法将不能与JavaScript minifiers/obfuscators一起使用,因为它们是如何重命名参数的。</target>
        </trans-unit>
        <trans-unit id="74b78a2717429ba3b6055f58ec7371c056ceb4fc" translate="yes" xml:space="preserve">
          <source>However, &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Web_Components/Using_custom_elements&quot;&gt;custom elements&lt;/a&gt; often use custom properties to hold data, and &lt;code&gt;ngProp&lt;/code&gt; can be used to provide input to these custom elements.</source>
          <target state="translated">但是，&lt;a href=&quot;https://developer.mozilla.org/docs/Web/Web_Components/Using_custom_elements&quot;&gt;自定义元素&lt;/a&gt;通常使用自定义属性来保存数据，并且 &lt;code&gt;ngProp&lt;/code&gt; 可以用于向这些自定义元素提供输入。</target>
        </trans-unit>
        <trans-unit id="9ef1218d8c362088f0bcdd7920f20b4f50be4419" translate="yes" xml:space="preserve">
          <source>However, if the method is used programmatically, for example by adding dynamically created controls, or controls that have been previously removed without destroying their corresponding DOM element, it's the developers responsibility to make sure the current state propagates to the parent form.</source>
          <target state="translated">但是,如果该方法是以编程方式使用的,例如,通过添加动态创建的控件,或者之前已经删除的控件,而不破坏其对应的DOM元素,那么开发人员有责任确保当前状态传播到父表单中。</target>
        </trans-unit>
        <trans-unit id="7833f0d3d950db315e3b6d2099d681792715c7c0" translate="yes" xml:space="preserve">
          <source>However, including generic messages may not be useful enough to match all input fields, therefore, &lt;code&gt;ngMessages&lt;/code&gt; provides the ability to override messages defined in the remote template by redefining them within the directive container.</source>
          <target state="translated">但是，包括通用消息可能不足以匹配所有输入字段，因此， &lt;code&gt;ngMessages&lt;/code&gt; 提供了通过在指令容器内重新定义消息来覆盖远程模板中定义的消息的功能。</target>
        </trans-unit>
        <trans-unit id="877ce4a445ea5e831a4f4c27b0f0efa155233b3c" translate="yes" xml:space="preserve">
          <source>However, the declarative language is also limited, as it does not allow you to teach the browser new syntax. For example, there is no easy way to get the browser to align the text at 1/3 the position instead of 1/2. What is needed is a way to teach the browser new HTML syntax.</source>
          <target state="translated">然而,声明式语言也是有限的,因为它不允许你教浏览器新的语法。例如,没有简单的方法让浏览器将文本排列在1/3的位置而不是1/2的位置。需要的是一种教给浏览器新的HTML语法的方法。</target>
        </trans-unit>
        <trans-unit id="3c9c0adee926699e18a27b00b88771ce6b3e9fc7" translate="yes" xml:space="preserve">
          <source>However, the more traditional CommonJS-style usage is still available, and documented below.</source>
          <target state="translated">不过,更传统的CommonJS风格的用法还是可以使用的,下面会有记录。</target>
        </trans-unit>
        <trans-unit id="00996f9232afaff711c6ebfe08928b5cfb6f6845" translate="yes" xml:space="preserve">
          <source>However, there are a few limitations compared to array iteration:</source>
          <target state="translated">然而,与数组迭代相比,有一些限制。</target>
        </trans-unit>
        <trans-unit id="9641eba78bfe582ed3a2749197725f94c33dd851" translate="yes" xml:space="preserve">
          <source>Html-linkified and &lt;a href=&quot;../service/%24sanitize&quot;&gt;sanitized&lt;/a&gt; text.</source>
          <target state="translated">HTML链接和&lt;a href=&quot;../service/%24sanitize&quot;&gt;消毒的&lt;/a&gt;文本。</target>
        </trans-unit>
        <trans-unit id="c65236654eb6a81fbfab2170b0857f54bfc87642" translate="yes" xml:space="preserve">
          <source>I'm in a hurry. How do I get a Hello World module working?</source>
          <target state="translated">我很着急。如何让Hello World模块发挥作用?</target>
        </trans-unit>
        <trans-unit id="28163d85350de7d518abda78cb07443850692d4d" translate="yes" xml:space="preserve">
          <source>I.e. &lt;code&gt;ng-model-options=&quot;{ debounce: 500 }&quot;&lt;/code&gt; will wait for half a second since the last content change before triggering the model update and form validation.</source>
          <target state="translated">即 &lt;code&gt;ng-model-options=&quot;{ debounce: 500 }&quot;&lt;/code&gt; 自上次内容更改以来将等待半秒钟，然后触发模型更新和表单验证。</target>
        </trans-unit>
        <trans-unit id="9ede6c3f478034a42df63b47c4dc0ad321990f8a" translate="yes" xml:space="preserve">
          <source>I.e. &lt;code&gt;ng-model-options=&quot;{ updateOn: 'default blur' }&quot;&lt;/code&gt;</source>
          <target state="translated">即 &lt;code&gt;ng-model-options=&quot;{ updateOn: 'default blur' }&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4129e8cbc1ebb2a2fb072b2b3daaef96575a5cc8" translate="yes" xml:space="preserve">
          <source>I.e. &lt;code&gt;ng-model-options=&quot;{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }&quot;&lt;/code&gt;</source>
          <target state="translated">即 &lt;code&gt;ng-model-options=&quot;{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a68fa8efe4a09d8c0c63ae60426d9366434bccb2" translate="yes" xml:space="preserve">
          <source>IRC</source>
          <target state="translated">IRC</target>
        </trans-unit>
        <trans-unit id="d7b1a1f2be81b4fe52f63eaaeeb40a859c845e0f" translate="yes" xml:space="preserve">
          <source>Id for the &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">为 &lt;code&gt;value&lt;/code&gt; 编号。</target>
        </trans-unit>
        <trans-unit id="ec130e4d2cb91fe9bf063ea20a216bdcc71a84d6" translate="yes" xml:space="preserve">
          <source>Id of the key-value pair to delete.</source>
          <target state="translated">要删除的键值对的ID。</target>
        </trans-unit>
        <trans-unit id="7db857bacad045bd1f61b8fda21770e9d10e3b24" translate="yes" xml:space="preserve">
          <source>Id to use for lookup.</source>
          <target state="translated">用来查询的ID。</target>
        </trans-unit>
        <trans-unit id="4f2fb5d7f9da16cbc1d14fa704825b095fc9c79b" translate="yes" xml:space="preserve">
          <source>Identifier name for a reference to the controller in the directive's scope. This allows the controller to be referenced from the directive template. This is especially useful when a directive is used as component, i.e. with an &lt;code&gt;isolate&lt;/code&gt; scope. It's also possible to use it in a directive without an &lt;code&gt;isolate&lt;/code&gt; / &lt;code&gt;new&lt;/code&gt; scope, but you need to be aware that the &lt;code&gt;controllerAs&lt;/code&gt; reference might overwrite a property that already exists on the parent scope.</source>
          <target state="translated">指令范围内对控制器的引用的标识符名称。这允许从指令模板引用控制器。当指令用作组件（即具有 &lt;code&gt;isolate&lt;/code&gt; 范围）时，这尤其有用。也可以在没有 &lt;code&gt;isolate&lt;/code&gt; / &lt;code&gt;new&lt;/code&gt; 作用域的指令中使用它，但是您需要注意， &lt;code&gt;controllerAs&lt;/code&gt; 引用可能会覆盖父作用域上已经存在的属性。</target>
        </trans-unit>
        <trans-unit id="79983926c885cfae871f9f76c7c14c825447c715" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode.rewriteLinks&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt; in the &lt;code&gt;mode&lt;/code&gt; configuration object passed to &lt;code&gt;$locationProvider.html5Mode()&lt;/code&gt;, the browser will perform a full page reload for every link. &lt;code&gt;mode.rewriteLinks&lt;/code&gt; can also be set to a string, which will enable link rewriting only on anchor elements that have the given attribute.</source>
          <target state="translated">如果在传递给 &lt;code&gt;$locationProvider.html5Mode()&lt;/code&gt; 的 &lt;code&gt;mode&lt;/code&gt; 配置对象 &lt;code&gt;mode.rewriteLinks&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; ，则浏览器将为每个链接执行整页重新加载。 &lt;code&gt;mode.rewriteLinks&lt;/code&gt; 也可以设置为字符串，这将仅对具有给定属性的锚元素启用链接重写。</target>
        </trans-unit>
        <trans-unit id="613bfcabdb198dcf4290d1a13f26a43dcfef57c7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ng-click&lt;/code&gt; or &lt;code&gt;ng-dblclick&lt;/code&gt; is encountered, ngAria will add &lt;code&gt;tabindex=&quot;0&quot;&lt;/code&gt; to any element not in a node blacklist: &lt;em&gt; Button &lt;/em&gt; Anchor &lt;em&gt; Input &lt;/em&gt; Textarea &lt;em&gt; Select &lt;/em&gt; Details/Summary To fix widespread accessibility problems with &lt;code&gt;ng-click&lt;/code&gt; on &lt;code&gt;div&lt;/code&gt; elements, ngAria will dynamically bind a keypress event by default as long as the element isn't in the node blacklist. You can turn this functionality on or off with the &lt;code&gt;bindKeypress&lt;/code&gt; configuration option. ngAria will also add the &lt;code&gt;button&lt;/code&gt; role to communicate to users of assistive technologies. This can be disabled with the &lt;code&gt;bindRoleForClick&lt;/code&gt; configuration option. For &lt;code&gt;ng-dblclick&lt;/code&gt;, you must still manually add &lt;code&gt;ng-keypress&lt;/code&gt; and a role to non-interactive elements such as &lt;code&gt;div&lt;/code&gt; or &lt;code&gt;taco-button&lt;/code&gt; to enable keyboard access.</source>
          <target state="translated">如果遇到 &lt;code&gt;ng-click&lt;/code&gt; 或 &lt;code&gt;ng-dblclick&lt;/code&gt; dblclick，ngAria会将 &lt;code&gt;tabindex=&quot;0&quot;&lt;/code&gt; 添加到不在节点黑名单中的任何元素：&lt;em&gt;按钮&lt;/em&gt;锚定&lt;em&gt;输入&lt;/em&gt; Textarea &lt;em&gt;选择&lt;/em&gt;详细信息/摘要要修复 &lt;code&gt;ng-click&lt;/code&gt; &lt;code&gt;div&lt;/code&gt; 元素上的广泛可访问性问题，请单击 ngAria默认情况下，只要元素不在节点黑名单中，它将动态绑定一个keypress事件。您可以使用 &lt;code&gt;bindKeypress&lt;/code&gt; 配置选项打开或关闭此功能。 ngAria还将添加 &lt;code&gt;button&lt;/code&gt; 角色，以与辅助技术的用户进行交流。可以使用 &lt;code&gt;bindRoleForClick&lt;/code&gt; 禁用它配置选项。对于 &lt;code&gt;ng-dblclick&lt;/code&gt; ，您仍然必须手动将 &lt;code&gt;ng-keypress&lt;/code&gt; 和一个角色添加到非交互式元素（例如 &lt;code&gt;div&lt;/code&gt; 或 &lt;code&gt;taco-button&lt;/code&gt; )中以启用键盘访问。</target>
        </trans-unit>
        <trans-unit id="c95cf37a17f0d52871a2a1d59d4540b01148df2b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ngTrim&lt;/code&gt; is set to &lt;code&gt;&quot;false&quot;&lt;/code&gt; then whitespace around both the separator and each list item is respected. This implies that the user of the directive is responsible for dealing with whitespace but also allows you to use whitespace as a delimiter, such as a tab or newline character.</source>
          <target state="translated">如果 &lt;code&gt;ngTrim&lt;/code&gt; 设置为 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 则将遵守分隔符和每个列表项周围的空格。这意味着该指令的用户负责处理空格，但也允许您将空格用作定界符，例如制表符或换行符。</target>
        </trans-unit>
        <trans-unit id="0829e8f931b8f25cd2b158be8e0b6def23ee7c6e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;paramValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the property specified via the first argument will be deleted.</source>
          <target state="translated">如果 &lt;code&gt;paramValue&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则将删除通过第一个参数指定的属性。</target>
        </trans-unit>
        <trans-unit id="5e5b3c116b7e282c2308f6ef1608442867791f58" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;paramValue&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the property specified via the first argument will be added with no value nor trailing equal sign.</source>
          <target state="translated">如果 &lt;code&gt;paramValue&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，则将通过第一个参数指定的属性添加为不带值或尾随等号的属性。</target>
        </trans-unit>
        <trans-unit id="5f8a14370aff7380ce331b7293fef1918515ff58" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;paramValue&lt;/code&gt; is an array, it will override the property of the &lt;code&gt;search&lt;/code&gt; component of &lt;code&gt;$location&lt;/code&gt; specified via the first argument.</source>
          <target state="translated">如果 &lt;code&gt;paramValue&lt;/code&gt; 是一个数组，它将覆盖通过第一个参数指定的 &lt;code&gt;$location&lt;/code&gt; &lt;code&gt;search&lt;/code&gt; 组件的属性。</target>
        </trans-unit>
        <trans-unit id="743650dbdbf5002c9eecb5f7379f1f0d2090bf89" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;redirectTo&lt;/code&gt; is a function, it will be called with the following parameters:</source>
          <target state="translated">如果 &lt;code&gt;redirectTo&lt;/code&gt; 是一个函数，则将使用以下参数调用它：</target>
        </trans-unit>
        <trans-unit id="777d9335c56dfe211081978a0fbb3906b4202502" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;search&lt;/code&gt; is a string or number, then &lt;code&gt;paramValue&lt;/code&gt; will override only a single search property.</source>
          <target state="translated">如果 &lt;code&gt;search&lt;/code&gt; 是字符串或数字，则 &lt;code&gt;paramValue&lt;/code&gt; 将仅覆盖单个搜索属性。</target>
        </trans-unit>
        <trans-unit id="8201c46ffa0db4f644f5e56359950eb7fb2a8045" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;source&lt;/code&gt; is identical to &lt;code&gt;destination&lt;/code&gt; an exception will be thrown.</source>
          <target state="translated">如果 &lt;code&gt;source&lt;/code&gt; 与 &lt;code&gt;destination&lt;/code&gt; 相同，则将引发异常。</target>
        </trans-unit>
        <trans-unit id="8ed2725402e420ab1c414cd2715251710a33f8e1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;source&lt;/code&gt; is not an object or array (inc. &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt;), &lt;code&gt;source&lt;/code&gt; is returned.</source>
          <target state="translated">如果 &lt;code&gt;source&lt;/code&gt; 不是对象或数组（包括 &lt;code&gt;null&lt;/code&gt; 和 &lt;code&gt;undefined&lt;/code&gt; ），则返回 &lt;code&gt;source&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a624c93008a0a64091b974be67c1370e20df5fd0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;template&lt;/code&gt; is a function, it will be called with the following parameters:</source>
          <target state="translated">如果 &lt;code&gt;template&lt;/code&gt; 是函数，则将使用以下参数调用它：</target>
        </trans-unit>
        <trans-unit id="9f1b3360d3b66afd04318f5feac73437fb4929da" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;template&lt;/code&gt; is a function, then it is &lt;a href=&quot;../../auto/service/%24injector#invoke.html&quot;&gt;injected&lt;/a&gt; with the following locals:</source>
          <target state="translated">如果 &lt;code&gt;template&lt;/code&gt; 是一个函数，则将其&lt;a href=&quot;../../auto/service/%24injector#invoke.html&quot;&gt;注入&lt;/a&gt;以下本地变量：</target>
        </trans-unit>
        <trans-unit id="b743c62930c10b8e90047d6d33a622a656d9a6ba" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;templateUrl&lt;/code&gt; is a function, it will be called with the following parameters:</source>
          <target state="translated">如果 &lt;code&gt;templateUrl&lt;/code&gt; 是一个函数，则将使用以下参数调用它：</target>
        </trans-unit>
        <trans-unit id="33c8b5674d0af42566982cc240093a252e34747e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;templateUrl&lt;/code&gt; is a function, then it is &lt;a href=&quot;../../auto/service/%24injector#invoke.html&quot;&gt;injected&lt;/a&gt; with the following locals:</source>
          <target state="translated">如果 &lt;code&gt;templateUrl&lt;/code&gt; 是一个函数，则将其&lt;a href=&quot;../../auto/service/%24injector#invoke.html&quot;&gt;注入&lt;/a&gt;以下本地变量：</target>
        </trans-unit>
        <trans-unit id="72f42dc0c99690482b2dac1ed67fcce01c622d32" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, reverse the sorting order.</source>
          <target state="translated">如果为 &lt;code&gt;true&lt;/code&gt; ，则反转排序顺序。</target>
        </trans-unit>
        <trans-unit id="e5e1755ef85cb15eebe562cc36b63807bafca0ca" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;window.name&lt;/code&gt; contains prefix &lt;code&gt;NG_DEFER_BOOTSTRAP!&lt;/code&gt; when &lt;a href=&quot;../api/ng/function/angular.bootstrap&quot;&gt;&lt;code&gt;angular.bootstrap&lt;/code&gt;&lt;/a&gt; is called, the bootstrap process will be paused until &lt;code&gt;angular.resumeBootstrap()&lt;/code&gt; is called.</source>
          <target state="translated">如果 &lt;code&gt;window.name&lt;/code&gt; 包含前缀 &lt;code&gt;NG_DEFER_BOOTSTRAP!&lt;/code&gt; 调用&lt;a href=&quot;../api/ng/function/angular.bootstrap&quot;&gt; &lt;code&gt;angular.bootstrap&lt;/code&gt; &lt;/a&gt;时，引导过程将暂停直到 &lt;code&gt;angular.resumeBootstrap()&lt;/code&gt; 为止。</target>
        </trans-unit>
        <trans-unit id="a7fff279b5c9622029c122de3c8da07fa6ebeda1" translate="yes" xml:space="preserve">
          <source>If V is not undefined, mark the result of the expression as stable and schedule a task to deregister the watch for this expression when we exit the digest loop</source>
          <target state="translated">如果V不是未定义的,则将表达式的结果标记为稳定,并安排一个任务,当我们退出消化循环时,取消对这个表达式的监视。</target>
        </trans-unit>
        <trans-unit id="345464413875ecc47aaed72ea3eeb05292b2706f" translate="yes" xml:space="preserve">
          <source>If XSRF prefix is detected, strip it (see &lt;a href=&quot;../service/%24http#security-considerations.html&quot;&gt;Security Considerations in the $http docs&lt;/a&gt;).</source>
          <target state="translated">如果检测到XSRF前缀，请删除它（请参阅&lt;a href=&quot;../service/%24http#security-considerations.html&quot;&gt;$ http docs中的&amp;ldquo;安全注意事项&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="99e0d1f20619d41f43e4adbe88a0fc055defdf60" translate="yes" xml:space="preserve">
          <source>If XSRF prefix is detected, strip it (see Security Considerations section below).</source>
          <target state="translated">如果检测到XSRF前缀,则对其进行剥离(参见下面的安全注意事项部分)。</target>
        </trans-unit>
        <trans-unit id="52b7eeb7ca086390168cbaa4c3ea07248c32233b" translate="yes" xml:space="preserve">
          <source>If a custom comparator still can't distinguish between two items, then they will be sorted based on their index using the built-in comparator.</source>
          <target state="translated">如果自定义比较器仍然无法区分两个项目,那么将使用内置比较器根据它们的索引进行排序。</target>
        </trans-unit>
        <trans-unit id="022ac35ee6ebafd19f7c4c717fbf1ccf2712e7bc" translate="yes" xml:space="preserve">
          <source>If a destination is provided, all of its elements (for arrays) or properties (for objects) are deleted and then all elements/properties from the source are copied to it.</source>
          <target state="translated">如果提供了一个目标,那么它的所有元素(对于数组)或属性(对于对象)都会被删除,然后源的所有元素/属性都会被复制到它上面。</target>
        </trans-unit>
        <trans-unit id="502bbbf8d84c6abdf7c8fd468936fe84d3df6d5a" translate="yes" xml:space="preserve">
          <source>If a form has only one input field then hitting enter in this field triggers form submit (&lt;code&gt;ngSubmit&lt;/code&gt;)</source>
          <target state="translated">如果表单只有一个输入字段，则在此字段中按回车会触发表单提交（ &lt;code&gt;ngSubmit&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="adb660bb29eb456fd541995beb9da63bcee77be2" translate="yes" xml:space="preserve">
          <source>If a function has an &lt;code&gt;$inject&lt;/code&gt; property and its value is an array of strings, then the strings represent names of services to be injected into the function.</source>
          <target state="translated">如果一个函数具有 &lt;code&gt;$inject&lt;/code&gt; 属性，并且其值是一个字符串数组，则这些字符串表示要注入到该函数中的服务的名称。</target>
        </trans-unit>
        <trans-unit id="cd412985992305562d7e70ff27e4c810956645c3" translate="yes" xml:space="preserve">
          <source>If a module has already been loaded into the injector then it will not be loaded again.</source>
          <target state="translated">如果一个模块已经被加载到注射器中,那么它将不会被再次加载。</target>
        </trans-unit>
        <trans-unit id="26dc0654df6e7e0d396bfd5ad28c4b667f98d931" translate="yes" xml:space="preserve">
          <source>If a parent scope is suspended then all its descendants will be also excluded from future digests whether or not they have been suspended themselves. Note that this also applies to isolate child scopes.</source>
          <target state="translated">如果一个父作用域被暂停,那么它的所有子作用域也将被从未来的摘要中排除,无论它们自己是否被暂停。请注意,这也适用于孤立的子作用域。</target>
        </trans-unit>
        <trans-unit id="f325902be8527e0c6ea4b6c889b0905040354cc2" translate="yes" xml:space="preserve">
          <source>If a request didn't match any expectation or if the expectation doesn't have the response defined, the backend definitions are evaluated in sequential order to see if any of them match the request. The response from the first matched definition is returned.</source>
          <target state="translated">如果一个请求没有匹配任何期望值,或者期望值没有定义响应,那么后端定义将按顺序评估,看是否有任何定义与请求匹配。第一个匹配的定义的响应被返回。</target>
        </trans-unit>
        <trans-unit id="0fd04e9e5b96e85cca8613d8294a4a6de3b25a55" translate="yes" xml:space="preserve">
          <source>If a request expectation has no response specified, the algorithm will search your backend definitions for an appropriate response.</source>
          <target state="translated">如果一个请求期望没有指定响应,算法将搜索你的后端定义,寻找合适的响应。</target>
        </trans-unit>
        <trans-unit id="3c34b3f9a2baeaea1921d5fa87951146f390ffe3" translate="yes" xml:space="preserve">
          <source>If a required controller cannot be found, and it is optional, the instance is &lt;code&gt;null&lt;/code&gt;, otherwise the &lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/api/ng/service/error/%24compile/ctreq&quot;&gt;Missing Required Controller&lt;/a&gt; error is thrown.</source>
          <target state="translated">如果找不到必需的控制器，并且它是可选的，则该实例为 &lt;code&gt;null&lt;/code&gt; ，否则抛出&lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/api/ng/service/error/%24compile/ctreq&quot;&gt;Missing Required Controller&lt;/a&gt;错误。</target>
        </trans-unit>
        <trans-unit id="3062c2d3fcf43cdcf6dc09ea8da967844fcf796b" translate="yes" xml:space="preserve">
          <source>If a service is decorated by both &lt;code&gt;$provide.decorator&lt;/code&gt; and &lt;code&gt;module.decorator&lt;/code&gt;, the decorators are applied in order:</source>
          <target state="translated">如果服务由 &lt;code&gt;$provide.decorator&lt;/code&gt; &lt;code&gt;module.decorator&lt;/code&gt; 和module.decorator装饰，则按以下顺序应用装饰器：</target>
        </trans-unit>
        <trans-unit id="8065da6f118dbd267964e5dadd97dd3d9850fb06" translate="yes" xml:space="preserve">
          <source>If a value is specified, returns the $httpProvider for chaining. otherwise, returns the current configured value.</source>
          <target state="translated">如果指定了一个值,则返回链的$httpProvider,否则,返回当前配置的值。</target>
        </trans-unit>
        <trans-unit id="1f41bc8f62e166a66fdd0b00ba6f38f10a023aad" translate="yes" xml:space="preserve">
          <source>If an action's configuration specifies that it is cancellable, you can cancel the request related to an instance or collection (as long as it is a result of a &quot;non-instance&quot; call):</source>
          <target state="translated">如果一个动作的配置指定它是可取消的,你可以取消与实例或集合相关的请求(只要它是一个 &quot;非实例 &quot;调用的结果)。</target>
        </trans-unit>
        <trans-unit id="cc7cda513ad242dc0410921f7e4d7987e45e3c2b" translate="yes" xml:space="preserve">
          <source>If an attribute with a binding is prefixed with the &lt;code&gt;ngAttr&lt;/code&gt; prefix (denormalized as &lt;code&gt;ng-attr-&lt;/code&gt;) then during the binding it will be applied to the corresponding unprefixed attribute. This allows you to bind to attributes that would otherwise be eagerly processed by browsers (e.g. an SVG element's &lt;code&gt;circle[cx]&lt;/code&gt; attributes). When using &lt;code&gt;ngAttr&lt;/code&gt;, the &lt;code&gt;allOrNothing&lt;/code&gt; flag of &lt;a href=&quot;../api/ng/service/%24interpolate&quot;&gt;$interpolate&lt;/a&gt; is used, so if any expression in the interpolated string results in &lt;code&gt;undefined&lt;/code&gt;, the attribute is removed and not added to the element.</source>
          <target state="translated">如果具有绑定属性的前缀为 &lt;code&gt;ngAttr&lt;/code&gt; 前缀（已规范化为 &lt;code&gt;ng-attr-&lt;/code&gt; ），则在绑定期间它将被应用到相应的无前缀属性。这样，您就可以绑定到浏览器急需处理的属性（例如，SVG元素的 &lt;code&gt;circle[cx]&lt;/code&gt; 属性）。使用 &lt;code&gt;ngAttr&lt;/code&gt; 时，将使用&lt;a href=&quot;../api/ng/service/%24interpolate&quot;&gt;$ interpolate&lt;/a&gt;的 &lt;code&gt;allOrNothing&lt;/code&gt; 标志，因此，如果插值字符串中的任何表达式导致 &lt;code&gt;undefined&lt;/code&gt; ，则该属性将被删除而不添加到元素中。</target>
        </trans-unit>
        <trans-unit id="3c897c9ef737c27fdd08857ed2716fb1b8f4d9a5" translate="yes" xml:space="preserve">
          <source>If an expectation or definition uses a &lt;strong&gt;regex&lt;/strong&gt; to match the URL, you can provide an array of &lt;strong&gt;keys&lt;/strong&gt; via a &lt;code&gt;params&lt;/code&gt; argument. The index of each &lt;strong&gt;key&lt;/strong&gt; in the array will match the index of a &lt;strong&gt;group&lt;/strong&gt; in the &lt;strong&gt;regex&lt;/strong&gt;.</source>
          <target state="translated">如果期望或定义使用&lt;strong&gt;正则表达式&lt;/strong&gt;来匹配URL，则可以通过 &lt;code&gt;params&lt;/code&gt; 参数提供&lt;strong&gt;键&lt;/strong&gt;数组。每个索引&lt;strong&gt;密钥&lt;/strong&gt;的阵列将匹配的索引&lt;strong&gt;组&lt;/strong&gt;中的&lt;strong&gt;正则表达式&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e464595e0a743e0020b60c55e500247b0faf2671" translate="yes" xml:space="preserve">
          <source>If an interceptor object was provided, the promise will instead be resolved with the value returned by the response interceptor (on success) or responceError interceptor (on failure).</source>
          <target state="translated">如果提供了一个拦截器对象,承诺将改用响应拦截器(成功时)或响应错误拦截器(失败时)返回的值来解析。</target>
        </trans-unit>
        <trans-unit id="7550c3d4cbd675d41d3da8b71e0e2ec2f8a2fd48" translate="yes" xml:space="preserve">
          <source>If any expectation within an &lt;code&gt;it&lt;/code&gt; block fails, the runner marks the &lt;code&gt;it&lt;/code&gt; as &quot;failed&quot; and continues on to the next block.</source>
          <target state="translated">如果 &lt;code&gt;it&lt;/code&gt; 块中的任何期望失败，则运行程序将 &lt;code&gt;it&lt;/code&gt; 标记为&amp;ldquo;失败&amp;rdquo;，然后继续进行下一个块。</target>
        </trans-unit>
        <trans-unit id="1352dc692bed1cbf1f5076fcaeba257174fe28f2" translate="yes" xml:space="preserve">
          <source>If automatic scrolling is disabled, one must explicitly call &lt;a href=&quot;../service/%24anchorscroll&quot;&gt;$anchorScroll()&lt;/a&gt; in order to scroll to the element related to the current hash.</source>
          <target state="translated">如果禁用了自动滚动，则必须显式调用&lt;a href=&quot;../service/%24anchorscroll&quot;&gt;$ anchorScroll（）&lt;/a&gt;才能滚动到与当前哈希相关的元素。</target>
        </trans-unit>
        <trans-unit id="3b4e24e7eaa2ca32436552a01221de60832d916b" translate="yes" xml:space="preserve">
          <source>If boolean, sets &lt;code&gt;html5Mode.enabled&lt;/code&gt; to value. If object, sets &lt;code&gt;enabled&lt;/code&gt;, &lt;code&gt;requireBase&lt;/code&gt; and &lt;code&gt;rewriteLinks&lt;/code&gt; to respective values. Supported properties:</source>
          <target state="translated">如果为boolean，则将 &lt;code&gt;html5Mode.enabled&lt;/code&gt; 设置为value。如果为object，则将 &lt;code&gt;enabled&lt;/code&gt; ， &lt;code&gt;requireBase&lt;/code&gt; 和 &lt;code&gt;rewriteLinks&lt;/code&gt; 设置为相应的值。支持的属性：</target>
        </trans-unit>
        <trans-unit id="7148e4e9bfb3ae0f9035089b0911fcd382c40701" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;bindToController&lt;/code&gt; and &lt;code&gt;scope&lt;/code&gt; are defined and have object hashes, &lt;code&gt;bindToController&lt;/code&gt; overrides &lt;code&gt;scope&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;bindToController&lt;/code&gt; 和 &lt;code&gt;scope&lt;/code&gt; 都已定义并且具有对象哈希，则 &lt;code&gt;bindToController&lt;/code&gt; 会覆盖 &lt;code&gt;scope&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1cabef013ace4e4c9c00e6712ac1e83f19c28fc9" translate="yes" xml:space="preserve">
          <source>If both values are objects, compare their indices instead.</source>
          <target state="translated">如果两个值都是对象,则比较它们的指数。</target>
        </trans-unit>
        <trans-unit id="e0f58fb3edabd2bfd4c52120891ecad3c7f08490" translate="yes" xml:space="preserve">
          <source>If both values are of type &lt;code&gt;string&lt;/code&gt;, compare them alphabetically in a case- and locale-insensitive way.</source>
          <target state="translated">如果两个值均为 &lt;code&gt;string&lt;/code&gt; 类型，则以不区分大小写和区域设置的方式按字母顺序比较它们。</target>
        </trans-unit>
        <trans-unit id="a3acd0c125665e994f5cc5d87ff32bae58ae7519" translate="yes" xml:space="preserve">
          <source>If caching is enabled, but neither the default cache nor config.cache are set to a cache object, then the default &lt;code&gt;$cacheFactory(&quot;$http&quot;)&lt;/code&gt; object is used.</source>
          <target state="translated">如果启用了缓存，但是默认缓存和config.cache都未设置为缓存对象，则使用默认 &lt;code&gt;$cacheFactory(&quot;$http&quot;)&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="6be3243cff2b9606141e7d8a8288624cc35fdc41" translate="yes" xml:space="preserve">
          <source>If called with a function then it's considered to be the controller constructor function. Otherwise it's considered to be a string which is used to retrieve the controller constructor using the following steps:</source>
          <target state="translated">如果用函数调用,那么它被认为是控制器构造函数。否则,它被认为是一个字符串,用于使用以下步骤检索控制器构造函数。</target>
        </trans-unit>
        <trans-unit id="eca4a0606f2e890d1b99bf344fe5c04e4c526a90" translate="yes" xml:space="preserve">
          <source>If called with no arguments returns the parsed &lt;code&gt;search&lt;/code&gt; object. If called with one or more arguments returns &lt;code&gt;$location&lt;/code&gt; object itself.</source>
          <target state="translated">如果不带任何参数调用，则返回已解析的 &lt;code&gt;search&lt;/code&gt; 对象。如果使用一个或多个参数调用，则返回 &lt;code&gt;$location&lt;/code&gt; 对象本身。</target>
        </trans-unit>
        <trans-unit id="c24fb87cdf6ae1778bbb557cc0ff10b76544fa3c" translate="yes" xml:space="preserve">
          <source>If called, all changes to $location during the current &lt;code&gt;$digest&lt;/code&gt; will replace the current history record, instead of adding a new one.</source>
          <target state="translated">如果调用，则在当前 &lt;code&gt;$digest&lt;/code&gt; 期间对$ location的所有更改将替换当前历史记录，而不是添加新的记录。</target>
        </trans-unit>
        <trans-unit id="b025c8c144cafc2941eab97705006674236a7463" translate="yes" xml:space="preserve">
          <source>If custom triggers are used, custom debouncing timeouts can be set for each event using an object in &lt;code&gt;debounce&lt;/code&gt;. This can be useful to force immediate updates on some specific circumstances (like blur events).</source>
          <target state="translated">如果使用自定义触发器，则可以使用debounce中的对象为每个事件设置自定义 &lt;code&gt;debounce&lt;/code&gt; 超时。这对于在某些特定情况下（例如模糊事件）强制立即更新很有用。</target>
        </trans-unit>
        <trans-unit id="50eecbd017e410f336fd4a83ba00bd8c53ebc392" translate="yes" xml:space="preserve">
          <source>If for example we wanted to create animations for &lt;code&gt;leave&lt;/code&gt; and &lt;code&gt;move&lt;/code&gt; (ngRepeat triggers move) then we can do so using the same CSS naming conventions:</source>
          <target state="translated">例如，如果我们想为 &lt;code&gt;leave&lt;/code&gt; 和 &lt;code&gt;move&lt;/code&gt; （ngRepeat触发器移动）创建动画，那么我们可以使用相同的CSS命名约定：</target>
        </trans-unit>
        <trans-unit id="107509b3211b546d6aa398c5cd00116593d484cf" translate="yes" xml:space="preserve">
          <source>If it is necessary to reference the controller or any functions bound to the controller from the template, you can use the option &lt;code&gt;controllerAs&lt;/code&gt; to specify the name of the controller as an alias. The directive needs to define a scope for this configuration to be used. This is particularly useful in the case when the directive is used as a component.</source>
          <target state="translated">如果有必要从模板引用控制器或绑定到控制器的任何功能，则可以使用选项 &lt;code&gt;controllerAs&lt;/code&gt; 将控制器的名称指定为别名。该指令需要定义要使用的配置的范围。在将伪指令用作组件的情况下，这特别有用。</target>
        </trans-unit>
        <trans-unit id="9a307e66a98c3ebe2ff88b0c79288c8c10c4b570" translate="yes" xml:space="preserve">
          <source>If jQuery is available, &lt;code&gt;angular.element&lt;/code&gt; is an alias for the &lt;a href=&quot;http://api.jquery.com/jQuery/&quot;&gt;jQuery&lt;/a&gt; function. If jQuery is not available, &lt;code&gt;angular.element&lt;/code&gt; delegates to AngularJS's built-in subset of jQuery, called &quot;jQuery lite&quot; or &lt;strong&gt;jqLite&lt;/strong&gt;.</source>
          <target state="translated">如果有jQuery，则 &lt;code&gt;angular.element&lt;/code&gt; 是&lt;a href=&quot;http://api.jquery.com/jQuery/&quot;&gt;jQuery&lt;/a&gt;函数的别名。如果jQuery不可用，则 &lt;code&gt;angular.element&lt;/code&gt; 委托AngularJS的内置jQuery子集，称为&amp;ldquo; jQuery lite&amp;rdquo;或&lt;strong&gt;jqLit​​e&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="c701fc2f8dc85147ea98151e5bf3322bcac3aaee" translate="yes" xml:space="preserve">
          <source>If multiple controllers are required, the &lt;code&gt;require&lt;/code&gt; option of the directive can take an array argument. The corresponding parameter being sent to the &lt;code&gt;link&lt;/code&gt; function will also be an array.</source>
          <target state="translated">如果需要多个控制器，则伪指令的 &lt;code&gt;require&lt;/code&gt; 选项可以采用数组参数。发送到 &lt;code&gt;link&lt;/code&gt; 函数的相应参数也将是一个数组。</target>
        </trans-unit>
        <trans-unit id="9131087c07a27ae54bb5cb150194e99e5b9ded60" translate="yes" xml:space="preserve">
          <source>If multiple identical requests are made using the same cache, which is not yet populated, one request will be made to the server and remaining requests will return the same response.</source>
          <target state="translated">如果使用同一个缓存提出多个相同的请求,而缓存还没有被填充,那么将向服务器提出一个请求,其余请求将返回相同的响应。</target>
        </trans-unit>
        <trans-unit id="5099fba28286973badadf5e09f2c704804e0e9a4" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;templateNamespace&lt;/code&gt; is specified, then the namespace is considered to be &lt;code&gt;html&lt;/code&gt;.</source>
          <target state="translated">如果未指定 &lt;code&gt;templateNamespace&lt;/code&gt; ，则将该命名空间视为 &lt;code&gt;html&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="565e32b222f018c04759a0915c1eafd46c68d0e3" translate="yes" xml:space="preserve">
          <source>If no delay is specified, it uses a delay such that all currently pending tasks are flushed.</source>
          <target state="translated">如果没有指定延迟,则使用延迟,使所有当前待处理的任务都被刷新。</target>
        </trans-unit>
        <trans-unit id="a343b02429ad2a626c45c677fe2309fc8eb6e9af" translate="yes" xml:space="preserve">
          <source>If no destination is supplied, a copy of the object or array is created.</source>
          <target state="translated">如果没有提供目的地,则会创建一个对象或数组的副本。</target>
        </trans-unit>
        <trans-unit id="613c17fb4d65c58a50bf306d9be2b19d42f72bd3" translate="yes" xml:space="preserve">
          <source>If no rule is defined for a category, then an empty string is displayed and a warning is generated. Note that some locales define more categories than &lt;code&gt;one&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;. For example, fr-fr defines &lt;code&gt;few&lt;/code&gt; and &lt;code&gt;many&lt;/code&gt;.</source>
          <target state="translated">如果没有为类别定义任何规则，那么将显示一个空字符串并生成警告。请注意，某些语言环境定义多个类别比 &lt;code&gt;one&lt;/code&gt; 和 &lt;code&gt;other&lt;/code&gt; 。例如，FR-FR定义了 &lt;code&gt;few&lt;/code&gt; 和 &lt;code&gt;many&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68fc3fa08dbab4451ff79de79c9fc1a49cba71b3" translate="yes" xml:space="preserve">
          <source>If one of the values is undefined, consider it &quot;greater than&quot; the other.</source>
          <target state="translated">如果其中一个值未定义,则认为它 &quot;大于 &quot;另一个。</target>
        </trans-unit>
        <trans-unit id="be847ed107cfee41deb9115ce6a8c35e338521f0" translate="yes" xml:space="preserve">
          <source>If one wants to modify a camelcased attribute (SVG elements have valid camelcased attributes), such as &lt;code&gt;viewBox&lt;/code&gt; on the &lt;code&gt;svg&lt;/code&gt; element, one can use underscores to denote that the attribute to bind to is naturally camelcased.</source>
          <target state="translated">如果要修改驼峰式属性（SVG元素具有有效的驼峰式属性），例如 &lt;code&gt;svg&lt;/code&gt; 元素上的 &lt;code&gt;viewBox&lt;/code&gt; ，则可以使用下划线表示绑定到的属性自然是驼峰式的。</target>
        </trans-unit>
        <trans-unit id="fa3a550f7e49feb35b5c38e18a628e43579977d7" translate="yes" xml:space="preserve">
          <source>If our animation code class-based (meaning that something like &lt;code&gt;ngClass&lt;/code&gt;, &lt;code&gt;ngHide&lt;/code&gt; and &lt;code&gt;ngShow&lt;/code&gt; triggers it) then we can still define our animations inside of the same registered animation, however, the function input arguments are a bit different:</source>
          <target state="translated">如果我们的动画代码基于类（意味着像 &lt;code&gt;ngClass&lt;/code&gt; ， &lt;code&gt;ngHide&lt;/code&gt; 和 &lt;code&gt;ngShow&lt;/code&gt; 之类的东西会触发它），那么我们仍然可以在相同的注册动画中定义我们的动画，但是，函数输入参数有些不同：</target>
        </trans-unit>
        <trans-unit id="3929b62e0e7741d149c634de5223054eef38f614" translate="yes" xml:space="preserve">
          <source>If provided, then enables/disables SCE application-wide.</source>
          <target state="translated">如果提供,则在整个应用范围内启用/禁用SCE。</target>
        </trans-unit>
        <trans-unit id="420de9532a9310bd61b98d99b3e5431883df58a7" translate="yes" xml:space="preserve">
          <source>If provided, update the internal &lt;code&gt;eagerInstantiationEnabled&lt;/code&gt; flag.</source>
          <target state="translated">如果提供，请更新内部 &lt;code&gt;eagerInstantiationEnabled&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="f6c236207f5e15b8cfb41e7366e363e30acf5b95" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;false&lt;/code&gt; skips model dirty checking, otherwise will invoke &lt;code&gt;fn&lt;/code&gt; within the &lt;a href=&quot;../../ng/type/%24rootscope.scope#%24apply.html&quot;&gt;$apply&lt;/a&gt; block.</source>
          <target state="translated">如果设置为 &lt;code&gt;false&lt;/code&gt; ，将跳过模型脏检查，否则将在&lt;a href=&quot;../../ng/type/%24rootscope.scope#%24apply.html&quot;&gt;$ apply&lt;/a&gt;块中调用 &lt;code&gt;fn&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35a5cf1a0eea8e136f5c4728cf9e80e86d58aa15" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;false&lt;/code&gt; skips model dirty checking, otherwise will invoke &lt;code&gt;fn&lt;/code&gt; within the &lt;a href=&quot;../type/%24rootscope.scope#%24apply.html&quot;&gt;$apply&lt;/a&gt; block.</source>
          <target state="translated">如果设置为 &lt;code&gt;false&lt;/code&gt; ，将跳过模型脏检查，否则将在&lt;a href=&quot;../type/%24rootscope.scope#%24apply.html&quot;&gt;$ apply&lt;/a&gt;块中调用 &lt;code&gt;fn&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d79cbe97b0cba018fd80c72312c2caecd191843" translate="yes" xml:space="preserve">
          <source>If set to false AngularJS will not automatically trim the input.</source>
          <target state="translated">如果设置为false,AngularJS将不会自动修剪输入。</target>
        </trans-unit>
        <trans-unit id="99f750122c635a9c79ac25ba8a258a265ea9d70d" translate="yes" xml:space="preserve">
          <source>If set to false AngularJS will not automatically trim the input. This parameter is ignored for input[type=password] controls, which will never trim the input.</source>
          <target state="translated">如果设置为false,AngularJS将不会自动修剪输入。对于输入[type=password]控件来说,这个参数会被忽略,因为它永远不会修剪输入。</target>
        </trans-unit>
        <trans-unit id="d365bd222f8aac61ea4ce4cf5f583497a646e6c8" translate="yes" xml:space="preserve">
          <source>If set to true then the current &lt;code&gt;priority&lt;/code&gt; will be the last set of directives which will execute (any directives at the current priority will still execute as the order of execution on same &lt;code&gt;priority&lt;/code&gt; is undefined). Note that expressions and other directives used in the directive's template will also be excluded from execution.</source>
          <target state="translated">如果设置为true，则当前 &lt;code&gt;priority&lt;/code&gt; 将是将要执行的最后一组指令（由于未定义在相同 &lt;code&gt;priority&lt;/code&gt; 上的执行顺序，因此当前优先级的任何指令仍将执行）。请注意，指令模板中使用的表达式和其他指令也将从执行中排除。</target>
        </trans-unit>
        <trans-unit id="8198e6aef6aaac2f45ebacc8a1aa2d4b63f0fc33" translate="yes" xml:space="preserve">
          <source>If set to true, the JSON output will contain newlines and whitespace. If set to an integer, the JSON output will contain that many spaces per indentation.</source>
          <target state="translated">如果设置为true,JSON输出将包含换行和空格。如果设置为整数,JSON输出将包含每个缩进的空格。</target>
        </trans-unit>
        <trans-unit id="cd63bbd500f85b0aa9f3f57a50ef372022a6763d" translate="yes" xml:space="preserve">
          <source>If set, specifies a vertical scroll-offset. This is often useful when there are fixed positioned elements at the top of the page, such as navbars, headers etc.</source>
          <target state="translated">如果设置,指定垂直滚动偏移。当页面顶部有固定位置的元素时,如导航条、页眉等,这通常很有用。</target>
        </trans-unit>
        <trans-unit id="fe6333e8f42c68100e28d8d911a3367f20054d75" translate="yes" xml:space="preserve">
          <source>If specified then new module is being created. If unspecified then the module is being retrieved for further configuration.</source>
          <target state="translated">如果指定,则正在创建新模块。如果未指定,则正在检索模块,以便进一步配置。</target>
        </trans-unit>
        <trans-unit id="27aeb59cad0b804c6ef2d86a1dfa615624970c38" translate="yes" xml:space="preserve">
          <source>If that is the case, the compiler adds an interpolateDirective to the node and registers &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watch.html&quot;&gt;watches&lt;/a&gt; on the computed interpolation function, which will update the corresponding text nodes or attribute values as part of the normal &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24digest.html&quot;&gt;digest&lt;/a&gt; cycle.</source>
          <target state="translated">如果是这种情况，编译器会向该节点添加一个interpolateDirective，并在计算出的插值函数上注册&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watch.html&quot;&gt;监视&lt;/a&gt;，这将更新相应的文本节点或属性值，作为正常&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24digest.html&quot;&gt;摘要&lt;/a&gt;周期的一部分。</target>
        </trans-unit>
        <trans-unit id="06ebcf108a89a946fe69e686a9111125f0f020a4" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt; is falsy then the element is removed from the DOM tree. If it is truthy a copy of the compiled element is added to the DOM tree.</source>
          <target state="translated">如果&lt;a href=&quot;../../../guide/expression&quot;&gt;表达式&lt;/a&gt;不正确，则将元素从DOM树中删除。如果是事实，则将已编译元素的副本添加到DOM树。</target>
        </trans-unit>
        <trans-unit id="92018ed26fa3598f627e4578ebf49a3b9ed44b1b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt; is truthy, then special attribute &quot;open&quot; will be set on the element</source>
          <target state="translated">如果&lt;a href=&quot;../../../guide/expression&quot;&gt;表达式&lt;/a&gt;为真，则将在元素上设置特殊属性&amp;ldquo; open&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="431632c12958fee7c8e13e21d996c9067cd8b138" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt; is truthy, then special attribute &quot;readonly&quot; will be set on the element</source>
          <target state="translated">如果&lt;a href=&quot;../../../guide/expression&quot;&gt;表达式&lt;/a&gt;为真，则将在元素上设置特殊属性&amp;ldquo; readonly&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="705b7850ed3cc932f2a8560a14e97c372e2c1a26" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt; is truthy, then special attribute &quot;selected&quot; will be set on the element</source>
          <target state="translated">如果&lt;a href=&quot;../../../guide/expression&quot;&gt;表达式&lt;/a&gt;为真，则将在元素上设置特殊属性&amp;ldquo; selected&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="a2e2565ac63611a2ee4218e5debd4028869e44fa" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt; is truthy, then the &lt;code&gt;checked&lt;/code&gt; attribute will be set on the element</source>
          <target state="translated">如果&lt;a href=&quot;../../../guide/expression&quot;&gt;表达式&lt;/a&gt;为真，则将在元素上设置 &lt;code&gt;checked&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="0fa6eb7b7fd73a6c228cab8613440b5f26fe154c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt; is truthy, then the &lt;code&gt;disabled&lt;/code&gt; attribute will be set on the element</source>
          <target state="translated">如果&lt;a href=&quot;../../../guide/expression&quot;&gt;表达式&lt;/a&gt;为真，则将在元素上设置 &lt;code&gt;disabled&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="c8f2e6672bb03dd7bddaac75918cc6f50c5be88c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt; is truthy/falsy then the element is hidden/shown respectively.</source>
          <target state="translated">如果&lt;a href=&quot;../../../guide/expression&quot;&gt;表达式&lt;/a&gt;为真/假，则分别隐藏/显示元素。</target>
        </trans-unit>
        <trans-unit id="1328e9d07bc981d3a2f225632334634a909a47c7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt; is truthy/falsy then the element is shown/hidden respectively.</source>
          <target state="translated">如果&lt;a href=&quot;../../../guide/expression&quot;&gt;表达式&lt;/a&gt;为真/假，则分别显示/隐藏元素。</target>
        </trans-unit>
        <trans-unit id="57f738c91082e8b25cb1fa3c8475f9812310ab4e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Content-Type&lt;/code&gt; is &lt;code&gt;application/json&lt;/code&gt; or the response looks like JSON, deserialize it using a JSON parser.</source>
          <target state="translated">如果 &lt;code&gt;Content-Type&lt;/code&gt; 是 &lt;code&gt;application/json&lt;/code&gt; 或响应看起来像JSON，请使用JSON解析器反序列化它。</target>
        </trans-unit>
        <trans-unit id="569213aa4cfaa4bcb8cb504d5cc5158f580f2ef7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;data&lt;/code&gt; property of the request configuration object contains an object, serialize it into JSON format.</source>
          <target state="translated">如果请求配置对象的 &lt;code&gt;data&lt;/code&gt; 属性包含一个对象，请将其序列化为JSON格式。</target>
        </trans-unit>
        <trans-unit id="a575ef21797e38c6a9636004fb3da88ae0f427fb" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;name&lt;/code&gt; attribute is specified, the form controller is published onto the current scope under this name.</source>
          <target state="translated">如果指定了 &lt;code&gt;name&lt;/code&gt; 属性，则表单控制器将以该名称发布到当前作用域上。</target>
        </trans-unit>
        <trans-unit id="26b0e12a78f6677dac08ad73f6c6c9206d29a49b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ngAnimate&lt;/code&gt; module is active within the application then the &lt;code&gt;ngMessages&lt;/code&gt;, &lt;code&gt;ngMessage&lt;/code&gt; and &lt;code&gt;ngMessageExp&lt;/code&gt; directives will trigger animations whenever any messages are added and removed from the DOM by the &lt;code&gt;ngMessages&lt;/code&gt; directive.</source>
          <target state="translated">如果 &lt;code&gt;ngAnimate&lt;/code&gt; 模块是应用程序中的活动，则 &lt;code&gt;ngMessages&lt;/code&gt; ， &lt;code&gt;ngMessage&lt;/code&gt; 和 &lt;code&gt;ngMessageExp&lt;/code&gt; 指令将触发每当任何消息添加和从由所述DOM移除动画 &lt;code&gt;ngMessages&lt;/code&gt; 指令。</target>
        </trans-unit>
        <trans-unit id="7620b6d1e4671d235ceba2b3eb50bbc8af56dbac" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;require&lt;/code&gt; property is an object and &lt;code&gt;bindToController&lt;/code&gt; is truthy, then the required controllers are bound to the controller using the keys of the &lt;code&gt;require&lt;/code&gt; property. This binding occurs after all the controllers have been constructed but before &lt;code&gt;$onInit&lt;/code&gt; is called. If the name of the required controller is the same as the local name (the key), the name can be omitted. For example, &lt;code&gt;{parentDir: '^^'}&lt;/code&gt; is equivalent to &lt;code&gt;{parentDir: '^^parentDir'}&lt;/code&gt;. See the &lt;a href=&quot;../provider/%24compileprovider#component.html&quot;&gt;&lt;code&gt;$compileProvider&lt;/code&gt;&lt;/a&gt; helper for an example of how this can be used. If no such required directive(s) can be found, or if the directive does not have a controller, then an error is raised (unless no link function is specified and the required controllers are not being bound to the directive controller, in which case error checking is skipped). The name can be prefixed with:</source>
          <target state="translated">如果 &lt;code&gt;require&lt;/code&gt; 属性是一个对象，并且 &lt;code&gt;bindToController&lt;/code&gt; 为true，则使用 &lt;code&gt;require&lt;/code&gt; 属性的键将所需的控制器绑定到该控制器。此绑定发生在所有控制器都已构造之后但在调用 &lt;code&gt;$onInit&lt;/code&gt; 之前。如果所需控制器的名称与本地名称（键）相同，则可以省略该名称。例如， &lt;code&gt;{parentDir: '^^'}&lt;/code&gt; 等效于 &lt;code&gt;{parentDir: '^^parentDir'}&lt;/code&gt; 。请参阅&lt;a href=&quot;../provider/%24compileprovider#component.html&quot;&gt; &lt;code&gt;$compileProvider&lt;/code&gt; &lt;/a&gt;有关如何使用它的示例的帮助程序。如果找不到此类必需的指令，或者该指令没有控制器，则会引发错误（除非未指定链接功能，并且必需的控制器未绑定到指令控制器，在这种情况下）错误检查被跳过）。该名称可以带有以下前缀：</target>
        </trans-unit>
        <trans-unit id="e9084553ff9f6768e27df6a51cf00d07607970ba" translate="yes" xml:space="preserve">
          <source>If the argument is a hash object containing an array of values, these values will be encoded as duplicate search parameters in the URL.</source>
          <target state="translated">如果参数是一个包含值数组的哈希对象,这些值将被编码为URL中的重复搜索参数。</target>
        </trans-unit>
        <trans-unit id="bcb61a9e955126eaa26ea942a4627e94e63e44a6" translate="yes" xml:space="preserve">
          <source>If the compared values are of different types:</source>
          <target state="translated">如果比较的数值是不同类型的。</target>
        </trans-unit>
        <trans-unit id="a6ebb8e7acaaad05ba88ba630bbcf4bb474a27c9" translate="yes" xml:space="preserve">
          <source>If the compiler finds that an element matches a directive, then the directive is added to the list of directives that match the DOM element. A single element may match multiple directives.</source>
          <target state="translated">如果编译器发现一个元素匹配一个指令,那么这个指令就会被添加到匹配DOM元素的指令列表中。一个元素可以匹配多个指令。</target>
        </trans-unit>
        <trans-unit id="dba304c82bd0b93a1d184175d2e32a6154fed02c" translate="yes" xml:space="preserve">
          <source>If the controller has been attached using the &lt;code&gt;controller as&lt;/code&gt; syntax then the controller instance will be assigned to a property on the scope.</source>
          <target state="translated">如果已使用 &lt;code&gt;controller as&lt;/code&gt; 语法附加了控制器，则将控制器实例分配给合并范围上的属性。</target>
        </trans-unit>
        <trans-unit id="6cd88d003715e1438f37dc2797bc52968605194f" translate="yes" xml:space="preserve">
          <source>If the directive is using 'element' transclusion, the compiler will actually remove the directive's entire element from the DOM and replace it with a comment node. The compiler then inserts the directive's template &quot;after&quot; this comment node, as a sibling.</source>
          <target state="translated">如果指令使用了 &quot;元素 &quot;转包容,编译器实际上会从DOM中删除指令的整个元素,并用一个注释节点代替。然后,编译器会在这个注释节点之后插入指令的模板,作为一个兄弟节点。</target>
        </trans-unit>
        <trans-unit id="ccc0a0551436812b070e6ede527ae76f73bef649" translate="yes" xml:space="preserve">
          <source>If the element selector is prefixed with a &lt;code&gt;?&lt;/code&gt; then that slot is optional.</source>
          <target state="translated">如果元素选择器以 &lt;code&gt;?&lt;/code&gt; 为前缀 那么该插槽是可选的。</target>
        </trans-unit>
        <trans-unit id="539951d39c2b051017250ec693df08f36d0a8f58" translate="yes" xml:space="preserve">
          <source>If the element with &lt;code&gt;ngRef&lt;/code&gt; is destroyed &lt;code&gt;null&lt;/code&gt; is assigned to the property.</source>
          <target state="translated">如果使用 &lt;code&gt;ngRef&lt;/code&gt; 的元素被破坏，则将 &lt;code&gt;null&lt;/code&gt; 分配给该属性。</target>
        </trans-unit>
        <trans-unit id="8c51b91039912156c6ef5160d6f7caa8d6f1e32c" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to a RegExp object, then this is used directly.</source>
          <target state="translated">如果表达式评估为 RegExp对象,则直接使用。</target>
        </trans-unit>
        <trans-unit id="8fb5cd62dfec3bda2d681b5166adcc87bc454767" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to a string, the string should be one or more space-delimited class names.</source>
          <target state="translated">如果表达式的值是一个字符串,那么这个字符串应该是一个或多个以空格分隔的类名。</target>
        </trans-unit>
        <trans-unit id="bb3c8751b0c61a411cfd191d56c199c86cb9d8a9" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to a string, then it will be converted to a RegExp after wrapping it in &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; characters. For instance, &lt;code&gt;&quot;abc&quot;&lt;/code&gt; will be converted to &lt;code&gt;new RegExp('^abc$')&lt;/code&gt;.</source>
          <target state="translated">如果表达式的计算结果为字符串，则将其用 &lt;code&gt;^&lt;/code&gt; 和 &lt;code&gt;$&lt;/code&gt; 字符包装后，将转换为RegExp 。例如， &lt;code&gt;&quot;abc&quot;&lt;/code&gt; 将被转换为 &lt;code&gt;new RegExp('^abc$')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0a90d5734dbd86cb9e55270bd3a9ec2a471d3da2" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to an array, each element of the array should either be a string as in type 1 or an object as in type 2. This means that you can mix strings and objects together in an array to give you more control over what CSS classes appear. See the code below for an example of this.</source>
          <target state="translated">如果表达式评估为一个数组,数组中的每个元素应该是类型1中的字符串或类型2中的对象。这意味着你可以将字符串和对象混合在一个数组中,以使你对CSS类的显示有更多的控制。请看下面的代码,这是一个例子。</target>
        </trans-unit>
        <trans-unit id="9f28d2244e2fc42662b32132ed29fd1499d1d52b" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to an object, then for each key-value pair of the object with a truthy value the corresponding key is used as a class name.</source>
          <target state="translated">如果表达式评价为对象,那么对于对象的每一个键值对的真值,都会使用相应的键作为类名。</target>
        </trans-unit>
        <trans-unit id="4f8a5c1d790a45cf8480b55c2ec6d0e8c83e21ad" translate="yes" xml:space="preserve">
          <source>If the expression will not change once set, it is a candidate for one-time binding. Here are three example cases.</source>
          <target state="translated">如果表达式一经设置就不会改变,那么它就是一次性绑定的候选者。下面是三个例子。</target>
        </trans-unit>
        <trans-unit id="8a619d19d7445d7e347bec6f9960436c9602b51f" translate="yes" xml:space="preserve">
          <source>If the first argument was a string, a factory function for the filter to be registered.</source>
          <target state="translated">如果第一个参数是字符串,则注册过滤器的工厂函数。</target>
        </trans-unit>
        <trans-unit id="361c8831315e17339674f0ae2feca36f02b8ac8a" translate="yes" xml:space="preserve">
          <source>If the function throws an error or the returned promise gets rejected, no further processing will take place and the &lt;a href=&quot;../service/%24route#%24routeChangeError.html&quot;&gt;$routeChangeError&lt;/a&gt; event will be fired.</source>
          <target state="translated">如果函数抛出错误或返回的承诺被拒绝，则不会进行进一步处理，并且会触发&lt;a href=&quot;../service/%24route#%24routeChangeError.html&quot;&gt;$ routeChangeError&lt;/a&gt;事件。</target>
        </trans-unit>
        <trans-unit id="801344aef470ca55925f85d5fc988659687084e2" translate="yes" xml:space="preserve">
          <source>If the horizontal distance is greater, this is a swipe and &lt;code&gt;move&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; events follow.</source>
          <target state="translated">如果水平距离较大，则滑动一下即可 &lt;code&gt;move&lt;/code&gt; 并 &lt;code&gt;end&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="a956873d372528560c2d21f9517980780e587b81" translate="yes" xml:space="preserve">
          <source>If the input is null or undefined, it will just be returned. If the input is infinite (Infinity or -Infinity), the Infinity symbol '&amp;infin;' or '-&amp;infin;' is returned, respectively. If the input is not a number an empty string is returned.</source>
          <target state="translated">如果输入为null或未定义，则将返回它。如果输入是无限的（无穷大或-无穷大），则分别返回无穷大符号'&amp;infin;'或'-&amp;infin;'。如果输入的不是数字，则返回一个空字符串。</target>
        </trans-unit>
        <trans-unit id="3c59983d990ab2fd7484efe71b9e5bc2142d0391" translate="yes" xml:space="preserve">
          <source>If the interpolated value is not a &lt;code&gt;String&lt;/code&gt;, it is computed as follows:</source>
          <target state="translated">如果插值的值不是 &lt;code&gt;String&lt;/code&gt; ，则其计算如下：</target>
        </trans-unit>
        <trans-unit id="5201fb064f6147470f00f21dea4bab9f47241e2f" translate="yes" xml:space="preserve">
          <source>If the map of attributes contains a value for &lt;code&gt;target&lt;/code&gt;, it overrides the value of the target parameter.</source>
          <target state="translated">如果属性映射包含 &lt;code&gt;target&lt;/code&gt; 的值，则它将覆盖target参数的值。</target>
        </trans-unit>
        <trans-unit id="fbd620b139e2c7c9068fe0980b84af6bdfabe8c0" translate="yes" xml:space="preserve">
          <source>If the ngMessages renders no inner ngMessage directive (i.e. when none of the truthy keys are matched by a defined message), then it will render a default message using the &lt;a href=&quot;ngmessages/directive/ngmessagedefault&quot;&gt;&lt;code&gt;ngMessageDefault&lt;/code&gt;&lt;/a&gt; directive. Note that matched messages will always take precedence over unmatched messages. That means the default message will not be displayed when another message is matched. This is also true for &lt;code&gt;ng-messages-multiple&lt;/code&gt;.</source>
          <target state="translated">如果ngMessages不呈现内部ngMessage指令（即，当定义的消息均未匹配任何真实键时），则它将使用&lt;a href=&quot;ngmessages/directive/ngmessagedefault&quot;&gt; &lt;code&gt;ngMessageDefault&lt;/code&gt; &lt;/a&gt;指令呈现默认消息。请注意，匹配的消息将始终优先于不匹配的消息。这意味着当匹配另一条消息时，将不显示默认消息。对于 &lt;code&gt;ng-messages-multiple&lt;/code&gt; 也是如此。</target>
        </trans-unit>
        <trans-unit id="b16925af72a4fed089f605a5771aa7712c7c7fd8" translate="yes" xml:space="preserve">
          <source>If the object has a &lt;code&gt;valueOf()&lt;/code&gt; method that returns a primitive, its return value will be used instead.</source>
          <target state="translated">如果对象具有返回原始的 &lt;code&gt;valueOf()&lt;/code&gt; 方法，则将使用其返回值。</target>
        </trans-unit>
        <trans-unit id="3f1a13de46e7e46a68d029c7a50e792f652a12e1" translate="yes" xml:space="preserve">
          <source>If the object has a custom &lt;code&gt;toString()&lt;/code&gt; method (i.e. not the one inherited from &lt;code&gt;Object&lt;/code&gt;) that returns a primitive, its return value will be used instead.</source>
          <target state="translated">如果对象具有返回原语的自定义 &lt;code&gt;toString()&lt;/code&gt; 方法（即不是从 &lt;code&gt;Object&lt;/code&gt; 继承的方法），则将使用其返回值。</target>
        </trans-unit>
        <trans-unit id="b4070dda3da26b7789461241d4d6a2028444a334" translate="yes" xml:space="preserve">
          <source>If the option is set to &lt;code&gt;false&lt;/code&gt; and the URL in the browser changes, but the new URL maps to the same route, then a &lt;code&gt;$routeUpdate&lt;/code&gt; event is broadcasted on the root scope (without reloading the route).</source>
          <target state="translated">如果选项设置为 &lt;code&gt;false&lt;/code&gt; 并且浏览器中的URL更改，但是新的URL映射到相同的路由，则 &lt;code&gt;$routeUpdate&lt;/code&gt; 事件在根作用域上广播（不重新加载路由）。</target>
        </trans-unit>
        <trans-unit id="4f675d1330a06aa7e73c29dee26c8f270d3431c5" translate="yes" xml:space="preserve">
          <source>If the option is set to &lt;code&gt;false&lt;/code&gt; and the URL in the browser changes, then a &lt;code&gt;$routeUpdate&lt;/code&gt; event is broadcasted on the root scope (without reloading the route).</source>
          <target state="translated">如果该选项设置为 &lt;code&gt;false&lt;/code&gt; 并且浏览器中的URL更改，则 &lt;code&gt;$routeUpdate&lt;/code&gt; 事件在根作用域上广播（不重新加载路由）。</target>
        </trans-unit>
        <trans-unit id="667711c7d75a7f70cf4b59c7711f0e8c0ddf7c8c" translate="yes" xml:space="preserve">
          <source>If the option is set to &lt;code&gt;true&lt;/code&gt;, then the particular route can be matched without being case sensitive</source>
          <target state="translated">如果将选项设置为 &lt;code&gt;true&lt;/code&gt; ，则可以匹配特定的路由而不区分大小写</target>
        </trans-unit>
        <trans-unit id="2fa05f4335e8c37af4609e2cbfa503116352d3ed" translate="yes" xml:space="preserve">
          <source>If the parameter value is prefixed with &lt;code&gt;@&lt;/code&gt;, then the value for that parameter will be extracted from the corresponding property on the &lt;code&gt;data&lt;/code&gt; object (provided when calling actions with a request body). For example, if the &lt;code&gt;defaultParam&lt;/code&gt; object is &lt;code&gt;{someParam: '@someProp'}&lt;/code&gt; then the value of &lt;code&gt;someParam&lt;/code&gt; will be &lt;code&gt;data.someProp&lt;/code&gt;. Note that the parameter will be ignored, when calling a &quot;GET&quot; action method (i.e. an action method that does not accept a request body).</source>
          <target state="translated">如果参数值以 &lt;code&gt;@&lt;/code&gt; 开头，则将从 &lt;code&gt;data&lt;/code&gt; 对象上的相应属性中提取该参数的值（在使用请求主体调用操作时提供）。例如，如果 &lt;code&gt;defaultParam&lt;/code&gt; 对象是 &lt;code&gt;{someParam: '@someProp'}&lt;/code&gt; 则 &lt;code&gt;someParam&lt;/code&gt; 的值将是 &lt;code&gt;data.someProp&lt;/code&gt; 。请注意，在调用&amp;ldquo; GET&amp;rdquo;操作方法（即不接受请求正文的操作方法）时，将忽略该参数。</target>
        </trans-unit>
        <trans-unit id="748507705e8b73f2f2de5777914e00ac0057102d" translate="yes" xml:space="preserve">
          <source>If the passed parameter had been returned by a prior call to &lt;a href=&quot;%24scedelegate#trustAs.html&quot;&gt;&lt;code&gt;$sceDelegate.trustAs&lt;/code&gt;&lt;/a&gt;, returns the value that had been passed to &lt;a href=&quot;%24scedelegate#trustAs.html&quot;&gt;&lt;code&gt;$sceDelegate.trustAs&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果传递的参数是先前调用&lt;a href=&quot;%24scedelegate#trustAs.html&quot;&gt; &lt;code&gt;$sceDelegate.trustAs&lt;/code&gt; &lt;/a&gt;返回的，则返回传递给&lt;a href=&quot;%24scedelegate#trustAs.html&quot;&gt; &lt;code&gt;$sceDelegate.trustAs&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="34bdf8299f97f8ef59f74107df302ae6779e17bc" translate="yes" xml:space="preserve">
          <source>If the passed parameter is not a value that had been returned by &lt;a href=&quot;%24scedelegate#trustAs.html&quot;&gt;&lt;code&gt;$sceDelegate.trustAs&lt;/code&gt;&lt;/a&gt;, it must be returned as-is.</source>
          <target state="translated">如果传递的参数不是&lt;a href=&quot;%24scedelegate#trustAs.html&quot;&gt; &lt;code&gt;$sceDelegate.trustAs&lt;/code&gt; &lt;/a&gt;返回的值，则必须按原样返回。</target>
        </trans-unit>
        <trans-unit id="eba391f315a45facb41d9100a63641fbf14c5c21" translate="yes" xml:space="preserve">
          <source>If the provider is:</source>
          <target state="translated">如果提供者是:</target>
        </trans-unit>
        <trans-unit id="8fb90fddde351c69618ca1d22a26145a9faddc79" translate="yes" xml:space="preserve">
          <source>If the service has been declared multiple times, a decorator will decorate the service that has been declared last:</source>
          <target state="translated">如果服务被多次声明,装饰者将装饰最后声明的服务。</target>
        </trans-unit>
        <trans-unit id="073e1a6fd73d36907ed730dd5649eee40ed506d0" translate="yes" xml:space="preserve">
          <source>If the transcluded content is not empty (i.e. contains one or more DOM nodes, including whitespace text nodes), any existing content of this element will be removed before the transcluded content is inserted. If the transcluded content is empty (or only whitespace), the existing content is left intact. This lets you provide fallback content in the case that no transcluded content is provided.</source>
          <target state="translated">如果转入的内容不是空的(即包含一个或多个DOM节点,包括whitespace文本节点),那么在插入转入的内容之前,该元素的任何现有内容将被删除。如果转入的内容是空的(或者只有whitespace),现有的内容将被完整地保留。这让您可以在没有提供转入内容的情况下提供后备内容。</target>
        </trans-unit>
        <trans-unit id="d9ff46f623d6f00d105132061348b4f635bc911c" translate="yes" xml:space="preserve">
          <source>If the value is a RegExp literal, e.g. &lt;code&gt;ngPattern=&quot;/^\d+$/&quot;&lt;/code&gt;, it is used directly.</source>
          <target state="translated">如果该值为RegExp文字，例如 &lt;code&gt;ngPattern=&quot;/^\d+$/&quot;&lt;/code&gt; ，则可以直接使用。</target>
        </trans-unit>
        <trans-unit id="691fa80c49c3faa2138cb82838f938dea193adbf" translate="yes" xml:space="preserve">
          <source>If the value is empty, &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;on&lt;/code&gt;, then child animations are allowed. If the value is &lt;code&gt;false&lt;/code&gt;, child animations are not allowed.</source>
          <target state="translated">如果该值为空， &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;on&lt;/code&gt; ，则允许子动画。如果值为 &lt;code&gt;false&lt;/code&gt; ，则不允许子动画。</target>
        </trans-unit>
        <trans-unit id="34f1578079504e9d3dc1f5f790637a829842cb7f" translate="yes" xml:space="preserve">
          <source>If the vertical distance is greater, this is a scroll, and we let the browser take over. A &lt;code&gt;cancel&lt;/code&gt; event is sent.</source>
          <target state="translated">如果垂直距离较大，则为滚动，我们让浏览器接管。一个 &lt;code&gt;cancel&lt;/code&gt; 发送事件。</target>
        </trans-unit>
        <trans-unit id="2d6b619ad1758255d1b68794d39d43746c76cfac" translate="yes" xml:space="preserve">
          <source>If the viewValue of &lt;code&gt;ngModel&lt;/code&gt; does not match any of the options, then the control will automatically add an &quot;unknown&quot; option, which it then removes when the mismatch is resolved.</source>
          <target state="translated">如果ngModel的 &lt;code&gt;ngModel&lt;/code&gt; 与任何选项都不匹配，则控件将自动添加&amp;ldquo;未知&amp;rdquo;选项，然后在解决不匹配问题时将其删除。</target>
        </trans-unit>
        <trans-unit id="9a9455b461bd0ed851b0a2e20ee353139e41bf20" translate="yes" xml:space="preserve">
          <source>If there are no pending requests to flush when the method is called, an exception is thrown (as this is typically a sign of programming error).</source>
          <target state="translated">如果在调用该方法时,没有待处理的刷新请求,就会抛出异常(因为这通常是编程错误的标志)。</target>
        </trans-unit>
        <trans-unit id="060ea5570e9b3727e1af7089f2eeb073f6d7b905" translate="yes" xml:space="preserve">
          <source>If those attributes are added to an element, they will be applied to all the child elements and controls that inherit from it unless they are overridden.</source>
          <target state="translated">如果这些属性被添加到一个元素中,它们将被应用到所有继承该元素的子元素和控件中,除非它们被重写。</target>
        </trans-unit>
        <trans-unit id="a0c1cfe0ec558e25c8faaad7729d14ba017c6c40" translate="yes" xml:space="preserve">
          <source>If true, then the scope does not prototypically inherit from the parent scope. The scope is isolated, as it can not see parent scope properties. When creating widgets, it is useful for the widget to not accidentally read parent state.</source>
          <target state="translated">如果为真,那么该作用域就不会从父作用域继承原型。该作用域是隔离的,因为它不能看到父作用域的属性。当创建小组件时,这对小组件不意外地读取父级状态是有用的。</target>
        </trans-unit>
        <trans-unit id="1a1eda02417fef4dacf554c54592d8c5e31f4371" translate="yes" xml:space="preserve">
          <source>If true, when requests are loaded, they will schedule a deferred &quot;apply&quot; on the next tick, giving time for subsequent requests in a roughly ~10ms window to load and share the same digest cycle.</source>
          <target state="translated">如果为真,当请求被加载时,它们将在下一个tick上安排一个延迟的 &quot;应用&quot;,为后续的请求在一个大约10ms的窗口中提供时间来加载并共享同一个摘要周期。</target>
        </trans-unit>
        <trans-unit id="6f15cbe99032410d5987084ecc33f306be94d6db" translate="yes" xml:space="preserve">
          <source>If two directives suspend a scope, then one of them resumes the scope, the scope will no longer be suspended. This could result in the other directive believing a scope to be suspended when it is not.</source>
          <target state="translated">如果两个指令暂停了一个作用域,然后其中一个指令恢复了该作用域,那么该作用域将不再被暂停。这可能导致另一个指令认为某个作用域已被暂停,而实际上并没有。</target>
        </trans-unit>
        <trans-unit id="62a2ab806aea83a4f315e6a0440d6fa1d95f6028" translate="yes" xml:space="preserve">
          <source>If we change the above to &lt;code&gt;{{ 1000 | currency:&quot;USD$&quot;}}&lt;/code&gt;, AngularJS will always show a balance of &lt;code&gt;USD$1000&lt;/code&gt; regardless of locale.</source>
          <target state="translated">如果我们将以上更改为 &lt;code&gt;{{ 1000 | currency:&quot;USD$&quot;}}&lt;/code&gt; ，无论使用哪种语言环境，AngularJS始终会显示 &lt;code&gt;USD$1000&lt;/code&gt; 的余额。</target>
        </trans-unit>
        <trans-unit id="8182958d3c9e9a8a4566ae6109e758f0624b87f7" translate="yes" xml:space="preserve">
          <source>If you are creating a reusable component then you should be careful when using &lt;code&gt;&quot;*&quot;: &quot;$inherit&quot;&lt;/code&gt; since you may inadvertently inherit a setting in the future that changes the behavior of your component.</source>
          <target state="translated">如果要创建可重用的组件，则在使用 &lt;code&gt;&quot;*&quot;: &quot;$inherit&quot;&lt;/code&gt; 时应格外小心，因为将来您可能会无意间继承一个更改设置，从而更改组件的行为。</target>
        </trans-unit>
        <trans-unit id="6824fd64e915a35e23d50509c5e4bba8e51856fc" translate="yes" xml:space="preserve">
          <source>If you are familiar with &lt;code&gt;ngInclude&lt;/code&gt;, &lt;code&gt;templateUrl&lt;/code&gt; works just like it. Here's the same example using &lt;code&gt;templateUrl&lt;/code&gt; instead:</source>
          <target state="translated">如果您熟悉 &lt;code&gt;ngInclude&lt;/code&gt; ，则 &lt;code&gt;templateUrl&lt;/code&gt; 会像它一样工作。这是使用 &lt;code&gt;templateUrl&lt;/code&gt; 的相同示例：</target>
        </trans-unit>
        <trans-unit id="77b4c3f9eed7868de1adc6770793e45e91738ff2" translate="yes" xml:space="preserve">
          <source>If you are generating your JavaScript from some other templating engine (not recommended, e.g. in issue &lt;a href=&quot;https://github.com/angular/angular.js/issues/4006&quot;&gt;#4006&lt;/a&gt;), remember to escape your regular expression (and be aware that you might need more than one level of escaping depending on your templating engine and the way you interpolated the value.) Do make use of your platform's escaping mechanism as it might be good enough before coding your own. E.g. Ruby has &lt;a href=&quot;http://www.ruby-doc.org/core-2.0.0/Regexp.html#method-c-escape&quot;&gt;Regexp.escape(str)&lt;/a&gt; and Python has &lt;a href=&quot;http://docs.python.org/library/re.html#re.escape&quot;&gt;re.escape&lt;/a&gt;. Javascript lacks a similar built in function for escaping. Take a look at Google Closure library's &lt;a href=&quot;http://docs.closure-library.googlecode.com/git/closure_goog_string_string.js.source.html#line962&quot;&gt;goog.string.regExpEscape(s)&lt;/a&gt;.</source>
          <target state="translated">如果要从其他模板引擎生成JavaScript（不建议使用，例如，在问题&lt;a href=&quot;https://github.com/angular/angular.js/issues/4006&quot;&gt;＃4006中&lt;/a&gt;），请记住转义正则表达式（并请注意，根据模板引擎和方式，您可能需要多个转义级别）您插入了值。）请务必使用平台的转义机制，因为在编写自己的转义机制之前可能已经足够了。例如，Ruby具有&lt;a href=&quot;http://www.ruby-doc.org/core-2.0.0/Regexp.html#method-c-escape&quot;&gt;Regexp.escape（str）&lt;/a&gt;，Python具有&lt;a href=&quot;http://docs.python.org/library/re.html#re.escape&quot;&gt;re.escape&lt;/a&gt;。 Javascript缺少类似的内置转义功能。看一下Google Closure库的&lt;a href=&quot;http://docs.closure-library.googlecode.com/git/closure_goog_string_string.js.source.html#line962&quot;&gt;goog.string.regExpEscape（s）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a29cc079c5381669c7a3a9da4c7b33b8f798e95e" translate="yes" xml:space="preserve">
          <source>If you are hitting any of these limitations, the recommended workaround is to convert your object into an array that is sorted into the order that you prefer before providing it to &lt;code&gt;ngRepeat&lt;/code&gt;. You could do this with a filter such as &lt;a href=&quot;http://ngmodules.org/modules/angular-toArrayFilter&quot;&gt;toArrayFilter&lt;/a&gt; or implement a &lt;code&gt;$watch&lt;/code&gt; on the object yourself.</source>
          <target state="translated">如果遇到这些限制中的任何一个，建议的解决方法是将对象转换为数组，然后将其提供给 &lt;code&gt;ngRepeat&lt;/code&gt; ，并按照您希望的顺序进行排序。您可以使用诸如&lt;a href=&quot;http://ngmodules.org/modules/angular-toArrayFilter&quot;&gt;toArrayFilter之类&lt;/a&gt;的过滤器执行此操作，也可以自己在对象上实现 &lt;code&gt;$watch&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99dd2e2dc29df4f42bc993e77fee00d09330237a" translate="yes" xml:space="preserve">
          <source>If you are just using &lt;a href=&quot;../directive/ngtransclude&quot;&gt;&lt;code&gt;ngTransclude&lt;/code&gt;&lt;/a&gt; then you don't need to worry about this function, since ngTransclude will deal with it for us.</source>
          <target state="translated">如果您只是在使用&lt;a href=&quot;../directive/ngtransclude&quot;&gt; &lt;code&gt;ngTransclude&lt;/code&gt; ,&lt;/a&gt;则无需担心此功能，因为ngTransclude会为我们处理它。</target>
        </trans-unit>
        <trans-unit id="a45454eb838a97c3b99832ac7c22cb8a9f728800" translate="yes" xml:space="preserve">
          <source>If you are not asking the linking function to clone the template, create the DOM element(s) before you send them to the compiler and keep this reference around.</source>
          <target state="translated">如果你不要求链接函数克隆模板,那么在你把DOM元素发送给编译器之前,先创建DOM元素,并保留这个引用。</target>
        </trans-unit>
        <trans-unit id="05854a1d0c3c61abd34a6185ba88099223eaf1f6" translate="yes" xml:space="preserve">
          <source>If you are setting the option value with the option's &lt;code&gt;value&lt;/code&gt; attribute, or textContent, the value will always be a &lt;code&gt;string&lt;/code&gt; which means that the model value must also be a string. Otherwise the &lt;code&gt;select&lt;/code&gt; directive cannot match them correctly.</source>
          <target state="translated">如果使用选项的 &lt;code&gt;value&lt;/code&gt; 属性或textContent 设置选项值，则该值将始终为 &lt;code&gt;string&lt;/code&gt; ，这意味着模型值也必须为字符串。否则， &lt;code&gt;select&lt;/code&gt; 指令不能正确匹配它们。</target>
        </trans-unit>
        <trans-unit id="8616bb7e831e9c34f5ed1c22db4f4d693acd3c1c" translate="yes" xml:space="preserve">
          <source>If you are sure that your project only uses element and attribute directives, and you are not using any 3rd party library that uses directives inside element classes or html comments, you can disable the compilation of directives on element classes and comments for the whole application. This results in a compilation performance gain, as the compiler does not have to check comments and element classes looking for directives.</source>
          <target state="translated">如果你确定你的项目只使用元素和属性指令,而且你没有使用任何在元素类或html注释中使用指令的第三方库,你可以禁止编译整个应用程序的元素类和注释的指令。这将导致编译性能的提高,因为编译器不必检查注释和元素类来寻找指令。</target>
        </trans-unit>
        <trans-unit id="7f18d87980792564416a9131237779e5b2ab35b5" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;$element&lt;/code&gt; or &lt;code&gt;$attrs&lt;/code&gt; in the controller, make sure to provide them as &lt;code&gt;locals&lt;/code&gt;. The &lt;code&gt;$element&lt;/code&gt; must be a jqLite-wrapped DOM element, and &lt;code&gt;$attrs&lt;/code&gt; should be an object that has all properties / functions that you are using in the controller. If this is getting too complex, you should compile the component instead and access the component's controller via the &lt;a href=&quot;../../ng/function/angular.element#methods.html&quot;&gt;&lt;code&gt;controller&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">如果在控制器中使用 &lt;code&gt;$element&lt;/code&gt; 或 &lt;code&gt;$attrs&lt;/code&gt; ，请确保将其提供为 &lt;code&gt;locals&lt;/code&gt; 。的 &lt;code&gt;$element&lt;/code&gt; 必须是jqLit​​e包裹DOM元素，和 &lt;code&gt;$attrs&lt;/code&gt; 应具有所有特性/功能的一个对象所使用在控制器中。如果这变得太复杂，则应改为编译组件，然后通过&lt;a href=&quot;../../ng/function/angular.element#methods.html&quot;&gt; &lt;code&gt;controller&lt;/code&gt; &lt;/a&gt;函数访问组件的控制器。</target>
        </trans-unit>
        <trans-unit id="62ca6a2bc0e076ff23829bf151f3637b4d8d77f5" translate="yes" xml:space="preserve">
          <source>If you are using a url with a suffix, just add the suffix, like this: &lt;code&gt;$resource('http://example.com/resource.json')&lt;/code&gt; or &lt;code&gt;$resource('http://example.com/:id.json')&lt;/code&gt; or even &lt;code&gt;$resource('http://example.com/resource/:resource_id.:format')&lt;/code&gt; If the parameter before the suffix is empty, :resource_id in this case, then the &lt;code&gt;/.&lt;/code&gt; will be collapsed down to a single &lt;code&gt;.&lt;/code&gt;. If you need this sequence to appear and not collapse then you can escape it with &lt;code&gt;/\.&lt;/code&gt;.</source>
          <target state="translated">如果您使用带后缀的网址，只需添加后缀，例如： &lt;code&gt;$resource('http://example.com/resource.json')&lt;/code&gt; 或 &lt;code&gt;$resource('http://example.com/:id.json')&lt;/code&gt; 甚至 &lt;code&gt;$resource('http://example.com/resource/:resource_id.:format')&lt;/code&gt; 如果后缀之前的参数为空，则在这种情况下为：resource_id，然后为 &lt;code&gt;/.&lt;/code&gt; 将折叠为一个 &lt;code&gt;.&lt;/code&gt; 。如果您需要显示此序列并且不折叠它，则可以使用 &lt;code&gt;/\.&lt;/code&gt; 对其进行转义。。</target>
        </trans-unit>
        <trans-unit id="8175243d5dd6cd4ad446324c5b107b61705e0849" translate="yes" xml:space="preserve">
          <source>If you are writing your controllers as classes you have easier access to the properties and methods, which will appear on the scope, from inside the controller code.</source>
          <target state="translated">如果你把控制器写成类,你可以更容易地从控制器代码内部访问属性和方法,这些属性和方法将出现在作用域上。</target>
        </trans-unit>
        <trans-unit id="579b0bfd8c97d214c17252551f1e2da79f4821e2" translate="yes" xml:space="preserve">
          <source>If you choose to use the old style directive syntax &lt;code&gt;ng:&lt;/code&gt; then include xml-namespace in &lt;code&gt;html&lt;/code&gt; when running the page in the XHTML mode. (This is here for historical reasons, and we no longer recommend use of &lt;code&gt;ng:&lt;/code&gt;.)</source>
          <target state="translated">如果选择使用旧风格的指令语法 &lt;code&gt;ng:&lt;/code&gt; 则在XHTML模式下运行页面时，请在 &lt;code&gt;html&lt;/code&gt; 中包含xml-namespace 。（这是出于历史原因，我们不再建议使用 &lt;code&gt;ng:&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="95ac9993d00393a11c4032cc3f53f03837212f99" translate="yes" xml:space="preserve">
          <source>If you do have CSS transitions / animations defined for the animation events, make sure they have a higher priority than any styles that are not related to &lt;code&gt;ngAnimate&lt;/code&gt;.</source>
          <target state="translated">如果确实为动画事件定义了CSS过渡/动画，请确保它们的优先级高于与 &lt;code&gt;ngAnimate&lt;/code&gt; 不相关的任何样式。</target>
        </trans-unit>
        <trans-unit id="e60f87bc71cf08bbc7d9b1d676646a6c5716f48c" translate="yes" xml:space="preserve">
          <source>If you do not provide &lt;code&gt;ngCsp&lt;/code&gt; then AngularJS tries to autodetect if CSP is blocking dynamic code creation from strings (e.g., &lt;code&gt;unsafe-eval&lt;/code&gt; not specified in CSP header) and automatically deactivates this feature in the &lt;a href=&quot;../service/%24parse&quot;&gt;&lt;code&gt;$parse&lt;/code&gt;&lt;/a&gt; service. This autodetection, however, triggers a CSP error to be logged in the console:</source>
          <target state="translated">如果您不提供 &lt;code&gt;ngCsp&lt;/code&gt; ,则AngularJS会尝试自动检测CSP是否阻止从字符串创建动态代码（例如，在CSP标头中未指定 &lt;code&gt;unsafe-eval&lt;/code&gt; ），并在&lt;a href=&quot;../service/%24parse&quot;&gt; &lt;code&gt;$parse&lt;/code&gt; &lt;/a&gt;服务中自动停用此功能。但是，此自动检测将触发CSP错误，以记录在控制台中：</target>
        </trans-unit>
        <trans-unit id="090e07725aef98ccf8c178d8354126ccc84bb075" translate="yes" xml:space="preserve">
          <source>If you do want your animations to play when the app bootstraps, you can enable animations globally in your main module's &lt;a href=&quot;../api/ng/type/angular.module#run.html&quot;&gt;run&lt;/a&gt; function:</source>
          <target state="translated">如果您确实希望在应用程序引导时播放动画，则可以在主模块的&lt;a href=&quot;../api/ng/type/angular.module#run.html&quot;&gt;运行&lt;/a&gt;功能中全局启用动画：</target>
        </trans-unit>
        <trans-unit id="c54acd5a1055cc95784ce1576ee1d24938a564f3" translate="yes" xml:space="preserve">
          <source>If you have an input that uses &lt;code&gt;ng-model-options&lt;/code&gt; to set up debounced updates or updates that depend on special events such as &lt;code&gt;blur&lt;/code&gt;, there can be a period when the &lt;code&gt;$viewValue&lt;/code&gt; is out of sync with the ngModel's &lt;code&gt;$modelValue&lt;/code&gt;.</source>
          <target state="translated">如果您有使用 &lt;code&gt;ng-model-options&lt;/code&gt; 设置去抖动的更新或依赖于特殊事件（例如 &lt;code&gt;blur&lt;/code&gt; 更新的输入，则可能会有一段时间 &lt;code&gt;$viewValue&lt;/code&gt; 与ngModel的 &lt;code&gt;$modelValue&lt;/code&gt; 不同步。</target>
        </trans-unit>
        <trans-unit id="f76a6558a7d25629fa9ecb3f235d6240ed436b29" translate="yes" xml:space="preserve">
          <source>If you have awesome AngularJS resources that belong on that page, please tell us about them on &lt;a href=&quot;https://plus.google.com/u/0/+AngularJS&quot;&gt;Google+&lt;/a&gt; or &lt;a href=&quot;https://twitter.com/angularjs&quot;&gt;Twitter&lt;/a&gt;.</source>
          <target state="translated">如果该页面上有很棒的AngularJS资源，请通过&lt;a href=&quot;https://plus.google.com/u/0/+AngularJS&quot;&gt;Google+&lt;/a&gt;或&lt;a href=&quot;https://twitter.com/angularjs&quot;&gt;Twitter&lt;/a&gt;告诉我们。</target>
        </trans-unit>
        <trans-unit id="cc605f97c4d62e22545f2f1d9d3a0d4805d17f68" translate="yes" xml:space="preserve">
          <source>If you have very specific requirements about the way items are sorted, you can pass your own comparator function. For example, you might need to compare some strings in a locale-sensitive way. (When specifying a custom comparator, you also need to pass a value for the &lt;code&gt;reverse&lt;/code&gt; argument - passing &lt;code&gt;false&lt;/code&gt; retains the default sorting order, i.e. ascending.)</source>
          <target state="translated">如果您对项目的排序方式有非常特定的要求，则可以传递自己的比较器函数。例如，您可能需要以对语言环境敏感的方式比较一些字符串。（在指定自定义比较器时，您还需要传递一个 &lt;code&gt;reverse&lt;/code&gt; 参数值-传递 &lt;code&gt;false&lt;/code&gt; 会保留默认的排序顺序，即升序。）</target>
        </trans-unit>
        <trans-unit id="83df81bb997c0451e68609a38aa5876c44d17de2" translate="yes" xml:space="preserve">
          <source>If you however do need to write a stateful filter, you have to mark the filter as &lt;code&gt;$stateful&lt;/code&gt;, which means that it will be executed one or more times during the each &lt;code&gt;$digest&lt;/code&gt; cycle.</source>
          <target state="translated">但是，如果确实需要编写有状态过滤器，则必须将过滤器标记为 &lt;code&gt;$stateful&lt;/code&gt; ，这意味着它将在每个 &lt;code&gt;$digest&lt;/code&gt; 循环中执行一次或多次。</target>
        </trans-unit>
        <trans-unit id="207d49b848c74ffcb21da0b752a994a1ebcb5c10" translate="yes" xml:space="preserve">
          <source>If you intend to implement CSP with these rules then you must tell AngularJS not to use these features.</source>
          <target state="translated">如果你打算用这些规则实现CSP,那么你必须告诉AngularJS不要使用这些功能。</target>
        </trans-unit>
        <trans-unit id="870c0ac7d5968a770c3f532b92db58783f974638" translate="yes" xml:space="preserve">
          <source>If you need access to the bound view, there are two ways to do it:</source>
          <target state="translated">如果你需要访问绑定视图,有两种方法。</target>
        </trans-unit>
        <trans-unit id="2aa27655c9b71a602d902a015fc4942f9f7944c1" translate="yes" xml:space="preserve">
          <source>If you need to have more control over the initialization process, you can use a manual bootstrapping method instead. Examples of when you'd need to do this include using script loaders or the need to perform an operation before AngularJS compiles a page.</source>
          <target state="translated">如果你需要对初始化过程有更多的控制,你可以使用手动引导方法来代替。你需要这样做的例子包括使用脚本加载器或需要在AngularJS编译页面之前执行一个操作。</target>
        </trans-unit>
        <trans-unit id="dbca727a7864fd896ef933ac7699c9e2ca5dac44" translate="yes" xml:space="preserve">
          <source>If you need to test a nested Controller you must create the same scope hierarchy in your test that exists in the DOM:</source>
          <target state="translated">如果你需要测试一个嵌套的Controller,你必须在你的测试中创建与DOM中存在的相同的范围层次结构。</target>
        </trans-unit>
        <trans-unit id="ecb468ce29d2f458690fba5b025b3f86a8d80c22" translate="yes" xml:space="preserve">
          <source>If you only want a promise that will be resolved after some specified delay then you can call &lt;code&gt;$timeout&lt;/code&gt; without the &lt;code&gt;fn&lt;/code&gt; function.</source>
          <target state="translated">如果只希望在指定的延迟后可以解决的诺言，则可以调用 &lt;code&gt;$timeout&lt;/code&gt; 而不使用 &lt;code&gt;fn&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="a5b2fc07801a43a0c7f77b3da6fcfcbca33ad603" translate="yes" xml:space="preserve">
          <source>If you use a custom comparator, it will be called with pairs of objects of the form &lt;code&gt;{value: ..., type: '...', index: ...}&lt;/code&gt; and is expected to return &lt;code&gt;0&lt;/code&gt; if the objects are equal (as far as the comparator is concerned), &lt;code&gt;-1&lt;/code&gt; if the 1st one should be ranked higher than the second, or &lt;code&gt;1&lt;/code&gt; otherwise.</source>
          <target state="translated">如果您使用自定义比较器，它将以 &lt;code&gt;{value: ..., type: '...', index: ...}&lt;/code&gt; 形式的成对对象调用，并且如果对象相等，则期望返回 &lt;code&gt;0&lt;/code&gt; （就比较器而言），如果第一个比第二个高，则为 &lt;code&gt;-1&lt;/code&gt; ，否则为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58f3058d3baff2b3a073006ea03f29eefad6d04e" translate="yes" xml:space="preserve">
          <source>If you want to be notified whenever &lt;a href=&quot;%24rootscope.scope#%24digest.html&quot;&gt;$digest&lt;/a&gt; is called, you can register a &lt;code&gt;watchExpression&lt;/code&gt; function with no &lt;code&gt;listener&lt;/code&gt;. (Be prepared for multiple calls to your &lt;code&gt;watchExpression&lt;/code&gt; because it will execute multiple times in a single &lt;a href=&quot;%24rootscope.scope#%24digest.html&quot;&gt;$digest&lt;/a&gt; cycle if a change is detected.)</source>
          <target state="translated">如果希望在调用&lt;a href=&quot;%24rootscope.scope#%24digest.html&quot;&gt;$ digest&lt;/a&gt;时得到通知，则可以注册一个没有 &lt;code&gt;listener&lt;/code&gt; 的 &lt;code&gt;watchExpression&lt;/code&gt; 函数。（准备好对 &lt;code&gt;watchExpression&lt;/code&gt; 的多次调用，因为如果检测到更改，它将在单个&lt;a href=&quot;%24rootscope.scope#%24digest.html&quot;&gt;$ digest&lt;/a&gt;循环中执行多次。）</target>
        </trans-unit>
        <trans-unit id="6f6cc8237e6dc46dbea8035f91ef1cceb56523a5" translate="yes" xml:space="preserve">
          <source>If you want to be notified whenever &lt;code&gt;$digest()&lt;/code&gt; is called, you can register a &lt;code&gt;watchExpression&lt;/code&gt; function with &lt;a href=&quot;%24rootscope.scope#%24watch.html&quot;&gt;$watch()&lt;/a&gt; with no &lt;code&gt;listener&lt;/code&gt;.</source>
          <target state="translated">如果希望在每次调用 &lt;code&gt;$digest()&lt;/code&gt; 时收到通知，则可以在没有 &lt;code&gt;listener&lt;/code&gt; 向&lt;a href=&quot;%24rootscope.scope#%24watch.html&quot;&gt;$ watch（）&lt;/a&gt;注册 &lt;code&gt;watchExpression&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="ac59abc08a6313ed9820733d9cddfe40a666fa59" translate="yes" xml:space="preserve">
          <source>If you want to keep the default behavior and just add new events that may trigger the model update and validation, add &quot;default&quot; as one of the specified events.</source>
          <target state="translated">如果您想保持默认行为,只需添加可能触发模型更新和验证的新事件,请添加 &quot;默认 &quot;作为指定事件之一。</target>
        </trans-unit>
        <trans-unit id="7ffb3f226f4ffeb1e0ee64801113cc17b7d6cb85" translate="yes" xml:space="preserve">
          <source>If you want to manually control the insertion and removal of the transcluded content in your directive then you must use this transclude function. When you call a transclude function it returns a a jqLite/JQuery object that contains the compiled DOM, which is linked to the correct transclusion scope.</source>
          <target state="translated">如果你想手动控制指令中transclude内容的插入和删除,那么你必须使用这个transclude函数。当你调用transclude函数时,它会返回一个jqLite/JQuery对象,该对象包含编译后的DOM,它被链接到正确的transclusion范围。</target>
        </trans-unit>
        <trans-unit id="350e89977f66c00f278ba622f5c870b1d11fc27e" translate="yes" xml:space="preserve">
          <source>If you want to pass custom options to the &lt;code&gt;$http&lt;/code&gt; service, such as setting the Accept header you can configure this via &lt;a href=&quot;../provider/%24templaterequestprovider#httpOptions.html&quot;&gt;&lt;code&gt;$templateRequestProvider&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果要将自定义选项传递给 &lt;code&gt;$http&lt;/code&gt; 服务，例如设置Accept标头，则可以通过&lt;a href=&quot;../provider/%24templaterequestprovider#httpOptions.html&quot;&gt; &lt;code&gt;$templateRequestProvider&lt;/code&gt; &lt;/a&gt;进行配置。</target>
        </trans-unit>
        <trans-unit id="55cac270f43d60bf68fc09da3ef0e7d2fc46b878" translate="yes" xml:space="preserve">
          <source>If you want to run more complex JavaScript code, you should make it a controller method and call the method from your view. If you want to &lt;code&gt;eval()&lt;/code&gt; an AngularJS expression yourself, use the &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24eval.html&quot;&gt;&lt;code&gt;$eval()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">如果要运行更复杂的JavaScript代码，则应使其成为控制器方法并从视图中调用该方法。如果您想自己 &lt;code&gt;eval()&lt;/code&gt; 一个AngularJS表达式，请使用&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24eval.html&quot;&gt; &lt;code&gt;$eval()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="94ef57a2b10b7fb543b9ad681272e7260b865493" translate="yes" xml:space="preserve">
          <source>If you wish to be able to navigate to the application via a URL such as &lt;code&gt;/base&lt;/code&gt; then you should ensure that your server is setup to redirect such requests to &lt;code&gt;/base/&lt;/code&gt;.</source>
          <target state="translated">如果希望能够通过 &lt;code&gt;/base&lt;/code&gt; 之类的URL导航至应用程序，则应确保服务器已设置为将此类请求重定向到 &lt;code&gt;/base/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a461bd3d1f4cd564f100034e6f4c026c6547ba8" translate="yes" xml:space="preserve">
          <source>If you wish to debug an application with this information then you should open up a debug console in the browser then call this method directly in this console:</source>
          <target state="translated">如果你想利用这些信息来调试应用程序,那么你应该在浏览器中打开一个调试控制台,然后在这个控制台中直接调用这个方法。</target>
        </trans-unit>
        <trans-unit id="67961efc8f60d457340202b3fece6ab62a772fa8" translate="yes" xml:space="preserve">
          <source>If you wish to exclude these then you can use the native &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite&quot;&gt;`isFinite'&lt;/a&gt; method.</source>
          <target state="translated">如果要排除这些，则可以使用本机的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite&quot;&gt;&amp;ldquo; isFinite&amp;rdquo;&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="febd4482ea90c369092b50e44a77405198b68c7e" translate="yes" xml:space="preserve">
          <source>If you wish to override the request/response transformations only for a single request then provide &lt;code&gt;transformRequest&lt;/code&gt; and/or &lt;code&gt;transformResponse&lt;/code&gt; properties on the configuration object passed into &lt;code&gt;$http&lt;/code&gt;.</source>
          <target state="translated">如果只希望覆盖单个请求的请求/响应转换，则在传递给 &lt;code&gt;$http&lt;/code&gt; 的配置对象上提供 &lt;code&gt;transformRequest&lt;/code&gt; 和/或 &lt;code&gt;transformResponse&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="92efd56723876207dc42707b797385c44e1ed645" translate="yes" xml:space="preserve">
          <source>If you wish, you can manually delegate exceptions, e.g. &lt;code&gt;try { ... } catch(e) { $exceptionHandler(e); }&lt;/code&gt;</source>
          <target state="translated">如果愿意，可以手动委派异常，例如， &lt;code&gt;try { ... } catch(e) { $exceptionHandler(e); }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5dede550c88c109a7aa713ce10867aee17cad1fe" translate="yes" xml:space="preserve">
          <source>If you would like to customise where and how the callbacks are stored then try overriding or decorating the &lt;a href=&quot;%24jsonpcallbacks&quot;&gt;&lt;code&gt;$jsonpCallbacks&lt;/code&gt;&lt;/a&gt; service.</source>
          <target state="translated">如果您想自定义回调的存储位置和方式，请尝试覆盖或装饰&lt;a href=&quot;%24jsonpcallbacks&quot;&gt; &lt;code&gt;$jsonpCallbacks&lt;/code&gt; &lt;/a&gt;服务。</target>
        </trans-unit>
        <trans-unit id="6de6f522958da34b1dcc259678edc0cbe2c6e606" translate="yes" xml:space="preserve">
          <source>If you're using manual bootstrapping, you can also use strict DI by providing &lt;code&gt;strictDi: true&lt;/code&gt; in the optional config argument:</source>
          <target state="translated">如果您使用的是手动引导，则还可以通过在可选的config参数中提供 &lt;code&gt;strictDi: true&lt;/code&gt; 来使用严格的DI ：</target>
        </trans-unit>
        <trans-unit id="27ab337d46310ca730ffb687877a71fd87b9ffd3" translate="yes" xml:space="preserve">
          <source>If your app is currently in the &lt;code&gt;en-US&lt;/code&gt; locale, the browser will show &lt;code&gt;$1000.00&lt;/code&gt;. If someone in the Japanese locale (&lt;code&gt;ja&lt;/code&gt;) views your app, their browser will show a balance of &lt;code&gt;&amp;yen;1000.00&lt;/code&gt; instead. This is problematic because $1000 is not the same as &amp;yen;1000.</source>
          <target state="translated">如果您的应用当前位于 &lt;code&gt;en-US&lt;/code&gt; 语言环境中，则浏览器将显示 &lt;code&gt;$1000.00&lt;/code&gt; 。如果日语区域（ &lt;code&gt;ja&lt;/code&gt; ）中的某人查看您的应用，则其浏览器将显示 &lt;code&gt;&amp;yen;1000.00&lt;/code&gt; 的余额。这是有问题的，因为$ 1000与&amp;yen;1000不同。</target>
        </trans-unit>
        <trans-unit id="1430bac2eebac9bf88d3059ad02454360c8556c7" translate="yes" xml:space="preserve">
          <source>If your directive uses &lt;code&gt;templateUrl&lt;/code&gt;, consider using &lt;a href=&quot;https://github.com/karma-runner/karma-ng-html2js-preprocessor&quot;&gt;karma-ng-html2js-preprocessor&lt;/a&gt; to pre-compile HTML templates and thus avoid having to load them over HTTP during test execution. Otherwise you may run into issues if the test directory hierarchy differs from the application's.</source>
          <target state="translated">如果您的指令使用 &lt;code&gt;templateUrl&lt;/code&gt; ，请考虑使用&lt;a href=&quot;https://github.com/karma-runner/karma-ng-html2js-preprocessor&quot;&gt;karma-ng-html2js-preprocessor&lt;/a&gt;预编译HTML模板，从而避免在测试执行期间通过HTTP加载它们。否则，如果测试目录层次结构与应用程序的层次结构不同，则可能会遇到问题。</target>
        </trans-unit>
        <trans-unit id="93fe649037fb09c8d4e2db87fdce1cee0df7982c" translate="yes" xml:space="preserve">
          <source>If your expressions are constant literals, they're automatically trusted and you don't need to call &lt;code&gt;$sce.trustAs&lt;/code&gt; on them (e.g. &lt;code&gt;&amp;lt;div ng-bind-html=&quot;'&amp;lt;b&amp;gt;implicitly trusted&amp;lt;/b&amp;gt;'&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;) just works (remember to include the &lt;code&gt;ngSanitize&lt;/code&gt; module). The &lt;code&gt;$sceDelegate&lt;/code&gt; will also use the &lt;code&gt;$sanitize&lt;/code&gt; service if it is available when binding untrusted values to &lt;code&gt;$sce.HTML&lt;/code&gt; context. AngularJS provides an implementation in &lt;code&gt;angular-sanitize.js&lt;/code&gt;, and if you wish to use it, you will also need to depend on the &lt;a href=&quot;../../ngsanitize&quot;&gt;&lt;code&gt;ngSanitize&lt;/code&gt;&lt;/a&gt; module in your application.</source>
          <target state="translated">如果您的表达式是常量文字，那么它们将自动被信任，并且您无需在它们上调用 &lt;code&gt;$sce.trustAs&lt;/code&gt; （例如 &lt;code&gt;&amp;lt;div ng-bind-html=&quot;'&amp;lt;b&amp;gt;implicitly trusted&amp;lt;/b&amp;gt;'&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; ）即可正常使用（请记住包括 &lt;code&gt;ngSanitize&lt;/code&gt; 模块）。该 &lt;code&gt;$sceDelegate&lt;/code&gt; 也将使用 &lt;code&gt;$sanitize&lt;/code&gt; 服务，如果它不受信任值结合时可用 &lt;code&gt;$sce.HTML&lt;/code&gt; 上下文。 AngularJS在 &lt;code&gt;angular-sanitize.js&lt;/code&gt; 中提供了一个实现，如果您想使用它，则还需要依赖于应用程序中的&lt;a href=&quot;../../ngsanitize&quot;&gt; &lt;code&gt;ngSanitize&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="ab4db8d966388aab90159f0307d07fcccc35f63f" translate="yes" xml:space="preserve">
          <source>Imagine you want to have a container with tabs in which the contents of the container correspond to which tab is active.</source>
          <target state="translated">想象一下,你想拥有一个带有标签的容器,容器中的内容与哪个标签处于活动状态相对应。</target>
        </trans-unit>
        <trans-unit id="6b84004070116f71855a9922d8e631eb72f699dc" translate="yes" xml:space="preserve">
          <source>Impact on loading templates</source>
          <target state="translated">对加载模板的影响</target>
        </trans-unit>
        <trans-unit id="20b1bba1cb06ab8386a24bd0d8dfecea07cd7671" translate="yes" xml:space="preserve">
          <source>Implementing custom form controls (using ngModel)</source>
          <target state="translated">实现自定义表单控件(使用ngModel)。</target>
        </trans-unit>
        <trans-unit id="bd06cedc31ae5b22c03264197e96ab3c19ffede6" translate="yes" xml:space="preserve">
          <source>Implicit Annotation</source>
          <target state="translated">隐性注解</target>
        </trans-unit>
        <trans-unit id="096ba44a184249033cb9a0bb4ffebe2657bba416" translate="yes" xml:space="preserve">
          <source>Implicit module which gets automatically added to each &lt;a href=&quot;auto/service/%24injector&quot;&gt;$injector&lt;/a&gt;.</source>
          <target state="translated">隐式模块会自动添加到每个&lt;a href=&quot;auto/service/%24injector&quot;&gt;$ injector中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4723ddf746f3809e3b1477e490d52c8337146616" translate="yes" xml:space="preserve">
          <source>Implicitly from the function parameter names (has caveats)</source>
          <target state="translated">隐含在函数参数名中(有注意事项)</target>
        </trans-unit>
        <trans-unit id="8eecc4f94a1b1fe69acddb79e183178a9e26df1a" translate="yes" xml:space="preserve">
          <source>Important things to notice:</source>
          <target state="translated">需要注意的重要事项。</target>
        </trans-unit>
        <trans-unit id="3f98eeaab6110938e71c2879641215dabb0c66ef" translate="yes" xml:space="preserve">
          <source>In AngularJS applications, you move the job of filling page templates with data from the server to the client. The result is a system better structured for dynamic page updates. Below are the core features you'll use.</source>
          <target state="translated">在AngularJS应用中,你把用数据填充页面模板的工作从服务器转移到客户端。其结果是一个结构更好的系统,以实现动态页面更新。以下是你会用到的核心功能。</target>
        </trans-unit>
        <trans-unit id="b597dc43f8f9e0a6d2155495f4e5474be04320ca" translate="yes" xml:space="preserve">
          <source>In AngularJS, a Component is a special kind of &lt;a href=&quot;directive&quot;&gt;directive&lt;/a&gt; that uses a simpler configuration which is suitable for a component-based application structure.</source>
          <target state="translated">在AngularJS中，组件是一种特殊的&lt;a href=&quot;directive&quot;&gt;指令&lt;/a&gt;，它使用更简单的配置，适用于基于组件的应用程序结构。</target>
        </trans-unit>
        <trans-unit id="cbbc814b28ce35865c1e769b822e5f29dc4de827" translate="yes" xml:space="preserve">
          <source>In AngularJS, a Controller is defined by a JavaScript &lt;strong&gt;constructor function&lt;/strong&gt; that is used to augment the &lt;a href=&quot;scope&quot;&gt;AngularJS Scope&lt;/a&gt;.</source>
          <target state="translated">在AngularJS中，控制器是由JavaScript &lt;strong&gt;构造函数&lt;/strong&gt;定义的，该&lt;strong&gt;函数&lt;/strong&gt;用于增强&lt;a href=&quot;scope&quot;&gt;AngularJS Scope&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1a5efbd64f006dff6c25bf138c6b220b436c7355" translate="yes" xml:space="preserve">
          <source>In AngularJS, forms can be nested. This means that the outer form is valid when all of the child forms are valid as well. However, browsers do not allow nesting of &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; elements, so AngularJS provides the &lt;a href=&quot;ngform&quot;&gt;&lt;code&gt;ngForm&lt;/code&gt;&lt;/a&gt; directive, which behaves identically to &lt;code&gt;form&lt;/code&gt; but can be nested. Nested forms can be useful, for example, if the validity of a sub-group of controls needs to be determined.</source>
          <target state="translated">在AngularJS中，表单可以嵌套。这意味着外部形式在所有子形式都有效时也有效。但是，浏览器不允许嵌套 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 元素，因此AngularJS提供了&lt;a href=&quot;ngform&quot;&gt; &lt;code&gt;ngForm&lt;/code&gt; &lt;/a&gt;指令，该指令的行为与 &lt;code&gt;form&lt;/code&gt; 相同，但可以嵌套。嵌套形式可能很有用，例如，如果需要确定控件子组的有效性。</target>
        </trans-unit>
        <trans-unit id="03844de6e8b1d50475106d63d0d10f3d8c611949" translate="yes" xml:space="preserve">
          <source>In AngularJS, templates are written with HTML that contains AngularJS-specific elements and attributes. AngularJS combines the template with information from the model and controller to render the dynamic view that a user sees in the browser.</source>
          <target state="translated">在AngularJS中,模板是用HTML编写的,其中包含AngularJS特有的元素和属性。AngularJS将模板与模型和控制器的信息结合起来,呈现出用户在浏览器中看到的动态视图。</target>
        </trans-unit>
        <trans-unit id="a1f619517bf2bbf5ed7ed5d2dc4a8bbb5b243e43" translate="yes" xml:space="preserve">
          <source>In HTML Template Binding</source>
          <target state="translated">在HTML模板绑定中</target>
        </trans-unit>
        <trans-unit id="2e80ed003402377171ce0924403b8c90164f9832" translate="yes" xml:space="preserve">
          <source>In HTML5 mode, the &lt;code&gt;$location&lt;/code&gt; service getters and setters interact with the browser URL address through the HTML5 history API. This allows for use of regular URL path and search segments, instead of their hashbang equivalents. If the HTML5 History API is not supported by a browser, the &lt;code&gt;$location&lt;/code&gt; service will fall back to using the hashbang URLs automatically. This frees you from having to worry about whether the browser displaying your app supports the history API or not; the &lt;code&gt;$location&lt;/code&gt; service transparently uses the best available option.</source>
          <target state="translated">在HTML5模式下， &lt;code&gt;$location&lt;/code&gt; 服务获取器和设置器通过HTML5历史记录API与浏览器URL地址进行交互。这允许使用常规的URL路径和搜索段，而不是它们的hashbang等效项。如果浏览器不支持HTML5历史记录API，则 &lt;code&gt;$location&lt;/code&gt; 服务将自动转为使用hashbang URL。这使您不必担心显示您的应用的浏览器是否支持历史API。在 &lt;code&gt;$location&lt;/code&gt; 服务透明地使用最好的选择。</target>
        </trans-unit>
        <trans-unit id="c291168b9231a4e5740fc0f7c7f24071d1ef1309" translate="yes" xml:space="preserve">
          <source>In Jasmine we use the &lt;code&gt;describe&lt;/code&gt; function to group our tests together:</source>
          <target state="translated">在Jasmine中，我们使用 &lt;code&gt;describe&lt;/code&gt; 函数将测试分组在一起：</target>
        </trans-unit>
        <trans-unit id="a823b45ca87464c258e471b13899cdf061f7a1d1" translate="yes" xml:space="preserve">
          <source>In JavaScript</source>
          <target state="translated">在JavaScript中</target>
        </trans-unit>
        <trans-unit id="bbd50f6eadbfc76eda0b9ce7716de2fb5a24fcf4" translate="yes" xml:space="preserve">
          <source>In JavaScript calling &lt;code&gt;toString()&lt;/code&gt; on a function returns the function definition. The definition can then be parsed and the function arguments can be extracted. This method of discovering annotations is disallowed when the injector is in strict mode. &lt;em&gt;NOTE:&lt;/em&gt; This does not work with minification, and obfuscation tools since these tools change the argument names.</source>
          <target state="translated">在JavaScript中，在函数上调用 &lt;code&gt;toString()&lt;/code&gt; 会返回函数定义。然后可以解析该定义，并可以提取函数参数。当注入器处于严格模式时，不允许使用这种发现注释的方法。&lt;em&gt;注意：&lt;/em&gt;这不适用于缩小和混淆工具，因为这些工具会更改参数名称。</target>
        </trans-unit>
        <trans-unit id="1b54f06dab3f6e1ac9b946e1f4b43d7b0403e35c" translate="yes" xml:space="preserve">
          <source>In a legacy browser, the URL changes to &lt;code&gt;/index.html#!/some?foo=bar&lt;/code&gt;</source>
          <target state="translated">在旧版浏览器中，URL更改为 &lt;code&gt;/index.html#!/some?foo=bar&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c5b58dd4eafa0d4a18da8ca18883a8ad953b136" translate="yes" xml:space="preserve">
          <source>In a modern browser, the URL changes to &lt;code&gt;/some?foo=bar&lt;/code&gt;</source>
          <target state="translated">在现代浏览器中，URL更改为 &lt;code&gt;/some?foo=bar&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3a7a9d6c6de28fb043fa931b25966d7356a56f7" translate="yes" xml:space="preserve">
          <source>In a more complex app, you can display multiple views within one main page using &quot;partials&quot; &amp;ndash; segments of template located in separate HTML files. You can use the &lt;a href=&quot;../api/ngroute/directive/ngview&quot;&gt;ngView&lt;/a&gt; directive to load partials based on configuration passed to the &lt;a href=&quot;../api/ngroute/service/%24route&quot;&gt;$route&lt;/a&gt; service. The &lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/guide/tutorial/&quot;&gt;AngularJS tutorial&lt;/a&gt; shows this technique in steps seven and eight.</source>
          <target state="translated">在更复杂的应用程序中，您可以使用&amp;ldquo;部分&amp;rdquo;（位于单独HTML文件中的模板段）在一个主页上显示多个视图。您可以使用&lt;a href=&quot;../api/ngroute/directive/ngview&quot;&gt;ngView&lt;/a&gt;指令根据传递给&lt;a href=&quot;../api/ngroute/service/%24route&quot;&gt;$ route&lt;/a&gt;服务的配置加载部分。该&lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/guide/tutorial/&quot;&gt;AngularJS教程&lt;/a&gt;显示步骤七，八这项技术。</target>
        </trans-unit>
        <trans-unit id="0c0c40a1378e0d2f42f6d4f7be33566e03db6b53" translate="yes" xml:space="preserve">
          <source>In a simple app, the template consists of HTML, CSS, and AngularJS directives contained in just one HTML file (usually &lt;code&gt;index.html&lt;/code&gt;).</source>
          <target state="translated">在一个简单的应用程序中，模板由仅包含在一个HTML文件（通常为 &lt;code&gt;index.html&lt;/code&gt; ）中的HTML，CSS和AngularJS指令组成。</target>
        </trans-unit>
        <trans-unit id="e674faa938f37f1939ece405364297bb3d2958a2" translate="yes" xml:space="preserve">
          <source>In a single module the order of execution is as follows:</source>
          <target state="translated">在单个模块中,执行顺序如下。</target>
        </trans-unit>
        <trans-unit id="749307d1cbfaf16fe4aabba520b82ae1902a1b6a" translate="yes" xml:space="preserve">
          <source>In addition the addition and removal of the CSS class, ngAnimate also provides two helper methods that we can use to further decorate the animation with CSS styles.</source>
          <target state="translated">除了CSS类的添加和删除,ngAnimate还提供了两个辅助方法,我们可以用CSS样式来进一步装饰动画。</target>
        </trans-unit>
        <trans-unit id="6321ce8bd6ac1756913a159906eecc022bf64796" translate="yes" xml:space="preserve">
          <source>In addition to all the regular &lt;code&gt;Scope&lt;/code&gt; methods, the following helper methods are available:</source>
          <target state="translated">除了所有常规的 &lt;code&gt;Scope&lt;/code&gt; 方法之外，还可以使用以下辅助方法：</target>
        </trans-unit>
        <trans-unit id="b766677551b49d250621b2a334d198d39eec2e53" translate="yes" xml:space="preserve">
          <source>In addition to prioritization, ngMessages also allows for including messages from a remote or an inline template. This allows for generic collection of messages to be reused across multiple parts of an application.</source>
          <target state="translated">除了优先级之外,ngMessages还允许包括来自远程或内联模板的消息。这使得通用的消息集合可以在应用程序的多个部分重复使用。</target>
        </trans-unit>
        <trans-unit id="716143d7f33a871721bcf40bfd2db07a6cdb72d7" translate="yes" xml:space="preserve">
          <source>In addition to the above elements, tests may also contain helper functions to avoid duplicating code in the &lt;code&gt;it&lt;/code&gt; blocks.</source>
          <target state="translated">除上述元素外，测试还可能包含辅助函数，以避免在 &lt;code&gt;it&lt;/code&gt; 块中重复代码。</target>
        </trans-unit>
        <trans-unit id="470ea7a4e5c2fe6de7091aa6f7ec21ee51897509" translate="yes" xml:space="preserve">
          <source>In addition to the animation promise, we can also make use of animation-related callbacks within our directives and controller code by registering an event listener using the &lt;code&gt;$animate&lt;/code&gt; service. Let's say for example that an animation was triggered on our view routing controller to hook into that:</source>
          <target state="translated">除了动画承诺外，我们还可以通过使用 &lt;code&gt;$animate&lt;/code&gt; 服务注册事件侦听器，在指令和控制器代码中利用与动画相关的回调。例如，假设在我们的视图路由控制器上触发了一个动画，以使其与该动画挂钩：</target>
        </trans-unit>
        <trans-unit id="1699cbe96c0e4716d740c691996232ad4e5fe565" translate="yes" xml:space="preserve">
          <source>In addition, the browser's &lt;a href=&quot;https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest&quot;&gt;Same Origin Policy&lt;/a&gt; and &lt;a href=&quot;http://www.w3.org/TR/cors/&quot;&gt;Cross-Origin Resource Sharing (CORS)&lt;/a&gt; policy may further restrict whether the template is successfully loaded. For example, &lt;code&gt;ngInclude&lt;/code&gt; won't work for cross-domain requests on all browsers and for &lt;code&gt;file://&lt;/code&gt; access on some browsers.</source>
          <target state="translated">此外，浏览器的&amp;ldquo; &lt;a href=&quot;https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest&quot;&gt;相同来源策略&amp;rdquo;&lt;/a&gt;和&amp;ldquo; &lt;a href=&quot;http://www.w3.org/TR/cors/&quot;&gt;跨域资源共享（CORS）&amp;rdquo;&lt;/a&gt;策略可能会进一步限制模板是否成功加载。例如， &lt;code&gt;ngInclude&lt;/code&gt; 不适用于所有浏览器上的跨域请求和某些浏览器上的 &lt;code&gt;file://&lt;/code&gt; 访问。</target>
        </trans-unit>
        <trans-unit id="a57b0290a74b9eb78ccc15559fe648219b660cfc" translate="yes" xml:space="preserve">
          <source>In addition, you can supply a &lt;code&gt;headers&lt;/code&gt; property in the config object passed when calling &lt;code&gt;$http(config)&lt;/code&gt;, which overrides the defaults without changing them globally.</source>
          <target state="translated">另外，您可以在调用 &lt;code&gt;$http(config)&lt;/code&gt; 时传递的config对象中提供 &lt;code&gt;headers&lt;/code&gt; 属性，该属性将覆盖默认值而不全局更改它们。</target>
        </trans-unit>
        <trans-unit id="589af7f1aae2e3ad6aab5df9c86b6c8e31638595" translate="yes" xml:space="preserve">
          <source>In all of these examples we are going to assume this module definition:</source>
          <target state="translated">在所有这些例子中,我们都将假设这个模块定义。</target>
        </trans-unit>
        <trans-unit id="2ba4bd29bc7d7975c3e58c60de7ab29abd9339c6" translate="yes" xml:space="preserve">
          <source>In an effort to keep synchronized with router changes in the new Angular, this implementation of the Component Router (ngComponentRouter module) has been deprecated and will not receive further updates. We are investigating backporting the Router for the new Angular to AngularJS, but alternatively, use the &lt;a href=&quot;../../ngroute&quot;&gt;&lt;code&gt;ngRoute&lt;/code&gt;&lt;/a&gt; module or community developed projects (e.g. &lt;a href=&quot;https://github.com/angular-ui/ui-router&quot;&gt;ui-router&lt;/a&gt;).</source>
          <target state="translated">为了与新Angular中的路由器更改保持同步，组件路由器（ngComponentRouter模块）的此实现已被弃用，并且将不接收进一步的更新。我们正在研究将新的Angular的路由器&lt;a href=&quot;../../ngroute&quot;&gt; &lt;code&gt;ngRoute&lt;/code&gt; &lt;/a&gt;移植到AngularJS，但也可以使用ngRoute模块或社区开发的项目（例如&lt;a href=&quot;https://github.com/angular-ui/ui-router&quot;&gt;ui-router&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="667b1ad2855f853d06e0711549d307d56aa4fdca" translate="yes" xml:space="preserve">
          <source>In an effort to keep synchronized with router changes in the new Angular, this implementation of the Component Router (ngComponentRouter module) has been deprecated and will not receive further updates. We are investigating backporting the Router for the new Angular to AngularJS, but alternatively, use the &lt;a href=&quot;ngroute&quot;&gt;&lt;code&gt;ngRoute&lt;/code&gt;&lt;/a&gt; module or community developed projects (e.g. &lt;a href=&quot;https://github.com/angular-ui/ui-router&quot;&gt;ui-router&lt;/a&gt;).</source>
          <target state="translated">为了与新Angular中的路由器更改保持同步，组件路由器（ngComponentRouter模块）的此实现已被弃用，并且将不接收进一步的更新。我们正在研究将新的Angular的路由器&lt;a href=&quot;ngroute&quot;&gt; &lt;code&gt;ngRoute&lt;/code&gt; &lt;/a&gt;移植到AngularJS，但也可以使用ngRoute模块或社区开发的项目（例如&lt;a href=&quot;https://github.com/angular-ui/ui-router&quot;&gt;ui-router&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9386991172b647254fafb7d351016e610e121394" translate="yes" xml:space="preserve">
          <source>In any case, the value passed to the method should always reflect the current value of the control. For example, if you are calling &lt;code&gt;$setViewValue&lt;/code&gt; for an input element, you should pass the input DOM value. Otherwise, the control and the scope model become out of sync. It's also important to note that &lt;code&gt;$setViewValue&lt;/code&gt; does not call &lt;code&gt;$render&lt;/code&gt; or change the control's DOM value in any way. If we want to change the control's DOM value programmatically, we should update the &lt;code&gt;ngModel&lt;/code&gt; scope expression. Its new value will be picked up by the model controller, which will run it through the &lt;code&gt;$formatters&lt;/code&gt;, &lt;code&gt;$render&lt;/code&gt; it to update the DOM, and finally call &lt;code&gt;$validate&lt;/code&gt; on it.</source>
          <target state="translated">无论如何，传递给方法的值应始终反映控件的当前值。例如，如果要为输入元素调用 &lt;code&gt;$setViewValue&lt;/code&gt; ，则应传递输入DOM值。否则，控件和范围模型将不同步。还必须注意， &lt;code&gt;$setViewValue&lt;/code&gt; 不会以任何方式调用 &lt;code&gt;$render&lt;/code&gt; 或更改控件的DOM值。如果要以编程方式更改控件的DOM值，则应更新 &lt;code&gt;ngModel&lt;/code&gt; 范围表达式。其新的价值将通过模型控制器，它会运行它通过拾起 &lt;code&gt;$formatters&lt;/code&gt; ， &lt;code&gt;$render&lt;/code&gt; 它更新DOM，最后调用 &lt;code&gt;$validate&lt;/code&gt; 就可以了。</target>
        </trans-unit>
        <trans-unit id="68fe7d927164f0e298a884af50c62aebe47691da" translate="yes" xml:space="preserve">
          <source>In both examples, the &lt;strong&gt;&lt;code&gt;track by&lt;/code&gt;&lt;/strong&gt; expression is applied successfully to each &lt;code&gt;item&lt;/code&gt; in the &lt;code&gt;items&lt;/code&gt; array. Because the selected option has been set programmatically in the controller, the &lt;strong&gt;&lt;code&gt;track by&lt;/code&gt;&lt;/strong&gt; expression is also applied to the &lt;code&gt;ngModel&lt;/code&gt; value. In the first example, the &lt;code&gt;ngModel&lt;/code&gt; value is &lt;code&gt;items[0]&lt;/code&gt; and the &lt;strong&gt;&lt;code&gt;track by&lt;/code&gt;&lt;/strong&gt; expression evaluates to &lt;code&gt;items[0].id&lt;/code&gt; with no issue. In the second example, the &lt;code&gt;ngModel&lt;/code&gt; value is &lt;code&gt;items[0].subItem&lt;/code&gt; and the &lt;strong&gt;&lt;code&gt;track by&lt;/code&gt;&lt;/strong&gt; expression evaluates to &lt;code&gt;items[0].subItem.id&lt;/code&gt; (which is undefined). As a result, the model value is not matched against any &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; and the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; appears as having no selected value.</source>
          <target state="translated">在两个示例中，&lt;strong&gt; &lt;code&gt;track by&lt;/code&gt; &lt;/strong&gt;表达式&lt;strong&gt;跟踪&lt;/strong&gt;都已成功应用于 &lt;code&gt;items&lt;/code&gt; 数组中的每个 &lt;code&gt;item&lt;/code&gt; 。由于已在控制器中以编程方式设置了选定的选项，因此&lt;strong&gt; &lt;code&gt;track by&lt;/code&gt; &lt;/strong&gt;表达式&lt;strong&gt;跟踪&lt;/strong&gt;也将应用于 &lt;code&gt;ngModel&lt;/code&gt; 值。在第一个示例中， &lt;code&gt;ngModel&lt;/code&gt; 的值是 &lt;code&gt;items[0]&lt;/code&gt; 并且&lt;strong&gt; &lt;code&gt;track by&lt;/code&gt; &lt;/strong&gt;表达式&lt;strong&gt;跟踪的结果&lt;/strong&gt;为 &lt;code&gt;items[0].id&lt;/code&gt; ，没有问题。在第二个示例中， &lt;code&gt;ngModel&lt;/code&gt; 的值为 &lt;code&gt;items[0].subItem&lt;/code&gt; ，表达式的&lt;strong&gt; &lt;code&gt;track by&lt;/code&gt; &lt;/strong&gt;为 &lt;code&gt;items[0].subItem.id&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;（未定义）。结果，模型值与任何 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 不匹配，并且 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 似乎没有选定值。</target>
        </trans-unit>
        <trans-unit id="e3e1a3ce31bec47d5200ef4cf60ace5abb3ccfe7" translate="yes" xml:space="preserve">
          <source>In case of parameter name collision, &lt;code&gt;path&lt;/code&gt; params take precedence over &lt;code&gt;search&lt;/code&gt; params.</source>
          <target state="translated">在参数名称冲突的情况下， &lt;code&gt;path&lt;/code&gt; 参数优先于 &lt;code&gt;search&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="c26867c8ed3c13342fd31b32bf994a5c01045f08" translate="yes" xml:space="preserve">
          <source>In case the &lt;a href=&quot;../directive/ngmodeloptions&quot;&gt;ngModelOptions&lt;/a&gt; directive is used with &lt;code&gt;updateOn&lt;/code&gt; and the &lt;code&gt;default&lt;/code&gt; trigger is not listed, all those actions will remain pending until one of the &lt;code&gt;updateOn&lt;/code&gt; events is triggered on the DOM element. All these actions will be debounced if the &lt;a href=&quot;../directive/ngmodeloptions&quot;&gt;ngModelOptions&lt;/a&gt; directive is used with a custom debounce for this particular event. Note that a &lt;code&gt;$digest&lt;/code&gt; is only triggered once the &lt;code&gt;updateOn&lt;/code&gt; events are fired, or if &lt;code&gt;debounce&lt;/code&gt; is specified, once the timer runs out.</source>
          <target state="translated">如果&lt;a href=&quot;../directive/ngmodeloptions&quot;&gt;ngModelOptions&lt;/a&gt;指令与 &lt;code&gt;updateOn&lt;/code&gt; 一起使用并且未列出 &lt;code&gt;default&lt;/code&gt; 触发器，则所有这些动作将保持待处理状态，直到在DOM元素上触发了 &lt;code&gt;updateOn&lt;/code&gt; 事件之一。如果将&lt;a href=&quot;../directive/ngmodeloptions&quot;&gt;ngModelOptions&lt;/a&gt;指令与针对此特定事件的自定义防抖一起使用，则所有这些操作都将被防抖动。请注意，只有在触发 &lt;code&gt;updateOn&lt;/code&gt; 事件时，或者如果指定了 &lt;code&gt;debounce&lt;/code&gt; ，一旦计时器用尽，才会触发 &lt;code&gt;$digest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dbb2128824b196014baa5c500781714a968857a4" translate="yes" xml:space="preserve">
          <source>In cases like the following, links are not rewritten; instead, the browser will perform a full page reload to the original link.</source>
          <target state="translated">在以下情况下,链接不会被重写;相反,浏览器会执行全页面重载到原始链接。</target>
        </trans-unit>
        <trans-unit id="eb1595edfe03ceecabe189afd4c1478336da4f55" translate="yes" xml:space="preserve">
          <source>In cases where both backend definitions and request expectations are specified during unit testing, the request expectations are evaluated first.</source>
          <target state="translated">在单元测试中同时指定后端定义和请求期望的情况下,首先评估请求期望。</target>
        </trans-unit>
        <trans-unit id="bf55b6216c29164cc9616d092551ba62d75a0676" translate="yes" xml:space="preserve">
          <source>In complex applications it's possible that dependencies between &lt;code&gt;$onChanges&lt;/code&gt; hooks and bindings will result in several iterations of calls to these hooks. However if an application needs more than the default 10 iterations to stabilize then you should investigate what is causing the model to continuously change during the &lt;code&gt;$onChanges&lt;/code&gt; hook execution.</source>
          <target state="translated">在复杂的应用程序中， &lt;code&gt;$onChanges&lt;/code&gt; 挂钩和绑定之间的依赖关系可能会导致对这些挂钩的多次调用迭代。但是，如果应用程序需要稳定多个默认值之外的10次迭代，则应调查在 &lt;code&gt;$onChanges&lt;/code&gt; 挂钩执行期间导致模型不断更改的原因。</target>
        </trans-unit>
        <trans-unit id="572607a7218cef33ac940e82902038d02ae937e5" translate="yes" xml:space="preserve">
          <source>In complex applications it's possible that the dependencies between &lt;code&gt;$watch&lt;/code&gt;s will result in several digest iterations. However if an application needs more than the default 10 digest iterations for its model to stabilize then you should investigate what is causing the model to continuously change during the digest.</source>
          <target state="translated">在复杂的应用程序中， &lt;code&gt;$watch&lt;/code&gt; 之间的依赖关系可能会导致多次摘要迭代。但是，如果应用程序需要超过默认的10个摘要迭代来使其模型稳定，那么您应该研究是什么原因导致模型在摘要期间不断变化。</target>
        </trans-unit>
        <trans-unit id="a6327a6402c02d7879a52df32482acae297464b3" translate="yes" xml:space="preserve">
          <source>In general it's possible to apply more than one directive to one element, but there might be limitations depending on the type of scope required by the directives. The following points will help explain these limitations. For simplicity only two directives are taken into account, but it is also applicable for several directives:</source>
          <target state="translated">一般来说,一个元素可以应用一个以上的指令,但根据指令所要求的范围类型,可能会有一些限制。以下几点将有助于解释这些限制。为了简单起见,只考虑了两个指令,但它也适用于多个指令。</target>
        </trans-unit>
        <trans-unit id="d65eb267b1b0354141999d7194c0a15d48c760f2" translate="yes" xml:space="preserve">
          <source>In general, a Controller shouldn't try to do too much. It should contain only the business logic needed for a single view.</source>
          <target state="translated">一般来说,Controller不应该尝试做太多的事情。它应该只包含单个视图所需的业务逻辑。</target>
        </trans-unit>
        <trans-unit id="12b68495b61d68a58ae4306b8d4fa6a9c7a5a8c9" translate="yes" xml:space="preserve">
          <source>In general, the match between the model and an option is evaluated by strictly comparing the model value against the value of the available options.</source>
          <target state="translated">一般来说,模型和期权之间的匹配度是通过严格比较模型的价值和可用期权的价值来评估的。</target>
        </trans-unit>
        <trans-unit id="c9ab8714b380fd88731ce6a010864a6dad2a5821" translate="yes" xml:space="preserve">
          <source>In general, this applies only to filters that take &lt;a href=&quot;https://developer.mozilla.org/docs/Glossary/Primitive&quot;&gt;primitive values&lt;/a&gt; as inputs. Filters that receive &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Objects&quot;&gt;Objects&lt;/a&gt; as input are executed on each &lt;code&gt;$digest&lt;/code&gt;, as it would be too costly to track if the inputs have changed.</source>
          <target state="translated">通常，这仅适用于将&lt;a href=&quot;https://developer.mozilla.org/docs/Glossary/Primitive&quot;&gt;原始值&lt;/a&gt;作为输入的过滤器。接收&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Objects&quot;&gt;对象&lt;/a&gt;作为输入的过滤器在每个 &lt;code&gt;$digest&lt;/code&gt; 上执行，因为跟踪输入是否已更改成本太高。</target>
        </trans-unit>
        <trans-unit id="223c150544e590c3b09b2f83432104d5c677b5fc" translate="yes" xml:space="preserve">
          <source>In its current implementation, we'd need to create a different controller each time in order to re-use such a directive:</source>
          <target state="translated">在目前的实现中,我们每次都需要创建一个不同的控制器,以便重复使用这样的指令。</target>
        </trans-unit>
        <trans-unit id="aaf87ac010abced2fa8d3d211eaa4cf5c460607b" translate="yes" xml:space="preserve">
          <source>In its default setup, ngAria for &lt;code&gt;ngShow&lt;/code&gt; is actually redundant. It toggles &lt;code&gt;aria-hidden&lt;/code&gt; on the directive when it is hidden or shown. However, the default CSS of &lt;code&gt;display: none !important&lt;/code&gt;, already hides child elements from a screen reader. It becomes more useful when the default CSS is overridden with properties that don&amp;rsquo;t affect assistive technologies, such as &lt;code&gt;opacity&lt;/code&gt; or &lt;code&gt;transform&lt;/code&gt;. By toggling &lt;code&gt;aria-hidden&lt;/code&gt; dynamically with ngAria, we can ensure content visually hidden with this technique will not be read aloud in a screen reader.</source>
          <target state="translated">在其默认设置中，ngShow的 &lt;code&gt;ngShow&lt;/code&gt; 实际上是多余的。它切换 &lt;code&gt;aria-hidden&lt;/code&gt; 的指令，当它被隐藏或显示。但是， &lt;code&gt;display: none !important&lt;/code&gt; 的默认CSS ：none！important，已经从屏幕阅读器中隐藏了子元素。当默认CSS被不影响辅助技术的属性（例如 &lt;code&gt;opacity&lt;/code&gt; 或 &lt;code&gt;transform&lt;/code&gt; ）覆盖时，它将变得更加有用。通过使用ngAria动态切换 &lt;code&gt;aria-hidden&lt;/code&gt; aria，我们可以确保使用此技术在视觉上隐藏的内容不会在屏幕阅读器中大声朗读。</target>
        </trans-unit>
        <trans-unit id="9ac48986b940877fd638b3f87daf87350f3cd59a" translate="yes" xml:space="preserve">
          <source>In many cases, &lt;a href=&quot;ngrepeat&quot;&gt;ngRepeat&lt;/a&gt; can be used on &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; elements instead of &lt;code&gt;ngOptions&lt;/code&gt; to achieve a similar result. However, &lt;code&gt;ngOptions&lt;/code&gt; provides some benefits:</source>
          <target state="translated">在许多情况下，&lt;a href=&quot;ngrepeat&quot;&gt;ngRepeat&lt;/a&gt;可以被用来 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 元素，而不是 &lt;code&gt;ngOptions&lt;/code&gt; 以实现类似的结果。但是， &lt;code&gt;ngOptions&lt;/code&gt; 提供了一些好处：</target>
        </trans-unit>
        <trans-unit id="816f5a467069e8684ca6c8eac56b04421f4f9aac" translate="yes" xml:space="preserve">
          <source>In many cases, &lt;code&gt;ngRepeat&lt;/code&gt; can be used on &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; elements instead of &lt;a href=&quot;ngoptions&quot;&gt;ngOptions&lt;/a&gt; to achieve a similar result. However, &lt;code&gt;ngOptions&lt;/code&gt; provides some benefits:</source>
          <target state="translated">在许多情况下， &lt;code&gt;ngRepeat&lt;/code&gt; 可以被用来 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 元素，而不是&lt;a href=&quot;ngoptions&quot;&gt;ngOptions&lt;/a&gt;以实现类似的结果。但是， &lt;code&gt;ngOptions&lt;/code&gt; 提供了一些好处：</target>
        </trans-unit>
        <trans-unit id="23a74c3d278c8929951ba5893b635995005f8e65" translate="yes" xml:space="preserve">
          <source>In most cases, &lt;a href=&quot;../api/ng/provider/%24compileprovider#directive.html&quot;&gt;directives&lt;/a&gt; and scopes interact but do not create new instances of scope. However, some directives, such as &lt;a href=&quot;../api/ng/directive/ngcontroller&quot;&gt;ng-controller&lt;/a&gt; and &lt;a href=&quot;../api/ng/directive/ngrepeat&quot;&gt;ng-repeat&lt;/a&gt;, create new child scopes and attach the child scope to the corresponding DOM element.</source>
          <target state="translated">在大多数情况下，&lt;a href=&quot;../api/ng/provider/%24compileprovider#directive.html&quot;&gt;指令&lt;/a&gt;和作用域会相互作用，但不会创建新的作用域实例。但是，某些指令（例如&lt;a href=&quot;../api/ng/directive/ngcontroller&quot;&gt;ng-controller&lt;/a&gt;和&lt;a href=&quot;../api/ng/directive/ngrepeat&quot;&gt;ng-repeat&lt;/a&gt;）会创建新的子作用域，并将该子作用域附加到相应的DOM元素。</target>
        </trans-unit>
        <trans-unit id="a6d61eeade717370e6792f08603d2f769bf7909b" translate="yes" xml:space="preserve">
          <source>In order for &lt;code&gt;yOffset&lt;/code&gt; to work properly, scrolling should take place on the document's root and not some child element.</source>
          <target state="translated">为了使 &lt;code&gt;yOffset&lt;/code&gt; 正常工作，滚动应该在文档的根目录而不是某些子元素上进行。</target>
        </trans-unit>
        <trans-unit id="43159b000f095713d7995347d0aa0418f3baf129" translate="yes" xml:space="preserve">
          <source>In order for custom control to work with &lt;code&gt;ngModel&lt;/code&gt; and to achieve two-way data-binding it needs to:</source>
          <target state="translated">为了使自定义控件能够与 &lt;code&gt;ngModel&lt;/code&gt; 一起使用并实现双向数据绑定，它需要：</target>
        </trans-unit>
        <trans-unit id="93e76425878be6a245b2b5122baa300334e1d96a" translate="yes" xml:space="preserve">
          <source>In order for the injector to know how to create and wire together all of these objects, it needs a registry of &quot;recipes&quot;. Each recipe has an identifier of the object and the description of how to create this object.</source>
          <target state="translated">为了让注入器知道如何创建和连接所有这些对象,它需要一个 &quot;配方 &quot;的注册表。每个配方都有一个对象的标识符和如何创建这个对象的描述。</target>
        </trans-unit>
        <trans-unit id="41ca1c0cfc3250833efe87b946e6688542d335f0" translate="yes" xml:space="preserve">
          <source>In order to answer such a question it is very important that we can isolate the unit of code under test. That is because when we are testing the sort function we don't want to be forced into creating related pieces such as the DOM elements, or making any XHR calls to fetch the data to sort.</source>
          <target state="translated">为了回答这样的问题,非常重要的一点是,我们可以隔离被测试的代码单元。这是因为当我们测试排序功能时,我们不希望被迫创建相关的片段,如DOM元素,或进行任何XHR调用来获取数据进行排序。</target>
        </trans-unit>
        <trans-unit id="83939e2bc9f9e5b599175fbfb5fec4456c3a2747" translate="yes" xml:space="preserve">
          <source>In order to enable animations the &lt;code&gt;ngAnimate&lt;/code&gt; module has to be loaded.</source>
          <target state="translated">为了启用动画，必须加载 &lt;code&gt;ngAnimate&lt;/code&gt; 模块。</target>
        </trans-unit>
        <trans-unit id="d6563365aaa2bf57b65af1a6e2ab56f748edc001" translate="yes" xml:space="preserve">
          <source>In order to ensure that the sorting will be deterministic across platforms, if none of the specified predicates can distinguish between two items, &lt;code&gt;orderBy&lt;/code&gt; will automatically introduce a dummy predicate that returns the item's index as &lt;code&gt;value&lt;/code&gt;. (If you are using a custom comparator, make sure it can handle this predicate as well.)</source>
          <target state="translated">为了确保排序在所有平台上都是确定性的，如果指定谓词中没有一个可以区分两个项目， &lt;code&gt;orderBy&lt;/code&gt; 将自动引入一个虚拟谓词，该谓词将项目的索引作为 &lt;code&gt;value&lt;/code&gt; 返回。（如果使用的是自定义比较器，请确保它也可以处理此谓词。）</target>
        </trans-unit>
        <trans-unit id="ba07d896b98bd38aa92e1a51979d43b5762c90ac" translate="yes" xml:space="preserve">
          <source>In order to make the definition easier, components enforce best practices like use of &lt;code&gt;controllerAs&lt;/code&gt;, &lt;code&gt;bindToController&lt;/code&gt;. They always have &lt;strong&gt;isolate scope&lt;/strong&gt; and are restricted to elements.</source>
          <target state="translated">为了使定义更容易，组件强制执行最佳实践，例如使用 &lt;code&gt;controllerAs&lt;/code&gt; ， &lt;code&gt;bindToController&lt;/code&gt; 。它们始终具有&lt;strong&gt;隔离范围&lt;/strong&gt;，并且仅限于元素。</target>
        </trans-unit>
        <trans-unit id="92f3760b5ddb703592c1c344abf1808f65b67a46" translate="yes" xml:space="preserve">
          <source>In order to prevent collisions in environments where multiple AngularJS apps share the same domain or subdomain, we recommend that each application uses a unique cookie name.</source>
          <target state="translated">为了防止在多个AngularJS应用共享同一域名或子域名的环境中发生碰撞,我们建议每个应用使用唯一的cookie名称。</target>
        </trans-unit>
        <trans-unit id="c431fcb3d2dd29f9f6877e5863d11e1c5282ac1f" translate="yes" xml:space="preserve">
          <source>In order to react to events or execute computation in the view we must provide behavior to the scope. We add behavior to the scope by attaching methods to the &lt;code&gt;$scope&lt;/code&gt; object. These methods are then available to be called from the template/view.</source>
          <target state="translated">为了对事件做出反应或在视图中执行计算，我们必须向范围提供行为。通过将方法附加到 &lt;code&gt;$scope&lt;/code&gt; 对象，我们将行为添加到范围。然后可以从模板/视图中调用这些方法。</target>
        </trans-unit>
        <trans-unit id="64d69397877d61d2ffddceb4be6f794cc00dd86f" translate="yes" xml:space="preserve">
          <source>In order to show error messages corresponding to &lt;code&gt;myField&lt;/code&gt; we first create an element with an &lt;code&gt;ngMessages&lt;/code&gt; attribute set to the &lt;code&gt;$error&lt;/code&gt; object owned by the &lt;code&gt;myField&lt;/code&gt; input in our &lt;code&gt;myForm&lt;/code&gt; form.</source>
          <target state="translated">为了显示与 &lt;code&gt;myField&lt;/code&gt; 对应的错误消息，我们首先创建一个元素，其 &lt;code&gt;ngMessages&lt;/code&gt; 属性设置为 &lt;code&gt;myForm&lt;/code&gt; 表单中 &lt;code&gt;myField&lt;/code&gt; 输入所拥有的 &lt;code&gt;$error&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="38ca262d53b30c1c185b66f2480b52ad395cd555" translate="yes" xml:space="preserve">
          <source>In order to:</source>
          <target state="translated">为了:</target>
        </trans-unit>
        <trans-unit id="cee56acce42439af4e48556eac71fd143eec3563" translate="yes" xml:space="preserve">
          <source>In our &lt;code&gt;link&lt;/code&gt; function, we want to update the displayed time once a second, or whenever a user changes the time formatting string that our directive binds to. We will use the &lt;code&gt;$interval&lt;/code&gt; service to call a handler on a regular basis. This is easier than using &lt;code&gt;$timeout&lt;/code&gt; but also works better with end-to-end testing, where we want to ensure that all &lt;code&gt;$timeout&lt;/code&gt;s have completed before completing the test. We also want to remove the &lt;code&gt;$interval&lt;/code&gt; if the directive is deleted so we don't introduce a memory leak.</source>
          <target state="translated">在我们的 &lt;code&gt;link&lt;/code&gt; 函数中，我们想每秒更新一次显示时间，或者每当用户更改指令绑定到的时间格式字符串时更新一次。我们将使用 &lt;code&gt;$interval&lt;/code&gt; 服务定期调用处理程序。这比使用 &lt;code&gt;$timeout&lt;/code&gt; 更容易，但在端到端测试中效果更好，因为我们要确保所有 &lt;code&gt;$timeout&lt;/code&gt; 在完成测试之前都已完成。如果指令被删除，我们也想删除 &lt;code&gt;$interval&lt;/code&gt; ，这样就不会引起内存泄漏。</target>
        </trans-unit>
        <trans-unit id="46cfb3934a0deeee576ac8393203dd312b39eb1f" translate="yes" xml:space="preserve">
          <source>In practice</source>
          <target state="translated">在实践中</target>
        </trans-unit>
        <trans-unit id="23f474e3365b6841390e2d04f8b7b183101fc5b0" translate="yes" xml:space="preserve">
          <source>In practice, flickering can appear when nesting elements with structural animations such as &lt;code&gt;ngIf&lt;/code&gt; into elements that have class-based animations such as &lt;code&gt;ngClass&lt;/code&gt;.</source>
          <target state="translated">在实践中，闪烁可以嵌套具有结构动画如元素时出现 &lt;code&gt;ngIf&lt;/code&gt; 成具有基于类的动画，如元件 &lt;code&gt;ngClass&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b6b3f1479d15949f893579bddd17a5c4695b028" translate="yes" xml:space="preserve">
          <source>In privileged contexts, directives and code will bind to the result of &lt;a href=&quot;%24sce#getTrusted.html&quot;&gt;$sce.getTrusted(context, value)&lt;/a&gt; rather than to the value directly. Think of this function as a way to enforce the required security context in your data sink. Directives use &lt;a href=&quot;%24sce#parseAs.html&quot;&gt;$sce.parseAs&lt;/a&gt; rather than &lt;code&gt;$parse&lt;/code&gt; to watch attribute bindings, which performs the &lt;a href=&quot;%24sce#getTrusted.html&quot;&gt;$sce.getTrusted&lt;/a&gt; behind the scenes on non-constant literals. Also, when binding without directives, AngularJS will understand the context of your bindings automatically.</source>
          <target state="translated">在特权上下文中，指令和代码将绑定到&lt;a href=&quot;%24sce#getTrusted.html&quot;&gt;$ sce.getTrusted（context，value）&lt;/a&gt;的结果，而不是直接绑定到该值。可以将此功能视为在数据接收器中强制执行所需安全上下文的一种方式。指令使用&lt;a href=&quot;%24sce#parseAs.html&quot;&gt;$ sce.parseAs&lt;/a&gt;而不是 &lt;code&gt;$parse&lt;/code&gt; 来监视属性绑定，该属性绑定在非常量文字量背后执行&lt;a href=&quot;%24sce#getTrusted.html&quot;&gt;$ sce.getTrusted&lt;/a&gt;。另外，当不使用指令进行绑定时，AngularJS会自动理解绑定的上下文。</target>
        </trans-unit>
        <trans-unit id="ad0a78c7ea83ece459db4a6b9e0ec41e1d081220" translate="yes" xml:space="preserve">
          <source>In some cases you can also rely upon automatic sanitization of untrusted values - see below.</source>
          <target state="translated">在某些情况下,你也可以依靠对不信任的值进行自动消毒--见下文。</target>
        </trans-unit>
        <trans-unit id="ced5561a26558d4d24bd44d63f6ee1bbb96f6f9e" translate="yes" xml:space="preserve">
          <source>In templates, filters are only executed when their inputs have changed. This is more performant than executing a filter on each &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24digest.html&quot;&gt;&lt;code&gt;$digest&lt;/code&gt;&lt;/a&gt; as is the case with &lt;a href=&quot;expression&quot;&gt;expressions&lt;/a&gt;.</source>
          <target state="translated">在模板中，仅当过滤器的输入已更改时才执行过滤器。这比在每个&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24digest.html&quot;&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;/a&gt;上执行过滤器（如&lt;a href=&quot;expression&quot;&gt;expressions&lt;/a&gt;的情况）更有效。</target>
        </trans-unit>
        <trans-unit id="b3df173ca7c9246d6aeebf7b82e7ed92a41a33d7" translate="yes" xml:space="preserve">
          <source>In tests you can use &lt;a href=&quot;../../ngmock/service/%24interval#flush.html&quot;&gt;&lt;code&gt;$interval.flush(millis)&lt;/code&gt;&lt;/a&gt; to move forward by &lt;code&gt;millis&lt;/code&gt; milliseconds and trigger any functions scheduled to run in that time.</source>
          <target state="translated">在测试中，你可以使用&lt;a href=&quot;../../ngmock/service/%24interval#flush.html&quot;&gt; &lt;code&gt;$interval.flush(millis)&lt;/code&gt; &lt;/a&gt;通过向前移动 &lt;code&gt;millis&lt;/code&gt; 毫秒，触发计划在这段时间运行的任何功能。</target>
        </trans-unit>
        <trans-unit id="e6d6b4db41ec26c414ad5cfb1ba6c62e946416d6" translate="yes" xml:space="preserve">
          <source>In tests you can use &lt;a href=&quot;../../ngmock/service/%24timeout&quot;&gt;&lt;code&gt;$timeout.flush()&lt;/code&gt;&lt;/a&gt; to synchronously flush the queue of deferred functions.</source>
          <target state="translated">在测试中，可以使用&lt;a href=&quot;../../ngmock/service/%24timeout&quot;&gt; &lt;code&gt;$timeout.flush()&lt;/code&gt; &lt;/a&gt;同步刷新延迟函数的队列。</target>
        </trans-unit>
        <trans-unit id="9afa5f460758c21238a4ac6be52ef14781fd6696" translate="yes" xml:space="preserve">
          <source>In that case, it is necessary to intercept the &lt;em&gt;initial&lt;/em&gt; compilation of the element:</source>
          <target state="translated">在这种情况下，有必要拦截该元素的&lt;em&gt;初始&lt;/em&gt;编译：</target>
        </trans-unit>
        <trans-unit id="f664cca1d4ca20781d1fa172027d128144824737" translate="yes" xml:space="preserve">
          <source>In the above example &lt;code&gt;SomeClass&lt;/code&gt; is not concerned with creating or locating the &lt;code&gt;greeter&lt;/code&gt; dependency, it is simply handed the &lt;code&gt;greeter&lt;/code&gt; when it is instantiated.</source>
          <target state="translated">在上面的示例中， &lt;code&gt;SomeClass&lt;/code&gt; 与创建或定位 &lt;code&gt;greeter&lt;/code&gt; 依赖关系无关，它只是在实例化 &lt;code&gt;greeter&lt;/code&gt; 时才交给它。</target>
        </trans-unit>
        <trans-unit id="d6351961d5f7c7bedc28b2fb3f9404a2fa13777f" translate="yes" xml:space="preserve">
          <source>In the above example notice that the &lt;code&gt;MyController&lt;/code&gt; assigns &lt;code&gt;World&lt;/code&gt; to the &lt;code&gt;username&lt;/code&gt; property of the scope. The scope then notifies the &lt;code&gt;input&lt;/code&gt; of the assignment, which then renders the input with username pre-filled. This demonstrates how a controller can write data into the scope.</source>
          <target state="translated">在上面的示例中，请注意 &lt;code&gt;MyController&lt;/code&gt; 将 &lt;code&gt;World&lt;/code&gt; 分配给范围的 &lt;code&gt;username&lt;/code&gt; 属性。范围然后通知分配的 &lt;code&gt;input&lt;/code&gt; ，然后使用预先填充的用户名呈现输入。这演示了控制器如何将数据写入示波器。</target>
        </trans-unit>
        <trans-unit id="e594bf894541dbfbfa549d5ac280e9f9712c2570" translate="yes" xml:space="preserve">
          <source>In the case of AngularJS' SCE service, one uses &lt;a href=&quot;%24sce#trustAs.html&quot;&gt;$sce.trustAs&lt;/a&gt; (and shorthand methods such as &lt;a href=&quot;%24sce#trustAsHtml.html&quot;&gt;$sce.trustAsHtml&lt;/a&gt;, etc.) to build the trusted versions of your values.</source>
          <target state="translated">对于AngularJS的SCE服务，可以使用&lt;a href=&quot;%24sce#trustAs.html&quot;&gt;$ sce.trustAs&lt;/a&gt;（以及&lt;a href=&quot;%24sce#trustAsHtml.html&quot;&gt;$ sce.trustAsHtml&lt;/a&gt;等速记方法）来构建值的可信版本。</target>
        </trans-unit>
        <trans-unit id="959810922e73332af4b6023c346f0a5b1acbe45e" translate="yes" xml:space="preserve">
          <source>In the code above, we see how the &lt;code&gt;apiToken&lt;/code&gt; service is defined via the Factory recipe that depends on the &lt;code&gt;clientId&lt;/code&gt; service. The factory service then uses NSA-proof encryption to produce an authentication token.</source>
          <target state="translated">在上面的代码中，我们看到了如何通过取决于 &lt;code&gt;clientId&lt;/code&gt; 服务的Factory配方定义 &lt;code&gt;apiToken&lt;/code&gt; 服务。然后，工厂服务使用耐NSA的加密来生成身份验证令牌。</target>
        </trans-unit>
        <trans-unit id="84f8e46a5ef8dfd7b5fa4f69ef21284f0f989e10" translate="yes" xml:space="preserve">
          <source>In the example HTML code above the message that is set on required will override the corresponding required message defined within the remote template. Therefore, with particular input fields (such email addresses, date fields, autocomplete inputs, etc...), specialized error messages can be applied while more generic messages can be used to handle other, more general input errors.</source>
          <target state="translated">在上面的HTML代码示例中,设置为必填的消息将覆盖远程模板中定义的相应必填消息。因此,对于特定的输入字段(如电子邮件地址、日期字段、自动完成输入等),可以应用专门的错误消息,而更通用的消息可以用来处理其他更通用的输入错误。</target>
        </trans-unit>
        <trans-unit id="fd65d4b7c7659da1f46b3e642c3fddcc6b9572ba" translate="yes" xml:space="preserve">
          <source>In the example above we in-lined the value of the &lt;code&gt;template&lt;/code&gt; option, but this will become annoying as the size of your template grows.</source>
          <target state="translated">在上面的示例中，我们内联了 &lt;code&gt;template&lt;/code&gt; 选项的值，但是随着模板大小的增加，这将变得很烦人。</target>
        </trans-unit>
        <trans-unit id="4ea40c9ac185962c5537c5bf56297794190e4724" translate="yes" xml:space="preserve">
          <source>In the example above: The template contains the directive &lt;code&gt;ng-app=&quot;invoice2&quot;&lt;/code&gt;. This tells AngularJS to use the &lt;code&gt;invoice2&lt;/code&gt; module as the main module for the application. The code snippet &lt;code&gt;angular.module('invoice2', ['finance2'])&lt;/code&gt; specifies that the &lt;code&gt;invoice2&lt;/code&gt; module depends on the &lt;code&gt;finance2&lt;/code&gt; module. By this, AngularJS uses the &lt;code&gt;InvoiceController&lt;/code&gt; as well as the &lt;code&gt;currencyConverter&lt;/code&gt; service.</source>
          <target state="translated">在上面的示例中：模板包含指令 &lt;code&gt;ng-app=&quot;invoice2&quot;&lt;/code&gt; 。这告诉AngularJS使用 &lt;code&gt;invoice2&lt;/code&gt; 模块作为应用程序的主要模块。代码段 &lt;code&gt;angular.module('invoice2', ['finance2'])&lt;/code&gt; 指定 &lt;code&gt;invoice2&lt;/code&gt; 模块依赖于 &lt;code&gt;finance2&lt;/code&gt; 模块。这样，AngularJS使用 &lt;code&gt;InvoiceController&lt;/code&gt; 以及 &lt;code&gt;currencyConverter&lt;/code&gt; 服务。</target>
        </trans-unit>
        <trans-unit id="06c6dacfa62f890f4ce330dacbb04a271d1a5f52" translate="yes" xml:space="preserve">
          <source>In the example below if the &lt;code&gt;ngApp&lt;/code&gt; directive were not placed on the &lt;code&gt;html&lt;/code&gt; element then the document would not be compiled, the &lt;code&gt;AppController&lt;/code&gt; would not be instantiated and the &lt;code&gt;{{ a+b }}&lt;/code&gt; would not be resolved to &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">在下面的示例中，如果 &lt;code&gt;ngApp&lt;/code&gt; 指令未放置在 &lt;code&gt;html&lt;/code&gt; 元素上，则将不会编译文档，不会实例化 &lt;code&gt;AppController&lt;/code&gt; ，并且 &lt;code&gt;{{ a+b }}&lt;/code&gt; 不会解析为 &lt;code&gt;3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0733690aa73762a66daf4ab130eb29e196bfdd6" translate="yes" xml:space="preserve">
          <source>In the example below we are testing a service that takes a long time to generate its answer. To avoid having all of the assertions we want to write in a single test case, &lt;a href=&quot;../api/ngmock/function/angular.mock.module.sharedinjector&quot;&gt;module.sharedInjector()&lt;/a&gt; and Jasmine's &lt;code&gt;beforeAll()&lt;/code&gt; are used to run the service only once. The test cases then all make assertions about the properties added to the service instance.</source>
          <target state="translated">在下面的示例中，我们正在测试一项花费很长时间才能生成其答案的服务。为了避免所有我们想在一个单一的测试用例编写断言，&lt;a href=&quot;../api/ngmock/function/angular.mock.module.sharedinjector&quot;&gt;module.sharedInjector（）&lt;/a&gt;和茉莉的 &lt;code&gt;beforeAll()&lt;/code&gt; 来运行该服务一次。然后，所有测试用例都对添加到服务实例中的属性进行断言。</target>
        </trans-unit>
        <trans-unit id="bab3c31c5347dae0fee8eb746e2e91d85348416e" translate="yes" xml:space="preserve">
          <source>In the example, &lt;code&gt;&quot;0: Nobody is viewing.&quot;&lt;/code&gt; is an explicit number rule. If you did not specify this rule, 0 would be matched to the &quot;other&quot; category and &quot;0 people are viewing&quot; would be shown instead of &quot;Nobody is viewing&quot;. You can specify an explicit number rule for other numbers, for example 12, so that instead of showing &quot;12 people are viewing&quot;, you can show &quot;a dozen people are viewing&quot;.</source>
          <target state="translated">在示例中， &lt;code&gt;&quot;0: Nobody is viewing.&quot;&lt;/code&gt; 是一个明确的数字规则。如果您未指定此规则，则0将与&amp;ldquo;其他&amp;rdquo;类别匹配，并且将显示&amp;ldquo; 0个人正在查看&amp;rdquo;，而不是&amp;ldquo;没有人正在查看&amp;rdquo;。您可以为其他数字指定一个明确的数字规则，例如12，这样就可以显示&amp;ldquo;有十二个人正在观看&amp;rdquo;，而不是显示&amp;ldquo;有十二个人正在观看&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="9240f6b392f9f24d3f0cc0e6e9f1b6f87bdaa61f" translate="yes" xml:space="preserve">
          <source>In the example, note that:</source>
          <target state="translated">在这个例子中,请注意:</target>
        </trans-unit>
        <trans-unit id="84ff38ef3acedf57990298f438e0044989906ff2" translate="yes" xml:space="preserve">
          <source>In the following example a new block of HTML containing a &lt;code&gt;ng-controller&lt;/code&gt; directive is added to the end of the document body by JQuery. We then compile and link it into the current AngularJS scope.</source>
          <target state="translated">在以下示例中，JQuery 将新的包含 &lt;code&gt;ng-controller&lt;/code&gt; 指令的HTML块添加到文档主体的末尾。然后，我们将其编译并链接到当前的AngularJS范围。</target>
        </trans-unit>
        <trans-unit id="e5310456ee5d9fc9becb78c6016bab204fd72bf8" translate="yes" xml:space="preserve">
          <source>In the following example we create two directives:</source>
          <target state="translated">在下面的例子中,我们创建两个指令。</target>
        </trans-unit>
        <trans-unit id="e5133af465b2e35bb8a87b952a090800d0de494d" translate="yes" xml:space="preserve">
          <source>In the following example we will build a form to calculate the costs of an invoice in different currencies.</source>
          <target state="translated">在下面的例子中,我们将建立一个表单来计算不同货币的发票成本。</target>
        </trans-unit>
        <trans-unit id="77918f42e8ba84df32a20e6ed8fa56c3f1646559" translate="yes" xml:space="preserve">
          <source>In the following example, the interpolation information would be ignored and the browser would simply interpret the attribute as present, meaning that the button would always be disabled.</source>
          <target state="translated">在下面的例子中,插值信息将被忽略,浏览器将简单地将该属性解释为存在,这意味着按钮将始终被禁用。</target>
        </trans-unit>
        <trans-unit id="efef16f2696255d51f1a599a09667ffbb53142df" translate="yes" xml:space="preserve">
          <source>In the following example, we say that the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element &lt;strong&gt;matches&lt;/strong&gt; the &lt;code&gt;ngModel&lt;/code&gt; directive</source>
          <target state="translated">在以下示例中，我们说 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 元件&lt;strong&gt;相匹配&lt;/strong&gt;的 &lt;code&gt;ngModel&lt;/code&gt; 指令</target>
        </trans-unit>
        <trans-unit id="79560f8749a4459cf00c1e8ac63200d2b09c35ab" translate="yes" xml:space="preserve">
          <source>In the link function, link the compiled element with the element's scope.</source>
          <target state="translated">在链接函数中,将编译后的元素与元素的作用域进行链接。</target>
        </trans-unit>
        <trans-unit id="cae02af11dc52e4c34dfd155a0e09f2c35b21656" translate="yes" xml:space="preserve">
          <source>In the new JavaScript file we are also creating a &lt;a href=&quot;concepts#module.html&quot;&gt;module&lt;/a&gt; at which we register the controller. We will talk about modules in the next section.</source>
          <target state="translated">在新的JavaScript文件中，我们还将创建一个用于注册控制器的&lt;a href=&quot;concepts#module.html&quot;&gt;模块&lt;/a&gt;。我们将在下一节中讨论模块。</target>
        </trans-unit>
        <trans-unit id="ddb9bac8dbb551492f9275fbd24cd7951d7d8c0c" translate="yes" xml:space="preserve">
          <source>In these examples we use &lt;code&gt;&amp;lt;base href=&quot;/base/index.html&quot; /&amp;gt;&lt;/code&gt;. The inputs represent the address bar of the browser.</source>
          <target state="translated">在这些示例中，我们使用 &lt;code&gt;&amp;lt;base href=&quot;/base/index.html&quot; /&amp;gt;&lt;/code&gt; 。输入代表浏览器的地址栏。</target>
        </trans-unit>
        <trans-unit id="b67dc576ed7fd6345e84f4eb6c7018ca4bfbcc4f" translate="yes" xml:space="preserve">
          <source>In this case, you can use &lt;code&gt;$rollbackViewValue()&lt;/code&gt; to manually cancel the debounced / future update and reset the input to the last committed view value.</source>
          <target state="translated">在这种情况下，您可以使用 &lt;code&gt;$rollbackViewValue()&lt;/code&gt; 手动取消去抖动的/将来的更新，并将输入重置为最后一个提交的视图值。</target>
        </trans-unit>
        <trans-unit id="6505ab30bfaaaac0b15030b3f3986050a80340d6" translate="yes" xml:space="preserve">
          <source>In this case, you need to override the default currency symbol by providing the &lt;a href=&quot;../api/ng/filter/currency&quot;&gt;&lt;code&gt;currency&lt;/code&gt;&lt;/a&gt; currency filter with a currency symbol as a parameter.</source>
          <target state="translated">在这种情况下，你需要提供覆盖默认货币符号&lt;a href=&quot;../api/ng/filter/currency&quot;&gt; &lt;code&gt;currency&lt;/code&gt; &lt;/a&gt;货币滤波器货币符号作为参数。</target>
        </trans-unit>
        <trans-unit id="14e832106d47cd2398f7a2e9a5e870b31e8b80af" translate="yes" xml:space="preserve">
          <source>In this example there are two locations where a simple interpolation binding (&lt;code&gt;{{}}&lt;/code&gt;) is present, but the one wrapped in &lt;code&gt;ngNonBindable&lt;/code&gt; is left alone.</source>
          <target state="translated">在此示例中，存在两个位置，其中存在一个简单的插值绑定（ &lt;code&gt;{{}}&lt;/code&gt; ），但是包裹在 &lt;code&gt;ngNonBindable&lt;/code&gt; 中的那个位置被单独保留。</target>
        </trans-unit>
        <trans-unit id="4d3a54eba3caaff060cebf9bc0469b28b7141602" translate="yes" xml:space="preserve">
          <source>In this example we create a custom method on our resource to make a PUT request:</source>
          <target state="translated">在这个例子中,我们在我们的资源上创建了一个自定义的方法来进行PUT请求。</target>
        </trans-unit>
        <trans-unit id="6899b61e7576501948474a864710fc73cabc4d8a" translate="yes" xml:space="preserve">
          <source>In this example we will build a directive that displays the current time. Once a second, it updates the DOM to reflect the current time.</source>
          <target state="translated">在这个例子中,我们将建立一个显示当前时间的指令。每隔一秒,它就会更新DOM以反映当前时间。</target>
        </trans-unit>
        <trans-unit id="4439980cd7f8e616e932b5cf07209756402b8a31" translate="yes" xml:space="preserve">
          <source>In this example, we've used the Value recipe to define the value to provide when &lt;code&gt;DemoController&lt;/code&gt; asks for the service with id &quot;clientId&quot;.</source>
          <target state="translated">在此示例中，我们使用了Value配方来定义当 &lt;code&gt;DemoController&lt;/code&gt; 要求提供ID为&amp;ldquo; clientId&amp;rdquo;的服务时要提供的值。</target>
        </trans-unit>
        <trans-unit id="7a7d32308b0ce66221de3ff0ef1900cca2184aa8" translate="yes" xml:space="preserve">
          <source>In this mode, &lt;code&gt;$location&lt;/code&gt; uses Hashbang URLs in all browsers. AngularJS also does not intercept and rewrite links in this mode. I.e. links work as expected and also perform full page reloads when other parts of the url than the hash fragment was changed.</source>
          <target state="translated">在这种模式下， &lt;code&gt;$location&lt;/code&gt; 在所有浏览器中都使用Hashbang URL。AngularJS在这种模式下也不会拦截和重写链接。即，链接按预期工作，并且在URL的除散列片段以外的其他部分发生更改时，也可以执行整个页面重新加载。</target>
        </trans-unit>
        <trans-unit id="5becec1b89211dd88c512f01dd020136e19e6976" translate="yes" xml:space="preserve">
          <source>In this scenario the ordering of the values in the &lt;code&gt;$inject&lt;/code&gt; array must match the ordering of the parameters in &lt;code&gt;MyController&lt;/code&gt;.</source>
          <target state="translated">在这种情况下， &lt;code&gt;$inject&lt;/code&gt; 数组中值的顺序必须与 &lt;code&gt;MyController&lt;/code&gt; 中参数的顺序匹配。</target>
        </trans-unit>
        <trans-unit id="13f2a9a690a1e6a57d2a22be202ab6f40a5e27bc" translate="yes" xml:space="preserve">
          <source>In unit tests, if &lt;code&gt;angular-mocks.js&lt;/code&gt; is loaded, this service is overridden by &lt;a href=&quot;../../ngmock/service/%24exceptionhandler&quot;&gt;mock $exceptionHandler&lt;/a&gt; which aids in testing.</source>
          <target state="translated">在单元测试中，如果加载了 &lt;code&gt;angular-mocks.js&lt;/code&gt; ，则此服务会被&lt;a href=&quot;../../ngmock/service/%24exceptionhandler&quot;&gt;模拟$ exceptionHandler&lt;/a&gt;覆盖，后者有助于测试。</target>
        </trans-unit>
        <trans-unit id="f65268ee4fca5a690bd7ec3d41fb1bec92988ebd" translate="yes" xml:space="preserve">
          <source>In unit tests, you may need to call &lt;code&gt;$digest()&lt;/code&gt; to simulate the scope life cycle.</source>
          <target state="translated">在单元测试中，您可能需要调用 &lt;code&gt;$digest()&lt;/code&gt; 以模拟作用域的生命周期。</target>
        </trans-unit>
        <trans-unit id="1175103ab9a357b144d5afd8b6a34c7357be8f89" translate="yes" xml:space="preserve">
          <source>Include &lt;code&gt;angular_1_router.js&lt;/code&gt; in your HTML:</source>
          <target state="translated">在HTML中包含 &lt;code&gt;angular_1_router.js&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="eee121d0108cf587e09cedc45732972ef8bcd660" translate="yes" xml:space="preserve">
          <source>Including ngAria</source>
          <target state="translated">包括ngAria</target>
        </trans-unit>
        <trans-unit id="97ab23190c81b3035d6f0736f1e943af6dedb556" translate="yes" xml:space="preserve">
          <source>Including the &lt;code&gt;angular-mocks.js&lt;/code&gt; file automatically adds the &lt;code&gt;ngMock&lt;/code&gt; module, so your tests are ready to go!</source>
          <target state="translated">包括 &lt;code&gt;angular-mocks.js&lt;/code&gt; 文件会自动添加 &lt;code&gt;ngMock&lt;/code&gt; 模块，因此您的测试就可以开始了！</target>
        </trans-unit>
        <trans-unit id="022e67bfe4c9d31f23e277e933c1ffc2d7b2553f" translate="yes" xml:space="preserve">
          <source>Incorrect scope on replaced element: &lt;a href=&quot;https://github.com/angular/angular.js/issues/9837&quot;&gt;#9837&lt;/a&gt;</source>
          <target state="translated">替换元素的作用域不正确：&lt;a href=&quot;https://github.com/angular/angular.js/issues/9837&quot;&gt;＃9837&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4bc6cb47d35d34b7a2afa7d59d3ad1affaa2fd4d" translate="yes" xml:space="preserve">
          <source>Increasing the TTL could have performance implications, so you should not change it without proper justification.</source>
          <target state="translated">增加TTL可能会对性能产生影响,所以在没有适当理由的情况下,你不应该改变它。</target>
        </trans-unit>
        <trans-unit id="fe65a117b989a572706242b27f193dcbfe4cccb2" translate="yes" xml:space="preserve">
          <source>Index at which to begin limitation. As a negative index, &lt;code&gt;begin&lt;/code&gt; indicates an offset from the end of &lt;code&gt;input&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">开始限制的索引。作为负索引， &lt;code&gt;begin&lt;/code&gt; 表示距 &lt;code&gt;input&lt;/code&gt; 末尾的偏移量。默认为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be561e9cda308e941f15c8f2d92167d741116500" translate="yes" xml:space="preserve">
          <source>Inference</source>
          <target state="translated">Inference</target>
        </trans-unit>
        <trans-unit id="e3429591e14050c72d5c0051bbbbd1a28af8277c" translate="yes" xml:space="preserve">
          <source>Information about the module</source>
          <target state="translated">关于该模块的信息</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="5dfb1d0123ddef5f4f1709bff3cd4b6a227f90d4" translate="yes" xml:space="preserve">
          <source>Inheritance works with methods in the same way as it does with properties. So in our previous examples, all of the properties could be replaced with methods that return string values.</source>
          <target state="translated">继承对方法的作用和对属性的作用是一样的。所以在我们之前的例子中,所有的属性都可以用返回字符串值的方法来代替。</target>
        </trans-unit>
        <trans-unit id="0b0ccb7ae52acb2325f9958f72c6588fcb209c80" translate="yes" xml:space="preserve">
          <source>Inheriting Options</source>
          <target state="translated">继承选项</target>
        </trans-unit>
        <trans-unit id="96a10dd68557ab7a42e636872dcf0b6dfbfa7c5b" translate="yes" xml:space="preserve">
          <source>Injection Function Annotation</source>
          <target state="translated">注入功能注释</target>
        </trans-unit>
        <trans-unit id="a9fff665a0f0f15d16e0d15e587df45688563f62" translate="yes" xml:space="preserve">
          <source>Injection locals for Controller.</source>
          <target state="translated">为Controller注入locals。</target>
        </trans-unit>
        <trans-unit id="2ca8a0d344a0e19a0d77c7ff904b9681383397eb" translate="yes" xml:space="preserve">
          <source>Injector</source>
          <target state="translated">Injector</target>
        </trans-unit>
        <trans-unit id="79f0f713c81b40636682b05fc5367727bac538b1" translate="yes" xml:space="preserve">
          <source>Injector API</source>
          <target state="translated">喷射器API</target>
        </trans-unit>
        <trans-unit id="14473111235c870eaff95fa0c0269e33135347df" translate="yes" xml:space="preserve">
          <source>Injector object. See &lt;a href=&quot;../../auto/service/%24injector&quot;&gt;$injector&lt;/a&gt;.</source>
          <target state="translated">喷油器对象。参见&lt;a href=&quot;../../auto/service/%24injector&quot;&gt;$ injector&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e347f4ceb23a6d8637cc8028fda9ad8c7b7c47f" translate="yes" xml:space="preserve">
          <source>Inline</source>
          <target state="translated">Inline</target>
        </trans-unit>
        <trans-unit id="925743fe777d805151236206dc7c89eab96a1877" translate="yes" xml:space="preserve">
          <source>Inline Array Annotation</source>
          <target state="translated">内联阵列注解</target>
        </trans-unit>
        <trans-unit id="6b04e7cb97df1376cafddfa71719f04eb50b9a6e" translate="yes" xml:space="preserve">
          <source>Input elements using ngModelController do this automatically when they are destroyed.</source>
          <target state="translated">使用ngModelController的输入元素在销毁时,会自动做到这一点。</target>
        </trans-unit>
        <trans-unit id="746797b58353ee493a111e047d8432803b2bf4f0" translate="yes" xml:space="preserve">
          <source>Input text.</source>
          <target state="translated">输入文本。</target>
        </trans-unit>
        <trans-unit id="5e4c6a9c5fc75d66498cf6d23beea81ac1405c3b" translate="yes" xml:space="preserve">
          <source>Input to be serialized into JSON.</source>
          <target state="translated">输入要序列化为JSON。</target>
        </trans-unit>
        <trans-unit id="36c92f17e709bebc8508b025911cc23c819f2bdc" translate="yes" xml:space="preserve">
          <source>Input to filter.</source>
          <target state="translated">输入到过滤器。</target>
        </trans-unit>
        <trans-unit id="8623e06b7bf838dfcd7440cde11477a28bd943b1" translate="yes" xml:space="preserve">
          <source>Inputs should be using &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;@&lt;/code&gt; bindings. The &lt;code&gt;&amp;lt;&lt;/code&gt; symbol denotes &lt;a href=&quot;../api/ng/service/%24compile#-scope-.html&quot;&gt;one-way bindings&lt;/a&gt; which are available since 1.5. The difference to &lt;code&gt;=&lt;/code&gt; is that the bound properties in the component scope are not watched, which means if you assign a new value to the property in the component scope, it will not update the parent scope. Note however, that both parent and component scope reference the same object, so if you are changing object properties or array elements in the component, the parent will still reflect that change. The general rule should therefore be to never change an object or array property in the component scope. &lt;code&gt;@&lt;/code&gt; bindings can be used when the input is a string, especially when the value of the binding doesn't change.</source>
          <target state="translated">输入应使用 &lt;code&gt;&amp;lt;&lt;/code&gt; 和 &lt;code&gt;@&lt;/code&gt; 绑定。所述 &lt;code&gt;&amp;lt;&lt;/code&gt; 符号表示&lt;a href=&quot;../api/ng/service/%24compile#-scope-.html&quot;&gt;单向绑定&lt;/a&gt;这是因为1.5可用。与 &lt;code&gt;=&lt;/code&gt; 的区别在于，不监视组件范围内的绑定属性，这意味着，如果为组件范围内的属性分配新值，则不会更新父范围。但是请注意，父级作用域和组件作用域都引用同一对象，因此，如果要更改组件中的对象属性或数组元素，父级仍将反映该更改。因此，一般规则应该是永远不要在组件范围内更改对象或数组属性。 &lt;code&gt;@&lt;/code&gt; 当输入是字符串时，可以使用绑定，尤其是当绑定的值不变时。</target>
        </trans-unit>
        <trans-unit id="9e52682fa7935f8560c99962baa2e9b2e2f695aa" translate="yes" xml:space="preserve">
          <source>Inserts (moves) the element into its new position in the DOM either after the &lt;code&gt;after&lt;/code&gt; element (if provided) or as the first child within the &lt;code&gt;parent&lt;/code&gt; element and then triggers an animation. A promise is returned that will be resolved during the next digest once the animation has completed.</source>
          <target state="translated">在 &lt;code&gt;after&lt;/code&gt; 元素之后（如果提供）或作为 &lt;code&gt;parent&lt;/code&gt; 元素中的第一个子元素将元素插入（移动）到DOM中的新位置，然后触发动画。动画完成后，将返回一个下一个摘要中将解决的承诺。</target>
        </trans-unit>
        <trans-unit id="9d08db8a2f848ef678473f1e8f3fc6d65efc3930" translate="yes" xml:space="preserve">
          <source>Inserts a named entry into the &lt;a href=&quot;%24cachefactory.cache&quot;&gt;Cache&lt;/a&gt; object to be retrieved later, and incrementing the size of the cache if the key was not already present in the cache. If behaving like an LRU cache, it will also remove stale entries from the set.</source>
          <target state="translated">将一个命名的条目插入到&lt;a href=&quot;%24cachefactory.cache&quot;&gt;Cache&lt;/a&gt;对象中，以便以后检索，如果该键尚未在缓存中，则增加缓存的大小。如果行为类似于LRU缓存，它还将从集合中删除陈旧的条目。</target>
        </trans-unit>
        <trans-unit id="b56347e262d3cfcb832a5204694e59add55e7c8a" translate="yes" xml:space="preserve">
          <source>Inserts the element into the DOM either after the &lt;code&gt;after&lt;/code&gt; element (if provided) or as the first child within the &lt;code&gt;parent&lt;/code&gt; element and then triggers an animation. A promise is returned that will be resolved during the next digest once the animation has completed.</source>
          <target state="translated">将元素插入到DOM中，在 &lt;code&gt;after&lt;/code&gt; 元素之后（如果提供）或作为 &lt;code&gt;parent&lt;/code&gt; 元素中的第一个子元素，然后触发动画。动画完成后，将返回一个下一个摘要中将解决的承诺。</target>
        </trans-unit>
        <trans-unit id="4a974602fd15a3bb043838c33a55716734438b42" translate="yes" xml:space="preserve">
          <source>Inside this directive's compile function, add any other directive attributes to the template.</source>
          <target state="translated">在这个指令的编译函数里面,添加任何其他指令属性到模板中。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="8282d74914fee52414c245630944283136d0ee0c" translate="yes" xml:space="preserve">
          <source>Instance of given controller.</source>
          <target state="translated">给定控制器的实例。</target>
        </trans-unit>
        <trans-unit id="062b9f18d0fd09a55820ed08041572545f617364" translate="yes" xml:space="preserve">
          <source>Instance of requested controller.</source>
          <target state="translated">被请求的控制器的实例。</target>
        </trans-unit>
        <trans-unit id="211f21858ca1d5311a2538cd51c3ed72a3d7a141" translate="yes" xml:space="preserve">
          <source>Instantiating &lt;code&gt;$route&lt;/code&gt; early is necessary for capturing the initial &lt;a href=&quot;../../ng/service/%24location#%24locationChangeStart.html&quot;&gt;$locationChangeStart&lt;/a&gt; event and navigating to the appropriate route. Usually, &lt;code&gt;$route&lt;/code&gt; is instantiated in time by the &lt;a href=&quot;../directive/ngview&quot;&gt;ngView&lt;/a&gt; directive. Yet, in cases where &lt;code&gt;ngView&lt;/code&gt; is included in an asynchronously loaded template (e.g. in another directive's template), the directive factory might not be called soon enough for &lt;code&gt;$route&lt;/code&gt; to be instantiated &lt;em&gt;before&lt;/em&gt; the initial &lt;code&gt;$locationChangeSuccess&lt;/code&gt; event is fired. Eager instantiation ensures that &lt;code&gt;$route&lt;/code&gt; is always instantiated in time, regardless of when &lt;code&gt;ngView&lt;/code&gt; will be loaded.</source>
          <target state="translated">要捕获初始&lt;a href=&quot;../../ng/service/%24location#%24locationChangeStart.html&quot;&gt;$ locationChangeStart&lt;/a&gt;事件并导航到适当的路由，必须提前实例化 &lt;code&gt;$route&lt;/code&gt; route。通常， &lt;code&gt;$route&lt;/code&gt; 由&lt;a href=&quot;../directive/ngview&quot;&gt;ngView&lt;/a&gt;指令及时实例化。但是，如果 &lt;code&gt;ngView&lt;/code&gt; 被包含在异步加载的模板中（例如，在另一个指令的模板中），则指令工厂可能没有被足够快地调用，无法&lt;em&gt;在&lt;/em&gt;激发初始 &lt;code&gt;$locationChangeSuccess&lt;/code&gt; 事件&lt;em&gt;之前&lt;/em&gt;实例化 &lt;code&gt;$route&lt;/code&gt; 。急切的实例化确保 &lt;code&gt;$route&lt;/code&gt; 总是及时实例化，而不管何时加载 &lt;code&gt;ngView&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d3a7f6588b1415794dfce3d5d197e1c86baed2d" translate="yes" xml:space="preserve">
          <source>Instead of an ngController, we now have a heroList component that holds the data of different heroes, and creates a heroDetail for each of them.</source>
          <target state="translated">我们现在有一个英雄列表组件来代替ngController,它保存着不同英雄的数据,并为每个英雄创建一个英雄详情。</target>
        </trans-unit>
        <trans-unit id="6f3dfbdc7d4af7c104dfa249eb6020271af2c661" translate="yes" xml:space="preserve">
          <source>Instead of manipulating Input Data, the component calls the correct Output Event with the changed data. For a deletion, that means the component doesn't delete the &lt;code&gt;hero&lt;/code&gt; itself, but sends it back to the owner component via the correct event.</source>
          <target state="translated">组件不处理输入数据，而是使用更改后的数据调用正确的输出事件。对于删除，这意味着组件不会删除 &lt;code&gt;hero&lt;/code&gt; 本身，而是通过正确的事件将其发送回所有者组件。</target>
        </trans-unit>
        <trans-unit id="83be5bd3ffd4491816aabd2cd39c2c3b9c8878ac" translate="yes" xml:space="preserve">
          <source>Instead the &lt;a href=&quot;../api/ng/directive/ngrepeat&quot;&gt;&lt;code&gt;ngRepeat&lt;/code&gt;&lt;/a&gt; directive compiles &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; separately. The result of the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element compilation is a linking function which contains all of the directives contained in the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element, ready to be attached to a specific clone of the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">而是&lt;a href=&quot;../api/ng/directive/ngrepeat&quot;&gt; &lt;code&gt;ngRepeat&lt;/code&gt; &lt;/a&gt;指令单独编译 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 。所述的结果 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 元素编译为连接函数包含所有包含在该指令的 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 元素，随时可以连接到的特定克隆 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="633968d37033cd055bb2eb774fd1e896dbbc403f" translate="yes" xml:space="preserve">
          <source>Instead use services like &lt;code&gt;$window&lt;/code&gt; and &lt;code&gt;$location&lt;/code&gt; in functions on controllers, which are then called from expressions. Such services provide mockable access to globals.</source>
          <target state="translated">而是在控制器的函数中使用 &lt;code&gt;$window&lt;/code&gt; 和 &lt;code&gt;$location&lt;/code&gt; 类的服务，然后从表达式中调用它们。此类服务提供对全局变量的可模拟访问。</target>
        </trans-unit>
        <trans-unit id="e907f4bb49fd3c2e897bc3769f08b3d04e07eddb" translate="yes" xml:space="preserve">
          <source>Integration with the browser event loop</source>
          <target state="translated">与浏览器事件循环集成</target>
        </trans-unit>
        <trans-unit id="f9c3ced7a72c2e86229aee91105ee78487714dbb" translate="yes" xml:space="preserve">
          <source>Interceptors</source>
          <target state="translated">Interceptors</target>
        </trans-unit>
        <trans-unit id="9db23e6c66b8f703c4c5170aac080107d2e70814" translate="yes" xml:space="preserve">
          <source>Interceptors detailed info</source>
          <target state="translated">拦截器详细信息</target>
        </trans-unit>
        <trans-unit id="9ce9437cbc666edc9eb9fcee34199bb7906c0c55" translate="yes" xml:space="preserve">
          <source>Intercomponent Communication</source>
          <target state="translated">组件间通信</target>
        </trans-unit>
        <trans-unit id="062715707c7ec1cacc1e15b12597b7e7f10f0e06" translate="yes" xml:space="preserve">
          <source>Interface for configuring AngularJS &lt;a href=&quot;../function/angular.module&quot;&gt;modules&lt;/a&gt;.</source>
          <target state="translated">用于配置AngularJS &lt;a href=&quot;../function/angular.module&quot;&gt;模块的&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="e4d32358862ac0edaba0242863407cf48322048c" translate="yes" xml:space="preserve">
          <source>Interface for configuring AngularJS &lt;a href=&quot;function/angular.module&quot;&gt;modules&lt;/a&gt;.</source>
          <target state="translated">用于配置AngularJS &lt;a href=&quot;function/angular.module&quot;&gt;模块的&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="ecd5ccdaf3148a44137ddcbe0c56ca93bd059aa4" translate="yes" xml:space="preserve">
          <source>Internally it looks a bit like this:</source>
          <target state="translated">内部看起来有点像这样。</target>
        </trans-unit>
        <trans-unit id="7b741cdf9b58113f65f5de5d9a4967edb5170093" translate="yes" xml:space="preserve">
          <source>Internally, &lt;code&gt;ngAnimate&lt;/code&gt; waits until all template downloads that are started right after bootstrap have finished. Then, it waits for the currently running &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24digest.html&quot;&gt;$digest&lt;/a&gt; and one more after that, to finish. This ensures that the whole app has been compiled fully before animations are attempted.</source>
          <target state="translated">在内部， &lt;code&gt;ngAnimate&lt;/code&gt; 等待启动完成后立即开始的所有模板下载。然后，它等待当前正在运行的&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24digest.html&quot;&gt;$ digest&lt;/a&gt;及其之后的$ digest完成。这样可以确保在尝试制作动画之前已完全编译了整个应用程序。</target>
        </trans-unit>
        <trans-unit id="22c5f10ca7f996927beededd6dc71f14380c408d" translate="yes" xml:space="preserve">
          <source>Internationalization (i18n) is the process of developing products in such a way that they can be localized for languages and cultures easily. Localization (l10n), is the process of adapting applications and text to enable their usability in a particular cultural or linguistic market. For application developers, internationalizing an application means abstracting all of the strings and other locale-specific bits (such as date or currency formats) out of the application. Localizing an application means providing translations and localized formats for the abstracted bits.</source>
          <target state="translated">国际化(i18n)是指开发产品的过程,使产品能够很容易地针对各种语言和文化进行本地化。本地化(l10n)是调整应用程序和文本以使其在特定文化或语言市场中的可用性的过程。对于应用程序开发人员来说,国际化应用程序意味着从应用程序中抽象出所有的字符串和其他本地特定的位(如日期或货币格式)。本地化应用程序意味着为抽象的比特提供翻译和本地化格式。</target>
        </trans-unit>
        <trans-unit id="627598da36f0488e21c56b4623e3c3ac29134995" translate="yes" xml:space="preserve">
          <source>Internet Explorer and Edge do not support the &lt;code&gt;details&lt;/code&gt; element, it is recommended to use &lt;a href=&quot;ngshow&quot;&gt;&lt;code&gt;ngShow&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;nghide&quot;&gt;&lt;code&gt;ngHide&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Internet Explorer和Edge不支持 &lt;code&gt;details&lt;/code&gt; 元素，建议改为使用&lt;a href=&quot;ngshow&quot;&gt; &lt;code&gt;ngShow&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;nghide&quot;&gt; &lt;code&gt;ngHide&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6a9858c9bf3149456595f98943cf88e41039822e" translate="yes" xml:space="preserve">
          <source>Interpolation</source>
          <target state="translated">Interpolation</target>
        </trans-unit>
        <trans-unit id="3da05a3ab5e77c32bfb542c759dbb3b2f9921337" translate="yes" xml:space="preserve">
          <source>Interpolation markup with embedded &lt;a href=&quot;expression&quot;&gt;expressions&lt;/a&gt; is used by AngularJS to provide data-binding to text nodes and attribute values.</source>
          <target state="translated">AngularJS使用带有嵌入式&lt;a href=&quot;expression&quot;&gt;表达式的&lt;/a&gt;插值标记为文本节点和属性值提供数据绑定。</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="464d6921114c284acd9c8fb8f85d8fdc2d3aa0a2" translate="yes" xml:space="preserve">
          <source>Introductory Material</source>
          <target state="translated">介绍性材料</target>
        </trans-unit>
        <trans-unit id="6ef14993cacdc6240416f3e705cd81fa9aedff49" translate="yes" xml:space="preserve">
          <source>Invoke the method and supply the method arguments from the &lt;code&gt;$injector&lt;/code&gt;.</source>
          <target state="translated">调用方法并从 &lt;code&gt;$injector&lt;/code&gt; 提供方法参数。</target>
        </trans-unit>
        <trans-unit id="35b43899a3f83610ba7b4c6c1390ee4e1f1b7e31" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;iterator&lt;/code&gt; function once for each item in &lt;code&gt;obj&lt;/code&gt; collection, which can be either an object or an array. The &lt;code&gt;iterator&lt;/code&gt; function is invoked with &lt;code&gt;iterator(value, key, obj)&lt;/code&gt;, where &lt;code&gt;value&lt;/code&gt; is the value of an object property or an array element, &lt;code&gt;key&lt;/code&gt; is the object property key or array element index and obj is the &lt;code&gt;obj&lt;/code&gt; itself. Specifying a &lt;code&gt;context&lt;/code&gt; for the function is optional.</source>
          <target state="translated">为 &lt;code&gt;obj&lt;/code&gt; 集合中的每个项目调用一次 &lt;code&gt;iterator&lt;/code&gt; 函数，该集合可以是对象也可以是数组。该 &lt;code&gt;iterator&lt;/code&gt; 函数调用时使用 &lt;code&gt;iterator(value, key, obj)&lt;/code&gt; ，其中 &lt;code&gt;value&lt;/code&gt; 是一个对象属性或数组元素的值， &lt;code&gt;key&lt;/code&gt; 是对象属性键或数组元素索引和obj与 &lt;code&gt;obj&lt;/code&gt; 本身。指定功能的 &lt;code&gt;context&lt;/code&gt; 是可选的。</target>
        </trans-unit>
        <trans-unit id="a5ab7787ce6bc4362a9f13777edcdaf6b98998bd" translate="yes" xml:space="preserve">
          <source>Ionic Framework</source>
          <target state="translated">离子框架</target>
        </trans-unit>
        <trans-unit id="1a782aa74f75185993195ad4bcbc102f9f427def" translate="yes" xml:space="preserve">
          <source>Isolating the Scope of a Directive</source>
          <target state="translated">隔离指令的范围</target>
        </trans-unit>
        <trans-unit id="d20f2f6b4e6d817ba6e89b3f9673aecdf3113258" translate="yes" xml:space="preserve">
          <source>Issues with replace: true</source>
          <target state="translated">替换:true的问题</target>
        </trans-unit>
        <trans-unit id="553315737e3b34b8f0ca05c4145e5f178bea3093" translate="yes" xml:space="preserve">
          <source>It also watches the &lt;a href=&quot;%24location#hash.html&quot;&gt;$location.hash()&lt;/a&gt; and automatically scrolls to match any anchor whenever it changes. This can be disabled by calling &lt;a href=&quot;../provider/%24anchorscrollprovider#disableAutoScrolling.html&quot;&gt;$anchorScrollProvider.disableAutoScrolling()&lt;/a&gt;.</source>
          <target state="translated">它还监视&lt;a href=&quot;%24location#hash.html&quot;&gt;$ location.hash（）&lt;/a&gt;并在其更改时自动滚动以匹配任何锚点。可以通过调用&lt;a href=&quot;../provider/%24anchorscrollprovider#disableAutoScrolling.html&quot;&gt;$ anchorScrollProvider.disableAutoScrolling（）&lt;/a&gt;禁用此功能。</target>
        </trans-unit>
        <trans-unit id="c489374ee92d89df88a69e803f218fae80bb3039" translate="yes" xml:space="preserve">
          <source>It can also be used to achieve one-way binding of a given expression to an input element such as an &lt;code&gt;input[text]&lt;/code&gt; or a &lt;code&gt;textarea&lt;/code&gt;, when that element does not use ngModel.</source>
          <target state="translated">当该元素不使用ngModel时，也可以用于将给定表达式单向绑定到输入元素，例如 &lt;code&gt;input[text]&lt;/code&gt; 或 &lt;code&gt;textarea&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ead9df0c1b0575bc0d0a33bce64a5d7d3f5aebc" translate="yes" xml:space="preserve">
          <source>It can be used like so:</source>
          <target state="translated">它可以这样使用。</target>
        </trans-unit>
        <trans-unit id="db03d0c1d6f65c6696ad45dd10b046e86fb2b5bc" translate="yes" xml:space="preserve">
          <source>It can be used to trigger a native browser event on an element, which is useful for unit testing.</source>
          <target state="translated">它可以用来触发元素上的本地浏览器事件,这对单元测试很有用。</target>
        </trans-unit>
        <trans-unit id="92cd05db0fac39e05b3a78129dbc2c13bb5d210c" translate="yes" xml:space="preserve">
          <source>It does not cause a full page reload when the browser URL is changed. To reload the page after changing the URL, use the lower-level API, &lt;code&gt;$window.location.href&lt;/code&gt;.</source>
          <target state="translated">更改浏览器URL时，不会导致整个页面重新加载。要在更改URL后重新加载页面，请使用较低级别的API &lt;code&gt;$window.location.href&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6dd0e3b492e0e9ddf8f072cf8217d885fc9dc93f" translate="yes" xml:space="preserve">
          <source>It impacts performance, as interpolation adds another watcher to the scope.</source>
          <target state="translated">它影响性能,因为内插在范围内增加了另一个观察者。</target>
        </trans-unit>
        <trans-unit id="4d5b67bbcac712f4a34e5aa8cfdb8f074f88c7b5" translate="yes" xml:space="preserve">
          <source>It increases the complexity of the markup</source>
          <target state="translated">它增加了标记的复杂性</target>
        </trans-unit>
        <trans-unit id="fc05bcff5f72991e69c700ce73817afcbbb8bd13" translate="yes" xml:space="preserve">
          <source>It indicates to the compiler whether or not directives on comments should be compiled. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">它向编译器指示是否应编译注释指令。默认为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="906af1e36dfdfa37c091ab433fc206589b32aa37" translate="yes" xml:space="preserve">
          <source>It indicates to the compiler whether or not directives on element classes should be compiled. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">它向编译器指示是否应编译有关元素类的指令。默认为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5ee5553d7a8187ba379677bf68a64abd66747eb" translate="yes" xml:space="preserve">
          <source>It is a really, &lt;em&gt;really&lt;/em&gt; good idea to regard app testing as equal in importance to app writing. Testing difficulty is dramatically affected by the way the code is structured.</source>
          <target state="translated">将应用程序测试与应用程序编写同等重要是一个非常&lt;em&gt;非常&lt;/em&gt;好的主意。代码的结构方式极大地影响了测试难度。</target>
        </trans-unit>
        <trans-unit id="8855a2587ecadec73d7a3421fc455403fbc8a53a" translate="yes" xml:space="preserve">
          <source>It is a very good idea to decouple DOM manipulation from app logic. This dramatically improves the testability of the code.</source>
          <target state="translated">将DOM操作与应用逻辑解耦是一个非常好的想法。这极大地提高了代码的可测试性。</target>
        </trans-unit>
        <trans-unit id="727b35094155043ed303b76b370615c80c2ab5a2" translate="yes" xml:space="preserve">
          <source>It is also possible that you run into difficulties if you try to update the ngModel's &lt;code&gt;$modelValue&lt;/code&gt; programmatically before these debounced/future events have resolved/occurred, because AngularJS's dirty checking mechanism is not able to tell whether the model has actually changed or not.</source>
          <target state="translated">如果尝试解决这些去抖动/未来事件之前， &lt;code&gt;$modelValue&lt;/code&gt; 编程方式更新ngModel的$ modelValue，也可能会遇到麻烦，因为AngularJS的脏检查机制无法判断模型是否确实发生了变化。</target>
        </trans-unit>
        <trans-unit id="80c4111be6bb24188a6a2bea325a2c92f6ed5f77" translate="yes" xml:space="preserve">
          <source>It is also possible to call the &lt;code&gt;orderBy&lt;/code&gt; filter manually, by injecting &lt;code&gt;orderByFilter&lt;/code&gt;, and calling it with the desired parameters. (Alternatively, you could inject the &lt;code&gt;$filter&lt;/code&gt; factory and retrieve the &lt;code&gt;orderBy&lt;/code&gt; filter with &lt;code&gt;$filter('orderBy')&lt;/code&gt;.)</source>
          <target state="translated">也可以通过注入 &lt;code&gt;orderByFilter&lt;/code&gt; 并使用所需参数来手动调用 &lt;code&gt;orderBy&lt;/code&gt; 过滤器。（或者，您可以注入 &lt;code&gt;$filter&lt;/code&gt; 工厂并使用 &lt;code&gt;$filter('orderBy')&lt;/code&gt; 检索 &lt;code&gt;orderBy&lt;/code&gt; 过滤器。）</target>
        </trans-unit>
        <trans-unit id="ca7a590d3c2d53e278b044a014b894acece3725f" translate="yes" xml:space="preserve">
          <source>It is also possible to set &lt;code&gt;bindToController&lt;/code&gt; to an object hash with the same format as the &lt;code&gt;scope&lt;/code&gt; property. This will set up the scope bindings to the controller directly. Note that &lt;code&gt;scope&lt;/code&gt; can still be used to define which kind of scope is created. By default, no scope is created. Use &lt;code&gt;scope: {}&lt;/code&gt; to create an isolate scope (useful for component directives).</source>
          <target state="translated">也可以将 &lt;code&gt;bindToController&lt;/code&gt; 设置为具有与 &lt;code&gt;scope&lt;/code&gt; 属性相同格式的对象哈希。这将直接设置与控制器的范围绑定。注意， &lt;code&gt;scope&lt;/code&gt; 仍然可以用来定义创建哪种类型的范围。默认情况下，不创建范围。使用 &lt;code&gt;scope: {}&lt;/code&gt; 以创建隔离范围（对于组件指令很有用）。</target>
        </trans-unit>
        <trans-unit id="25431739b654d8cc47b28b9c43eeca226e65b9a6" translate="yes" xml:space="preserve">
          <source>It is also possible to set it as the default &lt;code&gt;paramSerializer&lt;/code&gt; in the &lt;a href=&quot;../provider/%24httpprovider#defaults.html&quot;&gt;&lt;code&gt;$httpProvider&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">也可以将其设置为默认 &lt;code&gt;paramSerializer&lt;/code&gt; 在&lt;a href=&quot;../provider/%24httpprovider#defaults.html&quot;&gt; &lt;code&gt;$httpProvider&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d5c13dd91385416023d0e8e5aa828224c7f5217" translate="yes" xml:space="preserve">
          <source>It is always good to make common tasks trivial and difficult tasks possible.</source>
          <target state="translated">把共同的任务变成琐碎的、困难的任务总是好的。</target>
        </trans-unit>
        <trans-unit id="b3e683fad2f9309dfaa4db918783ad8289246cf8" translate="yes" xml:space="preserve">
          <source>It is an excellent idea to decouple the client side of an app from the server side. This allows development work to progress in parallel, and allows for reuse of both sides.</source>
          <target state="translated">将应用程序的客户端与服务器端解耦是一个很好的想法。这样可以使开发工作平行进行,并允许双方的重用。</target>
        </trans-unit>
        <trans-unit id="0b0fa48b6950751b768005b01d414197a136d433" translate="yes" xml:space="preserve">
          <source>It is common to attach Controllers at different levels of the DOM hierarchy. Since the &lt;a href=&quot;../api/ng/directive/ngcontroller&quot;&gt;ng-controller&lt;/a&gt; directive creates a new child scope, we get a hierarchy of scopes that inherit from each other. The &lt;code&gt;$scope&lt;/code&gt; that each Controller receives will have access to properties and methods defined by Controllers higher up the hierarchy. See &lt;a href=&quot;https://github.com/angular/angular.js/wiki/Understanding-Scopes&quot;&gt;Understanding Scopes&lt;/a&gt; for more information about scope inheritance.</source>
          <target state="translated">通常将控制器附加在DOM层次结构的不同级别上。由于&lt;a href=&quot;../api/ng/directive/ngcontroller&quot;&gt;ng-controller&lt;/a&gt;指令创建了新的子作用域，因此我们获得了一个相互继承的作用域层次结构。每个Controller收到的 &lt;code&gt;$scope&lt;/code&gt; 将有权访问层次结构中更高级别的Controller定义的属性和方法。有关范围继承的更多信息，请参见&lt;a href=&quot;https://github.com/angular/angular.js/wiki/Understanding-Scopes&quot;&gt;了解范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="898e639ea78a3295cd345092429425a8851a4def" translate="yes" xml:space="preserve">
          <source>It is currently not possible for an interpolated expression to contain the interpolation end symbol. For example, &lt;code&gt;{{ '}}' }}&lt;/code&gt; will be incorrectly interpreted as &lt;code&gt;{{ ' }}&lt;/code&gt; + &lt;code&gt;' }}&lt;/code&gt;, i.e. an interpolated expression consisting of a single-quote (&lt;code&gt;'&lt;/code&gt;) and the &lt;code&gt;' }}&lt;/code&gt; string.</source>
          <target state="translated">当前，插值表达式不可能包含插值结束符号。例如， &lt;code&gt;{{ '}}' }}&lt;/code&gt; 将错误地解释为 &lt;code&gt;{{ ' }}&lt;/code&gt; + &lt;code&gt;' }}&lt;/code&gt; ，即由单引号（ &lt;code&gt;'&lt;/code&gt; ）和 &lt;code&gt;' }}&lt;/code&gt; 字符串组成的内插表达式。</target>
        </trans-unit>
        <trans-unit id="78735c155bc5c04e168b61fd0cfb26236c9dbc1c" translate="yes" xml:space="preserve">
          <source>It is documented that &lt;code&gt;animation.start()&lt;/code&gt; will return a promise object and this is true, however, there is also an additional method available on the runner called &lt;code&gt;.done(callbackFn)&lt;/code&gt;. The done method works the same as &lt;code&gt;.finally(callbackFn)&lt;/code&gt;, however, it does &lt;strong&gt;not trigger a digest to occur&lt;/strong&gt;. Therefore, for performance reasons, it's always best to use &lt;code&gt;runner.done(callback)&lt;/code&gt; instead of &lt;code&gt;runner.then()&lt;/code&gt;, &lt;code&gt;runner.catch()&lt;/code&gt; or &lt;code&gt;runner.finally()&lt;/code&gt; unless you really need a digest to kick off afterwards.</source>
          <target state="translated">据记录， &lt;code&gt;animation.start()&lt;/code&gt; 将返回一个Promise对象，这是事实，但是，在运行器上还有一个名为 &lt;code&gt;.done(callbackFn)&lt;/code&gt; 的附加方法。 done方法的工作原理与 &lt;code&gt;.finally(callbackFn)&lt;/code&gt; 相同，但是它不会&lt;strong&gt;触发摘要的发生&lt;/strong&gt;。因此，出于性能原因，除非事后确实需要摘要，否则始终最好使用 &lt;code&gt;runner.done(callback)&lt;/code&gt; 而不是 &lt;code&gt;runner.then()&lt;/code&gt; ， &lt;code&gt;runner.catch()&lt;/code&gt; 或 &lt;code&gt;runner.finally()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9adf8cb48d55887fa324e58aa54a93785a13c110" translate="yes" xml:space="preserve">
          <source>It is important to be aware of this when writing tests for directives that use 'element' transclusion. If you place the directive on the root element of the DOM fragment that you pass to &lt;a href=&quot;../api/ng/service/%24compile&quot;&gt;&lt;code&gt;$compile&lt;/code&gt;&lt;/a&gt;, then the DOM node returned from the linking function will be the comment node and you will lose the ability to access the template and transcluded content.</source>
          <target state="translated">在为使用&amp;ldquo;元素&amp;rdquo;包含的指令编写测试时，请务必意识到这一点。如果将指令放在传递给&lt;a href=&quot;../api/ng/service/%24compile&quot;&gt; &lt;code&gt;$compile&lt;/code&gt; &lt;/a&gt;的DOM片段的根元素上，则从链接函数返回的DOM节点将成为注释节点，并且您将无法访问模板和已包含的内容。</target>
        </trans-unit>
        <trans-unit id="ade37c34e6742fe81576b7d98f9b8cab2717a032" translate="yes" xml:space="preserve">
          <source>It is important to realize that invoking a &lt;code&gt;$resource&lt;/code&gt; object method immediately returns an empty reference (object or array depending on &lt;code&gt;isArray&lt;/code&gt;). Once the data is returned from the server the existing reference is populated with the actual data. This is a useful trick since usually the resource is assigned to a model which is then rendered by the view. Having an empty object results in no rendering, once the data arrives from the server then the object is populated with the data and the view automatically re-renders itself showing the new data. This means that in most cases one never has to write a callback function for the action methods.</source>
          <target state="translated">重要的是要意识到调用 &lt;code&gt;$resource&lt;/code&gt; 对象方法会立即返回一个空引用（对象或数组取决于 &lt;code&gt;isArray&lt;/code&gt; ）。从服务器返回数据后，将使用实际数据填充现有引用。这是一个有用的技巧，因为通常资源会分配给模型，然后由视图呈现。如果对象为空，则不会呈现任何内容，一旦数据从服务器到达，该对象就会被数据填充，并且视图会自动重新渲染以显示新数据。这意味着在大多数情况下，无需为动作方法编写回调函数。</target>
        </trans-unit>
        <trans-unit id="44e11a7a5909b52ab207ef70f4ca59576a8afb49" translate="yes" xml:space="preserve">
          <source>It is mainly used on &lt;a href=&quot;../input/input%5Bradio%5D&quot;&gt;&lt;code&gt;input[radio]&lt;/code&gt;&lt;/a&gt; and option elements, so that when the element is selected, the &lt;a href=&quot;ngmodel&quot;&gt;&lt;code&gt;ngModel&lt;/code&gt;&lt;/a&gt; of that element (or its &lt;a href=&quot;select&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; parent element) is set to the bound value. It is especially useful for dynamically generated lists using &lt;a href=&quot;ngrepeat&quot;&gt;&lt;code&gt;ngRepeat&lt;/code&gt;&lt;/a&gt;, as shown below.</source>
          <target state="translated">它主要用于&lt;a href=&quot;../input/input%5Bradio%5D&quot;&gt; &lt;code&gt;input[radio]&lt;/code&gt; &lt;/a&gt;和option元素，因此，当选择该元素时，该元素（或其&lt;a href=&quot;select&quot;&gt; &lt;code&gt;select&lt;/code&gt; &lt;/a&gt;父元素）的&lt;a href=&quot;ngmodel&quot;&gt; &lt;code&gt;ngModel&lt;/code&gt; &lt;/a&gt;设置为绑定值。如下所示，它对于使用&lt;a href=&quot;ngrepeat&quot;&gt; &lt;code&gt;ngRepeat&lt;/code&gt; &lt;/a&gt;动态生成的列表特别有用。</target>
        </trans-unit>
        <trans-unit id="dd54d32cbd1f2ba51acb0890230e9b3c8d1d18e0" translate="yes" xml:space="preserve">
          <source>It is normal practice to attach your transcluded content (&lt;code&gt;clone&lt;/code&gt;) to the DOM inside your &lt;strong&gt;clone attach function&lt;/strong&gt;:</source>
          <target state="translated">通常的做法是将您包含的内容（ &lt;code&gt;clone&lt;/code&gt; ）&lt;strong&gt;附加&lt;/strong&gt;到&lt;strong&gt;克隆附加函数中&lt;/strong&gt;的DOM &lt;strong&gt;上&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="13587fb80feb5ab37440031b46d39c968c78429f" translate="yes" xml:space="preserve">
          <source>It is not possible to whitelist specific URLs/paths. The &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;query&lt;/code&gt; and &lt;code&gt;fragment&lt;/code&gt; parts of a URL will be ignored. For example, &lt;code&gt;https://foo.com/path/bar?query=baz#fragment&lt;/code&gt; will be treated as &lt;code&gt;https://foo.com&lt;/code&gt;, meaning that &lt;strong&gt;all&lt;/strong&gt; requests to URLs starting with &lt;code&gt;https://foo.com/&lt;/code&gt; will include the XSRF token.</source>
          <target state="translated">无法将特定的URL /路径列入白名单。URL 的 &lt;code&gt;path&lt;/code&gt; ， &lt;code&gt;query&lt;/code&gt; 和 &lt;code&gt;fragment&lt;/code&gt; 部分将被忽略。例如， &lt;code&gt;https://foo.com/path/bar?query=baz#fragment&lt;/code&gt; 将被视为 &lt;code&gt;https://foo.com&lt;/code&gt; ，这意味着对以 &lt;code&gt;https://foo.com/&lt;/code&gt; 开头的URL的&lt;strong&gt;所有&lt;/strong&gt;请求都将包括XSRF令牌。</target>
        </trans-unit>
        <trans-unit id="f5755149536ff4c33eaf7b094db38129ae71d347" translate="yes" xml:space="preserve">
          <source>It is often desirable to inline Injected functions and that's when setting the &lt;code&gt;$inject&lt;/code&gt; property is very inconvenient. In these situations using the array notation to specify the dependencies in a way that survives minification is a better choice:</source>
          <target state="translated">通常需要内联Injected函数，这就是在设置 &lt;code&gt;$inject&lt;/code&gt; 属性非常不方便时。在这些情况下，使用数组表示法以最小化生存的方式指定依赖项是更好的选择：</target>
        </trans-unit>
        <trans-unit id="ea74d8637b90b9e1696533460b703c6c41293ed9" translate="yes" xml:space="preserve">
          <source>It is possible that during the &lt;code&gt;enter&lt;/code&gt; animation, the &lt;code&gt;.message&lt;/code&gt; div will be briefly visible before it starts animating. In that case, you can add styles to the CSS that make sure the element stays hidden before the animation starts:</source>
          <target state="translated">在 &lt;code&gt;enter&lt;/code&gt; 动画期间， &lt;code&gt;.message&lt;/code&gt; div在开始动画制作之前可能会短暂可见。在这种情况下，您可以向CSS添加样式，以确保元素在动画开始之前保持隐藏状态：</target>
        </trans-unit>
        <trans-unit id="f82d2b045366df68d3ac3e59440164fdc698eb46" translate="yes" xml:space="preserve">
          <source>It is possible that during the &lt;code&gt;enter&lt;/code&gt; event, the &lt;code&gt;.message&lt;/code&gt; div will be briefly visible before it starts animating. In that case, you can add styles to the CSS that make sure the element stays hidden before the animation starts:</source>
          <target state="translated">在 &lt;code&gt;enter&lt;/code&gt; 事件期间， &lt;code&gt;.message&lt;/code&gt; div在开始动画制作之前可能会短暂可见。在这种情况下，您可以向CSS添加样式，以确保元素在动画开始之前保持隐藏状态：</target>
        </trans-unit>
        <trans-unit id="c69afb8c7919c982dfe15812d0593df59e687ac6" translate="yes" xml:space="preserve">
          <source>It is possible to access the context object using the identifier &lt;code&gt;this&lt;/code&gt; and the locals object using the identifier &lt;code&gt;$locals&lt;/code&gt;.</source>
          <target state="translated">可以使用标识符 &lt;code&gt;this&lt;/code&gt; 和上下文对象 &lt;code&gt;$locals&lt;/code&gt; 访问上下文对象。</target>
        </trans-unit>
        <trans-unit id="3066c08f5caeabdd7acdc8e45264d026b7139d6e" translate="yes" xml:space="preserve">
          <source>It is possible to create chains of any length and since a promise can be resolved with another promise (which will defer its resolution further), it is possible to pause/defer resolution of the promises at any point in the chain. This makes it possible to implement powerful APIs like $http's response interceptors.</source>
          <target state="translated">它可以创建任意长度的链,而且由于一个承诺可以用另一个承诺来解析(这将进一步推迟它的解析),因此可以在链中的任何一点暂停/推迟解析承诺。这使得实现强大的API成为可能,比如$http的响应拦截器。</target>
        </trans-unit>
        <trans-unit id="ccda427b3a1fede3c12595f91bdd135712e54499" translate="yes" xml:space="preserve">
          <source>It is possible to disable individual attributes added by ngAria with the &lt;a href=&quot;ngaria/provider/%24ariaprovider#config.html&quot;&gt;config&lt;/a&gt; method. For more details, see the &lt;a href=&quot;../guide/accessibility&quot;&gt;Developer Guide&lt;/a&gt;.</source>
          <target state="translated">可以使用&lt;a href=&quot;ngaria/provider/%24ariaprovider#config.html&quot;&gt;config&lt;/a&gt;方法禁用ngAria添加的单个属性。有关更多详细信息，请参见《&lt;a href=&quot;../guide/accessibility&quot;&gt;开发人员指南》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="463de9ded47806d9b1e436ee2e11963140db8b5f" translate="yes" xml:space="preserve">
          <source>It is possible to get &lt;code&gt;ngRepeat&lt;/code&gt; to iterate over the properties of an object using the following syntax:</source>
          <target state="translated">可以使用以下语法让 &lt;code&gt;ngRepeat&lt;/code&gt; 遍历对象的属性：</target>
        </trans-unit>
        <trans-unit id="e6efc27732c8ebe9e9e84ddd4403a59ab8aa7bee" translate="yes" xml:space="preserve">
          <source>It is possible to inject other providers into the provider function, but the injected provider must have been defined before the one that requires it.</source>
          <target state="translated">可以将其他提供者注入到提供者函数中,但注入的提供者必须在需要它的提供者之前被定义。</target>
        </trans-unit>
        <trans-unit id="996e7a28852c7c4983233eb69326521205c8d521" translate="yes" xml:space="preserve">
          <source>It is possible to make &lt;code&gt;ngAria&lt;/code&gt; ignore a specific element, by adding the &lt;code&gt;ng-aria-disable&lt;/code&gt; attribute on it. Note that only the element itself (and not its child elements) will be ignored.</source>
          <target state="translated">通过在其上添加 &lt;code&gt;ng-aria-disable&lt;/code&gt; 属性，可以使 &lt;code&gt;ngAria&lt;/code&gt; 忽略特定元素。请注意，将仅忽略元素本身（而不是其子元素）。</target>
        </trans-unit>
        <trans-unit id="7dcf70c9223ffd381f61a6b912e2f0febfd3f458" translate="yes" xml:space="preserve">
          <source>It is preferable to use &lt;code&gt;ngBind&lt;/code&gt; instead of &lt;code&gt;{{ expression }}&lt;/code&gt; if a template is momentarily displayed by the browser in its raw state before AngularJS compiles it. Since &lt;code&gt;ngBind&lt;/code&gt; is an element attribute, it makes the bindings invisible to the user while the page is loading.</source>
          <target state="translated">如果模板在AngularJS编译之前由浏览器暂时以其原始状态显示，则最好使用 &lt;code&gt;ngBind&lt;/code&gt; 代替 &lt;code&gt;{{ expression }}&lt;/code&gt; 。由于 &lt;code&gt;ngBind&lt;/code&gt; 是元素属性，因此在页面加载时，绑定使用户不可见。</target>
        </trans-unit>
        <trans-unit id="e7fa93572d942a68934418e0f950bd76f13eabf5" translate="yes" xml:space="preserve">
          <source>It is recommended that the&lt;code&gt;$animate&lt;/code&gt; service is always used when executing DOM-related procedures within directives.</source>
          <target state="translated">建议在指令中执行与DOM相关的过程时始终使用 &lt;code&gt;$animate&lt;/code&gt; 服务。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
