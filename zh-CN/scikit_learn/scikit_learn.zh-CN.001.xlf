<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="scikit_learn">
    <body>
      <group id="scikit_learn">
        <trans-unit id="4c12ce45ec0fc1260d3db3af878a4cd32e065f20" translate="yes" xml:space="preserve">
          <source># In this example, the RandomForestClassifier is removed clf1 = LogisticRegression() clf2 = RandomForestClassifier() eclf = VotingClassifier(estimators=[(&amp;lsquo;lr&amp;rsquo;, clf1), (&amp;lsquo;rf&amp;rsquo;, clf2)] eclf.set_params(rf=None)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6caba9e7661d80284021e31e8775d71c544cfff" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2007&amp;ndash;2018 The scikit-learn developers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839e4a2006b278a93c4dc0f1936567078302c3f3" translate="yes" xml:space="preserve">
          <source>&amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b93efcf5de2fc2f9a497f91fea1d8661cf8bf5" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;A Density-Based Algorithm for Discovering Clusters in Large Spatial Databases with Noise&amp;rdquo; Ester, M., H. P. Kriegel, J. Sander, and X. Xu, In Proceedings of the 2nd International Conference on Knowledge Discovery and Data Mining, Portland, OR, AAAI Press, pp. 226&amp;ndash;231. 1996</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c819d4a056ff13d10dae8adbf89cd0cca98db4d2" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;A Well-Conditioned Estimator for Large-Dimensional Covariance Matrices&amp;rdquo;, Ledoit and Wolf, Journal of Multivariate Analysis, Volume 88, Issue 2, February 2004, pages 365-411.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df81e6ad4ef98d1642c7fc8d470889bf1813a9f9" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;A receiver operating characteristic (ROC), or simply ROC curve, is a graphical plot which illustrates the performance of a binary classifier system as its discrimination threshold is varied. It is created by plotting the fraction of true positives out of the positives (TPR = true positive rate) vs. the fraction of false positives out of the negatives (FPR = false positive rate), at various threshold settings. TPR is also known as sensitivity, and FPR is one minus the specificity or true negative rate.&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d63ae8dbf8f5a0095d0d3b830d032332a06d9533" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Active set algorithms for isotonic regression; A unifying framework&amp;rdquo; by Michael J. Best and Nilotpal Chakravarti, section 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36538a5e2957eab623d94580bbebbfaca52c095" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;An Interior-Point Method for Large-Scale L1-Regularized Least Squares,&amp;rdquo; S. J. Kim, K. Koh, M. Lustig, S. Boyd and D. Gorinevsky, in IEEE Journal of Selected Topics in Signal Processing, 2007 (&lt;a href=&quot;https://web.stanford.edu/~boyd/papers/pdf/l1_ls.pdf&quot;&gt;Paper&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44e52f0331e4148d2e8106aa0127d0d23b2a297" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Classifier Chains for Multi-label Classification&amp;rdquo;, 2009.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56cf2456b7f9e4cd8d8e222055e0f4464772e958" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Connectionist learning procedures.&amp;rdquo; Artificial intelligence 40.1 (1989): 185-234.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5011a5b9e12a607e31d0835d7aaf05ca3e9747dd" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Fits the model to the training set X and returns the labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4867d5676587f6e2c567952929e88a768d0546c" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Learning to Find Pre-Images&amp;rdquo;, G BakIr et al, 2004.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26312713ac8491a62f30a5ef883ca67d15b53814" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Least Angle Regression&amp;rdquo;, Effron et al. &lt;a href=&quot;http://statweb.stanford.edu/~tibs/ftp/lars.pdf&quot;&gt;http://statweb.stanford.edu/~tibs/ftp/lars.pdf&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a1462d30c99fca44610b39260b9f22de4eca97" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Machine Learning: A Probabilistic Perspective&amp;rdquo; Murphy, K. P. - chapter 14.4.3, pp. 492-493, The MIT Press, 2012</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f01cce75791762a847eaf02a3b01da927f5dc50" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Modern Multidimensional Scaling - Theory and Applications&amp;rdquo; Borg, I.; Groenen P. Springer Series in Statistics (1997)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb5e226ab9471fdd8f31d9bbfc7310bc579b9e6" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Multidimensional scaling by optimizing goodness of fit to a nonmetric hypothesis&amp;rdquo; Kruskal, J. Psychometrika, 29, (1964)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0530876785ac4e7dbaeb8927a9c87d4ac73f45e0" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Nonmetric multidimensional scaling: a numerical method&amp;rdquo; Kruskal, J. Psychometrika, 29 (1964)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5edb84e90a90a40e2635472df20770e16ec22f3" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Notes on Regularized Least Squares&amp;rdquo;, Rifkin &amp;amp; Lippert (&lt;a href=&quot;http://cbcl.mit.edu/publications/ps/MIT-CSAIL-TR-2007-025.pdf&quot;&gt;technical report&lt;/a&gt;, &lt;a href=&quot;http://www.mit.edu/~9.520/spring07/Classes/rlsslides.pdf&quot;&gt;course slides&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35cdd62526d9d93a14885944eb0e346165ffc877" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;On the degrees of freedom of the lasso&amp;rdquo; Hui Zou, Trevor Hastie, and Robert Tibshirani Ann. Statist. Volume 35, Number 5 (2007), 2173-2192.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303c4608aaf59992214b4e0a71fc4bf5b1726582" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Pattern Recognition and Machine Learning. Springer&amp;rdquo;, Christopher M. Bishop, page 183, (First Edition)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d7d5c1ba559ee94364182a910d084045182ca3" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Regularization Path For Generalized linear Models by Coordinate Descent&amp;rdquo;, Friedman, Hastie &amp;amp; Tibshirani, J Stat Softw, 2010 (&lt;a href=&quot;https://www.jstatsoft.org/article/view/v033i01/v33i01.pdf&quot;&gt;Paper&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52cb6c2f42b943b18a7027d58ef663a9bc38de37" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Returns the mean accuracy on the given test data and labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa216479ffc06d38483714b8c3b70f3025140ba9" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Shrinkage Algorithms for MMSE Covariance Estimation&amp;rdquo; Chen et al., IEEE Trans. on Sign. Proc., Volume 58, Issue 10, October 2010.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57c95168f0ab3c1ec342d4ccad49a9e39a02b4f" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Solving multiclass learning problems via error-correcting output codes&amp;rdquo;, Dietterich T., Bakiri G., Journal of Artificial Intelligence Research 2, 1995.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0337ad1a627fdd2a4732f66dd1b3316f0af22a6e" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;The Brier score is a proper score function that measures the accuracy of probabilistic predictions. It is applicable to tasks in which predictions must assign probabilities to a set of mutually exclusive discrete outcomes.&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5381aeb1b032622e2ab6759130d9f9d6a6cbbb6" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;The Elements of Statistical Learning&amp;rdquo;, Hastie T., Tibshirani R., Friedman J., page 606 (second-edition) 2008.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af48d356d848ffd0632f1cbeddd4e2fc2afbf074" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;The Matthews correlation coefficient is used in machine learning as a measure of the quality of binary (two-class) classifications. It takes into account true and false positives and negatives and is generally regarded as a balanced measure which can be used even if the classes are of very different sizes. The MCC is in essence a correlation coefficient value between -1 and +1. A coefficient of +1 represents a perfect prediction, 0 an average random prediction and -1 an inverse prediction. The statistic is also known as the phi coefficient.&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4719ab7dcef8bd060cf1372d2e6101e2c6d55a" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;The error coding method and PICTs&amp;rdquo;, James G., Hastie T., Journal of Computational and Graphical statistics 7, 1998.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b025892a619c9c10d5299f987bcbdc0868015c97" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;braycurtis&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd96fb010cff159bfc1df81bcff9b08122150e3" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;canberra&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202c96169ffe400ef3796ab9e105879edd33f38b" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;chebyshev&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d56eb2fa43d973b67ea58730a00527f0db6d34" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;constant&amp;rdquo;: always predicts a constant label that is provided by the user. This is useful for metrics that evaluate a non-majority class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1ec3aab9793d72e519f917c5390064eb3e877f" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;constant&amp;rdquo;: always predicts a constant value that is provided by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b682edde1513cd71672244bf3c40ec67aa7d2ce" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;dice&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb493063337a86e6971495a1d480886b73dca53" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;euclidean&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437c578a2e6506f4d99957d2662614b7b2cb0ff3" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;hamming&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b72ef5f6626a65d01eb2980f70aecb4b665ad6" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;haversine&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8f78afd20398c2e1ee0359054e56c579b84509" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;jaccard&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a518ed5717652e86d96a0327b5a98416655753" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;kulsinski&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db5fc9a36e65fff0c542125d243ef63b6ef35ad" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;loky&amp;rdquo; used by default, can induce some communication and memory overhead when exchanging input and output data with the worker Python processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a296840340597d085b8e525106f74b6c008055" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;mahalanobis&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaeafcc5f2998de24b2cf07102a79b6b117f24ee" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;manhattan&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9306aa3fb30a58faf6d1e2e88d06a0be3a103ed" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;matching&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aaf6a8ee89b88480570c22cb8166fe4cfeddd4d" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;mean&amp;rdquo;: always predicts the mean of the training set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1274128c028c5e37224c5cfe2fb142d53044ff5a" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;median&amp;rdquo;: always predicts the median of the training set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc1c002f5549d844208c5e0e2f6d03fb8773287" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;minkowski&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b679248a53f72fa37a3a853b017354947b2a62" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;mixOmics&amp;rdquo; with function pls(X, Y, mode = &amp;ldquo;regression&amp;rdquo;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c64bfdbaeffd0fb50e62d0a553a9f941e627ad" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;most_frequent&amp;rdquo;: always predicts the most frequent label in the training set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2133e43534803e3bb4e4deb3cd1a94b8983a4732" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;multiprocessing&amp;rdquo; previous process-based backend based on &lt;code&gt;multiprocessing.Pool&lt;/code&gt;. Less robust than &lt;code&gt;loky&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4c3673fc4f8bc7ff7cb2e890f86b0dd8fa476f" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;pls&amp;rdquo; with function oscorespls.fit(X, Y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa27a27c9fb9a19d669108c99ae47ce6c727e112" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;plspm &amp;rdquo; with function plsreg2(X, Y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7acde6390786c94a04f676747d409b7a863e0aa9" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;prior&amp;rdquo;: always predicts the class that maximizes the class prior (like &amp;ldquo;most_frequent&amp;rdquo;) and &lt;code&gt;predict_proba&lt;/code&gt; returns the class prior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e5296ec0340af9e2932c5414d73e17cd87277e" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;pyfunc&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aecd8bcb5ccdf7c4c6dc65df0108280f48af3b5" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;quantile&amp;rdquo;: always predicts a specified quantile of the training set, provided with the quantile parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85af992408a96b67038128a4662890d0021b279" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;rogerstanimoto&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec48505cc8e94ecb0f1b9a85a0f76f0d2007328" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;russellrao&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89641cb2b3cf24101ea8cf423888cb56c4efc43b" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;seuclidean&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27e9114d0313081ef47c684cc50ae669ef0c1ea" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;skewedness&amp;rdquo; parameter of the kernel. Needs to be cross-validated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c2b97a2fecadb4f59f342baf95a85eb00a7c57" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;sokalmichener&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4ce826ad36c1d7192d5283a8c46790c740fd46" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;sokalsneath&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79bff885f7a0cf65586e4e2e354e1b6473728d6" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;stratified&amp;rdquo;: generates predictions by respecting the training set&amp;rsquo;s class distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b0a1f670e2b261ab600320fa5c1b61104765e5" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;threading&amp;rdquo; is a very low-overhead backend but it suffers from the Python Global Interpreter Lock if the called function relies a lot on Python objects. &amp;ldquo;threading&amp;rdquo; is mostly useful when the execution bottleneck is a compiled extension that explicitly releases the GIL (for instance a Cython loop wrapped in a &amp;ldquo;with nogil&amp;rdquo; block or an expensive call to a library such as NumPy).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3ec7221ec5942a67c1ca2a9bbc5c7c25a476f9" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;uniform&amp;rdquo;: generates predictions uniformly at random.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ec8798622c5edd370c4a891479f2fb8151de3a" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;wminkowski&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba6846e57976fe6b150179c8546c8a9ceeaef9a" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;D&amp;rsquo; : Dijkstra&amp;rsquo;s algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9b561b23b0e8c945fe65bffa0941d9fb69b912" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;DESCR&amp;rsquo;, a description of the dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32800398ab7bc067be834e459c6928182e7a580" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;FW&amp;rsquo; : Floyd-Warshall algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373dfe414161c948498f13a177ea58decd503874" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;accuracy&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add6d6563e91abc67abd3bb74ec08f1856f7b03b" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;adam&amp;rsquo; refers to a stochastic gradient-based optimizer proposed by Kingma, Diederik, and Jimmy Ba</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4636d191323dde3b1d19bce81630b6d5be2efac" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;adaptive&amp;rsquo; keeps the learning rate constant to &amp;lsquo;learning_rate_init&amp;rsquo; as long as training loss keeps decreasing. Each time two consecutive epochs fail to decrease training loss by at least tol, or fail to increase validation score by at least tol if &amp;lsquo;early_stopping&amp;rsquo; is on, the current learning rate is divided by 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7483f448efcd45be49c077eca1d588dce4b921" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;adaptive&amp;rsquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87dca54830e053a7f208e142d5cacd71b2a15597" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;additive_chi2&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f776dc78318c0b88123e1833c0eb404da8c2254" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;adjusted_mutual_info_score&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd874c614f17cf5fe1f5c3ad3b771bdb560fbfc3" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;adjusted_rand_score&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17fda797383b2ecfc54b11b111cbc0941b390b8a" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;all&amp;rsquo; (default): All features are treated as categorical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afaf9a92ef1b520790518735633f4a8cbe9cfdd7" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;allow-nan&amp;rsquo;: accept only np.nan values in X. Values cannot be infinite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f077d5d5736bbf1f57503052f4174fa5760c23aa" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;arpack&amp;rsquo; : Use Arnoldi decomposition to find the eigenvalues and eigenvectors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd343c29524608811770c2d588e5b9bd64bdae64" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;auto&amp;rsquo; : Attempt to choose the most efficient solver for the given problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d28853a68febd745376328681abbb96181613da" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;auto&amp;rsquo; : Determine categories automatically from the training data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5756b699c72d18da565d049572625d80d0cef40b" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;auto&amp;rsquo; : attempt to choose the best algorithm automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75038e94c15c3c6e71b19f3fd13fdf4be5bb1f4" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;auto&amp;rsquo; : determine value range from training data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11426ebd4aa13157ebb1d302b6ec6c024a98ea4" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;auto&amp;rsquo; : do not precompute distances if n_samples * n_clusters &amp;gt; 12 million. This corresponds to about 100MB overhead per job using double precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ef50388436f6e17a408e8eb8b1cc4ae12a3b02" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;auto&amp;rsquo; chooses the solver automatically based on the type of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c67f9e139e8ce3382d8f7545d003c206a17a138" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;auto&amp;rsquo; will attempt to decide the most appropriate algorithm based on the values passed to &lt;a href=&quot;#sklearn.neighbors.KNeighborsClassifier.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27dd4eb100080228dd2e0e06c1c2615da8c7ddc6" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;auto&amp;rsquo; will attempt to decide the most appropriate algorithm based on the values passed to &lt;a href=&quot;#sklearn.neighbors.KNeighborsRegressor.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fe352eb190c244700c7b6731349f41a42a8cf5" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;auto&amp;rsquo; will attempt to decide the most appropriate algorithm based on the values passed to &lt;a href=&quot;#sklearn.neighbors.LocalOutlierFactor.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a9ce158479fb69faac5e3d3eaf46feea8b3bcc" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;auto&amp;rsquo; will attempt to decide the most appropriate algorithm based on the values passed to &lt;a href=&quot;#sklearn.neighbors.NearestNeighbors.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd0b0d0478f2a0ab563285e27b5c9cb7a38c42d" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;auto&amp;rsquo; will attempt to decide the most appropriate algorithm based on the values passed to &lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsClassifier.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec184184b639e98a2d28832f775792a4ff9db18e" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;auto&amp;rsquo; will attempt to decide the most appropriate algorithm based on the values passed to &lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsRegressor.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eceb3c3be62595a5fce8c0db6ef560d7d08f9088" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;auto&amp;rsquo;: automatic shrinkage using the Ledoit-Wolf lemma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043abfc5ae40898d287404a5a705d87a8e77feff" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;average_precision&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04b41b3b7f888be934247fd70fae68024981354" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;balanced_accuracy&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f757fc7c9cd87dc50e0753ca10bb11692558d4" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;ball_tree&amp;rsquo; will use &lt;a href=&quot;sklearn.neighbors.balltree#sklearn.neighbors.BallTree&quot;&gt;&lt;code&gt;BallTree&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4cc9e7f9ace55a6894e69cd11641e608992186" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;binary&amp;rsquo;: &lt;code&gt;y&lt;/code&gt; contains &amp;lt;= 2 discrete values and is 1d or a column vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c9e938bea5a6440df633b4aee1189b6b544850" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;box-cox&amp;rsquo; &lt;a href=&quot;#rf3e1504535de-2&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;, only works with strictly positive values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea44aad8cf9b57cf904b7aeaf4b154b7f886575" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;brier_score_loss&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0b80061096ea46df0cba49463e79a5714bcab3" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;brute&amp;rsquo; will use a brute-force search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fadc2216d55b96ede6c679927d04586a77d6f8e1" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;chi2&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3139a4cd3c1626e5b8d721b3400ed5ee3b90a233" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;cholesky&amp;rsquo; uses the standard scipy.linalg.solve function to obtain a closed-form solution via a Cholesky decomposition of dot(X.T, X)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ca6c7c8efc3adf7debc78a19956d6ed2972d72" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;cholesky&amp;rsquo; uses the standard scipy.linalg.solve function to obtain a closed-form solution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4f87e74030c26b0837de2d2cda48cf44fd11d9" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;cityblock&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d057aadbfa97ec9e5d3062e4df74c9a3a80571" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;completeness_score&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf077622ba130ca8259d66b03d1468173063c64" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;constant&amp;rsquo; is a constant learning rate given by &amp;lsquo;learning_rate_init&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9368b1ed1236f74327885cccce7f4557ef2fc19d" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;constant&amp;rsquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237cff79f232f668854437ee9a9bda65b8dc2c46" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;continuous&amp;rsquo;: &lt;code&gt;y&lt;/code&gt; is an array-like of floats that are not all integers, and is 1d or a column vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e826086877160f832c97108668a58cc6e19f3e60" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;continuous-multioutput&amp;rsquo;: &lt;code&gt;y&lt;/code&gt; is a 2d array of floats that are not all integers, and both dimensions are of size &amp;gt; 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b9f533bd6f014b52897b161e37be7ba91f36c9" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;cosine&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166b904ab4e4be24d41cdb743dc281d847b4c2dc" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;custom&amp;rsquo;: use custom matrices W and H</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae95234adb2a24329be58932114c12d496f54107" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;data&amp;rsquo;, the data to learn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c07c2dded2b9add301ffb0fef08d8f9d0dc8fd18" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;dense&amp;rsquo; : Use a direct solver (i.e. LAPACK) for the eigenvalue decomposition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce4e7982651247ebe77a05c9eb0139beb7144061" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;diag&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f973db2e98fa629001be088c4f15de74b1e40705" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;distance&amp;rsquo; : weight points by the inverse of their distance. in this case, closer neighbors of a query point will have a greater influence than neighbors which are further away.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059beb55cdd7797488b1cc1672f611f68d6008ab" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;eigen&amp;rsquo;: Eigenvalue decomposition, can be combined with shrinkage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a154fba4c331c08125f94d5475f3b13ed713dfb7" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;euclidean&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b221316a08f24f2c84a4b898d4e2c3771a258675" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;euclidean&amp;rsquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0ee83fbe7bf7878f2cb7f301702432aa9ba25f" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;explained_variance&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2925500c03e9bd4649458c0dc840c2c687cb162" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;f1&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de10790cdf4ad62826de4a6fa3386d8a9f1244b7" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;f1_macro&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4893615cbaa0f82ffdc488ce3176ef7552e644" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;f1_micro&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c037e14aa71945a5f58e4198068b1200b3c29b35" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;f1_samples&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53675e7f9d6a44e1d72892bab1c91cc6ec0c4d27" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;f1_weighted&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9698faf323050744f473da4aadafe620e6d1528" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;fowlkes_mallows_score&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff55c558a515ddc8cfe4953ce0c995f922f9d5a" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;full&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7174ee3841806d077d0a3af9a406822d80730d2e" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;headers&amp;rsquo; follows an exact standard; the other filters are not always correct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9da5d4adeea40198845fb538e3bd95657a93c55" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;headers&amp;rsquo; removes newsgroup headers, &amp;lsquo;footers&amp;rsquo; removes blocks at the ends of posts that look like signatures, and &amp;lsquo;quotes&amp;rsquo; removes lines that appear to be quoting another post.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55227b4abb049ca9dee868aba058fce1c072f76" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;homogeneity_score&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220b4ddda830f2e40f2cadc66c4dba40ded92919" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;identity&amp;rsquo;, no-op activation, useful to implement linear bottleneck, returns f(x) = x</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e7f69c24ef66fe6d48f10775fd87efc7036a3c" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;invscaling&amp;rsquo; gradually decreases the learning rate &lt;code&gt;learning_rate_&lt;/code&gt; at each time step &amp;lsquo;t&amp;rsquo; using an inverse scaling exponent of &amp;lsquo;power_t&amp;rsquo;. effective_learning_rate = learning_rate_init / pow(t, power_t)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f72c93a4988ea48eb3d57fc22067f035b403320" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;invscaling&amp;rsquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcab940294748f69f73b64d812447ba2cb574ecb" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;invscaling&amp;rsquo;: [default]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8256ceb582dc4e179532584de163caa85a7b840" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;k-means++&amp;rsquo; : selects initial cluster centers for k-mean clustering in a smart way to speed up convergence. See section Notes in k_init for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59896bf47d8a5c154c77a2287be890e4e4bd0b4d" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;kd_tree&amp;rsquo; will use &lt;a href=&quot;sklearn.neighbors.kdtree#sklearn.neighbors.KDTree&quot;&gt;&lt;code&gt;KDTree&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edcb7f2869c8a7c4c55c86ee0a8629bbc6ac407f" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;kmeans&amp;rsquo;: The discretization is based on the centroids of a KMeans clustering procedure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102871ba4b17e3bf1940fd144795b906a90ea968" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;l1&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688a45a6d1ca60eb1ef6405c5d4a4c94a5733787" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;l2&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7194c38dc5b941ab1f3356dfa04001e0e2e4abd" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;laplacian&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f9d3605142577ae88d04afc95378e1b3418520" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;lbfgs&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ace01b5f681431bfada6345e8132c24c3e5372" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;lbfgs&amp;rsquo; is an optimizer in the family of quasi-Newton methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f24b0156c7722dc82cc90c71630426fb2397e7" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;liblinear&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8254e467271de5e896da51ec86ab4042ba04ac5" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;liblinear&amp;rsquo; might be slower in LogisticRegressionCV because it does not handle warm-starting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1d8181d8d924ea91e91481258778cb08232120" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;linear&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf7b0eed4a353664c1dbd75c38865f5decbc588" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;logistic&amp;rsquo;, the logistic sigmoid function, returns f(x) = 1 / (1 + exp(-x)).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ddd289ba21093a8fbfa442704eb1ff1ea5e7b2b" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;loky&amp;rsquo; is recommended to run functions that manipulate Python objects. &amp;lsquo;threading&amp;rsquo; is a low-overhead alternative that is most efficient for functions that release the Global Interpreter Lock: e.g. I/O-bound code or CPU-bound code in a few calls to native code that explicitly releases the GIL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f101d4735e4b9c7976e3fc29a7652bb607945c" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;loky&amp;rsquo;: single-host, process-based parallelism (used by default),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e51821493c9bd3f11984cc5ed28445af4c48f6" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;lsqr&amp;rsquo; uses the dedicated regularized least-squares routine scipy.sparse.linalg.lsqr. It is the fastest and uses an iterative procedure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5dc51066aa7fbb90b504c663da5283a2c189a8" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;lsqr&amp;rsquo;: Least squares solution, can be combined with shrinkage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e023914167ab4eaa0aceac5f7b8c3d4c2f30baf6" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;manhattan&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759d1003347f8ade181bbc4a4220d8e1294cd03d" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;multiclass&amp;rsquo;: &lt;code&gt;y&lt;/code&gt; contains more than two discrete values, is not a sequence of sequences, and is 1d or a column vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921085b687be21d5dbaf00ab0992e8981db34778" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;multiclass-multioutput&amp;rsquo;: &lt;code&gt;y&lt;/code&gt; is a 2d array that contains more than two discrete values, is not a sequence of sequences, and both dimensions are of size &amp;gt; 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd7943a8282f0169cfec8ae79d8839512e2d3c80" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;multilabel-indicator&amp;rsquo;: &lt;code&gt;y&lt;/code&gt; is a label indicator matrix, an array of two dimensions with at least two columns, and at most 2 unique values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43fafe0b976f477c7ab7fc3eb10ff1e865cd29a" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;multiprocessing&amp;rsquo;: legacy single-host, process-based parallelism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7072e08f0093ad7cfd6f8cb43e85d99bf45c0181" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;mutual_info_score&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bddd7b0a8eb42c9ea3b459a6482c78b861acc096" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;nearest_neighbors&amp;rsquo; : construct affinity matrix by knn graph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e0f4b05ff89d07385615655719ac5e3dc4c3ac" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;neg_log_loss&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="501cc3b70f43847c4fdc30eb9c3b52f22cb7b524" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;neg_mean_absolute_error&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff8efe385a40c087744aadff53ab4c9352e1063e" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;neg_mean_squared_error&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aff37ca68a2f4051dd94e5e5ad5a93bb6c54132" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;neg_mean_squared_log_error&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e040caa3146c7393363b94aed6c9406753f61d" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;neg_median_absolute_error&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42d5ae15bd88d9c1e63aa53cc520dede2e3b804" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;newton-cg&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8184b5eaab931aee99993195c91302f97dc02006" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;newton-cg&amp;rsquo;, &amp;lsquo;lbfgs&amp;rsquo; and &amp;lsquo;sag&amp;rsquo; only handle L2 penalty, whereas &amp;lsquo;liblinear&amp;rsquo; and &amp;lsquo;saga&amp;rsquo; handle L1 penalty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d19051e48eb6c2d2fbe1d4e4a50c625f610af7d" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;nndsvd&amp;rsquo;: Nonnegative Double Singular Value Decomposition (NNDSVD)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fcf4917b001e1f1c0562f18e67c8990e6a4d9c4" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;nndsvda&amp;rsquo;: NNDSVD with zeros filled with the average of X</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222465678b98760425aaa30372482f3c693ea25d" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;nndsvdar&amp;rsquo;: NNDSVD with zeros filled with small random values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0546bf61a70cee5fd2c41fc245d690e19b1743" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;normalized_mutual_info_score&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb91b811953c59c86a12293f463ff0016c23d48" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;optimal&amp;rsquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b9d71812c7fb0ca2eb604bd68c1beb2c1e315d" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;optimal&amp;rsquo;: [default]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9add0fdbe5505ca485313f0859d31eec6bd2df31" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;poly&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebe8128e78cf8dab69126a4a97a0b394d2c01e4" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;polynomial&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9731c98e00578f3b12428602165b25d866476f" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;precision&amp;rsquo; etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ae306f8dfb6c502013011b18a5aa28620ad892" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;precomputed&amp;rsquo; : interpret X as precomputed affinity matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09404d060568fb7f63e508dac13d86fbeec654f" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;precomputed&amp;rsquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47bdd23775eac83e22a949a9b32b527ffe76121b" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;r2&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4e2dbfd0d600a5f02bfe9654d18ab39b72e3ff" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;random&amp;rsquo;: choose k observations (rows) at random from data for the initial centroids.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07759291446b7c8760260324a2ac7bf34023c2f9" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;random&amp;rsquo;: non-negative random matrices, scaled with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4f4c4480068ca6773477a2a28f967462399d18" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;raw_values&amp;rsquo; :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d7cb0478e1ff03d5b3a5905190f03fb2130066" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;rbf&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147185ddf2750d6a1ceca55827f4bde3dea2f0e1" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;rbf&amp;rsquo; : construct affinity matrix by rbf kernel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5605d8881dfecf23a6366bcca129b908e33447" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;recall&amp;rsquo; etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3b6e7dee2c6ce40d6b1a2cb6dc5eb5ce618f7a" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;relu&amp;rsquo;, the rectified linear unit function, returns f(x) = max(0, x)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8434538812a0e2e4511c509ae4558f0ec9810ef4" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;roc_auc&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2eae830fec117e4e84cc03d02d9dbc132d8546e" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;sag&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a1e116cf4be89b88ea12761f9ca31d0bcaea42a" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;sag&amp;rsquo; uses a Stochastic Average Gradient descent, and &amp;lsquo;saga&amp;rsquo; uses its improved, unbiased version named SAGA. Both methods also use an iterative procedure, and are often faster than other solvers when both n_samples and n_features are large. Note that &amp;lsquo;sag&amp;rsquo; and &amp;lsquo;saga&amp;rsquo; fast convergence is only guaranteed on features with approximately the same scale. You can preprocess the data with a scaler from sklearn.preprocessing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ae336ac194f6a72cbacf46993e66c920120b84" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;sag&amp;rsquo; uses a Stochastic Average Gradient descent, and &amp;lsquo;saga&amp;rsquo; uses its unbiased and more flexible version named SAGA. Both methods use an iterative procedure, and are often faster than other solvers when both n_samples and n_features are large. Note that &amp;lsquo;sag&amp;rsquo; and &amp;lsquo;saga&amp;rsquo; fast convergence is only guaranteed on features with approximately the same scale. You can preprocess the data with a scaler from sklearn.preprocessing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab19fb467c4a0536c4fb8b253edd0cfc3aec2d84" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;saga&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dddd64c432ca225ee0ad0617d62fcb1b2d767ce" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;sgd&amp;rsquo; refers to stochastic gradient descent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5febcbc796aa28e932859e820af0602b2fcb5bd3" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;sigmoid&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79d00a21257db9c9e40ecfaf4c0d34de8fa8b7e" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;sparse_cg&amp;rsquo; uses the conjugate gradient solver as found in scipy.sparse.linalg.cg. As an iterative algorithm, this solver is more appropriate than &amp;lsquo;cholesky&amp;rsquo; for large-scale data (possibility to set &lt;code&gt;tol&lt;/code&gt; and &lt;code&gt;max_iter&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a466bb193400399047e377e5ae91d73064553a3" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;spherical&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a2ba507253331419dec5c0ddfe360057f2537f" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;svd&amp;rsquo; uses a Singular Value Decomposition of X to compute the Ridge coefficients. More stable for singular matrices than &amp;lsquo;cholesky&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4322fe99a731e931296aa12dd99b22dfd994014f" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;svd&amp;rsquo;: Singular value decomposition (default). Does not compute the covariance matrix, therefore this solver is recommended for data with a large number of features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d088fb43abe1f75bd56609cea5e471bb67a53d8d" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;tanh&amp;rsquo;, the hyperbolic tan function, returns f(x) = tanh(x).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e06add7e16f2e216db049c4ce5d4c8e3011e22d6" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;target&amp;rsquo;, the regression target for each sample.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146bff84413dd607ac44eefd3a5e47809d744e1f" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;threading&amp;rsquo;: single-host, thread-based parallelism,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded24a800860964069521ef65765789c18d95b9e" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;tied&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f0d468946854b453b9cf41d2dbf6251e6d415bc" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;uniform&amp;rsquo; : uniform weights. All points in each neighborhood are weighted equally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6396f58bd0743ab2f25e5b2db518f441870392bb" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;uniform&amp;rsquo;: The discretization is uniform in each feature, which means that the bin widths are constant in each dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd0b74829cf7cf488a95f575bf37faf65dffa55" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;uniform_average&amp;rsquo; :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8478f626687f585af13180337e65af78616fc31f" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;unknown&amp;rsquo;: &lt;code&gt;y&lt;/code&gt; is array-like but none of the above, such as a 3d array, sequence of sequences, or an array of non-sequence objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d545b4b6de05aafcc88e458a53358b372b09d9b3" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;v_measure_score&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5075ea1671c91f47a7d6cb7d421d06de1dd089" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;variance_weighted&amp;rsquo; :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6a585983be4ac8534f64cbd7f49ce16bb89d4d" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;yeo-johnson&amp;rsquo; &lt;a href=&quot;#rf3e1504535de-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;, works with positive and negative values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d8c48010dc495c8c0ca446499203cb84c0223d" translate="yes" xml:space="preserve">
          <source>&amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989781ae4dfcc3e736a70efb10a501d50a7a13d4" translate="yes" xml:space="preserve">
          <source>(1 - eps) ||u - v||^2 &amp;lt; ||p(u) - p(v)||^2 &amp;lt; (1 + eps) ||u - v||^2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d57a180345113d858207184393cf6552422b76d" translate="yes" xml:space="preserve">
          <source>(1 - shrinkage) * cov + shrinkage * mu * np.identity(n_features)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4407f87017feb2cf412d4e565d775ec0c59212bc" translate="yes" xml:space="preserve">
          <source>(1) S. Aeberhard, D. Coomans and O. de Vel, Comparison of Classifiers in High Dimensional Settings, Tech. Rep. no. 92-02, (1992), Dept. of Computer Science and Dept. of Mathematics and Statistics, James Cook University of North Queensland. (Also submitted to Technometrics).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5372e7c9666d5efad05c6ced70de3f0d5112ce" translate="yes" xml:space="preserve">
          <source>(2) S. Aeberhard, D. Coomans and O. de Vel, &amp;ldquo;THE CLASSIFICATION PERFORMANCE OF RDA&amp;rdquo; Tech. Rep. no. 92-01, (1992), Dept. of Computer Science and Dept. of Mathematics and Statistics, James Cook University of North Queensland. (Also submitted to Journal of Chemometrics).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9711c25ec39c38b0b1be8add87fa4f09accafafe" translate="yes" xml:space="preserve">
          <source>(A &lt;a href=&quot;generated/sklearn.pipeline.featureunion#sklearn.pipeline.FeatureUnion&quot;&gt;&lt;code&gt;FeatureUnion&lt;/code&gt;&lt;/a&gt; has no way of checking whether two transformers might produce identical features. It only produces a union when the feature sets are disjoint, and making sure they are the caller&amp;rsquo;s responsibility.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db1570eb043cb0871866030783765c3771addc4" translate="yes" xml:space="preserve">
          <source>(Depending on the version of &lt;code&gt;chardet&lt;/code&gt;, it might get the first one wrong.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94204f0bb4804d2b780fbfe709201b86a81603d" translate="yes" xml:space="preserve">
          <source>(Error-Correcting) Output-Code multiclass strategy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e9df290115684adde6f90c8faafa3aaa14ad0c" translate="yes" xml:space="preserve">
          <source>(Lucene users might recognize these names, but be aware that scikit-learn concepts may not map one-to-one onto Lucene concepts.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414f9d95482e7542c0236dc0db5102a747450a3b" translate="yes" xml:space="preserve">
          <source>(NNEQ + N - NTT) / (NNEQ + N)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b5fe624313bc201c761a306bbbfa0882f1986f" translate="yes" xml:space="preserve">
          <source>(Note that this will not filter out punctuation.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1b3f7f872b7eee6eb7882d0f240ef6030f1410" translate="yes" xml:space="preserve">
          <source>(Path to) a file to load. If a path ends in &amp;ldquo;.gz&amp;rdquo; or &amp;ldquo;.bz2&amp;rdquo;, it will be uncompressed on the fly. If an integer is passed, it is assumed to be a file descriptor. A file-like or file descriptor will not be closed by this function. A file-like object must be opened in binary mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee880c25620c4a4cb73140a6dc6f91e4592e987" translate="yes" xml:space="preserve">
          <source>(Paths of) files to load. If a path ends in &amp;ldquo;.gz&amp;rdquo; or &amp;ldquo;.bz2&amp;rdquo;, it will be uncompressed on the fly. If an integer is passed, it is assumed to be a file descriptor. File-likes and file descriptors will not be closed by this function. File-like objects must be opened in binary mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06a156fe9cc1247318fbdbf56cf93f26dd974d3" translate="yes" xml:space="preserve">
          <source>(The example &lt;a href=&quot;../auto_examples/text/plot_document_classification_20newsgroups#sphx-glr-auto-examples-text-plot-document-classification-20newsgroups-py&quot;&gt;Classification of text documents using sparse features&lt;/a&gt; shuffles the training and test data, instead of segmenting by time, and in that case multinomial Naive Bayes gets a much higher F-score of 0.88. Are you suspicious yet of what&amp;rsquo;s going on inside this classifier?)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50207a6d07dad54746018c200256496f07e3bb8f" translate="yes" xml:space="preserve">
          <source>(better when sparsity is not desired)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac978891c454ae2897949b033797ae45c2774ae" translate="yes" xml:space="preserve">
          <source>(default=None) The number of centers to generate, or the fixed center locations. If n_samples is an int and centers is None, 3 centers are generated. If n_samples is array-like, centers must be either None or an array of length equal to the length of n_samples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97af1eb077b228c54fb074b91ba2965707b86090" translate="yes" xml:space="preserve">
          <source>(generally faster, less accurate alternative to NNDSVDa for when sparsity is not desired)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6236c31b01ec47a571f092bddab6586a8a0ade" translate="yes" xml:space="preserve">
          <source>(image_height, image_width, n_channels) The original image data. For color images, the last dimension specifies the channel: a RGB image would have &lt;code&gt;n_channels=3&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdaa261118aa959974f7568ada27bb3ad8ab723c" translate="yes" xml:space="preserve">
          <source>(image_height, image_width, n_channels) the size of the image that will be reconstructed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2139006e8f98a79674f8f8541c15e2de5332f91" translate="yes" xml:space="preserve">
          <source>(n_patches, patch_height, patch_width, n_channels) The collection of patches extracted from the image, where &lt;code&gt;n_patches&lt;/code&gt; is either &lt;code&gt;max_patches&lt;/code&gt; or the total number of patches that can be extracted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c17fdb3db93529a214761a75b13da97a09870b0" translate="yes" xml:space="preserve">
          <source>(n_patches, patch_height, patch_width, n_channels) The collection of patches extracted from the images, where &lt;code&gt;n_patches&lt;/code&gt; is either &lt;code&gt;n_samples * max_patches&lt;/code&gt; or the total number of patches that can be extracted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc1ca6324c226c30cefb8635fcb48dd1fa3dd8f" translate="yes" xml:space="preserve">
          <source>(n_patches, patch_height, patch_width, n_channels) The complete set of patches. If the patches contain colour information, channels are indexed along the last dimension: RGB patches would have &lt;code&gt;n_channels=3&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04daff425e74de5ce61c375ac3ea872d577043ed" translate="yes" xml:space="preserve">
          <source>(n_samples, image_height, image_width, n_channels) Array of images from which to extract patches. For color images, the last dimension specifies the channel: a RGB image would have &lt;code&gt;n_channels=3&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4a4bc6f08191ff38081f701140d291ed35478c" translate="yes" xml:space="preserve">
          <source>(pairwise_distances(X, Y=Y, metric=metric).argmin(axis=axis),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544c766466ebb079f500fc0d337881bc1d258b48" translate="yes" xml:space="preserve">
          <source>+sqrt(s) / sqrt(n_components) with probability 1 / 2s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b842ae134391b57d347e8234deda25f0e742d03f" translate="yes" xml:space="preserve">
          <source>-SA is obtained by simply selecting all the normal data, and a small proportion of abnormal data to gives an anomaly proportion of 1%.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="836fd01e60c11eb84a130d28b29a82cc0ed6ffe1" translate="yes" xml:space="preserve">
          <source>-SF is obtained as in [2] by simply picking up the data whose attribute logged_in is positive, thus focusing on the intrusion attack, which gives a proportion of 0.3% of attack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a97fb92e342c49cf5428be081c75d81293230513" translate="yes" xml:space="preserve">
          <source>-http and smtp are two subsets of SF corresponding with third feature equal to &amp;lsquo;http&amp;rsquo; (resp. to &amp;lsquo;smtp&amp;rsquo;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3721dade3df2e5febcc78332425b0b1738280a18" translate="yes" xml:space="preserve">
          <source>-log P(yt|yp) = -(yt log(yp) + (1 - yt) log(1 - yp))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc833f9bb0e85208f3586aaee04521ecd92ee171" translate="yes" xml:space="preserve">
          <source>-sqrt(s) / sqrt(n_components) with probability 1 / 2s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f020498bb5fc59ae727e211ca1c76f868237634" translate="yes" xml:space="preserve">
          <source>.ARDRegression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7a466fffd5c2b25833afc35fe270da06d43b6f" translate="yes" xml:space="preserve">
          <source>.ARDRegression()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7978b9d7be05c5d2aee91696b5b276fc3f16f6af" translate="yes" xml:space="preserve">
          <source>.ARDRegression.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0945a4c75b9117e52f83d305c08797a67bcf709" translate="yes" xml:space="preserve">
          <source>.ARDRegression.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0fa96a16e66f29b656d2b6b4436eda77288dd8" translate="yes" xml:space="preserve">
          <source>.ARDRegression.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ef505cb7edc5e43c80dfca44027b3d72d00f67" translate="yes" xml:space="preserve">
          <source>.ARDRegression.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4846a7cf0a3af4c6926e6305a2dc21955ae499bf" translate="yes" xml:space="preserve">
          <source>.ARDRegression.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80176dfb13fea84244c5e3e23cf33efcaf015797" translate="yes" xml:space="preserve">
          <source>.ARDRegression.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="339913a1296be9269c7b10432a2ad1b86fee1035" translate="yes" xml:space="preserve">
          <source>.AdaBoostClassifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d87f52a6be27c1aba2c9c2c0e39bb0d687c283" translate="yes" xml:space="preserve">
          <source>.AdaBoostClassifier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31e39f67c4c9bdde550b4b71f8c6be3b2e8c79d" translate="yes" xml:space="preserve">
          <source>.AdaBoostClassifier.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f19d67f87b3ebc17b96c76df558e69b5459efe" translate="yes" xml:space="preserve">
          <source>.AdaBoostClassifier.decision_function()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc9bce075ec07badd54674b175c9b09b4108b0e" translate="yes" xml:space="preserve">
          <source>.AdaBoostClassifier.feature_importances_</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696eb826932e542a2fd78eee50d0b14ed6a6e8c2" translate="yes" xml:space="preserve">
          <source>.AdaBoostClassifier.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87e3ea6b2c020dc55d2ab5974e696f900393d8e" translate="yes" xml:space="preserve">
          <source>.AdaBoostClassifier.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cdc5f89fa2e60c372bb8424c7fbbc310a807635" translate="yes" xml:space="preserve">
          <source>.AdaBoostClassifier.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4819cd5de00b1abd5774ee067f4dff3e757b3c44" translate="yes" xml:space="preserve">
          <source>.AdaBoostClassifier.predict_log_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d503e1b0c168c8c828ee8029f3085b8d25fd85c" translate="yes" xml:space="preserve">
          <source>.AdaBoostClassifier.predict_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4475135cfd0c5172453e6789308c769ab503bf6c" translate="yes" xml:space="preserve">
          <source>.AdaBoostClassifier.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2c2766c1b2af35ffd081012cf6be6891e6b1bd" translate="yes" xml:space="preserve">
          <source>.AdaBoostClassifier.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e454334e93d41ae29ae723d1809c7f2054eee7f" translate="yes" xml:space="preserve">
          <source>.AdaBoostClassifier.staged_decision_function()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7057e236e799688431005c1ebe0c149e55c21982" translate="yes" xml:space="preserve">
          <source>.AdaBoostClassifier.staged_predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e2f8eca841505dd2d172eb444acd9b40b8dc2c" translate="yes" xml:space="preserve">
          <source>.AdaBoostClassifier.staged_predict_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64dbcf847d26fb676761f1adb228c7acf56987f" translate="yes" xml:space="preserve">
          <source>.AdaBoostClassifier.staged_score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4ebd9b067744eb3e2f8927a69683cd904e1fe8" translate="yes" xml:space="preserve">
          <source>.AdaBoostRegressor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d29cf5c7d6a8119648078218f02993298ee5b55b" translate="yes" xml:space="preserve">
          <source>.AdaBoostRegressor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3520287a87cb47207d8e78d2a53cab6d5e185316" translate="yes" xml:space="preserve">
          <source>.AdaBoostRegressor.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ac2837432145e3a11d4f3a2dd2aeba80d27e0b" translate="yes" xml:space="preserve">
          <source>.AdaBoostRegressor.feature_importances_</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ae9714758e2946c94732b13281a94fc871774a" translate="yes" xml:space="preserve">
          <source>.AdaBoostRegressor.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f63c8abdb8972164afdcdabd03aa1b466f60f6" translate="yes" xml:space="preserve">
          <source>.AdaBoostRegressor.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e748ebe422a219003a356fc6fddda8afdecd30eb" translate="yes" xml:space="preserve">
          <source>.AdaBoostRegressor.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeaec77593d93cd41dd0dbff86191dd32e936ffb" translate="yes" xml:space="preserve">
          <source>.AdaBoostRegressor.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b18fe5050bcefb4d70f556d72b123b5a32fa6c2" translate="yes" xml:space="preserve">
          <source>.AdaBoostRegressor.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0436b032eb52d97ba650a3157fb31a36143d2e83" translate="yes" xml:space="preserve">
          <source>.AdaBoostRegressor.staged_predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b63852039e1742f2ae42e2f67d2f8f6d6db43cb" translate="yes" xml:space="preserve">
          <source>.AdaBoostRegressor.staged_score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec56401852f685bb8f7ae441907c623bd0c64b7" translate="yes" xml:space="preserve">
          <source>.AdditiveChi2Sampler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d309b7b72f8b70936397c5a2c1ee3341c846f7d" translate="yes" xml:space="preserve">
          <source>.AdditiveChi2Sampler()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e570190762731a566521cf9d47d641790a3ad90" translate="yes" xml:space="preserve">
          <source>.AdditiveChi2Sampler.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab5ea0227c8c7f971fcc03593608c3afab40077" translate="yes" xml:space="preserve">
          <source>.AdditiveChi2Sampler.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c61f87ee6fdc428790ca2489fd26ac741a278c" translate="yes" xml:space="preserve">
          <source>.AdditiveChi2Sampler.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac85d07785801791478988523a60df0cf6f73af1" translate="yes" xml:space="preserve">
          <source>.AdditiveChi2Sampler.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c519db615203a5b378599269400d7cd76f5f7f" translate="yes" xml:space="preserve">
          <source>.AdditiveChi2Sampler.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fade6222d81fda65088481b72aa187086108af88" translate="yes" xml:space="preserve">
          <source>.AdditiveChi2Sampler.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6cfcda40ef6c2476be645d5b00e3ef1c89d6ecd" translate="yes" xml:space="preserve">
          <source>.AffinityPropagation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6934c4efc7efef3b71a2b54a4ff3d441c394d59e" translate="yes" xml:space="preserve">
          <source>.AffinityPropagation()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d365d22bac4612c2084870c5820318ea772462" translate="yes" xml:space="preserve">
          <source>.AffinityPropagation.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fbb97c75947007028ac6ec38b6ae35ef3f28401" translate="yes" xml:space="preserve">
          <source>.AffinityPropagation.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9953a1bfc010894975edd67265d2f40820c58ce3" translate="yes" xml:space="preserve">
          <source>.AffinityPropagation.fit_predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5eb41e618fceb4155d0f729111fd6c3182add3f" translate="yes" xml:space="preserve">
          <source>.AffinityPropagation.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7878a0a3156086899471fdde8557e919cdcac3e" translate="yes" xml:space="preserve">
          <source>.AffinityPropagation.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b7e849c1d8e79fb07f6872439852914190aaf4" translate="yes" xml:space="preserve">
          <source>.AffinityPropagation.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef016c696ff27d4501c75a4abaca50eb12c37afa" translate="yes" xml:space="preserve">
          <source>.AgglomerativeClustering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e84a1e05981313c8b17d05754f8c8034288c43" translate="yes" xml:space="preserve">
          <source>.AgglomerativeClustering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd968e2243c99d76acfb18d22a7bab9a8235df1" translate="yes" xml:space="preserve">
          <source>.AgglomerativeClustering.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11150bea902a8f6b349bc7e9c3479f065db8e357" translate="yes" xml:space="preserve">
          <source>.AgglomerativeClustering.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf2ffac8e1f4e938be714d266c2c651f9c92d30" translate="yes" xml:space="preserve">
          <source>.AgglomerativeClustering.fit_predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da40e1dc283e984a1f5ab17d223a4bf14864cb66" translate="yes" xml:space="preserve">
          <source>.AgglomerativeClustering.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4096d67a91a90f9361eac11ec9560954d02725ad" translate="yes" xml:space="preserve">
          <source>.AgglomerativeClustering.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f426dc94f2373148c4982a0ebafb272d3ec32f" translate="yes" xml:space="preserve">
          <source>.BaggingClassifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23cc436e1423f2f897f4b38e3bf463f2a5153786" translate="yes" xml:space="preserve">
          <source>.BaggingClassifier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d29113c24fd20844b87f1d14ac21193f2e2f01" translate="yes" xml:space="preserve">
          <source>.BaggingClassifier.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257518894045b1c62fbdb37b693ab8755792b6e7" translate="yes" xml:space="preserve">
          <source>.BaggingClassifier.decision_function()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5edb70e8b4577bdc6e21796fbd33ead124b366ba" translate="yes" xml:space="preserve">
          <source>.BaggingClassifier.estimators_samples_</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655411afa39225d8d37a36060a1ffec7597f87a9" translate="yes" xml:space="preserve">
          <source>.BaggingClassifier.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421ce932303ee17e273af5ff49d8b9228222b8e0" translate="yes" xml:space="preserve">
          <source>.BaggingClassifier.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c16eea01d81724366a146e28fd763959a1873df" translate="yes" xml:space="preserve">
          <source>.BaggingClassifier.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf670788a6ca7867de159efceb03b3c690466b3" translate="yes" xml:space="preserve">
          <source>.BaggingClassifier.predict_log_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85572097ea782ad8705b00f38557c91d22e14be" translate="yes" xml:space="preserve">
          <source>.BaggingClassifier.predict_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce96622a335b967b3e218a96593394e846f7ac35" translate="yes" xml:space="preserve">
          <source>.BaggingClassifier.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d92a20f483f4e2c7c3f3a725e497f069851192" translate="yes" xml:space="preserve">
          <source>.BaggingClassifier.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f96f10b7d5185c4fd90c981381ca8520c1edbcc" translate="yes" xml:space="preserve">
          <source>.BaggingRegressor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060a5d20e2ff9ce1d6563b920757c4e503940a49" translate="yes" xml:space="preserve">
          <source>.BaggingRegressor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8372264fd3bb29aa7384898eb11457d8d60817bd" translate="yes" xml:space="preserve">
          <source>.BaggingRegressor.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5907a769d7655a6e3d95ec86144cb0f9f71d0f" translate="yes" xml:space="preserve">
          <source>.BaggingRegressor.estimators_samples_</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44af206437055c4e2369112ee111ebae0a344fb5" translate="yes" xml:space="preserve">
          <source>.BaggingRegressor.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6651c035bfab97d86fa6b52149eb783adff509e0" translate="yes" xml:space="preserve">
          <source>.BaggingRegressor.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6a00686655ea0a1d10a578ae72d1ca3257d199" translate="yes" xml:space="preserve">
          <source>.BaggingRegressor.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030ffc9c2b1c45185d3b679a0dca81c3be423b82" translate="yes" xml:space="preserve">
          <source>.BaggingRegressor.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c11f9e6b02d72d6ec18f778c40e0dbccccc6064" translate="yes" xml:space="preserve">
          <source>.BaggingRegressor.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0df247e3dc58d3ccb3f377e983e8d0cf5a80bed" translate="yes" xml:space="preserve">
          <source>.BallTree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3742631cfe2134805dec726e1ae61318443bf97" translate="yes" xml:space="preserve">
          <source>.BallTree.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb885e2c65b07e07058ee77543bc32639d8b78f" translate="yes" xml:space="preserve">
          <source>.BallTree.kernel_density()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1d99230959b3188668e001a183e582adf98522" translate="yes" xml:space="preserve">
          <source>.BallTree.query()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61f89d5d4dcc7ef2ecbfbcce55d2e9354992954" translate="yes" xml:space="preserve">
          <source>.BallTree.query_radius()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4274c73b135d07f9fde48023e6593b99299cf246" translate="yes" xml:space="preserve">
          <source>.BallTree.two_point_correlation()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1657ecddc1dd16197947f494a252872915b83a9d" translate="yes" xml:space="preserve">
          <source>.BaseEstimator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee516fb1db53fc952a4a53a14cac1ea93f03fb23" translate="yes" xml:space="preserve">
          <source>.BaseEstimator.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b416a91cd576bc9e12da11db10154efbc87504" translate="yes" xml:space="preserve">
          <source>.BaseEstimator.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e273f8b2555c7057683817503e05dc566fc51df6" translate="yes" xml:space="preserve">
          <source>.BaseEstimator.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861515e9a82619e492cfa0f114e6b9a42a60bc12" translate="yes" xml:space="preserve">
          <source>.BayesianGaussianMixture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f1772ead5b0422173bd810df4ad2b24fba3d0f" translate="yes" xml:space="preserve">
          <source>.BayesianGaussianMixture()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90bbe10e871a508905e9eae40ad3ba71a94d525b" translate="yes" xml:space="preserve">
          <source>.BayesianGaussianMixture.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa248a7963e9a721a9fcdae83bf874546169d58" translate="yes" xml:space="preserve">
          <source>.BayesianGaussianMixture.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa6dff7caaabc9c23804dbbe95319e5063ed12d" translate="yes" xml:space="preserve">
          <source>.BayesianGaussianMixture.fit_predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5435baf0c35bfbed3adcd1b513334e405e033a40" translate="yes" xml:space="preserve">
          <source>.BayesianGaussianMixture.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b25a7ff96f948484be1ecf9cd8e4df6e7658788" translate="yes" xml:space="preserve">
          <source>.BayesianGaussianMixture.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d639f6bddd9420625d4009433f6abdbe9e8319" translate="yes" xml:space="preserve">
          <source>.BayesianGaussianMixture.predict_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3547192f63af658e751694750a7557d3fe39a6" translate="yes" xml:space="preserve">
          <source>.BayesianGaussianMixture.sample()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b249445c3a431bebfc24471cc6b0a901ae61244" translate="yes" xml:space="preserve">
          <source>.BayesianGaussianMixture.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a008d0a7a039c3e78687594dd431bd5e71ec79b" translate="yes" xml:space="preserve">
          <source>.BayesianGaussianMixture.score_samples()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f878a76d3850c34570804c10ad0cca9bbb78644b" translate="yes" xml:space="preserve">
          <source>.BayesianGaussianMixture.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04beb4e203fcc0e6a4d0c9935061b2945f1e83d" translate="yes" xml:space="preserve">
          <source>.BayesianRidge</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751224b9795a0c5185acb2780d49dbc0f7776bfd" translate="yes" xml:space="preserve">
          <source>.BayesianRidge()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca7c9303f8038b1a7538ed871da65b9e1b79478" translate="yes" xml:space="preserve">
          <source>.BayesianRidge.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efabb3fb6868c9ce51cddabff71c028375007a50" translate="yes" xml:space="preserve">
          <source>.BayesianRidge.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4de16351b03cded24189eeabf458ec2eb0769f" translate="yes" xml:space="preserve">
          <source>.BayesianRidge.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c1931c51fa7a3baf58195b669bb5cc81c004ca7" translate="yes" xml:space="preserve">
          <source>.BayesianRidge.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa357403144694ed52cf7fe5b404080240c71bc" translate="yes" xml:space="preserve">
          <source>.BayesianRidge.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c50f52c87e3f3dd9e3bf13f1dae2f61052313e" translate="yes" xml:space="preserve">
          <source>.BayesianRidge.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a1982d931a5cf4d49f04ba868a3fdf7b7b0bf5" translate="yes" xml:space="preserve">
          <source>.BernoulliNB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a333b79f74a6eafb15ca6af2c56782322f498c20" translate="yes" xml:space="preserve">
          <source>.BernoulliNB()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddfa054e2ae49fd9a8636c66cff1eb351359a372" translate="yes" xml:space="preserve">
          <source>.BernoulliNB.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2327ed7b30eb9df6959460c2065d675602869763" translate="yes" xml:space="preserve">
          <source>.BernoulliNB.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb4576421f7fb061724c233f61225a8c5ca855e" translate="yes" xml:space="preserve">
          <source>.BernoulliNB.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac96dde5b4665c1eb8181eec4936d53adfcdfb6" translate="yes" xml:space="preserve">
          <source>.BernoulliNB.partial_fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db7b94608f354c36d0421f7be65c6752966125d2" translate="yes" xml:space="preserve">
          <source>.BernoulliNB.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03a4e32155760bc4257ebc3130fd7ce6a4fb235" translate="yes" xml:space="preserve">
          <source>.BernoulliNB.predict_log_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2faf54b6664a51834a9d451d25eaf54cb773f0" translate="yes" xml:space="preserve">
          <source>.BernoulliNB.predict_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7d187bb374f73e3ee4bb44ccdb45cb696af480" translate="yes" xml:space="preserve">
          <source>.BernoulliNB.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87d6ccf02da243ced277674a42fd1efab2089d7" translate="yes" xml:space="preserve">
          <source>.BernoulliNB.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b631c56b478354bbc79bbf290e2942768949a37" translate="yes" xml:space="preserve">
          <source>.BernoulliRBM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ff8fc2c16c8eb9296c1656fbc3093c268cfb21" translate="yes" xml:space="preserve">
          <source>.BernoulliRBM()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbf591496bad88423fea0a6dd3b58149a270983" translate="yes" xml:space="preserve">
          <source>.BernoulliRBM.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ab1a9f5697a08c50decf944466342feaaf9f5f" translate="yes" xml:space="preserve">
          <source>.BernoulliRBM.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99b47124b82ca949f319ff05aa3000d52676313" translate="yes" xml:space="preserve">
          <source>.BernoulliRBM.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d6d7b1b00224010a1979f0a11ec51803433b53" translate="yes" xml:space="preserve">
          <source>.BernoulliRBM.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ad7b3984a4e98e8c76b2e1b62345d2e9059bad" translate="yes" xml:space="preserve">
          <source>.BernoulliRBM.gibbs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba874248ba9a9ca2626b8f0681abe3129ba5789" translate="yes" xml:space="preserve">
          <source>.BernoulliRBM.partial_fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99010ec547f3f7de29a5ce3e4c2756b5a40d3caf" translate="yes" xml:space="preserve">
          <source>.BernoulliRBM.score_samples()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79bb1bd4a22ffe772c5882606d2023c78fd52320" translate="yes" xml:space="preserve">
          <source>.BernoulliRBM.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83282d6d91c97bfed98fefbb2e9147a1b14b5abb" translate="yes" xml:space="preserve">
          <source>.BernoulliRBM.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5372112b80f6a152aebfe939dcd108f68de2540c" translate="yes" xml:space="preserve">
          <source>.BiclusterMixin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12a63b4e2bb939d58080284c2bc7d0f5dee3fb6" translate="yes" xml:space="preserve">
          <source>.BiclusterMixin.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55dfec3b55ea9b3d51158c5451ec0e45c9230a99" translate="yes" xml:space="preserve">
          <source>.BiclusterMixin.biclusters_</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c39d50ac688d9951ee71c9bc198ce40b101f101" translate="yes" xml:space="preserve">
          <source>.BiclusterMixin.get_indices()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ab6dcf85b119202e55c289017bd3b491785b14" translate="yes" xml:space="preserve">
          <source>.BiclusterMixin.get_shape()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c70b6c8af0394919311783a5c8c641c7d4c3f47" translate="yes" xml:space="preserve">
          <source>.BiclusterMixin.get_submatrix()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80bd29a9b0f8c481623964b6850d27d9b8a5cd56" translate="yes" xml:space="preserve">
          <source>.Binarizer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a069d0ac614c603068d0aa16e376a0fe297aeabc" translate="yes" xml:space="preserve">
          <source>.Binarizer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a35b421c5fef2756b7605dee4b660707321668" translate="yes" xml:space="preserve">
          <source>.Binarizer.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26fd3472e349e590e11b3aa238f7befebc3a35a8" translate="yes" xml:space="preserve">
          <source>.Binarizer.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b020854069c65552379dff800ad59072bba9bde" translate="yes" xml:space="preserve">
          <source>.Binarizer.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5edc74748789d3e9d3cbcf608c6322a0b2c160e9" translate="yes" xml:space="preserve">
          <source>.Binarizer.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d687c472e8f7992632f7a7b0ecca11e328e27a1" translate="yes" xml:space="preserve">
          <source>.Binarizer.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd084c0e926b3ee6a2e120859590102b4c0df1c" translate="yes" xml:space="preserve">
          <source>.Binarizer.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a99b42383477e347575ba4f25c67197a1199cc82" translate="yes" xml:space="preserve">
          <source>.Birch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2eeee3c6a209521ef0b5af563df58f886092f27" translate="yes" xml:space="preserve">
          <source>.Birch()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18754e9c03532fc1941e39135a2c6ecaaa2ed4b1" translate="yes" xml:space="preserve">
          <source>.Birch.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf3b242ad3235ff7647bf1e26a4775457f847f2" translate="yes" xml:space="preserve">
          <source>.Birch.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3f7f69d8b8fe87bc13b1ec8e1b772f41a07f9d" translate="yes" xml:space="preserve">
          <source>.Birch.fit_predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0691598f2411b79480948b7ec116b601eaad70c" translate="yes" xml:space="preserve">
          <source>.Birch.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e779d989f12ebe498092f5e01d9a7b4e773455" translate="yes" xml:space="preserve">
          <source>.Birch.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ac8db2f73ba979550e02b14596b738de7be0b4" translate="yes" xml:space="preserve">
          <source>.Birch.partial_fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15683b12f7188af259c0949f98dfee329ade135b" translate="yes" xml:space="preserve">
          <source>.Birch.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90546a7a15e1c06758e522c8e257bd870b387d5" translate="yes" xml:space="preserve">
          <source>.Birch.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f203f4f2b89eaeffe45feaaca895ff870d85a928" translate="yes" xml:space="preserve">
          <source>.Birch.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a675f0d46188b96a911193d377340f398d6f4e03" translate="yes" xml:space="preserve">
          <source>.CCA()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="811df5d612a0f136c490c8563443b4a11ceb0645" translate="yes" xml:space="preserve">
          <source>.CCA.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa537db905c20f90c365bd74e98c67f31a802a1" translate="yes" xml:space="preserve">
          <source>.CCA.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5962fcacb43e675de2781dcf924f67ebbc668dd6" translate="yes" xml:space="preserve">
          <source>.CCA.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f435d28b59da3ef1848e7860dab5a7dd3164621e" translate="yes" xml:space="preserve">
          <source>.CCA.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dadde83cfbebf7783425a83c2eeee01909bf5eb0" translate="yes" xml:space="preserve">
          <source>.CCA.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ea049cbc3a40914612aa58d9e5a251c22769b2" translate="yes" xml:space="preserve">
          <source>.CCA.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e169bbdad50dddef1bfdceb0787372142f6ba4" translate="yes" xml:space="preserve">
          <source>.CCA.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d8c9891dac07d14be18156ca52a2381ddc8905" translate="yes" xml:space="preserve">
          <source>.CCA.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc62858d7af176ce3a741e7ac54afda5122d2e7" translate="yes" xml:space="preserve">
          <source>.CalibratedClassifierCV</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f26993b39a27c1cce08c0031e1029b10d13fe76" translate="yes" xml:space="preserve">
          <source>.CalibratedClassifierCV()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae79a10eb7d7b59ca41fcb13f41e1e1aee8de9d" translate="yes" xml:space="preserve">
          <source>.CalibratedClassifierCV.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88bb30977dc68d8d9c2d951fdcfdde8370878438" translate="yes" xml:space="preserve">
          <source>.CalibratedClassifierCV.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2ee84e128488f325772013e93cdce4792968bc" translate="yes" xml:space="preserve">
          <source>.CalibratedClassifierCV.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e574b3e240d45a076d2609e905f970c2716fac3" translate="yes" xml:space="preserve">
          <source>.CalibratedClassifierCV.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d2865449b04ca8c66d4c0b03eb4fe5ac147d3a" translate="yes" xml:space="preserve">
          <source>.CalibratedClassifierCV.predict_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e935c939e92fa791103049e456c310f729f68c" translate="yes" xml:space="preserve">
          <source>.CalibratedClassifierCV.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0de8c4f33b5710dba2c924db7966e8af7446c9c" translate="yes" xml:space="preserve">
          <source>.CalibratedClassifierCV.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ab1c91705e4300092474fbde0847646aad7cc3" translate="yes" xml:space="preserve">
          <source>.ChangedBehaviorWarning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f282deac76156369bb7764fb05ef5720c44799a" translate="yes" xml:space="preserve">
          <source>.ChangedBehaviorWarning.with_traceback()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4d5c02995abb0e4a4d32fbd91d5a2f93da8340" translate="yes" xml:space="preserve">
          <source>.ClassifierChain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac84692714cf3ce5dae6bdd208028652ce1fc022" translate="yes" xml:space="preserve">
          <source>.ClassifierChain()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8166dc3cb89901c5650a062cd1455ef9e601a61d" translate="yes" xml:space="preserve">
          <source>.ClassifierChain.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98fc3e4ce91326bdca30d87d4c6dd5f0498fd9e8" translate="yes" xml:space="preserve">
          <source>.ClassifierChain.decision_function()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47796dec1428ad4572e19829c538a7b7c2472fc6" translate="yes" xml:space="preserve">
          <source>.ClassifierChain.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282b33b732bc927b5318ce86754f515b8e25f8d6" translate="yes" xml:space="preserve">
          <source>.ClassifierChain.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784d727892adcd80ba8f97c41f4c9a3e41d9c330" translate="yes" xml:space="preserve">
          <source>.ClassifierChain.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e153ae8a0ec92297dafd94043329f9493ab41260" translate="yes" xml:space="preserve">
          <source>.ClassifierChain.predict_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466418c95664818b6ca9b810c6da26864b054d7c" translate="yes" xml:space="preserve">
          <source>.ClassifierChain.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65d665fd71e3af65e8e5622693316d2696d707a" translate="yes" xml:space="preserve">
          <source>.ClassifierChain.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113eef3a0e8031e9338c8300853716d24018ccfa" translate="yes" xml:space="preserve">
          <source>.ClassifierMixin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af8470636f22ff3098328579784d4d1209596f21" translate="yes" xml:space="preserve">
          <source>.ClassifierMixin.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d16bc1580bf34df5152aa012f1bb331d64af322" translate="yes" xml:space="preserve">
          <source>.ClassifierMixin.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a07b5478b90418101a0f595f03910ade735a918" translate="yes" xml:space="preserve">
          <source>.ClusterMixin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac174dcd773ffe38ddd6007f5c941ddc1279f26" translate="yes" xml:space="preserve">
          <source>.ClusterMixin.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45be8250ebe59bfc34ae7ce49066555e80d22ad6" translate="yes" xml:space="preserve">
          <source>.ClusterMixin.fit_predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f26c86476c0803299f8b490f8544af4e4f7e4722" translate="yes" xml:space="preserve">
          <source>.ColumnTransformer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15e024fa46bd6500862824ec437b8641bd0222b" translate="yes" xml:space="preserve">
          <source>.ColumnTransformer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e8562418828d6f6d86ca4fa20a950b579d23a9" translate="yes" xml:space="preserve">
          <source>.ColumnTransformer.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef536e48131d4e2767d6d883bd5c59a8f5469d56" translate="yes" xml:space="preserve">
          <source>.ColumnTransformer.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0af93571b2429e18700fc875bd0b2c3a7d41660" translate="yes" xml:space="preserve">
          <source>.ColumnTransformer.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c85ecd690062ce8f7a323f1df0d7334b27f626" translate="yes" xml:space="preserve">
          <source>.ColumnTransformer.get_feature_names()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5125344a881c6042c8391704f1de48f4334b5d" translate="yes" xml:space="preserve">
          <source>.ColumnTransformer.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d670709fc47169a8c327977e90ee25b8734ec7b" translate="yes" xml:space="preserve">
          <source>.ColumnTransformer.named_transformers_</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4628c92d4a5b9d8a1294550b1b8f38bc358ca0a0" translate="yes" xml:space="preserve">
          <source>.ColumnTransformer.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd31e83d88e4b21832d780b3eea9d237c45d8cb" translate="yes" xml:space="preserve">
          <source>.ColumnTransformer.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88bff3a30462145b4924b222b035fbdf09159c4" translate="yes" xml:space="preserve">
          <source>.ComplementNB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3894c8167186331c741c75e5494df812d15bead3" translate="yes" xml:space="preserve">
          <source>.ComplementNB()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3713f39548c979ad3b6b1a7b52b415acd800be" translate="yes" xml:space="preserve">
          <source>.ComplementNB.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22213defee254eafff6302080216e5aaa03af025" translate="yes" xml:space="preserve">
          <source>.ComplementNB.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5150d8726b36f098d9b781fd3e1922bbe50d3f02" translate="yes" xml:space="preserve">
          <source>.ComplementNB.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd91ab5b9c6249cfdc361020a8f7480073bb3116" translate="yes" xml:space="preserve">
          <source>.ComplementNB.partial_fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17108156a5dfa902229961943c8258011e7e8e41" translate="yes" xml:space="preserve">
          <source>.ComplementNB.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25ca99470f2f0220c53a08b9d1e68a029c02ea2" translate="yes" xml:space="preserve">
          <source>.ComplementNB.predict_log_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59da09bf8f85d675ca77b16fa8ce3880ba9a33a" translate="yes" xml:space="preserve">
          <source>.ComplementNB.predict_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4887c22ac3e989e5e163387a0aeed961406f429" translate="yes" xml:space="preserve">
          <source>.ComplementNB.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31dfcbc90d985902cc94a75f39d42ec94867a54b" translate="yes" xml:space="preserve">
          <source>.ComplementNB.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815c07df2d3f1ffc5b59450c38fc47ec3c2df400" translate="yes" xml:space="preserve">
          <source>.CompoundKernel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b50923f0cbf2d7b3d1c9bd70b0b18bd306b103" translate="yes" xml:space="preserve">
          <source>.CompoundKernel()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b58f0f9f3c12f2fd59df7e4eed18f9afc45dd4" translate="yes" xml:space="preserve">
          <source>.CompoundKernel.__call__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1f82856dea4b7aa98771b702344c20a0abcd85" translate="yes" xml:space="preserve">
          <source>.CompoundKernel.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b5cd14d711e0ecd18713b88ad8a703c8bf3c73" translate="yes" xml:space="preserve">
          <source>.CompoundKernel.bounds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379391b7ea79d593479a2d0d0cabd5b4b905f7b0" translate="yes" xml:space="preserve">
          <source>.CompoundKernel.clone_with_theta()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4036b1aea8487b525b4a207be83937c55d61005f" translate="yes" xml:space="preserve">
          <source>.CompoundKernel.diag()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1379d81b87c6c20bad1db69f7af4025f52b9def" translate="yes" xml:space="preserve">
          <source>.CompoundKernel.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb4e622fd32c72339e27cf2039b3a1ee69929e6" translate="yes" xml:space="preserve">
          <source>.CompoundKernel.hyperparameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c08018252a4c29de1439bd2ceed040b627ec760" translate="yes" xml:space="preserve">
          <source>.CompoundKernel.is_stationary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3d60480d8a09652382db3cd10c9f77eb0f5487" translate="yes" xml:space="preserve">
          <source>.CompoundKernel.n_dims</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="163805d45212c639db6db36ede60732b4846188d" translate="yes" xml:space="preserve">
          <source>.CompoundKernel.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e809e60900de7a8ce9669f54266b73d2e4bab632" translate="yes" xml:space="preserve">
          <source>.CompoundKernel.theta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b89bbaa53c079ccfd375b9acf4074aa190c0de3" translate="yes" xml:space="preserve">
          <source>.ConstantKernel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c507d4caf0c0d7dabf8ed35168a0298fc9e08cf" translate="yes" xml:space="preserve">
          <source>.ConstantKernel()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27205c2f1163566733164bf6d83f1a2aa82aad0c" translate="yes" xml:space="preserve">
          <source>.ConstantKernel.__call__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706ff48faec124a50d35d26e4a340c18bef79fe7" translate="yes" xml:space="preserve">
          <source>.ConstantKernel.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7053e0c147438040f890f146bc161f6ad7b51c1" translate="yes" xml:space="preserve">
          <source>.ConstantKernel.bounds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da9c66ee6b77850748bf49e891e150d6fa30b9d" translate="yes" xml:space="preserve">
          <source>.ConstantKernel.clone_with_theta()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8e1de6037e5b7520f5d822990ce3e88e193a06" translate="yes" xml:space="preserve">
          <source>.ConstantKernel.diag()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4251583b8efc41dae349ff04a71497474510eabc" translate="yes" xml:space="preserve">
          <source>.ConstantKernel.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3470f497dddb886ff971daee8230e4e320c3fa" translate="yes" xml:space="preserve">
          <source>.ConstantKernel.hyperparameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c75bb63b621e2589d9feb56f709bee4ca3a0f69" translate="yes" xml:space="preserve">
          <source>.ConstantKernel.is_stationary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9045efa9b060440cbb994a1c95af15ec1232234c" translate="yes" xml:space="preserve">
          <source>.ConstantKernel.n_dims</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e0fb5c7c59a1cb85ba9d7ef34cb50aebc021fc" translate="yes" xml:space="preserve">
          <source>.ConstantKernel.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc926aefa00c3ff3e1919607ea58485b38d05ad1" translate="yes" xml:space="preserve">
          <source>.ConstantKernel.theta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b290dd03cc63ce63882679dc154f0da5108157eb" translate="yes" xml:space="preserve">
          <source>.ConvergenceWarning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7e5910a72af323d578dc2897e2a59d0c416504" translate="yes" xml:space="preserve">
          <source>.ConvergenceWarning.with_traceback()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c0178115f417fd23a4036841901dd0add5b5d0" translate="yes" xml:space="preserve">
          <source>.CountVectorizer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c70f04b05f58fcae9d46b17687adb3bc317612c" translate="yes" xml:space="preserve">
          <source>.CountVectorizer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ca5be99d036b5023315f97f1862cc13f171dc6" translate="yes" xml:space="preserve">
          <source>.CountVectorizer.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac695086bf86615702f693303b1c5e6cc3d3eeee" translate="yes" xml:space="preserve">
          <source>.CountVectorizer.build_analyzer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b076798cfc9bb6f1cd847eb8502b9e6dae55e2ae" translate="yes" xml:space="preserve">
          <source>.CountVectorizer.build_preprocessor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c1605622f07c27936c22738ac3b9ce1d9a4c4e" translate="yes" xml:space="preserve">
          <source>.CountVectorizer.build_tokenizer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067806caa61848472dd69e0ff7810cbf8e2aee3c" translate="yes" xml:space="preserve">
          <source>.CountVectorizer.decode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c66f80c6f26d692636ad4cfe3acc4c47c5cd3f9" translate="yes" xml:space="preserve">
          <source>.CountVectorizer.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d7b16ff1aa1cf050ed92efc93ed26ffe95388f" translate="yes" xml:space="preserve">
          <source>.CountVectorizer.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6de1f6dc54a7621d5f1de5fc6d93d939b10fb9b" translate="yes" xml:space="preserve">
          <source>.CountVectorizer.get_feature_names()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6cb4adbfe3ffa91fe13ca207170b1f401252912" translate="yes" xml:space="preserve">
          <source>.CountVectorizer.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd4657b92480a5b38dce6ffce3bca97bc484584" translate="yes" xml:space="preserve">
          <source>.CountVectorizer.get_stop_words()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4bf54e746554721c35a5204a73550848bc28cc" translate="yes" xml:space="preserve">
          <source>.CountVectorizer.inverse_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29000e036dc736ceceb9e9d26265d4175d21a18" translate="yes" xml:space="preserve">
          <source>.CountVectorizer.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690cc9c8c04bda9f86a825b8ff8c5229c33a5d0f" translate="yes" xml:space="preserve">
          <source>.CountVectorizer.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc946aea4fbb72c0403254585f0eb298cf58c5c6" translate="yes" xml:space="preserve">
          <source>.DBSCAN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7faf3972be63f5fe7c48e9483bae53b2e95c64a6" translate="yes" xml:space="preserve">
          <source>.DBSCAN()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47907672e7c38dabdc3311cecf4a97d097189223" translate="yes" xml:space="preserve">
          <source>.DBSCAN.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efc228e5cf91adc2ede8760bc8e82d469adbd6a" translate="yes" xml:space="preserve">
          <source>.DBSCAN.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c207eab333889351418d5da40178322c0323717" translate="yes" xml:space="preserve">
          <source>.DBSCAN.fit_predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee96c5fddeeb60b81d265e5fcf6b28ce081fa1e" translate="yes" xml:space="preserve">
          <source>.DBSCAN.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c830c18a348b268ecfcf011199a458b8938160e" translate="yes" xml:space="preserve">
          <source>.DBSCAN.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193b0c48eb002a8b6356cef0b8884db780e8999c" translate="yes" xml:space="preserve">
          <source>.DataConversionWarning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5a5141477c5caf675f9570896338367d4bc6e4" translate="yes" xml:space="preserve">
          <source>.DataConversionWarning.with_traceback()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190b2b8f302f74a80df44e3595b84c9cc9118e4c" translate="yes" xml:space="preserve">
          <source>.DataDimensionalityWarning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7d3c82becbdf110ecab93f67b7fe71049a3061" translate="yes" xml:space="preserve">
          <source>.DataDimensionalityWarning.with_traceback()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766915a1caf168bf925e446f4ef4b4571e4f4fbd" translate="yes" xml:space="preserve">
          <source>.DecisionTreeClassifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eda54985b298ea2d2c58d8a76e90514bfbe88a6" translate="yes" xml:space="preserve">
          <source>.DecisionTreeClassifier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290968067f2f26dc2bb8998e39743e1b2feaeb90" translate="yes" xml:space="preserve">
          <source>.DecisionTreeClassifier.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fdba90a5a91a1c2ec4e967e5902e6ce832b0ff5" translate="yes" xml:space="preserve">
          <source>.DecisionTreeClassifier.apply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238ac7d5458c00577fcf0de04dcc5b5791960bb5" translate="yes" xml:space="preserve">
          <source>.DecisionTreeClassifier.decision_path()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac75a01eef1f51dfa614b16b31ab67152b59cb4" translate="yes" xml:space="preserve">
          <source>.DecisionTreeClassifier.feature_importances_</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52fa1be0153af30067eceb99aa586a7d7aa9b45" translate="yes" xml:space="preserve">
          <source>.DecisionTreeClassifier.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6638c35c11c3d23dc541daeb79d52f3d13abdf" translate="yes" xml:space="preserve">
          <source>.DecisionTreeClassifier.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17d9a29d999fdece02a51b4b2e5c87ec72e3f68" translate="yes" xml:space="preserve">
          <source>.DecisionTreeClassifier.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62c2f945c58b5635c78e27ff5c657dac4522336" translate="yes" xml:space="preserve">
          <source>.DecisionTreeClassifier.predict_log_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce5212015e965d915c068f5a499f5cb593c784db" translate="yes" xml:space="preserve">
          <source>.DecisionTreeClassifier.predict_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e560592a239c52c3846f19fa6dc505a4e3818072" translate="yes" xml:space="preserve">
          <source>.DecisionTreeClassifier.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3191eb0d44192db7b1a945ebb928100a9e1c49" translate="yes" xml:space="preserve">
          <source>.DecisionTreeClassifier.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade0367989b54c03da89bd5c556384b4f93eb6fa" translate="yes" xml:space="preserve">
          <source>.DecisionTreeRegressor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6234c017ac3009147839e49102017602d6444d" translate="yes" xml:space="preserve">
          <source>.DecisionTreeRegressor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5909c2e4e4c6caaed1819290a32682ae5a6c9ba7" translate="yes" xml:space="preserve">
          <source>.DecisionTreeRegressor.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebeb03019bc6a4d0cff8d3275c3b4c91d6994e42" translate="yes" xml:space="preserve">
          <source>.DecisionTreeRegressor.apply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="739c6a65a3155315f09c78528005480e0fdde9cc" translate="yes" xml:space="preserve">
          <source>.DecisionTreeRegressor.decision_path()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e415deb5b8ce3cb3d720c3e28d750afb7b86de94" translate="yes" xml:space="preserve">
          <source>.DecisionTreeRegressor.feature_importances_</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7896a88d80625dea92709693d5ef9f1c03bfec3" translate="yes" xml:space="preserve">
          <source>.DecisionTreeRegressor.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5b934e18c7d3580ca5c86a872f8ba59a2197f2" translate="yes" xml:space="preserve">
          <source>.DecisionTreeRegressor.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f79410bf1ba68da4c6fa09da12e8487ef60b1b7" translate="yes" xml:space="preserve">
          <source>.DecisionTreeRegressor.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f32806761f6cdbad92b826228136b8143ba6833" translate="yes" xml:space="preserve">
          <source>.DecisionTreeRegressor.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b6cc7c79f8ebeffbfb5c0fa0e5c4e46d150042" translate="yes" xml:space="preserve">
          <source>.DecisionTreeRegressor.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0768a3c1d8d4329d3ed198c38f1ba8b338a4a5" translate="yes" xml:space="preserve">
          <source>.DensityMixin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb47d715249873c3e60fba1c55d70cc769b911ee" translate="yes" xml:space="preserve">
          <source>.DensityMixin.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b62b953c098e2b0d5b7f4dd46bd2406ff11b5d2" translate="yes" xml:space="preserve">
          <source>.DensityMixin.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e122fbe1ae922b4aa8501ae8161fddea14edd3" translate="yes" xml:space="preserve">
          <source>.DictVectorizer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f89a79a245aeba1b2d892b62ace2757eaacdea" translate="yes" xml:space="preserve">
          <source>.DictVectorizer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d502a6e88200d0f1d6ff8ef83dc746362aa25b1" translate="yes" xml:space="preserve">
          <source>.DictVectorizer.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea04d1f578267fb1d3284f6ccea5640ba1a3d80" translate="yes" xml:space="preserve">
          <source>.DictVectorizer.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330d731320f1b06e068dca1ab92219928a14c947" translate="yes" xml:space="preserve">
          <source>.DictVectorizer.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5398a5c38ed7f91735ad0327e83a2ff093ab9c7" translate="yes" xml:space="preserve">
          <source>.DictVectorizer.get_feature_names()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17726777a71a62de142517ec9d189d52feacf18a" translate="yes" xml:space="preserve">
          <source>.DictVectorizer.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8961f53a5e54bc077cd6c048dd7df106b781e33c" translate="yes" xml:space="preserve">
          <source>.DictVectorizer.inverse_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414e71aa89bd20f039da4dfe1327f234fc2798cf" translate="yes" xml:space="preserve">
          <source>.DictVectorizer.restrict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1a704f5615c99eb38376ef72efe5484d4bcb3c" translate="yes" xml:space="preserve">
          <source>.DictVectorizer.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1428c932c96fabbed8b3ed1cfe1411d7d38c0a08" translate="yes" xml:space="preserve">
          <source>.DictVectorizer.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902e22bddf254a40168b5534cdca5c39036ec5bb" translate="yes" xml:space="preserve">
          <source>.DictionaryLearning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="631e284bf7708b79b43c5754207246d1b6f7e260" translate="yes" xml:space="preserve">
          <source>.DictionaryLearning()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eccf62d853ed17f234e3ac609e2c70698febb05" translate="yes" xml:space="preserve">
          <source>.DictionaryLearning.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef34f6c4fb18fdf212e5cd29ee8a9eae09c1446" translate="yes" xml:space="preserve">
          <source>.DictionaryLearning.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74a462db7ea3f488dbcfccde909a7f3548840df" translate="yes" xml:space="preserve">
          <source>.DictionaryLearning.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b787f6cfecadb5f0d868f59515bb5abce927dc" translate="yes" xml:space="preserve">
          <source>.DictionaryLearning.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66293a41be0ec27c15a0cbd179ed45787e1d0c8" translate="yes" xml:space="preserve">
          <source>.DictionaryLearning.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="849f2e0cc50c4e7d3228506fc5985211b66d1f06" translate="yes" xml:space="preserve">
          <source>.DictionaryLearning.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825d823b551d1c8f2e3bf20cc970e003900739a0" translate="yes" xml:space="preserve">
          <source>.DistanceMetric</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e10879f36a4605130f59f46d37528181771364" translate="yes" xml:space="preserve">
          <source>.DistanceMetric.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132fa89b806bf71ba947133a026a61a3c818c36f" translate="yes" xml:space="preserve">
          <source>.DistanceMetric.dist_to_rdist()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a20cb3ee9d0233f15cd5e87148f4dba2a2fd88" translate="yes" xml:space="preserve">
          <source>.DistanceMetric.get_metric()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b501d412f1ff4dd05a958c18db7065b89bb54f" translate="yes" xml:space="preserve">
          <source>.DistanceMetric.pairwise()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e496b0926dfdac0a64ffce5e2a34405cd58b8889" translate="yes" xml:space="preserve">
          <source>.DistanceMetric.rdist_to_dist()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e938d8565940338604f3165ebe4d7b2e132657" translate="yes" xml:space="preserve">
          <source>.DotProduct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b401d1b819727892cc3a329810be99441a76faf9" translate="yes" xml:space="preserve">
          <source>.DotProduct()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0710bdba926f5f612cc49529602c7b81918573" translate="yes" xml:space="preserve">
          <source>.DotProduct.__call__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca58ed098c3a7a59eac42acae1240b9f3f4d32b3" translate="yes" xml:space="preserve">
          <source>.DotProduct.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e939832204b4f22d519032a60559256cee04ba" translate="yes" xml:space="preserve">
          <source>.DotProduct.bounds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68678c0b967f6ee6f4a1e76aa5ce96a1dfbc8e95" translate="yes" xml:space="preserve">
          <source>.DotProduct.clone_with_theta()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f10a25bf285bedf3724972aa91762a0727bc496" translate="yes" xml:space="preserve">
          <source>.DotProduct.diag()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff588691be24293361128dbbf5db94d3bb5fc11b" translate="yes" xml:space="preserve">
          <source>.DotProduct.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba6bbfbac097ed61c503e1cd25d9842069b4753c" translate="yes" xml:space="preserve">
          <source>.DotProduct.hyperparameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850ac9f9566e83c390c6a42a77e7803404a1c1f8" translate="yes" xml:space="preserve">
          <source>.DotProduct.is_stationary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a1a6038e018258e16cfcf360279cc22de091703" translate="yes" xml:space="preserve">
          <source>.DotProduct.n_dims</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0092ca0f20487f96d5d8fd9d07cfae0f03b761ca" translate="yes" xml:space="preserve">
          <source>.DotProduct.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe79d3cde0351706a5ebf15ac9f3d0af902d802" translate="yes" xml:space="preserve">
          <source>.DotProduct.theta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb0ccf5de1ddfb98218daedca2020dda9c7c5aa" translate="yes" xml:space="preserve">
          <source>.DummyClassifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e009866c3a04f814d96ba8e508451aab0b1d94ea" translate="yes" xml:space="preserve">
          <source>.DummyClassifier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca71587248670113efc317d6c62e78ca7ff7697" translate="yes" xml:space="preserve">
          <source>.DummyClassifier.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d80128f405ca51fe364e450c384677e1775d22a" translate="yes" xml:space="preserve">
          <source>.DummyClassifier.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54cb408428213d0ec7f2fc0baef27cb26d3dbf57" translate="yes" xml:space="preserve">
          <source>.DummyClassifier.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e009a507da530cda0097c5fd0465a6d9c1b1d9a7" translate="yes" xml:space="preserve">
          <source>.DummyClassifier.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d8bf945db54c9cb4e7796660b8d854963c43c9" translate="yes" xml:space="preserve">
          <source>.DummyClassifier.predict_log_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b007f2fba44c885a49269d12957c2298f47afc6" translate="yes" xml:space="preserve">
          <source>.DummyClassifier.predict_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5debb7b053d73693784b3a2204701e8c9376e634" translate="yes" xml:space="preserve">
          <source>.DummyClassifier.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0077b2aac90c20fb6f9e39db28a7cc5d6924d1" translate="yes" xml:space="preserve">
          <source>.DummyClassifier.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb85f430eaf9c7244eac8088c7b4c263437fe09" translate="yes" xml:space="preserve">
          <source>.DummyRegressor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5370f69bbffef21c33baf7da9ab0f924bcd803" translate="yes" xml:space="preserve">
          <source>.DummyRegressor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb791c689154c42836ddf4a6cb23f248778eb8b1" translate="yes" xml:space="preserve">
          <source>.DummyRegressor.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3574bd31cd70251611ae6cc2c36993255b477285" translate="yes" xml:space="preserve">
          <source>.DummyRegressor.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c441119a5429281003d41d0b381288ce67fe19f2" translate="yes" xml:space="preserve">
          <source>.DummyRegressor.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82309be828f41c16cf951bf2b0937f8fe06e45aa" translate="yes" xml:space="preserve">
          <source>.DummyRegressor.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82aa01816f57683d72584f42800666a71ec470b" translate="yes" xml:space="preserve">
          <source>.DummyRegressor.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dabe22f6a4f7fa28a94409a34522414ca57d9658" translate="yes" xml:space="preserve">
          <source>.DummyRegressor.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1fa30ea48c9ff61ce4367e018ea55622160cb7e" translate="yes" xml:space="preserve">
          <source>.EfficiencyWarning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65345e38bc80880337576353f6f1db376a00b9b5" translate="yes" xml:space="preserve">
          <source>.EfficiencyWarning.with_traceback()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ad4dc8eaa319ae28bb3906a9272912021cdc8a" translate="yes" xml:space="preserve">
          <source>.ElasticNet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95ee63115fe2456f585ef5ff0fe84d5d7c9607f" translate="yes" xml:space="preserve">
          <source>.ElasticNet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d239b09ea670c16e17122a5e02fd417efadc8fc" translate="yes" xml:space="preserve">
          <source>.ElasticNet.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea79978477bdae1e7abbcc1e4b6cb115286945e" translate="yes" xml:space="preserve">
          <source>.ElasticNet.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79dd58e4664450dfada39a70348f7c01fbfc098" translate="yes" xml:space="preserve">
          <source>.ElasticNet.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fccaded90200f25dc259e1ff257167e3de3fef0" translate="yes" xml:space="preserve">
          <source>.ElasticNet.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20a544cce69dbafa4fd087c3b4048d9f1ba6569" translate="yes" xml:space="preserve">
          <source>.ElasticNet.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac914ad4e732ccc673c730361863f9bcb59cbfa" translate="yes" xml:space="preserve">
          <source>.ElasticNet.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d7ccfd2cd5b7509e86f1694fcf90a6d7ba0bbe" translate="yes" xml:space="preserve">
          <source>.ElasticNet.sparse_coef_</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad166967c4e6fed3f3cbe62ede108118bb8573d4" translate="yes" xml:space="preserve">
          <source>.ElasticNetCV</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34f0e07ae1aa5ffe2798a9b03f52694f21c9d93" translate="yes" xml:space="preserve">
          <source>.ElasticNetCV()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30fe79d73eb24220ebbaeebbd33f308bbf0949a3" translate="yes" xml:space="preserve">
          <source>.ElasticNetCV.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c5eb1df5505f69f8d6243274afd5387414bc34" translate="yes" xml:space="preserve">
          <source>.ElasticNetCV.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d731d1b53d1b00c280b72db73456f7311f3847f1" translate="yes" xml:space="preserve">
          <source>.ElasticNetCV.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974d989b09b78af46002a3e7b410e703ccc05bce" translate="yes" xml:space="preserve">
          <source>.ElasticNetCV.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32b365e30f7302230a9dc3a060f25e62a29da88" translate="yes" xml:space="preserve">
          <source>.ElasticNetCV.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0f86428718a8f54bd3a41f8f677622c3a6f584" translate="yes" xml:space="preserve">
          <source>.ElasticNetCV.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886b41520d937c0048994d90b81722f51008ecde" translate="yes" xml:space="preserve">
          <source>.EllipticEnvelope</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440b84bba05e201797003a736a960fc94e2bdad7" translate="yes" xml:space="preserve">
          <source>.EllipticEnvelope()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68728e9cd7bd45ba3cffec1c8602e8647d4f4dfc" translate="yes" xml:space="preserve">
          <source>.EllipticEnvelope.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e3cd76c12d6c88bb4a8567d2118acc9af7120b" translate="yes" xml:space="preserve">
          <source>.EllipticEnvelope.correct_covariance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265ebdb66804c314a915d4e97b3c351b1146c582" translate="yes" xml:space="preserve">
          <source>.EllipticEnvelope.decision_function()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d01ea43c7968c00a9fa6d334c70f45887aca6ae" translate="yes" xml:space="preserve">
          <source>.EllipticEnvelope.error_norm()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62029e31d749f8024ef9078ade740c2e2706722a" translate="yes" xml:space="preserve">
          <source>.EllipticEnvelope.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c74ecfec61a25322c5fbc32ea115fabaf847a00" translate="yes" xml:space="preserve">
          <source>.EllipticEnvelope.fit_predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a30db509a1330ba7a5b9c4d7e1cfc20cdf7503" translate="yes" xml:space="preserve">
          <source>.EllipticEnvelope.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce78ae5d4c19822b39f752c4fb0a08c42807c97" translate="yes" xml:space="preserve">
          <source>.EllipticEnvelope.get_precision()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed4d5ac22a8d58c56dfd81080b98989183df6ca" translate="yes" xml:space="preserve">
          <source>.EllipticEnvelope.mahalanobis()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0795d21513308c0afe99923f4c811f42085b9f4" translate="yes" xml:space="preserve">
          <source>.EllipticEnvelope.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04382f1143aef44d2716518f2a68593416bce888" translate="yes" xml:space="preserve">
          <source>.EllipticEnvelope.reweight_covariance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9703d963caab277cfc9d210abdb1dc50c3dba43b" translate="yes" xml:space="preserve">
          <source>.EllipticEnvelope.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7276a539cf69dbb57e10b645fc2eb0b5925108d4" translate="yes" xml:space="preserve">
          <source>.EllipticEnvelope.score_samples()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0556bfc99d126ef0aa986e52d15c56f6d83ab24a" translate="yes" xml:space="preserve">
          <source>.EllipticEnvelope.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0beffcc7a15868d6c099e3ba79e23bfc7f7cde" translate="yes" xml:space="preserve">
          <source>.EmpiricalCovariance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab970127ad2de88d45bb2b5ccffa134babcb28d7" translate="yes" xml:space="preserve">
          <source>.EmpiricalCovariance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b134876852bf37fe1c970feaa338ac954a5f389b" translate="yes" xml:space="preserve">
          <source>.EmpiricalCovariance.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f765bbd307e784d74998cdea0cacc9a50294e3" translate="yes" xml:space="preserve">
          <source>.EmpiricalCovariance.error_norm()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e608eddbfc53c17e333bcdbe63fa755fb3d06b" translate="yes" xml:space="preserve">
          <source>.EmpiricalCovariance.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863646527d033c59660731c9491d383d2b5e4cb2" translate="yes" xml:space="preserve">
          <source>.EmpiricalCovariance.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946282715044dc8a2c68ccc961cecbd3cc7c4fb2" translate="yes" xml:space="preserve">
          <source>.EmpiricalCovariance.get_precision()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8969219d77a537b30e918db2e07578d25511ee" translate="yes" xml:space="preserve">
          <source>.EmpiricalCovariance.mahalanobis()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d14d2531f19daa531bdd63468802586872588a25" translate="yes" xml:space="preserve">
          <source>.EmpiricalCovariance.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5b1a019938b8024e08e0104ce14dbaab229adf" translate="yes" xml:space="preserve">
          <source>.EmpiricalCovariance.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30d2e64d3e9af849ff1c2b5d0215903dbca6f8e" translate="yes" xml:space="preserve">
          <source>.ExpSineSquared</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b890ac457e3b67e92cbc0ee93f9fd4a660010e7" translate="yes" xml:space="preserve">
          <source>.ExpSineSquared()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5261784a42aa29211ffa73a98b7a5e014c03da58" translate="yes" xml:space="preserve">
          <source>.ExpSineSquared.__call__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187dfdcb7f42f09cd6091fcf0585ee7fa301f45b" translate="yes" xml:space="preserve">
          <source>.ExpSineSquared.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68390e206a5a510a625be6004beb188af56f4699" translate="yes" xml:space="preserve">
          <source>.ExpSineSquared.bounds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6a82232d5cb9b28cb54b499fca786ee3ff2991" translate="yes" xml:space="preserve">
          <source>.ExpSineSquared.clone_with_theta()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ec4eb6aee1d698f85f08b417415209c43cc115" translate="yes" xml:space="preserve">
          <source>.ExpSineSquared.diag()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af443e8021568f42c9f6435bfb6f3e7f4944900" translate="yes" xml:space="preserve">
          <source>.ExpSineSquared.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1857fcab648a8aecdc9643599f271e726f9284b7" translate="yes" xml:space="preserve">
          <source>.ExpSineSquared.hyperparameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76469b51a14003609c3a9d3bf91a2e12cbc7fd2a" translate="yes" xml:space="preserve">
          <source>.ExpSineSquared.is_stationary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69e4d8a969aa236b359612b9f49bf7e31ebcaad" translate="yes" xml:space="preserve">
          <source>.ExpSineSquared.n_dims</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97824c5385b6bb9baac4cd2f1fa566710d79ba6a" translate="yes" xml:space="preserve">
          <source>.ExpSineSquared.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e4e7022e994a65441a82d57b9e7dd5a701ad57" translate="yes" xml:space="preserve">
          <source>.ExpSineSquared.theta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35ab6cb07584cc11dd1b65d65b8abdfc8563c687" translate="yes" xml:space="preserve">
          <source>.Exponentiation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da371bddce7963f7ad43764bfbc89f2c1ca0229f" translate="yes" xml:space="preserve">
          <source>.Exponentiation()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d6d37a0ad0506ec974a7b93a32b2ad2181105e" translate="yes" xml:space="preserve">
          <source>.Exponentiation.__call__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344ffb9442491a84f9f1f3de727209cd64aef95f" translate="yes" xml:space="preserve">
          <source>.Exponentiation.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d25b552928260f5a5e63836583939c886002d71" translate="yes" xml:space="preserve">
          <source>.Exponentiation.bounds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9ccad772f8771c4bd99e0d717b8916acaa3216" translate="yes" xml:space="preserve">
          <source>.Exponentiation.clone_with_theta()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2aeb651f7e4e62dbb5856e6140371d87671222" translate="yes" xml:space="preserve">
          <source>.Exponentiation.diag()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6208756b90c929cd62a896dcc56514a26a6402f" translate="yes" xml:space="preserve">
          <source>.Exponentiation.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e76a50203ce55cf6be465a848621971a1c11f8" translate="yes" xml:space="preserve">
          <source>.Exponentiation.hyperparameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b1fd295457caff0d3fa622a10a7f4888614e29" translate="yes" xml:space="preserve">
          <source>.Exponentiation.is_stationary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c88cab7f3d708da063cabca3a6f81dad978933" translate="yes" xml:space="preserve">
          <source>.Exponentiation.n_dims</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98fa09e6dc7fd7772f55e75c08763960e5018a20" translate="yes" xml:space="preserve">
          <source>.Exponentiation.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be76511accf5be299df0b080e6b55aff68abf6f5" translate="yes" xml:space="preserve">
          <source>.Exponentiation.theta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1b58544643cf3c04a056506a8427bb64ce7812" translate="yes" xml:space="preserve">
          <source>.ExtraTreeClassifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a419ec2836e7fc616fc116201753a2e2f5421a" translate="yes" xml:space="preserve">
          <source>.ExtraTreeClassifier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87cb3968eec0d6f60d466c28288c455a771e23a9" translate="yes" xml:space="preserve">
          <source>.ExtraTreeClassifier.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416c21e60f20cb273a45f7a1a81443793cd7d3ea" translate="yes" xml:space="preserve">
          <source>.ExtraTreeClassifier.apply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9f2af6df295703ed1176cd142a68c46b4303af" translate="yes" xml:space="preserve">
          <source>.ExtraTreeClassifier.decision_path()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1f869cd5fb6d5fcff35f8fa945fa056a6d652b" translate="yes" xml:space="preserve">
          <source>.ExtraTreeClassifier.feature_importances_</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87974b74f31fd641c2cf99fa8f5808370f783225" translate="yes" xml:space="preserve">
          <source>.ExtraTreeClassifier.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50ad558be09ce7cf506fd7668ab7efee8dbb146" translate="yes" xml:space="preserve">
          <source>.ExtraTreeClassifier.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24cd6ecd6b142813c0e3e1e5779bf4f4edcce7f9" translate="yes" xml:space="preserve">
          <source>.ExtraTreeClassifier.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b238b7b408b9277d9ae34557b8e1e5776f158a" translate="yes" xml:space="preserve">
          <source>.ExtraTreeClassifier.predict_log_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779926fb51917348676ea1d8ac3e3862da66941b" translate="yes" xml:space="preserve">
          <source>.ExtraTreeClassifier.predict_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddddb991d6e932035d074bae3b772bfec759a371" translate="yes" xml:space="preserve">
          <source>.ExtraTreeClassifier.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3749a0c5b8092eed1d54214cd6c232afc7984e" translate="yes" xml:space="preserve">
          <source>.ExtraTreeClassifier.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f6bfb68ee5e7a75bf3cb094ea4e22de1ae5993" translate="yes" xml:space="preserve">
          <source>.ExtraTreeRegressor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c54f8d8b3b84d0618fad0fc8db86a07e361fa3" translate="yes" xml:space="preserve">
          <source>.ExtraTreeRegressor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5875133521a4ac5a246370fe72399ab308216b" translate="yes" xml:space="preserve">
          <source>.ExtraTreeRegressor.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb829b18331a357efd9403bbfd2a32a3054646c" translate="yes" xml:space="preserve">
          <source>.ExtraTreeRegressor.apply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd40d40459435dd65d849a5e6528824e0a2cc70e" translate="yes" xml:space="preserve">
          <source>.ExtraTreeRegressor.decision_path()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4138bde1278542778269ccfa993ca5656c4937c3" translate="yes" xml:space="preserve">
          <source>.ExtraTreeRegressor.feature_importances_</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e2c1aa28435c55bdbe9d13f5a81052f6e65502" translate="yes" xml:space="preserve">
          <source>.ExtraTreeRegressor.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8faeac5556d09027779387d74725c4b3d7872045" translate="yes" xml:space="preserve">
          <source>.ExtraTreeRegressor.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577fb13b42846c01b518018adcd3275bded85178" translate="yes" xml:space="preserve">
          <source>.ExtraTreeRegressor.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe29e111b679558116bae1b7058eca527496dfa" translate="yes" xml:space="preserve">
          <source>.ExtraTreeRegressor.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad95f9d460ca9a3365df2547f6db16d113366f90" translate="yes" xml:space="preserve">
          <source>.ExtraTreeRegressor.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab99a587735e7daffcf3f325dc954383fc0c2fc4" translate="yes" xml:space="preserve">
          <source>.ExtraTreesClassifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96beed972de4888aa1780e6abb0333b6a0f4baf" translate="yes" xml:space="preserve">
          <source>.ExtraTreesClassifier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2274b81f0b18b1160947a79a0551718fb4e4aa3" translate="yes" xml:space="preserve">
          <source>.ExtraTreesClassifier.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04fd232382136299b1c2b394f49443f77440957a" translate="yes" xml:space="preserve">
          <source>.ExtraTreesClassifier.apply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb25553bc737e8a4937244682f30b39314235c73" translate="yes" xml:space="preserve">
          <source>.ExtraTreesClassifier.decision_path()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f06d645a4c9c9f86a928d863154f91ff7df5a4" translate="yes" xml:space="preserve">
          <source>.ExtraTreesClassifier.feature_importances_</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ff9f4dd9a4c4510ff0c389d0efd8a3dd4ac147" translate="yes" xml:space="preserve">
          <source>.ExtraTreesClassifier.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a3b4c2babab51e7a0c98d0ef25e20c1664b8b8" translate="yes" xml:space="preserve">
          <source>.ExtraTreesClassifier.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33a32c4f4b2ecbafe3d64aca2abe8fbafadac0a" translate="yes" xml:space="preserve">
          <source>.ExtraTreesClassifier.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5f05407c553744b0fdd0edf345f3e57d2e37c5" translate="yes" xml:space="preserve">
          <source>.ExtraTreesClassifier.predict_log_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10bee73f501a35da6f7b4cf7184799c4bf2e0cb3" translate="yes" xml:space="preserve">
          <source>.ExtraTreesClassifier.predict_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96c812c44f9002a462b78c1382f71a8e8f75a84" translate="yes" xml:space="preserve">
          <source>.ExtraTreesClassifier.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="510d9658918352236ef9afde9de5f95fa03abcf6" translate="yes" xml:space="preserve">
          <source>.ExtraTreesClassifier.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ab9cbc519a1420f1848fe61301e94a26a460c3" translate="yes" xml:space="preserve">
          <source>.ExtraTreesRegressor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="820aea986c1eb4c0dbf2f0997ce568ed4127542f" translate="yes" xml:space="preserve">
          <source>.ExtraTreesRegressor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004ab63acb4c29f7668562054d3b0df25869341b" translate="yes" xml:space="preserve">
          <source>.ExtraTreesRegressor.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3342e2ff5e9892fcbab732a79608fdbb999bfb" translate="yes" xml:space="preserve">
          <source>.ExtraTreesRegressor.apply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37399010bb5d6ef1dee3c07dce2b3c34fe69055e" translate="yes" xml:space="preserve">
          <source>.ExtraTreesRegressor.decision_path()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702e8fd4118f17c9a4cf04b67bec8a42d49a0f34" translate="yes" xml:space="preserve">
          <source>.ExtraTreesRegressor.feature_importances_</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab423b5281b332edcf769e522b9f09a14c9c986" translate="yes" xml:space="preserve">
          <source>.ExtraTreesRegressor.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1e47c65bd1d001a1d614d06beed5091ff8313c" translate="yes" xml:space="preserve">
          <source>.ExtraTreesRegressor.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a173b986c7c94ac1972eb894879bfc649a194559" translate="yes" xml:space="preserve">
          <source>.ExtraTreesRegressor.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff5f6710a0cb482a5aacacf924cbf461f415093" translate="yes" xml:space="preserve">
          <source>.ExtraTreesRegressor.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78232b4e6b370c2cee4ac9a430c70232e063b677" translate="yes" xml:space="preserve">
          <source>.ExtraTreesRegressor.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9237a3eb0908eec606650c8b22c14247cf59f173" translate="yes" xml:space="preserve">
          <source>.FactorAnalysis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8dbfaa5aa81a350032574d3e296e36a6bcab3a0" translate="yes" xml:space="preserve">
          <source>.FactorAnalysis()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8728ecb02c9692631f11995704dceb827a6555d9" translate="yes" xml:space="preserve">
          <source>.FactorAnalysis.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cbd2e0b4d08c383ef2970cc5c289bcaab85052d" translate="yes" xml:space="preserve">
          <source>.FactorAnalysis.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec1c74894bb792b8e1e304711e118cfeff29ace" translate="yes" xml:space="preserve">
          <source>.FactorAnalysis.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd95d322e0a61e537ed61fc4d878011e65cc6b17" translate="yes" xml:space="preserve">
          <source>.FactorAnalysis.get_covariance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7705628bec618f8ea05e3f6014e748986adccf8e" translate="yes" xml:space="preserve">
          <source>.FactorAnalysis.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca149f59ec26fb28f5f034d5b93d6880f6738b9" translate="yes" xml:space="preserve">
          <source>.FactorAnalysis.get_precision()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645b5280d08f994918adb5ae413f808338946d14" translate="yes" xml:space="preserve">
          <source>.FactorAnalysis.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e22ff5cb316dbabed159e17b5d7e10682281333" translate="yes" xml:space="preserve">
          <source>.FactorAnalysis.score_samples()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c5e325afa0728bdd96de26a8e6f77167e5e2d7" translate="yes" xml:space="preserve">
          <source>.FactorAnalysis.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aaef320a43f87d64135b220a01314eb14a573f9" translate="yes" xml:space="preserve">
          <source>.FactorAnalysis.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9840318e45dcaef9fcd6691ceb7e6ef075f47c" translate="yes" xml:space="preserve">
          <source>.FastICA</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98af94b3dc47f10227251e31c0e865e6e475f953" translate="yes" xml:space="preserve">
          <source>.FastICA()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bab7ece68664d8d13afd50c57a239d51e7a18f4" translate="yes" xml:space="preserve">
          <source>.FastICA.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf9b0a70704d97d5b8a50ed052852fa140de886" translate="yes" xml:space="preserve">
          <source>.FastICA.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e70c05c840b8296dd80375d96677ad60665567a" translate="yes" xml:space="preserve">
          <source>.FastICA.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78da6840877d17e7955e01ecb0b0a6fc414ed2f" translate="yes" xml:space="preserve">
          <source>.FastICA.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86fce8c816ece64b1e28ac2c0c4ee550c07c135e" translate="yes" xml:space="preserve">
          <source>.FastICA.inverse_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45996922b72802e9085d95bf97ea5c54f2541f7" translate="yes" xml:space="preserve">
          <source>.FastICA.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4e7808ac6331ae226b460cc98d01f8e2b36599" translate="yes" xml:space="preserve">
          <source>.FastICA.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c29267ae6d62684d437bfb40237b875059b5fd8" translate="yes" xml:space="preserve">
          <source>.FeatureAgglomeration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da6d71b129bf73f2f3e7f22a1943d857d27af9f" translate="yes" xml:space="preserve">
          <source>.FeatureAgglomeration()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f6e515695e30e3587896147086efaae5ca2508" translate="yes" xml:space="preserve">
          <source>.FeatureAgglomeration.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0722d547c14687c31d548270015defde792e3ebd" translate="yes" xml:space="preserve">
          <source>.FeatureAgglomeration.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7368b3a8bc4b94660bd1465a7c7e955e8fc56e90" translate="yes" xml:space="preserve">
          <source>.FeatureAgglomeration.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82575aacce4da79836d435922c78b7d7f9678f25" translate="yes" xml:space="preserve">
          <source>.FeatureAgglomeration.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66500bc925ed6a4ea1b33504d24b315c1b6a2ef0" translate="yes" xml:space="preserve">
          <source>.FeatureAgglomeration.inverse_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af41b09de19bfc00890c3892ab56a3895ca49517" translate="yes" xml:space="preserve">
          <source>.FeatureAgglomeration.pooling_func()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90640d24f751700253f76a8254f5fa87fe107f25" translate="yes" xml:space="preserve">
          <source>.FeatureAgglomeration.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0e154b361027d6ad79f4532ab3709e21fd17d5" translate="yes" xml:space="preserve">
          <source>.FeatureAgglomeration.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a23ca9ef428b61e4eadf4ab86b974715620848be" translate="yes" xml:space="preserve">
          <source>.FeatureHasher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d15aa3cfafde8d5953288956b2fcc721da04af9" translate="yes" xml:space="preserve">
          <source>.FeatureHasher()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f271e623cd080d6459aa3fbb623aef4d43b043" translate="yes" xml:space="preserve">
          <source>.FeatureHasher.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d158cf572c0522d64fe04e5eab6a1b92c46a5960" translate="yes" xml:space="preserve">
          <source>.FeatureHasher.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b41367d8234e72fece1c6a6f2f60a470d28b544" translate="yes" xml:space="preserve">
          <source>.FeatureHasher.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11361a4a37244c2e4aa4a3ed57dff85029b0cda" translate="yes" xml:space="preserve">
          <source>.FeatureHasher.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f0c496f15b6d1d9de9bc3617fe97c0463e8913" translate="yes" xml:space="preserve">
          <source>.FeatureHasher.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9f15cd237e3f085b223911fa94987633e3899e" translate="yes" xml:space="preserve">
          <source>.FeatureHasher.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a611c628d9cae9e8e1aaa08ed103e8a24f2b282" translate="yes" xml:space="preserve">
          <source>.FeatureUnion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263f60456d95b73bcfe6560782376b5552dc4421" translate="yes" xml:space="preserve">
          <source>.FeatureUnion()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07be75d96b891d5c055fae3f5ef92a7b5030966" translate="yes" xml:space="preserve">
          <source>.FeatureUnion.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d42c40c7ff90f41316fdcef92faea1c56d03a2c" translate="yes" xml:space="preserve">
          <source>.FeatureUnion.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3d5fd50df9edba85661f91d2405acdfa210a3b" translate="yes" xml:space="preserve">
          <source>.FeatureUnion.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de35e1b5b50c302264802ead5a6422814637a13" translate="yes" xml:space="preserve">
          <source>.FeatureUnion.get_feature_names()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af315fa431718fc686d1d9b965b70c3e0aaf50b4" translate="yes" xml:space="preserve">
          <source>.FeatureUnion.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24444051d1dba2e90a8d617090ebf99244a51668" translate="yes" xml:space="preserve">
          <source>.FeatureUnion.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132d5acadf020740a1ae4ed0776549818027aafb" translate="yes" xml:space="preserve">
          <source>.FeatureUnion.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919dddd986a3f80c6aa8f724abb228cd11f6bba6" translate="yes" xml:space="preserve">
          <source>.FitFailedWarning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab097b4297abd62811752d0c65de96e87bab506" translate="yes" xml:space="preserve">
          <source>.FitFailedWarning.with_traceback()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a803e9135b72768b7e3ff8ff363fd2c2192c35" translate="yes" xml:space="preserve">
          <source>.FunctionTransformer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc95e9a9916b908a61abb1a933799816098b2c8" translate="yes" xml:space="preserve">
          <source>.FunctionTransformer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c984c8cd03b75aedc08193d1b8d0e736a0ebec7" translate="yes" xml:space="preserve">
          <source>.FunctionTransformer.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75914fe4b1886e2e575782b46b8cabafb2028c0e" translate="yes" xml:space="preserve">
          <source>.FunctionTransformer.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bbf65d6d6703e713431bf856a4acefafbd23fe0" translate="yes" xml:space="preserve">
          <source>.FunctionTransformer.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1fa6ef60dbba519e85bfea938065b859dd17ef" translate="yes" xml:space="preserve">
          <source>.FunctionTransformer.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2169d53632e0235575ba06ef7e18b294e0c988d7" translate="yes" xml:space="preserve">
          <source>.FunctionTransformer.inverse_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d72629ed5915b1a55259239f27d351e32b1762c" translate="yes" xml:space="preserve">
          <source>.FunctionTransformer.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d96c50ae904aebb9eb615bb0495b78ea525df8b" translate="yes" xml:space="preserve">
          <source>.FunctionTransformer.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064360eb669e2e68bd2250ee6da7abf8da16a3dd" translate="yes" xml:space="preserve">
          <source>.GaussianMixture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eab0e86beffbfe1984fd9f2eb29e7acc4f51064" translate="yes" xml:space="preserve">
          <source>.GaussianMixture()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7fbe604f4c7f47a18bda81ec7d849292de0035" translate="yes" xml:space="preserve">
          <source>.GaussianMixture.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624bde2e4d4a4437b5488e585f405580342bd3ad" translate="yes" xml:space="preserve">
          <source>.GaussianMixture.aic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8726615ba301d93d31f04bcdd2c66998a784e7af" translate="yes" xml:space="preserve">
          <source>.GaussianMixture.bic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1515431cd27c05b5654ce03ec97453445133fdc7" translate="yes" xml:space="preserve">
          <source>.GaussianMixture.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b119f67107d8209d0e1c0b5b59f605e225c8f1" translate="yes" xml:space="preserve">
          <source>.GaussianMixture.fit_predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e474bdfc3640e206b64116e50d285c89c4d19c" translate="yes" xml:space="preserve">
          <source>.GaussianMixture.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c90973b49694eac48d58f6f040371c82c618b6c" translate="yes" xml:space="preserve">
          <source>.GaussianMixture.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b678ab772b8657b702021ade3300798c88a0d6" translate="yes" xml:space="preserve">
          <source>.GaussianMixture.predict_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f798395b37f6472acdbaa3694d6c5807b287bc65" translate="yes" xml:space="preserve">
          <source>.GaussianMixture.sample()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b6ce9a74ab64a2e9d97a0db5608c521432d9be" translate="yes" xml:space="preserve">
          <source>.GaussianMixture.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e187ab4ca2f760b5fff1f04be20bdc26380917" translate="yes" xml:space="preserve">
          <source>.GaussianMixture.score_samples()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e35c7b36c9c2468cdaf681b2c5d03a430b96a0cb" translate="yes" xml:space="preserve">
          <source>.GaussianMixture.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac45355f849f78528ea2504b3269d33e72115c34" translate="yes" xml:space="preserve">
          <source>.GaussianNB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886ba1d2c029f735fdadabc73ecb4595be7a4586" translate="yes" xml:space="preserve">
          <source>.GaussianNB()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba2916004a5fbc53b670edf7ab4563728dab4df" translate="yes" xml:space="preserve">
          <source>.GaussianNB.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dabadcf4f81125372594dbb2de7a634d3dc919e" translate="yes" xml:space="preserve">
          <source>.GaussianNB.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a4bc7d0c02bec227c21d5b8ad2c06a04173a84" translate="yes" xml:space="preserve">
          <source>.GaussianNB.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff9cf5e98f62e7099343bb75f9b3f8d5159c4fb" translate="yes" xml:space="preserve">
          <source>.GaussianNB.partial_fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed643194e9b8d0c0d31bf26e48fc6ae067c20e2" translate="yes" xml:space="preserve">
          <source>.GaussianNB.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b61f4882af81a2a6f823cc2a55c4af92778b7fa" translate="yes" xml:space="preserve">
          <source>.GaussianNB.predict_log_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8642aa453cdae207500d1a5e8835bb2da0205ff0" translate="yes" xml:space="preserve">
          <source>.GaussianNB.predict_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3809da41290653362e56a844f42ecd3c0aef478e" translate="yes" xml:space="preserve">
          <source>.GaussianNB.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057a2fb2cf14104ab78b767ba5f31e1e0ac24dec" translate="yes" xml:space="preserve">
          <source>.GaussianNB.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b977e38c634790c61380cd6895c1363bbb28bb" translate="yes" xml:space="preserve">
          <source>.GaussianProcessClassifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff8fb13df6bf9b58043df067485493c064b129b8" translate="yes" xml:space="preserve">
          <source>.GaussianProcessClassifier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af6351e6ba9c9c6b0602faf5a6eac3c3a6732ad" translate="yes" xml:space="preserve">
          <source>.GaussianProcessClassifier.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005b00bc1b6a32012eda335df863a5b0b066182a" translate="yes" xml:space="preserve">
          <source>.GaussianProcessClassifier.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f974799451bcb2ac1524ef1caedfffd9de959e58" translate="yes" xml:space="preserve">
          <source>.GaussianProcessClassifier.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca19d077106f468254d14ab003273b654b419cdb" translate="yes" xml:space="preserve">
          <source>.GaussianProcessClassifier.log_marginal_likelihood()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a95060bf07b7f6286d1fca951b71af1c1eb93f" translate="yes" xml:space="preserve">
          <source>.GaussianProcessClassifier.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e01fa3d9dfe7cdcf1bb06990967f2c8d23e0c5" translate="yes" xml:space="preserve">
          <source>.GaussianProcessClassifier.predict_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5dc01599ab46480d59bf5c9ca339994387859e1" translate="yes" xml:space="preserve">
          <source>.GaussianProcessClassifier.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d935bf05c7fcc311ee476aa8e0c05abd83cd4c2f" translate="yes" xml:space="preserve">
          <source>.GaussianProcessClassifier.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b7a4049756094a6dc11f1cbf4cca40440b5aa5" translate="yes" xml:space="preserve">
          <source>.GaussianProcessRegressor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc0ec09bb59e85e8d5d160cb9b7d8cd0b6d75c1" translate="yes" xml:space="preserve">
          <source>.GaussianProcessRegressor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c3bc8ee9964566367317485e0d69ab87b6ac16" translate="yes" xml:space="preserve">
          <source>.GaussianProcessRegressor.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fae221fa450508ce0c3775db28d66762ef90857" translate="yes" xml:space="preserve">
          <source>.GaussianProcessRegressor.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa9380831fc467ed15cc322174ba37d8fe6425e6" translate="yes" xml:space="preserve">
          <source>.GaussianProcessRegressor.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63d3d602a40345fc6094c0b8ba2d160f7aff3a7" translate="yes" xml:space="preserve">
          <source>.GaussianProcessRegressor.log_marginal_likelihood()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d052b236c9344cc9c63e61a26bc3f8598c9daa" translate="yes" xml:space="preserve">
          <source>.GaussianProcessRegressor.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f3ed35c15c7ac9aff643bdf56523f83710e1e2" translate="yes" xml:space="preserve">
          <source>.GaussianProcessRegressor.rng</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dae330985f44d12193dbd1369f373a3880b307f" translate="yes" xml:space="preserve">
          <source>.GaussianProcessRegressor.sample_y()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1a0c66ebbd717b653dac7350697a4d9e6ad36b" translate="yes" xml:space="preserve">
          <source>.GaussianProcessRegressor.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfebc0271564fd343874e918ba95c3ea0073bf1e" translate="yes" xml:space="preserve">
          <source>.GaussianProcessRegressor.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41956d805a6be119ad47b9bda6edb7f49f68bc2f" translate="yes" xml:space="preserve">
          <source>.GaussianProcessRegressor.y_train_mean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d1a67c73b264aa7264dc31f26d5df6088b2b45" translate="yes" xml:space="preserve">
          <source>.GaussianRandomProjection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db65d9b37d30a18a3804b2e9446e7feb4f0ae4d2" translate="yes" xml:space="preserve">
          <source>.GaussianRandomProjection()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db6fc1ddd5b364e22d2db3154dfb4387029470a" translate="yes" xml:space="preserve">
          <source>.GaussianRandomProjection.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f8102eba7f079da49b4c656740d931c9f684f4" translate="yes" xml:space="preserve">
          <source>.GaussianRandomProjection.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9259b58622c5fd44733c52902abe19161b4641" translate="yes" xml:space="preserve">
          <source>.GaussianRandomProjection.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860167e0ced25575e83549afc9e7633ceb3a4705" translate="yes" xml:space="preserve">
          <source>.GaussianRandomProjection.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="985650da11f0b1ae61136d811d288eadbdd4eb14" translate="yes" xml:space="preserve">
          <source>.GaussianRandomProjection.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff6d12aaf1f7fa0aca16f192d0d4fb0f4f4c675" translate="yes" xml:space="preserve">
          <source>.GaussianRandomProjection.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a99841557d56910d0bb8b8dad6114fc5bd4861f" translate="yes" xml:space="preserve">
          <source>.GenericUnivariateSelect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f6b626dec1048dc409606b1eb1bdd80febd14a2" translate="yes" xml:space="preserve">
          <source>.GenericUnivariateSelect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb16e247710e05d5015612e6c7e1c7c81161bb9" translate="yes" xml:space="preserve">
          <source>.GenericUnivariateSelect.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508699142d7e6451d722f8608036aa95e264bf96" translate="yes" xml:space="preserve">
          <source>.GenericUnivariateSelect.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63251734d8c7c838718b56afe4bd5b2e1b9ca9b3" translate="yes" xml:space="preserve">
          <source>.GenericUnivariateSelect.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f341aa7af38a236de4fc17c303f9caa625cbf31" translate="yes" xml:space="preserve">
          <source>.GenericUnivariateSelect.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db46e98365324183e1f6cd9135fae62b589536e" translate="yes" xml:space="preserve">
          <source>.GenericUnivariateSelect.get_support()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ffb8d29dcce7e91a3fcdce0043c09329e9573e3" translate="yes" xml:space="preserve">
          <source>.GenericUnivariateSelect.inverse_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db484388f6f0b74394d8ba048cc4de8917cafff" translate="yes" xml:space="preserve">
          <source>.GenericUnivariateSelect.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231c656b3a3d944cfd5d0e1078df1945d6b4d8e5" translate="yes" xml:space="preserve">
          <source>.GenericUnivariateSelect.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbeb99499c22b5cca1d80e351e5b4a0546351b8" translate="yes" xml:space="preserve">
          <source>.GradientBoostingClassifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6fdef7595b8a9cb6f0ffcf09c1f667593eda88" translate="yes" xml:space="preserve">
          <source>.GradientBoostingClassifier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8680f2c2eb327e0268e2c5898871f8949fe755" translate="yes" xml:space="preserve">
          <source>.GradientBoostingClassifier.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582453fb8072447039c759aa2906d9c94da7c67c" translate="yes" xml:space="preserve">
          <source>.GradientBoostingClassifier.apply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07998bf3e8b05695b20c0d3f8bf06bd06bff441a" translate="yes" xml:space="preserve">
          <source>.GradientBoostingClassifier.decision_function()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f1f98c7d76fbdd70f74e5b55095392af6635cd" translate="yes" xml:space="preserve">
          <source>.GradientBoostingClassifier.feature_importances_</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b6ae3c26e3751ca45ab84b0e85d6dd6c0f799d" translate="yes" xml:space="preserve">
          <source>.GradientBoostingClassifier.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402d4094c358ef06c4f1ab2128fa2f1acb185852" translate="yes" xml:space="preserve">
          <source>.GradientBoostingClassifier.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1762e6b4e777437edafaf8309860528971ace065" translate="yes" xml:space="preserve">
          <source>.GradientBoostingClassifier.n_features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b354dc4e762bed6f3780cfc52c800c5849e5b14" translate="yes" xml:space="preserve">
          <source>.GradientBoostingClassifier.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="890cab5bb22d083199e0626161bd73b03c6da528" translate="yes" xml:space="preserve">
          <source>.GradientBoostingClassifier.predict_log_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89f7658ceabf62e468592f05f832c1369c01dc8" translate="yes" xml:space="preserve">
          <source>.GradientBoostingClassifier.predict_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9088623dd8c1b075099e7726de0fe6172392716f" translate="yes" xml:space="preserve">
          <source>.GradientBoostingClassifier.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36a354c84f3530bac96e244fe9d7b457245c33e" translate="yes" xml:space="preserve">
          <source>.GradientBoostingClassifier.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945a24c9e29bca1b3a129e9cd8662116888f2c0f" translate="yes" xml:space="preserve">
          <source>.GradientBoostingClassifier.staged_decision_function()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25313c94184a19e90f9267baa41f044a2d967321" translate="yes" xml:space="preserve">
          <source>.GradientBoostingClassifier.staged_predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620dd35cd7afbff134667f831bf71110fda2fa80" translate="yes" xml:space="preserve">
          <source>.GradientBoostingClassifier.staged_predict_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="560a6fd5256868f18ab4f0ddd041f94139760c0a" translate="yes" xml:space="preserve">
          <source>.GradientBoostingRegressor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a5a44aede5ea2baaa56d34dc33a2204852263f" translate="yes" xml:space="preserve">
          <source>.GradientBoostingRegressor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2091bdc493ac4e9ecc5f4e27e9207d32b0696331" translate="yes" xml:space="preserve">
          <source>.GradientBoostingRegressor.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84bc621e80cddf07e3065bb5c1a2bc3976ed53b" translate="yes" xml:space="preserve">
          <source>.GradientBoostingRegressor.apply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a018e6ace76e775ce6a75e867128a46b7ae29f" translate="yes" xml:space="preserve">
          <source>.GradientBoostingRegressor.feature_importances_</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1ea39e3bca7fdf386002d12a85160787693103" translate="yes" xml:space="preserve">
          <source>.GradientBoostingRegressor.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed159079f147ba62f1b0c39bd373dbe8c24dc0a" translate="yes" xml:space="preserve">
          <source>.GradientBoostingRegressor.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb1a0de3a01b31253c81d5738f3dacef5e9107a" translate="yes" xml:space="preserve">
          <source>.GradientBoostingRegressor.n_features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0f3efb323bcf028e1a12583682c0b47207c920" translate="yes" xml:space="preserve">
          <source>.GradientBoostingRegressor.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d165815a9968f6a3a81bf2329b517982fdf66771" translate="yes" xml:space="preserve">
          <source>.GradientBoostingRegressor.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b63428f48c0b4c0869cb0765c2f56a1cb87909" translate="yes" xml:space="preserve">
          <source>.GradientBoostingRegressor.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a595dbfb923b37180580218631182620e5835b2f" translate="yes" xml:space="preserve">
          <source>.GradientBoostingRegressor.staged_predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a04a620abf9cef41f7b188815832bb29db3eb4" translate="yes" xml:space="preserve">
          <source>.GraphLasso</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e204da77db26beba834c699f267c53d186d3c83" translate="yes" xml:space="preserve">
          <source>.GraphLasso()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb8e8b58f85e97c108ac06a7a7b0edf801504d1" translate="yes" xml:space="preserve">
          <source>.GraphLasso.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2caac5320511d349d6e0b73c0dbd1c5dc0cddc38" translate="yes" xml:space="preserve">
          <source>.GraphLasso.error_norm()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b931e1cb7efe68cc41f964f88752b20b6ae72e" translate="yes" xml:space="preserve">
          <source>.GraphLasso.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f07ff7cc576a95ae88cab267537e8f67ffffcba" translate="yes" xml:space="preserve">
          <source>.GraphLasso.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b026e24198451378d1a74b1fea7aac99d295b29b" translate="yes" xml:space="preserve">
          <source>.GraphLasso.get_precision()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be8055c2b66422c5906aaf84df5f84c36aafcb2" translate="yes" xml:space="preserve">
          <source>.GraphLasso.mahalanobis()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece835799003704f4d5582c3ddc6d98b8ccea5f8" translate="yes" xml:space="preserve">
          <source>.GraphLasso.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a58ba8e73e011eb21b8bda90ca41d3491e9807b" translate="yes" xml:space="preserve">
          <source>.GraphLasso.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f3c9bcb908c66d4a57e1aa21770a10f1c84a0a" translate="yes" xml:space="preserve">
          <source>.GraphLassoCV</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76039267232ae037f61f0c7c55bf988ff0c9748" translate="yes" xml:space="preserve">
          <source>.GraphLassoCV()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4bfcf5ba87638dfaf41e9367937305c74b5d838" translate="yes" xml:space="preserve">
          <source>.GraphLassoCV.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65bcfdc5102c444f2f40faf767cd1b02953938c" translate="yes" xml:space="preserve">
          <source>.GraphLassoCV.error_norm()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bdafa793e65b29fc87e52c68da9e8544aa48169" translate="yes" xml:space="preserve">
          <source>.GraphLassoCV.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88e83497aa1cb2c22eea2e25e3eea72727161e7" translate="yes" xml:space="preserve">
          <source>.GraphLassoCV.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ece7836bb13d337c20be0f34daf088d15b75a5c" translate="yes" xml:space="preserve">
          <source>.GraphLassoCV.get_precision()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c9629b52b815690ac05776e3dca9be6c5c32a2" translate="yes" xml:space="preserve">
          <source>.GraphLassoCV.grid_scores</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce74ff0f0fc8fb9d23a5269bbb30b03d7ab3828b" translate="yes" xml:space="preserve">
          <source>.GraphLassoCV.mahalanobis()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb6f768985fb0244a27b2ccbb8d50ed4af3593a" translate="yes" xml:space="preserve">
          <source>.GraphLassoCV.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c381bb667f7d157eeff00b268a5bdb40adad8bf" translate="yes" xml:space="preserve">
          <source>.GraphLassoCV.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226d62ac2715a049b78dee481a685f8c23a8b700" translate="yes" xml:space="preserve">
          <source>.GraphicalLasso</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17c272efa8540e20ab1a51c9887baa658e8ec08" translate="yes" xml:space="preserve">
          <source>.GraphicalLasso()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0aef535ea6aa4f2c98148dca24e9c460865725" translate="yes" xml:space="preserve">
          <source>.GraphicalLasso.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe9db18af5b93f2aba29a92491c6d64096102367" translate="yes" xml:space="preserve">
          <source>.GraphicalLasso.error_norm()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ecb1cc43bd4cd01b6b90fb6654edf335eabcc3" translate="yes" xml:space="preserve">
          <source>.GraphicalLasso.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0715e2df9e0a7f320c833e3cb50e34aecfe209a8" translate="yes" xml:space="preserve">
          <source>.GraphicalLasso.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1a0baf3308912cd8d620c5b02ca33194bfa5a0" translate="yes" xml:space="preserve">
          <source>.GraphicalLasso.get_precision()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260146c3b5e2dfcee6dd24ad49c606b2a3b5c500" translate="yes" xml:space="preserve">
          <source>.GraphicalLasso.mahalanobis()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1251a2fd86f9b690b08fec6296d19edcaa0a17b" translate="yes" xml:space="preserve">
          <source>.GraphicalLasso.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e0229648c734af9afca749b09a2f1e3b52480c" translate="yes" xml:space="preserve">
          <source>.GraphicalLasso.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb3829bfdcdafac99acab35eddffceaf86a1b0e" translate="yes" xml:space="preserve">
          <source>.GraphicalLassoCV</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a800270ec773e9491ebdadf490493cb975dcb4e" translate="yes" xml:space="preserve">
          <source>.GraphicalLassoCV()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49200b9d109c179ef99045f06852e7cff948259d" translate="yes" xml:space="preserve">
          <source>.GraphicalLassoCV.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d09604d8dfdcc956b546386bb85f1253c9d07ec" translate="yes" xml:space="preserve">
          <source>.GraphicalLassoCV.error_norm()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b31c573f650d7ca905e48fa27efb3f03dec815" translate="yes" xml:space="preserve">
          <source>.GraphicalLassoCV.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7ba49fce0f0cb7ba9241b28c8880075a129fb7" translate="yes" xml:space="preserve">
          <source>.GraphicalLassoCV.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d4a6e4a2b0ff6bffbbc9e993dbc9dc61424c73" translate="yes" xml:space="preserve">
          <source>.GraphicalLassoCV.get_precision()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44dc3fa70ee47d36c18df206ccf479f60ef8d699" translate="yes" xml:space="preserve">
          <source>.GraphicalLassoCV.grid_scores</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570efcf93291c987fdac7bb1b164a807c27e1ff4" translate="yes" xml:space="preserve">
          <source>.GraphicalLassoCV.mahalanobis()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec3e431409bb187603299df34171d09ab91b3bf" translate="yes" xml:space="preserve">
          <source>.GraphicalLassoCV.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e50ecd8001b09dcea58bc5d07cb680d8b98a6f" translate="yes" xml:space="preserve">
          <source>.GraphicalLassoCV.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710b66cc3dd53f16e42364f82cbcc111c27f0bdc" translate="yes" xml:space="preserve">
          <source>.GridSearchCV</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e26ca1895a925211ab76a2bd31d6d26b5d0c9c11" translate="yes" xml:space="preserve">
          <source>.GridSearchCV()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e565b26987febfedfebdda111200c191c38b617" translate="yes" xml:space="preserve">
          <source>.GridSearchCV.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869de776af5791f57263861080adbe2a3b774a76" translate="yes" xml:space="preserve">
          <source>.GridSearchCV.decision_function()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a9d2070662f995a77ce487b7e0ce917c5ccef4a" translate="yes" xml:space="preserve">
          <source>.GridSearchCV.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca596ad43bc8583fc160e1fdb1c9860db97971ec" translate="yes" xml:space="preserve">
          <source>.GridSearchCV.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde970ddc37f95b147d8bff0a4228c928895c5c3" translate="yes" xml:space="preserve">
          <source>.GridSearchCV.inverse_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc7eece80fa1faab30baa11c9531341c8b6a82aa" translate="yes" xml:space="preserve">
          <source>.GridSearchCV.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6422568b9e8e2be37f4f9315fe95431b4101c274" translate="yes" xml:space="preserve">
          <source>.GridSearchCV.predict_log_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3ad934b550e5560a8ad79aa3a98df03d304cff" translate="yes" xml:space="preserve">
          <source>.GridSearchCV.predict_proba()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b10ab8eab97bdcbd2ee1bffec8b561532532de7" translate="yes" xml:space="preserve">
          <source>.GridSearchCV.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b81c304e5812eb6757feb867c4fbebf3fd17d1ea" translate="yes" xml:space="preserve">
          <source>.GridSearchCV.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be07344e22059b87886d8e727f394dcd4ed617cb" translate="yes" xml:space="preserve">
          <source>.GridSearchCV.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef64a11a05f0c0ac3b16051255713b7c385436d" translate="yes" xml:space="preserve">
          <source>.GroupKFold</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d3430a6c77972d3d3c807e5d645fde141eafc8" translate="yes" xml:space="preserve">
          <source>.GroupKFold()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb978ebf00aa81ab85342d7f2068b7ad7da5cd6" translate="yes" xml:space="preserve">
          <source>.GroupKFold.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452a2d2ff15e39cf6801687e8735fac157df79bb" translate="yes" xml:space="preserve">
          <source>.GroupKFold.get_n_splits()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e5cefa597b72195803993292564d864aa52c6d" translate="yes" xml:space="preserve">
          <source>.GroupKFold.split()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b5a79e5993f45533c3e31f3fe5f3a56a65b0f6" translate="yes" xml:space="preserve">
          <source>.GroupShuffleSplit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08002cd3e52d3fbc8bef69c36d93dd47899974a7" translate="yes" xml:space="preserve">
          <source>.GroupShuffleSplit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d44913f375373a528a7cd6018d5d09c9d05264" translate="yes" xml:space="preserve">
          <source>.GroupShuffleSplit.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02f75d02e79514978154a11c3326a811b810f84" translate="yes" xml:space="preserve">
          <source>.GroupShuffleSplit.get_n_splits()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc2a78c3ea90d1c725a8d29187673e1d77a372c" translate="yes" xml:space="preserve">
          <source>.GroupShuffleSplit.split()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f69601bb098d2f1a0f125e23d1d56bfe308b488" translate="yes" xml:space="preserve">
          <source>.HashingVectorizer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b33f1f17b08d66639b04b2bbda259dfe0ee2d2" translate="yes" xml:space="preserve">
          <source>.HashingVectorizer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7d55a3b8a60c89b1d138e99ba627b2ec6127bf" translate="yes" xml:space="preserve">
          <source>.HashingVectorizer.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5895bb533d27bb3deb70403e13f56c70030640c" translate="yes" xml:space="preserve">
          <source>.HashingVectorizer.build_analyzer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb7d714879a4f63713e822a1e6d6946b1e5c4ff" translate="yes" xml:space="preserve">
          <source>.HashingVectorizer.build_preprocessor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c049472a5138d1a3753cb9df7dbda863c02caa68" translate="yes" xml:space="preserve">
          <source>.HashingVectorizer.build_tokenizer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8339ce69a80b48a35719b1504d263c949c0f79" translate="yes" xml:space="preserve">
          <source>.HashingVectorizer.decode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5615031f85670bd96a13afb689232d8e2788dc1f" translate="yes" xml:space="preserve">
          <source>.HashingVectorizer.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3c87c1ffa980b72c267e387d245a09cc9e4703" translate="yes" xml:space="preserve">
          <source>.HashingVectorizer.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34f5c04a12927e813beee1fae5dd4ea90997eb1" translate="yes" xml:space="preserve">
          <source>.HashingVectorizer.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e683f03dae8e27e65f4c00b3910f3b7af977ce67" translate="yes" xml:space="preserve">
          <source>.HashingVectorizer.get_stop_words()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1fd2197a33e96ac05192956e8e8fba6f95e5643" translate="yes" xml:space="preserve">
          <source>.HashingVectorizer.partial_fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c96c6d2bd320c46cd44456a862e8468f13b567" translate="yes" xml:space="preserve">
          <source>.HashingVectorizer.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcccd59773a53b163084d8233d89dfd0ab5166d3" translate="yes" xml:space="preserve">
          <source>.HashingVectorizer.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae52813b0217270c6833b5e7c999f6001ca49643" translate="yes" xml:space="preserve">
          <source>.HuberRegressor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a00bd3490cf43aa119674cba14cf1b3b21a2e02" translate="yes" xml:space="preserve">
          <source>.HuberRegressor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653c02f122665025b38cfefd093c8c14453c18c0" translate="yes" xml:space="preserve">
          <source>.HuberRegressor.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca30058d4c620e296a4b7197fc97d7dca91a23e" translate="yes" xml:space="preserve">
          <source>.HuberRegressor.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0bc6119ee78bd7bc33fc10fad5405243313439c" translate="yes" xml:space="preserve">
          <source>.HuberRegressor.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece8ddee7daeb9644453b2f065a317372ad077ab" translate="yes" xml:space="preserve">
          <source>.HuberRegressor.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210753dca929405871aebc0a8d7c3ba95850b48c" translate="yes" xml:space="preserve">
          <source>.HuberRegressor.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0728e44aa6b4520907c4f2c31610c3f7eb814b" translate="yes" xml:space="preserve">
          <source>.HuberRegressor.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1c58f3096f2448391fd9f3f755c9f40482e68a" translate="yes" xml:space="preserve">
          <source>.Hyperparameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3989818e3b4f3be1e9af7bd8fa15b77d492ca8e0" translate="yes" xml:space="preserve">
          <source>.Hyperparameter.__call__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063e5039407353bd36445034adaea6ec1f823020" translate="yes" xml:space="preserve">
          <source>.Hyperparameter.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5be82d04cfe12ae72c07d1289728036a20744d" translate="yes" xml:space="preserve">
          <source>.Hyperparameter.bounds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1303b20f26c8e4520f90d8e828012a1ddeafb077" translate="yes" xml:space="preserve">
          <source>.Hyperparameter.count()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389a5d07808f71372d011419b17a03a9e42faab2" translate="yes" xml:space="preserve">
          <source>.Hyperparameter.fixed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98430a9733561b720c81cfa1039393e4d7a403e" translate="yes" xml:space="preserve">
          <source>.Hyperparameter.index()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2221233915203d52d583424af7dad60b9adf6083" translate="yes" xml:space="preserve">
          <source>.Hyperparameter.n_elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="363e0a1a4989d0c15a47679f3034a91b7cc7f721" translate="yes" xml:space="preserve">
          <source>.Hyperparameter.name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162635205ea86e3975d553206c4e6842cf83a913" translate="yes" xml:space="preserve">
          <source>.Hyperparameter.value_type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7049835537903b7cfcbade6016aea6346a2de3f4" translate="yes" xml:space="preserve">
          <source>.Imputer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a433e4db6832964639997c493201a4e0e22258e" translate="yes" xml:space="preserve">
          <source>.Imputer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7563408533aab52a29a310e357ee7ac78e80c763" translate="yes" xml:space="preserve">
          <source>.Imputer.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d052d9cabf614f032036b643f3bdcaac3f19844d" translate="yes" xml:space="preserve">
          <source>.Imputer.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13dc85681d6655cd88acdbe6c5965a4623fbb8f9" translate="yes" xml:space="preserve">
          <source>.Imputer.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c434a4c9f8ae2d1524a786cad71c0aa1585526" translate="yes" xml:space="preserve">
          <source>.Imputer.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="546af73928037395304d1f4623f2aeacbfe2a833" translate="yes" xml:space="preserve">
          <source>.Imputer.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf8ab2dcbf1ab66ed0e5e8f723aec12771ba81c" translate="yes" xml:space="preserve">
          <source>.Imputer.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c542dd2765c12d1e1a97a03234c7e64e2d7e46" translate="yes" xml:space="preserve">
          <source>.IncrementalPCA</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4e4a1da03178411b5ffabb339fc41c87636715" translate="yes" xml:space="preserve">
          <source>.IncrementalPCA()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01341e69e6b0998309a50b5faf97ca69a8bf7b53" translate="yes" xml:space="preserve">
          <source>.IncrementalPCA.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34712e247fe9ac158de4dbfd5936cd2c1f85e21e" translate="yes" xml:space="preserve">
          <source>.IncrementalPCA.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0915667e62c65d348f6eebf6622de1f87b093efb" translate="yes" xml:space="preserve">
          <source>.IncrementalPCA.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d82b624dfbdc78f3e5e7428e9d7a9f149df728" translate="yes" xml:space="preserve">
          <source>.IncrementalPCA.get_covariance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca649dec06ce190328a44227a9e8fd415e5c6f6" translate="yes" xml:space="preserve">
          <source>.IncrementalPCA.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460065c9136120ca5114d7034c9e810f4d9ffe64" translate="yes" xml:space="preserve">
          <source>.IncrementalPCA.get_precision()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ad29f6d8b84c18b2320a53cf0773c594c9d3ea" translate="yes" xml:space="preserve">
          <source>.IncrementalPCA.inverse_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036875f51cdbb5a2c3fcf959bf5264068e433ac5" translate="yes" xml:space="preserve">
          <source>.IncrementalPCA.partial_fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3537501574e76b72967fc8e83c050584fa23150" translate="yes" xml:space="preserve">
          <source>.IncrementalPCA.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24f01a4064ba262c8969b46ed045386f8a5bb5f" translate="yes" xml:space="preserve">
          <source>.IncrementalPCA.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdab269a502de51c79866988b214577ad151a5ec" translate="yes" xml:space="preserve">
          <source>.IsolationForest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54585e19c939b61d4f0989b792b375deb7fbe73c" translate="yes" xml:space="preserve">
          <source>.IsolationForest()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ecef9a7be76f6a3be23e87ef22b67e827151ea" translate="yes" xml:space="preserve">
          <source>.IsolationForest.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2526679c5507250a8a34a7080e726f8cc52e485" translate="yes" xml:space="preserve">
          <source>.IsolationForest.decision_function()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697acf8ba5c4f131ed1b00470349c7bdc7de71a8" translate="yes" xml:space="preserve">
          <source>.IsolationForest.estimators_samples_</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f4b83a2649387f7ed2bda03444161f3668adfd" translate="yes" xml:space="preserve">
          <source>.IsolationForest.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ceb7d0932848b8cfa7672de8f0211e902118e4" translate="yes" xml:space="preserve">
          <source>.IsolationForest.fit_predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc889faecf334be18deb8cc3650b39e398de75b" translate="yes" xml:space="preserve">
          <source>.IsolationForest.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2455a2bdbe2437d3cf5b88061db2fd7ac556809" translate="yes" xml:space="preserve">
          <source>.IsolationForest.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c7978cac29417cc6c9300e655a46732cf4e6cb9" translate="yes" xml:space="preserve">
          <source>.IsolationForest.score_samples()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8b22d7d45bfc3beb8fcb1191dc3a2c483b2b60" translate="yes" xml:space="preserve">
          <source>.IsolationForest.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b228e57f60712470a5032eea591b03331bbf381e" translate="yes" xml:space="preserve">
          <source>.Isomap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d505b2457d067202cd3baadb9470d349bb3f6689" translate="yes" xml:space="preserve">
          <source>.Isomap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93db022d54b243e5147a60bc054e51d5932644a" translate="yes" xml:space="preserve">
          <source>.Isomap.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29c8eda0e56b0eb8becaefa97bdd2eeed5ca070" translate="yes" xml:space="preserve">
          <source>.Isomap.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e823615831cc53754064e79840e127b130b4229" translate="yes" xml:space="preserve">
          <source>.Isomap.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f931750b2ab2edf68165d29447530f7ae83187e1" translate="yes" xml:space="preserve">
          <source>.Isomap.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad19cc0d527b5be8a574bc4634c6fa511577c96" translate="yes" xml:space="preserve">
          <source>.Isomap.reconstruction_error()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a1a6a1e3e869e82904d3ebc1a2b0ad2f8464f3" translate="yes" xml:space="preserve">
          <source>.Isomap.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f99d9322754d4066481512bed1e06f776a977995" translate="yes" xml:space="preserve">
          <source>.Isomap.transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2805fd3c1e6e74b86b9d06e0d34717b36e160a" translate="yes" xml:space="preserve">
          <source>.IsotonicRegression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36827456cc32b46cfb3e5c42fc96bc93f17833c2" translate="yes" xml:space="preserve">
          <source>.IsotonicRegression()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc10a080fd28b46ea0bdb03700a8f3cb75bb723e" translate="yes" xml:space="preserve">
          <source>.IsotonicRegression.__init__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d20ef09333f10d247ecf95575f26729eab7bf5" translate="yes" xml:space="preserve">
          <source>.IsotonicRegression.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac07ba447bddec68d7613c52287fbc5be8e730d" translate="yes" xml:space="preserve">
          <source>.IsotonicRegression.fit_transform()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9cabfaebd2259a291d05589ad191c89eba3685" translate="yes" xml:space="preserve">
          <source>.IsotonicRegression.get_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c0fb0beec0f618de38a87e2141d69e9227d158" translate="yes" xml:space="preserve">
          <source>.IsotonicRegression.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90ac77641c82f0ed3a71f2f0e0e791cdde4b445" translate="yes" xml:space="preserve">
          <source>.IsotonicRegression.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02cbb7766c51a17f7345c693631b8d9a019719e1" translate="yes" xml:space="preserve">
          <source>.IsotonicRegression.set_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f467d29df47072302fed5709278409eb6a2759" translate="yes" xml:space="preserve">
          <source>.IsotonicRegression.transform()</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
