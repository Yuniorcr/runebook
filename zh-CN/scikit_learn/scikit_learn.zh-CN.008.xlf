<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="scikit_learn">
    <body>
      <group id="scikit_learn">
        <trans-unit id="342f5d699020a612965897a77c74161783b71563" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Scoring parameter&lt;/strong&gt;: Model-evaluation tools using &lt;a href=&quot;cross_validation#cross-validation&quot;&gt;cross-validation&lt;/a&gt; (such as &lt;a href=&quot;generated/sklearn.model_selection.cross_val_score#sklearn.model_selection.cross_val_score&quot;&gt;&lt;code&gt;model_selection.cross_val_score&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.model_selection.gridsearchcv#sklearn.model_selection.GridSearchCV&quot;&gt;&lt;code&gt;model_selection.GridSearchCV&lt;/code&gt;&lt;/a&gt;) rely on an internal &lt;em&gt;scoring&lt;/em&gt; strategy. This is discussed in the section &lt;a href=&quot;#scoring-parameter&quot;&gt;The scoring parameter: defining model evaluation rules&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68aaea81a0430f27afbcda877bc6d3d221c90bbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Setting C&lt;/strong&gt;: &lt;code&gt;C&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt; by default and it&amp;rsquo;s a reasonable default choice. If you have a lot of noisy observations you should decrease it. It corresponds to regularize more the estimation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c568dd1c6861759637e5925df824b05f19794795" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Shortest-path graph search.&lt;/strong&gt; The most efficient known algorithms for this are &lt;em&gt;Dijkstra&amp;rsquo;s Algorithm&lt;/em&gt;, which is approximately \(O[N^2(k + \log(N))]\), or the &lt;em&gt;Floyd-Warshall algorithm&lt;/em&gt;, which is \(O[N^3]\). The algorithm can be selected by the user with the &lt;code&gt;path_method&lt;/code&gt; keyword of &lt;code&gt;Isomap&lt;/code&gt;. If unspecified, the code attempts to choose the best algorithm for the input data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff3f7f477a8f4932119f05d28246a49010595ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Side effect of caching transformers&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69be5aff61ea607b92765e9db44e3a14e510b42b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Single linkage&lt;/strong&gt; minimizes the distance between the closest observations of pairs of clusters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301757cf70ebdcd744f0c208e548545b16820c06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solution:&lt;/strong&gt;&lt;a href=&quot;../../auto_examples/exercises/plot_cv_diabetes#sphx-glr-auto-examples-exercises-plot-cv-diabetes-py&quot;&gt;Cross-validation on diabetes Dataset Exercise&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987c10dd4241dba70c23f539fb42fc205882d466" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solution:&lt;/strong&gt;&lt;a href=&quot;../../auto_examples/exercises/plot_cv_digits#sphx-glr-auto-examples-exercises-plot-cv-digits-py&quot;&gt;Cross-validation on Digits Dataset Exercise&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba6f95d725c06f7d7e0e1fedd32dcc552c5fa507" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Standardization&lt;/strong&gt; of datasets is a &lt;strong&gt;common requirement for many machine learning estimators&lt;/strong&gt; implemented in scikit-learn; they might behave badly if the individual features do not more or less look like standard normally distributed data: Gaussian with &lt;strong&gt;zero mean and unit variance&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9523bd581d8f6bb1c1aaa2026316a1a44c82857b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stochastic Gradient Descent (SGD)&lt;/strong&gt; is a simple yet very efficient approach to discriminative learning of linear classifiers under convex loss functions such as (linear) &lt;a href=&quot;https://en.wikipedia.org/wiki/Support_vector_machine&quot;&gt;Support Vector Machines&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Logistic_regression&quot;&gt;Logistic Regression&lt;/a&gt;. Even though SGD has been around in the machine learning community for a long time, it has received a considerable amount of attention just recently in the context of large-scale learning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd4a2e7c34fb23e75d28dc4308aba9f4185f1ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Structure recovery&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999dcb94a777e1c6b5ad0b146c5c2d669c1559d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Support multiclass-multioutput:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573d5e39e05d8fcd141568b903150eb0822ff48e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Support multilabel:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf0455904cf4faa40ca547fb4257580076130aba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Support vector machines (SVMs)&lt;/strong&gt; are a set of supervised learning methods used for &lt;a href=&quot;#svm-classification&quot;&gt;classification&lt;/a&gt;, &lt;a href=&quot;#svm-regression&quot;&gt;regression&lt;/a&gt; and &lt;a href=&quot;#svm-outlier-detection&quot;&gt;outliers detection&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a8c556852bed8cc4798925743c5a644a4c31e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Mean Squared Error (in the sense of the Frobenius norm) between&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5db14e649fc08de05537c24e2dd03acf53405f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The copy of UCI ML Breast Cancer Wisconsin (Diagnostic) dataset is&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08d56e10202f6b95ebfa57e5ca0c5eeb3196416" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The copy of UCI ML Wine Data Set dataset is downloaded and modified to fit&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf81d1c0df2d48503b9714db1b24c3e8d3d6493" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The data is returned as a Bunch object with the following attributes:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a545b0790961ca51888fd56484a14de0dd3085ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The dataset fetchers.&lt;/strong&gt; They can be used to download and load larger datasets, described in the &lt;a href=&quot;#real-world-datasets&quot;&gt;Real world datasets&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9d43952226c81733f58547e7f37ce185a8e3d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The dataset generation functions.&lt;/strong&gt; They can be used to generate controlled synthetic datasets, described in the &lt;a href=&quot;#sample-generators&quot;&gt;Generated datasets&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0fe141f107f7fbb8fe8e85e5556220863f9cede" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The dataset loaders.&lt;/strong&gt; They can be used to load small standard datasets, described in the &lt;a href=&quot;#toy-datasets&quot;&gt;Toy datasets&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109570243e77de4e353b982f010c2b593c0bca5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is a copy of the test set of the UCI ML hand-written digits datasets&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367d77fbf1cb5cddf8061cc756495e93f5f828dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.000 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644799b11991900d4c83a5afb0a5442c695d9856" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.005 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71999d218a04ff4075e32fdf457a0df738ea877b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.008 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57e42deb401f082f7dc6b5fe40862ac05f5c128" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.025 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb6a4e98c5a1e0f9720c1198434b76c9b2abf82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.026 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97005b876ed1c7c88e0572cff3420f77b0bb27b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.029 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee406590e7eeae908f7c21f203d4469dea4902fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.032 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5175bb7cac129d5bab1097535bba3600c00c01a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.033 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c2cd5946ede2e77c99b5a91f946e7782ab1581" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.040 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ecb69c4e05ebeb0990821c059d391c970dd78c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.044 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57038690784a77e63c260115a68d56294f0f2a2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.046 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70391c4589fb6a6f47d52c216a44b81458673ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.048 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca018cfcbfade47e2a8a5d3b1aefbe510caef639" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.054 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ecb3a362ffeb770b5adf658d6650727657b31f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.056 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591e76f93d416cc34441c4eaedadf05271da1d96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.061 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650ee585e3c9c1853254df6a83ed549aebaa8120" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.063 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822f633893c1484505e9b57b887b27315a177f9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.066 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e82d661c07afeab74242088ee7872417b01a6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.068 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d90a67fa8aa56fce02943676df052914e4eadd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.070 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee8b97f2aae0d7dd777ff7d168aaa72aa41de22e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.071 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0377d290c026b5835e6cd1d266171dd1d68d2859" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.079 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355345b078d383170de42bd7b9ed426cab1be5bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.080 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8232c531811355bf2483ed9626f3280d6ee84b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.082 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad2100c822b5f3f0be1157f0184e48d4e88eda2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.083 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e73c189661cf7abf3fb6a515bd4b079cbd0fed7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.084 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260a252129ce6df07326ea4dc5fdc14d44c57b04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.088 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c20defe37bdb60fc91979e1773d84c809f92f85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.090 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4610e8e60028bcbbe775aa7cc8e98ae46827d055" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.093 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e147d7fa90b6f96d84a256935dc0cd216a1a44db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.094 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6c653ba367aabe6497fa3aca25aa4da67f1f83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.097 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a8e67c46df63fb67e4fef69a822c3538e022c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.098 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5271e9603055bb4c442d58f3cb0cfd9ec8360ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.101 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a992e3c47c54c1c6fd313953fb19c8bcf5462fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.102 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2820742b5fe85caf0969e14f7c63e8bf2086e2f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.103 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eeba5feeccd965abb06feff912b479057d85c4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.105 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b3f1aad0b9bf773dc37e8242ca181760615196" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.111 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0296645d45950bac00ff184933c759ddac6cbc54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.114 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc21ac2fc71d067c74b0b4167de9e3d6b2442de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.123 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54083a94585057d87c823001c3597d705e41d4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.124 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad95f1cb4c915b0925e137aba60f095a41cb9c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.125 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7858dab74e65be7726e55e083b58c377636c09a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.127 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad53f97c1abc689f0ba529898985da11ecdde655" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.130 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008d237eb7c9e599336f8634f3ac75090c25b7c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.131 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c14fc9787f9b5c8deedd08f9ddf76d6b512a379" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.133 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876d56143a82b845de91b700522b0ec9c684f0bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.138 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1823af9274050f85a1778790d308d982bdc83a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.142 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659a92c1222be7da29ed5a9740ce6c3ae728da1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.149 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944c15298352bac06f0a0dd5863b86ceab2248fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.160 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb872892f8f70d959f75ed401e51b054c5d348ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.162 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a85bc349ef7f269ca7fd454b3a236772e7bdb95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.183 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ed7d40b90ec8c2ed6d9df373e21594ea868469" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.184 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61bade853f1a67ae00e6c63d694fc350405eeed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.205 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff9cb14b9130f302253b29c2d983aaeb6d249fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.216 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c359aa10c9c151eb1bb6383be0e550ecf38eec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.227 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa126eb9b57fb7bf4e487795570db157454f21a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.228 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae6df1feb254c8cb70e676b76b1acd45697e761" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.231 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28f50d1db071cfbda12bab83f0d86a838ab10ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.232 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6edcd8972ab7f7c39b947712f0ce7f1d0fa92b10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.234 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10794aa219bbdab09728cfb2bfc8914b6d6948a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.238 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d28a1a7c6831cfc97f471aa6a5964645d7108a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.244 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef2af1698e8ccd6af204d79402f13dcf8ef7591" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.247 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3597cfd896d822835366a225a2921ad31f56e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.255 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43fa86685fc755fdb377b8fcc028ebb72aad5cab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.256 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d65994b952a498f2421f04674666cff699e1e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.258 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47336a0681280aac9dd83c9f862cfbdbe68c94f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.262 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715a2e7a8bd1585c855b2f40e676ab6d02d2a9d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.264 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920fd48a269ec04b6188711d0a508bece49ce4c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.270 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3520b834f5018305901c408498be7fd7b602d078" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.277 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae664fab9b33687eb161620a336ff926c77af44" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.279 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d919ca04f7af771d2823867d33decaa941c26e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.296 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e660f1833e597bfc36c5730519d4a2d10d26c08d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.306 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07421917543ad9af65d81d41c947548126ae9325" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.316 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e00b42baaf3fc829df83dc5dbb68a4c8fe421c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.325 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908d23488265b078b7471d7d3b5b953649ba35b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.328 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80293df9a84ba7f074a99fe2a1da9b4cf776f8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.343 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ada5ad731764f20fd0a8855faf8b4642281b10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.346 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3217d5b99df9d533e63d1cfab210fe40fd2ca6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.356 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e6e09b6b58fcfb890c9151292b0f7f7be87bda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.366 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62aae2a4a9ad0f76fd4548d380607590b5c8258f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.381 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c163a14d781a652aa4bdf3443b8bc91763576e16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.386 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0216656c4515a2ff1c26eec4b7c7708b23c5ff2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.413 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78cf1d1427e3e2e30f96d8bfa6bf81faf17dc0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.417 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4616ca9108958046a16be04b6eaa99e771f7258" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.419 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc709544ee0d83e982147a04fce904f45a86fc77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.427 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a668bc14efa74a27b3b27b40297a78e49101912d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.430 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8651d8f3591bc91a8df15201b8020c1ffbd4b02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.432 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc54fc7dab9aed1d2e75b4ede1f47982fd583f6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.440 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9461a0ca11e07297d0e91b892de801a85e10886" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.452 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e14e324fdad6bbfdabc4db1d9cceefdc4f83be7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.487 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f158520dc989de10761910c7bdf9c3611ea607f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.494 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f8519a95c5f212922c9ca6be4dda13663ff03b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.513 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ed7c825b17187e1b12f73f181b27f6ee412c29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.525 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4889eafd7647e8fa7a5db9ef58b8d43164803f5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.538 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d4c78d618bc26834232e41ed18c69dd9d8b13f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.562 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9489439f727fb312d517931e7c2709c50305bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.564 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307e662ba5889885c23075540f3fbd853abc8dee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.578 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb1add994abf5473a5b99dfc7cac694f0c699af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.580 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34eb379fb795083e6ed97a584bdbe9a69e2d9fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.586 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9d92b562aa78cd99b417c09f9f9466641b616c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.602 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73c2ec505944a74eed692971ca68640b834db19" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.622 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620214794ef9d7218cb3594946862e248589728b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.663 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f4cacded5fc1d2bf7f95cd78a90d2fad9196c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.720 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9954ca6d7b802976d81069f2ccb62a9bb21d2a2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.735 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6fe428959f2b6020b820a4a3c9866820907e33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.752 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e5ceae6c7233da981a0d4b0bda25886da91837" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.773 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d707ef044db40c04e07236138edcd1d1bddcb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.778 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0591c973071563ec1025fe2256bc86f541173a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.781 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96c80d1bc3672d0496e2ac2ce671bbcef0d8d93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.798 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d268806b8e211bad95e8a1b2d26e06b896ecfdaf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.834 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38fe5d25b93ba1506a4a3c2866e9c863869f2586" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.848 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3911e80a47db3f354034c2535396ccf460d38374" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.874 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394079d908ba14998a69a14d068556a10e391d6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.912 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142c94fd22ed27b8609fb1adafb4f916d9982a73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 0.992 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d816a7e9584399acb4b165b8de80ed0da06826" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 1.038 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1d454656ed0b33fcecb419baef4b6d708e07e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 1.115 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637a982a8cd7a132d8562bd811425ea8721c0ed0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 1.163 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5889756883bfb58826809afb779220991bbc93e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 1.205 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a48c1198601c88a50cbf7c878b27ca14020bbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 1.232 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403844eea864aaefb312d1c2e6343aecacac126f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 1.323 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e8a1bacd31805839f672c88cfc46efe486bada" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 1.374 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e692badfe1ce62f97752d52fc097240257f74a0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 1.424 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5201b010420d796c5394cf90ddf6d21b06ff5cec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 1.431 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717f74ef59977264e057c0ce9f49cf15b27d7d4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 1.450 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7547429169d2ed01b43e7b1d05aa7286a0a6e77f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 1.559 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0012161c0ffc82f07fd2477496784fcbaeac8b98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 1.670 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec9e5f4088953595a0bbb10568633095ad991cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 1.694 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0fb153be5109bbcac46dee692004bc2e5b6c3e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 1.743 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1339b2bcb5525461468147bd08de0e07e5f92100" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 1.811 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a922338d567848c53e59c84179774588b273a9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 10.108 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30756f4760abd2cc107b3a21ce8d8dd61e5feb5a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 10.589 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62fafc027b3b9434629f6de2f80e3024cf581951" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 10.595 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2f06ff3395a7e4d72e63e9a0e310eac388c498" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 10.644 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56815229719153cab20cf9a4c89659822a095659" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 10.667 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52dbaa83b7fcf96b2bb02da677da1d6a62d7f1ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 11.144 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebefffea805579b4a3143dd41b0b6cc2f0490707" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 12.132 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0c6667bd374c99e02baa38ea6da4735a8bedea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 12.375 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323679e40f082d4c80e54816f4c338a1438c87d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 12.425 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed715854184698bbf8608aacb5d036f8438ea3db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 12.541 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0542b196b054646457797d706d6128df172e544d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 12.828 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549dd011f37a450d29a67ff1367d2e137332ad41" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 12.971 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb8a8faed82359ab7e38e73e0f7b6dd2c065cad6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 13.150 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad05dd71f34e33ba038b541733f6193886fa2e45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 13.561 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69c51002dd0c7e66cc98794e6d9be0b4544cf43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 13.643 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab621fd4d3c12188a545b60d1ddaf6587b1fca25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 15.224 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440ec36eb9ab4c1544e1546071d703f0b5f521e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 18.121 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd638147d03b68a0a46e1dcd7cb5d177c6083d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 19.084 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc5cab993b8505aaaca5737d6c85891b7f248b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 19.330 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f36b1d2dec3fe2ea1fc397f135bdc9da46cc36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 2.088 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051e012d0f7128e4dbbaff12afc9c5b8c8a76f76" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 2.140 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0bbbd5011c54e6362c2adba6f5b80d5c6785e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 2.154 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb1f22c09d24d0b50384296d7cea6ba1cfc3318" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 2.208 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c00244ce222d50143aaefab0266531af70019ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 2.409 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdba1230e67a77bf80782383287ec94de21a4042" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 2.623 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07519605c18bc9731650ff5f260aba494ca4778" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 2.759 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f106e79450441ae962f86b885d71c64cddcf63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 2.888 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f16b8b482144d41e7a2e565e00457f6b75efa1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 2.959 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e05345793be84d3a6ecc367d364f4c328f910c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 20.319 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6926f046ca4218a234a3a67ae3ec5db380144479" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 20.724 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70855ba991df5de2abd556a30afd0c7f63db7b66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 21.454 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b051e2d76c8eaec3c7075b9789d6e8f3509cecdd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 22.683 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9381d5a4993e76d2efc697b5a2c97486c75347a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 23.164 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b786d1b080690379de1a5fe3e1a7afc641b9c52c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 23.242 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e653e28fe01ab24ab0dfda479aa0941eeb81b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 25.411 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55cb3a3df03fce6ec5a10c18ded9586d837e9e26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 25.814 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2c490a37726349c609f26e98d49bece241f10b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 26.747 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38fb9d3e8b822f652d0eb022c843d2253e4da2bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 26.921 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e86b4ce784fcd72a93e5eceb8dfc6a2cd34ea64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 28.380 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33876b51eda561c443e8d0edbc36eec2b01a5393" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 29.234 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac1dce64c679dada460210f8e54b1fc3970e4b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 3.152 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c75471b70b22d88bfeaba20889b1a48505b80f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 3.409 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78d40e6e84331a76385d840d3d8c76221b9ab34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 3.626 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49d2333f2da44366167990482b1125a0cbbb7f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 3.788 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b734c28c70df70f4d2d313ad53c2a0b854b74749" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 3.829 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20f3748896ec6ec47c651aa59c513429caa211b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 3.968 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98957f65ee83977116f3f7213a573c2bb21b785" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 30.494 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e02b282cb78f28af0da9328f7fd6ddbfda3877" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 31.461 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4fa38ca6074037092428f47272c33f220a73b28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 32.335 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00dd31a1ee811a298dae218b74ac4124b0cf611" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 34.027 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef472f91fe624aab6745565ed249dcd4deb3a7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 4.392 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07e30da2f1325f58a022d2566dcc26be562f168" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 4.509 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55f46258bfa3641fade14ff1b08701979243e88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 4.533 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9731c5c77a5f894f0ba1e7042b9db682270e191d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 4.599 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ca2a997f7f2a1bb5dca6b46ebb95dee068f73d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 4.792 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9ca0af484cfe13818c189c216cff5b05677629" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 4.805 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478aecf2e60778b74f81b6d2ded71eddfdc0536a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 4.922 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebef32e08d4b9f1e66f181334ad23e7bf095befd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 42.193 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3fd52631ade230136d512687298129451947835" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 42.214 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7607722230456aac66f96e4a94506f3b34df188" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 46.975 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63227cc4be87144f7062f10d78cf7441bafb74b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 5.075 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda648dfbbd3a718b60bdae837d771892731e0e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 5.111 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d85575e938cf6a2df990c857675f578b6d0632" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 5.442 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9c5edc7fd6fc1d10601394314817910dee8edb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 5.524 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cd16fa309e6b2aad85e1eb081ee3580671310d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 5.632 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edef38de3c01815b5bf0224d6d95f649f6526539" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 5.692 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64bd684e1753ec81550118dd883df621a090fb9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 5.856 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e3e4fce96a2e723bd3c652f0266e2fdbb5cf9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 5.927 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6ce2dfb93b8413f52030be70dcbfb8cce617b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 50.071 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ae4e80fa38f63548035cd67a3958d503dc3f19" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 55.093 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d043191f5e7e6fe1feed921faf0e792aa7bce40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 56.405 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb07047a5d79af3929f97995dfcfdc3e84ccb05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 6.192 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091fb8f0bc32d8051812e743becaec4a7ee91bf5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 6.726 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713b8dd5e8d7e606b6c04fbf05bd017d02060b3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 6.917 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b3fc88fabee762488e08e1809f6f708a0f6d153" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 6.922 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c16fc66dcb54284da36cbd06ff819deb2d5a10b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 6.939 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f78bcf1a7905a5193f456dce200c0866034a029" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 7.076 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0fd3a908c18e9e5f2012e0646f072fa178ee2e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 7.092 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9641914736b8426bc5f51e0d5e0f3a302bd801" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 7.246 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf187f14c473e8d8a84a3f79b2aa2547d02c3d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 7.403 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ecb898ea34ac680c1775a3fe88441fe26121ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 7.452 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="082add1932e8771fc7adb73742a916357750a2f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 8.104 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48aada4fbf62fc212311a36ea48198480a6e1a75" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 8.174 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2f6c7fd4dda43c9bda8414c69c85af9decdd50" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 8.916 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d4aa783a0b2a2f4cd33b0764d9372b34967958" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 9.141 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d8e9e213acdbf2f5bec1759b965da8c2e16d20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 9.534 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec6462f014cbf13eb4c762d70efb2925f71b223" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 0 minutes 9.915 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c572ea948d4f72cf53cfb3cdc04886cb4bcd2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 1 minutes 15.497 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2467101cb2a279db7b682edcb8e09f414126cab8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 1 minutes 20.404 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8997e38947a07914dd7e2da2cd56f7653e75ce1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 1 minutes 4.464 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f17f02e8adf1d1fff4091ba74c0399a73a057d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 2 minutes 48.464 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9316899b142623782c92564517200397c74836" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Total running time of the script:&lt;/strong&gt; ( 3 minutes 28.066 seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1679c3797948157805b4ee1ff3ad7bda8a9eacd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Trade-offs: which estimator?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5edb195abecadb1c03b81f829a757556f5a22853" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Two-component Gaussian mixture model:&lt;/strong&gt;&lt;em&gt;data points, and equi-probability surfaces of the model.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9debd922480fff4a35c834d677c970348dd8f23f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unregularized SVM&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67fe54ab97ed0accafdf9f79a01b515229679b80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Upper bound of 1&lt;/strong&gt;: Values close to zero indicate two label assignments that are largely independent, while values close to one indicate significant agreement. Further, an AMI of exactly 1 indicates that the two label assignments are equal (with or without permutation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934ffc5ed3a9d7f2ee1e97d5f125e2e98030d601" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Upper-bounded at 1&lt;/strong&gt;: Values close to zero indicate two label assignments that are largely independent, while values close to one indicate significant agreement. Further, values of exactly 0 indicate &lt;strong&gt;purely&lt;/strong&gt; independent label assignments and a AMI of exactly 1 indicates that the two label assignments are equal (with or without permutation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8beac77722b48df5a9e11b0da7bf31c7f33f0e7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;../datasets/index#datasets&quot;&gt;Dataset loading utilities&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2131e37aa4ff0648698a17c7a24ad52f6cf134f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;biclustering#biclustering&quot;&gt;Biclustering&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b94255c1839ed2c9a3be46c1f93a7135b182dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;calibration#calibration&quot;&gt;Probability calibration&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147893accbe00a471af34c8c1ab4c8cdbc2a7d39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;clustering#clustering&quot;&gt;Clustering&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="204a55f696bf4cd8d33015163bd1039b5eaf96ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;compose#combining-estimators&quot;&gt;Pipelines and composite estimators&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4cae1c8d222491f9be4d8ee3697396bc9c3f0da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;covariance#covariance&quot;&gt;Covariance estimation&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5801f5a2f2f21e79fd178305d5e694ab7c07b9bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;cross_decomposition#cross-decomposition&quot;&gt;Cross decomposition&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="864f249cca373bd1249b42a1e677b8b1674c9423" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;cross_validation#cross-validation&quot;&gt;Cross-validation: evaluating estimator performance&lt;/a&gt;, &lt;a href=&quot;grid_search#grid-search&quot;&gt;Tuning the hyper-parameters of an estimator&lt;/a&gt; and &lt;a href=&quot;learning_curve#learning-curve&quot;&gt;Learning curve&lt;/a&gt; sections for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8693c81bc105d8fb58b074454b62a0895c9a0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;decomposition#decompositions&quot;&gt;Decomposing signals in components (matrix factorization problems)&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131c1b8597dd91133bab1946b3bc2fb300245ab3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;ensemble#ensemble&quot;&gt;Ensemble methods&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abaaf1716cf19b4082c91954a9675d8749596a87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;feature_extraction#feature-extraction&quot;&gt;Feature extraction&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee7595918bfc94c8d0f9f06575b65c9c8728d3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;feature_selection#feature-selection&quot;&gt;Feature selection&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da2f0c94e62a045d6c70a66588e0f5084d2a8f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;gaussian_process#gaussian-process&quot;&gt;Gaussian Processes&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f283bf2656743c66868c644c0530b81b165f8fa8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;impute#impute&quot;&gt;Imputation of missing values&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beab84789aa97760520871a161dbeb6b7cb2a48b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;isotonic#isotonic&quot;&gt;Isotonic regression&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="258abd1e06405885554f5364683bbaf848d4a901" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;kernel_approximation#kernel-approximation&quot;&gt;Kernel Approximation&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a7553e741420247125b4dff65254ef1396be3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;kernel_ridge#kernel-ridge&quot;&gt;Kernel ridge regression&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa6274fc9b2d3921902efd176d74e6e11820894" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;label_propagation#semi-supervised&quot;&gt;Semi-Supervised&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b8f89b38e4b95d227d1ad195688e6a7743ab72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;lda_qda#lda-qda&quot;&gt;Linear and Quadratic Discriminant Analysis&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42931bd3c8370faca79fb8036718c001a3f03e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;linear_model#linear-model&quot;&gt;Generalized Linear Models&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d1a22a6546950afd39b26f1edd018c92c2a0a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;manifold#manifold&quot;&gt;Manifold learning&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6841f898b18071bb66ea8400b2f93cfd063da718" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;mixture#mixture&quot;&gt;Gaussian mixture models&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0b2ab13f5f5119f63b0525c099d523e842c5d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;model_evaluation#model-evaluation&quot;&gt;Model evaluation: quantifying the quality of predictions&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1c12c99ebb1316714044c5c3ba002b15872c7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;multiclass#multiclass&quot;&gt;Multiclass and multilabel algorithms&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8075d00ca3a14707ac4dc4991f58a8c7788d3d78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;naive_bayes#naive-bayes&quot;&gt;Naive Bayes&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bbf4215687c7e68c738a503e2f294d7f2f6d6b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;neighbors#neighbors&quot;&gt;Nearest Neighbors&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78025389574aa66af2d09e072dd02e13a52a6f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;neural_networks_supervised#neural-networks-supervised&quot;&gt;Neural network models (supervised)&lt;/a&gt; and &lt;a href=&quot;neural_networks_unsupervised#neural-networks-unsupervised&quot;&gt;Neural network models (unsupervised)&lt;/a&gt; sections for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c714be2db18a0883970123c2c8d341766f39231" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;preprocessing#preprocessing&quot;&gt;Preprocessing data&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151d67ecc138e3b79c1b49b695bbaca63802eeed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;random_projection#random-projection&quot;&gt;Random Projection&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56935b8737e76f258982b45f3a949a45f73c1856" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;svm#svm&quot;&gt;Support Vector Machines&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25cda72a9fe8448458c081c2f3bfffb8594718a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User guide:&lt;/strong&gt; See the &lt;a href=&quot;tree#tree&quot;&gt;Decision Trees&lt;/a&gt; section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3f5ebea440c86d975239049cb73d5ecb22c1a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User-defined distance:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a2c86a5e6037d5d77fdc151d9bdd2969ad029a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ValueError&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ValueError&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1213d383daebd5834635b9493d1706a3468d5b4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ward&lt;/strong&gt; minimizes the sum of squared differences within all clusters. It is a variance-minimizing approach and in this sense is similar to the k-means objective function but tackled with an agglomerative hierarchical approach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a267877083667fb1e96f36fbc701de3a56ea1dd3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: the classes are ordered, do not leave out the last 10%, you would be testing on only one class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908c00004938821c1c289ccccad7e6b0260de29a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Weight Matrix Construction&lt;/strong&gt;. Approximately \(O[D N k^3] + O[N (k-D) k^2]\). The first term is exactly equivalent to that of standard LLE. The second term has to do with constructing the weight matrix from multiple weights. In practice, the added cost of constructing the MLLE weight matrix is relatively small compared to the cost of steps 1 and 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c702e4c2f61135e359ebf69bea6693cee8d7bd03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Weight Matrix Construction&lt;/strong&gt;. Approximately \(O[D N k^3] + O[N d^6]\). The first term reflects a similar cost to that of standard LLE. The second term comes from a QR decomposition of the local hessian estimator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2963fc5450bd5d03de03fddd2369918e74b64e28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Weight Matrix Construction&lt;/strong&gt;. Approximately \(O[D N k^3] + O[k^2 d]\). The first term reflects a similar cost to that of standard LLE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1135c8280cf1dbf2c34ab50c3988794b95c09b39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Weight Matrix Construction&lt;/strong&gt;. \(O[D N k^3]\). The construction of the LLE weight matrix involves the solution of a \(k \times k\) linear equation for each of the \(N\) local neighborhoods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24dac5cbe39cacd632144c87bd1ca64e282f5c79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Weighted Graph Construction&lt;/strong&gt;. Transform the raw input data into graph representation using affinity (adjacency) matrix representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c4fd9752a6903ef38cb45ec6d2f5f83d65d640" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;X_new array, shape (n_samples, n_components)&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261e642eca920261670616e257f9485b41fb8c83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;X_original array-like, shape (n_samples, n_features)&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d39a230356ad7f138960149f0bcc28d1870b7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yields&lt;/strong&gt; dictionaries mapping each estimator parameter to as sampled value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70586fc3f311b6ef5700e3ab9fea25a98107e2c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;[X1, y1, &amp;hellip;, Xn, yn]&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;[X1, y1, &amp;hellip;, Xn, yn]&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0eb60655685613beaa6da512957f898e66dd0b82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;`self` and `comp_cov` covariance estimators.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;`self` and `comp_cov` covariance estimators.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bb1b0a90fe52526f1d5adb7373eff0b82d43303b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;a&lt;/strong&gt;: The mean distance between a sample and all other points in the same class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25cc78043dcd387103975e8f00e5312015f2ac41" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ami: float (upperlimited by 1.0)&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b39838f53ce1ab6deecef3b35224527bbde5eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;anisotropic&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;anisotropic&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cdba158899879c68e7e41af998128bb0678119b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;args&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;args&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="795fa8d586688d3f5476de29c1e074f74bdddcb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array, shape (n_samples, n_classes)&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4a2c105d21ace5b9e9eeb8de5d4f37a693b146" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array, shape (n_samples,)&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f5debcbca9afdf7b37a80f54af4a15f6c75a26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array, shape=(n_samples,) if n_classes == 2 else (n_samples, n_classes)&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9089ceddfd82bd95c1b2a01949ff9a34a36f39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;b&lt;/strong&gt;: The mean distance between a sample and all other points in the &lt;em&gt;next nearest cluster&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19552d17bcf8d353b9b99a2054189edb9fce4988" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;backend: str, ParallelBackendBase instance or None, default: &amp;lsquo;loky&amp;rsquo;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bbc35bc79fc6d69a42f6f1fe22775802b3644c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;backend: str, optional&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8580845566a606d3a326b818006fc7a55dbcde12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;backend_options: dict, optional&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b88a69585c1417c9498367109e8dbcc33fe6c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;batch_size: int or &amp;lsquo;auto&amp;rsquo;, default: &amp;lsquo;auto&amp;rsquo;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ad7bd8e7e03b37aa5f34fe6d0761f328b2fafa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bytes_limit: int, optional&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe814dd757e013682702e36a0affe6acf7029244" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cachedir: str or None, optional&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24056dcad6c6a5b8a3e7f1baf88d5465b3cad8e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cachedir&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;cachedir&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7663cc73a1d55fa20b1fadd6fe0921d5e637bf03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;completeness&lt;/strong&gt;: all members of a given class are assigned to the same cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343363d001b7da8649fdf6aec7d7aef326d64fda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;compress: boolean, or integer, optional&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0bdd041bf4d24c47a97ba691c74e046a69c8f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;construction time&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0a384dfa378c2ae8251d8e6c0768fe76addedc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;counting&lt;/strong&gt; the occurrences of tokens in each document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee1860fa7cd387750886250539aa5e909f0bef3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;debug&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;debug&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="26ce3249d1138ed3c7f9af80f379caf4271f7b2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;decorated_func: MemorizedFunc object&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e3b9eb66351eb3cbf57b95d36ef5f69d4d0e0d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;downloaded from:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad25a88f5345a1b626362194eaff0b604a21154" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;float&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;float&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6783c332148878afb184b1de9e8411a0ea064794" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;func: callable, optional&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9428abda24350f4cd6f166bfc7401022a1ddbac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;get_arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;get_arrays&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46f2ce6cb75274060c7395b8893085327563f9f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;get_n_calls&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;get_n_calls&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="396aed56f592034e4c46f92f1514fdc393cabe0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;get_tree_stats&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;get_tree_stats&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a4e1b1cff8b25374727c46a2d089143a658f8253" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;homogeneity&lt;/strong&gt;: each cluster contains only members of a single class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77123966045468aac7ad2d14c6bdc71a255e96d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;http://archive.ics.uci.edu/ml/datasets/Optical+Recognition+of+Handwritten+Digits&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;http://archive.ics.uci.edu/ml/datasets/Optical+Recognition+of+Handwritten+Digits&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f261b73267064ace7dab95127c6d6ec4a648c590" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;https://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;https://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="096dc8ba9274a36625b662c210786f4fea9fbf66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;https://goo.gl/U2Uwz2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;https://goo.gl/U2Uwz2&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a601c088866e9569034b53da0e33ec7c71242a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;hyperparameter_alpha&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;hyperparameter_alpha&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff6e998fbf7e826101d9cc64cb7987cfae782755" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;hyperparameter_constant_value&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;hyperparameter_constant_value&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6ce84db42b220708ca55fbefef1192bc46163a4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;hyperparameter_gamma&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;hyperparameter_gamma&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="58312ea5ea3680eb2bffcb66d746bcba5fd48698" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;hyperparameter_length_scale&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;hyperparameter_length_scale&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="62f9e63d6a27459fed1e3fb317798e747a05ae2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;hyperparameter_noise_level&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;hyperparameter_noise_level&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17bcf6fc4dc6c67b80acd4f27c2813ee55a8e4c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;hyperparameter_periodicity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;hyperparameter_periodicity&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45bea34ebc036778ccde85cf14dbbf6632b25911" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;hyperparameter_sigma_0&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;hyperparameter_sigma_0&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="112feec2d8937e1bc5873d6170979f9756e34a94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ignore: list of strings&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86ed2494486f39c7190b742954c16def6ac7eb7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;int&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;int&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="095c36c409e97bc99d4c62d0c0077bba13dc712e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;is_parameter: bool&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c4d2020d0de317032828c3a2748f3ee7703f06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;labels_ :&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0c061208a27be075a15fbcc0ea4ac7d309ec3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;load_svmlight_file(files[i])&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;load_svmlight_file(files[i])&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f521003f05be3ebb38e9018c0c9d61d384495951" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;location: str or None&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d237aebb168d4720a56f296748eb0fbab5cc3ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mask&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;mask&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f0c9e916d5c94aca6a845183285c4dda7ddf849" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max_nbytes int, str, or None, optional, 1M by default&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4719ff0c2697e6cd741c17992ac78086b2af81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;memory&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;memory&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b8bd55226dfea982418d17aa56242c33902276fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mmap_mode: {None, &amp;lsquo;r+&amp;rsquo;, &amp;lsquo;r&amp;rsquo;, &amp;lsquo;w+&amp;rsquo;, &amp;lsquo;c&amp;rsquo;}, optional&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9771485b055cb4cbb120a592cc2cae261c982e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mmap_mode: {None, &amp;lsquo;r+&amp;rsquo;, &amp;lsquo;r&amp;rsquo;, &amp;lsquo;w+&amp;rsquo;, &amp;lsquo;c&amp;rsquo;}&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccaab8246f7f77bbbd8b67a00d11109464d22b06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;n_jobs: int, default: None&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cfead7b7c99155ebd626b9a0ac0520da78c9212" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;normalizing&lt;/strong&gt; and weighting with diminishing importance tokens that occur in the majority of samples / documents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cf5491aaf5671104f6b9d22092d9dd7dc27a18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pre_dispatch: {&amp;lsquo;all&amp;rsquo;, integer, or expression, as in &amp;lsquo;3*n_jobs&amp;rsquo;}&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221d2ee121ee9156df7d83ce9c71ef5884523193" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;prefer: str in {&amp;lsquo;processes&amp;rsquo;, &amp;lsquo;threads&amp;rsquo;} or None, default: None&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936dd67224a07185ddf8f07b0108f0b4c1b06ba3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;probabilities_or_labels&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;probabilities_or_labels&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3224ecb44ec592bc5f9a3979c8ad2f103ef6726a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;query time&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9344ce57281c82fe5baee01f7e57f34930e97756" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;require: &amp;lsquo;sharedmem&amp;rsquo; or None, default None&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="947ad65bdff7f1b3e56f3b8bc6a4fb418510439d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;reset_n_calls&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;reset_n_calls&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa0c0493d8e85738a78458a7acbed3b7fa11447a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;retrieve&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;retrieve&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="42b6148837104657bb58546fcbe2acf9526b6c7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;score: float&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="204bb9ce3ecb3e3181f0e288c94c68f87b6e358d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;self&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;self&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3579e15b18a782dffc14f8dedc606eeb4da4ed7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;slice&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;slice&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="501c1706dee8dd02be1181786e4a55a830e0fc9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;standard format from:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ffd567c66a83e08d7fd7dbe10291f7fac9dc762" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;subset&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;subset&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4a4ed6e9a51567c54826fdcc48079026b596057f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;temp_folder: str, optional&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d903d7ed03c07c32a0da4e2272e1ca57d26c3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;timeout: float, optional&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a95d88e6c477ca15be7069468acd92a2079adc73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tokenizing&lt;/strong&gt; strings and giving an integer id for each possible token, for instance by using white-spaces and punctuation as token separators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769d65bbf769112a74faab920313e2c9342d4c52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;verbose: int, optional&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b36548e144e8e55096f059e2572b26b50e92be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;verbose: integer, optional&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e18413fa5ccb7aecfa3750b53fd137d6bf22ee06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;warn&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;warn&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea41ce374f1f5572f359eff0e22ee29fe741db89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;where each (Xi, yi) pair is the result from load_svmlight_file(files[i]).&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39f7b42c0b2bb73a9bf51256e23b249aa698b53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x_scores if Y is not given, (x_scores, y_scores) otherwise.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4552e43bfb0e8bfef67b6ae3e43353483733a112" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;y&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cedfc83f78dd96c4c83ffcbd5a9949ed15a0f3b0" translate="yes" xml:space="preserve">
          <source>A (positive) parameter that downweights early iterations in online learning. It should be greater than 1.0. In the literature, this is called tau_0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47efa0cbb1af1a24926809e695ebc5962224aae0" translate="yes" xml:space="preserve">
          <source>A (size x size) projection matrix, the range of which approximates well the range of the input matrix A.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51345f5dcebe4e580cfcd2a5b43959bf7627d6fc" translate="yes" xml:space="preserve">
          <source>A 1D regression with decision tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad9f6f93f9030aa74811cee604914c8e861250f7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../modules/clustering#hierarchical-clustering&quot;&gt;Hierarchical clustering&lt;/a&gt; method is a type of cluster analysis that aims to build a hierarchy of clusters. In general, the various approaches of this technique are either:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b40fc341e9bea6483f20d2639a2cdca1256eeb" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../modules/generated/sklearn.preprocessing.quantiletransformer#sklearn.preprocessing.QuantileTransformer&quot;&gt;&lt;code&gt;sklearn.preprocessing.QuantileTransformer&lt;/code&gt;&lt;/a&gt; is used such that the targets follows a normal distribution before applying a &lt;a href=&quot;../../modules/generated/sklearn.linear_model.ridgecv#sklearn.linear_model.RidgeCV&quot;&gt;&lt;code&gt;sklearn.linear_model.RidgeCV&lt;/code&gt;&lt;/a&gt; model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e7cddf7e6b6f2b0c054169cbc39a5556f2b6c4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;generated/sklearn.pipeline.featureunion#sklearn.pipeline.FeatureUnion&quot;&gt;&lt;code&gt;FeatureUnion&lt;/code&gt;&lt;/a&gt; is built using a list of &lt;code&gt;(key, value)&lt;/code&gt; pairs, where the &lt;code&gt;key&lt;/code&gt; is the name you want to give to a given transformation (an arbitrary string; it only serves as an identifier) and &lt;code&gt;value&lt;/code&gt; is an estimator object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8c80dfd2f50833d94942067d9b834c98391d13" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;generated/sklearn.pipeline.pipeline#sklearn.pipeline.Pipeline&quot;&gt;&lt;code&gt;Pipeline&lt;/code&gt;&lt;/a&gt; makes it easier to compose estimators, providing this behavior under cross-validation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c6aefa45ffb4f5f4ea03488ee3393cb9501b0a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;model_evaluation#confusion-matrix&quot;&gt;confusion matrix&lt;/a&gt; for classification is a square contingency matrix where the order of rows and columns correspond to a list of classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c59304d1340be26341d8ab1d1d79ae70634cea" translate="yes" xml:space="preserve">
          <source>A Bagging classifier is an ensemble meta-estimator that fits base classifiers each on random subsets of the original dataset and then aggregate their individual predictions (either by voting or by averaging) to form a final prediction. Such a meta-estimator can typically be used as a way to reduce the variance of a black-box estimator (e.g., a decision tree), by introducing randomization into its construction procedure and then making an ensemble out of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338db7852c23ecc9300df2f8463160db444666d6" translate="yes" xml:space="preserve">
          <source>A Bagging classifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be34b6d8a1ae6694b0b3a888d85237a3a439d3a2" translate="yes" xml:space="preserve">
          <source>A Bagging regressor is an ensemble meta-estimator that fits base regressors each on random subsets of the original dataset and then aggregate their individual predictions (either by voting or by averaging) to form a final prediction. Such a meta-estimator can typically be used as a way to reduce the variance of a black-box estimator (e.g., a decision tree), by introducing randomization into its construction procedure and then making an ensemble out of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a663e78a7388f48c90966042b43a8fb4c77802" translate="yes" xml:space="preserve">
          <source>A Bagging regressor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c2ec9c6c6924e77d1e2df02fcca8639bea806a" translate="yes" xml:space="preserve">
          <source>A Fast Algorithm for the Minimum Covariance Determinant Estimator, 1999, American Statistical Association and the American Society for Quality, TECHNOMETRICS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23126daea9104a3962d6943e4b02e6abd7ee1233" translate="yes" xml:space="preserve">
          <source>A Fourier approximation to the additive version of this kernel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e017fd60e51c7754a052b93c6ce274115411a6e" translate="yes" xml:space="preserve">
          <source>A Fourier approximation to this kernel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684d4da853564bd1db89b30531db8efaabfbf238" translate="yes" xml:space="preserve">
          <source>A Fourier-approximation to a non-additive variant of the chi squared kernel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388b8eca919726a34cccd56aace3ca2f0fb4cc1f" translate="yes" xml:space="preserve">
          <source>A FunctionTransformer forwards its X (and optionally y) arguments to a user-defined function or function object and returns the result of this function. This is useful for stateless transformations such as taking the log of frequencies, doing custom scaling, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9903c2d633b3eaeab892c4c2088648e12b3f7a" translate="yes" xml:space="preserve">
          <source>A Gaussian mixture model is a probabilistic model that assumes all the data points are generated from a mixture of a finite number of Gaussian distributions with unknown parameters. One can think of mixture models as generalizing k-means clustering to incorporate information about the covariance structure of the data as well as the centers of the latent Gaussians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160c3372e98a134cfa3fdaf4356fd9dd3af570a9" translate="yes" xml:space="preserve">
          <source>A M by N array of M observations in N dimensions or a length M array of M one-dimensional observations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91928dfd665f1d1abe2f1e096776bfa3bbd93ebc" translate="yes" xml:space="preserve">
          <source>A Restricted Boltzmann Machine with binary visible units and binary hidden units. Parameters are estimated using Stochastic Maximum Likelihood (SML), also known as Persistent Contrastive Divergence (PCD) [2].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe7f742f91a4d0fe3ad8e23464245ef9fe943f7" translate="yes" xml:space="preserve">
          <source>A Tutorial on Spectral Clustering, 2007 Ulrike von Luxburg &lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.165.9323&quot;&gt;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.165.9323&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e3ce118f6681679827c141a7fccc46eab8281eb" translate="yes" xml:space="preserve">
          <source>A TypeError will be thrown if the estimator cannot be scored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7697ea4e2d003a953a21b7a2be36bda9d72f8638" translate="yes" xml:space="preserve">
          <source>A ball tree recursively divides the data into nodes defined by a centroid \(C\) and radius \(r\), such that each point in the node lies within the hyper-sphere defined by \(r\) and \(C\). The number of candidate points for a neighbor search is reduced through use of the &lt;em&gt;triangle inequality&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51321f47cf7f956cdaeda92726d8b876154328c" translate="yes" xml:space="preserve">
          <source>A boolean mask which is set to True where the samples are identified as outliers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6106d49b94cdf8e3d241e988991de3a5ce9d8f49" translate="yes" xml:space="preserve">
          <source>A budget can be chosen independent of the number of parameters and possible values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85455e33d40cb8738023eca0df7f78e647d6d62" translate="yes" xml:space="preserve">
          <source>A classical way to assert the relative importance of vertices in a graph is to compute the principal eigenvector of the adjacency matrix so as to assign to each vertex the values of the components of the first eigenvector as a centrality score:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8306c66fbdb0867b02c5b3b59cf859d05b717bb" translate="yes" xml:space="preserve">
          <source>A classifier with a linear decision boundary, generated by fitting class conditional densities to the data and using Bayes&amp;rsquo; rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486974021ae5ef9a313e7094fe08ee02447387a6" translate="yes" xml:space="preserve">
          <source>A classifier with a quadratic decision boundary, generated by fitting class conditional densities to the data and using Bayes&amp;rsquo; rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac9c7a4894755a1840a4a263b1abeb9e4cc655f" translate="yes" xml:space="preserve">
          <source>A close formula proposed by Ledoit and Wolf to compute the asymptotically optimal regularization parameter (minimizing a MSE criterion), yielding the &lt;a href=&quot;../../modules/generated/sklearn.covariance.ledoitwolf#sklearn.covariance.LedoitWolf&quot;&gt;&lt;code&gt;sklearn.covariance.LedoitWolf&lt;/code&gt;&lt;/a&gt; covariance estimate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48cf2e2e6d271f8ebae0b9506fe2ca5fdf1be5a8" translate="yes" xml:space="preserve">
          <source>A clustering of the data into disjoint subsets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65275f69b0462e7244e56e2f7f1e9838b17f5091" translate="yes" xml:space="preserve">
          <source>A clustering result satisfies completeness if all the data points that are members of a given class are elements of the same cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1a12d0176e10763f59ab97ff5a8b92c536b1ed" translate="yes" xml:space="preserve">
          <source>A clustering result satisfies homogeneity if all of its clusters contain only data points which are members of a single class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3239f86835de0d481d967e6e1fa4a364e2022c4" translate="yes" xml:space="preserve">
          <source>A collection of unigrams (what bag of words is) cannot capture phrases and multi-word expressions, effectively disregarding any word order dependence. Additionally, the bag of words model doesn&amp;rsquo;t account for potential misspellings or word derivations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e46a5f1bb78af76b3523ee33b19eb9c786ce08" translate="yes" xml:space="preserve">
          <source>A common practice for evaluating the results of image denoising is by looking at the difference between the reconstruction and the original image. If the reconstruction is perfect this will look like Gaussian noise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed0a0436668c33a0351f627732f0587ac7983ed" translate="yes" xml:space="preserve">
          <source>A comparison of a several classifiers in scikit-learn on synthetic datasets. The point of this example is to illustrate the nature of decision boundaries of different classifiers. This should be taken with a grain of salt, as the intuition conveyed by these examples does not necessarily carry over to real datasets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08896462e97fc3765d56051f9cf494df2d13585e" translate="yes" xml:space="preserve">
          <source>A comparison of different values for regularization parameter &amp;lsquo;alpha&amp;rsquo; on synthetic datasets. The plot shows that different alphas yield different decision functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ffdb4122629b0408fc648de5eb2e8856b001ee3" translate="yes" xml:space="preserve">
          <source>A comparison of the clustering algorithms in scikit-learn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aba9c608b9764b22ebdea01be3ad9e7396b0707" translate="yes" xml:space="preserve">
          <source>A comparison of the outlier detection algorithms in scikit-learn. Local Outlier Factor (LOF) does not show a decision boundary in black as it has no predict method to be applied on new data when it is used for outlier detection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90a43f9bc5a8cfdf7c44591b758b4103cd4b78a" translate="yes" xml:space="preserve">
          <source>A complete example of this classification problem is available as an example that you can run and study: &lt;a href=&quot;../../auto_examples/classification/plot_digits_classification#sphx-glr-auto-examples-classification-plot-digits-classification-py&quot;&gt;Recognizing hand-written digits&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4711e9024cec2c4a1383670cb0218b599982c096" translate="yes" xml:space="preserve">
          <source>A context object for caching a function&amp;rsquo;s return value each time it is called with the same input arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198c09de283f0c6001f8ae5be18eb83356d81a3a" translate="yes" xml:space="preserve">
          <source>A contiguous slice of distance matrix, optionally processed by &lt;code&gt;reduce_func&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac4a68a26c3c2eae7c82c7be7376e0b1206d26c" translate="yes" xml:space="preserve">
          <source>A contingency matrix given by the &lt;code&gt;contingency_matrix&lt;/code&gt; function. If value is &lt;code&gt;None&lt;/code&gt;, it will be computed, otherwise the given value is used, with &lt;code&gt;labels_true&lt;/code&gt; and &lt;code&gt;labels_pred&lt;/code&gt; ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c54ec3e229cd991b7b39939aa120ad2133da3723" translate="yes" xml:space="preserve">
          <source>A copy of the &lt;code&gt;classes&lt;/code&gt; parameter where provided, or otherwise, the sorted set of classes found when fitting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0460778fea705652baf3b5d397ac145e2c8d559f" translate="yes" xml:space="preserve">
          <source>A corpus of documents can thus be represented by a matrix with one row per document and one column per token (e.g. word) occurring in the corpus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d91a72335bd05329f277d8169a200f3a7e7461" translate="yes" xml:space="preserve">
          <source>A cross-validation generator splits the whole dataset k times in training and test data. Subsets of the training set with varying sizes will be used to train the estimator and a score for each training subset size and the test set will be computed. Afterwards, the scores will be averaged over all k runs for each training subset size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e60520122aededd78427759b8d5e2ce36a7e309" translate="yes" xml:space="preserve">
          <source>A dataset is a dictionary-like object that holds all the data and some metadata about the data. This data is stored in the &lt;code&gt;.data&lt;/code&gt; member, which is a &lt;code&gt;n_samples, n_features&lt;/code&gt; array. In the case of supervised problem, one or more response variables are stored in the &lt;code&gt;.target&lt;/code&gt; member. More details on the different datasets can be found in the &lt;a href=&quot;../../datasets/index#datasets&quot;&gt;dedicated section&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c689c278ed2c402419ef82b79e626634acb9d7dd" translate="yes" xml:space="preserve">
          <source>A dataset is uniquely specified by its &lt;code&gt;data_id&lt;/code&gt;, but not necessarily by its name. Several different &amp;ldquo;versions&amp;rdquo; of a dataset with the same name can exist which can contain entirely different datasets. If a particular version of a dataset has been found to contain significant issues, it might be deactivated. Using a name to specify a dataset will yield the earliest version of a dataset that is still active. That means that &lt;code&gt;fetch_openml(name=&quot;miceprotein&quot;)&lt;/code&gt; can yield different results at different times if earlier versions become inactive. You can see that the dataset with &lt;code&gt;data_id&lt;/code&gt; 40966 that we fetched above is the version 1 of the &amp;ldquo;miceprotein&amp;rdquo; dataset:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="015b04be42703b2ddb8ba533bada1a317c896a28" translate="yes" xml:space="preserve">
          <source>A decision tree classifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1457482037e3da549c4d599a20c71477d87290a" translate="yes" xml:space="preserve">
          <source>A decision tree is boosted using the AdaBoost.R2 &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; algorithm on a 1D sinusoidal dataset with a small amount of Gaussian noise. 299 boosts (300 decision trees) is compared with a single decision tree regressor. As the number of boosts is increased the regressor can fit more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98423fef8caf500459be69ac8cff91bec1b557c8" translate="yes" xml:space="preserve">
          <source>A decision tree regressor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac54dbce7b4a9529cb6b07cf132d857e0fb7a2e" translate="yes" xml:space="preserve">
          <source>A demo of K-Means clustering on the handwritten digits data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="985d8495d6de7661e6b4b5a0919641f87e6bc3f6" translate="yes" xml:space="preserve">
          <source>A demo of structured Ward hierarchical clustering on an image of coins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728da4fce5aa5c78dc45e16c348781662170d8aa" translate="yes" xml:space="preserve">
          <source>A demo of the Spectral Biclustering algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9435014b37ab8720ce8e8dead6831ddaa2609878" translate="yes" xml:space="preserve">
          <source>A demo of the Spectral Co-Clustering algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f2c0aaf840683641795d09aa0a1e201f37f9de" translate="yes" xml:space="preserve">
          <source>A demo of the mean-shift clustering algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3781231daa22a497eef6f674b9f3cd7b216bf2a" translate="yes" xml:space="preserve">
          <source>A demonstration of feature discretization on synthetic classification datasets. Feature discretization decomposes each feature into a set of bins, here equally distributed in width. The discrete values are then one-hot encoded, and given to a linear classifier. This preprocessing enables a non-linear behavior even though the classifier is linear.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95eced0791e7dfa2447624723a21d4f3bf963a74" translate="yes" xml:space="preserve">
          <source>A detailed description of the algorithm can be found in the documentation of the &lt;code&gt;linear_model&lt;/code&gt; sub-package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ef0d1a4425c2a7d76f392327f60a1b7513d0f1" translate="yes" xml:space="preserve">
          <source>A dict of arrays containing the score/time arrays for each scorer is returned. The possible keys for this &lt;code&gt;dict&lt;/code&gt; are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111521e1b62dc92a5d55cc421f659d37509b3d83" translate="yes" xml:space="preserve">
          <source>A dict with keys as column headers and values as columns, that can be imported into a pandas &lt;code&gt;DataFrame&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8159c56c705a647167c0db6b7eec6aec52babc5" translate="yes" xml:space="preserve">
          <source>A dictionary mapping feature names to feature indices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69a0d863960291435690723c91aee6afd547cfb" translate="yes" xml:space="preserve">
          <source>A dictionary of {dataset_name: data_dict}, or {dataset_name: (data_dict, ordering). &lt;code&gt;data_dict&lt;/code&gt; itself is a dictionary of {column_name: data_array}, and &lt;code&gt;ordering&lt;/code&gt; is a list of column_names to determine the ordering in the data set (see &lt;code&gt;fake_mldata&lt;/code&gt; for details).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0df6656a799b1b490376f17c246c83878449378" translate="yes" xml:space="preserve">
          <source>A different approach for approximating an additive variant of the chi squared kernel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183fe0e3f615bfbf70ad6cec7cbf647c2be26b19" translate="yes" xml:space="preserve">
          <source>A discrepancy between the number of terms reported for DictVectorizer and for FeatureHasher is to be expected due to hash collisions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5359a8a92b18a35ca1595de7bb20b2a0c7e2882d" translate="yes" xml:space="preserve">
          <source>A distance matrix D such that D_{i, j} is the distance between the ith and jth vectors of the given matrix X, if Y is None. If Y is not None, then D_{i, j} is the distance between the ith array from X and the jth array from Y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7ab60e9677f7708dd8a607942d2c0cccce5364" translate="yes" xml:space="preserve">
          <source>A feature array, or array of distances between samples if &lt;code&gt;metric='precomputed'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d02e76c875ea70e2d1746a2ae2b7543f98dedf" translate="yes" xml:space="preserve">
          <source>A few features available in this model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06304e4581de12feb43d312c564ae9a70106b9ba" translate="yes" xml:space="preserve">
          <source>A fitted gradient boosting model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c3f4d0379ae967616e2ce28baef3bbea4be9cf" translate="yes" xml:space="preserve">
          <source>A generator over parameter settings, constructed from param_distributions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5af31ec50522e8f84b5fd320b5185d1e649aae" translate="yes" xml:space="preserve">
          <source>A good introduction to Bayesian methods is given in C. Bishop: Pattern Recognition and Machine learning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abfd97b78d2efa9a468ce9e53e4e40c6a740a0c" translate="yes" xml:space="preserve">
          <source>A good value reported by this method does not imply the best information retrieval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0139a4c757902f8a15e776dbb86ec75b8b58ee" translate="yes" xml:space="preserve">
          <source>A graphical overview of basic areas of machine learning, and guidance which kind of algorithms to use in a given situation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09adb6eadfd2176464d83487c19995d3ec4f7162" translate="yes" xml:space="preserve">
          <source>A histogram is a simple visualization of data where bins are defined, and the number of data points within each bin is tallied. An example of a histogram can be seen in the upper-left panel of the following figure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7d25ec6ddbab84b2f2e99ec27b1c5e75159286" translate="yes" xml:space="preserve">
          <source>A kernel hyperparameter&amp;rsquo;s specification in form of a namedtuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd2e21d515f945fa766366930e3f2f884774833" translate="yes" xml:space="preserve">
          <source>A kernel matrix K such that K_{i, j} is the kernel between the ith and jth vectors of the given matrix X, if Y is None. If Y is not None, then K_{i, j} is the kernel between the ith array from X and the jth array from Y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c832d0ad2e131abf1539cfeafad1048954835e4" translate="yes" xml:space="preserve">
          <source>A larger &lt;code&gt;leaf_size&lt;/code&gt; leads to a faster tree construction time, because fewer nodes need to be created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f498b24974153e962b445930a2302cf78d89cfc" translate="yes" xml:space="preserve">
          <source>A last major parameter is also the possibility to do predictions in bulk or one-at-a-time mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca8b138a43ce55d825b3e612cada7898d228b4c" translate="yes" xml:space="preserve">
          <source>A learning curve shows the validation and training score of an estimator for varying numbers of training samples. It is a tool to find out how much we benefit from adding more training data and whether the estimator suffers more from a variance error or a bias error. If both the validation score and the training score converge to a value that is too low with increasing size of the training set, we will not benefit much from more training data. In the following plot you can see an example: naive Bayes roughly converges to a low score.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc6d3a8d1e5bdfb3693da69e5fd147a58a0255e" translate="yes" xml:space="preserve">
          <source>A list of arguments name to ignore in the hashing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977999f316fb9d6c637d2852021b1d8363940c27" translate="yes" xml:space="preserve">
          <source>A list of arrays of length &lt;code&gt;len(estimators_)&lt;/code&gt; containing the class labels for each estimator in the chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8fb99b6c7b15c5d0f9079fcee9eb1e89cb6ab1c" translate="yes" xml:space="preserve">
          <source>A list of clones of base_estimator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371683d834fcd55b1b47a55ccdff2980b0102eb8" translate="yes" xml:space="preserve">
          <source>A list of length n_features containing the feature names (e.g., &amp;ldquo;f=ham&amp;rdquo; and &amp;ldquo;f=spam&amp;rdquo;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84a50cbe409f7bcbe9aef60e47724b3d0374c13" translate="yes" xml:space="preserve">
          <source>A logistic regression with L1 penalty yields sparse models, and can thus be used to perform feature selection, as detailed in &lt;a href=&quot;feature_selection#l1-feature-selection&quot;&gt;L1-based feature selection&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6a763f542c3b72714c079a2432308cb03a943b" translate="yes" xml:space="preserve">
          <source>A major difference is that GPR can choose the kernel&amp;rsquo;s hyperparameters based on gradient-ascent on the marginal likelihood function while KRR needs to perform a grid search on a cross-validated loss function (mean-squared error loss). A further difference is that GPR learns a generative, probabilistic model of the target function and can thus provide meaningful confidence intervals and posterior samples along with the predictions while KRR only provides predictions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413fd0e2f5ff27577a8397f2320f65ec5d748528" translate="yes" xml:space="preserve">
          <source>A major motivation of this method is F1-scoring, when the positive class is in the minority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef86aa8565e00b57d2c91be8664b6a11d798a158" translate="yes" xml:space="preserve">
          <source>A major problem with histograms, however, is that the choice of binning can have a disproportionate effect on the resulting visualization. Consider the upper-right panel of the above figure. It shows a histogram over the same data, with the bins shifted right. The results of the two visualizations look entirely different, and might lead to different interpretations of the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4945c81d17c82b3985167f2fe21eac206551aeb" translate="yes" xml:space="preserve">
          <source>A mapping of terms to feature indices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80b1965676bd061b195356f9e0d7d581d27bcda" translate="yes" xml:space="preserve">
          <source>A mask of the observations that have been used to compute the raw robust estimates of location and shape, before correction and re-weighting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec3f28dc02dc03ba22d583507907375d9c62b5f" translate="yes" xml:space="preserve">
          <source>A mask of the observations that have been used to compute the re-weighted robust location and covariance estimates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adea06a15a23aac7c9d9327f52e8025add2d08fa" translate="yes" xml:space="preserve">
          <source>A mask of the observations that have been used to compute the robust estimates of location and shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be3be97461376c787b398256771e5f8ab1ed15d" translate="yes" xml:space="preserve">
          <source>A matrix containing only 1s ands 0s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151a7f165ba08edb6c7ba1bd07841827b86e653b" translate="yes" xml:space="preserve">
          <source>A matrix such that &lt;code&gt;y_indicator[i, j] = 1&lt;/code&gt; iff &lt;code&gt;classes_[j]&lt;/code&gt; is in &lt;code&gt;y[i]&lt;/code&gt;, and 0 otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac1281f3fac07a890a7987a1940a19d553f0540" translate="yes" xml:space="preserve">
          <source>A model is trained using \(k-1\) of the folds as training data;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1ea4d381438e8c7ee31dbdc82c2c3f3b443e43" translate="yes" xml:space="preserve">
          <source>A more detailed summary of the search is available at &lt;code&gt;gs_clf.cv_results_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a254f5635c860c720fd64108216f6d8c4b1064" translate="yes" xml:space="preserve">
          <source>A more traditional (and possibly better) way to predict on a sparse subset of input features would be to use univariate feature selection followed by a traditional (l2-penalised) logistic regression model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3b3b1809b0fddd0d084276f73f16c23ecf93ac" translate="yes" xml:space="preserve">
          <source>A multi-label model that arranges binary classifiers into a chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07157eeb8d3c41fd6ae5f1ce4e96d98c52fa44ce" translate="yes" xml:space="preserve">
          <source>A multi-label model that arranges regressions into a chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e05b7bdec595d3e973dea3540db250a47de0ecd" translate="yes" xml:space="preserve">
          <source>A multi-output problem is a supervised learning problem with several outputs to predict, that is when Y is a 2d array of size &lt;code&gt;[n_samples, n_outputs]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df611f66ef7be3083c893378a9603e78fdf46201" translate="yes" xml:space="preserve">
          <source>A new sample is inserted into the root of the CF Tree which is a CF Node. It is then merged with the subcluster of the root, that has the smallest radius after merging, constrained by the threshold and branching factor conditions. If the subcluster has any child node, then this is done repeatedly till it reaches a leaf. After finding the nearest subcluster in the leaf, the properties of this subcluster and the parent subclusters are recursively updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b4df58df49d31652c1e508653814db2c7c4b45" translate="yes" xml:space="preserve">
          <source>A node will be split if this split induces a decrease of the impurity greater than or equal to this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f0f4cbbbaee87b8b7904e37994705d9bd8774b" translate="yes" xml:space="preserve">
          <source>A noise-free case</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9448dea0ed4384de356358aa919a44c7d032339" translate="yes" xml:space="preserve">
          <source>A noisy case with known noise-level per datapoint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96ec23e53414db9b11937cf799cd6c1f6432a32" translate="yes" xml:space="preserve">
          <source>A non-negative floating point value (the best value is 0.0), or an array of floating point values, one for each individual target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c1cbeaf3f9c4d5469e9c590dbc955ea1a377cb" translate="yes" xml:space="preserve">
          <source>A number between 0 and 1 will require fewer classifiers than one-vs-the-rest. In theory, &lt;code&gt;log2(n_classes) / n_classes&lt;/code&gt; is sufficient to represent each class unambiguously. However, in practice, it may not lead to good accuracy since &lt;code&gt;log2(n_classes)&lt;/code&gt; is much smaller than n_classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b2970d65b634b9e917fd730d5f1ac86be5fb84" translate="yes" xml:space="preserve">
          <source>A number greater than 1 will require more classifiers than one-vs-the-rest. In this case, some classifiers will in theory correct for the mistakes made by other classifiers, hence the name &amp;ldquo;error-correcting&amp;rdquo;. In practice, however, this may not happen as classifier mistakes will typically be correlated. The error-correcting output codes have a similar effect to bagging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303cdccb0a0b9ef8ee02f659c78579cbfb972892" translate="yes" xml:space="preserve">
          <source>A object of that type is instantiated for each grid point. This is assumed to implement the scikit-learn estimator interface. Either estimator needs to provide a &lt;code&gt;score&lt;/code&gt; function, or &lt;code&gt;scoring&lt;/code&gt; must be passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56be8330a991d6aa887f39d43a91aa1ac6760e20" translate="yes" xml:space="preserve">
          <source>A one-dimensional array of distances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77da2f75f17e6ea0f8d3b4beab5a8c65d7801934" translate="yes" xml:space="preserve">
          <source>A paragraph describing the characteristic of the dataset: its source, reference, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8831c41b4fb10cdce1530c46ecbd5c89f650c66c" translate="yes" xml:space="preserve">
          <source>A parameter can be given to allow K-means to be run in parallel, called &lt;code&gt;n_jobs&lt;/code&gt;. Giving this parameter a positive value uses that many processors (default: 1). A value of -1 uses all available processors, with -2 using one less, and so on. Parallelization generally speeds up computation at the cost of memory (in this case, multiple copies of centroids need to be stored, one for each job).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76c7128eb10e519c4cde4416a2b5ebd1e864530" translate="yes" xml:space="preserve">
          <source>A plot that compares the various Beta-divergence loss functions supported by the Multiplicative-Update (&amp;lsquo;mu&amp;rsquo;) solver in &lt;a href=&quot;../../modules/generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;sklearn.decomposition.NMF&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c428b2107a14d30575de38f7fc951c176630f469" translate="yes" xml:space="preserve">
          <source>A plot that compares the various convex loss functions supported by &lt;a href=&quot;../../modules/generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;sklearn.linear_model.SGDClassifier&lt;/code&gt;&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c371e4431820ea4253b6da8f883638e2996e440" translate="yes" xml:space="preserve">
          <source>A plot will appear showing the top 5 most uncertain digits for each iteration of training. These may or may not contain mistakes, but we will train the next model with their true labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a927be776ddcc1a3b0a115e5ff9bf99815db03" translate="yes" xml:space="preserve">
          <source>A positive floating point value (the best value is 0.0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa1e2038dd5a4a82d42f5d5bcbe0df63da34a6c" translate="yes" xml:space="preserve">
          <source>A practical advantage of trading-off between Lasso and Ridge is it allows Elastic-Net to inherit some of Ridge&amp;rsquo;s stability under rotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce137982e9454ec15b3a9266e29af4a861559f3" translate="yes" xml:space="preserve">
          <source>A pseudo random number generator used for the initialization of the lobpcg eigen vectors decomposition when eigen_solver == &amp;lsquo;amg&amp;rsquo; and by the K-Means initialization. Use an int to make the randomness deterministic. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-random-state&quot;&gt;Glossary&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c41ce7b7d007fb54c5cb75f35d5c711d3e908a9" translate="yes" xml:space="preserve">
          <source>A pseudo random number generator used for the initialization of the lobpcg eigenvectors decomposition. If int, random_state is the seed used by the random number generator; If RandomState instance, random_state is the random number generator; If None, the random number generator is the RandomState instance used by &lt;code&gt;np.random&lt;/code&gt;. Used when &lt;code&gt;solver&lt;/code&gt; == &amp;lsquo;amg&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d91d68f1ffad3cd242144da0cec28854cf478b1" translate="yes" xml:space="preserve">
          <source>A pseudo random number generator used for the initialization of the lobpcg eigenvectors. If int, random_state is the seed used by the random number generator; If RandomState instance, random_state is the random number generator; If None, the random number generator is the RandomState instance used by &lt;code&gt;np.random&lt;/code&gt;. Used when &lt;code&gt;solver&lt;/code&gt; == &amp;lsquo;amg&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2bf152e538d224d6fde70d9b0dd7a1cdbb5755" translate="yes" xml:space="preserve">
          <source>A random forest classifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60aacdcc2887bf4d3963c64796dccc1910a3c9c" translate="yes" xml:space="preserve">
          <source>A random forest is a meta estimator that fits a number of classifying decision trees on various sub-samples of the dataset and uses averaging to improve the predictive accuracy and control over-fitting. The sub-sample size is always the same as the original input sample size but the samples are drawn with replacement if &lt;code&gt;bootstrap=True&lt;/code&gt; (default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6afddbc046b0606e01c6a10f7c579e615a468bc2" translate="yes" xml:space="preserve">
          <source>A random forest is a meta estimator that fits a number of decision tree classifiers on various sub-samples of the dataset and uses averaging to improve the predictive accuracy and control over-fitting. The sub-sample size is always the same as the original input sample size but the samples are drawn with replacement if &lt;code&gt;bootstrap=True&lt;/code&gt; (default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c30f02c56b168ad378f278a145ee7ca666d2b4b" translate="yes" xml:space="preserve">
          <source>A random forest regressor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517674d6fed45c030e35daafc36d33d7e1cb17fe" translate="yes" xml:space="preserve">
          <source>A random number generator instance to define the state of the random permutations generator. If an integer is given, it fixes the seed. Defaults to the global numpy random number generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad42d75eb3232815220e50c42e13b1c5a583a979" translate="yes" xml:space="preserve">
          <source>A random number generator instance to define the state of the random permutations generator. If int, random_state is the seed used by the random number generator; If RandomState instance, random_state is the random number generator; If None, the random number generator is the RandomState instance used by &lt;code&gt;np.random&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4166975533e11bd5bc32126880dea04c49362bfe" translate="yes" xml:space="preserve">
          <source>A randomized algorithm for the decomposition of matrices Per-Gunnar Martinsson, Vladimir Rokhlin and Mark Tygert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bef857d80e5f022acdf94565f064371e78877b1" translate="yes" xml:space="preserve">
          <source>A recursive feature elimination example showing the relevance of pixels in a digit classification task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59abf2d80f7d73a7cc0db592c8bcede424657b87" translate="yes" xml:space="preserve">
          <source>A recursive feature elimination example with automatic tuning of the number of features selected with cross-validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc2f34db796875ac21f4e9f9639246afd97a032" translate="yes" xml:space="preserve">
          <source>A reference (and not a copy) of the first argument in the &lt;code&gt;fit()&lt;/code&gt; method is stored for future reference. If that array changes between the use of &lt;code&gt;fit()&lt;/code&gt; and &lt;code&gt;predict()&lt;/code&gt; you will have unexpected results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b815536c2d161fd6acf2bcd856fde57736561c74" translate="yes" xml:space="preserve">
          <source>A representation of the full diabetes dataset would involve 11 dimensions (10 feature dimensions and one of the target variable). It is hard to develop an intuition on such representation, but it may be useful to keep in mind that it would be a fairly &lt;em&gt;empty&lt;/em&gt; space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7d808e9a808e07d251ec0ab6593856a70a9b8b" translate="yes" xml:space="preserve">
          <source>A scorer callable object / function with signature &lt;code&gt;scorer(estimator, X, y)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd458b3d90a800480ecc75cb9b07374a934f767b" translate="yes" xml:space="preserve">
          <source>A search consists of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4faa007b7ff82792cbf9f6b91017a8816af3cc88" translate="yes" xml:space="preserve">
          <source>A second feature array only if X has shape [n_samples_a, n_features].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9834606bdd77c4a06472befa3674177dd91a7e" translate="yes" xml:space="preserve">
          <source>A seq of Axis objects, one for each subplot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a68a5ad2629329af5cff530eb7ba2ddf7ad320" translate="yes" xml:space="preserve">
          <source>A sequence of dicts signifies a sequence of grids to search, and is useful to avoid exploring parameter combinations that make no sense or have no effect. See the examples below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad6cb6da544247e185919510fbbf9bbac2dfc37" translate="yes" xml:space="preserve">
          <source>A set of labels (any orderable and hashable object) for each sample. If the &lt;code&gt;classes&lt;/code&gt; parameter is set, &lt;code&gt;y&lt;/code&gt; will not be iterated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134a4703b97e34542f6c5ec20a8b6025ee87dd8f" translate="yes" xml:space="preserve">
          <source>A simple choice to construct \(R_ij\) so that it is nonnegative and symmetric is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b768780ec203929a5802877f9f67a2310663fd" translate="yes" xml:space="preserve">
          <source>A simple example shipped with scikit-learn: iris dataset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e839688e01ba01e9dfe145feb09335f1aa963d0" translate="yes" xml:space="preserve">
          <source>A simple example:</source>
          <target state="translated">一个简单的例子。</target>
        </trans-unit>
        <trans-unit id="2a7be91a45219aa7eb5e6e5584cdc7ab00269326" translate="yes" xml:space="preserve">
          <source>A simple graphical frontend for Libsvm mainly intended for didactic purposes. You can create data points by point and click and visualize the decision region induced by different kernels and parameter settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a70c5b3e130b5b3a3556a3a9d846d499b809af" translate="yes" xml:space="preserve">
          <source>A simple linear generative model with Gaussian latent variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed72a91acd5901b2715fbe7249ca1b4b882cab1" translate="yes" xml:space="preserve">
          <source>A simple one-dimensional regression example computed in two different ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a2166f9acbabe38964ccee31d9e7127ebb3bd0" translate="yes" xml:space="preserve">
          <source>A simple toy dataset to visualize clustering and classification algorithms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47127c0ac17be6b42bd52820b6c53e975ec33072" translate="yes" xml:space="preserve">
          <source>A simple toy dataset to visualize clustering and classification algorithms. Read more in the &lt;a href=&quot;../../datasets/index#sample-generators&quot;&gt;User Guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc426ce246dcb8426ecbbb6a60a4ff7a07e84ce" translate="yes" xml:space="preserve">
          <source>A single string (see &lt;a href=&quot;../model_evaluation#scoring-parameter&quot;&gt;The scoring parameter: defining model evaluation rules&lt;/a&gt;) or a callable (see &lt;a href=&quot;../model_evaluation#scoring&quot;&gt;Defining your scoring strategy from metric functions&lt;/a&gt;) to evaluate the predictions on the test set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e53707c3f177aad6668f2e995ecf10221437949" translate="yes" xml:space="preserve">
          <source>A small value of &lt;code&gt;C&lt;/code&gt; includes more/all the observations, allowing the margins to be calculated using all the data in the area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33601e97cbb479e0128e302bee052e1e2030a89" translate="yes" xml:space="preserve">
          <source>A solution in high-dimensional statistical learning is to &lt;em&gt;shrink&lt;/em&gt; the regression coefficients to zero: any two randomly chosen set of observations are likely to be uncorrelated. This is called &lt;a href=&quot;../../modules/generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;Ridge&lt;/code&gt;&lt;/a&gt; regression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd1f54984c6dffbbcff2667b694f4185f6ec040" translate="yes" xml:space="preserve">
          <source>A solution to this problem is a procedure called &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-validation_(statistics)&quot;&gt;cross-validation&lt;/a&gt; (CV for short). A test set should still be held out for final evaluation, but the validation set is no longer needed when doing CV. In the basic approach, called &lt;em&gt;k&lt;/em&gt;-fold CV, the training set is split into &lt;em&gt;k&lt;/em&gt; smaller sets (other approaches are described below, but generally follow the same principles). The following procedure is followed for each of the &lt;em&gt;k&lt;/em&gt; &amp;ldquo;folds&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538e1506057d7a3220a186af08ab5489676c59df" translate="yes" xml:space="preserve">
          <source>A sparse radius neighborhood graph (where missing entries are presumed to be out of eps) can be precomputed in a memory-efficient way and dbscan can be run over this with &lt;code&gt;metric='precomputed'&lt;/code&gt;. See &lt;a href=&quot;generated/sklearn.neighbors.nearestneighbors#sklearn.neighbors.NearestNeighbors.radius_neighbors_graph&quot;&gt;&lt;code&gt;sklearn.neighbors.NearestNeighbors.radius_neighbors_graph&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5434739c8a85282e43e6d41eec6550c57895597f" translate="yes" xml:space="preserve">
          <source>A star marks the expected sample for each class; its size reflects the probability of selecting that class label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc68f40152c74e41efd28d7122ce96e71e57739" translate="yes" xml:space="preserve">
          <source>A strategy to implement out-of-core scaling is to stream data to the estimator in mini-batches. Each mini-batch is vectorized using &lt;a href=&quot;generated/sklearn.feature_extraction.text.hashingvectorizer#sklearn.feature_extraction.text.HashingVectorizer&quot;&gt;&lt;code&gt;HashingVectorizer&lt;/code&gt;&lt;/a&gt; so as to guarantee that the input space of the estimator has always the same dimensionality. The amount of memory used at any time is thus bounded by the size of a mini-batch. Although there is no limit to the amount of data that can be ingested using such an approach, from a practical point of view the learning time is often limited by the CPU time one wants to spend on the task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0e35a146ea0efee84f42e6ee454306c5da4827" translate="yes" xml:space="preserve">
          <source>A string (see model evaluation documentation) or a scorer callable object / function with signature &lt;code&gt;scorer(estimator, X, y)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad6fe3853f8abecb73cc5e995f9131ee653eef0" translate="yes" xml:space="preserve">
          <source>A string (see model evaluation documentation) or a scorer callable object / function with signature &lt;code&gt;scorer(estimator, X, y)&lt;/code&gt;. For a list of scoring functions that can be used, look at &lt;a href=&quot;../classes#module-sklearn.metrics&quot;&gt;&lt;code&gt;sklearn.metrics&lt;/code&gt;&lt;/a&gt;. The default scoring option used is &amp;lsquo;accuracy&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b243cc3849b7302c5dad12c7987dfe501650ad" translate="yes" xml:space="preserve">
          <source>A string, giving an expression as a function of n_jobs, as in &amp;lsquo;2*n_jobs&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84dd7b04896fc19b0373bd22f46ebced4bcbae51" translate="yes" xml:space="preserve">
          <source>A supervised learning estimator with a &lt;code&gt;fit&lt;/code&gt; method that provides information about feature importance either through a &lt;code&gt;coef_&lt;/code&gt; attribute or through a &lt;code&gt;feature_importances_&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be778589a42569621d412c8d143e2c4ecab0280f" translate="yes" xml:space="preserve">
          <source>A support vector machine constructs a hyper-plane or set of hyper-planes in a high or infinite dimensional space, which can be used for classification, regression or other tasks. Intuitively, a good separation is achieved by the hyper-plane that has the largest distance to the nearest training data points of any class (so-called functional margin), since in general the larger the margin the lower the generalization error of the classifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7e8b3dcde624d3d8f97ed6de9c3edf28cc3212" translate="yes" xml:space="preserve">
          <source>A synthetic random regression problem is generated. The targets &lt;code&gt;y&lt;/code&gt; are modified by: (i) translating all targets such that all entries are non-negative and (ii) applying an exponential function to obtain non-linear targets which cannot be fitted using a simple linear model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0903abbf1faeca209d35b8701b7569a1792a87c6" translate="yes" xml:space="preserve">
          <source>A system with high recall but low precision returns many results, but most of its predicted labels are incorrect when compared to the training labels. A system with high precision but low recall is just the opposite, returning very few results, but most of its predicted labels are correct when compared to the training labels. An ideal system with high precision and high recall will return many results, with all results labeled correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173f587454933c3828450ea8ca8b53629bab1434" translate="yes" xml:space="preserve">
          <source>A thin wrapper around the functionality of the kernels in sklearn.metrics.pairwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66676f8254f2529112cd062a4d4d85367f781237" translate="yes" xml:space="preserve">
          <source>A trivial solution to this problem is to set all the points on the origin. In order to avoid that, the disparities \(\hat{d}_{ij}\) are normalized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92110b9d440ed0f7743804ea18583b68d039b315" translate="yes" xml:space="preserve">
          <source>A tutorial exercise for using different SVM kernels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b027711ce35320d3d1f8472a3216da00739d6438" translate="yes" xml:space="preserve">
          <source>A tutorial exercise regarding the use of classification techniques on the Digits dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2776a357a1de5e5a81f9ce6aa4ab14f87148c15" translate="yes" xml:space="preserve">
          <source>A tutorial exercise using Cross-validation with an SVM on the Digits dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2628903b486483a05c00dab06ec0310f6a300cc" translate="yes" xml:space="preserve">
          <source>A tutorial exercise which uses cross-validation with linear models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8b8f382c4d69a8c061676d971b4b4296bfd8b7" translate="yes" xml:space="preserve">
          <source>A tutorial on statistical-learning for scientific data processing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f7f31eba85f0c9b2945699e7dc03221dcc0732" translate="yes" xml:space="preserve">
          <source>A two-dimensional classification example showing iso-probability lines for the predicted probabilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027a04b42d0e6eeb4156be0ce184aaf749b2c919" translate="yes" xml:space="preserve">
          <source>A typical &lt;a href=&quot;https://github.com/scikit-learn/scikit-learn/blob/master/benchmarks/bench_sparsify.py&quot;&gt;benchmark&lt;/a&gt; on synthetic data yields a &amp;gt;30% decrease in latency when both the model and input are sparse (with 0.000024 and 0.027400 non-zero coefficients ratio respectively). Your mileage may vary depending on the sparsity and size of your data and model. Furthermore, sparsifying can be very useful to reduce the memory usage of predictive models deployed on production servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b09774b632b4a2428bc3dfc2607f68bc8654b3" translate="yes" xml:space="preserve">
          <source>A value ranges from 0 to 1. Radius neighbors will be searched until the ratio between total neighbors within the radius and the total candidates becomes less than this value unless it is terminated by hash length reaching &lt;code&gt;min_hash_match&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2582a27b00b61e2b9522f341f9a346d9f6709d01" translate="yes" xml:space="preserve">
          <source>A vector of size n_samples with the values of Xred assigned to each of the cluster of samples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6682290692f64a366a7947dddf0230094bb4014" translate="yes" xml:space="preserve">
          <source>A very short introduction into machine learning problems and how to solve them using scikit-learn. Introduced basic concepts and conventions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5f7b45681bf1702c76ccf69a63504aee5a5896" translate="yes" xml:space="preserve">
          <source>A {n_samples by n_samples} size matrix will be created from this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f18974816a09bbd22c4a7050c6bc6030b7596e3" translate="yes" xml:space="preserve">
          <source>A. McCallum and K. Nigam (1998). &lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1529&quot;&gt;A comparison of event models for Naive Bayes text classification.&lt;/a&gt; Proc. AAAI/ICML-98 Workshop on Learning for Text Categorization, pp. 41-48.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ff19e0224a8e064521a1f035498a8575f6b1a4" translate="yes" xml:space="preserve">
          <source>A. McCallum and K. Nigam (1998). A comparison of event models for naive Bayes text classification. Proc. AAAI/ICML-98 Workshop on Learning for Text Categorization, pp. 41-48.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aecbad800270fae47218d640b45ace7ade395c4" translate="yes" xml:space="preserve">
          <source>AGE proportion of owner-occupied units built prior to 1940</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80cd3c2daea500fa1de49e5116e93d233f023eef" translate="yes" xml:space="preserve">
          <source>AIC is the Akaike information criterion and BIC is the Bayes Information criterion. Such criteria are useful to select the value of the regularization parameter by making a trade-off between the goodness of fit and the complexity of the model. A good model should explain well the data while being simple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fedf36066038cc2bbe4c1f8d6f37bca1d4a271f3" translate="yes" xml:space="preserve">
          <source>AMI</source>
          <target state="translated">AMI</target>
        </trans-unit>
        <trans-unit id="977d221308080b656b11030badda34761fa1379d" translate="yes" xml:space="preserve">
          <source>ANOVA F-value between label/feature for classification tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500622cc8c5af556f9bf30d45e5a5dc4d38771d9" translate="yes" xml:space="preserve">
          <source>AP and the trapezoidal area under the operating points (&lt;a href=&quot;../../modules/generated/sklearn.metrics.auc#sklearn.metrics.auc&quot;&gt;&lt;code&gt;sklearn.metrics.auc&lt;/code&gt;&lt;/a&gt;) are common ways to summarize a precision-recall curve that lead to different results. Read more in the &lt;a href=&quot;../../modules/model_evaluation#precision-recall-f-measure-metrics&quot;&gt;User Guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce6548ae70272727979635a979ae4f9ea8a3a93" translate="yes" xml:space="preserve">
          <source>AP summarizes a precision-recall curve as the weighted mean of precisions achieved at each threshold, with the increase in recall from the previous threshold used as the weight:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="b276f94cd8d0e74a21de6e5939b8c10ca9a975d6" translate="yes" xml:space="preserve">
          <source>API Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc664a8aed1b7702083559e78f4a1b25e63a7739" translate="yes" xml:space="preserve">
          <source>ARD is also known in the literature as &lt;em&gt;Sparse Bayesian Learning&lt;/em&gt; and &lt;em&gt;Relevance Vector Machine&lt;/em&gt;&lt;a href=&quot;#id20&quot; id=&quot;id16&quot;&gt;[3]&lt;/a&gt;&lt;a href=&quot;#id21&quot; id=&quot;id17&quot;&gt;[4]&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1df128dfacd3f460cbb61bb4087bb92287d3fcb" translate="yes" xml:space="preserve">
          <source>ARI</source>
          <target state="translated">ARI</target>
        </trans-unit>
        <trans-unit id="8c442cbb4124477c731be288798913c884c906af" translate="yes" xml:space="preserve">
          <source>ARI is a symmetric measure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6cdde34aa4cbbe354d4a8fe12fbb26711ad6710" translate="yes" xml:space="preserve">
          <source>ARI is symmetric, so labelings that have pure clusters with members coming from the same classes but unnecessary splits are penalized:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5045d88e766edf44d9736d9751b0aa0b647864ac" translate="yes" xml:space="preserve">
          <source>A[i, j] is assigned the weight of edge that connects i to j.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4a63ae0bf1594deea5ea12c509b27f409ce3db" translate="yes" xml:space="preserve">
          <source>Aaron Defazio, Francis Bach, Simon Lacoste-Julien: &lt;a href=&quot;https://arxiv.org/abs/1407.0202&quot;&gt;SAGA: A Fast Incremental Gradient Method With Support for Non-Strongly Convex Composite Objectives.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82c46cc189803ea687c96da2038982e9dcb6a4b" translate="yes" xml:space="preserve">
          <source>Ability to use shared memory efficiently with worker processes for large numpy-based datastructures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d1141ddccb7851744d76084cc8611f93e2cfc3" translate="yes" xml:space="preserve">
          <source>Able to handle both numerical and categorical data. Other techniques are usually specialised in analysing datasets that have only one type of variable. See &lt;a href=&quot;#tree-algorithms&quot;&gt;algorithms&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2367c2ca7022225c20205571d9433b5b6b84cd68" translate="yes" xml:space="preserve">
          <source>Able to handle multi-output problems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f587c3583da9a191a72d5ff01fbfedde272f2898" translate="yes" xml:space="preserve">
          <source>Absolute tolerance for equivalence of arrays. Default = 1E-10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62a0f9649f4eb6fd92f87e85b475e87182d6e46" translate="yes" xml:space="preserve">
          <source>Access the fitted transformer by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0e7377700ae6d6f91649710d89b9dd54aaa033" translate="yes" xml:space="preserve">
          <source>According to the JL lemma, projecting 500 samples without too much distortion will require at least several thousands dimensions, irrespective of the number of features of the original dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b168ce1b26b0ed19f0857c9a9e0275bc2a86de2" translate="yes" xml:space="preserve">
          <source>Accuracy classification score.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3159fc0c287c6fa355557d0a32e1e4fbdd60d32b" translate="yes" xml:space="preserve">
          <source>Across the module, we designate the vector \(w = (w_1, ..., w_p)\) as &lt;code&gt;coef_&lt;/code&gt; and \(w_0\) as &lt;code&gt;intercept_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e74068a27362b129f4808ec6412c747359a90d1" translate="yes" xml:space="preserve">
          <source>Activation function for the hidden layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13466b0d67f826e470f7f662a0fa9b98771bd57d" translate="yes" xml:space="preserve">
          <source>Actual class (observation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bda103291a01841e5d33c04e072de1679753a3f" translate="yes" xml:space="preserve">
          <source>Actual number of iteration for each Cs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e108d70e5d6e1ab362876cb4abfe8b3ea0d61c" translate="yes" xml:space="preserve">
          <source>Actual number of iterations for all classes, folds and Cs. In the binary or multinomial cases, the first dimension is equal to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c00438aea9f14670d9e5ce3ad69eadb9e56fa7" translate="yes" xml:space="preserve">
          <source>Actual number of iterations for all classes. If binary or multinomial, it returns only 1 element. For liblinear solver, only the maximum number of iteration across all classes is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41eb0ffb0b86a2b7fa1c30caad1eab7979f038bb" translate="yes" xml:space="preserve">
          <source>Actual number of iterations for each target. Available only for sag and lsqr solvers. Other solvers will return None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f57bad41ea8a1cc3f7ad65dabd66fae549152b" translate="yes" xml:space="preserve">
          <source>Actual number of iterations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88dbeae46a975e549a3e1b429ac335f1717a327" translate="yes" xml:space="preserve">
          <source>AdaBoost can be used both for classification and regression problems:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3d2a8d1e7ee52688369f7b268da1f090f613a4" translate="yes" xml:space="preserve">
          <source>Adam is similar to SGD in a sense that it is a stochastic optimizer, but it can automatically adjust the amount to update parameters based on adaptive estimates of lower-order moments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57edf9b3cf9cc602f38d55f2f3497cc8e4458efe" translate="yes" xml:space="preserve">
          <source>Adding parameters that do not influence the performance does not decrease efficiency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b82f8ac1fd93a8c5863d25cc6558cb656b7f40" translate="yes" xml:space="preserve">
          <source>Additional Resources</source>
          <target state="translated">额外资源</target>
        </trans-unit>
        <trans-unit id="3bc09d37c7749b14dd88f92786b449d978558dbf" translate="yes" xml:space="preserve">
          <source>Additional keyword arguments for the metric function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a84da277628ee33f1ee92b82eb0c5a6af6d0524" translate="yes" xml:space="preserve">
          <source>Additional number of random vectors to sample the range of M so as to ensure proper conditioning. The total number of random vectors used to find the range of M is n_components + n_oversamples. Smaller number can improve speed but can negatively impact the quality of approximation of singular vectors and singular values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc2d5826a730e9f6abc3aeeee28797fe00b8570" translate="yes" xml:space="preserve">
          <source>Additional parameter passed to the fit function of the estimator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9b29356cfac6bb58ec5dca9394f2d9dfc4703b" translate="yes" xml:space="preserve">
          <source>Additional parameters (keyword arguments) for kernel function passed as callable object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a26d6ec93b4bd557ff0d3e3333c06661f787d5" translate="yes" xml:space="preserve">
          <source>Additional parameters to be passed to score_func.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71247cd4c08f9e15e8cf580ef4b1b215b5be4541" translate="yes" xml:space="preserve">
          <source>Additional parameters to be passed to the tree for use with the metric. For more information, see the documentation of &lt;a href=&quot;sklearn.neighbors.balltree#sklearn.neighbors.BallTree&quot;&gt;&lt;code&gt;BallTree&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sklearn.neighbors.kdtree#sklearn.neighbors.KDTree&quot;&gt;&lt;code&gt;KDTree&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36da43716a16aade125d9759679637e39761ccc9" translate="yes" xml:space="preserve">
          <source>Additionally compute class covariance matrix (default False), used only in &amp;lsquo;svd&amp;rsquo; solver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb731300b5471fde45bf8790ae9ce49720693175" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;Pipeline&lt;/code&gt; can be instantiated with the &lt;code&gt;memory&lt;/code&gt; argument to memoize the transformers within the pipeline, avoiding to fit again the same transformers over and over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fcf36ef35c92f01311334b57dea32bb115ca779" translate="yes" xml:space="preserve">
          <source>Additionally, latent semantic analysis can also be used to reduce dimensionality and discover latent patterns in the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13231af636098d832d9fddca4838809fd525e6e" translate="yes" xml:space="preserve">
          <source>Additive (Laplace/Lidstone) smoothing parameter (0 for no smoothing).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c1aaec1a2a62d157d744d0faee837709b2772c" translate="yes" xml:space="preserve">
          <source>Adjacency matrix of the graph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250995e59d0465859871db4d7d37821f2e9e268c" translate="yes" xml:space="preserve">
          <source>Adjusted Mutual Information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e5941af4a261b664e9f0491f0ecd18e8412b46" translate="yes" xml:space="preserve">
          <source>Adjusted Mutual Information (AMI) is an adjustment of the Mutual Information (MI) score to account for chance. It accounts for the fact that the MI is generally higher for two clusterings with a larger number of clusters, regardless of whether there is actually more information shared. For two clusterings \(U\) and \(V\), the AMI is given as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1b6ee1509942e0e22b1880790459ca848319f4" translate="yes" xml:space="preserve">
          <source>Adjusted Mutual Information (adjusted against chance)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4630f03a5a119c76517981dad27161c68958ec63" translate="yes" xml:space="preserve">
          <source>Adjusted Mutual Information between two clusterings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1802b8bdeb7acaeda57735feed31e0ee765d7139" translate="yes" xml:space="preserve">
          <source>Adjusted Rand Index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e214397fb70765d3e9e011e4c9138d3d446804" translate="yes" xml:space="preserve">
          <source>Adjusted against chance Mutual Information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a058b0be3c60201e595de35ba7261933ab6a3173" translate="yes" xml:space="preserve">
          <source>Adjusted for chance measure such as ARI display some random variations centered around a mean score of 0.0 for any number of samples and clusters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80cf8c9df3b30a05f03bffeb2976e09c960b38a" translate="yes" xml:space="preserve">
          <source>Adjustment for chance in clustering performance evaluation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22815e21882a0aa7a6a9b8a93ee5e8e17ca7614" translate="yes" xml:space="preserve">
          <source>Affects shape of transform output only when voting=&amp;rsquo;soft&amp;rsquo; If voting=&amp;rsquo;soft&amp;rsquo; and flatten_transform=True, transform method returns matrix with shape (n_samples, n_classifiers * n_classes). If flatten_transform=False, it returns (n_classifiers, n_samples, n_classes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be196ba0996dde7d9ed4c8d27213a288c55819b" translate="yes" xml:space="preserve">
          <source>Affinity Propagation can be interesting as it chooses the number of clusters based on the data provided. For this purpose, the two important parameters are the &lt;em&gt;preference&lt;/em&gt;, which controls how many exemplars are used, and the &lt;em&gt;damping factor&lt;/em&gt; which damps the responsibility and availability messages to avoid numerical oscillations when updating these messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a35e8a6a6b08571acff68f4d3ca53b52b812c7" translate="yes" xml:space="preserve">
          <source>Affinity matrix used for clustering. Available only if after calling &lt;code&gt;fit&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63246ae129dc66d8916faa22ac2026722fe870df" translate="yes" xml:space="preserve">
          <source>Affinity propagation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50cd6f7778a2976318486216f7be1102ea3c2dbd" translate="yes" xml:space="preserve">
          <source>Affinity_matrix constructed from samples or precomputed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6ec54ac3f9f07d1c79bc7828709b2a1ebe0b76" translate="yes" xml:space="preserve">
          <source>After being fitted, the model can then be used to predict new values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56033184bfd4d9eb6d5cedda898ff603a56457b5" translate="yes" xml:space="preserve">
          <source>After being fitted, the model can then be used to predict the class of samples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a9437feb3595025967367029f3b25aca08ed48" translate="yes" xml:space="preserve">
          <source>After calling this method, further fitting with the partial_fit method (if any) will not work until you call densify.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac4b13a36333967e31b510f39d76728b1ade858" translate="yes" xml:space="preserve">
          <source>After discretization, linear regression and decision tree make exactly the same prediction. As features are constant within each bin, any model must predict the same value for all points within a bin. Compared with the result before discretization, linear model become much more flexible while decision tree gets much less flexible. Note that binning features generally has no beneficial effect for tree-based models, as these models can learn to split up the data anywhere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef177bc3be0e883eb6e86188495b80899ebaefb" translate="yes" xml:space="preserve">
          <source>After fitting (training), the model can predict labels for new samples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e6425357ee2c6e34c7ccf4e621fb9b2e0d28394" translate="yes" xml:space="preserve">
          <source>After fitting a model, row and column cluster membership can be found in the &lt;code&gt;rows_&lt;/code&gt; and &lt;code&gt;columns_&lt;/code&gt; attributes. &lt;code&gt;rows_[i]&lt;/code&gt; is a binary vector with nonzero entries corresponding to rows that belong to bicluster &lt;code&gt;i&lt;/code&gt;. Similarly, &lt;code&gt;columns_[i]&lt;/code&gt; indicates which columns belong to bicluster &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ae50af31deda9eff4041050d01116db2fe0b76" translate="yes" xml:space="preserve">
          <source>After normalizing, the first few singular vectors are computed, just as in the Spectral Co-Clustering algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c326685e6de3fbd40d347b380da45cf33d03051c" translate="yes" xml:space="preserve">
          <source>After this operation, \(U_k \Sigma_k^\top\) is the transformed training set with \(k\) features (called &lt;code&gt;n_components&lt;/code&gt; in the API).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10a093c92eea73e29249b26fe409d51c485f495" translate="yes" xml:space="preserve">
          <source>After training a scikit-learn model, it is desirable to have a way to persist the model for future use without having to retrain. The following section gives you an example of how to persist a model with pickle. We&amp;rsquo;ll also review a few security and maintainability issues when working with pickle serialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24449d2cd36cc7fedaa85e80b22b4a39b7f8e2cc" translate="yes" xml:space="preserve">
          <source>After using such a procedure to fit the dictionary, the transform is simply a sparse coding step that shares the same implementation with all dictionary learning objects (see &lt;a href=&quot;#sparsecoder&quot;&gt;Sparse coding with a precomputed dictionary&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b35bdc816ab119e837a0f526e39f92fef72f3ba" translate="yes" xml:space="preserve">
          <source>Again please see the &lt;a href=&quot;classes#text-feature-extraction-ref&quot;&gt;reference documentation&lt;/a&gt; for the details on all the parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9f1ff32120d8b893c1ded522d49590353b29a6" translate="yes" xml:space="preserve">
          <source>Age</source>
          <target state="translated">Age</target>
        </trans-unit>
        <trans-unit id="e869aecf975cf3b336fce1699b0d4503e42564de" translate="yes" xml:space="preserve">
          <source>Agglomerate features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb914491e4e2790ae24eaabcabbe0b9aa470c77" translate="yes" xml:space="preserve">
          <source>Agglomerative Clustering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35bb423e043758761d2f3e248257c1ca705a5ac8" translate="yes" xml:space="preserve">
          <source>Agglomerative cluster has a &amp;ldquo;rich get richer&amp;rdquo; behavior that leads to uneven cluster sizes. In this regard, single linkage is the worst strategy, and Ward gives the most regular sizes. However, the affinity (or distance used in clustering) cannot be varied with Ward, thus for non Euclidean metrics, average linkage is a good alternative. Single linkage, while not robust to noisy data, can be computed very efficiently and can therefore be useful to provide hierarchical clustering of larger datasets. Single linkage can also perform well on non-globular data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="890d73cb8666b8b11b8fc128eb14fe1823b0fbff" translate="yes" xml:space="preserve">
          <source>Agglomerative clustering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c09abace100a2c8351e8288af87cf02023a3a7" translate="yes" xml:space="preserve">
          <source>Agglomerative clustering with and without structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e589f9bfed18f64327ae7d57413054b3c6f8de" translate="yes" xml:space="preserve">
          <source>Agglomerative clustering with different metrics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9f2566d02b5e4600cd56af348af55d70c023a7" translate="yes" xml:space="preserve">
          <source>Agnostic:</source>
          <target state="translated">Agnostic:</target>
        </trans-unit>
        <trans-unit id="a88029fe8eca09e8e53e31e892c06950617c42cc" translate="yes" xml:space="preserve">
          <source>Akaike information criterion for the current model on the input X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471a24dc120a414840a5a390be002dd1fb20dce7" translate="yes" xml:space="preserve">
          <source>Alcalinity of Ash:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c996292fc0f34e9abb2ed1bce253f665b2889f0" translate="yes" xml:space="preserve">
          <source>Alcalinity of ash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35fa6a7b518a822ef300d3ac95936a0d4551ed5f" translate="yes" xml:space="preserve">
          <source>Alcohol</source>
          <target state="translated">Alcohol</target>
        </trans-unit>
        <trans-unit id="4537230d988c507a37af5da4b6f068cb25fae3fd" translate="yes" xml:space="preserve">
          <source>Alcohol:</source>
          <target state="translated">Alcohol:</target>
        </trans-unit>
        <trans-unit id="a755c4c6a00484a10fdd39c78f5316741e33717a" translate="yes" xml:space="preserve">
          <source>Alexandru Niculescu-Mizil and Rich Caruana (2005) Predicting Good Probabilities With Supervised Learning, in Proceedings of the 22nd International Conference on Machine Learning (ICML). See section 4 (Qualitative Analysis of Predictions).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00df3c495c9c818a9560b719b9887130853cc0a" translate="yes" xml:space="preserve">
          <source>Algorithm to use for nearest neighbors search, passed to neighbors.NearestNeighbors instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ad136737477e6b0db26cf9286713a801e6cd45" translate="yes" xml:space="preserve">
          <source>Algorithm to use in the optimization problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c739143784c9537893f5a8383165eeec97c8efbf" translate="yes" xml:space="preserve">
          <source>Algorithm used to compute the nearest neighbors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb151b633578d2167df8c911cd7019b2a2913090" translate="yes" xml:space="preserve">
          <source>Algorithm used to transform the data lars: uses the least angle regression method (linear_model.lars_path) lasso_lars: uses Lars to compute the Lasso solution lasso_cd: uses the coordinate descent method to compute the Lasso solution (linear_model.Lasso). lasso_lars will be faster if the estimated components are sparse. omp: uses orthogonal matching pursuit to estimate the sparse solution threshold: squashes to zero all coefficients less than alpha from the projection &lt;code&gt;dictionary * X'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c5f2e6c851221e36e62f9314e77aa5b776cd59" translate="yes" xml:space="preserve">
          <source>Algorithm used to transform the data. lars: uses the least angle regression method (linear_model.lars_path) lasso_lars: uses Lars to compute the Lasso solution lasso_cd: uses the coordinate descent method to compute the Lasso solution (linear_model.Lasso). lasso_lars will be faster if the estimated components are sparse. omp: uses orthogonal matching pursuit to estimate the sparse solution threshold: squashes to zero all coefficients less than alpha from the projection dictionary * X&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57ea62b7e17ad495e3491babf97d100e18a1702" translate="yes" xml:space="preserve">
          <source>Algorithm used to transform the data: lars: uses the least angle regression method (linear_model.lars_path) lasso_lars: uses Lars to compute the Lasso solution lasso_cd: uses the coordinate descent method to compute the Lasso solution (linear_model.Lasso). lasso_lars will be faster if the estimated components are sparse. omp: uses orthogonal matching pursuit to estimate the sparse solution threshold: squashes to zero all coefficients less than alpha from the projection &lt;code&gt;dictionary * X'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd589ff391e3fe9203a6e5ffaf1bc46cb8b74f7" translate="yes" xml:space="preserve">
          <source>Algorithms also differ in how rows and columns may be assigned to biclusters, which leads to different bicluster structures. Block diagonal or checkerboard structures occur when rows and columns are divided into partitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06560884189da8b18b9514c9f15fcee660a6560e" translate="yes" xml:space="preserve">
          <source>Algorithms differ in how they define biclusters. Some of the common types include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b4372e3de7ce07bac66d661704328db6f955a4" translate="yes" xml:space="preserve">
          <source>Alias for field number 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbef6b362c3d3509157f18014e4e5a25eb4e07ea" translate="yes" xml:space="preserve">
          <source>Alias for field number 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb7d09e2006a3aec07c13d82496b6f2adb24a1f7" translate="yes" xml:space="preserve">
          <source>Alias for field number 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2116d748feb69a3af8d3d3f32852bff649bb421e" translate="yes" xml:space="preserve">
          <source>Alias for field number 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba0e524b527e040b1c69a39c8c3727540cd8735" translate="yes" xml:space="preserve">
          <source>Alias for field number 4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c99cb316a9285e1cd15f4f7521535d0751148726" translate="yes" xml:space="preserve">
          <source>All Gaussian process kernels are interoperable with &lt;a href=&quot;classes#module-sklearn.metrics.pairwise&quot;&gt;&lt;code&gt;sklearn.metrics.pairwise&lt;/code&gt;&lt;/a&gt; and vice versa: instances of subclasses of &lt;a href=&quot;generated/sklearn.gaussian_process.kernels.kernel#sklearn.gaussian_process.kernels.Kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; can be passed as &lt;code&gt;metric&lt;/code&gt; to pairwise_kernels`` from &lt;a href=&quot;classes#module-sklearn.metrics.pairwise&quot;&gt;&lt;code&gt;sklearn.metrics.pairwise&lt;/code&gt;&lt;/a&gt;. Moreover, kernel functions from pairwise can be used as GP kernels by using the wrapper class &lt;a href=&quot;generated/sklearn.gaussian_process.kernels.pairwisekernel#sklearn.gaussian_process.kernels.PairwiseKernel&quot;&gt;&lt;code&gt;PairwiseKernel&lt;/code&gt;&lt;/a&gt;. The only caveat is that the gradient of the hyperparameters is not analytic but numeric and all those kernels support only isotropic distances. The parameter &lt;code&gt;gamma&lt;/code&gt; is considered to be a hyperparameter and may be optimized. The other kernel parameters are set directly at initialization and are kept fixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="facb53030a78059078bd7255fa4340b830781f6e" translate="yes" xml:space="preserve">
          <source>All above functions (i.e. &lt;a href=&quot;generated/sklearn.preprocessing.scale#sklearn.preprocessing.scale&quot;&gt;&lt;code&gt;scale&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/sklearn.preprocessing.minmax_scale#sklearn.preprocessing.minmax_scale&quot;&gt;&lt;code&gt;minmax_scale&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/sklearn.preprocessing.maxabs_scale#sklearn.preprocessing.maxabs_scale&quot;&gt;&lt;code&gt;maxabs_scale&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;generated/sklearn.preprocessing.robust_scale#sklearn.preprocessing.robust_scale&quot;&gt;&lt;code&gt;robust_scale&lt;/code&gt;&lt;/a&gt;) accept 1D array which can be useful in some specific case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88245fc777e7533587c2f8e718d50cd7116a3f1" translate="yes" xml:space="preserve">
          <source>All available versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03af622cdb4aac726985802a2b9d3765c7a41749" translate="yes" xml:space="preserve">
          <source>All bins in each feature have identical widths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c634de3245b210109c9f97187eafdfb201b388" translate="yes" xml:space="preserve">
          <source>All bins in each feature have the same number of points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7d5dca10b34ad961d839250513b9c8a0893f0e" translate="yes" xml:space="preserve">
          <source>All classifiers in scikit-learn do multiclass classification out-of-the-box. You don&amp;rsquo;t need to use the &lt;a href=&quot;classes#module-sklearn.multiclass&quot;&gt;&lt;code&gt;sklearn.multiclass&lt;/code&gt;&lt;/a&gt; module unless you want to experiment with different multiclass strategies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026ccd1f86687bfe3e5f08bd5747feaae826b1dc" translate="yes" xml:space="preserve">
          <source>All classifiers in scikit-learn implement multiclass classification; you only need to use this module if you want to experiment with custom multiclass strategies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78fdb80201033cef297ce6fb5232c2383bd7521" translate="yes" xml:space="preserve">
          <source>All decision trees use &lt;code&gt;np.float32&lt;/code&gt; arrays internally. If training data is not in this format, a copy of the dataset will be made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b549b6eacc2f621d683cbb4d8d7de1b7ed3ca8" translate="yes" xml:space="preserve">
          <source>All entries of this dict (if any) are passed as keyword arguments to the pairwise kernel function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff969c4b66fd28ef01340faf70c8e905bbf72131" translate="yes" xml:space="preserve">
          <source>All estimator objects expose a &lt;code&gt;fit&lt;/code&gt; method that takes a dataset (usually a 2-d array):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9616c63898ea085d32d1415c7461f768e275753" translate="yes" xml:space="preserve">
          <source>All estimators in a pipeline, except the last one, must be transformers (i.e. must have a &lt;code&gt;transform&lt;/code&gt; method). The last estimator may be any type (transformer, classifier, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3fa432791090758c929f832210b21538e1fa2f" translate="yes" xml:space="preserve">
          <source>All estimators in the pipeline must support &lt;code&gt;inverse_transform&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ef621d2a7c2b25a3be25bb6ebef0201032958b" translate="yes" xml:space="preserve">
          <source>All estimators should specify all the parameters that can be set at the class level in their &lt;code&gt;__init__&lt;/code&gt; as explicit keyword arguments (no &lt;code&gt;*args&lt;/code&gt; or &lt;code&gt;**kwargs&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e3691f195d78233bed4d7732d29903c7a0bfe6" translate="yes" xml:space="preserve">
          <source>All last five solvers support both dense and sparse data. However, only &amp;lsquo;sag&amp;rsquo; and &amp;lsquo;saga&amp;rsquo; supports sparse input when &lt;code&gt;fit_intercept&lt;/code&gt; is True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f9c2a4b604c0e088d2123f4269900a4c32a338" translate="yes" xml:space="preserve">
          <source>All last five solvers support both dense and sparse data. However, only &amp;lsquo;sag&amp;rsquo; and &amp;lsquo;saga&amp;rsquo; supports sparse input when`fit_intercept` is True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe669fffadfc5710970ab03a9fde631f4966ca91" translate="yes" xml:space="preserve">
          <source>All of the above are supported by &lt;code&gt;sklearn.linear_model.stochastic_gradient&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ed2e5e9ebf405638935350a19afaab363efb49" translate="yes" xml:space="preserve">
          <source>All of the above loss functions can be regarded as an upper bound on the misclassification error (Zero-one loss) as shown in the Figure below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0050a0a20cce6934eea13e5fb5f70c03d8a3e6cd" translate="yes" xml:space="preserve">
          <source>All penalization parameters explored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955d9d437b529cc06e590b033bee6c6f48038cb1" translate="yes" xml:space="preserve">
          <source>All scikit-learn classifiers are capable of multiclass classification, but the meta-estimators offered by &lt;a href=&quot;classes#module-sklearn.multiclass&quot;&gt;&lt;code&gt;sklearn.multiclass&lt;/code&gt;&lt;/a&gt; permit changing the way they handle more than two classes because this may have an effect on classifier performance (either in terms of generalization error or required computational resources).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196b45b70e9cf2661d4f75a2029c5a0c8898e090" translate="yes" xml:space="preserve">
          <source>All settings, not just those presently modified, will be returned to their previous values when the context manager is exited. This is not thread-safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa66fd6d2b23c29862eb90bc96dba9c2ff577f39" translate="yes" xml:space="preserve">
          <source>All supervised &lt;a href=&quot;https://en.wikipedia.org/wiki/Estimator&quot;&gt;estimators&lt;/a&gt; in scikit-learn implement a &lt;code&gt;fit(X, y)&lt;/code&gt; method to fit the model and a &lt;code&gt;predict(X)&lt;/code&gt; method that, given unlabeled observations &lt;code&gt;X&lt;/code&gt;, returns the predicted labels &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd3433668568da7d84a79ee4e0518a15dd72a27" translate="yes" xml:space="preserve">
          <source>All the input data is provided matrix X (labeled and unlabeled) and corresponding label matrix y with a dedicated marker value for unlabeled samples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68201d9ddadd1b10424b1028599271aea0a81e03" translate="yes" xml:space="preserve">
          <source>All values are cached on the filesystem, in a deep directory structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad92361405543cadf3390872502b0368070801b1" translate="yes" xml:space="preserve">
          <source>All, &lt;a href=&quot;generated/sklearn.metrics.mutual_info_score#sklearn.metrics.mutual_info_score&quot;&gt;&lt;code&gt;mutual_info_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/sklearn.metrics.adjusted_mutual_info_score#sklearn.metrics.adjusted_mutual_info_score&quot;&gt;&lt;code&gt;adjusted_mutual_info_score&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.metrics.normalized_mutual_info_score#sklearn.metrics.normalized_mutual_info_score&quot;&gt;&lt;code&gt;normalized_mutual_info_score&lt;/code&gt;&lt;/a&gt; are symmetric: swapping the argument does not change the score. Thus they can be used as a &lt;strong&gt;consensus measure&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc3cbd54e82f76756e09725006efed713dfb14b" translate="yes" xml:space="preserve">
          <source>Allow to bypass several input checking. Don&amp;rsquo;t use this parameter unless you know what you do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2988d20e10f74030eeb38e913a183de75189dbb" translate="yes" xml:space="preserve">
          <source>Allowed inputs are lists, numpy arrays, scipy-sparse matrices or pandas dataframes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b369263cc488ea5fca6946112c8afe7517b680b5" translate="yes" xml:space="preserve">
          <source>Allows simple indexing of lists or arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0b505b007b0a8de2703b572d4c9c27c39f3415" translate="yes" xml:space="preserve">
          <source>Allows to examine the spread of each true cluster across predicted clusters and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036fd67d51f9b182736132cac7fb44d0406f98ef" translate="yes" xml:space="preserve">
          <source>Almost every group is distinguished by whether headers such as &lt;code&gt;NNTP-Posting-Host:&lt;/code&gt; and &lt;code&gt;Distribution:&lt;/code&gt; appear more or less often.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54076ee073b95c8e2227a7529bbd3c040278da4f" translate="yes" xml:space="preserve">
          <source>Alpaydin (alpaydin &amp;lsquo;@&amp;rsquo; boun.edu.tr)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d537ced7a0f9450c0b7f5b446829da6458dfc9" translate="yes" xml:space="preserve">
          <source>Alpaydin, C. Kaynak (1998) Cascading Classifiers, Kybernetika.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0f2eb3e0375e2eb0ff510eb47611a2b3ce02af" translate="yes" xml:space="preserve">
          <source>Alpha is a parameter for regularization term, aka penalty term, that combats overfitting by constraining the size of the weights. Increasing alpha may fix high variance (a sign of overfitting) by encouraging smaller weights, resulting in a decision boundary plot that appears with lesser curvatures. Similarly, decreasing alpha may fix high bias (a sign of underfitting) by encouraging larger weights, potentially resulting in a more complicated decision boundary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01b7375f883c68c86f4064f9c436e0a18c14d5d" translate="yes" xml:space="preserve">
          <source>Alpha is again treated as a random variable that is to be estimated from the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc4ba22610a89d08abe53892ec649b1e8a46ce9" translate="yes" xml:space="preserve">
          <source>Also for multiple metric evaluation, the attributes &lt;code&gt;best_index_&lt;/code&gt;, &lt;code&gt;best_score_&lt;/code&gt; and &lt;code&gt;best_params_&lt;/code&gt; will only be available if &lt;code&gt;refit&lt;/code&gt; is set and all of them will be determined w.r.t this specific scorer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c913c796a2efc191b66ad3c6a4c672e085ca88e" translate="yes" xml:space="preserve">
          <source>Also from the thickness of the silhouette plot the cluster size can be visualized. The silhouette plot for cluster 0 when &lt;code&gt;n_clusters&lt;/code&gt; is equal to 2, is bigger in size owing to the grouping of the 3 sub clusters into one big cluster. However when the &lt;code&gt;n_clusters&lt;/code&gt; is equal to 4, all the plots are more or less of similar thickness and hence are of similar sizes as can be also verified from the labelled scatter plot on the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11074bab0d4cf60477f10f484031e0877ac22e6b" translate="yes" xml:space="preserve">
          <source>Also known as one-vs-all, this strategy consists in fitting one classifier per class. For each classifier, the class is fitted against all the other classes. In addition to its computational efficiency (only &lt;code&gt;n_classes&lt;/code&gt; classifiers are needed), one advantage of this approach is its interpretability. Since each class is represented by one and one classifier only, it is possible to gain knowledge about the class by inspecting its corresponding classifier. This is the most commonly used strategy for multiclass classification and is a fair default choice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4d07ff4d50db829057964fee42d298814f3483" translate="yes" xml:space="preserve">
          <source>Also note that even though Box-Cox seems to perform better than Yeo-Johnson for lognormal and chi-squared distributions, keep in mind that Box-Cox does not support inputs with negative values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af9b79bdfeacc61c23bfadd6f95c644ff726db7" translate="yes" xml:space="preserve">
          <source>Also note that for the linear case, the algorithm used in &lt;a href=&quot;generated/sklearn.svm.linearsvc#sklearn.svm.LinearSVC&quot;&gt;&lt;code&gt;LinearSVC&lt;/code&gt;&lt;/a&gt; by the &lt;a href=&quot;http://www.csie.ntu.edu.tw/~cjlin/liblinear/&quot;&gt;liblinear&lt;/a&gt; implementation is much more efficient than its &lt;a href=&quot;http://www.csie.ntu.edu.tw/~cjlin/libsvm/&quot;&gt;libsvm&lt;/a&gt;-based &lt;a href=&quot;generated/sklearn.svm.svc#sklearn.svm.SVC&quot;&gt;&lt;code&gt;SVC&lt;/code&gt;&lt;/a&gt; counterpart and can scale almost linearly to millions of samples and/or features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de10864fc42a72508361320516be4ba6cf282ee" translate="yes" xml:space="preserve">
          <source>Also note that the digits labels roughly match the natural grouping found by t-SNE while the linear 2D projection of the PCA model yields a representation where label regions largely overlap. This is a strong clue that this data can be well separated by non linear methods that focus on the local structure (e.g. an SVM with a Gaussian RBF kernel). However, failing to visualize well separated homogeneously labeled groups with t-SNE in 2D does not necessarily imply that the data cannot be correctly classified by a supervised model. It might be the case that 2 dimensions are not low enough to accurately represents the internal structure of the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab26a7a4f86bc166b4ac9642686ddf7141b2b207" translate="yes" xml:space="preserve">
          <source>Also note that we set a low value for the tolerance to make sure that the model has converged before collecting the coefficients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d37adf37d9aef6924cdccc898bbb4ca10bb0758" translate="yes" xml:space="preserve">
          <source>Also useful for lower-level tasks is the function &lt;a href=&quot;generated/sklearn.linear_model.lasso_path#sklearn.linear_model.lasso_path&quot;&gt;&lt;code&gt;lasso_path&lt;/code&gt;&lt;/a&gt; that computes the coefficients along the full path of possible values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2b5f07f08a470a2b2e7ef1ae5a0e4e195af3e0" translate="yes" xml:space="preserve">
          <source>Also, these routines have not been tested for graphs with negative distances. Negative distances can lead to infinite cycles that must be handled by specialized algorithms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba49a974ea195b74ff8d485a45574a6c2262ea1" translate="yes" xml:space="preserve">
          <source>Also, this estimator is different from the R implementation of Robust Regression (&lt;a href=&quot;http://www.ats.ucla.edu/stat/r/dae/rreg.htm&quot;&gt;http://www.ats.ucla.edu/stat/r/dae/rreg.htm&lt;/a&gt;) because the R implementation does a weighted least squares implementation with weights given to each sample on the basis of how much the residual is greater than a certain threshold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3843c6d1de204ea6ff77660712728c7734da35" translate="yes" xml:space="preserve">
          <source>Alternate label propagation strategy more robust to noise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1df7e48a8694bc511c33f4fdb83c6299c349bb3" translate="yes" xml:space="preserve">
          <source>Alternate output array in which to place the result. The default is &lt;code&gt;None&lt;/code&gt;; if provided, it must have the same shape as the expected output, but the type will be cast if necessary. See &lt;code&gt;doc.ufuncs&lt;/code&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9319ffecfc2401bba3b77152ec4f1cf3bfc1dbce" translate="yes" xml:space="preserve">
          <source>Alternative online implementation that does incremental updates of the centers positions using mini-batches. For large scale learning (say n_samples &amp;gt; 10k) MiniBatchKMeans is probably much faster than the default batch implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203de1a7976ebc427fc76b372cb16da457115e31" translate="yes" xml:space="preserve">
          <source>Alternatively binaries for graphviz can be downloaded from the graphviz project homepage, and the Python wrapper installed from pypi with &lt;code&gt;pip install graphviz&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a86f6ee74cd1a30708099bd1d22a36b2f08e9a0f" translate="yes" xml:space="preserve">
          <source>Alternatively the backend can be passed directly as an instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c8a1ac67e02525fd024c6509339aad00aeced5" translate="yes" xml:space="preserve">
          <source>Alternatively, it can be set by the &amp;lsquo;SCIKIT_LEARN_DATA&amp;rsquo; environment variable or programmatically by giving an explicit folder path. The &amp;lsquo;~&amp;rsquo; symbol is expanded to the user home folder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd953719fa9152bd6124ae49c16c66b8c780a34" translate="yes" xml:space="preserve">
          <source>Alternatively, one can use the &lt;a href=&quot;generated/sklearn.neighbors.kdtree#sklearn.neighbors.KDTree&quot;&gt;&lt;code&gt;KDTree&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;generated/sklearn.neighbors.balltree#sklearn.neighbors.BallTree&quot;&gt;&lt;code&gt;BallTree&lt;/code&gt;&lt;/a&gt; classes directly to find nearest neighbors. This is the functionality wrapped by the &lt;a href=&quot;generated/sklearn.neighbors.nearestneighbors#sklearn.neighbors.NearestNeighbors&quot;&gt;&lt;code&gt;NearestNeighbors&lt;/code&gt;&lt;/a&gt; class used above. The Ball Tree and KD Tree have the same interface; we&amp;rsquo;ll show an example of using the KD Tree here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2b3bf63690d9fdf9c988aa4c9e184e0fbef9897" translate="yes" xml:space="preserve">
          <source>Alternatively, orthogonal matching pursuit can target a specific error instead of a specific number of non-zero coefficients. This can be expressed as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7ec2ff37de8d3d768baf118074df7d6149a11f" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;code&gt;scoring&lt;/code&gt; argument can be provided to specify an alternative scoring method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea61f1eddfe969d509258a2bd8bcd0672a722400" translate="yes" xml:space="preserve">
          <source>Alternatively, the estimator &lt;a href=&quot;generated/sklearn.linear_model.lassolarsic#sklearn.linear_model.LassoLarsIC&quot;&gt;&lt;code&gt;LassoLarsIC&lt;/code&gt;&lt;/a&gt; proposes to use the Akaike information criterion (AIC) and the Bayes Information criterion (BIC). It is a computationally cheaper alternative to find the optimal value of alpha as the regularization path is computed only once instead of k+1 times when using k-fold cross-validation. However, such criteria needs a proper estimation of the degrees of freedom of the solution, are derived for large samples (asymptotic results) and assume the model is correct, i.e. that the data are actually generated by this model. They also tend to break when the problem is badly conditioned (more features than samples).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f454663104fe93624afb99e1fe4ea6ef9bcd01cf" translate="yes" xml:space="preserve">
          <source>Alternatively, the probability of each class can be predicted, which is the fraction of training samples of the same class in a leaf:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7768459c8a27625c6b1edd47cdb7cdd42a8dbd" translate="yes" xml:space="preserve">
          <source>Alternatively, using &lt;code&gt;precomputed&lt;/code&gt;, a user-provided affinity matrix can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408564450de584fdcd4c6ffe287273935ea61be3" translate="yes" xml:space="preserve">
          <source>Alternatively, you can control the tree size by specifying the number of leaf nodes via the parameter &lt;code&gt;max_leaf_nodes&lt;/code&gt;. In this case, trees will be grown using best-first search where nodes with the highest improvement in impurity will be expanded first. A tree with &lt;code&gt;max_leaf_nodes=k&lt;/code&gt; has &lt;code&gt;k - 1&lt;/code&gt; split nodes and thus can model interactions of up to order &lt;code&gt;max_leaf_nodes - 1&lt;/code&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d8e5a012d3af6b5916c5e0e392c2cf43112fb2f" translate="yes" xml:space="preserve">
          <source>Although GMM are often used for clustering, we can compare the obtained clusters with the actual classes from the dataset. We initialize the means of the Gaussians with the means of the classes from the training set to make this comparison valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e3f75157b99771eea902cdfb247d8150fcbbb65" translate="yes" xml:space="preserve">
          <source>Although a list of sets or tuples is a very intuitive format for multilabel data, it is unwieldy to process. This transformer converts between this intuitive format and the supported multilabel format: a (samples x classes) binary matrix indicating the presence of a class label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b97831f2bf852269cd56a6950af72a787322f90" translate="yes" xml:space="preserve">
          <source>Although online method is guaranteed to converge to a local optimum point, the quality of the optimum point and the speed of convergence may depend on mini-batch size and attributes related to learning rate setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b824f979746fff21942ed5a8526c30831b67aa67" translate="yes" xml:space="preserve">
          <source>Always ignored, exists for compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f671e33354d7ef61d0b19d9b0bec50200bf9529c" translate="yes" xml:space="preserve">
          <source>Always ignored, exists for compatibility. &lt;code&gt;np.zeros(n_samples)&lt;/code&gt; may be used as a placeholder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f5a3adc76607b6ec083bd7a2c05aeeca017cf3" translate="yes" xml:space="preserve">
          <source>Amount of ridge shrinkage to apply in order to improve conditioning when calling the transform method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7500e59c81a09edaea684ef869962960b125989" translate="yes" xml:space="preserve">
          <source>Amount of ridge shrinkage to apply in order to improve conditioning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93d54da303ddad51202c963e4858505c997f8d0" translate="yes" xml:space="preserve">
          <source>Amount of verbosity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40cf2c52a2e789ddb84ca29dcc3ddee6f4122f49" translate="yes" xml:space="preserve">
          <source>An AdaBoost [1] classifier is a meta-estimator that begins by fitting a classifier on the original dataset and then fits additional copies of the classifier on the same dataset but where the weights of incorrectly classified instances are adjusted such that subsequent classifiers focus more on difficult cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043d85ce90b3af29bb38c14a359edb987b27e86d" translate="yes" xml:space="preserve">
          <source>An AdaBoost [1] regressor is a meta-estimator that begins by fitting a regressor on the original dataset and then fits additional copies of the regressor on the same dataset but where the weights of instances are adjusted according to the error of the current prediction. As such, subsequent regressors focus more on difficult cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0726965169fa1a924e6755570036e923d55d00c" translate="yes" xml:space="preserve">
          <source>An AdaBoost classifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f161ccb66d6dfc0409a9a54a8f62d08c472ddf6" translate="yes" xml:space="preserve">
          <source>An AdaBoost regressor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6356fae027d92d258a26309d7a3f256df2c9cc55" translate="yes" xml:space="preserve">
          <source>An Exception object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b2243b1ac08495762e9c93f82c1e26829c8a97" translate="yes" xml:space="preserve">
          <source>An alternative and recommended approach is to use &lt;code&gt;StandardScaler&lt;/code&gt; in a &lt;code&gt;Pipeline&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bcd8e2a5d780cc52692b09904c485c359805e94" translate="yes" xml:space="preserve">
          <source>An alternative standardization is scaling features to lie between a given minimum and maximum value, often between zero and one, or so that the maximum absolute value of each feature is scaled to unit size. This can be achieved using &lt;a href=&quot;generated/sklearn.preprocessing.minmaxscaler#sklearn.preprocessing.MinMaxScaler&quot;&gt;&lt;code&gt;MinMaxScaler&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;generated/sklearn.preprocessing.maxabsscaler#sklearn.preprocessing.MaxAbsScaler&quot;&gt;&lt;code&gt;MaxAbsScaler&lt;/code&gt;&lt;/a&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1db7ec650725e3eb3f215f1e02c7a5ab5d599a" translate="yes" xml:space="preserve">
          <source>An alternative task, Face Recognition or Face Identification is: given the picture of the face of an unknown person, identify the name of the person by referring to a gallery of previously seen pictures of identified persons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63983f26490d9d0dd330cb65d368efc57d509991" translate="yes" xml:space="preserve">
          <source>An application of the different &lt;a href=&quot;../../modules/manifold#manifold&quot;&gt;Manifold learning&lt;/a&gt; techniques on a spherical data-set. Here one can see the use of dimensionality reduction in order to gain some intuition regarding the manifold learning methods. Regarding the dataset, the poles are cut from the sphere, as well as a thin slice down its side. This enables the manifold learning techniques to &amp;lsquo;spread it open&amp;rsquo; whilst projecting it onto two dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7255375783faf14b00594786271748afe79b54ea" translate="yes" xml:space="preserve">
          <source>An approximate solution to the optimal normalized cut may be found via the generalized eigenvalue decomposition of the Laplacian of the graph. Usually this would mean working directly with the Laplacian matrix. If the original data matrix \(A\) has shape \(m \times n\), the Laplacian matrix for the corresponding bipartite graph has shape \((m + n) \times (m + n)\). However, in this case it is possible to work directly with \(A\), which is smaller and more efficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abda993d7d851644a2cce6e5b3201fc8e649cfdf" translate="yes" xml:space="preserve">
          <source>An approximation to the RBF kernel using random Fourier features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56451d3e9b79dc1326101c93a26155d78a7c4638" translate="yes" xml:space="preserve">
          <source>An array of arrays of indices of the approximate nearest points from the population matrix that lie within a ball of size &lt;code&gt;radius&lt;/code&gt; around the query points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a7cca6f3965cdbc1f2a0f6316fc86cbe697d1b" translate="yes" xml:space="preserve">
          <source>An array of norms along given axis for X. When X is sparse, a NotImplementedError will be raised for norm &amp;lsquo;l1&amp;rsquo; or &amp;lsquo;l2&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb7e49edfb49a7576a2bc3ab22563bf222603f7" translate="yes" xml:space="preserve">
          <source>An array of points to query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb131dede53f65a17272e64b8336596d48d67e7" translate="yes" xml:space="preserve">
          <source>An array of points to query. Last dimension should match dimension of training data (n_features).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1fbc6a1ce43e2f3a3c1ddf094fbdf1907a173f" translate="yes" xml:space="preserve">
          <source>An array of points to query. Last dimension should match dimension of training data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7729a5fd61fb2317d29018126beb8ea2ea03054" translate="yes" xml:space="preserve">
          <source>An array of type np.float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9febb5eef4fe704c0e2f76fc17196ae84e5bb310" translate="yes" xml:space="preserve">
          <source>An array with shape (n_samples_X, n_features).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ecc2546079acafbd51894522d368c0004da034" translate="yes" xml:space="preserve">
          <source>An array with shape (n_samples_X, n_samples_Y).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6f0a1fd0fa00a29e1c148218c8f262ec65e6a9" translate="yes" xml:space="preserve">
          <source>An array with shape (n_samples_Y, n_features).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ae6635fc7f12f40e0f75b8c113526f67ceb18f" translate="yes" xml:space="preserve">
          <source>An axis object onto which the plots will be drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ca61d5a0ba319e8f5dd67899dd1b75491f14b8" translate="yes" xml:space="preserve">
          <source>An early approach to taking advantage of this aggregate information was the &lt;em&gt;KD tree&lt;/em&gt; data structure (short for &lt;em&gt;K-dimensional tree&lt;/em&gt;), which generalizes two-dimensional &lt;em&gt;Quad-trees&lt;/em&gt; and 3-dimensional &lt;em&gt;Oct-trees&lt;/em&gt; to an arbitrary number of dimensions. The KD tree is a binary tree structure which recursively partitions the parameter space along the data axes, dividing it into nested orthotropic regions into which data points are filed. The construction of a KD tree is very fast: because partitioning is performed only along the data axes, no \(D\)-dimensional distances need to be computed. Once constructed, the nearest neighbor of a query point can be determined with only \(O[\log(N)]\) distance computations. Though the KD tree approach is very fast for low-dimensional (\(D &amp;lt; 20\)) neighbors searches, it becomes inefficient as \(D\) grows very large: this is one manifestation of the so-called &amp;ldquo;curse of dimensionality&amp;rdquo;. In scikit-learn, KD tree neighbors searches are specified using the keyword &lt;code&gt;algorithm = 'kd_tree'&lt;/code&gt;, and are computed using the class &lt;a href=&quot;generated/sklearn.neighbors.kdtree#sklearn.neighbors.KDTree&quot;&gt;&lt;code&gt;KDTree&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099567709025ab0aa48e57d57280b0443b9a24ed" translate="yes" xml:space="preserve">
          <source>An empty dict signifies default parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa5ed2f9779625aa20adf682c3351ed0a53fb7f" translate="yes" xml:space="preserve">
          <source>An encoding can also be called a &amp;lsquo;character set&amp;rsquo;, but this term is less accurate: several encodings can exist for a single character set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c84c56e7d6dd7f29f03b3419a89a1fa5861864" translate="yes" xml:space="preserve">
          <source>An ensemble of totally random trees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed51316796470f5285f1ea5227efd05cf75b44c0" translate="yes" xml:space="preserve">
          <source>An estimator object implementing &lt;code&gt;fit&lt;/code&gt; and &lt;code&gt;predict&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c736b1e847c7ee4aecf59b3bb14cb64e436dee2" translate="yes" xml:space="preserve">
          <source>An estimator object implementing &lt;code&gt;fit&lt;/code&gt; and one of &lt;code&gt;decision_function&lt;/code&gt; or &lt;code&gt;predict_proba&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016774ede32e1f200ea316bb37e829ebc5d620e2" translate="yes" xml:space="preserve">
          <source>An estimator object implementing &lt;code&gt;fit&lt;/code&gt;, &lt;code&gt;score&lt;/code&gt; and &lt;code&gt;predict_proba&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3cbd1a80e427709b1e224e290f485edaa6e701" translate="yes" xml:space="preserve">
          <source>An estimator object that is used to compute the initial predictions. &lt;code&gt;init&lt;/code&gt; has to provide &lt;code&gt;fit&lt;/code&gt; and &lt;code&gt;predict&lt;/code&gt;. If None it uses &lt;code&gt;loss.init_estimator&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8add3305e3de95c19db62ec2f9ba60a9992f6c8c" translate="yes" xml:space="preserve">
          <source>An estimator to inspect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0583622ca0751c993f08e9d98041286805dcca3a" translate="yes" xml:space="preserve">
          <source>An example comparing the effect of reconstructing noisy fragments of a raccoon face image using firstly online &lt;a href=&quot;../../modules/decomposition#dictionarylearning&quot;&gt;Dictionary Learning&lt;/a&gt; and various transform methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ed7be079cbbb4b66d35ed08e7318047e508129" translate="yes" xml:space="preserve">
          <source>An example illustrating the approximation of the feature map of an RBF kernel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f84ab4970b6751b484f351a6364e917ee9e2e2e" translate="yes" xml:space="preserve">
          <source>An example of a chunked operation adhering to this setting is &lt;code&gt;metric.pairwise_distances_chunked&lt;/code&gt;, which facilitates computing row-wise reductions of a pairwise distance matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30da83c344e58d7fad635964b30a7c96a578d3f" translate="yes" xml:space="preserve">
          <source>An example of an estimator is the class &lt;code&gt;sklearn.svm.SVC&lt;/code&gt;, which implements &lt;a href=&quot;https://en.wikipedia.org/wiki/Support_vector_machine&quot;&gt;support vector classification&lt;/a&gt;. The estimator&amp;rsquo;s constructor takes as arguments the model&amp;rsquo;s parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a28c2a5262858339108957d662b2d9ad76c60fe" translate="yes" xml:space="preserve">
          <source>An example of biclusters formed by partitioning rows and columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec3a210a521488a01f06a7254c4cbcafb1acb47" translate="yes" xml:space="preserve">
          <source>An example of checkerboard biclusters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263d7481d0f6606e447078322b3482f64ed58b85" translate="yes" xml:space="preserve">
          <source>An example of estimating sources from noisy data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8a60e5ae0a34a0a9e8c9683b9f2c1dae098cc6" translate="yes" xml:space="preserve">
          <source>An example of reshaping data would be the digits dataset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d2bef04bd500898cd35385a3db44c487620221" translate="yes" xml:space="preserve">
          <source>An example showing how different online solvers perform on the hand-written digits dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aae52ed09d5204233cf6faccc3b62129219ab9a" translate="yes" xml:space="preserve">
          <source>An example showing how the scikit-learn can be used to recognize images of hand-written digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6fbf3a5e9982b266901310af78a9acc8d8b83c" translate="yes" xml:space="preserve">
          <source>An example showing univariate feature selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63d45f44a041fe05e157072e07ec905aa6168f0" translate="yes" xml:space="preserve">
          <source>An example to compare multi-output regression with random forest and the &lt;a href=&quot;../../modules/multiclass#multiclass&quot;&gt;multioutput.MultiOutputRegressor&lt;/a&gt; meta-estimator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69827da4fe888278b671529418570646583bc79" translate="yes" xml:space="preserve">
          <source>An example to illustrate multi-output regression with decision tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278a8759739f9d084f6d58de5359105935a98d5a" translate="yes" xml:space="preserve">
          <source>An example to show covariance estimation with the Mahalanobis distances on Gaussian distributed data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79be1ff44d921e5597feeeddf48473c82478df46" translate="yes" xml:space="preserve">
          <source>An example using &lt;a href=&quot;../../modules/generated/sklearn.ensemble.isolationforest#sklearn.ensemble.IsolationForest&quot;&gt;&lt;code&gt;sklearn.ensemble.IsolationForest&lt;/code&gt;&lt;/a&gt; for anomaly detection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c015cad72773b21af2994319c7e4935c0925533a" translate="yes" xml:space="preserve">
          <source>An example using a one-class SVM for novelty detection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e6ce179701e2cc84a27da4032032e9c54e1a80" translate="yes" xml:space="preserve">
          <source>An extra-trees classifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402fd1d845155a85adc98aea2772c11c414eb821" translate="yes" xml:space="preserve">
          <source>An extra-trees regressor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e1ed7c225c31bf0ba3eb4dff97aa286624cf9d" translate="yes" xml:space="preserve">
          <source>An extremely randomized tree classifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2963ff7051490c77b458af39546e6bfce2134347" translate="yes" xml:space="preserve">
          <source>An extremely randomized tree regressor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e305a3161f1f3a1a75895f3bf89737b2fa1110e" translate="yes" xml:space="preserve">
          <source>An illustration of Swiss Roll reduction with locally linear embedding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff57c22861af0b46c7c064d86f712f1102614de2" translate="yes" xml:space="preserve">
          <source>An illustration of dimensionality reduction on the S-curve dataset with various manifold learning methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461c40d4fafb15fd1dbf5dddb7defd80f66220bc" translate="yes" xml:space="preserve">
          <source>An illustration of t-SNE on the two concentric circles and the S-curve datasets for different perplexity values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4217a4a05133f009315b7adf6df3894014f6eea5" translate="yes" xml:space="preserve">
          <source>An illustration of the isotonic regression on generated data. The isotonic regression finds a non-decreasing approximation of a function while minimizing the mean squared error on the training data. The benefit of such a model is that it does not assume any form for the target function such as linearity. For comparison a linear regression is also presented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f191130b61aa88bf4d9f0c56ed2e78e6bd9498" translate="yes" xml:space="preserve">
          <source>An illustration of the metric and non-metric MDS on generated noisy data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed4596d6f2bc0049548fe72a3bd1528d6ff1a95" translate="yes" xml:space="preserve">
          <source>An illustration of various embeddings on the digits dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5349a7af33dbb0da98921a0576af67237bdedc22" translate="yes" xml:space="preserve">
          <source>An illustration of various linkage option for agglomerative clustering on a 2D embedding of the digits dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9431c782d6d1945d9109d26f9bdc51c8ca5b4cc9" translate="yes" xml:space="preserve">
          <source>An implementation of a randomized algorithm for principal component analysis A. Szlam et al. 2014</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97eec2318d7e6e3549c069ff7f108d7733cec0af" translate="yes" xml:space="preserve">
          <source>An important aspect of performance optimization is also that it can hurt prediction accuracy. Indeed, simpler models (e.g. linear instead of non-linear, or with fewer parameters) often run faster but are not always able to take into account the same exact properties of the data as more complex ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f31261fda2a48216b1472f9c206633a0f349f1" translate="yes" xml:space="preserve">
          <source>An important notion of robust fitting is that of breakdown point: the fraction of data that can be outlying for the fit to start missing the inlying data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98153081fcfad9474299ea23738f0ec83b423b23" translate="yes" xml:space="preserve">
          <source>An important question is how can the Dirichlet process use an infinite, unbounded number of clusters and still be consistent. While a full explanation doesn&amp;rsquo;t fit this manual, one can think of its &lt;a href=&quot;https://en.wikipedia.org/wiki/Dirichlet_process#The_stick-breaking_process&quot;&gt;stick breaking process&lt;/a&gt; analogy to help understanding it. The stick breaking process is a generative story for the Dirichlet process. We start with a unit-length stick and in each step we break off a portion of the remaining stick. Each time, we associate the length of the piece of the stick to the proportion of points that falls into a group of the mixture. At the end, to represent the infinite mixture, we associate the last remaining piece of the stick to the proportion of points that don&amp;rsquo;t fall into all the other groups. The length of each piece is a random variable with probability proportional to the concentration parameter. Smaller value of the concentration will divide the unit-length into larger pieces of the stick (defining more concentrated distribution). Larger concentration values will create smaller pieces of the stick (increasing the number of components with non zero weights).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627c954c961a3acd43edae0e16b57eae5630ce43" translate="yes" xml:space="preserve">
          <source>An improvement of the Ledoit-Wolf shrinkage, the &lt;a href=&quot;../../modules/generated/sklearn.covariance.oas#sklearn.covariance.OAS&quot;&gt;&lt;code&gt;sklearn.covariance.OAS&lt;/code&gt;&lt;/a&gt;, proposed by Chen et al. Its convergence is significantly better under the assumption that the data are Gaussian, in particular for small samples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370f3995d8ef065bc41012596e70d603a42a06c3" translate="yes" xml:space="preserve">
          <source>An index that selects the retained features from a feature vector. If &lt;code&gt;indices&lt;/code&gt; is False, this is a boolean array of shape [# input features], in which an element is True iff its corresponding feature is selected for retention. If &lt;code&gt;indices&lt;/code&gt; is True, this is an integer array of shape [# output features] whose values are indices into the input feature vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f36ad8d88245eefc6653aba92b1989e3a7de69" translate="yes" xml:space="preserve">
          <source>An int, giving the exact number of total jobs that are spawned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb853d408e1363bd14470415d5367521c99f9fa" translate="yes" xml:space="preserve">
          <source>An interesting aspect of &lt;a href=&quot;generated/sklearn.cluster.agglomerativeclustering#sklearn.cluster.AgglomerativeClustering&quot;&gt;&lt;code&gt;AgglomerativeClustering&lt;/code&gt;&lt;/a&gt; is that connectivity constraints can be added to this algorithm (only adjacent clusters can be merged together), through a connectivity matrix that defines for each sample the neighboring samples following a given structure of the data. For instance, in the swiss-roll example below, the connectivity constraints forbid the merging of points that are not adjacent on the swiss roll, and thus avoid forming clusters that extend across overlapping folds of the roll.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edca22917cc04c2cee4dca2af159124718d78594" translate="yes" xml:space="preserve">
          <source>An interesting development of using a &lt;a href=&quot;generated/sklearn.feature_extraction.text.hashingvectorizer#sklearn.feature_extraction.text.HashingVectorizer&quot;&gt;&lt;code&gt;HashingVectorizer&lt;/code&gt;&lt;/a&gt; is the ability to perform &lt;a href=&quot;https://en.wikipedia.org/wiki/Out-of-core_algorithm&quot;&gt;out-of-core&lt;/a&gt; scaling. This means that we can learn from data that does not fit into the computer&amp;rsquo;s main memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e061f170f65c98ddc125ba623de0d484bced6052" translate="yes" xml:space="preserve">
          <source>An introduction to machine learning with scikit-learn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8000912a05784b4ed09f166d2281bb382154409" translate="yes" xml:space="preserve">
          <source>An iterable which yields either str, unicode or file objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26021975f66731cfc83771c3f9a3b8617a224127" translate="yes" xml:space="preserve">
          <source>An iterable yielding train, test splits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793ecf7b6fedca1d245cd9de3dfad1789ad435c2" translate="yes" xml:space="preserve">
          <source>An iterable yielding train/test splits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c74b450a38327bc579731e9a6b693f5a72972a9" translate="yes" xml:space="preserve">
          <source>An object for detecting outliers in a Gaussian distributed dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3e30a61bd34f61e007c1401c3e81f0d43c8edb" translate="yes" xml:space="preserve">
          <source>An object of that type which is cloned for each validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbffbe09f32930b2800698ca47bd093017747bdf" translate="yes" xml:space="preserve">
          <source>An object to be used as a cross-validation generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7002171a59c54b21633748422d618355d53d5f0" translate="yes" xml:space="preserve">
          <source>An optional mask of the image, to consider only part of the pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8123eda49913b2b31a4b7b815dc029043ed233" translate="yes" xml:space="preserve">
          <source>An optional progress meter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229c2b7073ef4d939c3f4e9dc0933cc0c25d3c6e" translate="yes" xml:space="preserve">
          <source>An optional second feature array. Only allowed if metric != &amp;ldquo;precomputed&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0072ba612e2ac9888a715c6d07a5f35671c0b0f4" translate="yes" xml:space="preserve">
          <source>An ordered array of unique labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a760a22c84feac040244658e5cd6e733d7fd7a9c" translate="yes" xml:space="preserve">
          <source>An unsupervised transformation of a dataset to a high-dimensional sparse representation. A datapoint is coded according to which leaf of each tree it is sorted into. Using a one-hot encoding of the leaves, this leads to a binary coding with as many ones as there are trees in the forest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d82cfe79ef09c873c85764ea87217dd841df582" translate="yes" xml:space="preserve">
          <source>An upper bound on the fraction of training errors and a lower bound of the fraction of support vectors. Should be in the interval (0, 1].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9f028f3aaaed07cbca0fd41b78759c2fe2428d" translate="yes" xml:space="preserve">
          <source>An upper bound on the fraction of training errors and a lower bound of the fraction of support vectors. Should be in the interval (0, 1]. By default 0.5 will be taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98195adea1583e9b237e74652523f846b2b1879" translate="yes" xml:space="preserve">
          <source>And for multiple metric evaluation, the return value is a dict with the following keys - &lt;code&gt;['test_&amp;lt;scorer1_name&amp;gt;', 'test_&amp;lt;scorer2_name&amp;gt;', 'test_&amp;lt;scorer...&amp;gt;', 'fit_time', 'score_time']&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48696369bc4cd123e13a474e64394fa9533d40a" translate="yes" xml:space="preserve">
          <source>And some work with binary and multilabel (but not multiclass) problems:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="551fc600bc5b2c147bfd7d608b1227c6f0c95818" translate="yes" xml:space="preserve">
          <source>And the L2-normalized tf-idf changes to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd06a66dae1b69b6eb93cccfb52c33888c5a371c" translate="yes" xml:space="preserve">
          <source>And the classifier &amp;ldquo;predictions&amp;rdquo; are perfect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b646eac54bde60aa4d7c89014b7fd028412efa2f" translate="yes" xml:space="preserve">
          <source>Andrew Rosenberg and Julia Hirschberg, 2007. V-Measure: A conditional entropy-based external cluster evaluation measure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2b1b23fa02a3f4b2a576f98b5ef19fd6944167" translate="yes" xml:space="preserve">
          <source>Another alternative is to take a symmetric version of the k nearest neighbors connectivity matrix of the points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a5ccc165016bcc8540311d11c1eec6480387f0" translate="yes" xml:space="preserve">
          <source>Another approach is to monitor convergence on a validation score. In this case, the input data is split into a training set and a validation set. The model is then fitted on the training set and the stopping criterion is based on the prediction score computed on the validation set. This enables us to find the least number of iterations which is sufficient to build a model that generalizes well to unseen data and reduces the chance of over-fitting the training data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7184b0e2bd98f85cd552cd8ec12d77ca9e3964" translate="yes" xml:space="preserve">
          <source>Another aspect to consider when choosing a proper algorithm is that not all of them put the same importance on each example over time. Namely, the &lt;code&gt;Perceptron&lt;/code&gt; is still sensitive to badly labeled examples even after many examples whereas the &lt;code&gt;SGD*&lt;/code&gt; and &lt;code&gt;PassiveAggressive*&lt;/code&gt; families are more robust to this kind of artifacts. Conversely, the latter also tend to give less importance to remarkably different, yet properly labeled examples when they come late in the stream as their learning rate decreases over time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a1cd2cb87665a11effa4dc4df8f03517ac0638" translate="yes" xml:space="preserve">
          <source>Another common application is to use time information: for instance the groups could be the year of collection of the samples and thus allow for cross-validation against time-based splits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8230731c6a46697977b2ab40afba474c6e0f5aba" translate="yes" xml:space="preserve">
          <source>Another efficient way to perform outlier detection on moderately high dimensional datasets is to use the Local Outlier Factor (LOF) algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421e4566a6c577d45c51d939beed6fdb20866913" translate="yes" xml:space="preserve">
          <source>Another evaluation measure for multi-class classification is macro-averaging, which gives equal weight to the classification of each label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103287c3ab74c62412ea0fba62e90af2b9fbac2a" translate="yes" xml:space="preserve">
          <source>Another important metric to care about when sizing production systems is the throughput i.e. the number of predictions you can make in a given amount of time. Here is a benchmark from the &lt;a href=&quot;../auto_examples/applications/plot_prediction_latency#sphx-glr-auto-examples-applications-plot-prediction-latency-py&quot;&gt;Prediction Latency&lt;/a&gt; example that measures this quantity for a number of estimators on synthetic data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe975675e662edf348908a46736c6c5923bfe28" translate="yes" xml:space="preserve">
          <source>Another possibility to convert categorical features to features that can be used with scikit-learn estimators is to use a one-of-K, also known as one-hot or dummy encoding. This type of encoding can be obtained with the &lt;a href=&quot;generated/sklearn.preprocessing.onehotencoder#sklearn.preprocessing.OneHotEncoder&quot;&gt;&lt;code&gt;OneHotEncoder&lt;/code&gt;&lt;/a&gt;, which transforms each categorical feature with &lt;code&gt;n_categories&lt;/code&gt; possible values into &lt;code&gt;n_categories&lt;/code&gt; binary features, with one of them 1, and all others 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4ca3c02f5c305e57327d7ebc584dba1a900469" translate="yes" xml:space="preserve">
          <source>Another refinement on top of tf is to downscale weights for words that occur in many documents in the corpus and are therefore less informative than those that occur only in a smaller portion of the corpus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b069cfdd4eba1168499f693bf3d06a42576bfe6a" translate="yes" xml:space="preserve">
          <source>Another set of biclusters like &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbed96b9cee766d1a5bef03a5ad136b7f76de1ff" translate="yes" xml:space="preserve">
          <source>Another significant feature involves whether the sender is affiliated with a university, as indicated either by their headers or their signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="943b31c92155c4448885494636d7164b8dc15821" translate="yes" xml:space="preserve">
          <source>Another strategy to reduce the variance is by subsampling the features analogous to the random splits in &lt;a href=&quot;generated/sklearn.ensemble.randomforestclassifier#sklearn.ensemble.RandomForestClassifier&quot;&gt;&lt;code&gt;RandomForestClassifier&lt;/code&gt;&lt;/a&gt; . The number of subsampled features can be controlled via the &lt;code&gt;max_features&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f320421764ca2c9e221a3ad89c0802b9dda00c" translate="yes" xml:space="preserve">
          <source>Another way to reduce memory and computation time is to remove (near-)duplicate points and use &lt;code&gt;sample_weight&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89aea8f1a22bc16a7ca2249f6b1aa681a716bbf" translate="yes" xml:space="preserve">
          <source>Any core sample is part of a cluster, by definition. Any sample that is not a core sample, and is at least &lt;code&gt;eps&lt;/code&gt; in distance from any core sample, is considered an outlier by the algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c9d8de07d4bc7df0a34b129a047212dbcfefbc" translate="yes" xml:space="preserve">
          <source>Any further parameters are passed directly to the distance function. If using a &lt;code&gt;scipy.spatial.distance&lt;/code&gt; metric, the parameters are still metric dependent. See the scipy docs for usage examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f47dd09163cb40bcb092eb016347a6afcf892a" translate="yes" xml:space="preserve">
          <source>Any further parameters are passed directly to the distance function. If using a scipy.spatial.distance metric, the parameters are still metric dependent. See the scipy docs for usage examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac4cf049edcb6bb9798310f2f664afd413547f9" translate="yes" xml:space="preserve">
          <source>Any further parameters are passed directly to the kernel function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02eaff0fa77b6c45a1e6d5d1d919c0643a037a82" translate="yes" xml:space="preserve">
          <source>Any pairwise distance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b551d3f373e53d945ef845b2e543fa8abdb837a0" translate="yes" xml:space="preserve">
          <source>Any parameter provided when constructing an estimator may be optimized in this manner. Specifically, to find the names and current values for all parameters for a given estimator, use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c69ec44124fc60e723479a565a556b4cda43066" translate="yes" xml:space="preserve">
          <source>Apart from a scalar or a single item list, the column selection can be specified as a list of multiple items, an integer array, a slice, or a boolean mask. Strings can reference columns if the input is a DataFrame, integers are always interpreted as the positional columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4989a2f6df8d0581f9c1d9a7bb746db90f17c597" translate="yes" xml:space="preserve">
          <source>Apple Accelerate and vecLib frameworks (OSX only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781951ec1e6932c1ea70532655c1b03656c5caff" translate="yes" xml:space="preserve">
          <source>Applies fit_predict of last step in pipeline after transforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55937b5acc0d0ace1d8fc39be387e51d59bfd33" translate="yes" xml:space="preserve">
          <source>Applies fit_transforms of a pipeline to the data, followed by the fit_predict method of the final estimator in the pipeline. Valid only if the final estimator implements fit_predict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21a5ab651c86df31d86409fda574ccc4b1b0811" translate="yes" xml:space="preserve">
          <source>Applies transformers to columns of an array or pandas DataFrame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1fc2d494d882727c783481b882146100e6cdea" translate="yes" xml:space="preserve">
          <source>Apply Term Frequency Inverse Document Frequency normalization to a sparse matrix of occurrence counts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ea2e033ed029c8a6ff54b6ec3dbb5f6c117a68" translate="yes" xml:space="preserve">
          <source>Apply a correction to raw Minimum Covariance Determinant estimates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3438e96e607439758fb53dafc23a0586474578cd" translate="yes" xml:space="preserve">
          <source>Apply a power transform featurewise to make data more Gaussian-like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abb9abf1584e2411d2ab4707e053695cc0afad4" translate="yes" xml:space="preserve">
          <source>Apply approximate feature map to X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5fc36d5b38e5cc48bf65799eb3ba1f5f5dd4c40" translate="yes" xml:space="preserve">
          <source>Apply clustering to a projection to the normalized laplacian.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8426b1a96ac4159519d28aa77b01e6e7ff1b8a94" translate="yes" xml:space="preserve">
          <source>Apply decision function to an array of samples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4427937ffbc660a10ac85e3e1e095b79e74a1a" translate="yes" xml:space="preserve">
          <source>Apply dimensionality reduction to X using the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94efd724519284be8c4f7f9c1263433e19686d0b" translate="yes" xml:space="preserve">
          <source>Apply dimensionality reduction to X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067a30cda0bacc8769ba06b4343f4bb4f1512cf6" translate="yes" xml:space="preserve">
          <source>Apply feature map to X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="019b3cb4563fab68f9b7e6cb2810fdfe13086cd9" translate="yes" xml:space="preserve">
          <source>Apply inverse transformations in reverse order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba6ffbae8fd06f4432eaf3f6080e23e84a08a61" translate="yes" xml:space="preserve">
          <source>Apply parallel or deflational algorithm for FastICA.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052f087320408b50bb181caf401c6c09884401a8" translate="yes" xml:space="preserve">
          <source>Apply sublinear tf scaling, i.e. replace tf with 1 + log(tf).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79510482ec62ac16315b7e449f2ba4c8500bc2e" translate="yes" xml:space="preserve">
          <source>Apply the approximate feature map to X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125fbeef808b6029be65b8119e0b6dcb36461fee" translate="yes" xml:space="preserve">
          <source>Apply the dimension reduction learned on the train data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccff7a762ba43bf734237ef3a3f86ce4e5f76a2a" translate="yes" xml:space="preserve">
          <source>Apply the inverse power transformation using the fitted lambdas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0977868498dbf8902c5244b7ef40fc62ab65dab8" translate="yes" xml:space="preserve">
          <source>Apply the power transform to each feature using the fitted lambdas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b34785a3e300efc01281606b13c116a0d93f34" translate="yes" xml:space="preserve">
          <source>Apply transforms to the data, and predict with the final estimator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1ed4363821df5fce03d98ccc01802e4bf47ad5" translate="yes" xml:space="preserve">
          <source>Apply transforms, and decision_function of the final estimator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f4f9e2645ee8d058965cbdacfaf2a7eb9788d03" translate="yes" xml:space="preserve">
          <source>Apply transforms, and predict_log_proba of the final estimator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476ce75d7df4464fc2850d9c9869c6985e6ab19f" translate="yes" xml:space="preserve">
          <source>Apply transforms, and predict_proba of the final estimator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4521c8878b7f577e2b39e24b7f82d01d4c53bdb4" translate="yes" xml:space="preserve">
          <source>Apply transforms, and score with the final estimator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef451a675f7839fb36e9b71a5c79c50af524605d" translate="yes" xml:space="preserve">
          <source>Apply transforms, and transform with the final estimator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de81ef7ceb9f90b36294e9caf98f17d7f5fb716c" translate="yes" xml:space="preserve">
          <source>Apply trees in the ensemble to X, return leaf indices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e9e1565b766b82cfa48c8669ac20be4ae1efca" translate="yes" xml:space="preserve">
          <source>Apply trees in the forest to X, return leaf indices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f7ec5473437cc6f706dcde780cf75354c5c9db" translate="yes" xml:space="preserve">
          <source>Approximate a kernel map using a subset of the training data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c9230e6f99f216d46b329fe823b6165b309c69" translate="yes" xml:space="preserve">
          <source>Approximate feature map for additive chi2 kernel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a233ba78739efc19c54579d317a0c2897cb08a" translate="yes" xml:space="preserve">
          <source>Approximated breakdown point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c9ab0b0026778753b68f0b79aed7c300d9ec18" translate="yes" xml:space="preserve">
          <source>Approximates feature map of an RBF kernel by Monte Carlo approximation of its Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cd123a52fffa6abe1c128079596542a14c93e1" translate="yes" xml:space="preserve">
          <source>Approximates feature map of the &amp;ldquo;skewed chi-squared&amp;rdquo; kernel by Monte Carlo approximation of its Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0747da454303400f203ff73991292f2e6b1d8099" translate="yes" xml:space="preserve">
          <source>Approximations to the Likelihood Gradient. International Conference on Machine Learning (ICML) 2008</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3121863aa17e74b4053a8b1b5b5e368203cc9eae" translate="yes" xml:space="preserve">
          <source>Are computed such that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9981f730845b36824e5458276d9c866bb62f0b81" translate="yes" xml:space="preserve">
          <source>Area under the precision-recall curve</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e08f171a6f1a9519e5708f61bf31cc48538834b" translate="yes" xml:space="preserve">
          <source>Arguments to send to the functional form. If empty and if fun=&amp;rsquo;logcosh&amp;rsquo;, fun_args will take value {&amp;lsquo;alpha&amp;rsquo; : 1.0}.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45228c98edaaa951ea722f923e4cffb69731e7a" translate="yes" xml:space="preserve">
          <source>Ariel Sharon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f09cc06ef4f6b2c8293917d6e2b9c293adc607" translate="yes" xml:space="preserve">
          <source>Array 1 for distance computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2aa765e7ec61bcc3223e5c31148344ebd52c37" translate="yes" xml:space="preserve">
          <source>Array 2 for distance computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a65824231356d07c95aeae6f87001027ea0bef6" translate="yes" xml:space="preserve">
          <source>Array containing labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6449394cdaf60dea5ac71fdd09a0ed9e9fcf7ee" translate="yes" xml:space="preserve">
          <source>Array containing numbers whose mean is desired. If &lt;code&gt;a&lt;/code&gt; is not an array, a conversion is attempted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c018e704aa26bba356828629d984b5289beaf058" translate="yes" xml:space="preserve">
          <source>Array containing pairwise preference constraints (qid in svmlight format).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91335d05435a126405d2a8a45dca985aad48295a" translate="yes" xml:space="preserve">
          <source>Array containing points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25bba3f8d7bf2293b0ad16bc13aa9e306ca9914" translate="yes" xml:space="preserve">
          <source>Array mapping from feature integer indices to feature name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70e68dbf5038082528f259bb78c1b52974cdd1b7" translate="yes" xml:space="preserve">
          <source>Array of C i.e. inverse of regularization parameter values used for cross-validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23db680f590249d8c9bf389de4a77cfbca412ab" translate="yes" xml:space="preserve">
          <source>Array of C that maps to the best scores across every class. If refit is set to False, then for each class, the best C is the average of the C&amp;rsquo;s that correspond to the best scores for each fold. &lt;code&gt;C_&lt;/code&gt; is of shape(n_classes,) when the problem is binary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bcf7c58e5cd52bc0017cb778f5c70ae9fb7f4c3" translate="yes" xml:space="preserve">
          <source>Array of alpha values to try. Regularization strength; must be a positive float. Regularization improves the conditioning of the problem and reduces the variance of the estimates. Larger values specify stronger regularization. Alpha corresponds to &lt;code&gt;C^-1&lt;/code&gt; in other linear models such as LogisticRegression or LinearSVC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66e9a562c0b4e0d27e475880657f80a6deb9514" translate="yes" xml:space="preserve">
          <source>Array of feature-wise means to update with the new data X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c98b4462671d9e778e0d714eb0f164a1614fcd" translate="yes" xml:space="preserve">
          <source>Array of feature-wise var to update with the new data X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f81a8f931ec6cc551fbd84a217b7d3ae7ae6320" translate="yes" xml:space="preserve">
          <source>Array of indices to be used in a subsample. Can be of length less than n_samples in the case of a subsample, or equal to n_samples in the case of a bootstrap subsample with repeated indices. If None, the sample weight will be calculated over the full sample. Only &amp;ldquo;balanced&amp;rdquo; is supported for class_weight if this is provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeab30110685755d1d6fcfd1bdec963e11fd2b40" translate="yes" xml:space="preserve">
          <source>Array of labels assigned to the input data. if partial_fit is used instead of fit, they are assigned to the last batch of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4370a66f6bded85adaf7548951f4179c0716e58" translate="yes" xml:space="preserve">
          <source>Array of modal values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd74761ce4c1dfdbf88f10700afe7876dc7373c" translate="yes" xml:space="preserve">
          <source>Array of ordered feature names used in the dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f885b177d721fef81c6f0296028811159f9ce61" translate="yes" xml:space="preserve">
          <source>Array of original class labels per sample.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7800a77bf571d12be284509e1c1715411139d56e" translate="yes" xml:space="preserve">
          <source>Array of original class labels per sample;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96778e504b9d48e677b9fd575a4cafc7576e9a4e" translate="yes" xml:space="preserve">
          <source>Array of pairwise distances between samples, or a feature array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e091a26de25f0600efda87ce52273e245aa786c4" translate="yes" xml:space="preserve">
          <source>Array of pairwise kernels between samples, or a feature array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad46daa8cb15b6370dc0bc3d5a37d6d0d152fc8" translate="yes" xml:space="preserve">
          <source>Array of positive distances. If vertex i is connected to vertex j, then dist_matrix[i,j] gives the distance between the vertices. If vertex i is not connected to vertex j, then dist_matrix[i,j] = 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5f1b979067f81092a1e7cd9ffe302fc627e739" translate="yes" xml:space="preserve">
          <source>Array of precomputed feature-wise values to use for scaling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6812a29eee4afd325221734d77b9a4dae2cd6936" translate="yes" xml:space="preserve">
          <source>Array of precomputed sample-wise values to use for scaling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdeed78489293ac715c2ab2eb4b0404b2b3869aa" translate="yes" xml:space="preserve">
          <source>Array of samples (test vectors).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f920c86b265a90a5e0d4a36297a04667e3e9df" translate="yes" xml:space="preserve">
          <source>Array of samples/test vectors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fbc39a14b9b4da5186fad432e1588423be425d4" translate="yes" xml:space="preserve">
          <source>Array of scores of the estimator for each run of the cross validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ad4c3a294e4989b4c11ac5e758294b0026c988" translate="yes" xml:space="preserve">
          <source>Array of shape (Nx, D), representing Nx points in D dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8b99cd3247136d0c5bc8738933867c6b7310fe" translate="yes" xml:space="preserve">
          <source>Array of shape (Ny, D), representing Ny points in D dimensions. If not specified, then Y=X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250d74905474bfb993e7135f2cc0cab46c1b40f6" translate="yes" xml:space="preserve">
          <source>Array of the classes occurring in the data, as given by &lt;code&gt;np.unique(y_org)&lt;/code&gt; with &lt;code&gt;y_org&lt;/code&gt; the original class labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78e425c6e49838f94af51fc89b925b7dde837d3" translate="yes" xml:space="preserve">
          <source>Array of weighted counts for each mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94dd9c0571a23f9d9a0e09a5e6b6a6f23711b3ea" translate="yes" xml:space="preserve">
          <source>Array of weights that are assigned to individual samples. If not provided, then each sample is given unit weight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d23bb743e4774802fe069cba46f38744d42d230" translate="yes" xml:space="preserve">
          <source>Array representing the cosine distances to each point, only present if return_distance=True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f32f9aefd1234d15dbae57ece52e2602c42baf" translate="yes" xml:space="preserve">
          <source>Array representing the distances to each point, only present if return_distance=True. The distance values are computed according to the &lt;code&gt;metric&lt;/code&gt; constructor parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dadd9836b98c2a8bfba00660688e29f8956840ae" translate="yes" xml:space="preserve">
          <source>Array representing the lengths to points, only present if return_distance=True</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="128b0965caa89fb141c0f27357f3b344c8ae14e0" translate="yes" xml:space="preserve">
          <source>Array with class_weight_vect[i] the weight for i-th class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8071ea6e98367794e2540e75731701074b3502c7" translate="yes" xml:space="preserve">
          <source>Array with sample weights as applied to the original y</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454c01b5a8f0e04bcddbd63e1a11312ba378a0a5" translate="yes" xml:space="preserve">
          <source>Arrays containing points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e1c09be8a72c22c42432b49cce52b8593ad9f3" translate="yes" xml:space="preserve">
          <source>Arrays containing points. Respective shapes (n_samples1, n_features) and (n_samples2, n_features)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c2af9f8f5cb14e6db46f51362b9496e9213d67c" translate="yes" xml:space="preserve">
          <source>Art B. Owen (2006), A robust hybrid of lasso and ridge regression. &lt;a href=&quot;http://statweb.stanford.edu/~owen/reports/hhu.pdf&quot;&gt;http://statweb.stanford.edu/~owen/reports/hhu.pdf&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280c547a1f162abeda960694ff094a09bc3e0f0d" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;RobustScaler&lt;/code&gt;, &lt;code&gt;QuantileTransformer&lt;/code&gt; is robust to outliers in the sense that adding or removing outliers in the training set will yield approximately the same transformation on held out data. But contrary to &lt;code&gt;RobustScaler&lt;/code&gt;, &lt;code&gt;QuantileTransformer&lt;/code&gt; will also automatically collapse any outlier by setting them to the a priori defined range boundaries (0 and 1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9342a94a131883760ca784477b6aa2e1e17246" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;StandardScaler&lt;/code&gt;, &lt;code&gt;MinMaxScaler&lt;/code&gt; is very sensitive to the presence of outliers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0473784855cee607ac3c3e8942e446aa86c45018" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;leaf_size&lt;/code&gt; increases, the memory required to store a tree structure decreases. This is especially important in the case of ball tree, which stores a \(D\)-dimensional centroid for each node. The required storage space for &lt;a href=&quot;generated/sklearn.neighbors.balltree#sklearn.neighbors.BallTree&quot;&gt;&lt;code&gt;BallTree&lt;/code&gt;&lt;/a&gt; is approximately &lt;code&gt;1 / leaf_size&lt;/code&gt; times the size of the training set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba99528590cd9030f3ddfaa7772e7d00f041704" translate="yes" xml:space="preserve">
          <source>As F-test captures only linear dependency, it rates x_1 as the most discriminative feature. On the other hand, mutual information can capture any kind of dependency between variables and it rates x_2 as the most discriminative feature, which probably agrees better with our intuitive perception for this example. Both methods correctly marks x_3 as irrelevant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26c8ba867b91d66c4620ebdebaef0da4c712fd2" translate="yes" xml:space="preserve">
          <source>As \(\nu\rightarrow\infty\), the Mat&amp;eacute;rn kernel converges to the RBF kernel. When \(\nu = 1/2\), the Mat&amp;eacute;rn kernel becomes identical to the absolute exponential kernel, i.e.,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1774dd2550566b72e9349a744134b65f1d5b37" translate="yes" xml:space="preserve">
          <source>As \(k\) becomes large compared to \(N\), the ability to prune branches in a tree-based query is reduced. In this situation, Brute force queries can be more efficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf1e694d41950e191ce698208593222026d0616" translate="yes" xml:space="preserve">
          <source>As a general rule, most authors, and empirical evidence, suggest that 5- or 10- fold cross validation should be preferred to LOO.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7511794679052faea86272ecd7141a948a5ee019" translate="yes" xml:space="preserve">
          <source>As a rule of thumb you can consider that if the sparsity ratio is greater than 90% you can probably benefit from sparse formats. Check Scipy&amp;rsquo;s sparse matrix formats &lt;a href=&quot;http://docs.scipy.org/doc/scipy/reference/sparse.html&quot;&gt;documentation&lt;/a&gt; for more information on how to build (or convert your data to) sparse matrix formats. Most of the time the &lt;code&gt;CSR&lt;/code&gt; and &lt;code&gt;CSC&lt;/code&gt; formats work best.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353bdb2ad3c8962f2cd7a3693251833639b2a66a" translate="yes" xml:space="preserve">
          <source>As a stochastic method, the loss function is not necessarily decreasing at each iteration, and convergence is only guaranteed in expectation. For this reason, monitoring the convergence on the loss function can be difficult.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c1051c685f7a17c464794391d76e887c975059" translate="yes" xml:space="preserve">
          <source>As alpha tends toward zero the coefficients found by Ridge regression stabilize towards the randomly sampled vector w. For big alpha (strong regularisation) the coefficients are smaller (eventually converging at 0) leading to a simpler and biased solution. These dependencies can be observed on the left plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c04824c2f2c674faf4d7d29dd0f1d9a774a897e" translate="yes" xml:space="preserve">
          <source>As an example, consider a word-level natural language processing task that needs features extracted from &lt;code&gt;(token, part_of_speech)&lt;/code&gt; pairs. One could use a Python generator function to extract features:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440e47d9bdf54f0d76b208827e3f8a7246ce9187" translate="yes" xml:space="preserve">
          <source>As an example, suppose that we have a dataset with boolean features, and we want to remove all features that are either one or zero (on or off) in more than 80% of the samples. Boolean features are Bernoulli random variables, and the variance of such variables is given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc331775bcbccb582b3c6648f3387e8f638bc0a" translate="yes" xml:space="preserve">
          <source>As an iterable of string metrics::</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670a68b39de7d2dc4b153165f015b7c7235ba10c" translate="yes" xml:space="preserve">
          <source>As an optimization problem, binary class L2 penalized logistic regression minimizes the following cost function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0923a21facc4895041c36b66fbffdd3ccd57707" translate="yes" xml:space="preserve">
          <source>As currently implemented, Dijkstra&amp;rsquo;s algorithm does not work for graphs with direction-dependent distances when directed == False. i.e., if dist_matrix[i,j] and dist_matrix[j,i] are not equal and both are nonzero, method=&amp;rsquo;D&amp;rsquo; will not necessarily yield the correct result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ae6c61fa89653926b85f1ce590dca96bbcbbc7" translate="yes" xml:space="preserve">
          <source>As described on the original website:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa4aad7dfb43ef2769419ae7f460971c9284dbe" translate="yes" xml:space="preserve">
          <source>As described previously, the most widely used distance function is the squared Frobenius norm, which is an obvious extension of the Euclidean norm to matrices:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e81ebe44fbcb1c67bb2bf8d6d2417ec1c47e735b" translate="yes" xml:space="preserve">
          <source>As expected the confusion matrix shows that posts from the newsgroups on atheism and Christianity are more often confused for one another than with computer graphics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21f305b83f6ecc940d012c4c2d2b2809b12f48f" translate="yes" xml:space="preserve">
          <source>As expected, &lt;code&gt;VarianceThreshold&lt;/code&gt; has removed the first column, which has a probability \(p = 5/6 &amp;gt; .8\) of containing a zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1461782e678132cdda4c11cb8a9f0f36fdc4dc12" translate="yes" xml:space="preserve">
          <source>As expected, the plot suggests that 3 features are informative, while the remaining are not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21dea3d956b97f59f6554850f2e02a18d3e3f037" translate="yes" xml:space="preserve">
          <source>As for the &lt;a href=&quot;generated/sklearn.preprocessing.normalizer#sklearn.preprocessing.Normalizer&quot;&gt;&lt;code&gt;Normalizer&lt;/code&gt;&lt;/a&gt;, the utility class &lt;a href=&quot;generated/sklearn.preprocessing.binarizer#sklearn.preprocessing.Binarizer&quot;&gt;&lt;code&gt;Binarizer&lt;/code&gt;&lt;/a&gt; is meant to be used in the early stages of &lt;a href=&quot;generated/sklearn.pipeline.pipeline#sklearn.pipeline.Pipeline&quot;&gt;&lt;code&gt;sklearn.pipeline.Pipeline&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;fit&lt;/code&gt; method does nothing as each sample is treated independently of others:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448fad632016e4e86e34b67a2dd205dc93981193" translate="yes" xml:space="preserve">
          <source>As for the &lt;a href=&quot;generated/sklearn.preprocessing.standardscaler#sklearn.preprocessing.StandardScaler&quot;&gt;&lt;code&gt;StandardScaler&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.preprocessing.normalizer#sklearn.preprocessing.Normalizer&quot;&gt;&lt;code&gt;Normalizer&lt;/code&gt;&lt;/a&gt; classes, the preprocessing module provides a companion function &lt;a href=&quot;generated/sklearn.preprocessing.binarize#sklearn.preprocessing.binarize&quot;&gt;&lt;code&gt;binarize&lt;/code&gt;&lt;/a&gt; to be used when the transformer API is not necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a9833b8f532d00a6b35f7523ca2a620de3d115" translate="yes" xml:space="preserve">
          <source>As in the classification setting, the fit method will take as argument arrays X and y, only that in this case y is expected to have floating point values instead of integer values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357549c786d11a83e9ad1e4e4484c10d048f813a" translate="yes" xml:space="preserve">
          <source>As is shown in the result before discretization, linear model is fast to build and relatively straightforward to interpret, but can only model linear relationships, while decision tree can build a much more complex model of the data. One way to make linear model more powerful on continuous data is to use discretization (also known as binning). In the example, we discretize the feature and one-hot encode the transformed data. Note that if the bins are not reasonably wide, there would appear to be a substantially increased risk of overfitting, so the discretizer parameters should usually be tuned under cross validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9026eb9b1171dae37e620c4611084cbf5214d244" translate="yes" xml:space="preserve">
          <source>As most documents will typically use a very small subset of the words used in the corpus, the resulting matrix will have many feature values that are zeros (typically more than 99% of them).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80903649b427f38994df0cc2bd896c257816e4cc" translate="yes" xml:space="preserve">
          <source>As neighboring data points are more likely to lie within the same leaf of a tree, the transformation performs an implicit, non-parametric density estimation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3b8dbd06a75124d0b25055322ec22921d45503" translate="yes" xml:space="preserve">
          <source>As noted above, for small sample sizes a brute force search can be more efficient than a tree-based query. This fact is accounted for in the ball tree and KD tree by internally switching to brute force searches within leaf nodes. The level of this switch can be specified with the parameter &lt;code&gt;leaf_size&lt;/code&gt;. This parameter choice has many effects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480621b1ef230a82c36b7031ee3539b5a66ef9c0" translate="yes" xml:space="preserve">
          <source>As other classifiers, &lt;a href=&quot;generated/sklearn.svm.svc#sklearn.svm.SVC&quot;&gt;&lt;code&gt;SVC&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/sklearn.svm.nusvc#sklearn.svm.NuSVC&quot;&gt;&lt;code&gt;NuSVC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.svm.linearsvc#sklearn.svm.LinearSVC&quot;&gt;&lt;code&gt;LinearSVC&lt;/code&gt;&lt;/a&gt; take as input two arrays: an array X of size &lt;code&gt;[n_samples,
n_features]&lt;/code&gt; holding the training samples, and an array y of class labels (strings or integers), size &lt;code&gt;[n_samples]&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b96557b2fb9eb69b558f788f743c67cbdf526d" translate="yes" xml:space="preserve">
          <source>As other classifiers, SGD has to be fitted with two arrays: an array X of size [n_samples, n_features] holding the training samples, and an array Y of size [n_samples] holding the target values (class labels) for the training samples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8715d103d1eabb437e2b429e94c0804a44a2eb" translate="yes" xml:space="preserve">
          <source>As other classifiers, forest classifiers have to be fitted with two arrays: a sparse or dense array X of size &lt;code&gt;[n_samples, n_features]&lt;/code&gt; holding the training samples, and an array Y of size &lt;code&gt;[n_samples]&lt;/code&gt; holding the target values (class labels) for the training samples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c002345c84e7b31630185ef2325d2598748527" translate="yes" xml:space="preserve">
          <source>As scikit-learn relies heavily on Numpy/Scipy and linear algebra in general it makes sense to take explicit care of the versions of these libraries. Basically, you ought to make sure that Numpy is built using an optimized &lt;a href=&quot;https://en.wikipedia.org/wiki/Basic_Linear_Algebra_Subprograms&quot;&gt;BLAS&lt;/a&gt; / &lt;a href=&quot;https://en.wikipedia.org/wiki/LAPACK&quot;&gt;LAPACK&lt;/a&gt; library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de312b28ec8e48929f9dedcb0b6804aa5a471fe2" translate="yes" xml:space="preserve">
          <source>As shown below, t-SNE for higher perplexities finds meaningful topology of two concentric circles, however the size and the distance of the circles varies slightly from the original. Contrary to the two circles dataset, the shapes visually diverge from S-curve topology on the S-curve dataset even for larger perplexity values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8731c43edea0fd3a0536e8161228e2825929062b" translate="yes" xml:space="preserve">
          <source>As tf&amp;ndash;idf is very often used for text features, there is also another class called &lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidfvectorizer#sklearn.feature_extraction.text.TfidfVectorizer&quot;&gt;&lt;code&gt;TfidfVectorizer&lt;/code&gt;&lt;/a&gt; that combines all the options of &lt;a href=&quot;generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;CountVectorizer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidftransformer#sklearn.feature_extraction.text.TfidfTransformer&quot;&gt;&lt;code&gt;TfidfTransformer&lt;/code&gt;&lt;/a&gt; in a single model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6adce24795bb660ac39f8e682709377eb07fe5" translate="yes" xml:space="preserve">
          <source>As the Lasso regression yields sparse models, it can thus be used to perform feature selection, as detailed in &lt;a href=&quot;feature_selection#l1-feature-selection&quot;&gt;L1-based feature selection&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc66d7007c269247f1b0a3bd5e17ce48735d32b4" translate="yes" xml:space="preserve">
          <source>As the algorithm tries to balance the volume (ie balance the region sizes), if we take circles with different sizes, the segmentation fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca54f3bcc5c655eebc87fa446a643204f651e5fe" translate="yes" xml:space="preserve">
          <source>As the ground truth is known here, we also apply different cluster quality metrics to judge the goodness of fit of the cluster labels to the ground truth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f19c73cbdda7d655c1c419bc1b28d6aee89730" translate="yes" xml:space="preserve">
          <source>As the negative of a distance, this kernel is only conditionally positive definite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74315005f7ce6ac1c1dafe71dd19e66293fa501a" translate="yes" xml:space="preserve">
          <source>As the prior on the weights is a Gaussian prior, the histogram of the estimated weights is Gaussian.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78b7e4ef3de6f9908e43081399b599b6d846fba" translate="yes" xml:space="preserve">
          <source>As this algorithm maximizes only the likelihood, it will not bias the means towards zero, or bias the cluster sizes to have specific structures that might or might not apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492cebfc31b9e0ae2de0bb7669534987ce58057c" translate="yes" xml:space="preserve">
          <source>As usual the best way to adjust the feature extraction parameters is to use a cross-validated grid search, for instance by pipelining the feature extractor with a classifier:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea78a4c7988b659783feac98fcd695de89f8d61f" translate="yes" xml:space="preserve">
          <source>As we have seen, every estimator exposes a &lt;code&gt;score&lt;/code&gt; method that can judge the quality of the fit (or the prediction) on new data. &lt;strong&gt;Bigger is better&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff4f5f3ab6438d863abba19bbb7c007a060f360" translate="yes" xml:space="preserve">
          <source>As we&amp;rsquo;ll see, some cross-validation objects do specific things with labeled data, others behave differently with grouped data, and others do not use this information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a5e94d01ebd06105b2b62c25b4b493ea944024" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;generated/sklearn.preprocessing.scale#sklearn.preprocessing.scale&quot;&gt;&lt;code&gt;scale&lt;/code&gt;&lt;/a&gt;, the module further provides convenience functions &lt;a href=&quot;generated/sklearn.preprocessing.minmax_scale#sklearn.preprocessing.minmax_scale&quot;&gt;&lt;code&gt;minmax_scale&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.preprocessing.maxabs_scale#sklearn.preprocessing.maxabs_scale&quot;&gt;&lt;code&gt;maxabs_scale&lt;/code&gt;&lt;/a&gt; if you don&amp;rsquo;t want to create an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c97bbdc8d450f400aad05e1727632d201bf17f90" translate="yes" xml:space="preserve">
          <source>As with classification classes, the fit method will take as argument vectors X, y, only that in this case y is expected to have floating point values instead of integer values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320d01bbc29ff09708f415fa50fd9da6e6972d95" translate="yes" xml:space="preserve">
          <source>As with other classifiers, &lt;a href=&quot;generated/sklearn.tree.decisiontreeclassifier#sklearn.tree.DecisionTreeClassifier&quot;&gt;&lt;code&gt;DecisionTreeClassifier&lt;/code&gt;&lt;/a&gt; takes as input two arrays: an array X, sparse or dense, of size &lt;code&gt;[n_samples, n_features]&lt;/code&gt; holding the training samples, and an array Y of integer values, size &lt;code&gt;[n_samples]&lt;/code&gt;, holding the class labels for the training samples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211544b1f9de9dd9d971b4d12a5c9dd1ee84dd6a" translate="yes" xml:space="preserve">
          <source>As with other linear models, &lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;Ridge&lt;/code&gt;&lt;/a&gt; will take in its &lt;code&gt;fit&lt;/code&gt; method arrays X, y and will store the coefficients \(w\) of the linear model in its &lt;code&gt;coef_&lt;/code&gt; member:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0550c97cec757ba988ca448a8879bb1fa8d6048a" translate="yes" xml:space="preserve">
          <source>As you can imagine, if one extracts such a context around each individual word of a corpus of documents the resulting matrix will be very wide (many one-hot-features) with most of them being valued to zero most of the time. So as to make the resulting data structure able to fit in memory the &lt;code&gt;DictVectorizer&lt;/code&gt; class uses a &lt;code&gt;scipy.sparse&lt;/code&gt; matrix by default instead of a &lt;code&gt;numpy.ndarray&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1b1999c59fa9b3c0bf1aeb80e6b35e3cde33f4" translate="yes" xml:space="preserve">
          <source>As you can see, by default the KFold cross-validation iterator does not take either datapoint class or group into consideration. We can change this by using the &lt;code&gt;StratifiedKFold&lt;/code&gt; like so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4243f9f7d96f83f5f8fe40416e149534c5c3a7c1" translate="yes" xml:space="preserve">
          <source>As you can see, it is a challenging task: after all, the images are of poor resolution. Do you agree with the classifier?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d172a6c45b01ca0f06c000f8b26183873978d6" translate="yes" xml:space="preserve">
          <source>As you can see, it returns [[0.5]], and [[2]], which means that the element is at distance 0.5 and is the third element of samples (indexes start at 0). You can also query for multiple points:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1273827574a8e654ba4e8fa3b455e8b899058288" translate="yes" xml:space="preserve">
          <source>Ash</source>
          <target state="translated">Ash</target>
        </trans-unit>
        <trans-unit id="7e00bdd748db07e532eed9a3a30221202b903645" translate="yes" xml:space="preserve">
          <source>Ash:</source>
          <target state="translated">Ash:</target>
        </trans-unit>
        <trans-unit id="fa6467e4d61dfb46a998615f44d406b657f3e65c" translate="yes" xml:space="preserve">
          <source>Assign a fixed integer id to each word occurring in any document of the training set (for instance by building a dictionary from words to integer indices).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07fb5452be9437f82662fee13a0f5824d7cc38d4" translate="yes" xml:space="preserve">
          <source>Assign biclusters from one set to another in a one-to-one fashion to maximize the sum of their similarities. This step is performed using the Hungarian algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeab86fb8cce55c225e83b0d2dc18f408531cb78" translate="yes" xml:space="preserve">
          <source>Assume two label assignments (of the same N objects), \(U\) and \(V\). Their entropy is the amount of uncertainty for a partition set, defined by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e5d6eebf8d779ccbfdee109f1d6bfd1baee97c2" translate="yes" xml:space="preserve">
          <source>Assuming that some data is Independent and Identically Distributed (i.i.d.) is making the assumption that all samples stem from the same generative process and that the generative process is assumed to have no memory of past generated samples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc888006cf2fe36cad38d794da87b3aa0beb9fc6" translate="yes" xml:space="preserve">
          <source>At each stage the decision tree \(h_m(x)\) is chosen to minimize the loss function \(L\) given the current model \(F_{m-1}\) and its fit \(F_{m-1}(x_i)\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe84c1effa1f2d8d0a150671e591a10f6f5331c" translate="yes" xml:space="preserve">
          <source>At first, a linear model will be applied on the original targets. Due to the non-linearity, the model trained will not be precise during the prediction. Subsequently, a logarithmic function is used to linearize the targets, allowing better prediction even with a similar linear model as reported by the median absolute error (MAE).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3103892102cc58ce3e902fe26301aa542c051586" translate="yes" xml:space="preserve">
          <source>At fitting time, one binary classifier per bit in the code book is fitted. At prediction time, the classifiers are used to project new points in the class space and the class closest to the points is chosen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0707d969d20d6e3136e641e1fe81f003f9dea63" translate="yes" xml:space="preserve">
          <source>At learning time, this simply consists in learning one regressor or binary classifier per class. In doing so, one needs to convert multi-class labels to binary labels (belong or does not belong to the class). LabelBinarizer makes this process easy with the transform method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934e61570171dfc9a4fde1dc5a30d65977fe4f97" translate="yes" xml:space="preserve">
          <source>At prediction time, one assigns the class for which the corresponding model gave the greatest confidence. LabelBinarizer makes this easy with the inverse_transform method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01685dbfb47dea411fa9fd7d65acd3b07b6bad19" translate="yes" xml:space="preserve">
          <source>At present, no metric in &lt;a href=&quot;classes#module-sklearn.metrics&quot;&gt;&lt;code&gt;sklearn.metrics&lt;/code&gt;&lt;/a&gt; supports the multioutput-multiclass classification task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b9e03e5fa2d5e24dd0fa35a80f06e2085ef3ae" translate="yes" xml:space="preserve">
          <source>At the end, the top 10 most uncertain predictions will be shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dcf986df80f51359fc05a76ec4e2e0108cdc275" translate="yes" xml:space="preserve">
          <source>At the moment, we also don&amp;rsquo;t allow &amp;ldquo;multiclass-multioutput&amp;rdquo; input type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df8fa75ddc8543ff453e545d20ad90388cfe52d" translate="yes" xml:space="preserve">
          <source>Atlas (need hardware specific tuning by rebuilding on the target machine)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023272de4f331b86e2df4744d3b1e32a0350f127" translate="yes" xml:space="preserve">
          <source>Attribute Information (in order):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66b29f74a8ebab57ad67bac7a0ee9e151e247d3" translate="yes" xml:space="preserve">
          <source>Attribute Information:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d9c6c9c4fb8ae7805f1c9bc9a51e56b622aec7" translate="yes" xml:space="preserve">
          <source>Attribute to access any fitted sub-estimators by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b65a8e129440be6a666c5f76241c3731cf3a1b" translate="yes" xml:space="preserve">
          <source>Attributes of named_steps map to keys, enabling tab completion in interactive environments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8087185e5ee37cef4c337de5697d35d75d909fd" translate="yes" xml:space="preserve">
          <source>Attributes:</source>
          <target state="translated">Attributes:</target>
        </trans-unit>
        <trans-unit id="662dd9f8d8390601f16824595a7c397648198b36" translate="yes" xml:space="preserve">
          <source>Augment dataset with an additional dummy feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6060232846b2935a9975d9bd33986976db84e5d5" translate="yes" xml:space="preserve">
          <source>Authors : Kemal Eren License: BSD 3 clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98ce7a4dae4be4f8e868a70ee741cf11d8125c8" translate="yes" xml:space="preserve">
          <source>Automatic Relevance Determination Regression (ARD)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1af4aed4c1976557d8776224b00250d32e50c1e" translate="yes" xml:space="preserve">
          <source>Automatic selection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f9440a5b62bebabad643e5080d2b83ccab9f91" translate="yes" xml:space="preserve">
          <source>Available Metrics The following lists the string metric identifiers and the associated distance metric classes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca931fa62c0bd7287f5c68d38715d784e965be8" translate="yes" xml:space="preserve">
          <source>AveBedrms average number of bedrooms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a283071b7681c2d8946f1976d0c70df9b6239788" translate="yes" xml:space="preserve">
          <source>AveOccup average house occupancy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17df5670db0dd155c5ad44fbbe5780684721e711" translate="yes" xml:space="preserve">
          <source>AveRooms average number of rooms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b414b4c6acadd2002166fddf247cff6dfe513e" translate="yes" xml:space="preserve">
          <source>Average anomaly score of X of the base classifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaed8a8037e41bff9561818c652346d8c7001f53" translate="yes" xml:space="preserve">
          <source>Average blood pressure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a54e71704b0c1b179b46e11f33d130b77d3a0d5" translate="yes" xml:space="preserve">
          <source>Average hinge loss (non-regularized)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b044db8b528a2f509603d248114c200773b5ebd" translate="yes" xml:space="preserve">
          <source>Average log-likelihood of the samples under the current model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0fd4fa14e78cac718fcf8ea4ba2f14bf0250758" translate="yes" xml:space="preserve">
          <source>Average of the decision functions of the base classifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af6f79d617c2284de9fdf1ff445ccb0bef8560e1" translate="yes" xml:space="preserve">
          <source>Averaged weights assigned to the features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964142eff5ddb8396f41dd41083f429f4f575768" translate="yes" xml:space="preserve">
          <source>Avoid computation of the row norms of X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94256a7c3ba8c276f8434ee8dd2981a7e1ebede5" translate="yes" xml:space="preserve">
          <source>Axis along which the argmin and distances are to be computed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9912ed29fe6a32ef154522ba9276f54ba95862ff" translate="yes" xml:space="preserve">
          <source>Axis along which the axis should be computed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e908ee13d1946f0bd5dd05b5fc4432878bcf585b" translate="yes" xml:space="preserve">
          <source>Axis along which to operate. Default is 0, i.e. the first axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bcbcdbcc90358e775edd4243e64cbf53abf5bcb" translate="yes" xml:space="preserve">
          <source>Axis or axes along which the means are computed. The default is to compute the mean of the flattened array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbac4e2a88e22f8f6d03a59528261348ca05f77" translate="yes" xml:space="preserve">
          <source>Axis used to compute the means and standard deviations along. If 0, transform each feature, otherwise (if 1) transform each sample.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9392f6fda3d4e0cffc8528669a8abc510a0238a" translate="yes" xml:space="preserve">
          <source>B 1000(Bk - 0.63)^2 where Bk is the proportion of blacks by town</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598b91099876ac145b645491cf669799147b8703" translate="yes" xml:space="preserve">
          <source>Back-projection to the original space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e935196220898869d9edfac83ba997f81f0fb5f8" translate="yes" xml:space="preserve">
          <source>Bad (e.g. independent labelings) have negative or close to 0.0 scores:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="739e4c11d3b87131b9d408fbaefcc186a18d8f06" translate="yes" xml:space="preserve">
          <source>Bad (e.g. independent labelings) have non-positive scores:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3594d99d3d09849089991e6e49125443f8f3dc1b" translate="yes" xml:space="preserve">
          <source>Bad (e.g. independent labelings) have zero scores:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5267c44135f5b9260b00b1b8283ecbffae624a" translate="yes" xml:space="preserve">
          <source>Bagging methods come in many flavours but mostly differ from each other by the way they draw random subsets of the training set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18dc564424c60fd05a12c3420895fdf2cfdfe52" translate="yes" xml:space="preserve">
          <source>Bags of words</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95bff14a4bbf238a2164b4e0cae458c0fe2685ef" translate="yes" xml:space="preserve">
          <source>Balance your dataset before training to prevent the tree from being biased toward the classes that are dominant. Class balancing can be done by sampling an equal number of samples from each class, or preferably by normalizing the sum of the sample weights (&lt;code&gt;sample_weight&lt;/code&gt;) for each class to the same value. Also note that weight-based pre-pruning criteria, such as &lt;code&gt;min_weight_fraction_leaf&lt;/code&gt;, will then be less biased toward dominant classes than criteria that are not aware of the sample weights, like &lt;code&gt;min_samples_leaf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f675285d8ed3983e70827edce654b1139be242" translate="yes" xml:space="preserve">
          <source>Balanced Accuracy as described in &lt;a href=&quot;#urbanowicz2015&quot; id=&quot;id10&quot;&gt;[Urbanowicz2015]&lt;/a&gt;: the average of sensitivity and specificity is computed for each class and then averaged over total number of classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784fa76a8b1c1ec60f28239d94fc65e8d7be9167" translate="yes" xml:space="preserve">
          <source>Baldi, Brunak, Chauvin, Andersen and Nielsen, (2000). Assessing the accuracy of prediction algorithms for classification: an overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7faaf3d73987f1f3ca80fb71528f4fcc07c23b8e" translate="yes" xml:space="preserve">
          <source>BallTree for fast generalized N-point problems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef5acd09f6d09b9952e2688ee6340fe9a396e5b" translate="yes" xml:space="preserve">
          <source>BallTree(X, leaf_size=40, metric=&amp;rsquo;minkowski&amp;rsquo;, **kwargs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72ce994093395e37676061f1dd51a4ea80c1082" translate="yes" xml:space="preserve">
          <source>Bandwidth used in the RBF kernel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c486c3167e8e5060c79997e836642fbe914971f" translate="yes" xml:space="preserve">
          <source>Barnes-Hut is an approximation of the exact method. The approximation is parameterized with the angle parameter, therefore the angle parameter is unused when method=&amp;rdquo;exact&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0ab9922dcf0fcbb725191c9b8bc0a7c9ecc19c" translate="yes" xml:space="preserve">
          <source>Barnes-Hut is significantly more scalable. Barnes-Hut can be used to embed hundred of thousands of data points while the exact method can handle thousands of samples before becoming computationally intractable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10a9a2aa738bc222bc8e12bf3c9da484bcf459f" translate="yes" xml:space="preserve">
          <source>Barnes-Hut only works with dense input data. Sparse data matrices can only be embedded with the exact method or can be approximated by a dense low rank projection for instance using &lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt;&lt;code&gt;sklearn.decomposition.TruncatedSVD&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7063b67add41dd6938d0fe03decc31a786e18ce9" translate="yes" xml:space="preserve">
          <source>Base class for all estimators in scikit-learn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ed1a2c57def49034ad9434aa34e34b64c59294" translate="yes" xml:space="preserve">
          <source>Base class for all kernels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597d1d5f179914ea7470a3760bd8ee3a2400c1bc" translate="yes" xml:space="preserve">
          <source>Base classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425994da22262a2dfe067d38bec718a9f15fcaea" translate="yes" xml:space="preserve">
          <source>Base classes for all estimators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0cdf2e205135846db5a02006385fb2f510f153e" translate="yes" xml:space="preserve">
          <source>Base classifier for this ensemble.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ae0e2f9a4051180ae0aa7361de2f44f1e6a032" translate="yes" xml:space="preserve">
          <source>Base estimator for this ensemble.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ce9dc70ae7445a77ac8ebb388087887574787e" translate="yes" xml:space="preserve">
          <source>Base estimator object which implements the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6856d61f849440214e260ddb8260a2004382c80" translate="yes" xml:space="preserve">
          <source>Based on these bin intervals, &lt;code&gt;X&lt;/code&gt; is transformed as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623eb094427cb27d5c4cd4b74097a0449f38ab15" translate="yes" xml:space="preserve">
          <source>Basically, 1. may be a reader that yields instances from files on a hard drive, a database, from a network stream etc. However, details on how to achieve this are beyond the scope of this documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b2071c2229aa4389154bc62f3ee3617cb13ae0" translate="yes" xml:space="preserve">
          <source>Bayesian ARD regression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c3e11f0d41baa7b5753d8723cd4012a9d964c3" translate="yes" xml:space="preserve">
          <source>Bayesian Ridge Regression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8e5b5e24015d9adc82586dba204556446370ab" translate="yes" xml:space="preserve">
          <source>Bayesian Ridge Regression is used for regression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13c97854320151b1c6271dc7d1a9fd73998cc11" translate="yes" xml:space="preserve">
          <source>Bayesian information criterion for the current model on the input X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9caaf8acefcf32287fe9e5bedbc0bc32de3a2bfd" translate="yes" xml:space="preserve">
          <source>Bayesian regression techniques can be used to include regularization parameters in the estimation procedure: the regularization parameter is not set in a hard sense but tuned to the data at hand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b720ec1817dce1bf9d7dcbcab6e206b85efdaa6" translate="yes" xml:space="preserve">
          <source>Bayesian ridge regression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13244381ac86550f492dc53b5005b711b59fb204" translate="yes" xml:space="preserve">
          <source>Be aware that the number of features in the output array scales polynomially in the number of features of the input array, and exponentially in the degree. High degrees can cause overfitting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a63e14a349843f9c954f28468802eec39d0181f" translate="yes" xml:space="preserve">
          <source>Be mindful that this function is an order of magnitude slower than other metrics, such as the Adjusted Rand Index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83921ebb17d38b8a4b1a1e3f6653eb2aa6327ec9" translate="yes" xml:space="preserve">
          <source>Because LARS is based upon an iterative refitting of the residuals, it would appear to be especially sensitive to the effects of noise. This problem is discussed in detail by Weisberg in the discussion section of the Efron et al. (2004) Annals of Statistics article.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbb3cd2ef2ab4d2456b8c42be279603ef8045ba" translate="yes" xml:space="preserve">
          <source>Because of scaling performed by this method, it is discouraged to use it together with methods that are not scale-invariant (like SVMs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63be2fc59867472cdd54d70a5100dc5be4d8ddfa" translate="yes" xml:space="preserve">
          <source>Because of the Python object overhead involved in calling the python function, this will be fairly slow, but it will have the same scaling as other distances.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
