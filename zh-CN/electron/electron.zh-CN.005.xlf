<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="electron">
    <body>
      <group id="electron">
        <trans-unit id="aab3f4b6a862893ca2745b7d3f5a93b3d8a71a95" translate="yes" xml:space="preserve">
          <source>Rebranding with Downloaded Binaries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da859183da0a2a5939d0521e5e572cd185b5873" translate="yes" xml:space="preserve">
          <source>Recent Documents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bdfd2d5cf2aa4d3a6455330d3725dbf63c620b2" translate="yes" xml:space="preserve">
          <source>Recent Documents (Windows &amp;amp; macOS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17d14d3136aefc8aebae7b8a5de5b80991199a4" translate="yes" xml:space="preserve">
          <source>Recording begins immediately locally and asynchronously on child processes as soon as they receive the EnableRecording request. The &lt;code&gt;callback&lt;/code&gt; will be called once all child processes have acknowledged the &lt;code&gt;startRecording&lt;/code&gt; request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c158695a64adb40952c1cf9fde78b62bd6147f42" translate="yes" xml:space="preserve">
          <source>Rectangle</source>
          <target state="translated">Rectangle</target>
        </trans-unit>
        <trans-unit id="3c809bf54e005cede67a090955c8df54827d8ad3" translate="yes" xml:space="preserve">
          <source>Rectangle Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df9d8580463745d00107d2f335e0f77d0b500ba" translate="yes" xml:space="preserve">
          <source>Redux DevTools Extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c0f5f893f53d13f88f5a14fe122120153a0a1f" translate="yes" xml:space="preserve">
          <source>Regenerate Ninja files against both targets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246d882dc22f0917cd24e816ad33e8843cdebf88" translate="yes" xml:space="preserve">
          <source>Register a custom protocol and intercept existing protocol requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90173092fa06923b7e54a90be85f3d4d938a4498" translate="yes" xml:space="preserve">
          <source>Registering a scheme as standard will allow access to files through the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/LocalFileSystem&quot;&gt;FileSystem API&lt;/a&gt;. Otherwise the renderer will throw a security error for the scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4525fa5debb6dff048dfe1b8e39b408ab2399711" translate="yes" xml:space="preserve">
          <source>Registering a scheme as standard, will allow relative and absolute resources to be resolved correctly when served. Otherwise the scheme will behave like the &lt;code&gt;file&lt;/code&gt; protocol, but without the ability to resolve relative URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cafee7f453b666aa166ff252bd07ebc3c1d9142a" translate="yes" xml:space="preserve">
          <source>Registers a global shortcut of &lt;code&gt;accelerator&lt;/code&gt;. The &lt;code&gt;callback&lt;/code&gt; is called when the registered shortcut is pressed by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35599ae3c1755bbcef65e880f3546f5e5d86fcc" translate="yes" xml:space="preserve">
          <source>Registers a protocol of &lt;code&gt;scheme&lt;/code&gt; that will send a &lt;code&gt;Buffer&lt;/code&gt; as a response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b288e3fb7d42671251526b050f731a8f0c9c6a13" translate="yes" xml:space="preserve">
          <source>Registers a protocol of &lt;code&gt;scheme&lt;/code&gt; that will send a &lt;code&gt;Readable&lt;/code&gt; as a response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3dab7b85103c70db0f95e63d334445c3c51855" translate="yes" xml:space="preserve">
          <source>Registers a protocol of &lt;code&gt;scheme&lt;/code&gt; that will send a &lt;code&gt;String&lt;/code&gt; as a response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308a2acf3826b12a083ff61c836d58b7eb854331" translate="yes" xml:space="preserve">
          <source>Registers a protocol of &lt;code&gt;scheme&lt;/code&gt; that will send an HTTP request as a response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6355438297d8703ea8f592dc38637a7dd141cec0" translate="yes" xml:space="preserve">
          <source>Registers a protocol of &lt;code&gt;scheme&lt;/code&gt; that will send the file as a response. The &lt;code&gt;handler&lt;/code&gt; will be called with &lt;code&gt;handler(request, callback)&lt;/code&gt; when a &lt;code&gt;request&lt;/code&gt; is going to be created with &lt;code&gt;scheme&lt;/code&gt;. &lt;code&gt;completion&lt;/code&gt; will be called with &lt;code&gt;completion(null)&lt;/code&gt; when &lt;code&gt;scheme&lt;/code&gt; is successfully registered or &lt;code&gt;completion(error)&lt;/code&gt; when failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245eef811656a2431714b5c8a83758043ea844f9" translate="yes" xml:space="preserve">
          <source>Registers the &lt;code&gt;scheme&lt;/code&gt; as secure scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8567951f0a78751010faa2e1c53e8e20b45ba53" translate="yes" xml:space="preserve">
          <source>Registers the &lt;code&gt;scheme&lt;/code&gt; as secure, bypasses content security policy for resources, allows registering ServiceWorker and supports fetch API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a970d09a7698ae83de0c77a559ae54c267f02d" translate="yes" xml:space="preserve">
          <source>Relaunches the app when current instance exits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeaba4caa011cac6918a532f6e79aa1451f13e40" translate="yes" xml:space="preserve">
          <source>Release branches &lt;em&gt;do&lt;/em&gt; contain the correct version in their &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7adb40de6d0a75368db3171d6e1d4da989627141" translate="yes" xml:space="preserve">
          <source>Release branches are never merged back to master</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa41d59c259d95cfaded10953d5a2f8e0b38bb4" translate="yes" xml:space="preserve">
          <source>Releases</source>
          <target state="translated">Releases</target>
        </trans-unit>
        <trans-unit id="7b6964d2a2f294ee834684480cd8729910bcdbbf" translate="yes" xml:space="preserve">
          <source>Releases all locks that were created by &lt;code&gt;makeSingleInstance&lt;/code&gt;. This will allow multiple instances of the application to once again run side by side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6926d22af1651f2c470a1e97bcdb97dbc4eb46" translate="yes" xml:space="preserve">
          <source>Releasing</source>
          <target state="translated">Releasing</target>
        </trans-unit>
        <trans-unit id="b9567504c6ca6e0ebad216a90992e16a171ff874" translate="yes" xml:space="preserve">
          <source>Relevant code files can be found in &lt;code&gt;./atom/&lt;/code&gt; as well as in Brightray, found in &lt;code&gt;./brightray/browser&lt;/code&gt; and &lt;code&gt;./brightray/common&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d3ddae8636b737ee61aa96f8490996404a3c508" translate="yes" xml:space="preserve">
          <source>Reloads current page and ignores cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5e97fa935b39b76d274e23182c55b10026b74d" translate="yes" xml:space="preserve">
          <source>Reloads the current web page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65896c279cd48fcae8bff5d6a9dbed1ca9695342" translate="yes" xml:space="preserve">
          <source>Reloads the guest page and ignores cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db33b1cd6dfaa5a8b5ac5e8eeb147b5acec9d0e8" translate="yes" xml:space="preserve">
          <source>Reloads the guest page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a539893b246a62b1bc68e790cfd1554742fe28b" translate="yes" xml:space="preserve">
          <source>Remember the port number &lt;code&gt;9515&lt;/code&gt;, which will be used later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38523766ee19faa3152202ffc2b9f309e577a96d" translate="yes" xml:space="preserve">
          <source>Remote Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32f56488400a1032562ddf55e0d553c7015b5f2" translate="yes" xml:space="preserve">
          <source>Remove a Chrome extension by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a87d75d1f62e12e4c47fb5d898025e1fee4df9" translate="yes" xml:space="preserve">
          <source>Remove a DevTools extension by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c05d9b4960573d5f72bf063e932326a18854e6" translate="yes" xml:space="preserve">
          <source>Remove a extra parameter from the current set of parameters so that it will not be sent with the crash report.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ff11c263dcde3c088e538863871d851b9167ac" translate="yes" xml:space="preserve">
          <source>Remove our copies of the old Node v8 patches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7ade55814007a315723d2f3df33db3cb8f1563" translate="yes" xml:space="preserve">
          <source>Remove progress bar when progress &amp;lt; 0; Change to indeterminate mode when progress &amp;gt; 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de48b5eb7e363f562fbca192dec883404e72f335" translate="yes" xml:space="preserve">
          <source>Remove the interceptor installed for &lt;code&gt;scheme&lt;/code&gt; and restore its original handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be84b4e8b00bb85da728aba3c1e939ed03c3667d" translate="yes" xml:space="preserve">
          <source>Remove those files from &lt;code&gt;patches/v8/&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ff1af3c250bf4804e7515d67a6fdc6096bc8f6" translate="yes" xml:space="preserve">
          <source>RemoveClientCertificate</source>
          <target state="translated">RemoveClientCertificate</target>
        </trans-unit>
        <trans-unit id="f3eea37d7fdb499edb9f43f4a5b0facc6a189c5b" translate="yes" xml:space="preserve">
          <source>RemoveClientCertificate Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7610639d794efee3f91d89b7cabcc1d7e9693bb" translate="yes" xml:space="preserve">
          <source>RemovePassword</source>
          <target state="translated">RemovePassword</target>
        </trans-unit>
        <trans-unit id="e77379db0cdb0131289912d772c0a48ab33cb592" translate="yes" xml:space="preserve">
          <source>RemovePassword Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1257a7ee095d25add93a52164b9d210e2c449190" translate="yes" xml:space="preserve">
          <source>Removes a previously set extra header name. This method can be called only before first write. Trying to call it after the first write will throw an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d021ea0d5c81e124a640e8e877f1173a3b2f4b7" translate="yes" xml:space="preserve">
          <source>Removes all listeners, or those of the specified &lt;code&gt;channel&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc479d2f5c4704f2eda2daa74079d455087a3044" translate="yes" xml:space="preserve">
          <source>Removes focus from the child window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6001a13abacd5fa30a532cfea3f0eb04210623c3" translate="yes" xml:space="preserve">
          <source>Removes focus from the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4147ec72db2746a75a1577f300530efff5233d" translate="yes" xml:space="preserve">
          <source>Removes listeners of the specified &lt;code&gt;channel&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520cba612036b18a9bf0f55898bf9056553b64b9" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;NSUserDefaults&lt;/code&gt;. This can be used to restore the default or global value of a &lt;code&gt;key&lt;/code&gt; previously set with &lt;code&gt;setUserDefault&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c550812e2aa80eb376963271ac2e316a99b2832" translate="yes" xml:space="preserve">
          <source>Removes the cookies matching &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;callback&lt;/code&gt; will called with &lt;code&gt;callback()&lt;/code&gt; on complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb324aee0bdaf62a85cf80c1a2357306019eb54" translate="yes" xml:space="preserve">
          <source>Removes the specified &lt;code&gt;listener&lt;/code&gt; from the listener array for the specified &lt;code&gt;channel&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f06c2f042c46d9602cd45f2d24f143f25aef97c" translate="yes" xml:space="preserve">
          <source>Removes the specified path from DevTools workspace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1003e1cb0cbabdda24d25fb4173fb6dc32b894" translate="yes" xml:space="preserve">
          <source>Removes the subscriber with &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f850aaef1da63a4197f29d6e8b20c0ad29393ee4" translate="yes" xml:space="preserve">
          <source>Render and control the contents of a BrowserWindow instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ce00edb10cb7876e38df9fc1ee595207dc8c35" translate="yes" xml:space="preserve">
          <source>Render and control web pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f52c0d0de083fe407b6e411e94c7e08b0b7d51" translate="yes" xml:space="preserve">
          <source>Render process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72008facbad3c15c8bae1dc5a6d48d55c2181ce" translate="yes" xml:space="preserve">
          <source>Renderer</source>
          <target state="translated">Renderer</target>
        </trans-unit>
        <trans-unit id="62ee5f19f2ff2b19b013f15f7939722a9abb32e1" translate="yes" xml:space="preserve">
          <source>Renderer Process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24effdd311437c70c467c65e10d1672e26de4d31" translate="yes" xml:space="preserve">
          <source>Rendering Modes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e58a33f26427702dbc6fe526525d72c2dedb46" translate="yes" xml:space="preserve">
          <source>Repeat until finished</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50988b0c8e7a24a70a53a7e4db4b88e44a73303" translate="yes" xml:space="preserve">
          <source>Replace instances of &lt;code&gt;a/deps/v8/filename.ext&lt;/code&gt; with &lt;code&gt;a/filename.ext&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4469bba7c117edec05a5cca69c4beea0479616" translate="yes" xml:space="preserve">
          <source>Replace the old patch with the new:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67178858add815552f6e0f5d410dc5c8e03bf642" translate="yes" xml:space="preserve">
          <source>Reporting Security Issues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed53d550f98b8f0ee8133202b89fb29035df1e31" translate="yes" xml:space="preserve">
          <source>Represented File for macOS BrowserWindows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc720595ae724d464c85ca164a4381bcb761e788" translate="yes" xml:space="preserve">
          <source>Represented File for macOS Window</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Requirements</target>
        </trans-unit>
        <trans-unit id="aaf5d2de2e03219f57ad898da5a1155ef21552e0" translate="yes" xml:space="preserve">
          <source>Resizes and moves the view to the supplied bounds relative to the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a29bed7bd02e6b4b8d5aee066acee9eef8f1334" translate="yes" xml:space="preserve">
          <source>Resizes and moves the window to the supplied bounds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c533eb6e0dadf6e3fcce7971144371f986affe" translate="yes" xml:space="preserve">
          <source>Resizes and moves the window's client area (e.g. the web page) to the supplied bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76391a02fa0f4d6d6b827102a543db9a155a76c8" translate="yes" xml:space="preserve">
          <source>Resizes the window to &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859085023d05090223a47f218dd175eca7c442f4" translate="yes" xml:space="preserve">
          <source>Resizes the window's client area (e.g. the web page) to &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f38f0b268d5286a32e6ce45a81d91ebca5a57e9" translate="yes" xml:space="preserve">
          <source>Resolve any conflicts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d97bd32b4cb4cd1e7a5e9a4cef94caa0b6e055ba" translate="yes" xml:space="preserve">
          <source>Resolve merge conflicts in each file encountered, then:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388e3381f2bfc150f0df31d6b4a6f8164f942b24" translate="yes" xml:space="preserve">
          <source>Resolves the proxy information for &lt;code&gt;url&lt;/code&gt;. The &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(proxy)&lt;/code&gt; when the request is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8d86f00439228d4dfc8d370cdf4cd2489dd84f" translate="yes" xml:space="preserve">
          <source>Resolves the shortcut link at &lt;code&gt;shortcutPath&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72e78895c7162662d891ce37735e60f211c5a09" translate="yes" xml:space="preserve">
          <source>Resolving a Bug Report</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838f2922cbe7154ee6fcd54ca307e7934456e101" translate="yes" xml:space="preserve">
          <source>Resources will be loaded from this &lt;code&gt;scheme&lt;/code&gt; regardless of the current page's Content Security Policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba7a3029fcf748633dabaef75f8b46cc45d9bec4" translate="yes" xml:space="preserve">
          <source>Restarts the app and installs the update after it has been downloaded. It should only be called after &lt;code&gt;update-downloaded&lt;/code&gt; has been emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e770b92b955525e9969ceddbe9b1f80e9bdde11c" translate="yes" xml:space="preserve">
          <source>Restores the window from minimized state to its previous state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1b19445e959832b91867b8753037d7237774a5" translate="yes" xml:space="preserve">
          <source>Results in a hidden title bar and a full size content window, yet the title bar still has the standard window controls (&amp;ldquo;traffic lights&amp;rdquo;) in the top left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e086f5aca6cd9ada243f30b3fa901ee5229f35" translate="yes" xml:space="preserve">
          <source>Results in a hidden title bar with an alternative look where the traffic light buttons are slightly more inset from the window edge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45958d46f82710b1c12fe8709efe0a373f2c7fb5" translate="yes" xml:space="preserve">
          <source>Resumes the download that has been paused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c721982a46543497da67b95949526849c498f45e" translate="yes" xml:space="preserve">
          <source>Retrieve information about screen size, displays, cursor position, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d9ab43bdb81f58adfb61a1262e3e6f91e13117" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; - The window to which this web page belongs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15fabae02b7074408b9f5975a48e7b0555be9509" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;browser-window-proxy&quot;&gt;&lt;code&gt;BrowserWindowProxy&lt;/code&gt;&lt;/a&gt; - Creates a new window and returns an instance of &lt;code&gt;BrowserWindowProxy&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26c95a1c5874b2028c8820a34b3ce1ac24ad0e4" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;client-request&quot;&gt;&lt;code&gt;ClientRequest&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c04183f820c416e665555da3947de195d283e12" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;native-image&quot;&gt;&lt;code&gt;NativeImage&lt;/code&gt;&lt;/a&gt; - The image content in the clipboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06cbfc7db093be3abb86232eb9e70ae24657b544" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/cpu-usage&quot;&gt;&lt;code&gt;CPUUsage&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1b336f77e34e58ba3dad45d3fd49531da49ce8" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/crash-report&quot;&gt;&lt;code&gt;CrashReport&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78dbd8fe8e9c362541846b2ba872ca764841eac6" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/crash-report&quot;&gt;&lt;code&gt;CrashReport[]&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67fcfe4d08d29bdd5f271de21f37c60ace7911f3" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt; - The display nearest the specified point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6d7af8a706cd7935a4dced7578c3e9293dc7a0" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt; - The display that most closely intersects the provided bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79b4dbc055428e6fef468976ea3ed39e7d56ae4" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt; - The primary display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627b28bc87006e731c3ae948256eac1724bf30a2" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/display&quot;&gt;&lt;code&gt;Display[]&lt;/code&gt;&lt;/a&gt; - An array of displays that are currently available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df53a870f0b4ca983446d77291b8588eb0814612" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/gpu-feature-status&quot;&gt;&lt;code&gt;GPUFeatureStatus&lt;/code&gt;&lt;/a&gt; - The Graphics Feature Status from &lt;code&gt;chrome://gpu/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e88ae714728a8c15d720a3a5e493de9c19ba47b" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/io-counters&quot;&gt;&lt;code&gt;IOCounters&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf6bb30577bb06ed5c3330ab246eaa499fcaa65" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7666cf5ae9f43e45bfa18b53e37af490671106b" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/printer-info&quot;&gt;&lt;code&gt;PrinterInfo[]&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58188f1fb1b35d46eb786a1f0ade14ac22542469" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/process-metric&quot;&gt;&lt;code&gt;ProcessMetric[]&lt;/code&gt;&lt;/a&gt;: Array of &lt;code&gt;ProcessMetric&lt;/code&gt; objects that correspond to memory and cpu usage statistics of all the processes associated with the app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea2f360440f3e5232aefe4839692da181159c7e" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/rectangle&quot;&gt;&lt;code&gt;Rectangle&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7041456528603e9baf62ae56965c05295b891b8c" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/shortcut-details&quot;&gt;&lt;code&gt;ShortcutDetails&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaecd5cb81749c2f9b8a1503b6173ab6f3972c5a" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/size&quot;&gt;&lt;code&gt;Size&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab59468727170b519ed97fe8aac9a9e85759d90d" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;web-contents&quot;&gt;&lt;code&gt;WebContents&lt;/code&gt;&lt;/a&gt; - The web contents associated with this &lt;code&gt;webview&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ceddc464e7cbac01edbd6ffc1e765f72f7e7cf" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;web-contents&quot;&gt;&lt;code&gt;WebContents&lt;/code&gt;&lt;/a&gt; - The web contents of this web page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44019f5f8a7801094423b09e8a3a220db82d9c65" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66f1d328abd0213ae86503ae66114bf075870a4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; if &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa969540.aspx&quot;&gt;DWM composition&lt;/a&gt; (Aero Glass) is enabled, and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eddb1d0cde650dabc94d55ac605d7862bd2fd7b2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; if Chrome's accessibility support is enabled, &lt;code&gt;false&lt;/code&gt; otherwise. This API will return &lt;code&gt;true&lt;/code&gt; if the use of assistive technologies, such as screen readers, has been detected. See &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;https://www.chromium.org/developers/design-documents/accessibility&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b005d7c744c6c4e28d289d13d9d710c7e4ce60" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; if Electron has finished initializing, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e84a14f88c167fa0c11231314bf2ab764bbf9e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; if an inverted color scheme, such as a high contrast theme, is active, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa1c10d76bc9979efce1cb83baa7ac7a0172008" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; depending on whether the message is hooked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df74cc99061d4efb44d82bceeda6b3c08c119fa6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - If &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled returns whether it is currently painting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a67f7eb837af38338b2e144a9a3c16bebd2b40" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Indicates whether &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095a7d39ae770882fc3333130b60c9e57ccf5fdf" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether DevTools window of guest page is focused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3bc1dbf33560145d88bd66c3848ddbcaad5136e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether a debugger is attached to the &lt;code&gt;webContents&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60454485cb763c79ecb29cd75c8ae8b4cfd602e9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether an application was available to open the URL. If callback is specified, always returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a59e84b71d19a10fae9556f7617146e63f6f33" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether current window is a modal window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e82e302084f1945bf1b562fb00a4c4f27397b0a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether guest page has a DevTools window attached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ca72a204cc854d271681f956096c95186a6f1e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether guest page has been muted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644a28cf45c8c5f88ae15b19441dbec2f5c23b68" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether guest page is still loading resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0c8933fd3d1e24196067946f7ca0871d7dc508" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether menu bar automatically hides itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54569c175d5b1690d6ec7b3875012a8aa5a7ec32" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether or not desktop notifications are supported on the current system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeed3399bff793720cd6a578f635a5e98825e0cc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether reports should be submitted to the server. Set through the &lt;code&gt;start&lt;/code&gt; method or &lt;code&gt;setUploadToServer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42db401a87c3e67f4b4675235fa1ef93bb8b01a2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the Swipe between pages setting is on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c599075dd1514e5934f6b2025fa139af2b62b85" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the application is currently running from the systems Application folder. Use in combination with &lt;code&gt;app.moveToApplicationsFolder()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28622861106f7d332685e3ec0f8f6a2c65ad0fe1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the browser can go back to previous web page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5b9e857548d4a6a63b33f93606a48e621bb563" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the browser can go forward to next web page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8068f982346f159bcc0d6fe32560dc80b01005a7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the buttons were added successfully</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade0f7d4747dbbb1cc005e8dec5b97932e3e1c15" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the call succeeded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc2d967a14fcfbaaf2a2596b38c72bf8e55fae6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the clipboard supports the specified &lt;code&gt;format&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e216449fe3b929d7976f30e880c3dfa81631de" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the corresponding &lt;code&gt;powerSaveBlocker&lt;/code&gt; has started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81539845285a1bdc08a80e6bd12c49f7aab27d45" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the current desktop environment is Unity launcher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30485c6a3426ec639c178460c348f9678c644407" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the devtools is opened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1227356747c3aacaa0e9e71e6b9c20c8e6bbe73d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the devtools view is focused .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7c71e6ddfab751d09365d853231c3304550c1a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the dock icon is visible. The &lt;code&gt;app.dock.show()&lt;/code&gt; call is asynchronous so this method might not return true immediately after that call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7abb95218ffaec4bde3f82f5c6a6423b7afc3516" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the download can resume.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c793d7c4340c7295e510a00bc01433889625ca62" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the download has user gesture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac16d8e14a362aa982dea0239eb3ef5f6ed6b1f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the download is paused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dca539dc7a99dfef117dd54f360f1f9cacb044f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the guest page can go back.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f067d13af8b8e1fd13b3e6a0bea6a917400aa2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the guest page can go forward.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1e029590b8a08576f8346438ca04467349b494" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the guest page can go to &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9c25780779b20eba38fbfc4fd62edac1d5648f0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the guest page is waiting for a first-response for the main resource of the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbf785d4ad7ff81db1a6214e9e3bc115cb1e11d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the image is a template image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a78a15778a6809f0f1f581093b951abd6a57a8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the image is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6edfe3e2cce5b013e8f0597b73671816c4769431" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the item was successfully moved to the trash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca98b5ad29ab951220a6b2d64e08604840370af4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the item was successfully opened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0bdcdefa43597c2b8a33361c3a507ee11ccfdd3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the item was successfully shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d11eacb6a5c62481a433f7d2f3519b24c6197b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the main frame (and not just iframes or frames within it) is still loading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d204f44f197756b21f122c8f9ff6a0d9f042a9f5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the maximize/zoom window button toggles fullscreen mode or maximizes the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0c95ab80e9db56ac4911298cad85e59b71266b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the menu bar is visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83a22ecb62ba3c66a58eae15fbf394645b316e1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the move was successful. Please note that if the move is successful your application will quit and relaunch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b485d0888c71547a2bc81ce130affaf6622dafe" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the renderer process has crashed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da90a079a87023039c2b945d7e25b35978dcfe87" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the shortcut was created successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335494b7b8e38c2b8cd312a74e7b24fe62f413a9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the system is in Dark Mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fffa04c97c3085f330e3227d7f376784c2041719" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the tray icon is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b10bbcf8e7afba8569937cb813851310703f44" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the view is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1682729058680c77a7616a06efe3a73806f5863d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the web page can go to &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608d4893071facc33a7785c388d502f7a03cbec0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the web page is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa158dbea98b79d01dc3ddcb4e3c6d8f5f99ab2f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the web page is focused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094ea089985f7ecdb669567954ffc922634ac107" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the web page is waiting for a first-response from the main resource of the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912c7d5058713bf14a990f4f58a8df13d257d64e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window can be manually closed by user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1728226f9fded7e143f8ea3d4a4d2b4e846b7c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window can be manually maximized by user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d6190fff60ed2b6a2e611f6e8599922d67de54" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window can be manually minimized by user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341efd0b4a6e662ffc1469c156f5cac351684191" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window can be manually resized by user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c7c0fb9c75976eca0e5c125a5b928cf998514e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window can be moved by user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a07749d0aa9b3b59f6a47913714e27d11ee036" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window has a shadow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17772d3cd8f295e146457d80f53e0c493f30934d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window is always on top of other windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1dda7c411d32153c13317aa1e1bdbcc7ea9346f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eaaf1b8ba96086910ecda86d86328099c10ec37" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window is focused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8659fa6b054a43983acb35f45207495991fcfb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window is in fullscreen mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba483904912a4b27b8c6f7df84665c072c2cf2a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window is in kiosk mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbfcf3fce5a796acfc12a4ab63d39e9d80bf507c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window is in simple (pre-Lion) fullscreen mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6605aa63e704b0c62fcd5bbe5dfdbb53fc414327" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window is maximized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f69437d833ae30b1369d75b1a6272d6593313f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window is minimized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c216c6f8e4065bf9f522951657f1f4b4ba1c0cc0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window is visible on all workspaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df336163ad8a5cecad1037492589b83dd8c71277" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window is visible to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9f60bddbd84d7aab0860903b83bd4de698e302" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window's document has been edited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff13f9ab79810fee9a68173e5d851b87ac5cb7c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether this application has registered &lt;code&gt;accelerator&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e2576afdafc879d4c18ca55e57fa8570adcbbb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether this page has been muted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c266032fc92030a33c7f44770037ef9ea7c3b0e6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether web page is still loading resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e909b4350e68f9b3aadd683aca89c2cb08597b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - true if the process of saving page has been initiated successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b63d925c4d2cc176465cfdab1331981aa910cf6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt;, whether a user can make a payment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7407ab9f6706dc3c49ec7eec10137f2a4731d50f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9f5a0d7f98033eb65f4d16287e5ae20d472df6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserView | null&lt;/code&gt; - The BrowserView that owns the given &lt;code&gt;webContents&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; if the contents are not owned by a BrowserView.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aeb7b3db18bf1a8f2bfd06c567c4c18d1eaabef" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserView | null&lt;/code&gt; - an attached BrowserView. Returns &lt;code&gt;null&lt;/code&gt; if none is attached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e4e16b51837d7895977b7653fb565226e3b1af" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserView&lt;/code&gt; - The view with the given &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d704ad7b5de2c9a6bbe00fa57499ce82aefa148" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserView[]&lt;/code&gt; - An array of all opened BrowserViews.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d4f2179a2db2990d5c2d89ee55196909288d29" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserWindow | null&lt;/code&gt; - The window that owns the given &lt;code&gt;browserView&lt;/code&gt;. If the given view is not attached to any window, returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d125f268cc802b239cb3c04ced878166d6cae60" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserWindow&lt;/code&gt; - The parent window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66af0e2e10e1d3d3129657f99cf4be1b53ccc48b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserWindow&lt;/code&gt; - The window that is focused in this application, otherwise returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8749ee110b773362dee1e14f4ed1bb3a389dbd85" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserWindow&lt;/code&gt; - The window that owns the given &lt;code&gt;webContents&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa92ae0923be19806a14f391fd778bb82de7029f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserWindow&lt;/code&gt; - The window with the given &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d5560a2a68d8f1b447347c850ed347030fc301" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserWindow[]&lt;/code&gt; - All child windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed6af64913af4fe92fd223b0c64703ab49848db" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserWindow[]&lt;/code&gt; - An array of all opened browser windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552e7aa7fa91e71c01b48a584c87dd631b8b20ad" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Buffer&lt;/code&gt; - A &lt;a href=&quot;https://nodejs.org/api/buffer.html#buffer_class_buffer&quot;&gt;Buffer&lt;/a&gt; that contains a copy of the image's raw bitmap pixel data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03633cf9734f0c753213dd8c2ace1f2916cd3ae" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Buffer&lt;/code&gt; - A &lt;a href=&quot;https://nodejs.org/api/buffer.html#buffer_class_buffer&quot;&gt;Buffer&lt;/a&gt; that contains the image's &lt;code&gt;JPEG&lt;/code&gt; encoded data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1941fce7f93d8b153e5671dbd4abc2ae41f76d51" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Buffer&lt;/code&gt; - A &lt;a href=&quot;https://nodejs.org/api/buffer.html#buffer_class_buffer&quot;&gt;Buffer&lt;/a&gt; that contains the image's &lt;code&gt;PNG&lt;/code&gt; encoded data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aab9da119f507a3c43d72c3ca40f868ad8be74b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Buffer&lt;/code&gt; - A &lt;a href=&quot;https://nodejs.org/api/buffer.html#buffer_class_buffer&quot;&gt;Buffer&lt;/a&gt; that contains the image's raw bitmap pixel data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af87c405260f3c78ffadc67649a31e69ef5c6f74" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Buffer&lt;/code&gt; - A &lt;a href=&quot;https://nodejs.org/api/buffer.html#buffer_class_buffer&quot;&gt;Buffer&lt;/a&gt; that stores C pointer to underlying native handle of the image. On macOS, a pointer to &lt;code&gt;NSImage&lt;/code&gt; instance would be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7df25ed934a1b0bd2e7d35690b17b00ef385414" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Buffer&lt;/code&gt; - Reads &lt;code&gt;format&lt;/code&gt; type from the clipboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6ab53b75d59771d8e6e8f090c97266edc2918c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Buffer&lt;/code&gt; - The platform-specific handle of the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021ebb0ff0554814ee373c744760d5500402cbc1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Double&lt;/code&gt; - Number of seconds since the UNIX epoch when the download was started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5430abe928d3cce51a147008f509f34138bc565" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Float&lt;/code&gt; - The image's aspect ratio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8fbdb067a79f0cb13e32a951922ed7851280fc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Function&lt;/code&gt; - This function &lt;strong&gt;must&lt;/strong&gt; be called once you have finished accessing the security scoped file. If you do not remember to stop accessing the bookmark, &lt;a href=&quot;https://developer.apple.com/reference/foundation/nsurl/1417051-startaccessingsecurityscopedreso?language=objc&quot;&gt;kernel resources will be leaked&lt;/a&gt; and your app will lose its ability to reach outside the sandbox completely, until your app is restarted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace51d88523149566c51b808fbfae8a3651edd00" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer&lt;/code&gt; - If &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled returns the current frame rate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae2d39bc0f656cc8c12d72d68783e3cda66888e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer&lt;/code&gt; - The &lt;code&gt;pid&lt;/code&gt; of the associated renderer process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5561afafa71f8771da66c95cb0384224f9047806" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer&lt;/code&gt; - The blocker ID that is assigned to this power blocker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4fd7d85c96ad6a94897f8572d91a0a6c9a5571" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer&lt;/code&gt; - The current value displayed in the counter badge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57c1870bc8e6ce9964823196ff1d6f5ba012b7a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer&lt;/code&gt; - The height of the menu bar in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16431ca648a763c5222773de29ff0af7c1735231" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer&lt;/code&gt; - The received bytes of the download item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c55279aa4201ebe94ef68583c9414b2d706b139" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer&lt;/code&gt; - The request id used for the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a265e9a3d9ec5cd9f336be0c5d446d14cd2a0638" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer&lt;/code&gt; - The total size in bytes of the download item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9afe8a7a9ec877f091af13a627490dfbf0b7152d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer&lt;/code&gt; an ID representing the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba0d8f92dbf8fec9290b6bc28db5f530d60c9fe" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer&lt;/code&gt;, the index of the clicked button, if a callback is provided it returns undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3f05e3ffcaaf35b5fe84561c5de60c0bda1db0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer[]&lt;/code&gt; - Contains the window's client area's width and height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e3e31b345d1f5d57005f115e9a939416554cbb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer[]&lt;/code&gt; - Contains the window's current position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60bb0353967c6e8a1ec493d455bf5e5edc5dfd74" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer[]&lt;/code&gt; - Contains the window's maximum width and height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37643b65f7bfeca106927a104650e41ea399ce03" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer[]&lt;/code&gt; - Contains the window's minimum width and height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca5e920300260f220f9c24d40339b52b67befd31" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer[]&lt;/code&gt; - Contains the window's width and height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50aee53b6c4276745ab6c90b5cd9528605695abd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Menu | null&lt;/code&gt; - The application menu, if set, or &lt;code&gt;null&lt;/code&gt;, if not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2110b941953c31e37201eed150997ccc6061923d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Menu&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c73b708c454c000ef59ce3cf36debae6eada96a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;MenuItem&lt;/code&gt; the item with the specified &lt;code&gt;id&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeaddd7534e0a34cd76f9dd45cd2047d9a2c8920" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NativeImage&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16f36832e07d3f8547c540d3c79ac34f72bcf30" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NativeImage&lt;/code&gt; - The cropped image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="089ea04a64a9bf0269289e627e1e975cf092dcbd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NativeImage&lt;/code&gt; - The resized image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae182cf5cb32381b2f53f22105de833cc9df313" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Number&lt;/code&gt; - The current zoom factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e714fb74d17110fc412d122732cd303811a76e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Number&lt;/code&gt; - The current zoom level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc652ac72f541d0b4162a946667537fb08802f9c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Number&lt;/code&gt; - between 0.0 (fully transparent) and 1.0 (fully opaque)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c518d0f008a480d7f9ddb3c2a7d7c5e41df7963" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Object&lt;/code&gt; - The keys are the extension names and each value is an Object containing &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;version&lt;/code&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7993fb666a558773a8807e88305fbb955b8034cb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Object&lt;/code&gt; - The value of a previously set extra header name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549ffa4db5a4c2511c0986809af90bc5bb6d240c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Object&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1bafece679483ef109e87abcb0065d5bbec7f9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Promise&lt;/code&gt; - A promise that resolves with the result of the executed code or is rejected if the result of the code is a rejected promise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2960ae11aef49d53150ca5ae4333cdea45a48906" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Session&lt;/code&gt; - A session instance from &lt;code&gt;partition&lt;/code&gt; string. When there is an existing &lt;code&gt;Session&lt;/code&gt; with the same &lt;code&gt;partition&lt;/code&gt;, it will be returned; otherwise a new &lt;code&gt;Session&lt;/code&gt; instance will be created with &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114f794825dfb425dd64688c907740b9bb441ffa" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - A path to a special directory or file associated with &lt;code&gt;name&lt;/code&gt;. On failure an &lt;code&gt;Error&lt;/code&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c453588becf3b452bd50be2c853e6b1fce617a0a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - ETag header value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6472f92e065ba69b2aa8d979e570be939ab2a619" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - Last-Modified header value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc95a3d6b55b0241dfaf3b172b2852d21238fad" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - Reads &lt;code&gt;format&lt;/code&gt; type from the clipboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49b1d0e0f52f3fef733b19e92aae6a3a294b153" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - Returns the WebRTC IP Handling Policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e25201adf485d95c2cbdee5554f6de7e38356a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The Content-Disposition field from the response header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0289c73a587ba06adedef95a01f01f0741cd6d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The URL of guest page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b21b44fa16d2bd09c503272df9ee65acf73e3d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The URL of the current web page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cfef0bfdc53067c4f67c62ed015cf8ecdd7b0b9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The badge string of the dock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c889a4e3a831704d4487d2de9d1f433cd1ec4023" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The content in the clipboard as RTF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96615497815bb1e95f99cc154bdc022069bfcccf" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The content in the clipboard as markup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f0f60fa2f6011527dc2e9561caf3ed71c1e295" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The content in the clipboard as plain text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e6ec423fd1e337f1f1ae06affb9dd72cda4caf6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The current application directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2270d6cd03d2247e440510be9d9b4dcff4c708e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The current application locale. Possible return values are documented &lt;a href=&quot;locales&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae485cc03e14657d711b26e299aaae0d0571db7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The current application's name, which is the name in the application's &lt;code&gt;package.json&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a9d6a8d737e834b40bd7d30e90924715831e4a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The current state. Can be &lt;code&gt;progressing&lt;/code&gt;, &lt;code&gt;completed&lt;/code&gt;, &lt;code&gt;cancelled&lt;/code&gt; or &lt;code&gt;interrupted&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c46d83249473e8daae49b662285edd08fd977d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The current update feed URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a13e258316d55c3eb3fb1669a06534857a2e6c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The data URL of the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98ecf1de329777d5d40e1469a501bc1ef9dc9e6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The file name of the download item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2578578b72607349dd3b1ce2a7d33b017778962" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The files mime type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e465f498d1c1038a629daa20e18747d8c01c463" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The origin url where the item is downloaded from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b65bf32c5ab839ea3ad50dfba29f8031901c19e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The pathname of the file the window represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3776a5075fda56f67c5ba1eaa2fed5af0086a0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The save path of the download item. This will be either the path set via &lt;code&gt;downloadItem.setSavePath(path)&lt;/code&gt; or the path selected from the shown save dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4627c797e44c85c91c80e565c749871d165b3f71" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The system color setting in RGB hexadecimal form (&lt;code&gt;#ABCDEF&lt;/code&gt;). See the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/ms724371(v=vs.85).aspx&quot;&gt;Windows docs&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc103b346be2c62ef187c318a93915ca0f8b361" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The text on the find pasteboard. This method uses synchronous IPC when called from the renderer process. The cached value is reread from the find pasteboard whenever the application is activated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a482c7b713f4c1fb607eb34e0065c6a674abffed" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The title of guest page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e39454287dd8a3d79da35f503001c7f3e60ecee" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The title of the current web page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8bad9bdeae11693611970b837962f72e2fc9dae" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The title of the native window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882b91c18a9b36b8ea09851936c89db27af526e8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The type of the currently running activity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="048b0c177e928ead29ac67c1d1ff64555b0a5a6f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The user agent for guest page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e6e1eb06d7d5cc9f39d8b7269ce4635781175b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The user agent for this session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b69dedc72d008512ab87276ebf6d31b4f3d096" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The user agent for this web page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2463a8b34e81637b22f3f7f75981a7385d6a4643" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The users current system wide accent color preference in RGBA hexadecimal form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f36897a755c5aded221fa8cc0368b23f6f27136" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The version of the loaded application. If no version is found in the application's &lt;code&gt;package.json&lt;/code&gt; file, the version of the current bundle or executable is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31694c0110b171ba5391158b3f43cd58ede0fc72" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt;, the path of the file chosen by the user, if a callback is provided it returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0db62cb2c4f123b8d855f8c9b70e6ceff6773ed" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt;, the path to the receipt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e73221f969b7cae7ec948cf3ba4ee9d5bbf996" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[]&lt;/code&gt; - An array of supported formats for the clipboard &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e13a4ef5289d5b06e288b829cf2d5ed471f74b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[]&lt;/code&gt; - The complete url chain of the item including any redirects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923e64e60ef25f4e78822b1cd693b0873fa2d0b8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[]&lt;/code&gt; an array of paths to preload scripts that have been registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae73c2c98331612dc6c366ce51f6f8429956a79" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[]&lt;/code&gt;, an array of file paths chosen by the user, if the callback is provided it returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6c7a586b56f17a276ba312c2721c92e1c77ba9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;WebContents&lt;/code&gt; - A WebContents instance with the given ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a68d5585df401c31a588c98855e8e5fafec74456" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;WebContents&lt;/code&gt; - The web contents that is focused in this application, otherwise returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c2bd07476b13cc89053e1c18dcf742542b3eef1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;WebContents[]&lt;/code&gt; - An array of all &lt;code&gt;WebContents&lt;/code&gt; instances. This will contain web contents for all windows, webviews, opened devtools, and devtools extension background pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1902ac569a2312f8815b290037988cdb744757be" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;any&lt;/code&gt; - The global variable of &lt;code&gt;name&lt;/code&gt; (e.g. &lt;code&gt;global[name]&lt;/code&gt;) in the main process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8401e8866b40f51fbb6d7e2633e6ecafe4c3465" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;any&lt;/code&gt; - The object returned by &lt;code&gt;require(module)&lt;/code&gt; in the main process. Modules specified by their relative path will resolve relative to the entrypoint of the main process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c522e66dfd87ddf28ee211d7e7036eadfb473e12" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;any&lt;/code&gt; - The value of &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;NSUserDefaults&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e5a88f4417c1e0d0af3bc1659070da4a5ca98b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;any&lt;/code&gt; - The value sent back by the &lt;a href=&quot;ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee052be19e00638713aaaa08413c76413615780" translate="yes" xml:space="preserve">
          <source>Returns all uploaded crash reports. Each report contains the date and uploaded ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5ec4cbb83869df3cc77a808f126fcd0460ed29" translate="yes" xml:space="preserve">
          <source>Returns an Object containing &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;url&lt;/code&gt; keys representing the bookmark in the clipboard. The &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;url&lt;/code&gt; values will be empty strings when the bookmark is unavailable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e581a2f5b9be500264cea39b4d29a52d661ab229" translate="yes" xml:space="preserve">
          <source>Returns an object describing usage information of Blink's internal memory caches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23bd54100e425b9c76fe9a1f52022c20ae112ef" translate="yes" xml:space="preserve">
          <source>Returns an object giving memory usage statistics about the current process. Note that all statistics are reported in Kilobytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27c5643d974431418e69f225c656a0234dd61c8" translate="yes" xml:space="preserve">
          <source>Returns an object giving memory usage statistics about the entire system. Note that all statistics are reported in Kilobytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8057890e22b9f8b67929c5723eef8eca4e93b25" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;webContents&lt;/code&gt; that sent the message, you can call &lt;code&gt;event.sender.send&lt;/code&gt; to reply to the asynchronous message, see &lt;a href=&quot;web-contents#webcontentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6880d91bc5cf27aec068ed67155ffa4d3e91110" translate="yes" xml:space="preserve">
          <source>Returns the date and ID of the last crash report. If no crash reports have been sent or the crash reporter has not been started, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da92a267240aa12670fc2f0602964c5acbaa063" translate="yes" xml:space="preserve">
          <source>Returns the visible URL. Writing to this attribute initiates top-level navigation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="47dcc27d6e87ece8baebe7e3877a261a5467093d" translate="yes" xml:space="preserve">
          <source>Roles</source>
          <target state="translated">Roles</target>
        </trans-unit>
        <trans-unit id="aadecd5653a198be5411a0643f9e5b01ef6f2d10" translate="yes" xml:space="preserve">
          <source>Roles allow menu items to have predefined behaviors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd5233f6c25112a7ae3ff91e4acc195f899f25f" translate="yes" xml:space="preserve">
          <source>Romanian</source>
          <target state="translated">Romanian</target>
        </trans-unit>
        <trans-unit id="40929586610053a634b9e4f61c5b20f26870e295" translate="yes" xml:space="preserve">
          <source>Romansh</source>
          <target state="translated">Romansh</target>
        </trans-unit>
        <trans-unit id="b8a5fd736772c4a313c4de796bec65f8ab2effb0" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git add your_changed_file.cc&lt;/code&gt;, and commit your change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e3f8f0f74f3021861b7f6085e5662f13aa5f041" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git add your_changed_file.cc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbeb0a5cc782bcd533b4b0a06f1b19fe2ee18f6" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git-clang-format&lt;/code&gt;, and you will probably see modifications in &lt;code&gt;your_changed_file.cc&lt;/code&gt;, these modifications are generated from &lt;code&gt;clang-format&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47d63fed4fd82e91407d1c5b1f60dbed9cec7ab" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;npm run prepare-release -- --notesOnly&lt;/code&gt; to view auto generated release notes. The notes generated should help you determine if this is a major, minor, patch, or beta version change. Read the &lt;a href=&quot;../tutorial/electron-versioning#semver&quot;&gt;Version Change Rules&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec56dd036ed12028c3a4befb8d157c78271cd84" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;script/update&lt;/code&gt; to get the latest libcc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc04fc73bd9e28cc2dbb2e34bc699872e727cb1" translate="yes" xml:space="preserve">
          <source>Run the build when all patches can be applied without errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81da03623f4678b1d0a88cb300ef073313365b4" translate="yes" xml:space="preserve">
          <source>Run the example inside Electron: &lt;code&gt;./node_modules/.bin/electron touchbar.js&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03eea6fe68d08c23ee051601b792e86069c57548" translate="yes" xml:space="preserve">
          <source>Run the prepare-release script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f5eadb085530c0a2c8afe8a1bc775ad08cccca" translate="yes" xml:space="preserve">
          <source>Run the update script with the --xcode argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8a1b5cd9e545a0e99ce044671aa84c2328b9f2" translate="yes" xml:space="preserve">
          <source>Running Your App</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce1fe4a10500dae85aef09840368cfcd8ecbdc6" translate="yes" xml:space="preserve">
          <source>Running the above example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ad93cbebf587ac46ab0ef1e3f24139ddd3f535" translate="yes" xml:space="preserve">
          <source>Russian</source>
          <target state="translated">Russian</target>
        </trans-unit>
        <trans-unit id="7c2ec64b2c38d12b505b5fd75ee288dceedd8a1b" translate="yes" xml:space="preserve">
          <source>SHA - &lt;a href=&quot;https://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf&quot;&gt;FIPS 180-4&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9546a799e70aa601e431551d80f31b5bfd8b9df8" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;protocol.registerStreamProtocol&lt;/code&gt;, except that it replaces an existing protocol handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dfdbade7002a2d69f55f64ad452636f5c27b3d0" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;subscribeNotification&lt;/code&gt;, but uses &lt;code&gt;NSNotificationCenter&lt;/code&gt; for local defaults. This is necessary for events such as &lt;code&gt;NSUserDefaultsDidChangeNotification&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd0d52364d10f3bc81d47694637bdfd654e86fc" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;unsubscribeNotification&lt;/code&gt;, but removes the subscriber from &lt;code&gt;NSNotificationCenter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f78a3edab8bc49aa9671cccc476cba80b28d93" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;webContents.capturePage([rect, ]callback)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636f1e73cded8b523350006257f0bb65497d6eea" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;webContents.loadFile&lt;/code&gt;, &lt;code&gt;filePath&lt;/code&gt; should be a path to an HTML file relative to the root of your application. See the &lt;code&gt;webContents&lt;/code&gt; docs for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0190a18aa72702f8b45e07e46046dbb9c99de065" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;webContents.loadURL(url[, options])&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b95b7d5f77471ef8f73b6ed8179b6cf1dedd03" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;webContents.reload&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129890bda53ef7ad60257818882912fbe53db967" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;webContents.showDefinitionForSelection()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc0724359a61b01f6c24fc544e7ae4f41c3c9b2" translate="yes" xml:space="preserve">
          <source>Save the above file to your computer as &lt;code&gt;touchbar.js&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c959d69ea6f6fb685ee79d3bafa0d911a7d6283" translate="yes" xml:space="preserve">
          <source>Save the file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58df2ed823cdd4690f8dacf52369ef08b8917119" translate="yes" xml:space="preserve">
          <source>Schedules a full repaint of the window this web contents is in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80af8419edd6924a4eb2492086ded3cee61c310" translate="yes" xml:space="preserve">
          <source>Scots Gaelic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b25ac9ab334d5c9ee9e642ca52b0327da6ec72" translate="yes" xml:space="preserve">
          <source>ScrubberItem</source>
          <target state="translated">ScrubberItem</target>
        </trans-unit>
        <trans-unit id="c1ec744a093e0c733e3fb2cec799ce791643a673" translate="yes" xml:space="preserve">
          <source>ScrubberItem Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329e5602e2833d8f93a85c833b53d05b708870d0" translate="yes" xml:space="preserve">
          <source>Second, the callbacks passed to the main process will persist until the main process garbage-collects them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4758bf3cf3612cd75e13622feee413991c1858ca" translate="yes" xml:space="preserve">
          <source>Secure schemes do not trigger mixed content warnings. For example, &lt;code&gt;https&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt; are secure schemes because they cannot be corrupted by active network attackers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="c1affc9c83b3714d09711172b7a83267645eb627" translate="yes" xml:space="preserve">
          <source>Security Checklist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c4cfbbeab885f5c9f74d1d9f315d17e5af7bbd" translate="yes" xml:space="preserve">
          <source>Security, Native Capabilities, and Your Responsibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9833dcb00345ddae5cbd773addffd50c815f9400" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;build-system-overview#tests&quot;&gt;Build System Overview: Tests&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58813d3c3b3053b8fb6a1701995d091905cb0d3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;coding-style&quot;&gt;coding style&lt;/a&gt; for more information about best practice when modifying code in different parts of the project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05ce16ce3715b5f1b58051e476bd537c72d85c8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;development/readme&quot;&gt;development/README.md&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d7c8150c6ce0f7a93108b05f8e9a1539cd2800" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/mojo/README.md&quot;&gt;https://chromium.googlesource.com/chromium/src/+/master/mojo/README.md&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2cc1d5f3de0bc2fee791afea5fb8f6ee059a4d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://conventionalcommits.org&quot;&gt;conventionalcommits.org&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e684b0d18691b980d96ed18ab327fdd2feb3a0be" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://stackoverflow.com/help/mcve&quot;&gt;How to create a Minimal, Complete, and Verifiable example&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd3b3463460c3f2e1881313a2e4f8363afe741d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ipc-main&quot;&gt;ipcMain&lt;/a&gt; for code examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736407e10a23c2fc73aff20a0f1192ef6e57d6ae" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;menu&quot;&gt;&lt;code&gt;Menu&lt;/code&gt;&lt;/a&gt; for examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dffc89e4cb43c122a0e7f1cec023eed2ef4220d4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;recent-documents&quot;&gt;Recent Documents documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7fd10b14d2e1a7a21087fc165dfa2018ff0174" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;upgrading-node&quot;&gt;Upgrading Node&lt;/a&gt; for instructions on this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d0afa43609910152eee14c8ad3286150838366" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;web-contents#contentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt; for examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfe31bd9dbfddfa95546d8b0d8d5a19fa9f8e6b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;web-contents#contentssendinputeventevent&quot;&gt;webContents.sendInputEvent&lt;/a&gt; for detailed description of &lt;code&gt;event&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337be7104bf5a3851c42003b32034e4f98ea2f7b" translate="yes" xml:space="preserve">
          <source>See all of the current parameters being passed to the crash reporter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29007005b40bf1fc4ec2d10c7139e89b8170472" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;chromium-development&quot;&gt;Chromium Development&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ef5af520d1a7d088abd3d02633745691f5398b" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;tutorial/using-native-node-modules&quot;&gt;Using Native Node Modules&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab749aa774f584827785b49b4d1861c7f37386f" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;v8-development&quot;&gt;V8 Development&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb76eeea4869bec20abc0606e7a8d45239249d90" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#main-process&quot;&gt;main process&lt;/a&gt;, &lt;a href=&quot;#renderer-process&quot;&gt;renderer process&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5527483ee74ea81aba9bc6afa79cb258a4afdd57" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#process&quot;&gt;process&lt;/a&gt;, &lt;a href=&quot;#main-process&quot;&gt;main process&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe6b1b4c07ca59d0a31a452b02200bd7fe3440a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#process&quot;&gt;process&lt;/a&gt;, &lt;a href=&quot;#renderer-process&quot;&gt;renderer process&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f3407502f02ad6d9324dfe027804f8e0c61929" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../api/browser-window#winsetprogressbarprogress&quot;&gt;API documentation for more options and modes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922af4639f13ee2e081e9da7e55f5a4e48b82809" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;build-instructions-osx#prerequisites&quot;&gt;macOS&lt;/a&gt; or &lt;a href=&quot;build-instructions-linux#prerequisites&quot;&gt;Linux&lt;/a&gt; build instructions for the requirements for your platform. In addition, you'll need to install &lt;a href=&quot;http://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools_tutorial.html#_setting_up&quot;&gt;&lt;code&gt;depot_tools&lt;/code&gt;&lt;/a&gt;, the toolset used for fetching Chromium and its dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72f6b3fee71b5ee27e43e4c277da90b203d6211" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;electron-versioning&quot;&gt;Electron versioning doc&lt;/a&gt; for info on how to manage Electron versions in your apps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d1df3201ba8ff332a54dd5604ceb7856b1f323" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nssound&quot;&gt;&lt;code&gt;NSSound&lt;/code&gt;&lt;/a&gt; docs for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b363dc9dae171616eaac7df6d3b3dd2dcbaa69c8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html#//apple_ref/doc/uid/TP40011195-CH4-SW9&quot;&gt;Enabling Network Access documentation&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14f95642ba46acbb1edbb2a5d74ce0062156ead" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/EventOverview/EventArchitecture/EventArchitecture.html#//apple_ref/doc/uid/10000060i-CH3-SW7&quot;&gt;macOS Cocoa Event Handling Guide&lt;/a&gt; for more information on macOS' native actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ee477ba47414c448dc2b5680377bdbb4cb080b9" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html#//apple_ref/doc/uid/TP40011195-CH4-SW6&quot;&gt;Enabling User-Selected File Access documentation&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af3f81ab6e9c039c559ab3c7ac5f466983267db" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles#Adding_shortcuts_to_a_launcher&quot;&gt;Unity Launcher documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e751e583ba867e212b34eb4bd8e9020730a2b27c" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://nodejs.org/api/cli.html&quot;&gt;Node documentation&lt;/a&gt; or run &lt;code&gt;node --help&lt;/code&gt; in your terminal for a list of available flags. Additionally, run &lt;code&gt;node --v8-options&lt;/code&gt; to see a list of flags that specifically refer to Node's V8 JavaScript engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e892ae8b32202c13cdeb96f7a5865a50aa322aea" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;native-file-drag-drop&quot;&gt;Native File Drag &amp;amp; Drop documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1281c35eacd3ba14e8868188e2d0a04cb5e310b" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;notifications&quot;&gt;Notifications documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f8669d8d2974ee35575500f8482370ab20c1913" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;progress-bar&quot;&gt;Progress Bar documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0324004b1500cf9129273ae604a6e8a0a77d7ef4" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;represented-file&quot;&gt;Represented File documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f864e177f43b7cb234d77b7df618bc99d7b82ba" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;web-contents&quot;&gt;&lt;code&gt;webContents&lt;/code&gt; documentation&lt;/a&gt; for its methods and events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae91d406fcbd618d12f5c235dc3e56d9b698056e" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;windows-store-guide&quot;&gt;Windows Store Guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70457ac5b9ba95528640a6b9ef6a955b285ea1da" translate="yes" xml:space="preserve">
          <source>See the description of the &lt;code&gt;window-all-closed&lt;/code&gt; event for the differences between the &lt;code&gt;will-quit&lt;/code&gt; and &lt;code&gt;window-all-closed&lt;/code&gt; events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71695eaa30fa4f50190447174f2b56a0ea8f143a" translate="yes" xml:space="preserve">
          <source>SegmentedControlSegment</source>
          <target state="translated">SegmentedControlSegment</target>
        </trans-unit>
        <trans-unit id="4394ae9f946ada7d5b66bd57512f2b0ffffcc7f4" translate="yes" xml:space="preserve">
          <source>SegmentedControlSegment Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4208d8084338685df1c0978e4dd221efe2d57392" translate="yes" xml:space="preserve">
          <source>Selects the next tab when native tabs are enabled and there are other tabs in the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f51b697f96978cd01f1977f3790edf482286e7" translate="yes" xml:space="preserve">
          <source>Selects the previous tab when native tabs are enabled and there are other tabs in the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ac6f4346e1855115a073803fab5a0d300cceeb" translate="yes" xml:space="preserve">
          <source>Semantic Commits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb1b3bc1e2b6809211c45cfc2e520d9dc52d504" translate="yes" xml:space="preserve">
          <source>Send a message to the main process asynchronously via &lt;code&gt;channel&lt;/code&gt;, you can also send arbitrary arguments. Arguments will be serialized in JSON internally and hence no functions or prototype chain will be included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7398add735120c8a300b1754e7b3ef793c612ca8" translate="yes" xml:space="preserve">
          <source>Send a message to the main process synchronously via &lt;code&gt;channel&lt;/code&gt;, you can also send arbitrary arguments. Arguments will be serialized in JSON internally and hence no functions or prototype chain will be included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e29a5fc7e4c5a211355753ef9eef4b1b3d04a1e" translate="yes" xml:space="preserve">
          <source>Send an asynchronous message to renderer process via &lt;code&gt;channel&lt;/code&gt;, you can also send arbitrary arguments. Arguments will be serialized in JSON internally and hence no functions or prototype chain will be included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb72802b0104119949d9f29b532cb6e097c6286" translate="yes" xml:space="preserve">
          <source>Send an asynchronous message to renderer process via &lt;code&gt;channel&lt;/code&gt;, you can also send arbitrary arguments. The renderer process can handle the message by listening to the &lt;code&gt;channel&lt;/code&gt; event with the &lt;a href=&quot;ipc-renderer&quot;&gt;&lt;code&gt;ipcRenderer&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921d99cf1d942e986d0ed0e985fc309e73536b31" translate="yes" xml:space="preserve">
          <source>Send given command to the debugging target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0662ea4ce2ba05b7f07ad1199c4b10caa58025d" translate="yes" xml:space="preserve">
          <source>Sending Messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d2829e520d5866a20eed4c2a57a504779d223f" translate="yes" xml:space="preserve">
          <source>Sends a message to a window with &lt;code&gt;windowid&lt;/code&gt; via &lt;code&gt;channel&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27c31ff5ce037a37f2b25c4b494e32bfda85239" translate="yes" xml:space="preserve">
          <source>Sends a message to the child window with the specified origin or &lt;code&gt;*&lt;/code&gt; for no origin preference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719b8fdd50b4650b966a5dd46c6c08f9d1623a9c" translate="yes" xml:space="preserve">
          <source>Sends a message to the parent window with the specified origin or &lt;code&gt;*&lt;/code&gt; for no origin preference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3b9453a9588f935f3b836cdd322a7738117100" translate="yes" xml:space="preserve">
          <source>Sends a request to get all cookies matching &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(error, cookies)&lt;/code&gt; on complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ce1f777ecc3e7a8a13bbb32eb04f0541d80eee" translate="yes" xml:space="preserve">
          <source>Sends a request to get current zoom factor, the &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(zoomFactor)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2c4588d04b3b811a73cf7f809fde89008cf374" translate="yes" xml:space="preserve">
          <source>Sends a request to get current zoom level, the &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(zoomLevel)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9b8e7c7636eb24670712f8a2b8d94e29c24623" translate="yes" xml:space="preserve">
          <source>Sends an input &lt;code&gt;event&lt;/code&gt; to the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c5cda6527732e60e0c4dc69e60c71e5fdce3db" translate="yes" xml:space="preserve">
          <source>Sends an input &lt;code&gt;event&lt;/code&gt; to the page. &lt;strong&gt;Note:&lt;/strong&gt; The &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; containing the contents needs to be focused for &lt;code&gt;sendInputEvent()&lt;/code&gt; to work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cfbdf37308003d0b30614f7029c3869dcfa23a" translate="yes" xml:space="preserve">
          <source>Sends the &lt;code&gt;action&lt;/code&gt; to the first responder of application. This is used for emulating default macOS menu behaviors. Usually you would just use the &lt;a href=&quot;menu-item#roles&quot;&gt;&lt;code&gt;role&lt;/code&gt;&lt;/a&gt; property of a &lt;a href=&quot;menu-item&quot;&gt;&lt;code&gt;MenuItem&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92d32aa796cabbd87cf999a10e42b89f9c87024" translate="yes" xml:space="preserve">
          <source>Sends the last chunk of the request data. Subsequent write or end operations will not be allowed. The &lt;code&gt;finish&lt;/code&gt; event is emitted just after the end operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75ee8482a2c82952f1802a71a9ee0d0e4f4ff43" translate="yes" xml:space="preserve">
          <source>Serbian</source>
          <target state="translated">Serbian</target>
        </trans-unit>
        <trans-unit id="427973e4372d64bc21861e671a9618503e480670" translate="yes" xml:space="preserve">
          <source>Serbo-Croatian</source>
          <target state="translated">Serbo-Croatian</target>
        </trans-unit>
        <trans-unit id="cc48b6b6f41313fcbf7e6d28144f8119b84edc00" translate="yes" xml:space="preserve">
          <source>Sesotho</source>
          <target state="translated">Sesotho</target>
        </trans-unit>
        <trans-unit id="615b44ac8bf6fbdb390f334c49d76f2b76637dea" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;CLANG_REVISION&lt;/code&gt; in &lt;code&gt;script/update-clang.sh&lt;/code&gt; to match the version Chromium is using.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87b775ea6e988edfb5d895216c1a7c32c4c89b62" translate="yes" xml:space="preserve">
          <source>Set a custom locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48b662602383e1a650c7f01c1eb6efd6f6008d8" translate="yes" xml:space="preserve">
          <source>Set an extra parameter to be sent with the crash report. The values specified here will be sent in addition to any values set via the &lt;code&gt;extra&lt;/code&gt; option when &lt;code&gt;start&lt;/code&gt; was called. This API is only available on macOS, if you need to add/update extra parameters on Linux and Windows after your first call to &lt;code&gt;start&lt;/code&gt; you can call &lt;code&gt;start&lt;/code&gt; again with the updated &lt;code&gt;extra&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02839a2f233f11d3f8cc0847ac0196c5644bb103" translate="yes" xml:space="preserve">
          <source>Set guest page muted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0e769eb096f3a6f326481bc15a4201393bc940" translate="yes" xml:space="preserve">
          <source>Set some breakpoints in &lt;code&gt;main.js&lt;/code&gt;, and start debugging in the &lt;a href=&quot;https://code.visualstudio.com/docs/editor/debugging&quot;&gt;Debug View&lt;/a&gt;. You should be able to hit the breakpoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b471c6934637140581395be23de584b9edaf293" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;MinimumSDKVersion&lt;/code&gt; to &lt;code&gt;10.10&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92cf2be8dfdc293ae7fa03b35e87fb813c43bbf2" translate="yes" xml:space="preserve">
          <source>Set the about panel options. This will override the values defined in the app's &lt;code&gt;.plist&lt;/code&gt; file. See the &lt;a href=&quot;https://developer.apple.com/reference/appkit/nsapplication/1428479-orderfrontstandardaboutpanelwith?language=objc&quot;&gt;Apple docs&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec7d7721ce717d1561dc072f65cf16a915a88ba" translate="yes" xml:space="preserve">
          <source>Set the app's login item settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0a08b6fcf27bd16fc47e3ef22595040af25803" translate="yes" xml:space="preserve">
          <source>Set the content security policy of the isolated world.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd569f6a9da9e1c91aeb48048ab5d92a09399a6f" translate="yes" xml:space="preserve">
          <source>Set the following Environment Variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2cc131d67a290a6d88094b91656eebfcc131d4f" translate="yes" xml:space="preserve">
          <source>Set the name of the isolated world. Useful in devtools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9194cdfaef43f6c163697328915dd5a8291cc957" translate="yes" xml:space="preserve">
          <source>Set the security origin of the isolated world.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1ca9457899c08b346660869529f5a371273cf0" translate="yes" xml:space="preserve">
          <source>Set the size of the page. This is only supported for &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; guest contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71a3de4c9539412238109eeef9747c83cba89aa" translate="yes" xml:space="preserve">
          <source>Set the value of &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;NSUserDefaults&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46619168d5abf2b87e0a02117f598273b464f4d8" translate="yes" xml:space="preserve">
          <source>Set this string as &lt;code&gt;_NT_SYMBOL_PATH&lt;/code&gt; in the environment, using the Windbg menus, or by typing the &lt;code&gt;.sympath&lt;/code&gt; command. If you would like to get symbols from Microsoft's symbol server as well, you should list that first:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990794dde4fce604b77700bf70eb7956e7fc2854" translate="yes" xml:space="preserve">
          <source>Set this to the value to be returned in a synchronous message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8dc4c5eabfddf9a7c13af8083300ff171e8192" translate="yes" xml:space="preserve">
          <source>Set your tokens and environment variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcabe3320d4d2fe8250e6fd9149fd060d6a02215" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;menu&lt;/code&gt; as the application menu on macOS. On Windows and Linux, the &lt;code&gt;menu&lt;/code&gt; will be set as each window's top menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ee768780ac31f433d81cfa60398b836e99b866" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;parent&lt;/code&gt; as current window's parent window, passing &lt;code&gt;null&lt;/code&gt; will turn current window into a top-level window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e53cc5934631e24bf519cbb45bc8d436a1baa394" translate="yes" xml:space="preserve">
          <source>Sets a 16 x 16 pixel overlay onto the current taskbar icon, usually used to convey some sort of application status or to passively notify the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b3972da4258b12b92f71f96e53814c40885eb9" translate="yes" xml:space="preserve">
          <source>Sets a cookie with &lt;code&gt;details&lt;/code&gt;, &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(error)&lt;/code&gt; on complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73f3ad6b7dcc615503667fa14af3e92b810d62a" translate="yes" xml:space="preserve">
          <source>Sets a provider for spell checking in input fields and text areas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1039c3d538d298053860a1181740831c87486f" translate="yes" xml:space="preserve">
          <source>Sets download saving directory. By default, the download directory will be the &lt;code&gt;Downloads&lt;/code&gt; under the respective app folder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53db72c06f060c7bdb6fb5f0a84889913b252f8" translate="yes" xml:space="preserve">
          <source>Sets or removes a custom Jump List for the application, and returns one of the following strings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a82dd772291cfd7bec76d72317acf8bc124765ba" translate="yes" xml:space="preserve">
          <source>Sets progress value in progress bar. Valid range is [0, 1.0].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290783aef4e7c376c84c825743a28d792faad7b5" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;image&lt;/code&gt; associated with this dock icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251fc90db70cb7037b10cbe3f92c3f4b138d7122" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;image&lt;/code&gt; associated with this tray icon when pressed on macOS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e0143fe4c1102c9bf0e8e010a67500e7b42631" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;image&lt;/code&gt; associated with this tray icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6905ec900101f6e4a3f2037a93b01422b34ddb71" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;item&lt;/code&gt; as dragging item for current drag-drop operation, &lt;code&gt;file&lt;/code&gt; is the absolute path of the file to be dragged, and &lt;code&gt;icon&lt;/code&gt; is the image showing under the cursor when dragging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f9d7b3d7555797eb9ab914db969433a4ad54d8" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;menu&lt;/code&gt; as the window's menu bar, setting it to &lt;code&gt;null&lt;/code&gt; will remove the menu bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c137b86904d3e1181cfb7ce1cb4e0f286f7e116" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;path&lt;/code&gt; of the pepper flash plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="279ab3b4dac0ea37dba9e40f9865562ac862180e" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;url&lt;/code&gt; and initialize the auto updater.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411613b1ec44176c1d91a8f311a52c06789cbab1" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;version&lt;/code&gt; of the pepper flash plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478045962ca72fedb01b6d52b1c224ce8054eb20" translate="yes" xml:space="preserve">
          <source>Sets the application's &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Carbon/Conceptual/customizing_docktile/concepts/dockconcepts.html#//apple_ref/doc/uid/TP30000986-CH2-TPXREF103&quot;&gt;dock menu&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a17957d2f10c933c37aa11da3b5570f08602910" translate="yes" xml:space="preserve">
          <source>Sets the certificate verify proc for &lt;code&gt;session&lt;/code&gt;, the &lt;code&gt;proc&lt;/code&gt; will be called with &lt;code&gt;proc(request, callback)&lt;/code&gt; whenever a server certificate verification is requested. Calling &lt;code&gt;callback(0)&lt;/code&gt; accepts the certificate, calling &lt;code&gt;callback(-2)&lt;/code&gt; rejects it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8e6665350130532caaa387575f5aeeb432cdb4" translate="yes" xml:space="preserve">
          <source>Sets the context menu for this icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47060fc887d88d145b8ae1672076595718bcf2a9" translate="yes" xml:space="preserve">
          <source>Sets the counter badge for current app. Setting the count to &lt;code&gt;0&lt;/code&gt; will hide the badge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22db1f55140252f5b6f27842096a7127c3235d4" translate="yes" xml:space="preserve">
          <source>Sets the file descriptor soft limit to &lt;code&gt;maxDescriptors&lt;/code&gt; or the OS hard limit, whichever is lower for the current process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e76ee6dd09d76ffebb057cee2549f82c568b6e" translate="yes" xml:space="preserve">
          <source>Sets the handler which can be used to respond to permission requests for the &lt;code&gt;session&lt;/code&gt;. Calling &lt;code&gt;callback(true)&lt;/code&gt; will allow the permission and &lt;code&gt;callback(false)&lt;/code&gt; will reject it. To clear the handler, call &lt;code&gt;setPermissionRequestHandler(null)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160238f1004dace71015337d0fa49ada48136e08" translate="yes" xml:space="preserve">
          <source>Sets the hover text for this tray icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f620ce244e19e7037a80498c69e715898a04054c" translate="yes" xml:space="preserve">
          <source>Sets the maximum and minimum layout-based (i.e. non-visual) zoom level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e70c9ccdb495c7ec470dc0b177457079b9a31e3" translate="yes" xml:space="preserve">
          <source>Sets the maximum and minimum pinch-to-zoom level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4acaadb2ba73fce19695ad12402e5934ae8b4bbe" translate="yes" xml:space="preserve">
          <source>Sets the maximum size of window to &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec44967d4662b91c9b3f114ee8dbd993031b1517" translate="yes" xml:space="preserve">
          <source>Sets the minimum size of window to &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02185a3b76590596fc0a2b0e9e046e9d1cbf98bc" translate="yes" xml:space="preserve">
          <source>Sets the opacity of the window. On Linux does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d3956e4e5ad14d58c86116c39a15d30905b01aa" translate="yes" xml:space="preserve">
          <source>Sets the pathname of the file the window represents, and the icon of the file will show in window's title bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c281609f460bb0635f2bc8f3787ceb433cbb6792" translate="yes" xml:space="preserve">
          <source>Sets the properties for the window's taskbar button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8c58c282aea9b22e2a024b2110f2eabc609253" translate="yes" xml:space="preserve">
          <source>Sets the proxy settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e0ad3eb7d3f90dd1e90c0d2a66935e2de393e2" translate="yes" xml:space="preserve">
          <source>Sets the referrer URL for the guest page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba636a58b5e807db3627d3269957da72f7b802b3" translate="yes" xml:space="preserve">
          <source>Sets the region of the window to show as the thumbnail image displayed when hovering over the window in the taskbar. You can reset the thumbnail to be the entire window by specifying an empty region: &lt;code&gt;{x: 0, y: 0, width: 0, height: 0}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222d29f00c5b8fe41a83a99e0a4aaab642809d3a" translate="yes" xml:space="preserve">
          <source>Sets the session used by the page. If &lt;code&gt;partition&lt;/code&gt; starts with &lt;code&gt;persist:&lt;/code&gt;, the page will use a persistent session available to all pages in the app with the same &lt;code&gt;partition&lt;/code&gt;. if there is no &lt;code&gt;persist:&lt;/code&gt; prefix, the page will use an in-memory session. By assigning the same &lt;code&gt;partition&lt;/code&gt;, multiple pages can share the same session. If the &lt;code&gt;partition&lt;/code&gt; is unset then default session of the app will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4871ac41dc8e0cc5d8a79634f3e4c8c2225c26" translate="yes" xml:space="preserve">
          <source>Sets the string to be displayed in the dock&amp;rsquo;s badging area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed70b5602ed50380f332352a448a5d46ca14626" translate="yes" xml:space="preserve">
          <source>Sets the title displayed aside of the tray icon in the status bar (Support ANSI colors).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1d0ca05bd8b312ef122cdef7c9c56ba92bfd82" translate="yes" xml:space="preserve">
          <source>Sets the toolTip that is displayed when hovering over the window thumbnail in the taskbar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1fed9386060f627fae88f6fd5ff6df70a290474" translate="yes" xml:space="preserve">
          <source>Sets the touchBar layout for the current window. Specifying &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; clears the touch bar. This method only has an effect if the machine has a touch bar and is running on macOS 10.12.1+.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd49171152fe57bd3038e165f32fc1c7c0d42709" translate="yes" xml:space="preserve">
          <source>Sets the user agent for the guest page before the page is navigated to. Once the page is loaded, use the &lt;code&gt;setUserAgent&lt;/code&gt; method to change the user agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81370e69987ebdde392e760a63b1068c9e8874db" translate="yes" xml:space="preserve">
          <source>Sets when the tray's icon background becomes highlighted (in blue).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc658c9234d2127d992372efec1e104afb6c25d5" translate="yes" xml:space="preserve">
          <source>Sets whether the maximize/zoom window button toggles fullscreen mode or maximizes the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cbb16f01710677c4aca8ab228fc78a8b5a4f30" translate="yes" xml:space="preserve">
          <source>Sets whether the menu bar should be visible. If the menu bar is auto-hide, users can still bring up the menu bar by pressing the single &lt;code&gt;Alt&lt;/code&gt; key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29572ab350834fc7ed97067a2571ca0cf5d07264" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be manually closed by user. On Linux does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937a60be613e0a567f310ec31e8702820020bfc2" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be manually maximized by user. On Linux does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e08d12f4202c84cf190f1e4b2b3f89a182a8e3c" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be manually minimized by user. On Linux does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc46361f979c4d9608eacf60c091b8f13224a076" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be manually resized by user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee42db3c183bd619c91435b2e71bbd6c1476421" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be moved by user. On Linux does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660351dc0ff01662151be83ecefa7781c7d7ea1e" translate="yes" xml:space="preserve">
          <source>Sets whether the window menu bar should hide itself automatically. Once set the menu bar will only show when users press the single &lt;code&gt;Alt&lt;/code&gt; key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abdc140d5edc99f9aeb4494edf72d927570abbf0" translate="yes" xml:space="preserve">
          <source>Sets whether the window should be in fullscreen mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cacce487fa9cb3032791e9ea0c0822f8d560079" translate="yes" xml:space="preserve">
          <source>Sets whether the window should be visible on all workspaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313834a95379cc46f912f8547ebec8f8298ef2a0" translate="yes" xml:space="preserve">
          <source>Sets whether the window should have a shadow. On Windows and Linux does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5383b5cfd52722f50fe448048159329ed6ee4604" translate="yes" xml:space="preserve">
          <source>Sets whether the window should show always on top of other windows. After setting this, the window is still a normal window, not a toolbox window which can not be focused on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb1d7c6f064d9ffaa5f9b140d9b2b956a8a19c3" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;backgroundColor&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ce609889da174d9c83ea3624c698222b364eb0" translate="yes" xml:space="preserve">
          <source>Setting Breakpoints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5547a55fab0d40b3cabc33cae036e7f42cdb37b" translate="yes" xml:space="preserve">
          <source>Setting Menu for Specific Browser Window (&lt;em&gt;Linux&lt;/em&gt;&lt;em&gt;Windows&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1458460daaa5e87b409b5cb4d401b501e226605c" translate="yes" xml:space="preserve">
          <source>Setting Up Symbol Server in Debugger</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39f7090f23f74e7e9b0ab5052ee54a40828e151" translate="yes" xml:space="preserve">
          <source>Setting the WebRTC IP handling policy allows you to control which IPs are exposed via WebRTC. See &lt;a href=&quot;https://browserleaks.com/webrtc&quot;&gt;BrowserLeaks&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eeaecc3151e72805fa15b69d0bf5149e1ecba04" translate="yes" xml:space="preserve">
          <source>Setting up Linux</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3873588638e10cb327083b50714e7c9f69300587" translate="yes" xml:space="preserve">
          <source>Setting up Spectron</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce37e0462dd2f82f7b7712227358924a5aa8bccd" translate="yes" xml:space="preserve">
          <source>Setting up Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9557ea808723c270d45f5c1d9a28bb3fdc5243cc" translate="yes" xml:space="preserve">
          <source>Setting up macOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d64e208a0addb02888d3a43464174bc36ae42c" translate="yes" xml:space="preserve">
          <source>Setting up the Development Environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b983dabe1b76125ab113e4ddaca190ed5fa68275" translate="yes" xml:space="preserve">
          <source>Setting up with WebDriverJs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5350d8c2b080582c6bfb05a60d35c93a21a16e3c" translate="yes" xml:space="preserve">
          <source>Setting up with WebdriverIO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4047b9ccffcd56a081d5fb456adc03f94256ada" translate="yes" xml:space="preserve">
          <source>Setting up your local environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a97f965c7c56f962fd374f807c93dd0df8b340b" translate="yes" xml:space="preserve">
          <source>Sheets</source>
          <target state="translated">Sheets</target>
        </trans-unit>
        <trans-unit id="5b84cc8c584f215d33c18b24ad0b89c6c23c5367" translate="yes" xml:space="preserve">
          <source>Shona</source>
          <target state="translated">Shona</target>
        </trans-unit>
        <trans-unit id="7b0d9e595041021fed77c0a4fa8fe16ad22cc27f" translate="yes" xml:space="preserve">
          <source>ShortcutDetails</source>
          <target state="translated">ShortcutDetails</target>
        </trans-unit>
        <trans-unit id="fafa49dd90a16dcbb088bf3792b8b7016d458e25" translate="yes" xml:space="preserve">
          <source>ShortcutDetails Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06417898f90eaf159edbf6f7673bee719a0bb860" translate="yes" xml:space="preserve">
          <source>Shortcuts are registered with the &lt;a href=&quot;global-shortcut&quot;&gt;&lt;code&gt;globalShortcut&lt;/code&gt;&lt;/a&gt; module using the &lt;a href=&quot;global-shortcut#globalshortcutregisteraccelerator-callback&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method, i.e.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c505ab90b458ef9940a43737388d3c6b217987e8" translate="yes" xml:space="preserve">
          <source>Shortcuts within a BrowserWindow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eada8d8b3747bc389420c924b29ba54c328d989" translate="yes" xml:space="preserve">
          <source>Show the given file in a file manager. If possible, select the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1238c5b9cb1e67edf1451c77e1ffa426aa90a88" translate="yes" xml:space="preserve">
          <source>Showing window gracefully</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17a2ec8a1ae841cdfb4e1b4532e1caaf251acbf" translate="yes" xml:space="preserve">
          <source>Shows a message box, it will block the process until the message box is closed. It returns the index of the clicked button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18022873b70dca3d65700645d4513ec2ec6dd203" translate="yes" xml:space="preserve">
          <source>Shows and gives focus to the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53db27871a1d17480387a6a11639bd53e76f37fc" translate="yes" xml:space="preserve">
          <source>Shows application windows after they were hidden. Does not automatically focus them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701512b17e97a60c66e7b50b9cf18aa6e0b6c4f1" translate="yes" xml:space="preserve">
          <source>Shows pop-up dictionary that searches the selected word on the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d822acb95b0144cb7dc2d75727253f5d1253ed8" translate="yes" xml:space="preserve">
          <source>Shows the Windows's crash dialog when Electron crashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20700e2dcfc17906d5966c2f94b2be9b5f55f286" translate="yes" xml:space="preserve">
          <source>Shows the dock icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64240689492efc7a3210cdedd1dd2c7fcabf32cb" translate="yes" xml:space="preserve">
          <source>Shows the window but doesn't focus on it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6fa7b4bd103aa87ee11e6fde910511f6a97fdb0" translate="yes" xml:space="preserve">
          <source>Sign Native Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc8fc0641ff7b8ede4aec2f3a27d76dd5410bd4" translate="yes" xml:space="preserve">
          <source>Sign Your App</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f4ea0e1d26a0a9cac047ea787dd3e6d05fb0e7" translate="yes" xml:space="preserve">
          <source>Signing Windows builds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02542c655ad3f4ac13c43496f81624184b1225a" translate="yes" xml:space="preserve">
          <source>Signing macOS builds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625506f52394201963a85ee6b051eb84ae0bb69d" translate="yes" xml:space="preserve">
          <source>Similarly for &lt;code&gt;arm64&lt;/code&gt;, install the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62bd7a2e139406201417e8042dd2531204a1a6c" translate="yes" xml:space="preserve">
          <source>Simple fullscreen mode emulates the native fullscreen behavior found in versions of Mac OS X prior to Lion (10.7).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ee5667fa508301eb8f820026607f3bc3836541" translate="yes" xml:space="preserve">
          <source>Since Chromium is quite a large project, the final linking stage can take quite a few minutes, which makes it hard for development. In order to solve this, Chromium introduced the &quot;component build&quot;, which builds each component as a separate shared library, making linking very quick but sacrificing file size and performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8047395872e46168268025bd69d79822303df699" translate="yes" xml:space="preserve">
          <source>Since Electron uses Chromium for displaying web pages, Chromium's multi-process architecture is also used. Each web page in Electron runs in its own process, which is called &lt;strong&gt;the renderer process&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff151b3d48273ded92d11ad24b2acd36b4ba43d" translate="yes" xml:space="preserve">
          <source>Since WebViews live in the DOM, they can be created by a script running on your website even if Node.js integration is otherwise disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa6d77f608edec50cafb0a6541c0208b155cc8b" translate="yes" xml:space="preserve">
          <source>Since a major feature in electron is the ability to run node.js in the renderer process (making it easier to develop desktop applications using web technologies), the sandbox is disabled by electron. This is because most node.js APIs require system access. &lt;code&gt;require()&lt;/code&gt; for example, is not possible without file system permissions, which are not available in a sandboxed environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9383966ac5db425b8c83aa1299a2f850cf72704" translate="yes" xml:space="preserve">
          <source>Since communication between the processes is possible, a renderer process can call upon the main process to perform tasks. Electron comes with a module called &lt;code&gt;remote&lt;/code&gt; that exposes APIs usually only available on the main process. In order to create a &lt;code&gt;BrowserWindow&lt;/code&gt; from a renderer process, we'd use the remote as a middle-man:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31559d62f258a908e80f13ee96c49a0297706ff" translate="yes" xml:space="preserve">
          <source>Since rendering untrusted content in electron is still uncharted territory, the APIs exposed to the sandbox preload script should be considered more unstable than the rest of electron APIs, and may have breaking changes to fix security issues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebf894ce3fc4564f248b7389b55e4a853f73a6f" translate="yes" xml:space="preserve">
          <source>Since v0.34.0, Electron allows submitting packaged apps to the Mac App Store (MAS). This guide provides information on: how to submit your app and the limitations of the MAS build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0330c530209f2358f617c569b6bbdce28505654" translate="yes" xml:space="preserve">
          <source>Sindhi</source>
          <target state="translated">Sindhi</target>
        </trans-unit>
        <trans-unit id="6d5508fa76121a44df1c719d90ac812896b52caf" translate="yes" xml:space="preserve">
          <source>Sinhalese</source>
          <target state="translated">Sinhalese</target>
        </trans-unit>
        <trans-unit id="b7152342a267362add3c0d7f69f720f7a9c76c9e" translate="yes" xml:space="preserve">
          <source>Size</source>
          <target state="translated">Size</target>
        </trans-unit>
        <trans-unit id="0852eb086cfb0b72e55069ef131253e3c1fa0079" translate="yes" xml:space="preserve">
          <source>Size Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a8b06eb4898f96a2fc6d5d10dfc35b13982cb6" translate="yes" xml:space="preserve">
          <source>Slovak</source>
          <target state="translated">Slovak</target>
        </trans-unit>
        <trans-unit id="0cd368bf67c2a1142f1a3890e53e4127424e77a4" translate="yes" xml:space="preserve">
          <source>Slovenian</source>
          <target state="translated">Slovenian</target>
        </trans-unit>
        <trans-unit id="9a2625f98c9a48c32c7ca4ab61100678556c7288" translate="yes" xml:space="preserve">
          <source>Small icon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade99a9999f491266743ef60204af9fec999a307" translate="yes" xml:space="preserve">
          <source>Snapcraft</source>
          <target state="translated">Snapcraft</target>
        </trans-unit>
        <trans-unit id="85cd2418343c4f3225f8cab6909ac25c19269930" translate="yes" xml:space="preserve">
          <source>Snapcraft Guide (Ubuntu Software Center &amp;amp; More)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9942c10fdc570b8e644c4ec7a84cbcbfcd9f04f2" translate="yes" xml:space="preserve">
          <source>Snapcraft is capable of taking an existing &lt;code&gt;.deb&lt;/code&gt; file and turning it into a &lt;code&gt;.snap&lt;/code&gt; file. The creation of a snap is configured using a &lt;code&gt;snapcraft.yaml&lt;/code&gt; file that describes the sources, dependencies, description, and other core building blocks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d1604f0abb6338328027ef31d51bd7dfbbc088" translate="yes" xml:space="preserve">
          <source>So in short, the primary steps are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688a580feb7e7f568eb9f58a542d2ad9f51f2cfb" translate="yes" xml:space="preserve">
          <source>Software output device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed94ff47ed12a08088bd82b2b23088a5ac4cffc" translate="yes" xml:space="preserve">
          <source>Somali</source>
          <target state="translated">Somali</target>
        </trans-unit>
        <trans-unit id="54cb427cf311e299dc022158e6543a8093761d79" translate="yes" xml:space="preserve">
          <source>Some bug in V8 engine may allow malicious code to access the renderer preload APIs, effectively granting full access to the system through the &lt;code&gt;remote&lt;/code&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47628a96f6e8e830dce46609d2b995a38ad53ee6" translate="yes" xml:space="preserve">
          <source>Some compilation and linking errors are caused by missing source/object files in the libcc &lt;code&gt;dist&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197b70ba6a8008b4cd8284d70ac6ac4cdabb89a3" translate="yes" xml:space="preserve">
          <source>Some popular &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;type&lt;/code&gt;s are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b37110e5b01350732eac4676af2611966b9ccef" translate="yes" xml:space="preserve">
          <source>Source Code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de95723a62c1fc0a018a2398690f4e65f039455b" translate="yes" xml:space="preserve">
          <source>Source Code Directory Structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df7f1b361b2af42d36011e00d22c0f9891ec0b0" translate="yes" xml:space="preserve">
          <source>Spanish</source>
          <target state="translated">Spanish</target>
        </trans-unit>
        <trans-unit id="6ae3588f0de424b70dc66d7ba808c0edd567776a" translate="yes" xml:space="preserve">
          <source>Spanish (Latin America)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ccc6278f24a22a631ba4a5e5cc7f1577c6185b9" translate="yes" xml:space="preserve">
          <source>Specifies a script that will be loaded before other scripts run in the guest page. The protocol of script's URL must be either &lt;code&gt;file:&lt;/code&gt; or &lt;code&gt;asar:&lt;/code&gt;, because it will be loaded by &lt;code&gt;require&lt;/code&gt; in guest page under the hood.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7be3814d051f68aac332b816a65dc938c0320e0" translate="yes" xml:space="preserve">
          <source>Specifies the flags passed to the Node JS engine. It has to be passed when starting Electron if you want to enable the &lt;code&gt;flags&lt;/code&gt; in the main process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74f74dba1179cb4536444d27537cabff9e5439a" translate="yes" xml:space="preserve">
          <source>Specifies whether the window&amp;rsquo;s document has been edited, and the icon in title bar will become gray when set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f63e8cd6cf9cc8066c5e76619ab91b82e2b04f2" translate="yes" xml:space="preserve">
          <source>Specify an option with the value of &lt;code&gt;false&lt;/code&gt; to omit it from the registration. An example of registering a privileged scheme, without bypassing Content Security Policy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd1abd3d894b4f807a4e89a97452fdac984d9b7" translate="yes" xml:space="preserve">
          <source>Spectron</source>
          <target state="translated">Spectron</target>
        </trans-unit>
        <trans-unit id="c3d3af07d6e79183a7c87b53cbd8537d0c48ccb5" translate="yes" xml:space="preserve">
          <source>Squirrel</source>
          <target state="translated">Squirrel</target>
        </trans-unit>
        <trans-unit id="74798804bf02ba616248416fdead7670f76672e4" translate="yes" xml:space="preserve">
          <source>Squirrel is an open-source framework that enables Electron apps to update automatically as new versions are released. See the &lt;a href=&quot;api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt; API for info about getting started with Squirrel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4210cee5eab0b745b002c7f95add76c38ff996e9" translate="yes" xml:space="preserve">
          <source>Stabilization Branches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f238fde84c8102be7f84a560d0639cae0152ae8" translate="yes" xml:space="preserve">
          <source>Stabilization branches are always either &lt;strong&gt;major&lt;/strong&gt; or &lt;strong&gt;minor&lt;/strong&gt; version lines, and named against the following template &lt;code&gt;$MAJOR-$MINOR-x&lt;/code&gt; e.g. &lt;code&gt;2-0-x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d99181c503126531951a1d63aacafde75a53b4a" translate="yes" xml:space="preserve">
          <source>Stabilization branches are branches that run parallel to master, taking in only cherry-picked commits that are related to security or stability. These branches are never merged back to master.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84e82591dfd7e3bdc6c7cd680590a9f03472b79" translate="yes" xml:space="preserve">
          <source>Standard Menu Item Actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a8dccaccbf655647957c75601b588b7da64cf5" translate="yes" xml:space="preserve">
          <source>Standard Menus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51644d168a94193f3c9c83deeefc4bacb9498973" translate="yes" xml:space="preserve">
          <source>Start accessing a security scoped resource. With this method electron applications that are packaged for the Mac App Store may reach outside their sandbox to access files chosen by the user. See &lt;a href=&quot;https://developer.apple.com/library/content/documentation/Security/Conceptual/AppSandboxDesignGuide/AppSandboxInDepth/AppSandboxInDepth.html#//apple_ref/doc/uid/TP40011183-CH3-SW16&quot;&gt;Apple's documentation&lt;/a&gt; for a description of how this system works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7b0c3a0ad3617ee8b08891c922bdf861d9315d" translate="yes" xml:space="preserve">
          <source>Start monitoring on all processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99639e9715c1d41ab81462c45be1945467eb2b7" translate="yes" xml:space="preserve">
          <source>Start recording on all processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1793221da64d52d98c86212e1cd147064d099076" translate="yes" xml:space="preserve">
          <source>Starts a request to find all matches for the &lt;code&gt;text&lt;/code&gt; in the web page. The result of the request can be obtained by subscribing to &lt;a href=&quot;web-contents#event-found-in-page&quot;&gt;&lt;code&gt;found-in-page&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ceb5a8300c14b98f9fe0d3cb7de4378c0ee4a60" translate="yes" xml:space="preserve">
          <source>Starts a request to find all matches for the &lt;code&gt;text&lt;/code&gt; in the web page. The result of the request can be obtained by subscribing to &lt;a href=&quot;webview-tag#event-found-in-page&quot;&gt;&lt;code&gt;found-in-page&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c428be943bbb7b09e973865c7fa9bd465358ae3" translate="yes" xml:space="preserve">
          <source>Starts gathering information about all available desktop media sources, and calls &lt;code&gt;callback(error, sources)&lt;/code&gt; when finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06cbf86e2cce84ea76ae7498035d501154d9a3e3" translate="yes" xml:space="preserve">
          <source>Starts inspecting element at position (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;) of guest page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7045988b61bc2eb7342e6f56e6add38559fb2a9b" translate="yes" xml:space="preserve">
          <source>Starts inspecting element at position (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5493530eca13ae2d998698f12402dfdcb7d4b70c" translate="yes" xml:space="preserve">
          <source>Starts or stops flashing the window to attract user's attention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd117d5ab0c408102a03aa5a1f39f24267c613ce" translate="yes" xml:space="preserve">
          <source>Starts preventing the system from entering lower-power mode. Returns an integer identifying the power save blocker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722a15ab9252afbe8e0bd511ed9500f99c648da6" translate="yes" xml:space="preserve">
          <source>Starts the process as a normal Node.js process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5813201a4580fe5f1fbb25f1a522d4d505bf2d" translate="yes" xml:space="preserve">
          <source>Static Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">Status</target>
        </trans-unit>
        <trans-unit id="7de39102e71973f2b4c9e9fb6dac682aecd8cf94" translate="yes" xml:space="preserve">
          <source>Step 10: Discuss and Update</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="662dfae726354bffc7db9630caa7bd67eefc9a6d" translate="yes" xml:space="preserve">
          <source>Step 10: Discuss and update</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd1675ce941a091f16700e236a4f78ec2dfad55" translate="yes" xml:space="preserve">
          <source>Step 11: Landing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd30c8936103523f83b34c764b38a96178d6db7" translate="yes" xml:space="preserve">
          <source>Step 1: Create a Debian Package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5f7dd7276dbf8791d45ab909b29b602b9f844a" translate="yes" xml:space="preserve">
          <source>Step 1: Fork</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982ffe830b3039cc7f4b8415778987e3a8f473de" translate="yes" xml:space="preserve">
          <source>Step 1: Package Your Electron Application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20ecf8d0baedcfa6da1a547723fa5bd4a4921de" translate="yes" xml:space="preserve">
          <source>Step 2: Build</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af62df57b1ca6089276e10a762c159ae1f59afb8" translate="yes" xml:space="preserve">
          <source>Step 2: Create a snapcraft.yaml</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275558b46203433d5c44c48e86d11c0678b226ab" translate="yes" xml:space="preserve">
          <source>Step 2: Running &lt;code&gt;electron-installer-snap&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d25bf9fb6ae3bee37a7daa1e63e2520d3a2b1c" translate="yes" xml:space="preserve">
          <source>Step 2: Running electron-windows-store</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085c619408ba85f500cca4078bc6993a1943481e" translate="yes" xml:space="preserve">
          <source>Step 3: Branch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f536cd108752a5d4c14dab76fc220c2a52be56" translate="yes" xml:space="preserve">
          <source>Step 3: Using the AppX Package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f888c34ad31ebff32c41387dd24f54772ed28504" translate="yes" xml:space="preserve">
          <source>Step 4: Code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a14b62cdfef7caa365404c01690312608f3716" translate="yes" xml:space="preserve">
          <source>Step 5: Commit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01ca2567556356c334a1cbf9d37ca9fd395d35b" translate="yes" xml:space="preserve">
          <source>Step 6: Rebase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d84ee8f1e7b86aadc817929a98f58c069a4f673" translate="yes" xml:space="preserve">
          <source>Step 7: Test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba4c9ae1373ba83140e40fb09eb37be3b0e1c0c" translate="yes" xml:space="preserve">
          <source>Step 8: Push</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee5a72675fb5ec976da7fa298ce7bfb67ad3ff1" translate="yes" xml:space="preserve">
          <source>Step 9: Opening the Pull Request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86f2f9e7039c672bc135fae708eb87036251ae9" translate="yes" xml:space="preserve">
          <source>Steps to package your app into an &lt;code&gt;asar&lt;/code&gt; archive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8370e7640e1265b2ff1387c489b345506060c60c" translate="yes" xml:space="preserve">
          <source>Stop monitoring on all processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f3f1419fba05c1946bad423e2a2c661e189e16" translate="yes" xml:space="preserve">
          <source>Stop recording on all processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cba0d3e2c5b605f39289352fffcc0b5368f3e36" translate="yes" xml:space="preserve">
          <source>Stops any &lt;code&gt;findInPage&lt;/code&gt; request for the &lt;code&gt;webContents&lt;/code&gt; with the provided &lt;code&gt;action&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5eeb16588d48c3b8a2d024259209772e5fb650" translate="yes" xml:space="preserve">
          <source>Stops any &lt;code&gt;findInPage&lt;/code&gt; request for the &lt;code&gt;webview&lt;/code&gt; with the provided &lt;code&gt;action&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60f8e2575f729879818c2189915ae2373b00b1f" translate="yes" xml:space="preserve">
          <source>Stops any pending navigation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c0432f252cabdf881a5b1de7d21307e3108eac" translate="yes" xml:space="preserve">
          <source>Stops the specified power save blocker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7ac16ecf07dffbfa1314c6d4fc11224228b1e6" translate="yes" xml:space="preserve">
          <source>StreamProtocolResponse</source>
          <target state="translated">StreamProtocolResponse</target>
        </trans-unit>
        <trans-unit id="0b932126a37351eca28af5c545c6050320fbafe4" translate="yes" xml:space="preserve">
          <source>StreamProtocolResponse Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07986ba3f490221acef1d2c2b54da37f801672d6" translate="yes" xml:space="preserve">
          <source>Strict use of semver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28ce922b3d6733942016c7204231819c4d13493" translate="yes" xml:space="preserve">
          <source>Structure of Other Directories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a6dc559018a4e099b96d3ed7b5f1b03af5b24a" translate="yes" xml:space="preserve">
          <source>Structure of Source Code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e917b4ec2b1055f6900c394da62ccec5d1d3b323" translate="yes" xml:space="preserve">
          <source>Submit Your App for Review</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1309deaf0ef292c659a9167472c5ab66acd093f6" translate="yes" xml:space="preserve">
          <source>Submit crash reports to a remote server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc8d7c68289726905ca8577af8767a794cde90e" translate="yes" xml:space="preserve">
          <source>Submitting a Bug Report</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63fa5aa992cb17b44abb684ac147fdb7bae81d44" translate="yes" xml:space="preserve">
          <source>Subscribes to native notifications of macOS, &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(event, userInfo)&lt;/code&gt; when the corresponding &lt;code&gt;event&lt;/code&gt; happens. The &lt;code&gt;userInfo&lt;/code&gt; is an Object that contains the user information dictionary sent along with the notification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14bb55d7d7430a4e707657bbba24d20d9e03a1c8" translate="yes" xml:space="preserve">
          <source>Sundanese</source>
          <target state="translated">Sundanese</target>
        </trans-unit>
        <trans-unit id="f32d5a3b17e614297417cc279a7ec1cd02274d65" translate="yes" xml:space="preserve">
          <source>Support</source>
          <target state="translated">Support</target>
        </trans-unit>
        <trans-unit id="0bbfba9b9ff08cee1fcec9f293c4eb19430339a8" translate="yes" xml:space="preserve">
          <source>Support for authenticating proxies using basic, digest, NTLM, Kerberos or negotiate authentication schemes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70da0ceff673ee93c735fb842e02d74844dd618b" translate="yes" xml:space="preserve">
          <source>Support for traffic monitoring proxies: Fiddler-like proxies used for access control and monitoring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e4b99d8f796a6596b3536c4a983b7cb9155b68" translate="yes" xml:space="preserve">
          <source>Supported Chrome Command Line Switches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5b1ee6bc8a9f095e69f419328c6a4405e7c8ac" translate="yes" xml:space="preserve">
          <source>Supported DevTools Extensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4dac57669722579d0059c86b886c8076e5f699" translate="yes" xml:space="preserve">
          <source>Supported Formats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a182e900ad0b28f084dbe30c2f1ab8dc81f123a" translate="yes" xml:space="preserve">
          <source>Supported Platforms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27688c5327abb2b73ea437b43fa29c356a128ee7" translate="yes" xml:space="preserve">
          <source>Supported Versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d07764fc1204ad402a2687ddda6ae939e80fec9" translate="yes" xml:space="preserve">
          <source>Swahili</source>
          <target state="translated">Swahili</target>
        </trans-unit>
        <trans-unit id="04a422d38c95415cece1ac86e1ad2a1030048c03" translate="yes" xml:space="preserve">
          <source>Swedish</source>
          <target state="translated">Swedish</target>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="57536136efa291cb99584f051a0e6e8328a62928" translate="yes" xml:space="preserve">
          <source>Tag Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e301d53adc28f8dfd9375071aa503322cf99bba4" translate="yes" xml:space="preserve">
          <source>Tajik</source>
          <target state="translated">Tajik</target>
        </trans-unit>
        <trans-unit id="86c2b6275f076b31c4be9812e835dab2a6f07ccf" translate="yes" xml:space="preserve">
          <source>Tamil</source>
          <target state="translated">Tamil</target>
        </trans-unit>
        <trans-unit id="cea42d26ebd4929ac343e1a6d381b343d198a94f" translate="yes" xml:space="preserve">
          <source>Target Names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb0ddf9221c03b806b03c209e8366000124aa15" translate="yes" xml:space="preserve">
          <source>Task</source>
          <target state="translated">Task</target>
        </trans-unit>
        <trans-unit id="df740b79240b1ed7d5039a52848bff953794ae64" translate="yes" xml:space="preserve">
          <source>Task Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586e90006bbbcd684ab54ec3ea76e4098393f572" translate="yes" xml:space="preserve">
          <source>Tatar</source>
          <target state="translated">Tatar</target>
        </trans-unit>
        <trans-unit id="d14dd0f1027c9118f0a2c6414bff0d3fbb7c8297" translate="yes" xml:space="preserve">
          <source>Technical Differences Between Electron and NW.js (formerly node-webkit)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea6c03461dc3a543514f149ca6bb793d0a9e158a" translate="yes" xml:space="preserve">
          <source>Telugu</source>
          <target state="translated">Telugu</target>
        </trans-unit>
        <trans-unit id="7de91f3e9d75a52bb4c67b291e19d61e60d41099" translate="yes" xml:space="preserve">
          <source>Template Image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f4c40bafaf925c90d8aec2fb8fe82177a28538" translate="yes" xml:space="preserve">
          <source>Template images consist of black and clear colors (and an alpha channel). Template images are not intended to be used as standalone images and are usually mixed with other content to create the desired final appearance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0db7be1461de15be97b4fcf849f0ce026908fa" translate="yes" xml:space="preserve">
          <source>Template:</source>
          <target state="translated">Template:</target>
        </trans-unit>
        <trans-unit id="f597cdd5c3c89fe269776fca18c862a026294b15" translate="yes" xml:space="preserve">
          <source>Terse responses that provide neither additional context nor supporting detail are not helpful or professional. To many, such responses are annoying and unfriendly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b3791a94489341394b02e06d475b9a10d864b3" translate="yes" xml:space="preserve">
          <source>Test functionality using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fcdbe88dfea7bef908cb935c5e6a5a7cc750c5d" translate="yes" xml:space="preserve">
          <source>Test your changes conform to the project coding style using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">Testing</target>
        </trans-unit>
        <trans-unit id="66bb682e02caf9ddc029a0c2316d21b9d64ccfae" translate="yes" xml:space="preserve">
          <source>Testing and Debugging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b87088e3905b59b59b4a799f15c55321f33e99c" translate="yes" xml:space="preserve">
          <source>Testing on Headless CI Systems (Travis CI, Jenkins)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b199b027369ad4d90d0312908b79cd8855d69615" translate="yes" xml:space="preserve">
          <source>Testing on Headless CI Systems (Travis, Jenkins)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39fdec1194d94212b871a28b2aa04a73cd40fce1" translate="yes" xml:space="preserve">
          <source>Tests</source>
          <target state="translated">Tests</target>
        </trans-unit>
        <trans-unit id="a722e0bd49de206034a1eab35e631a36cab05fe7" translate="yes" xml:space="preserve">
          <source>Tests that include native modules (e.g. &lt;code&gt;runas&lt;/code&gt;) can't be executed with the debug build (see &lt;a href=&quot;https://github.com/electron/electron/issues/2558&quot;&gt;#2558&lt;/a&gt; for details), but they will work with the release build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f57c1784bd97f2d870b0ed9e38ca45dff50c643" translate="yes" xml:space="preserve">
          <source>Text selection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32767e0541fe7038ff8d87e7b8aed17f49474f8" translate="yes" xml:space="preserve">
          <source>Thai</source>
          <target state="translated">Thai</target>
        </trans-unit>
        <trans-unit id="fbb60eaf6f45c9af5307617f93cfba5afc963630" translate="yes" xml:space="preserve">
          <source>That level of modularity and extendability ensures that all developers working with Electron, both big and small in team-size, are never restricted in what they can or cannot do at any time during their development lifecycle. However, for many developers, one of the community-driven boilerplates or command line tools might make it dramatically easier to compile, package, and release an app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd22760d2471b9fe162b9358078abedcb3b5b880" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../api/web-contents#event-before-input-event&quot;&gt;&lt;code&gt;before-input-event&lt;/code&gt;&lt;/a&gt; event is emitted before dispatching &lt;code&gt;keydown&lt;/code&gt; and &lt;code&gt;keyup&lt;/code&gt; events in the page. It can be used to catch and handle custom shortcuts that are not visible in the menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="546f43fddeffeeda41d593ce9fea7c08e6acc480" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API&quot;&gt;Page Visibility API&lt;/a&gt; works as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50be31a1aec1cf6ff184e304cbd59137cf9d97d1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/api/browser-window.md#winsetmenumenu-linux-windows&quot;&gt;&lt;code&gt;setMenu&lt;/code&gt; method&lt;/a&gt; of browser windows can set the menu of certain browser windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18a39ea0a59ab8d6b7ac00ca6274e07ff4e3710" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/mapbox/node-pre-gyp&quot;&gt;&lt;code&gt;node-pre-gyp&lt;/code&gt; tool&lt;/a&gt; provides a way to deploy native Node modules with prebuilt binaries, and many popular modules are using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4285f06f330851132a1bb653b9f3ed2e10705d5e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/sindresorhus/awesome-electron#boilerplates&quot;&gt;&quot;Awesome Electron&quot; list&lt;/a&gt; contains more tools and boilerplates to choose from. If you find the length of the list intimidating, don't forget that adding tools as you go along is a valid approach, too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d4924ea4b8c06c6a5af32fe6dcfdc2d9472e9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-x&lt;/code&gt; flag should be used with any required module that is already exposed in the preload scope, and tells browserify to use the enclosing &lt;code&gt;require&lt;/code&gt; function for it. &lt;code&gt;--insert-global-vars&lt;/code&gt; will ensure that &lt;code&gt;process&lt;/code&gt;, &lt;code&gt;Buffer&lt;/code&gt; and &lt;code&gt;setImmediate&lt;/code&gt; are also taken from the enclosing scope(normally browserify injects code for those).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07787c413e40de525905bace4028a285133a7977" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrowserWindow&lt;/code&gt; class has the following static methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb74cf64078c3266f27fdc27672e6d77567d9c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrowserWindowProxy&lt;/code&gt; object has the following instance methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e8026a49cfe035502c70155d7822608b823c7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrowserWindowProxy&lt;/code&gt; object has the following instance properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="378c32718c3701cfe2b78f42dbf353799ed3e872" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrowserWindowProxy&lt;/code&gt; object is returned from &lt;code&gt;window.open&lt;/code&gt; and provides limited functionality with the child window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e205851e02ff44e952b5b6432b8733e0d512cc1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Display&lt;/code&gt; object represents a physical display connected to the system. A fake &lt;code&gt;Display&lt;/code&gt; may exist on a headless system, or a &lt;code&gt;Display&lt;/code&gt; may correspond to a remote, virtual display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36111e3a5ab27ddad11383f671b1db57b263f884" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HOME=~/.electron-gyp&lt;/code&gt; changes where to find development headers. The &lt;code&gt;--target=1.2.3&lt;/code&gt; is version of Electron. The &lt;code&gt;--dist-url=...&lt;/code&gt; specifies where to download the headers. The &lt;code&gt;--arch=x64&lt;/code&gt; says the module is built for 64bit system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9514231a4bc92a133c52dca0d2e94a52bdd7b4cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Menu&lt;/code&gt; class is only available in the main process, but you can also use it in the render process via the &lt;a href=&quot;remote&quot;&gt;&lt;code&gt;remote&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90637a5eccddf5840df8977ac78bf5a858511ee0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Notification&lt;/code&gt; class has the following static methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95804347995e70d453f68b137daf116055a4d34c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Stats&lt;/code&gt; object returned by &lt;code&gt;fs.stat&lt;/code&gt; and its friends on files in &lt;code&gt;asar&lt;/code&gt; archives is generated by guessing, because those files do not exist on the filesystem. So you should not trust the &lt;code&gt;Stats&lt;/code&gt; object except for getting file size and checking file type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095dd42a57b5876b1a6eb4597c1c2e6d0fd7fe76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Super&lt;/code&gt; key is mapped to the &lt;code&gt;Windows&lt;/code&gt; key on Windows and Linux and &lt;code&gt;Cmd&lt;/code&gt; on macOS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548888cfaa24b5e46bb879ba09c005e135f4e50f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Tray&lt;/code&gt; class has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b63c9111b71a3a4ecd76b489350d61f921c316d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Tray&lt;/code&gt; module emits the following events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49db5017dbb7fcd31b41d7c2bbd8e4e2ef8bd894" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;acceptLanguages&lt;/code&gt; must a comma separated ordered list of language codes, for example &lt;code&gt;&quot;en-US,fr,de,ko,zh-CN,ja&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15a23f3e4538bb79d20fd17bb0e7e16fa3b3f59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app&lt;/code&gt; object emits the following events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002fdff755f07b750c740ea76c9ad4d8538566c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app&lt;/code&gt; object has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1acceddcd94f2f7ba1e55e4b2100588ac1d786" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;autoUpdater&lt;/code&gt; object emits the following events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4e5e4aebb061efee47a8a13fcf6a4b5cc16b96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;autoUpdater&lt;/code&gt; object has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a18bd191c6bb3e87e89299d68faf09f0ac3a17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;blur&lt;/code&gt; filter only applies to the web page, so there is no way to apply blur effect to the content below the window (i.e. other applications open on the user's system).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2355778305a7074fcec2fb4ec88d449e5a1e40b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bounds&lt;/code&gt; of this tray icon as &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9dbc7cd3bcff2b75b0f1d3596349050baee4036" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;browserWindow&lt;/code&gt; argument allows the dialog to attach itself to a parent window, making it modal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63a7588ba2bc1f88e743b453cf4a04f1f17b9355" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;browserWindow&lt;/code&gt; argument is ignored since it is not possible to make this confirmation dialog modal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5396c28a26b135b4e02d8c03a179881499cbc516" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;buttons&lt;/code&gt; is an array of &lt;code&gt;Button&lt;/code&gt; objects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85420db83103b60313c540377497e810fdfe12c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; function is expected to be called back with user credentials:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ea095cd807318dc09f88cb0623c0b9f76a5c12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; has to be called with an &lt;code&gt;response&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722e658697e82305d3fc4ad9883c4ea54a96e299" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; is guaranteed to be executed after the &lt;code&gt;ready&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt; gets emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00dd859c40cd9cb490ab9fe3f58740b20b89324" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(error, data)&lt;/code&gt; on completion. The &lt;code&gt;data&lt;/code&gt; is a &lt;code&gt;Buffer&lt;/code&gt; that contains the generated PDF data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356f68b035169a45ce9d444a247220b106430430" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; will be called with a boolean that indicates whether there is already a handler for &lt;code&gt;scheme&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe244816958e1ab626feaede5fa1d3dbe5730b37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;child&lt;/code&gt; window will always show on top of the &lt;code&gt;top&lt;/code&gt; window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2313446db8e81753e97957c071d74a94bd65f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clipboard&lt;/code&gt; module has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb07e41210d7fff1788acac73dfb010bb237c483" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contentTracing&lt;/code&gt; module has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93991c1e8a60fa256116cc32be4c8bda608260fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crashReporter&lt;/code&gt; module has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241b7d90fa34196856ed435b3363c3b6a90d07c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data&lt;/code&gt; event is the usual method of transferring response data into applicative code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403f5086c41f36c4fef65505be759177ba388421" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;desktop&lt;/code&gt; type places the window at the desktop background window level (&lt;code&gt;kCGDesktopWindowLevel - 1&lt;/code&gt;). Note that desktop window will not receive focus, keyboard or mouse events, but you can use &lt;code&gt;globalShortcut&lt;/code&gt; to receive input sparingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91ffc57c958c7d8acdb45b0a7b46f1817c75746" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;desktopCapturer&lt;/code&gt; module has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c86af2d3eca32ea6c29be53122248ebc912a2db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;devToolsWebContents&lt;/code&gt; must not have done any navigation, and it should not be used for other purposes after the call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936fe58c56fb05911024b85cff388024ba3116ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dialog&lt;/code&gt; module has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4095e62c7ce99006c409a16aa80713cfe7c69501" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dirtyRect&lt;/code&gt; is an object with &lt;code&gt;x, y, width, height&lt;/code&gt; properties that describes which part of the page was repainted. If &lt;code&gt;onlyDirty&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;frameBuffer&lt;/code&gt; will only contain the repainted area. &lt;code&gt;onlyDirty&lt;/code&gt; defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f576a2a158a83cd7ce5968c7932e1f336b7007" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;downloadItem&lt;/code&gt; object has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6c50abf3a121448cce42cd5e2c77e7b44b0029" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;electron&lt;/code&gt; module exposes features in namespaces. As examples, the lifecycle of the application is managed through &lt;code&gt;electron.app&lt;/code&gt;, windows can be created using the &lt;code&gt;electron.BrowserWindow&lt;/code&gt; class. A simple &lt;code&gt;main.js&lt;/code&gt; file might wait for the application to be ready and open a window:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e713198ae5aa3d7860ac6a3ebb58bc755e36869" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;eval()&lt;/code&gt; method has precisely one mission: To evaluate a series of characters as JavaScript and execute it. It is a required method whenever you need to evaluate code that is not known ahead of time. While legitimate use cases exist, like any other code generators, &lt;code&gt;eval()&lt;/code&gt; is difficult to harden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="019cd8312f1a5fda260bfd332d18f88cd5919fe5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;event&lt;/code&gt; object passed to the &lt;code&gt;callback&lt;/code&gt; has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24c53e04a1e278fe4236904cb31e9fccf0e561f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extensions&lt;/code&gt; array should contain extensions without wildcards or dots (e.g. &lt;code&gt;'png'&lt;/code&gt; is good but &lt;code&gt;'.png'&lt;/code&gt; and &lt;code&gt;'*.png'&lt;/code&gt; are bad). To show all files, use the &lt;code&gt;'*'&lt;/code&gt; wildcard (no other wildcard is supported).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d501c675b0d84ae308df640a7d8d0a5378ef74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;features&lt;/code&gt; string follows the format of standard browser, but each feature has to be a field of &lt;code&gt;BrowserWindow&lt;/code&gt;'s options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ffd4d3baf2d1de08f14cfdc6edb75368339278" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filter&lt;/code&gt; object has a &lt;code&gt;urls&lt;/code&gt; property which is an Array of URL patterns that will be used to filter out the requests that do not match the URL patterns. If the &lt;code&gt;filter&lt;/code&gt; is omitted then all requests will be matched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfee38503c0250eb4e4343bcbcc1335f4e55bda4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filters&lt;/code&gt; specifies an array of file types that can be displayed or selected when you want to limit the user to a specific type. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a171949c0c23f49efff8c99983f73afc8dcbb4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filters&lt;/code&gt; specifies an array of file types that can be displayed, see &lt;code&gt;dialog.showOpenDialog&lt;/code&gt; for an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1111c9edc37ca4ec0da599ababcc1c555f969fba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flags&lt;/code&gt; is an array that can include following &lt;code&gt;String&lt;/code&gt;s:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1efcf6d7d014bb9491f1998332ceaecd85bc09ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;frameBuffer&lt;/code&gt; is a &lt;code&gt;Buffer&lt;/code&gt; that contains raw pixel data. On most machines, the pixel data is effectively stored in 32bit BGRA format, but the actual representation depends on the endianness of the processor (most modern processors are little-endian, on machines with big-endian processors the data is in 32bit ARGB format).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fcc494ee17ffd205cbbac07d73e00106aaa27c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;globalShortcut&lt;/code&gt; module can register/unregister a global keyboard shortcut with the operating system so that you can customize the operations for various shortcuts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e81a564399a9942cb864d440b50ddece338d8694" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;globalShortcut&lt;/code&gt; module has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e46ae7cad787cdb21735231e0621ab5e4b87b0e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hslShift&lt;/code&gt; is applied to the image with the following rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011be400a53eb4b292815de9c842d46cdff7274b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id&lt;/code&gt; of the subscriber is returned, which can be used to unsubscribe the &lt;code&gt;event&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc3adee636a52c8789e208afca9c876a4f682fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inAppPurchase&lt;/code&gt; module emits the following events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f56c660b8b8c9904524895909d5a74c1b2fbb582" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inAppPurchase&lt;/code&gt; module has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb362b5518a8a407a6aad6446c86825b49e86e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipcMain&lt;/code&gt; module has the following method to listen for events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7799500275679df5ddea761fe0657908f30a1ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipcMain&lt;/code&gt; module is an instance of the &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;EventEmitter&lt;/a&gt; class. When used in the main process, it handles asynchronous and synchronous messages sent from a renderer process (web page). Messages sent from a renderer will be emitted to this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8265e24d240bfe6a3dfe63b6b278908fe5d9519a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipcRenderer&lt;/code&gt; module has the following method to listen for events and send messages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c51c2ec9e808b95e61dd514549310ac0facf95f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipcRenderer&lt;/code&gt; module is an instance of the &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;EventEmitter&lt;/a&gt; class. It provides a few methods so you can send synchronous and asynchronous messages from the render process (web page) to the main process. You can also receive replies from the main process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300264d1e0671551832d554597a0bc97a0d28e8c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;label&lt;/code&gt; and &lt;code&gt;accelerator&lt;/code&gt; values are optional when using a &lt;code&gt;role&lt;/code&gt; and will default to appropriate values for each platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af38248cb8f69543f813cdf21b3e807251021ee5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;landscape&lt;/code&gt; will be ignored if &lt;code&gt;@page&lt;/code&gt; CSS at-rule is used in the web page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf959665216876f492e4618b1a0129bb27d0817" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; just before a request is going to be sent to the server, modifications of previous &lt;code&gt;onBeforeSendHeaders&lt;/code&gt; response are visible by the time this listener is fired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9215c04064a4ed2450d3abb28463a9e692fda80d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when a request is completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5518520eb40cc63810d6c31a0f90284102462216" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when a server initiated redirect is about to occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be75ee692d0f3eca2c167129b260d4ce5a1fe1a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when an error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f164f04e3efe8be2764610b61e71394fe5d505d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when first byte of the response body is received. For HTTP requests, this means that the status line and response headers are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba486b1778a17fa02402e64a5245797eeb7c813d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details, callback)&lt;/code&gt; before sending an HTTP request, once the request headers are available. This may occur after a TCP connection is made to the server, but before any http data is sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0db93f48b5d14a434faf475fdbe51cc74f2ac6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details, callback)&lt;/code&gt; when HTTP response headers of a request have been received.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f8325f73304e0b2fc67501df6524daf1b7ae9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details, callback)&lt;/code&gt; when a request is about to occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e21ff6cd4033f75abd16fef09a34ef9cbb8db5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;main.js&lt;/code&gt; should create windows and handle all the system events your application might encounter. A more complete version of the above example might open developer tools, handle the window being closed, or re-create windows on macOS if the user clicks on the app's icon in the dock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e156f3425bc64cf234216f3a4ad15f1262e55180" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;master&lt;/code&gt; branch is versionless; only stabilization branches contain version information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd69d2937edbb31950318c4602ffe9667bf7641d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;master&lt;/code&gt; branch will always contain &lt;code&gt;0.0.0-dev&lt;/code&gt; in its &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d44a4be769d34f100f7fffaa317dd46cca03d7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;menu&lt;/code&gt; class has the following static methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92922bc283ff2b5f563f918d93e631fae8ea780e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;menu&lt;/code&gt; object has the following instance methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d9d983763e23320f63c15ebadcfd58353d5512" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;message&lt;/code&gt; argument is not used, as the OS provides its own confirmation dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8e2ef655fd474b07350ac6c7ca3a95b52fd785" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nativeImage&lt;/code&gt; module has the following methods, all of which return an instance of the &lt;code&gt;NativeImage&lt;/code&gt; class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a528025aee2b6d56eef29e9a2494554d6c37e589" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;net&lt;/code&gt; API can be used only after the application emits the &lt;code&gt;ready&lt;/code&gt; event. Trying to use the module before the &lt;code&gt;ready&lt;/code&gt; event will throw an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e9fc6061228c1537b0f0d93df762eb2393612c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;net&lt;/code&gt; module API has been specifically designed to mimic, as closely as possible, the familiar Node.js API. The API components including classes, methods, properties and event names are similar to those commonly used in Node.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e31f2daa5204b7f21cf12768d4fdc274b416c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;net&lt;/code&gt; module has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b747748bc902166a3602c80be0b1f6495180c577" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;net&lt;/code&gt; module is a client-side API for issuing HTTP(S) requests. It is similar to the &lt;a href=&quot;https://nodejs.org/api/http.html&quot;&gt;HTTP&lt;/a&gt; and &lt;a href=&quot;https://nodejs.org/api/https.html&quot;&gt;HTTPS&lt;/a&gt; modules of Node.js but uses Chromium's native networking library instead of the Node.js implementation, offering better support for web proxies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb922a08b94d3505f969ca109b706e874110a130" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nodeIntegrationInWorker&lt;/code&gt; can be used independent of &lt;code&gt;nodeIntegration&lt;/code&gt;, but &lt;code&gt;sandbox&lt;/code&gt; must not be set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6581436836cfa57252c1cca1308513606ec18ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;position&lt;/code&gt; attribute of &lt;code&gt;MenuItem&lt;/code&gt; has the form &lt;code&gt;[placement]=[id]&lt;/code&gt;, where &lt;code&gt;placement&lt;/code&gt; is one of &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;after&lt;/code&gt;, or &lt;code&gt;endof&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; is the unique ID of an existing item in the menu:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35cc56a47175cc5030b31c1cf856950911375160" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;position&lt;/code&gt; is only available on Windows, and it is (0, 0) by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0d3989f4c443dde3dd1eab4ce1bf29d8645057" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;powerMonitor&lt;/code&gt; module emits the following events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d8528431e6e2308391f888af7a45db060216b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;powerSaveBlocker&lt;/code&gt; module has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358dd2d79dff7a34bd03fa85e1fe7c4751948f15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prepare-release&lt;/code&gt; script will trigger the builds via API calls. To monitor the build progress, see the following pages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb25017d09d12310bf78c3b0b503ec32d098fa15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;process&lt;/code&gt; object has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b2e6e59ddf7a1cdc951ec5bbde5679ce338514" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;process&lt;/code&gt; object in the main process. This is the same as &lt;code&gt;remote.getGlobal('process')&lt;/code&gt; but is cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c114dda8df33944bf9644233ca4e48b6741e79dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;protocol&lt;/code&gt; module has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd616142c9b1da65c3cad2b3338fafedd2935f8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;provider&lt;/code&gt; must be an object that has a &lt;code&gt;spellCheck&lt;/code&gt; method that returns whether the word passed is correctly spelled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd33f21d8a009f756ed1aac013d5fd3de5b45b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;proxyBypassRules&lt;/code&gt; is a comma separated list of rules described below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58404a68412b49fd1cbbe75d295d8fc17f95948c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;proxyRules&lt;/code&gt; has to follow the rules below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84bbd26f2ff6ec1962ac441f908309e1bc7a83db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remote&lt;/code&gt; module has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1298a808b09704a87ed114a571e897e21d45a884" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remote&lt;/code&gt; module provides a simple way to do inter-process communication (IPC) between the renderer process (web page) and the main process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d7df063ac5a3584ba0b77532f9778df1196547" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;repl&lt;/code&gt; module provides a REPL implementation that can be accessed using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36ba45cd5d963c9a70566790479735504ca487a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;role&lt;/code&gt; property can have following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6608156889a4fa5318ff0313d856b3b6dc07c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;screen&lt;/code&gt; module emits the following events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc991c240048cdabdab92374361368ae85195ed1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;screen&lt;/code&gt; module has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbeb11871421b95c101bb5d6fb82d63e08970826" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;session&lt;/code&gt; module can be used to create new &lt;code&gt;Session&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3481326c81f1d35bcca80a22390f482c4aebc224" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;session&lt;/code&gt; module has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539734ec469f572dbdf5e703b654a370f3a5f521" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;session&lt;/code&gt; module has the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d0b0b61e564f6da294fad88765bd81248d6c52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shell&lt;/code&gt; module has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03d8fed6535206b4075d9c69e2a5ea3da4d9cde" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shell&lt;/code&gt; module provides functions related to desktop integration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302311f6e8c7212f24d35cc403438b58e3fd818e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src&lt;/code&gt; attribute can also accept data URLs, such as &lt;code&gt;data:text/plain,Hello, world!&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c038f24be666c6c8decc27728f86fa426f53c877" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;state&lt;/code&gt; can be one of following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b3563ff6b4bb91671c2c2f2985fa055d8348c11" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;systemPreferences&lt;/code&gt; object emits the following events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50fe0225c880579bccc99b1e28f378d94787ba86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;textured&lt;/code&gt; type adds metal gradient appearance (&lt;code&gt;NSTexturedBackgroundWindowMask&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80683066099d2b02bb828424b5205a6d8c073610" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;uploadData&lt;/code&gt; is an array of &lt;code&gt;UploadData&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dccd2aa264a7a22e9e34024147d6e051dda98a5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; can be a remote address (e.g. &lt;code&gt;http://&lt;/code&gt;) or a path to a local HTML file using the &lt;code&gt;file://&lt;/code&gt; protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d42dc1f925cb0dd172848fbd14de0098b1958c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; corresponds to the navigation entry requesting the client certificate and &lt;code&gt;callback&lt;/code&gt; can be called with an entry filtered from the list. Using &lt;code&gt;event.preventDefault()&lt;/code&gt; prevents the application from using the first certificate from the store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead3e68794e45920d2721fa26bd426ca485a37fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webFrame&lt;/code&gt; module has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70bbea7daceb37cfdc1db49b4bc8447c74d9d422" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webview&lt;/code&gt; tag has the following attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a6f3875f9cda232f4f5eb3c5363c8e2778dfce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webview&lt;/code&gt; tag has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7eb9f238397f1aa98cdc508b599a5e9be67999" translate="yes" xml:space="preserve">
          <source>The API is based on the &lt;a href=&quot;https://developer.chrome.com/extensions/permissions&quot;&gt;Chromium permissions API&lt;/a&gt; and implements the same types of permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3b1592ea369c6aee1bcc228913fb6a081059b1" translate="yes" xml:space="preserve">
          <source>The API is only available in session's &lt;code&gt;will-download&lt;/code&gt; callback function. If user doesn't set the save path via the API, Electron will use the original routine to determine the save path(Usually prompts a save dialog).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75917ee7ddf41b2b07e7b99872a198b129538a14" translate="yes" xml:space="preserve">
          <source>The API uses the Windows Registry and LSCopyDefaultHandlerForURLScheme internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec55df529521dd3ab286f51777a4f69e7c047b5" translate="yes" xml:space="preserve">
          <source>The API uses the Windows Registry and LSSetDefaultHandlerForURLScheme internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bcad7f559199b16f00560b8d1f569927742f9ea" translate="yes" xml:space="preserve">
          <source>The ASAR format was created primarily to improve performance on Windows... TODO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679cc05bca3e1e8fd7b8d049e0a3d3d37f22503c" translate="yes" xml:space="preserve">
          <source>The C Run-time Library (CRT) is the part of the C++ Standard Library that incorporates the ISO C99 standard library. The Visual C++ libraries that implement the CRT support native code development, and both mixed native and managed code, and pure managed code for .NET development.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ab9ef9b58e1d430a986bb1158e6a2dd7ba3b55" translate="yes" xml:space="preserve">
          <source>The C++ code uses a lot of Chromium's abstractions and types, so it's recommended to get acquainted with them. A good place to start is Chromium's &lt;a href=&quot;https://www.chromium.org/developers/coding-style/important-abstractions-and-data-structures&quot;&gt;Important Abstractions and Data Structures&lt;/a&gt; document. The document mentions some special types, scoped types (that automatically release their memory when going out of scope), logging mechanisms etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d900f892d2734b5afc607fbf947c8bb0f3c75b5" translate="yes" xml:space="preserve">
          <source>The Chrome version of Electron is usually bumped within one or two weeks after a new stable Chrome version gets released. This estimate is not guaranteed and depends on the amount of work involved with upgrading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11af2b2cbe42d313dcc02c8ba66bab4ba1e5ac86" translate="yes" xml:space="preserve">
          <source>The DOM's File interface provides abstraction around native files in order to let users work on native files directly with the HTML5 file API. Electron has added a &lt;code&gt;path&lt;/code&gt; attribute to the &lt;code&gt;File&lt;/code&gt; interface which exposes the file's real path on filesystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67424874b1092e40e703a68f4543158d74245d8a" translate="yes" xml:space="preserve">
          <source>The DevTools in an Electron browser window can only debug JavaScript that's executed in that window (i.e. the web pages). To debug JavaScript that's executed in the main process you will need to use an external debugger and launch Electron with the &lt;code&gt;--inspect&lt;/code&gt; or &lt;code&gt;--inspect-brk&lt;/code&gt; switch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7697146094d0f2f337708d521985c083814a05c" translate="yes" xml:space="preserve">
          <source>The Dialog is opened from Electron's main thread. If you want to use the dialog object from a renderer process, remember to access it using the remote:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3408643c2b39f150bb6c8426902e0f24c6f93f45" translate="yes" xml:space="preserve">
          <source>The Electron account's credentials are kept by GitHub. &quot;Electron - NPM&quot; for the URL &quot;&lt;a href=&quot;https://www.npmjs.com/login%22&quot;&gt;https://www.npmjs.com/login&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e683e1d7d3da98dfd59ff9337dfba925c2851a8b" translate="yes" xml:space="preserve">
          <source>The Electron repository has a few vendored dependencies, found in the &lt;a href=&quot;https://github.com/electron/electron/tree/master/vendor&quot;&gt;/vendor&lt;/a&gt; directory. Occasionally you might see a message like this when running &lt;code&gt;git status&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88820826bbbc3baa83a6828e19bc35fd6b3eb2e9" translate="yes" xml:space="preserve">
          <source>The Python version we are using now is Python 2.7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f690d466597ab142abf88aeb48da2b29abd23b" translate="yes" xml:space="preserve">
          <source>The Unity DE also has a similar feature that allows you to specify the progress bar in the launcher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37923186c114f05a55a85afbb9ce8bd82d595e5" translate="yes" xml:space="preserve">
          <source>The Windbg symbol path is configured with a string value delimited with asterisk characters. To use only the Electron symbol server, add the following entry to your symbol path (&lt;strong&gt;Note:&lt;/strong&gt; you can replace &lt;code&gt;c:\code\symbols&lt;/code&gt; with any writable directory on your computer, if you'd prefer a different location for downloaded symbols):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e20ac73f33051ef798fc830d5c811160f5dc31" translate="yes" xml:space="preserve">
          <source>The Windows 10 SDK, &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk&quot;&gt;downloadable here&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b1285d4772ecec63e27725c792888155a3349f" translate="yes" xml:space="preserve">
          <source>The above would only run spec modules matching &lt;code&gt;menu&lt;/code&gt;, which is useful for anyone who's working on tests that would otherwise be at the very end of the testing cycle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c625b7623672f8fd22e91c0510e4c7196a733295" translate="yes" xml:space="preserve">
          <source>The app will immediately be paused, since Electron sets the app's name on launch:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3a3538bbcaba9543e6108eb12d6e3226594901" translate="yes" xml:space="preserve">
          <source>The architecture of Pepper Flash plugin has to match Electron's one. On Windows, a common error is to use 32bit version of Flash plugin against 64bit version of Electron.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0371f8e990439f7a02a892607be6c6c1aa14ca1" translate="yes" xml:space="preserve">
          <source>The architecture of the module has to match Electron's architecture (ia32 or x64).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58f3f45afd47bdf977f9729c58d77c8908ea3c8" translate="yes" xml:space="preserve">
          <source>The archives can not be modified so all Node APIs that can modify files will not work with &lt;code&gt;asar&lt;/code&gt; archives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a060018e068697b5647ac80282c2a9d09c40be" translate="yes" xml:space="preserve">
          <source>The basic rule is: if a module is &lt;a href=&quot;https://en.wikipedia.org/wiki/Graphical_user_interface&quot;&gt;GUI&lt;/a&gt; or low-level system related, then it should be only available in the main process. You need to be familiar with the concept of &lt;a href=&quot;../tutorial/quick-start#main-process&quot;&gt;main process vs. renderer process&lt;/a&gt; scripts to be able to use those modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebdd3e402b9b0ecb9ed69476766e0f23e9710e04" translate="yes" xml:space="preserve">
          <source>The beta is considered &lt;em&gt;generally stable&lt;/em&gt; and it is published again as a non-beta under &lt;code&gt;2.0.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a40a3921de74217cab0e0ecf818211585ec95e3" translate="yes" xml:space="preserve">
          <source>The bootstrap script will download all necessary build dependencies and create the build project files. Notice that we're using &lt;a href=&quot;https://ninja-build.org/&quot;&gt;ninja&lt;/a&gt; to build Electron so there is no Xcode project generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25ed6372fd4ca19b4760e84e58fbda285fd4119" translate="yes" xml:space="preserve">
          <source>The bootstrap script will download all necessary build dependencies and create the build project files. Notice that we're using &lt;code&gt;ninja&lt;/code&gt; to build Electron so there is no Visual Studio project generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95202c1d36a2764e88f2ccd6ce4d585cf9750b7" translate="yes" xml:space="preserve">
          <source>The bootstrap script will download all necessary build dependencies and create the build project files. You must have Python 2.7.x for the script to succeed. Downloading certain files can take a long time. Notice that we are using &lt;code&gt;ninja&lt;/code&gt; to build Electron so there is no &lt;code&gt;Makefile&lt;/code&gt; generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d1572aa8488a3529ae6511d651a6a0d1000c3f" translate="yes" xml:space="preserve">
          <source>The built executable will be under &lt;code&gt;./out/Default&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a6ded8f0d9ef25e412395b22c18a38e3309740" translate="yes" xml:space="preserve">
          <source>The built-in modules in the main process are added as getters in the &lt;code&gt;remote&lt;/code&gt; module, so you can use them directly like the &lt;code&gt;electron&lt;/code&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cacf868ee4dce7e4fc278f0df03ca45ef1cc5b24" translate="yes" xml:space="preserve">
          <source>The cache contains the version's official zip file as well as a checksum, stored as a text file. A typical cache might look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4635ce3be0aef8aff745b8c96e66bf18b41fb7aa" translate="yes" xml:space="preserve">
          <source>The command line switches have to be passed before the &lt;code&gt;ready&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt; module gets emitted, and the page that uses this plugin must have plugin enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb547774a63521a187ad3bb21ddd86419474ac03" translate="yes" xml:space="preserve">
          <source>The crash reporter will send the following data to the &lt;code&gt;submitURL&lt;/code&gt; as a &lt;code&gt;multipart/form-data&lt;/code&gt;&lt;code&gt;POST&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f40ef1f6e4ccf3e4bfe888ec95e68c123a4ab11" translate="yes" xml:space="preserve">
          <source>The creation of the &lt;code&gt;BrowserWindow&lt;/code&gt; is customizable via &lt;code&gt;WebContents&lt;/code&gt;'s &lt;code&gt;new-window&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84166f19e3821524c95b826a488cfad4a943b88" translate="yes" xml:space="preserve">
          <source>The current absolute position of the mouse pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3240c3c12bbda24aa64960666921821da1f01c" translate="yes" xml:space="preserve">
          <source>The custom dock is commonly used to add shortcuts to tasks the user wouldn't want to open the whole app window for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8cb86baaffbfe782d928d94296401cd40b1132c" translate="yes" xml:space="preserve">
          <source>The default behavior is to cancel all authentications, to override this you should prevent the default behavior with &lt;code&gt;event.preventDefault()&lt;/code&gt; and call &lt;code&gt;callback(username, password)&lt;/code&gt; with the credentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed37c59390ece33f402535de65017db6959cb55" translate="yes" xml:space="preserve">
          <source>The default building configuration is targeted for major desktop Linux distributions. To build for a specific distribution or device, the following information may help you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a836089b20b522142ba336af0ffba1b7ea6756df" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;getBitmap()&lt;/code&gt; and &lt;code&gt;toBitmap()&lt;/code&gt; is, &lt;code&gt;getBitmap()&lt;/code&gt; does not copy the bitmap data, so you have to use the returned Buffer immediately in current event loop tick, otherwise the data might be changed or destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9293338eb4ef937a2029304cfc21c780ed35545b" translate="yes" xml:space="preserve">
          <source>The easiest way to use this service is by installing &lt;a href=&quot;https://github.com/electron/update-electron-app&quot;&gt;update-electron-app&lt;/a&gt;, a Node.js module preconfigured for use with update.electronjs.org.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0a6a32dd6f0c1918523c114e06c2c6ed8cb2e1" translate="yes" xml:space="preserve">
          <source>The environment variables have to be set when executing the &lt;code&gt;bootstrap.py&lt;/code&gt; script, it won't work in the &lt;code&gt;build.py&lt;/code&gt; script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1775a2ba70be76e5cd9f2d2b5d87922c0e21f488" translate="yes" xml:space="preserve">
          <source>The existing webview will see the &lt;code&gt;destroy&lt;/code&gt; event and will then create a new webContents when a new url is loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45cd3e807c7fd694f209776f14d4d85d8e1c31c1" translate="yes" xml:space="preserve">
          <source>The extension will be remembered so you only need to call this API once, this API is not for programming use. If you try to add an extension that has already been loaded, this method will not return and instead log a warning to the console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807d917e174965f29f52692cbaf299ca8879915e" translate="yes" xml:space="preserve">
          <source>The files in &lt;code&gt;/chromium_src&lt;/code&gt; tend to be pieces of Chromium that aren't part of the content layer. For example to implement Pepper API, we need some wiring similar to what official Chrome does. We could have built the relevant sources as a part of &lt;a href=&quot;../glossary#libchromiumcontent&quot;&gt;libcc&lt;/a&gt; but most often we don't require all the features (some tend to be proprietary, analytics stuff) so we took parts of the code. These could have easily been patches in libcc, but at the time when these were written the goal of libcc was to maintain very minimal patches and chromium_src changes tend to be big ones. Also, note that these patches can never be upstreamed unlike other libcc patches we maintain now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457233dd3e65c7e4b1a26409a273fd1b1bafea77" translate="yes" xml:space="preserve">
          <source>The first 3 options are trace recording modes and hence mutually exclusive. If more than one trace recording modes appear in the &lt;code&gt;traceOptions&lt;/code&gt; string, the last one takes precedence. If none of the trace recording modes are specified, recording mode is &lt;code&gt;record-until-full&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efe33d64ae8fc2ca88edad27924431ab14a57de" translate="yes" xml:space="preserve">
          <source>The first line should:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b24538741e2c956585d562cdd1ad703db214882" translate="yes" xml:space="preserve">
          <source>The first step is to go to the &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;Releases&lt;/a&gt; page and delete the corrupted binaries with the &lt;code&gt;SHASUMS256.txt&lt;/code&gt; checksum file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ee1eed9747359cdb30aeeed257bcc687dedd46" translate="yes" xml:space="preserve">
          <source>The following CSP will allow Electron to execute scripts from the current website and from &lt;code&gt;apis.mydomain.com&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863e74b210263b70d8d1d74644d55dd0fcefdbcc" translate="yes" xml:space="preserve">
          <source>The following DOM events are available to the &lt;code&gt;webview&lt;/code&gt; tag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f9c4bc3e3eee333a74f8c923abc52e950ddc87" translate="yes" xml:space="preserve">
          <source>The following additional roles are available on &lt;em&gt;macOS&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2973ab61031b504aa1fcecc8e49986ff3a8af8f" translate="yes" xml:space="preserve">
          <source>The following environment variables are intended primarily for development and debugging purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac3260cead16a78938f601530def24b4ea4ac92" translate="yes" xml:space="preserve">
          <source>The following environment variables are intended primarily for use at runtime in packaged Electron applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d46353d4da755261f02826cc4e562d2285a35e8" translate="yes" xml:space="preserve">
          <source>The following events are available on instances of &lt;code&gt;Cookies&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c9e2a9a0a73dc882520d10b2ca079a0beef36f" translate="yes" xml:space="preserve">
          <source>The following events are available on instances of &lt;code&gt;Session&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b034f553ec80ef9a74ec658af3ef9d311b4f26ea" translate="yes" xml:space="preserve">
          <source>The following example code forwards all log messages to the embedder's console without regard for log level or other properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412f6394578caf90d6f08e305bc45dd7a499eb0c" translate="yes" xml:space="preserve">
          <source>The following example code navigates the &lt;code&gt;webview&lt;/code&gt; to &lt;code&gt;about:blank&lt;/code&gt; when the guest attempts to close itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e297c13288b5494f48c892304c4685e142c2f359" translate="yes" xml:space="preserve">
          <source>The following example code opens the new url in system's default browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c5cfe0246d651a35fd511efd2ba0f3ed22db5f" translate="yes" xml:space="preserve">
          <source>The following example shows how to capture video from a desktop window whose title is &lt;code&gt;Electron&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a5e64570d57b68bcc11e2010a4253a965aa1f32" translate="yes" xml:space="preserve">
          <source>The following example shows how to quit the application when the last window is closed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6a87feccae153d14a8090ee5f48f12c447861c" translate="yes" xml:space="preserve">
          <source>The following example shows how to write a string to the clipboard:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c6031b5e2c96305bec9706b7c67d3750fcd099" translate="yes" xml:space="preserve">
          <source>The following is a non-exhaustive list of why you may consider using the &lt;code&gt;net&lt;/code&gt; module instead of the native Node.js modules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6487e58f7fd63ed2be0c3a2a9c726a501b79eb1" translate="yes" xml:space="preserve">
          <source>The following is an example of automatically submitting a crash report to a remote server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2460efd3b194a8bb68bf2b7e9f8cab9d619bfca" translate="yes" xml:space="preserve">
          <source>The following methods are available on instances of &lt;code&gt;Cookies&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4edeb192e26fd5b685c6ec571fa25126485efea" translate="yes" xml:space="preserve">
          <source>The following methods are available on instances of &lt;code&gt;Session&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41bcf5a62a573a8cc5fb83b2b0ca3023bc5643f8" translate="yes" xml:space="preserve">
          <source>The following methods are available on instances of &lt;code&gt;WebRequest&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86154d83bccd7a4b57c68d8cd6f90d9c971f95d4" translate="yes" xml:space="preserve">
          <source>The following methods are available on instances of the &lt;code&gt;NativeImage&lt;/code&gt; class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3b5c7545a0293b6358e101905e854c70f4102a" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;MenuItem&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8656a694792848f68ade1e927e17424b474569c" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;Session&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def49f62a446c81186a380e2a1dce3115758979c" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBar&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb57d90554803861a88a2753b989f061a9f5dc27" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarButton&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20f464fbc40e27073060beed56e38762bf2ec5f" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarColorPicker&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ace2633b47d31b77187bb2daeb06860f123cc84" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarLabel&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9bb37fb754d6983049c81473d1ed7ee83c0529" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarPopover&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae481cb3e6e682837041ef8635daf8423012551" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarScrubber&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf2c708351aaff2edf23f053e2722905afcda326" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarSegmentedControl&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="195378df2cd4e2ad758131138b1fef6f60754314" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarSlider&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66529044801589f67c9319b12f81a0025eb3daa7" translate="yes" xml:space="preserve">
          <source>The following steps introduce a simple way to submit your app to Mac App Store. However, these steps do not ensure your app will be approved by Apple; you still need to read Apple's &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/AppDistributionGuide/SubmittingYourApp/SubmittingYourApp.html&quot;&gt;Submitting Your App&lt;/a&gt; guide on how to meet the Mac App Store requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893c7bb1e6d91b53055e3852294044b7cb67b593" translate="yes" xml:space="preserve">
          <source>The installer generated with Squirrel will create a shortcut icon with an &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx&quot;&gt;Application User Model ID&lt;/a&gt; in the format of &lt;code&gt;com.squirrel.PACKAGE_ID.YOUR_EXE_WITHOUT_DOT_EXE&lt;/code&gt;, examples are &lt;code&gt;com.squirrel.slack.Slack&lt;/code&gt; and &lt;code&gt;com.squirrel.code.Code&lt;/code&gt;. You have to use the same ID for your app with &lt;code&gt;app.setAppUserModelId&lt;/code&gt; API, otherwise Windows will not be able to pin your app properly in task bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90ed43ccd133ad2a69189c543d458bb4158ae61" translate="yes" xml:space="preserve">
          <source>The latest three release branches are supported by the Electron team. For example, if the latest release is 2.0.x, then the 2-0-x series is supported, as are the two previous release series 1-7-x and 1-8-x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873a6e801edc60a1c32293c8a502234ca368cf39" translate="yes" xml:space="preserve">
          <source>The main process creates web pages by creating &lt;code&gt;BrowserWindow&lt;/code&gt; instances. Each &lt;code&gt;BrowserWindow&lt;/code&gt; instance runs the web page in its own renderer process. When a &lt;code&gt;BrowserWindow&lt;/code&gt; instance is destroyed, the corresponding renderer process is also terminated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e57d2e2088d6bf8c5aa05e4f6662ae76ff4fa5e" translate="yes" xml:space="preserve">
          <source>The main process handles it by listening for &lt;code&gt;channel&lt;/code&gt; with &lt;a href=&quot;ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; module, and replies by setting &lt;code&gt;event.returnValue&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099f6cac6dff60632e157c5d20a0c768e8532de9" translate="yes" xml:space="preserve">
          <source>The main process handles it by listening for &lt;code&gt;channel&lt;/code&gt; with &lt;a href=&quot;ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8609c822b7c373ca2706e01a9ff9173dcf0b4260" translate="yes" xml:space="preserve">
          <source>The main process manages all web pages and their corresponding renderer processes. Each renderer process is isolated and only cares about the web page running in it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d23cd92e3578986785fa874e0009a06841da0b" translate="yes" xml:space="preserve">
          <source>The main process script is just like a normal Node.js script:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30517931a8f87b0311fae62c14d68aeb359fd488" translate="yes" xml:space="preserve">
          <source>The main process, commonly a file named &lt;code&gt;main.js&lt;/code&gt;, is the entry point to every Electron app. It controls the life of the app, from open to close. It also manages native elements such as the Menu, Menu Bar, Dock, Tray, etc. The main process is responsible for creating each new renderer process in the app. The full Node API is built in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5bb90d65721405e2b6798587777de6453c9216" translate="yes" xml:space="preserve">
          <source>The method will also not return if the extension's manifest is missing or incomplete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1263854ac164eefd7b257aa2b5a4652d6be04b02" translate="yes" xml:space="preserve">
          <source>The methods of &lt;code&gt;WebRequest&lt;/code&gt; accept an optional &lt;code&gt;filter&lt;/code&gt; and a &lt;code&gt;listener&lt;/code&gt;. The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when the API's event has happened. The &lt;code&gt;details&lt;/code&gt; object describes the request. Passing &lt;code&gt;null&lt;/code&gt; as &lt;code&gt;listener&lt;/code&gt; will unsubscribe from the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02dfe6ee6ff7ce4a1b723feacfd9b47eeb84e18e" translate="yes" xml:space="preserve">
          <source>The module works like &lt;a href=&quot;https://github.com/electron/windows-installer&quot;&gt;&lt;code&gt;electron-winstaller&lt;/code&gt;&lt;/a&gt; and similar modules in that its scope is limited to building snap packages. You can install it with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb8604cf10f9ac649333a12bb463d49c84a13cf9" translate="yes" xml:space="preserve">
          <source>The most common case is to use template images for a menu bar icon so it can adapt to both light and dark menu bars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b94e875d0b85466a93df9fb0fac2134d2b4034a" translate="yes" xml:space="preserve">
          <source>The most comprehensive tool to debug individual renderer processes is the Chromium Developer Toolset. It is available for all renderer processes, including instances of &lt;code&gt;BrowserWindow&lt;/code&gt;, &lt;code&gt;BrowserView&lt;/code&gt;, and &lt;code&gt;WebView&lt;/code&gt;. You can open them programmatically by calling the &lt;code&gt;openDevTools()&lt;/code&gt; API on the &lt;code&gt;webContents&lt;/code&gt; of the instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9279298928bc0dfa7b7dabeac0471502dfbbce67" translate="yes" xml:space="preserve">
          <source>The name of the extension is returned by &lt;code&gt;BrowserWindow.addDevToolsExtension&lt;/code&gt;, and you can pass the name of the extension to the &lt;code&gt;BrowserWindow.removeDevToolsExtension&lt;/code&gt; API to unload it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a79e8d6966a4a2414fe7b9771b3c9f123cf632" translate="yes" xml:space="preserve">
          <source>The native Node modules are supported by Electron, but since Electron is very likely to use a different V8 version from the Node binary installed in your system, you have to manually specify the location of Electron's headers when building native modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7946f3aee148212b0466cff97ef58316736f962" translate="yes" xml:space="preserve">
          <source>The native type of the handle is &lt;code&gt;HWND&lt;/code&gt; on Windows, &lt;code&gt;NSView*&lt;/code&gt; on macOS, and &lt;code&gt;Window&lt;/code&gt; (&lt;code&gt;unsigned long&lt;/code&gt;) on Linux.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f5e2f019afcb5feb85a1c99c89b1e3ad5dffb2" translate="yes" xml:space="preserve">
          <source>The newly created &lt;code&gt;BrowserWindow&lt;/code&gt; will inherit the parent window's options by default. To override inherited options you can set them in the &lt;code&gt;features&lt;/code&gt; string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a89274ff334223332ddb2c643ba3507a28917fb" translate="yes" xml:space="preserve">
          <source>The number of buttons in thumbnail toolbar should be no greater than 7 due to the limited room. Once you setup the thumbnail toolbar, the toolbar cannot be removed due to the platform's limitation. But you can call the API with an empty array to clean the buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125ea8def83a481dab8fbddf8d5749a2b90d5cbe" translate="yes" xml:space="preserve">
          <source>The official symbol server URL for Electron is &lt;a href=&quot;https://electron-symbols.githubapp.com&quot;&gt;https://electron-symbols.githubapp.com&lt;/a&gt;. You cannot visit this URL directly, you must add it to the symbol path of your debugging tool. In the examples below, a local cache directory is used to avoid repeatedly fetching the PDB from the server. Replace &lt;code&gt;c:\code\symbols&lt;/code&gt; with an appropriate cache directory on your machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008325aba6751725e103a92cb088a5a8c8c92af9" translate="yes" xml:space="preserve">
          <source>The old &quot;Quick Start&quot; document that used to live here has been split up into two documents:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8cd0d5e0019201e7bd835902c5ff0cd1f02674" translate="yes" xml:space="preserve">
          <source>The only way to load a native module safely for now, is to make sure the app loads no native modules after the Web Workers get started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9949f4fb2156fb17fc40e74580436ede2d40f5" translate="yes" xml:space="preserve">
          <source>The other building steps are exactly the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ea8998cc56ab5955043c21441988d75cde142b" translate="yes" xml:space="preserve">
          <source>The output should look roughly like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e161ecf856105089a99c6b53bfa26e65e3c5ce6d" translate="yes" xml:space="preserve">
          <source>The possible values and behaviors of the &lt;code&gt;type&lt;/code&gt; option are platform dependent. Possible values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1238273cd66721667847a8ea46f8156223d79358" translate="yes" xml:space="preserve">
          <source>The prebuilt &lt;code&gt;ia32&lt;/code&gt; (&lt;code&gt;i686&lt;/code&gt;) and &lt;code&gt;x64&lt;/code&gt; (&lt;code&gt;amd64&lt;/code&gt;) binaries of Electron are built on Ubuntu 12.04, the &lt;code&gt;armv7l&lt;/code&gt; binary is built against ARM v7 with hard-float ABI and NEON for Debian Wheezy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70e88b19e2f46234ac6fbb5e859622ac9fd34e6" translate="yes" xml:space="preserve">
          <source>The preload script can indirectly access all APIs from the main process through the &lt;code&gt;remote&lt;/code&gt; and &lt;code&gt;ipcRenderer&lt;/code&gt; modules. This is how &lt;code&gt;fs&lt;/code&gt; (used above) and other modules are implemented: They are proxies to remote counterparts in the main process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f78e0c6f474005db369426975ffe7a44b2b1fc0" translate="yes" xml:space="preserve">
          <source>The preload script must be contained in a single script, but it is possible to have complex preload code composed with multiple modules by using a tool like browserify, as explained below. In fact, browserify is already used by electron to provide a node-like environment to the preload script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0de20e0722e9e32fadbeb6c3d6bc00e6d698502" translate="yes" xml:space="preserve">
          <source>The prepare release script will do the following: 1. Check if a release is already in process and if so it will halt. 2. Create a release branch. 3. Bump the version number in several files. See &lt;a href=&quot;https://github.com/electron/electron/commit/78ec1b8f89b3886b856377a1756a51617bc33f5a&quot;&gt;this bump commit&lt;/a&gt; for an example. 4. Create a draft release on GitHub with auto-generated release notes. 5. Push the release branch. 6. Call the APIs to run the release builds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58a8b975b36977ca2a1bde930770d09c3751eb7" translate="yes" xml:space="preserve">
          <source>The process is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c16399b3abfc9798f8cf1c54ca267905ac305a5" translate="yes" xml:space="preserve">
          <source>The proxy has limited standard functionality implemented to be compatible with traditional web pages. For full control of the new window you should create a &lt;code&gt;BrowserWindow&lt;/code&gt; directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed14764967dcc3afa5cf06693453c5de6781001" translate="yes" xml:space="preserve">
          <source>The renderer process can handle the message by listening to &lt;code&gt;channel&lt;/code&gt; with the &lt;a href=&quot;ipc-renderer&quot;&gt;&lt;code&gt;ipcRenderer&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6357d30e30adeab3af7b2ad8bc2f9d5463155c10" translate="yes" xml:space="preserve">
          <source>The renderer process is a browser window in your app. Unlike the main process, there can be multiple of these and each is run in a separate process. They can also be hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2981d6faaf1e0d9461c1a14f3f83abf43711910d" translate="yes" xml:space="preserve">
          <source>The renderer process is no different than a normal web page, except for the extra ability to use node modules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee4c15168b7bd8906486990b32196cc673c0da4" translate="yes" xml:space="preserve">
          <source>The source code of Electron is separated into a few parts, mostly following Chromium on the separation conventions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a11b559f814a1c283145da0379f6db69b8584d1" translate="yes" xml:space="preserve">
          <source>The string follows the same format as the features string in &lt;code&gt;window.open&lt;/code&gt;. A name by itself is given a &lt;code&gt;true&lt;/code&gt; boolean value. A preference can be set to another value by including an &lt;code&gt;=&lt;/code&gt;, followed by the value. Special values &lt;code&gt;yes&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; are interpreted as &lt;code&gt;true&lt;/code&gt;, while &lt;code&gt;no&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; are interpreted as &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf00317265afc530080d71d6dca62e5c84a8698" translate="yes" xml:space="preserve">
          <source>The structure of a renamed app would be like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7693ce1e285d2c415bac1b5c914d37430aa520" translate="yes" xml:space="preserve">
          <source>The trace option will first be reset to the default option (&lt;code&gt;record_mode&lt;/code&gt; set to &lt;code&gt;record-until-full&lt;/code&gt;, &lt;code&gt;enable_sampling&lt;/code&gt; and &lt;code&gt;enable_systrace&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;) before options parsed from &lt;code&gt;traceOptions&lt;/code&gt; are applied on it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aebac9da6bd250ae1889e17eabd700eb379b422" translate="yes" xml:space="preserve">
          <source>The two most important pieces of information needed to evaluate the report are a description of the bug and a simple test case to recreate it. It easier to fix a bug if it can be reproduced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a449aea3f35918b88ea1e6b94d950e512a220b9e" translate="yes" xml:space="preserve">
          <source>The usage is similar to the other &lt;code&gt;register{Any}Protocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with either a &lt;code&gt;Readable&lt;/code&gt; object or an object that has the &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;statusCode&lt;/code&gt;, and &lt;code&gt;headers&lt;/code&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9812fb60be5cc4cec7a4283a492d96ea38c7d135" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;a href=&quot;app#event-certificate-error&quot;&gt;the &lt;code&gt;certificate-error&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18eabd0a931c3b6ea20fb4f5ade4b250dc83120d" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;a href=&quot;app#event-login&quot;&gt;the &lt;code&gt;login&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b250244d415c277c40e8184450593465b1879846" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;a href=&quot;app#event-select-client-certificate&quot;&gt;the &lt;code&gt;select-client-certificate&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace9b5626e9a6055f530d59320c339f2a079923b" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;code&gt;registerFileProtocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with a &lt;code&gt;redirectRequest&lt;/code&gt; object that has the &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;referrer&lt;/code&gt;, &lt;code&gt;uploadData&lt;/code&gt; and &lt;code&gt;session&lt;/code&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aaf6840393ba02debae0d4c1295f27cd0ce66e0" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;code&gt;registerFileProtocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with either a &lt;code&gt;Buffer&lt;/code&gt; object or an object that has the &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;mimeType&lt;/code&gt;, and &lt;code&gt;charset&lt;/code&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03748049d6ae04e4d12dbb56a6a1247729c2d706" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;code&gt;registerFileProtocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with either a &lt;code&gt;String&lt;/code&gt; or an object that has the &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;mimeType&lt;/code&gt;, and &lt;code&gt;charset&lt;/code&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7189e6a417d94da2937de6349a31b69e3c021fee" translate="yes" xml:space="preserve">
          <source>The usage of &lt;code&gt;selenium-webdriver&lt;/code&gt; with Electron is the same with upstream, except that you have to manually specify how to connect chrome driver and where to find Electron's binary:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4acbb045832bbb7de008cac348c1d6a07239b61c" translate="yes" xml:space="preserve">
          <source>The user tasks will still show even after your application closes, so the icon and program path specified for a task should exist until your application is uninstalled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b99637f2515a34e3bbf90ecfdac697c2461d7d" translate="yes" xml:space="preserve">
          <source>The vast majority of Node.js modules are &lt;em&gt;not&lt;/em&gt; native. Only 400 out of the ~650.000 modules are native. However, if you do need native modules, please consult &lt;a href=&quot;using-native-node-modules&quot;&gt;this guide on how to recompile them for Electron&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd8026d813ea905232959978e568e2de6501e83" translate="yes" xml:space="preserve">
          <source>The version update process is detailed explicitly in our &lt;a href=&quot;electron-versioning&quot;&gt;Versioning Doc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fca882e172462489277d043917c2c2af6fc1608" translate="yes" xml:space="preserve">
          <source>The workflow to format your changed code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2669c327c063205625472ade42ce230661b243b9" translate="yes" xml:space="preserve">
          <source>Then execute &lt;code&gt;Electron.app&lt;/code&gt; (or &lt;code&gt;electron&lt;/code&gt; on Linux, &lt;code&gt;electron.exe&lt;/code&gt; on Windows), and Electron will start as your app. The &lt;code&gt;electron&lt;/code&gt; directory will then be your distribution to deliver to final users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd24e6b8c7964a9f85124ee0cb90aa5f8b951f4" translate="yes" xml:space="preserve">
          <source>Then file a bug at Electron's issues list, and describe which part of the extension is not working as expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea169d72ec8fb9e58317d4d8c139e8146a8d2349" translate="yes" xml:space="preserve">
          <source>Then manually create distributions for each platform and upload them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71075abbb4d96721b9fee736eb07204752987288" translate="yes" xml:space="preserve">
          <source>Then, assuming that the Xcode 6.4 DMG has been mounted at &lt;code&gt;/Volumes/Xcode&lt;/code&gt; and that your Xcode 8.2.1 install is at &lt;code&gt;/Applications/Xcode.app&lt;/code&gt;, run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b200704d3fdd92791b2627d608e135073603845" translate="yes" xml:space="preserve">
          <source>Then, create a virtual xvfb screen and export an environment variable called DISPLAY that points to it. Chromium in Electron will automatically look for &lt;code&gt;$DISPLAY&lt;/code&gt;, so no further configuration of your app is required. This step can be automated with Paul Betts's &lt;a href=&quot;https://github.com/paulcbetts/xvfb-maybe&quot;&gt;xvfb-maybe&lt;/a&gt;: Prepend your test commands with &lt;code&gt;xvfb-maybe&lt;/code&gt; and the little tool will automatically configure xvfb, if required by the current system. On Windows or macOS, it will do nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55bf9c6f8ac8ab1bf6778b2f1394facf290c2989" translate="yes" xml:space="preserve">
          <source>Then, go and install the &lt;code&gt;electron-windows-store&lt;/code&gt; CLI:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72eb15729a4805941d065f88ea8bbb5580ab8d49" translate="yes" xml:space="preserve">
          <source>Then, in the main process, augment the event with a path to the file that is being dragged and an icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a1638ecbe326cf45f914f93c15a4be6dfe94c3" translate="yes" xml:space="preserve">
          <source>Then, in your Electron app, require and use the module as if you were building a Node.js application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acfbc37bb35b8dc64a08678926284923f14178bb" translate="yes" xml:space="preserve">
          <source>Then, in your test suite, you can use your test-driver as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64075cebafe989152ef2fc4e1a534bec9aaa1ec0" translate="yes" xml:space="preserve">
          <source>Then, open up Visual Studio. Electron is not built with Visual Studio and hence does not contain a project file - you can however open up the source code files &quot;As File&quot;, meaning that Visual Studio will open them up by themselves. You can still set breakpoints - Visual Studio will automatically figure out that the source code matches the code running in the attached process and break accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152c8ff56637023c5f144e0e8dc5699f53302f41" translate="yes" xml:space="preserve">
          <source>Then, run Electron with &lt;code&gt;electron/spec&lt;/code&gt; as the argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972c4a60ba2c597025cda850862a151cdd4dc6af" translate="yes" xml:space="preserve">
          <source>Then, run the installation of the Desktop App Converter, passing in the location of the Windows base Image (downloaded as &lt;code&gt;BaseImage-14316.wim&lt;/code&gt;), by calling &lt;code&gt;.\DesktopAppConverter.ps1 -Setup -BaseImage .\BaseImage-14316.wim&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5cf5c469151c5f14d54bfb8a272e43396cc203" translate="yes" xml:space="preserve">
          <source>Then, start Electron:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ddb09189f3d7087a7050982078022d3abfa53b" translate="yes" xml:space="preserve">
          <source>Then, you need to prepare three entitlements files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4e9d318559cb234d0162bb4b4d4b0fd556a59b" translate="yes" xml:space="preserve">
          <source>Then, you'll need to configure your in-app purchases in iTunes Connect, and include details such as name, pricing, and description that highlights the features and functionality of your in-app purchase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192ebec0df374f64d0b3dc1a9afedd99cf52b5e4" translate="yes" xml:space="preserve">
          <source>There are Node APIs that can execute binaries like &lt;code&gt;child_process.exec&lt;/code&gt;, &lt;code&gt;child_process.spawn&lt;/code&gt; and &lt;code&gt;child_process.execFile&lt;/code&gt;, but only &lt;code&gt;execFile&lt;/code&gt; is supported to execute binaries inside &lt;code&gt;asar&lt;/code&gt; archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c9a4723ba431993a248218effc57c06ba7510c" translate="yes" xml:space="preserve">
          <source>There are a handful of &lt;code&gt;*_TOKEN&lt;/code&gt; environment variables needed by the release scripts. Once you've generated these per-user tokens, you may want to keep them in a local file that you can &lt;code&gt;source&lt;/code&gt; when starting a release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c977ee526b253faabfc2e1542328fbc400b282b" translate="yes" xml:space="preserve">
          <source>There are a number of more advanced mechanisms for managing commits using &lt;code&gt;git rebase&lt;/code&gt; that can be used, but are beyond the scope of this guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9ef43ccd8caf2e708ab5074e4e0abb3c1ab637" translate="yes" xml:space="preserve">
          <source>There are a number of tools for signing your packaged app:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004aab477cea089e16c90111f185db2c7a87f6e9" translate="yes" xml:space="preserve">
          <source>There are questions that are asked quite often. Check this out before creating an issue:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3594ebce627515e92051d5777e5ec1d0dd0b473" translate="yes" xml:space="preserve">
          <source>There are several major changes from our 1.x strategy outlined below. Each change is intended to satisfy the needs and priorities of developers/maintainers and app developers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9ff1589bd15784761ca923818d0727ca501089" translate="yes" xml:space="preserve">
          <source>There are several ways to update an Electron application. The easiest and officially supported one is taking advantage of the built-in &lt;a href=&quot;https://github.com/Squirrel&quot;&gt;Squirrel&lt;/a&gt; framework and Electron's &lt;a href=&quot;../api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8a36bc5c6e7059274d4fd4661f84f4dc105cfb" translate="yes" xml:space="preserve">
          <source>There are three ways to create a &lt;code&gt;.snap&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d95bb8a7dee45320eb44fe7853039108a4a1741" translate="yes" xml:space="preserve">
          <source>There is a second script, &lt;code&gt;script/patch.py&lt;/code&gt; that may be useful. Read &lt;code&gt;./script/patch.py -h&lt;/code&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ee2e2a678feae54ac5c2aa26213901010f7d5c" translate="yes" xml:space="preserve">
          <source>There is not a lot of Python in this repository, but it too is governed by coding style rules. &lt;code&gt;npm run lint-py&lt;/code&gt; will check all Python, using &lt;code&gt;pylint&lt;/code&gt; to do so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bb9ca43ae7748f326896a6ab75ed4d14280b8e" translate="yes" xml:space="preserve">
          <source>There is one important caveat: Native Node.js modules (that is, modules that require compilation of native code before they can be used) will need to be compiled to be used with Electron.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0e9dc372e0c40d38d2958352a0d648c5040d89" translate="yes" xml:space="preserve">
          <source>There may be instances where you want to respond to these events in the main process as well. The main process however does not have a &lt;code&gt;navigator&lt;/code&gt; object and thus cannot detect these events directly. Using Electron's inter-process communication utilities, the events can be forwarded to the main process and handled as needed, as shown in the following example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76908a4e62bf35d62ab8daa6831ef2e371fa76d" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s a chance we need to change our build configuration to match the build flags that node wants in &lt;code&gt;node/common.gypi&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6027584eb7ad264155776e956f099186c67b37" translate="yes" xml:space="preserve">
          <source>These are the style guidelines for coding in Electron.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d8c7951f5bc627a70a99d0271644e93dc97b85" translate="yes" xml:space="preserve">
          <source>These guides are intended for people working on the Electron project itself. For guides on Electron app development, see &lt;a href=&quot;../readme#guides-and-tutorials&quot;&gt;/docs/README.md&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c441683da7e488d5912c3b7aea3e8a75035f9f" translate="yes" xml:space="preserve">
          <source>These individual tutorials expand on topics discussed in the guide above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db666ef559d2fa34de4bff16e1c88aed612ebb1e" translate="yes" xml:space="preserve">
          <source>These mappings apply to the endpoint host in a net request (the TCP connect and host resolver in a direct connection, and the &lt;code&gt;CONNECT&lt;/code&gt; in an HTTP proxy connection, and the endpoint host in a &lt;code&gt;SOCKS&lt;/code&gt; proxy connection).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5959f576697cc4d5a5e88b90052ec389f612923a" translate="yes" xml:space="preserve">
          <source>These methods can be accessed from the &lt;code&gt;webContents&lt;/code&gt; module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630557d884064039ed6c85e2f5ccbb60cf40eb54" translate="yes" xml:space="preserve">
          <source>These new features bring those auditing tools to your Electron app. You can choose to add audits to your tests with Spectron or use them within DevTools with Devtron. Read on for a summary of the tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50011daa060d619340c176124cf64eb2f14b2ad" translate="yes" xml:space="preserve">
          <source>These steps are to help app developers learn when a branch they're using becomes unsupported, but without being excessively intrusive to end users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa7a3b8057245a9a53616fa5a39e6151d07de38f" translate="yes" xml:space="preserve">
          <source>They backport a small amount of things as needed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925561daf4358b3834107004f7ee8e98e9571064" translate="yes" xml:space="preserve">
          <source>This API can be called safely before the &lt;code&gt;ready&lt;/code&gt; event the &lt;code&gt;app&lt;/code&gt; module emits, it is usually used to report errors in early stage of startup. If called before the app &lt;code&gt;ready&lt;/code&gt;event on Linux, the message will be emitted to stderr, and no GUI dialog will appear.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340c45f7f9a661e9ecd6ebb65818f8f2c652ab5b" translate="yes" xml:space="preserve">
          <source>This allows you to determine ahead of time whether or not Windows will silently throw the notification away.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f46f0abdadcedbe72ac0adb70eeb03055c2be70" translate="yes" xml:space="preserve">
          <source>This can be done manually by visiting OmahaProxy in a browser, or automatically:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19abaa13d0dba98679bd7418a20016c22238a79" translate="yes" xml:space="preserve">
          <source>This can be used in combination with &lt;a href=&quot;web-contents#contentssetsizeoptions&quot;&gt;&lt;code&gt;webContents.setSize&lt;/code&gt;&lt;/a&gt; to manually resize the webview contents in reaction to a window size change. This can make resizing faster compared to relying on the webview element bounds to automatically resize the contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d95071d9f0757b88558f8b1d59a4ba138589a4" translate="yes" xml:space="preserve">
          <source>This can take a significant amount of time depending on build machine as it has to build all of the libchromium source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a949ce4a405bc3ce050a428eb09e1fccb5184d" translate="yes" xml:space="preserve">
          <source>This document describes the process for releasing a new version of Electron.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b08ebef74426ddb6ada26f318d5041f72ce60d2" translate="yes" xml:space="preserve">
          <source>This document outlines the process for manually loading an extension. You may also try &lt;a href=&quot;https://github.com/GPMDP/electron-devtools-installer&quot;&gt;electron-devtools-installer&lt;/a&gt;, a third-party tool that downloads extensions directly from the Chrome WebStore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9bda8f3bea4fa30568a20bc89b0c284f32afe4" translate="yes" xml:space="preserve">
          <source>This doesn't affect existing &lt;code&gt;WebContents&lt;/code&gt;, and each &lt;code&gt;WebContents&lt;/code&gt; can use &lt;code&gt;webContents.setUserAgent&lt;/code&gt; to override the session-wide user agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="305bb661633e2bd54b8cde837bb1530865ff1b43" translate="yes" xml:space="preserve">
          <source>This doesn't mean Electron is a JavaScript binding to graphical user interface (GUI) libraries. Instead, Electron uses web pages as its GUI, so you could also see it as a minimal Chromium browser, controlled by JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27dcdff876f06b48e0909172d36571d4132749c8" translate="yes" xml:space="preserve">
          <source>This ensures that your working branch has the latest changes from &lt;code&gt;electron/electron&lt;/code&gt; master.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735aff75680f019b5b2eef8d283ba1c664d12844" translate="yes" xml:space="preserve">
          <source>This environment variable will not work if the &lt;code&gt;crashReporter&lt;/code&gt; is started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53962e4beb1ce1eb5a88e924f00d58d0735bdc2" translate="yes" xml:space="preserve">
          <source>This event can be used to configure &lt;code&gt;webPreferences&lt;/code&gt; for the &lt;code&gt;webContents&lt;/code&gt; of a &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; before it's loaded, and provides the ability to set settings that can't be set via &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534c78030b6fb5c4bb033d9366092911a59d6437" translate="yes" xml:space="preserve">
          <source>This event is like &lt;code&gt;did-finish-load&lt;/code&gt; but emitted when the load failed or was cancelled, e.g. &lt;code&gt;window.stop()&lt;/code&gt; is invoked. The full list of error codes and their meaning is available &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc14d8e2cd1b5d75f2d9ca245ca5574d93e3694" translate="yes" xml:space="preserve">
          <source>This event is like &lt;code&gt;did-finish-load&lt;/code&gt;, but fired when the load failed or was cancelled, e.g. &lt;code&gt;window.stop()&lt;/code&gt; is invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16cd81301f3901898ca383be2a9937686fea4f1b" translate="yes" xml:space="preserve">
          <source>This event is not emitted for in-page navigations, such as clicking anchor links or updating the &lt;code&gt;window.location.hash&lt;/code&gt;. Use &lt;code&gt;did-navigate-in-page&lt;/code&gt; event for this purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43532412863a913d8fd70d6050dfc6b00fea2882" translate="yes" xml:space="preserve">
          <source>This event is not guaranteed to be emitted in all cases where the notification is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daef2593fd9388d64158392d015f2a866d5cba6f" translate="yes" xml:space="preserve">
          <source>This event is usually emitted after the &lt;code&gt;did-finish-load&lt;/code&gt; event, but for pages with many remote resources, it may be emitted before the &lt;code&gt;did-finish-load&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc211e73307119fcd816d42f8b4a9ab15005889" translate="yes" xml:space="preserve">
          <source>This event will not emit when the navigation is started programmatically with APIs like &lt;code&gt;&amp;lt;webview&amp;gt;.loadURL&lt;/code&gt; and &lt;code&gt;&amp;lt;webview&amp;gt;.back&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba25365ba095998aa9f6d8616d04d7760dce95d3" translate="yes" xml:space="preserve">
          <source>This event will not emit when the navigation is started programmatically with APIs like &lt;code&gt;webContents.loadURL&lt;/code&gt; and &lt;code&gt;webContents.back&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce3421f7d7f0f139f1c0fc738d83adefc9eead4" translate="yes" xml:space="preserve">
          <source>This flag is global to all renderer processes, if you only want to disable throttling in one window, you can take the hack of &lt;a href=&quot;https://github.com/atom/atom/pull/9485/files&quot;&gt;playing silent audio&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59739245235d20d9bd2627de64d6feb1f1353c69" translate="yes" xml:space="preserve">
          <source>This guide explains how to integrate your application into those desktop environments with Electron APIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae7cd976045436112f7fa0b340e654a51d5286c" translate="yes" xml:space="preserve">
          <source>This guide provides information on how to package your Electron application for any Snapcraft environment, including the Ubuntu Software Center.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd12afa1587b8243c8bdd506b686e1935e49b3f7" translate="yes" xml:space="preserve">
          <source>This happens when the variable which is used to store the window/tray gets garbage collected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ddae2e4ad6d22bd6d864ba578a7a1b81d8dd78" translate="yes" xml:space="preserve">
          <source>This is an overview of the steps needed to upgrade Chromium in Electron.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48fd1ce46ca3f75a8fcf1a2738bb79a6e11234ae" translate="yes" xml:space="preserve">
          <source>This is because &lt;code&gt;exec&lt;/code&gt; and &lt;code&gt;spawn&lt;/code&gt; accept &lt;code&gt;command&lt;/code&gt; instead of &lt;code&gt;file&lt;/code&gt; as input, and &lt;code&gt;command&lt;/code&gt;s are executed under shell. There is no reliable way to determine whether a command uses a file in asar archive, and even if we do, we can not be sure whether we can replace the path in command without side effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91f0b5809499b2aac2c817187db2006a90e9d9c" translate="yes" xml:space="preserve">
          <source>This is because you have the &lt;a href=&quot;https://www.npmjs.com/package/electron&quot;&gt;npm &lt;code&gt;electron&lt;/code&gt; module&lt;/a&gt; installed either locally or globally, which overrides Electron's built-in module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3986c71d0e4c78e6cd21bb0ce8b7a2f2efbb87" translate="yes" xml:space="preserve">
          <source>This is caused by a bug when using Cygwin Python and Win32 Node together. The solution is to use the Win32 Python to execute the bootstrap script (assuming you have installed Python under &lt;code&gt;C:\Python27&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b27aed9ee162e49847966b3b51b71c4860ae778" translate="yes" xml:space="preserve">
          <source>This is equivalent to the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe1df8532e63229df92d06cf43d9987ae371204" translate="yes" xml:space="preserve">
          <source>This is needed because the first patch has Node commit checksums that we don't want</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8aca70cc5480516ee291e9bca8a4cd91b7eaa92" translate="yes" xml:space="preserve">
          <source>This is needed because upstream Node keeps its V8 files in a subdirectory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91aef02790b0da10b0da3faa252a645dace7a8f0" translate="yes" xml:space="preserve">
          <source>This is not bulletproof, but at the least, you should follow these steps to improve the security of your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce540b607105f2ab510762e21fa5b7df27b2a8c" translate="yes" xml:space="preserve">
          <source>This list is managed by the OS. On Windows you can visit the list from the task bar, and on macOS you can visit it from dock menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b8fbf53205cd07ff1caf5968650d4e51e33e22" translate="yes" xml:space="preserve">
          <source>This makes the web page click-through when over &lt;code&gt;el&lt;/code&gt;, and returns to normal outside it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38119f44b494dd0bb6f6f9163b806e1c7ab1524" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;[-1, 0, 1]&lt;/code&gt; will make the image completely white and &lt;code&gt;[-1, 1, 0]&lt;/code&gt; will make the image completely black.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a355799483968abe863664dade8bc4d946b24a" translate="yes" xml:space="preserve">
          <source>This method can only be called before app is ready.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90ad39418944444e5ae54b4ab541a29f5479860" translate="yes" xml:space="preserve">
          <source>This method checks if the current executable as the default handler for a protocol (aka URI scheme). If so, it will remove the app as the default handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c819fac6bfe7e98002d421c14d1dc5a3975abd6" translate="yes" xml:space="preserve">
          <source>This method checks if the current executable is the default handler for a protocol (aka URI scheme). If so, it will return true. Otherwise, it will return false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a9284738b6a5154a2e369ad66253b0849a1915" translate="yes" xml:space="preserve">
          <source>This method guarantees that all &lt;code&gt;beforeunload&lt;/code&gt; and &lt;code&gt;unload&lt;/code&gt; event handlers are correctly executed. It is possible that a window cancels the quitting by returning &lt;code&gt;false&lt;/code&gt; in the &lt;code&gt;beforeunload&lt;/code&gt; event handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd46eba6601163296f629d7617bddef184d9505" translate="yes" xml:space="preserve">
          <source>This method makes your application a Single Instance Application - instead of allowing multiple instances of your app to run, this will ensure that only a single instance of your app is running, and other instances signal this instance and exit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="128082992770bd52e00e31ab2c7ee17b1d861f36" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;false&lt;/code&gt; if your process is the primary instance of the application and your app should continue loading. And returns &lt;code&gt;true&lt;/code&gt; if your process has sent its parameters to another instance, and you should immediately quit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576d1f0fde5bf163523a7bf4784d972829571325" translate="yes" xml:space="preserve">
          <source>This method sets the current executable as the default handler for a protocol (aka URI scheme). It allows you to integrate your app deeper into the operating system. Once registered, all links with &lt;code&gt;your-protocol://&lt;/code&gt; will be opened with the current executable. The whole link, including protocol, will be passed to your application as a parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1635376cd173bd570494637f07d70e9a8bc4e7d" translate="yes" xml:space="preserve">
          <source>This mode uses a software output device for rendering in the CPU, so the frame generation is much faster, thus this mode is preferred over the GPU accelerated one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94190404689a379b97619e82a180839a7032b318" translate="yes" xml:space="preserve">
          <source>This module does not include a web interface so you need to open &lt;code&gt;chrome://tracing/&lt;/code&gt; in a Chrome browser and load the generated file to view the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f151969ca83729d41c12755b271e4baa545fb6b" translate="yes" xml:space="preserve">
          <source>This only affects developers, if you are building Electron for rebranding you are not affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56607a829de2a1f19d7e738a52d963a4fbb9ddcd" translate="yes" xml:space="preserve">
          <source>This only creates a REPL for the main process. You can use the Console tab of the Dev Tools to get a REPL for the renderer processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375038a02af1d24b74b5f70b87659606996caf92" translate="yes" xml:space="preserve">
          <source>This option can also be set on &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tags as well:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c050b71c61bcff34ea9522fff3873a756c2ae0" translate="yes" xml:space="preserve">
          <source>This page defines some terminology that is commonly used in Electron development.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c5e6a1bdbeb5e09af34f1a0b46ccebd975fbc6" translate="yes" xml:space="preserve">
          <source>This repository comes with linting rules for both JavaScript and C++ &amp;ndash; as well as unit and integration tests. To learn more about Electron's coding style, please see the &lt;a href=&quot;coding-style&quot;&gt;coding-style&lt;/a&gt; document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2ffd8b47da3913e31fa804ea93f7b5a7a4a6f5" translate="yes" xml:space="preserve">
          <source>This script will cause a very large Electron executable to be placed in the directory &lt;code&gt;out/R&lt;/code&gt;. The file size is in excess of 1.3 gigabytes. This happens because the Release target binary contains debugging symbols. To reduce the file size, run the &lt;code&gt;create-dist.py&lt;/code&gt; script:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71693d265198cdad88d7bca56b4f1a7f4d1fb418" translate="yes" xml:space="preserve">
          <source>This switch can not be used in &lt;code&gt;app.commandLine.appendSwitch&lt;/code&gt; since it is parsed earlier than user's app is loaded, but you can set the &lt;code&gt;ELECTRON_ENABLE_LOGGING&lt;/code&gt; environment variable to achieve the same effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbba81275e266bde8685801ca839dd4f9c6b0a34" translate="yes" xml:space="preserve">
          <source>This switch only works when &lt;code&gt;--enable-logging&lt;/code&gt; is also passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6846735df161128a67c0582a4de46319858cb9a8" translate="yes" xml:space="preserve">
          <source>This term originated in the Unix community, where &quot;userland&quot; or &quot;userspace&quot; referred to programs that run outside of the operating system kernel. More recently, the term has been popularized in the Node and npm community to distinguish between the features available in &quot;Node core&quot; versus packages published to the npm registry by the much larger &quot;user&quot; community.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99439216edb1f47887775ea8c02567931505db8" translate="yes" xml:space="preserve">
          <source>This toolbar is the familiar standard toolbar common control. It has a maximum of seven buttons. Each button's ID, image, tooltip, and state are defined in a structure, which is then passed to the taskbar. The application can show, enable, disable, or hide buttons from the thumbnail toolbar as required by its current state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67799efe884534d21c75845d127954a9bb9dfbe7" translate="yes" xml:space="preserve">
          <source>This value can only be modified before the first navigation, since the session of an active renderer process cannot change. Subsequent attempts to modify the value will fail with a DOM exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbaa6d5fd03f0d67460b559ac4734d32b43188b8" translate="yes" xml:space="preserve">
          <source>This will allow you to detect ahead of time whether or not the notification will be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310772b745c9bd2e5897c31686b366f0ca7a83fe" translate="yes" xml:space="preserve">
          <source>This will be time-consuming</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee48038aa020d935bb7ab14bd9b9501be0b6b5c" translate="yes" xml:space="preserve">
          <source>This will build all of what was previously 'libchromiumcontent' (i.e. the &lt;code&gt;content/&lt;/code&gt; directory of &lt;code&gt;chromium&lt;/code&gt; and its dependencies, incl. WebKit and V8), so it will take a while.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d164648fb645df77aacd2d3406870e9f6529fe" translate="yes" xml:space="preserve">
          <source>This will build debug electron with debug version of libchromiumcontent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ad23d8e2c4bcda5ace9dc6a50d0d65568cc890" translate="yes" xml:space="preserve">
          <source>This will download and build libchromiumcontent locally, similarly to the &lt;code&gt;--build_release_libcc&lt;/code&gt;, but it will create a shared library build of libchromiumcontent and won't strip any symbols, making it ideal for debugging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e2296dbebe48f43f37289b354787ff74589354" translate="yes" xml:space="preserve">
          <source>This will fail when the app is signed for distribution in the Mac App Store. Subscribe to &lt;a href=&quot;https://github.com/electron/electron/issues/9005&quot;&gt;#9005&lt;/a&gt; for updates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541c07fe9ee230201344ad82fc5f36ad622cf514" translate="yes" xml:space="preserve">
          <source>This will generate all the ninja files needed for the build. You shouldn't have to run &lt;code&gt;gn gen&lt;/code&gt; again&amp;mdash;if you want to change the build arguments you can run &lt;code&gt;gn args out/Default&lt;/code&gt; to bring up an editor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4cf475c98a6af3a04432e0f82fd5ad81b34a5c" translate="yes" xml:space="preserve">
          <source>This will generate the electron.ninjs.xcworkspace. You will have to open this workspace to set breakpoints and inspect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02eb50512f6212b38a5f022b6eb6b5e324c5192f" translate="yes" xml:space="preserve">
          <source>This will generate:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83d3d3598b2797efd7ec8e1d91124cd1b7f8f97" translate="yes" xml:space="preserve">
          <source>This will make a window maintain an aspect ratio. The extra size allows a developer to have space, specified in pixels, not included within the aspect ratio calculations. This API already takes into account the difference between a window's size and its content size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6ae84ac82058b3c68d240475e22e7867870592" translate="yes" xml:space="preserve">
          <source>This will put a working distribution with much smaller file sizes in the &lt;code&gt;dist&lt;/code&gt; directory. After running the &lt;code&gt;create-dist.py&lt;/code&gt; script, you may want to remove the 1.3+ gigabyte binary which is still in &lt;code&gt;out/R&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f1fff384311d54372d57e586748b6d220f83ac" translate="yes" xml:space="preserve">
          <source>This would normally be controlled by user preferences. This has no effect if called before &lt;code&gt;start&lt;/code&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3775183e8f21e56320e67e89e50fc4420ccf2b" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;asar&lt;/code&gt; archives are treated as directories, there are no actual directories in the filesystem, so you can never set the working directory to directories in &lt;code&gt;asar&lt;/code&gt; archives. Passing them as the &lt;code&gt;cwd&lt;/code&gt; option of some APIs will also cause errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25fb617132c60aa22b5ad88639757fd795725db" translate="yes" xml:space="preserve">
          <source>Three ways to install native modules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="018226bcc54ac78679d7e8cd478163dcf8940f27" translate="yes" xml:space="preserve">
          <source>ThumbarButton</source>
          <target state="translated">ThumbarButton</target>
        </trans-unit>
        <trans-unit id="a45fe261e1bd8ea4b2384009627cf81239d42ffe" translate="yes" xml:space="preserve">
          <source>ThumbarButton Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68534756f2a43c9ca088bf006a84307cf3d82b08" translate="yes" xml:space="preserve">
          <source>Thumbnail Toolbars</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="671d7b141c957f28935c045970c0c111c71dfb47" translate="yes" xml:space="preserve">
          <source>Tigrinya</source>
          <target state="translated">Tigrinya</target>
        </trans-unit>
        <trans-unit id="2d93bfa0c66a344a9d453793e2a3b275bbe5a889" translate="yes" xml:space="preserve">
          <source>Tip: You can test the new version number before running &lt;code&gt;prepare-release&lt;/code&gt; with a dry run of the &lt;code&gt;bump-version&lt;/code&gt; script with the same major/minor/patch/beta arguments, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a55c0d1792b8d6468a37f479b18279fa043440" translate="yes" xml:space="preserve">
          <source>Tips for fixing compilation errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547184d2eb07d1e52c4d74ab23282f7c9977fe1d" translate="yes" xml:space="preserve">
          <source>Tips:</source>
          <target state="translated">Tips:</target>
        </trans-unit>
        <trans-unit id="51ccfd339eac71e6278eab9692f5352cf183f4aa" translate="yes" xml:space="preserve">
          <source>To add a file to recent documents, you can use the &lt;a href=&quot;../api/app#appaddrecentdocumentpath-macos-windows&quot;&gt;app.addRecentDocument&lt;/a&gt; API:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9664d5f84ea2545060bbee8ef877fd89e837721" translate="yes" xml:space="preserve">
          <source>To automatically format a file according to Electron C++ code style, run &lt;code&gt;clang-format -i path/to/electron/file.cc&lt;/code&gt;. It should work on macOS/Linux/Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbdd9e0e1f5169f11845d03f9a4b24b8851b4328" translate="yes" xml:space="preserve">
          <source>To avoid this problem, ensure you clean up any references to renderer callbacks passed to the main process. This involves cleaning up event handlers, or ensuring the main process is explicitly told to dereference callbacks that came from a renderer process that is exiting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f729edcee19e3b35f18f931c0af6f8268c97b5d4" translate="yes" xml:space="preserve">
          <source>To avoid using the prebuilt binaries of &lt;code&gt;libchromiumcontent&lt;/code&gt;, you can build &lt;code&gt;libchromiumcontent&lt;/code&gt; locally. To do so, follow these steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19976a15788c70fd26ec283fb2a6d554b40bc217" translate="yes" xml:space="preserve">
          <source>To build Electron with compilers like &lt;code&gt;g++&lt;/code&gt;, you first need to disable &lt;code&gt;clang&lt;/code&gt; with &lt;code&gt;--disable_clang&lt;/code&gt; switch first, and then set &lt;code&gt;CC&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; environment variables to the ones you want.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6cd83725cfa73ae4725497beceb7d033c9cce9b" translate="yes" xml:space="preserve">
          <source>To build for the 32bit target, you need to pass &lt;code&gt;--target_arch=ia32&lt;/code&gt; when running the bootstrap script:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821a75b76ea57d2ebf97a34d857fed4df2cade15" translate="yes" xml:space="preserve">
          <source>To build, run &lt;code&gt;ninja&lt;/code&gt; with the &lt;code&gt;electron:electron_app&lt;/code&gt; target:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb59b218f28d7b858bdf2ed54eeac06e692808d8" translate="yes" xml:space="preserve">
          <source>To capture both audio and video from the entire desktop the constraints passed to &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDevices/getUserMedia&quot;&gt;&lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt;&lt;/a&gt; must include &lt;code&gt;chromeMediaSource: 'desktop'&lt;/code&gt;, for both &lt;code&gt;audio&lt;/code&gt; and &lt;code&gt;video&lt;/code&gt;, but should not include a &lt;code&gt;chromeMediaSourceId&lt;/code&gt; constraint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad024e97cbf72e17d0494dc407b356d3cd2d6654" translate="yes" xml:space="preserve">
          <source>To capture video from a source provided by &lt;code&gt;desktopCapturer&lt;/code&gt; the constraints passed to &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDevices/getUserMedia&quot;&gt;&lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt;&lt;/a&gt; must include &lt;code&gt;chromeMediaSource: 'desktop'&lt;/code&gt;, and &lt;code&gt;audio: false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4940cd6896449350d0e22ff6a037fc2012f95be" translate="yes" xml:space="preserve">
          <source>To check if a DevTools extension is installed you can run the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b0244100e839dce97df084a927399cebf56784" translate="yes" xml:space="preserve">
          <source>To check out how a simple Electron app is built, see &lt;a href=&quot;first-app&quot;&gt;Writing Your First Electron App&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3035d11dba22f59c2a05ae50e84cbd4beacd68c3" translate="yes" xml:space="preserve">
          <source>To check out how an Electron app that uses a background task to send toast notifications and live tiles, &lt;a href=&quot;https://github.com/felixrieseberg/electron-uwp-background&quot;&gt;check out the Microsoft-provided sample&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16073334d646ccfac2edf89e53cff76005d5a9e7" translate="yes" xml:space="preserve">
          <source>To check out the process architecture, see &lt;a href=&quot;application-architecture#main-and-renderer-processes&quot;&gt;Main and Renderer Processes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47fa821b0f83e7586fb85804250c66d0d13ab94c" translate="yes" xml:space="preserve">
          <source>To clean only &lt;code&gt;out&lt;/code&gt; and &lt;code&gt;dist&lt;/code&gt; directories:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a8e3b3ba3c693c9aa963abbc63ed4672f90e2b" translate="yes" xml:space="preserve">
          <source>To clean the build files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd19315b5d8b4d48df4ffad2c2078c0ed5d6c4c8" translate="yes" xml:space="preserve">
          <source>To clean thumbnail toolbar buttons, just call &lt;code&gt;BrowserWindow.setThumbarButtons&lt;/code&gt; with an empty array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535c3ee8e8e2739219eb5319c8cac023145fc1bb" translate="yes" xml:space="preserve">
          <source>To clean your tasks list, call &lt;code&gt;app.setUserTasks&lt;/code&gt; with an empty array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2134ea0ff07c37dd63e847fbf7d7cc6b27be05cb" translate="yes" xml:space="preserve">
          <source>To compile any existing Electron app, ensure that you have the following requirements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5ea456f6758585b278e513aefa5cb807b4ef93" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;Session&lt;/code&gt; with &lt;code&gt;options&lt;/code&gt;, you have to ensure the &lt;code&gt;Session&lt;/code&gt; with the &lt;code&gt;partition&lt;/code&gt; has never been used before. There is no way to change the &lt;code&gt;options&lt;/code&gt; of an existing &lt;code&gt;Session&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb532d22f5908482440f8346cec7745e9149b67" translate="yes" xml:space="preserve">
          <source>To create a browserify bundle and use it as a preload script, something like the following should be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4504a0a533285a94c124801a9670c64f2a2e1d6" translate="yes" xml:space="preserve">
          <source>To create a click-through window, i.e. making the window ignore all mouse events, you can call the &lt;a href=&quot;browser-window#winsetignoremouseeventsignore&quot;&gt;win.setIgnoreMouseEvents(ignore)&lt;/a&gt; API:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772c951591704df38eae61542fd514f0fae11027" translate="yes" xml:space="preserve">
          <source>To create a custom driver, we'll use nodejs' &lt;a href=&quot;https://nodejs.org/api/child_process.html&quot;&gt;child_process&lt;/a&gt; API. The test suite will spawn the Electron process, then establish a simple messaging protocol:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fa77793c887f131ecab2b39703d63c2fb21efd" translate="yes" xml:space="preserve">
          <source>To create a frameless window, you need to set &lt;code&gt;frame&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in &lt;a href=&quot;browser-window&quot;&gt;BrowserWindow&lt;/a&gt;'s &lt;code&gt;options&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a722dcf46a3cbeaf79a09b4d16ddc687f912186" translate="yes" xml:space="preserve">
          <source>To create a sandboxed window, simply pass &lt;code&gt;sandbox: true&lt;/code&gt; to &lt;code&gt;webPreferences&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7168a31db235db73d7406740d08f55b04b316abe" translate="yes" xml:space="preserve">
          <source>To create a window without chrome, or a transparent window in arbitrary shape, you can use the &lt;a href=&quot;frameless-window&quot;&gt;Frameless Window&lt;/a&gt; API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5e21c0065cc1231645772a60b9ffb4db284f60" translate="yes" xml:space="preserve">
          <source>To detect whether or not you're allowed to send a notification, use the userland module &lt;a href=&quot;https://github.com/felixrieseberg/electron-notification-state&quot;&gt;electron-notification-state&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18993c3ec7650af89951a8eb01d2c6f69ddbc0ad" translate="yes" xml:space="preserve">
          <source>To distribute your app with Electron, you need to download Electron's &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;prebuilt binaries&lt;/a&gt;. Next, the folder containing your app should be named &lt;code&gt;app&lt;/code&gt; and placed in Electron's resources directory as shown in the following examples. Note that the location of Electron's prebuilt binaries is indicated with &lt;code&gt;electron/&lt;/code&gt; in the examples below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f5c2511eb5e2692a8e70be365b110b5b21b368c" translate="yes" xml:space="preserve">
          <source>To do a source level single step in the currently selected thread, execute &lt;code&gt;step&lt;/code&gt; (or &lt;code&gt;s&lt;/code&gt;). This would take you into &lt;code&gt;name_override_.empty()&lt;/code&gt;. To proceed and do a step over, run &lt;code&gt;next&lt;/code&gt; (or &lt;code&gt;n&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94fa16b9d0f4ea3ec28a1d741fb3059be08b5f5e" translate="yes" xml:space="preserve">
          <source>To embed a web page in your app, add the &lt;code&gt;webview&lt;/code&gt; tag to your app's embedder page (this is the app page that will display the guest content). In its simplest form, the &lt;code&gt;webview&lt;/code&gt; tag includes the &lt;code&gt;src&lt;/code&gt; of the web page and css styles that control the appearance of the &lt;code&gt;webview&lt;/code&gt; container:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74afbad1cd98c17c4f61f99669eab36512f313cb" translate="yes" xml:space="preserve">
          <source>To enable OS-enforced sandbox on &lt;code&gt;BrowserWindow&lt;/code&gt; or &lt;code&gt;webview&lt;/code&gt; process with &lt;code&gt;sandbox:true&lt;/code&gt; without causing entire app to be in sandbox, &lt;code&gt;--enable-mixed-sandbox&lt;/code&gt; command-line argument must be passed to electron. This option is currently only supported on macOS and Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d10111789110c128904cbac5eea80100c463835" translate="yes" xml:space="preserve">
          <source>To enable this mode GPU acceleration has to be disabled by calling the &lt;a href=&quot;../api/app#appdisablehardwareacceleration&quot;&gt;&lt;code&gt;app.disableHardwareAcceleration()&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5bafd8fcceb25769e49c0e2f881eddea2335a3" translate="yes" xml:space="preserve">
          <source>To ensure that file URLs are properly formatted, it is recommended to use Node's &lt;a href=&quot;https://nodejs.org/api/url.html#url_url_format_urlobject&quot;&gt;&lt;code&gt;url.format&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db09d3bac654dc1b140e3a8525ebc081f1aca261" translate="yes" xml:space="preserve">
          <source>To ensure that your C++ is in compliance with the Electron coding style, run &lt;code&gt;npm run lint-cpp&lt;/code&gt;, which runs a &lt;code&gt;cpplint&lt;/code&gt; script. We recommend that you use &lt;code&gt;clang-format&lt;/code&gt; and prepared &lt;a href=&quot;clang-format&quot;&gt;a short tutorial&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76a95ae71cef0d386309c3b00dd01a15c7be53c" translate="yes" xml:space="preserve">
          <source>To ensure that your JavaScript is in compliance with the Electron coding style, run &lt;code&gt;npm run lint-js&lt;/code&gt;, which will run &lt;code&gt;standard&lt;/code&gt; against both Electron itself as well as the unit tests. If you are using an editor with a plugin/addon system, you might want to use one of the many &lt;a href=&quot;https://standardjs.com/#are-there-text-editor-plugins&quot;&gt;StandardJS addons&lt;/a&gt; to be informed of coding style violations before you ever commit them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3e67e920081f7bc356db1f791eb16dfb792e39" translate="yes" xml:space="preserve">
          <source>To finish debugging at this point, run &lt;code&gt;process continue&lt;/code&gt;. You can also continue until a certain line is hit in this thread (&lt;code&gt;thread until 100&lt;/code&gt;). This command will run the thread in the current frame till it reaches line 100 in this frame or stops if it leaves the current frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db20ed2d7ab5ce6c9ab8108e55b92cdfc30f46ae" translate="yes" xml:space="preserve">
          <source>To flash the BrowserWindow taskbar button, you can use the &lt;a href=&quot;../api/browser-window#winflashframeflag&quot;&gt;BrowserWindow.flashFrame&lt;/a&gt; API:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9efd08eb76de8870458a9009c7e1a3dfc78bf4" translate="yes" xml:space="preserve">
          <source>To generate a Visual Studio project, you can pass the &lt;code&gt;--msvs&lt;/code&gt; parameter:</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
