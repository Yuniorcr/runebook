<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="gcc">
    <body>
      <group id="gcc">
        <trans-unit id="0e12f8504f1ea0c998df09f0e3e0fdfb0043345a" translate="yes" xml:space="preserve">
          <source>ftans</source>
          <target state="translated">ftans</target>
        </trans-unit>
        <trans-unit id="f19dee098cdc0c6f8c6c9be2a50fe0cb4951dc24" translate="yes" xml:space="preserve">
          <source>ftruncds</source>
          <target state="translated">ftruncds</target>
        </trans-unit>
        <trans-unit id="52e6d8ab88471af82da12a0eae7aab01357e3881" translate="yes" xml:space="preserve">
          <source>full</source>
          <target state="translated">full</target>
        </trans-unit>
        <trans-unit id="99fdb3623cf5c6ad0283ca5c096018dd2f2ff5ad" translate="yes" xml:space="preserve">
          <source>func</source>
          <target state="translated">func</target>
        </trans-unit>
        <trans-unit id="89fa23ed141f816a19675b9d95eec2f1f34d6190" translate="yes" xml:space="preserve">
          <source>function_return(&quot;&lt;var&gt;choice&lt;/var&gt;&quot;)</source>
          <target state="translated">function_return(&quot;&lt;var&gt;choice&lt;/var&gt;&quot;)</target>
        </trans-unit>
        <trans-unit id="875cbfe71c847d1e38552d5adb13efd8629625d0" translate="yes" xml:space="preserve">
          <source>furthermore specify which register to use as base register for reading the canary, and from what offset from that base register. The default for those is as specified in the relevant ABI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ab475595ca04e8fa279ecd14afe9c9c63b75c5" translate="yes" xml:space="preserve">
          <source>furthermore specify which segment register (&lt;code&gt;%fs&lt;/code&gt; or &lt;code&gt;%gs&lt;/code&gt;) to use as base register for reading the canary, and from what offset from that base register. The default for those is as specified in the relevant ABI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f7353414e3f985c1f911f79767daea77436f3a" translate="yes" xml:space="preserve">
          <source>furthermore specify which system register to use as base register for reading the canary, and from what offset from that base register. There is no default register or offset as this is entirely for use within the Linux kernel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3314d42d9a1575f9462c2a5b6b9cebd15095d1b" translate="yes" xml:space="preserve">
          <source>fwrx</source>
          <target state="translated">fwrx</target>
        </trans-unit>
        <trans-unit id="a9afdcec376d4b88e482d781be9804c70d630263" translate="yes" xml:space="preserve">
          <source>fwry</source>
          <target state="translated">fwry</target>
        </trans-unit>
        <trans-unit id="d90ffe5b3ce864fc23d19b66e286d2c301623bf0" translate="yes" xml:space="preserve">
          <source>fxsr</source>
          <target state="translated">fxsr</target>
        </trans-unit>
        <trans-unit id="54fd1711209fb1c0781092374132c66e79e2241b" translate="yes" xml:space="preserve">
          <source>g</source>
          <target state="translated">g</target>
        </trans-unit>
        <trans-unit id="5d36d872f9395226ad251661f9a7b376da7b233d" translate="yes" xml:space="preserve">
          <source>g++</source>
          <target state="translated">g++</target>
        </trans-unit>
        <trans-unit id="990a72bf0cc208e3eacdbad1caf7d897047642ea" translate="yes" xml:space="preserve">
          <source>gbr-offset=</source>
          <target state="translated">gbr-offset=</target>
        </trans-unit>
        <trans-unit id="fce79b7fe1fee3a977fa1bd4efbd9e9a06c29c14" translate="yes" xml:space="preserve">
          <source>gcc</source>
          <target state="translated">gcc</target>
        </trans-unit>
        <trans-unit id="f7fdaf0aa08ba775efe345c583fbebe87f78237b" translate="yes" xml:space="preserve">
          <source>gcc -ansi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca5da21d40b73453da70c522fffcd4f1c9fc51c" translate="yes" xml:space="preserve">
          <source>gcc -ansi -pedantic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321c58ac2e63b39b76845f7f69f1ca4b2412f1cd" translate="yes" xml:space="preserve">
          <source>gcc -shared</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd9d5eb2f8118836b12db2c21dd2eaf4d8d64c1" translate="yes" xml:space="preserve">
          <source>gcse-unrestricted-cost</source>
          <target state="translated">gcse-unrestricted-cost</target>
        </trans-unit>
        <trans-unit id="e6fc26b86cd51a107c530ebf24de2915a078c879" translate="yes" xml:space="preserve">
          <source>gdb --args</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ed93c2347504ae6d73907de152f56a115cbfc9" translate="yes" xml:space="preserve">
          <source>gdb --args cc1 &amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d861d12807dd9b16ff8604d38b3800cd6319999e" translate="yes" xml:space="preserve">
          <source>gen:</source>
          <target state="translated">gen:</target>
        </trans-unit>
        <trans-unit id="98e2150a5d51d3f4426f47aa8cfcc425305cf503" translate="yes" xml:space="preserve">
          <source>generally makes executables both smaller and quicker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922b65530222c573480a4853cbd90a3ca0ca9fe1" translate="yes" xml:space="preserve">
          <source>generates a &lt;code&gt;.fixup&lt;/code&gt; section to allow static executables to be relocated at run time, but</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4068fe26730d9eb1f4a5c40cbb0b71c165b51859" translate="yes" xml:space="preserve">
          <source>generates a warning instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e58939775f2583091cb44b6f2c426731023a2e" translate="yes" xml:space="preserve">
          <source>generates code that is tuned for Pentium 4 but still runs on i686 machines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aacffce512d8a7bbdf8535718b92993dafd58746" translate="yes" xml:space="preserve">
          <source>generates custom instruction 253 for single-precision floating-point add operations instead of the default behavior of using a library call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a808cfd5beafa5e60aefee867bf92025dc2849" translate="yes" xml:space="preserve">
          <source>generic</source>
          <target state="translated">generic</target>
        </trans-unit>
        <trans-unit id="29613b98dffd021de5f99b43d7ae17f9d58ae659" translate="yes" xml:space="preserve">
          <source>generic-armv7-a</source>
          <target state="translated">generic-armv7-a</target>
        </trans-unit>
        <trans-unit id="b67edd707f65ac8eae15f88dc30315adbde38fc2" translate="yes" xml:space="preserve">
          <source>geode</source>
          <target state="translated">geode</target>
        </trans-unit>
        <trans-unit id="0d4d6a5b52478656abf61405b4de2602435fab41" translate="yes" xml:space="preserve">
          <source>gfni</source>
          <target state="translated">gfni</target>
        </trans-unit>
        <trans-unit id="a15cab63dbeeac863b20dec0862aa6449e44b65f" translate="yes" xml:space="preserve">
          <source>gfx900</source>
          <target state="translated">gfx900</target>
        </trans-unit>
        <trans-unit id="17c9eb696b3c194a8af641ee6afc812fa5faa191" translate="yes" xml:space="preserve">
          <source>ggc-min-expand</source>
          <target state="translated">ggc-min-expand</target>
        </trans-unit>
        <trans-unit id="eab63c9e9395acc1ea5de42174d59f58d3ec71ac" translate="yes" xml:space="preserve">
          <source>ggc-min-heapsize</source>
          <target state="translated">ggc-min-heapsize</target>
        </trans-unit>
        <trans-unit id="b16d62566cc9c41ee4bfabd92cb2f61724f9be6d" translate="yes" xml:space="preserve">
          <source>gives a diagnostic message. This currently works only for the C family of languages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876ab997fd14c9946e0bf9fb9e093868124461c6" translate="yes" xml:space="preserve">
          <source>gives output similar to this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b87cbcc39f82dcf19eed14a4f20fafc16a68794a" translate="yes" xml:space="preserve">
          <source>gives this output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9027cc5a2c1321de60a2d71ccde6229d1152d6d3" translate="yes" xml:space="preserve">
          <source>global</source>
          <target state="translated">global</target>
        </trans-unit>
        <trans-unit id="5642c16635be5252e94f8c475b3ed21a44579c44" translate="yes" xml:space="preserve">
          <source>global-dynamic</source>
          <target state="translated">global-dynamic</target>
        </trans-unit>
        <trans-unit id="336da558f64105368889cd9dc8c1bedbc9b157d2" translate="yes" xml:space="preserve">
          <source>gnu</source>
          <target state="translated">gnu</target>
        </trans-unit>
        <trans-unit id="65299514885c0786599c43d3ccde11a44858aa5d" translate="yes" xml:space="preserve">
          <source>gnu++03</source>
          <target state="translated">gnu++03</target>
        </trans-unit>
        <trans-unit id="22d5e60c6b7a533fc506c175556dc84f860f21e5" translate="yes" xml:space="preserve">
          <source>gnu++0x</source>
          <target state="translated">gnu++0x</target>
        </trans-unit>
        <trans-unit id="64eac1f264b3c8bd4e1b7b3a0301778d041a3795" translate="yes" xml:space="preserve">
          <source>gnu++11</source>
          <target state="translated">gnu++11</target>
        </trans-unit>
        <trans-unit id="0aab12b660d5ddbc0d25e0b1b82db371c87ef4ff" translate="yes" xml:space="preserve">
          <source>gnu++14</source>
          <target state="translated">gnu++14</target>
        </trans-unit>
        <trans-unit id="24f86822b23d48b4d89d8e77463762e4c7606909" translate="yes" xml:space="preserve">
          <source>gnu++17</source>
          <target state="translated">gnu++17</target>
        </trans-unit>
        <trans-unit id="419fad70092c6f90884b34998e301e0e342c9aaf" translate="yes" xml:space="preserve">
          <source>gnu++1y</source>
          <target state="translated">gnu++1y</target>
        </trans-unit>
        <trans-unit id="3824f83445c634e70fb92db0d8e95b4c8c47f142" translate="yes" xml:space="preserve">
          <source>gnu++1z</source>
          <target state="translated">gnu++1z</target>
        </trans-unit>
        <trans-unit id="263129979dfdc413d5f84837d5a0590860e9092e" translate="yes" xml:space="preserve">
          <source>gnu++2a</source>
          <target state="translated">gnu++2a</target>
        </trans-unit>
        <trans-unit id="86bc59b13330444c6975c5b359f9a028aad21ca2" translate="yes" xml:space="preserve">
          <source>gnu++98</source>
          <target state="translated">gnu++98</target>
        </trans-unit>
        <trans-unit id="8ed86a04ccda49ab77afd8ed1d3ebbe13517db5c" translate="yes" xml:space="preserve">
          <source>gnu11</source>
          <target state="translated">gnu11</target>
        </trans-unit>
        <trans-unit id="315dbecc771cc08868b60920e98ec0524180c626" translate="yes" xml:space="preserve">
          <source>gnu17</source>
          <target state="translated">gnu17</target>
        </trans-unit>
        <trans-unit id="2ed161ad8d098426f1d21561117e398f4912a0d8" translate="yes" xml:space="preserve">
          <source>gnu18</source>
          <target state="translated">gnu18</target>
        </trans-unit>
        <trans-unit id="e539761058f5edf2c290dec04512172ea3ce3956" translate="yes" xml:space="preserve">
          <source>gnu1x</source>
          <target state="translated">gnu1x</target>
        </trans-unit>
        <trans-unit id="607ad886efa46223c901254a84d8358b4b938c63" translate="yes" xml:space="preserve">
          <source>gnu2</source>
          <target state="translated">gnu2</target>
        </trans-unit>
        <trans-unit id="8e0f1ac82d2ddf7f0577fba1f6517b159f4a177a" translate="yes" xml:space="preserve">
          <source>gnu2x</source>
          <target state="translated">gnu2x</target>
        </trans-unit>
        <trans-unit id="2f33594043db531a9b6a48919b163dd2c6eb89ab" translate="yes" xml:space="preserve">
          <source>gnu89</source>
          <target state="translated">gnu89</target>
        </trans-unit>
        <trans-unit id="e08e08807d1b512057ed6a081d107b6821b99f78" translate="yes" xml:space="preserve">
          <source>gnu90</source>
          <target state="translated">gnu90</target>
        </trans-unit>
        <trans-unit id="b5c8828cdd4c5e4d1fabd4bf6205c31fc549a9bf" translate="yes" xml:space="preserve">
          <source>gnu99</source>
          <target state="translated">gnu99</target>
        </trans-unit>
        <trans-unit id="f2abb19e4fa6fc02ce90e38741dfed12234d2e49" translate="yes" xml:space="preserve">
          <source>gnu9x</source>
          <target state="translated">gnu9x</target>
        </trans-unit>
        <trans-unit id="898b0ba6ab70d28060c52774c3d0b92a4f1da767" translate="yes" xml:space="preserve">
          <source>gnu_</source>
          <target state="translated">gnu_</target>
        </trans-unit>
        <trans-unit id="9fe4781e8117b511e9da08dcdf1560fac44d75ad" translate="yes" xml:space="preserve">
          <source>goldmont</source>
          <target state="translated">goldmont</target>
        </trans-unit>
        <trans-unit id="fc59a40cb3496bfff03f14ebf604d4b2276e6b6e" translate="yes" xml:space="preserve">
          <source>goldmont-plus</source>
          <target state="translated">goldmont-plus</target>
        </trans-unit>
        <trans-unit id="a67ff31287badf2509b1b70f3a5c5e33951ea781" translate="yes" xml:space="preserve">
          <source>gr5</source>
          <target state="translated">gr5</target>
        </trans-unit>
        <trans-unit id="38a34d1925b3e2c1f1767c7f27a2bbaafc31e385" translate="yes" xml:space="preserve">
          <source>gr6</source>
          <target state="translated">gr6</target>
        </trans-unit>
        <trans-unit id="29a184b65cab57768dac7fd2bf422bc583ccc38a" translate="yes" xml:space="preserve">
          <source>graph</source>
          <target state="translated">graph</target>
        </trans-unit>
        <trans-unit id="50c9ef3b90cfa37637e393b4c59cf92456f5dec7" translate="yes" xml:space="preserve">
          <source>grep -v</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253d7e9c069b4d832d564b21a693586b13fef1ef" translate="yes" xml:space="preserve">
          <source>gs264e</source>
          <target state="translated">gs264e</target>
        </trans-unit>
        <trans-unit id="277797fc72e44c587642838a87971fb47217df66" translate="yes" xml:space="preserve">
          <source>gs464</source>
          <target state="translated">gs464</target>
        </trans-unit>
        <trans-unit id="f0626c40f7949acbc192828b7041f9a28414a224" translate="yes" xml:space="preserve">
          <source>gs464e</source>
          <target state="translated">gs464e</target>
        </trans-unit>
        <trans-unit id="27d5482eebd075de44389774fce28c69f45c8a75" translate="yes" xml:space="preserve">
          <source>h</source>
          <target state="translated">h</target>
        </trans-unit>
        <trans-unit id="4fae7454d3ea3567c6e80a99f5d1f88aedcc3ca3" translate="yes" xml:space="preserve">
          <source>haifa-sched.c</source>
          <target state="translated">haifa-sched.c</target>
        </trans-unit>
        <trans-unit id="cae5970fc939e302346d8b50d4fb711b7e515c4b" translate="yes" xml:space="preserve">
          <source>hard</source>
          <target state="translated">hard</target>
        </trans-unit>
        <trans-unit id="2ce76387b746f12f42e2a00a7a4ac666d5e66e77" translate="yes" xml:space="preserve">
          <source>hard-dfp</source>
          <target state="translated">hard-dfp</target>
        </trans-unit>
        <trans-unit id="c19fccb21e7a7bf517a9886e65c208974f098008" translate="yes" xml:space="preserve">
          <source>hard-float</source>
          <target state="translated">hard-float</target>
        </trans-unit>
        <trans-unit id="dc960f1429bffaad8126d8758472c07424899b2e" translate="yes" xml:space="preserve">
          <source>hard-llcs</source>
          <target state="translated">hard-llcs</target>
        </trans-unit>
        <trans-unit id="a68a10a8909a317b7b102f383746504247de8cb8" translate="yes" xml:space="preserve">
          <source>has been specified:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79962415c85fedd7acc794b832e19554c4162aa6" translate="yes" xml:space="preserve">
          <source>has different places where temporaries are destroyed. For the &lt;code&gt;macro&lt;/code&gt; case, the temporary &lt;code&gt;X&lt;/code&gt; is destroyed just after the initialization of &lt;code&gt;b&lt;/code&gt;. In the &lt;code&gt;function&lt;/code&gt; case that temporary is destroyed when the function returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79282e2339226350011dde4781109d0c823d76b" translate="yes" xml:space="preserve">
          <source>has executed. You can use these logfiles along with &lt;code&gt;gprof&lt;/code&gt; to aid in fine-tuning the performance of your programs. &lt;code&gt;gprof&lt;/code&gt; gives timing information you can use along with the information you get from &lt;code&gt;gcov&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63d9bde0a5a4015b269ca653e9c1320de0162fa" translate="yes" xml:space="preserve">
          <source>has no effect if GCC does not recognize the processor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4d3bf98646ef9a0cf021898ad26382bd1362b2" translate="yes" xml:space="preserve">
          <source>has no effect, since there is no user mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5df826a5616ca9e901c4381078b135e43b2f719" translate="yes" xml:space="preserve">
          <source>has no effect, while</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="651181bf3304328e7cca24841c3915d0fdab8445" translate="yes" xml:space="preserve">
          <source>has not been used at all).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4f0bc257e26fb17b68d82f5115106659a75518" translate="yes" xml:space="preserve">
          <source>has special significance to the RX port when used with the &lt;code&gt;interrupt&lt;/code&gt; function attribute. This attribute indicates a function intended to process fast interrupts. GCC ensures that it only uses the registers &lt;code&gt;r10&lt;/code&gt;, &lt;code&gt;r11&lt;/code&gt;, &lt;code&gt;r12&lt;/code&gt; and/or &lt;code&gt;r13&lt;/code&gt; and only provided that the normal use of the corresponding registers have been restricted via the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f672ea05def0dc9220c47d41ff18cb796c934b12" translate="yes" xml:space="preserve">
          <source>has the effect of enabling all the same options as for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5cefc29d1cd820c12af9c00e80edfb293a5b75d" translate="yes" xml:space="preserve">
          <source>has the effect of enabling the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3742a735b804af8ee0bbdf0c54b2a4df413ce387" translate="yes" xml:space="preserve">
          <source>has the same effect as usage of the command wrappers (&lt;code&gt;gcc-ar&lt;/code&gt;, &lt;code&gt;gcc-nm&lt;/code&gt; and &lt;code&gt;gcc-ranlib&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b587aa54c5d2d907e11ef685abd9bbc4d118d63" translate="yes" xml:space="preserve">
          <source>has the value of &lt;code&gt;x&lt;/code&gt; if that is nonzero; otherwise, the value of &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e6440ee92b06810b684c0eb9d765326d59cfc2" translate="yes" xml:space="preserve">
          <source>has three locations. Its primary location is at the &amp;ldquo;+&amp;rdquo; token at column 23. It has two secondary locations, describing the left and right-hand sides of the expression, which have labels. It might be printed in JSON form as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218ddf0b4c3dc7f6fadf59482d50f5692120e485" translate="yes" xml:space="preserve">
          <source>haswell</source>
          <target state="translated">haswell</target>
        </trans-unit>
        <trans-unit id="f0ad3b33cfcc6009a03093da2e97e50bf2151567" translate="yes" xml:space="preserve">
          <source>have to be enabled, and an SVML or ACML ABI-compatible library must be specified at link time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f783741655a8e472e5f4780a9b1059b7b22030b" translate="yes" xml:space="preserve">
          <source>header file to select an MCU-specific supplementary header file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972578531a27a7521178bbd0f8b1f3ad509e3528" translate="yes" xml:space="preserve">
          <source>header file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd6e7ad6e97d9a621862f19e0467cf57646646fa" translate="yes" xml:space="preserve">
          <source>header.h</source>
          <target state="translated">header.h</target>
        </trans-unit>
        <trans-unit id="e235222da43fee0416744b64b9c91b6631f2fb34" translate="yes" xml:space="preserve">
          <source>here is what happens when you run it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d72c7fc3e2e145870beab37c0b70e343ea9c3b" translate="yes" xml:space="preserve">
          <source>hidden</source>
          <target state="translated">hidden</target>
        </trans-unit>
        <trans-unit id="67e814aa09311acf2ae18afa3cb0439a4c1d3bd4" translate="yes" xml:space="preserve">
          <source>hints on which high-level expressions correspond to the various assembly instruction operands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e43b32c9c29c9d114eedfb3318e3070ca6203d" translate="yes" xml:space="preserve">
          <source>histogram difference: This offline tool recomputes the histogram after merging the counters. The resulting histogram, therefore, is precise. The online merging does not have this capability &amp;ndash; the histogram is merged from two histograms and the result is an approximation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe0d24231b6309c90a78eeb8dc6ff2ca2d4cb85" translate="yes" xml:space="preserve">
          <source>hk</source>
          <target state="translated">hk</target>
        </trans-unit>
        <trans-unit id="ac2482e6a3123520808df3e9ad36a215050e036c" translate="yes" xml:space="preserve">
          <source>hle</source>
          <target state="translated">hle</target>
        </trans-unit>
        <trans-unit id="257669eb3da5d12894bddc2461f1d7ec10539863" translate="yes" xml:space="preserve">
          <source>how much computing time each section of code uses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ff031998281e1cb804cf43463541f1e6aabe2a" translate="yes" xml:space="preserve">
          <source>how often each line of code executes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e312aca7d91c66302afdbb5979fabde1b2d3d2" translate="yes" xml:space="preserve">
          <source>hppa*64*-*-hpux*</source>
          <target state="translated">hppa*64*-*-hpux*</target>
        </trans-unit>
        <trans-unit id="51bd95353aeda6615433bea21896c893ef5e62dc" translate="yes" xml:space="preserve">
          <source>hr</source>
          <target state="translated">hr</target>
        </trans-unit>
        <trans-unit id="6a253031d5fc83cdcd7910737760a89b7bcfb849" translate="yes" xml:space="preserve">
          <source>hs</source>
          <target state="translated">hs</target>
        </trans-unit>
        <trans-unit id="0da13baa864ca6b6c2c76334d4f775fffc3d97bf" translate="yes" xml:space="preserve">
          <source>hs34</source>
          <target state="translated">hs34</target>
        </trans-unit>
        <trans-unit id="ffc058d0f016db13ff312652b139210c7f660e76" translate="yes" xml:space="preserve">
          <source>hs38</source>
          <target state="translated">hs38</target>
        </trans-unit>
        <trans-unit id="4d47be1df75bc0addedb2965f6d5fca736160a8d" translate="yes" xml:space="preserve">
          <source>hs38_linux</source>
          <target state="translated">hs38_linux</target>
        </trans-unit>
        <trans-unit id="2eb0656a1382d6fd78acbb83ce44ac8c128ca4f8" translate="yes" xml:space="preserve">
          <source>htm</source>
          <target state="translated">htm</target>
        </trans-unit>
        <trans-unit id="44bbe92a08716970fb44d1415b178cd9a7febb09" translate="yes" xml:space="preserve">
          <source>htm-no-suspend</source>
          <target state="translated">htm-no-suspend</target>
        </trans-unit>
        <trans-unit id="54cfd8886ee74bfc7b30dc3631136b25e351cec0" translate="yes" xml:space="preserve">
          <source>htm-nosc</source>
          <target state="translated">htm-nosc</target>
        </trans-unit>
        <trans-unit id="6a22fb6d903f0a93e77b2bcd5840d1287b3617b7" translate="yes" xml:space="preserve">
          <source>hypersparc</source>
          <target state="translated">hypersparc</target>
        </trans-unit>
        <trans-unit id="042dc4512fa3d391c5170cf3aa61e6a638f84342" translate="yes" xml:space="preserve">
          <source>i</source>
          <target state="translated">i</target>
        </trans-unit>
        <trans-unit id="31794003f55513125c2c4d35e90d78a18a5dfcf7" translate="yes" xml:space="preserve">
          <source>i386</source>
          <target state="translated">i386</target>
        </trans-unit>
        <trans-unit id="f8dc7c111728e358b6f4591f3ac138192f5d92b3" translate="yes" xml:space="preserve">
          <source>i486</source>
          <target state="translated">i486</target>
        </trans-unit>
        <trans-unit id="c1df8838027fa12d0ba309f8099cc1598c7ade1a" translate="yes" xml:space="preserve">
          <source>i586</source>
          <target state="translated">i586</target>
        </trans-unit>
        <trans-unit id="2c8576842b1d47b9505062671aa4f47f93960a95" translate="yes" xml:space="preserve">
          <source>i6400</source>
          <target state="translated">i6400</target>
        </trans-unit>
        <trans-unit id="adfe1e7208e9550d3ead1839f66d5bebc8a7ab82" translate="yes" xml:space="preserve">
          <source>i6500</source>
          <target state="translated">i6500</target>
        </trans-unit>
        <trans-unit id="0b0fa0fe42672daec0c9d00058ff8ed0b69ffb68" translate="yes" xml:space="preserve">
          <source>i686</source>
          <target state="translated">i686</target>
        </trans-unit>
        <trans-unit id="34fb1412749927b2bbd703079ab84196c8c2cac3" translate="yes" xml:space="preserve">
          <source>i686-pc-linux-gnu</source>
          <target state="translated">i686-pc-linux-gnu</target>
        </trans-unit>
        <trans-unit id="285d29d776df695863d4721df2e3c5dc8da8b67e" translate="yes" xml:space="preserve">
          <source>ibmlongdouble</source>
          <target state="translated">ibmlongdouble</target>
        </trans-unit>
        <trans-unit id="d47174a0892de8b7b44188219890cb0afc18103c" translate="yes" xml:space="preserve">
          <source>ic_snoop</source>
          <target state="translated">ic_snoop</target>
        </trans-unit>
        <trans-unit id="b6ce15feacbfde1e6e719b01510e2f7347a804d7" translate="yes" xml:space="preserve">
          <source>icelake-client</source>
          <target state="translated">icelake-client</target>
        </trans-unit>
        <trans-unit id="cf5e36cfee6ac5d9852920fac6c403fa520cea22" translate="yes" xml:space="preserve">
          <source>icelake-server</source>
          <target state="translated">icelake-server</target>
        </trans-unit>
        <trans-unit id="080bfd5b93ccebca0cc43f4ee22a468459282104" translate="yes" xml:space="preserve">
          <source>ieee</source>
          <target state="translated">ieee</target>
        </trans-unit>
        <trans-unit id="9ea09541f7d9adeb2a46198c4550ad26bfc84c17" translate="yes" xml:space="preserve">
          <source>ieee-fp</source>
          <target state="translated">ieee-fp</target>
        </trans-unit>
        <trans-unit id="5164b19cf34eead008777b0f56ac37d01e65f821" translate="yes" xml:space="preserve">
          <source>ieee128</source>
          <target state="translated">ieee128</target>
        </trans-unit>
        <trans-unit id="f98501388c7f39938395a6230e8563114dbafc90" translate="yes" xml:space="preserve">
          <source>ieeelongdouble</source>
          <target state="translated">ieeelongdouble</target>
        </trans-unit>
        <trans-unit id="958f57f57d72a30f329ee5538f21b0257a49a46e" translate="yes" xml:space="preserve">
          <source>if</source>
          <target state="translated">if</target>
        </trans-unit>
        <trans-unit id="896290ef47c96d1ff16b451ec1c128bb7de6b859" translate="yes" xml:space="preserve">
          <source>if &lt;var&gt;arch&lt;/var&gt; is compatible with &lt;var&gt;cpu&lt;/var&gt;. Other combinations of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18585e99a8b953c390b112ba4976d7678f7b522" translate="yes" xml:space="preserve">
          <source>if not explicitly specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383984d0141e75f14565768178c12c9199732106" translate="yes" xml:space="preserve">
          <source>if the inlined code would not work in user mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6537b9ad11d98d9ae3744b822e378c22c75bf84a" translate="yes" xml:space="preserve">
          <source>if there are no objects in the collection, then &lt;code&gt;&lt;var&gt;object expression&lt;/var&gt;&lt;/code&gt; is set to &lt;code&gt;nil&lt;/code&gt; and the loop immediately terminates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b982eb45f386b7147913c8e4970f371a76b10d23" translate="yes" xml:space="preserve">
          <source>if there are objects in the collection, then for each object in the collection (in the order they are returned) &lt;code&gt;&lt;var&gt;object expression&lt;/var&gt;&lt;/code&gt; is set to the object, then &lt;code&gt;&lt;var&gt;statements&lt;/var&gt;&lt;/code&gt; are executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e12d68ebdb14f97e932af339fd1af6ad40d0f54" translate="yes" xml:space="preserve">
          <source>if you want them to be errors rather than warnings).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c391bbc2804d43606d2019690fdbf77282b1fc" translate="yes" xml:space="preserve">
          <source>if you want them to be errors rather than warnings). See &lt;a href=&quot;c-dialect-options#C-Dialect-Options&quot;&gt;Options Controlling C Dialect&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0121bc05e0945dfa630b80cba86e207b6d4ca829" translate="yes" xml:space="preserve">
          <source>ignored</source>
          <target state="translated">ignored</target>
        </trans-unit>
        <trans-unit id="7f1484ef3ef7c65cee671c7ad6331f6e18800244" translate="yes" xml:space="preserve">
          <source>ilp32</source>
          <target state="translated">ilp32</target>
        </trans-unit>
        <trans-unit id="758ee4e37140745f9398020a9f3e74461e438ef4" translate="yes" xml:space="preserve">
          <source>ilp32d</source>
          <target state="translated">ilp32d</target>
        </trans-unit>
        <trans-unit id="f0e576486e709d5a45544ff8b4fa0e3ffb18f5f7" translate="yes" xml:space="preserve">
          <source>ilp32e</source>
          <target state="translated">ilp32e</target>
        </trans-unit>
        <trans-unit id="a979cda06cb83fe39bd0b9ed7ba550762b23d765" translate="yes" xml:space="preserve">
          <source>ilp32f</source>
          <target state="translated">ilp32f</target>
        </trans-unit>
        <trans-unit id="0206a6024ea7e36c26dabec468cdc9e86eb10d06" translate="yes" xml:space="preserve">
          <source>implementation-defined features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470cec587602b47395a317eb72d14272f9628412" translate="yes" xml:space="preserve">
          <source>implies</source>
          <target state="translated">implies</target>
        </trans-unit>
        <trans-unit id="c0b6cb4eaeedf44c8886d4e335874519f6a3013f" translate="yes" xml:space="preserve">
          <source>implies the same options as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032a2b415860b9e25cd0ca54347999b7e024e361" translate="yes" xml:space="preserve">
          <source>improves compilation time over plain LTO, but requires the complete toolchain to be aware of LTO. It requires a linker with linker plugin support for basic functionality. Additionally, &lt;code&gt;nm&lt;/code&gt;, &lt;code&gt;ar&lt;/code&gt; and &lt;code&gt;ranlib&lt;/code&gt; need to support linker plugins to allow a full-featured build environment (capable of building static libraries etc). GCC provides the &lt;code&gt;gcc-ar&lt;/code&gt;, &lt;code&gt;gcc-nm&lt;/code&gt;, &lt;code&gt;gcc-ranlib&lt;/code&gt; wrappers to pass the right options to these tools. With non fat LTO makefiles need to be modified to use them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af10ef20dd9060bbeead0afbc55381a66af442ef" translate="yes" xml:space="preserve">
          <source>in</source>
          <target state="translated">in</target>
        </trans-unit>
        <trans-unit id="aa226974fa017cef3c22745cc4a978bf2de1d032" translate="yes" xml:space="preserve">
          <source>in C and C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a007b25f0a219b4783afa308295733a2ca92c7c" translate="yes" xml:space="preserve">
          <source>in C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a8f2762572c64f344a509d81bd2f736ed224a51" translate="yes" xml:space="preserve">
          <source>in C++98, warn when a narrowing conversion prohibited by C++11 occurs within &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7592ae17ab77ae319980f3b1f70fdb1b268d9469" translate="yes" xml:space="preserve">
          <source>in C.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290dfb05e6eeb9033ccecf4f4b1b433e2fcdc61f" translate="yes" xml:space="preserve">
          <source>in C99 and C++11 modes (and newer).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f5c2426a015c7b3c2b6a8d9c54d576c6a0c180" translate="yes" xml:space="preserve">
          <source>in Constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ada37993f1316f4854627fc135dc27bc9618325" translate="yes" xml:space="preserve">
          <source>in ISO C90 and C++98 modes. To inhibit the warning messages, use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd223862b771bb3de679d08f836a119994a39151" translate="yes" xml:space="preserve">
          <source>in addition to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf18f5c7374815da1cb40d09ad2c3dc18d8ee06" translate="yes" xml:space="preserve">
          <source>in conjunction with this option does &lt;em&gt;not&lt;/em&gt; warn about unknown pragmas in system headers&amp;mdash;for that,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b43e0037c9804e163bf840ae92f1a345f158290" translate="yes" xml:space="preserve">
          <source>in order for this to work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456822dae3e5a2c10f1687d2c54c8717c4856aeb" translate="yes" xml:space="preserve">
          <source>in some configurations. This is intended for bare-board targets when there is indeed no C library available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95035e9ac03180a10ebb438f76c294496cc64060" translate="yes" xml:space="preserve">
          <source>in the GCC sources for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54ca86032f5d24ef17b594ed3ef806c19fc2748" translate="yes" xml:space="preserve">
          <source>in the case of a class method. If the class implements it, the runtime invokes it, passing as argument the selector of the original method, and if it returns &lt;code&gt;YES&lt;/code&gt;, the runtime tries the lookup again, which could now succeed if a matching method was added dynamically by &lt;code&gt;+resolveInstanceMethod:&lt;/code&gt; or &lt;code&gt;+resolveClassMethod:&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="363fac580af77953e78d4a8dc7a370096c6c7735" translate="yes" xml:space="preserve">
          <source>in the case of an instance method, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28b10a20dace6b3cbedbb8534030b8ce1eeed8e" translate="yes" xml:space="preserve">
          <source>in the current directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7d1b0791e133b9b0a5d948203fbe33de0ea076" translate="yes" xml:space="preserve">
          <source>in the current directory. These contain the coverage information of the source file they correspond to. One</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d886471d8491c91788bb17962cda3e9239f7d27d" translate="yes" xml:space="preserve">
          <source>in the current working directory. Note that the numeric codes are not stable and may change from one version of GCC to another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7c478bbdb44b5643d14cd81c8899c2c7826e36b" translate="yes" xml:space="preserve">
          <source>in the directory named by the environment variable &lt;code&gt;VTV_LOGS_DIR&lt;/code&gt; if that is defined or the current working directory otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbcc79dece6f0dbe31679bb739a93299f1c27ca3" translate="yes" xml:space="preserve">
          <source>in the directory named by the environment variable &lt;code&gt;VTV_LOGS_DIR&lt;/code&gt; if that is defined or the current working directory otherwise. It also counts the size of the vtable pointer sets for each class, and writes this information to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bbce7668f34d100d0bc316817e18ac18c91d9bb" translate="yes" xml:space="preserve">
          <source>in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b6df25bbaacd87ab0e69d78ededebded440a3e" translate="yes" xml:space="preserve">
          <source>in the same directory as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84936110d63eee666b7d9444ecd580cce92e1472" translate="yes" xml:space="preserve">
          <source>in the same directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ecb0d890368d7659ee54010045b835dacb8efe" translate="yes" xml:space="preserve">
          <source>include</source>
          <target state="translated">include</target>
        </trans-unit>
        <trans-unit id="0e1383d65155646071f0c11f002b2d3cd836e1d1" translate="yes" xml:space="preserve">
          <source>include/sys</source>
          <target state="translated">include/sys</target>
        </trans-unit>
        <trans-unit id="a7e37ab5cd59a64a8cdf11570f52efba87dc6c1c" translate="yes" xml:space="preserve">
          <source>ind:</source>
          <target state="translated">ind:</target>
        </trans-unit>
        <trans-unit id="c49a413393042e56a9122bb32b3c6c2697e5c2a6" translate="yes" xml:space="preserve">
          <source>indicates that the target CPU always has an FPU and so the instruction does not need emulation. These instructions are not generated unless you also use the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4866b9642e9ff2982ef108e195a844d50fb1406a" translate="yes" xml:space="preserve">
          <source>indicates that we do not expect to call &lt;code&gt;foo&lt;/code&gt;, since we expect &lt;code&gt;x&lt;/code&gt; to be zero. Since you are limited to integral expressions for &lt;var&gt;exp&lt;/var&gt;, you should use constructions such as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df36c5bd5d844922bec55eca16019f19bb9eea9" translate="yes" xml:space="preserve">
          <source>indicates the instruction set the compiler can use, and there is no common instruction set applicable to all processors. In contrast,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4945175cd7e1d7cd501f56bcfc9a7e87851d25" translate="yes" xml:space="preserve">
          <source>indicates the instruction set the compiler can use, and there is no generic instruction set applicable to all processors. In contrast,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb54c133aa189f2616fb64a1823b9c1b435fb8e3" translate="yes" xml:space="preserve">
          <source>indicates the processor (or, in this case, collection of processors) for which the code is optimized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="363d89cf6479dc4c6a96c5bcbb27208b8b907e01" translate="yes" xml:space="preserve">
          <source>indirect_branch(&quot;&lt;var&gt;choice&lt;/var&gt;&quot;)</source>
          <target state="translated">indirect_branch(&quot;&lt;var&gt;choice&lt;/var&gt;&quot;)</target>
        </trans-unit>
        <trans-unit id="0790518083883f217bacd3c0e19f7af0202bf3d2" translate="yes" xml:space="preserve">
          <source>indirect_return</source>
          <target state="translated">indirect_return</target>
        </trans-unit>
        <trans-unit id="cf74f06324c6f95a78060a6a6ebae3ee0ad42b3d" translate="yes" xml:space="preserve">
          <source>information on the compiler version and command-line options,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329ebf0ca58f5c8d7367f048c3a47ba47584bb9b" translate="yes" xml:space="preserve">
          <source>inhibits the use of the directory of the current file directory as the first search directory for &lt;code&gt;#include&amp;nbsp;&quot;&lt;var&gt;file&lt;/var&gt;&quot;&lt;/code&gt;. There is no way to override this effect of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0334bfb75651d378772f06327f94745fa0aeba" translate="yes" xml:space="preserve">
          <source>initial-exec</source>
          <target state="translated">initial-exec</target>
        </trans-unit>
        <trans-unit id="6e9937e7ddf42c6644513492f9c75aa07378e781" translate="yes" xml:space="preserve">
          <source>inline</source>
          <target state="translated">inline</target>
        </trans-unit>
        <trans-unit id="5feed38a23f881b057488016f0af3e16c3639577" translate="yes" xml:space="preserve">
          <source>inline-all-stringops</source>
          <target state="translated">inline-all-stringops</target>
        </trans-unit>
        <trans-unit id="c67011c2e3d800ec7243246dd0e7c1cea0cb01eb" translate="yes" xml:space="preserve">
          <source>inline-clone</source>
          <target state="translated">inline-clone</target>
        </trans-unit>
        <trans-unit id="b1d585dfdaf488b6f067f31a84d0afedd3400293" translate="yes" xml:space="preserve">
          <source>inline-only-static</source>
          <target state="translated">inline-only-static</target>
        </trans-unit>
        <trans-unit id="504e1246728f7d06d3252135321793a46f3b536d" translate="yes" xml:space="preserve">
          <source>inline-stringops-dynamically</source>
          <target state="translated">inline-stringops-dynamically</target>
        </trans-unit>
        <trans-unit id="35a480f8b2dda8c905de86c6ac380e075002ae80" translate="yes" xml:space="preserve">
          <source>inline.txt</source>
          <target state="translated">inline.txt</target>
        </trans-unit>
        <trans-unit id="e509fb961711c39912478007f6ff4ce76ce99067" translate="yes" xml:space="preserve">
          <source>installation problem, cannot exec cpp0: No such file or directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f8225b53be7b57e754e95d924fb7babef9c41dc" translate="yes" xml:space="preserve">
          <source>instead for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb82821f5443620916128c66c024a61d87b0565d" translate="yes" xml:space="preserve">
          <source>instead of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d706f5d9b5b19c3e1fc8828d39e7d7089bd2452" translate="yes" xml:space="preserve">
          <source>instead of the static version. The most common of these is when the application wishes to throw and catch exceptions across different shared libraries. In that case, each of the libraries as well as the application itself should use the shared</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6568964b0e39083c6acb94093d9e6cd117dbe508" translate="yes" xml:space="preserve">
          <source>instead.</source>
          <target state="translated">instead.</target>
        </trans-unit>
        <trans-unit id="c5ec8c8946515c71d48ef725cea09e02afdbbdad" translate="yes" xml:space="preserve">
          <source>instead. (These maximums are 8k on the SPARC, 28k on AArch64 and 32k on the m68k and RS/6000. The x86 has no such limit.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbaf950f5688eafc0e71b4a58d1cacb3db9fcda9" translate="yes" xml:space="preserve">
          <source>instead. Specifying this option is equivalent to specifying all the individual</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2b90408fdab81ca0bf775a1c8ac29461320cd01" translate="yes" xml:space="preserve">
          <source>instead. This can be used to change an absolute path to a relative path by using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a702b97751b9809a53732b818bf230c9dbb1975" translate="yes" xml:space="preserve">
          <source>instead. This can be used to replace a build-time path with an install-time path in the debug info. It can also be used to change an absolute path to a relative path by using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c206e883d09ded0d42b5bee5fe54308561f73c4" translate="yes" xml:space="preserve">
          <source>instead. This option causes GCC to make only one TOC entry for every file. When you specify this option, GCC produces code that is slower and larger but which uses extremely little TOC space. You may wish to use this option only on files that contain less frequently-executed code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41530fea0e86c66059b8c5d9ca7b8a99c2baadce" translate="yes" xml:space="preserve">
          <source>instructs GCC to follow the ABI-specified alignment rules. GCC defaults to the standard alignment defined in the ABI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75deaaafc478c3401bbb5c8c27220a0424f3f7b6" translate="yes" xml:space="preserve">
          <source>instrumentation and real inlining pass. Doing so makes profiling significantly cheaper and usually inlining faster on programs having large chains of nested wrapper functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="translated">int</target>
        </trans-unit>
        <trans-unit id="676f0a870df351bcd155d6b23baaf941ed9fff84" translate="yes" xml:space="preserve">
          <source>int f (0) __attribute__ ((something));</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f964dc33ce64074300091f15fdacb7fe127dc28c" translate="yes" xml:space="preserve">
          <source>int len</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eecddd10d7bd87d3d765bf65504605117c02ea2e" translate="yes" xml:space="preserve">
          <source>intel</source>
          <target state="translated">intel</target>
        </trans-unit>
        <trans-unit id="8fcde800c813e524da1d9b951fc2decaf9f1b9ed" translate="yes" xml:space="preserve">
          <source>interaptiv</source>
          <target state="translated">interaptiv</target>
        </trans-unit>
        <trans-unit id="72906b68a4c37bf570ea285e54ed2872ce6275cd" translate="yes" xml:space="preserve">
          <source>intercallability</source>
          <target state="translated">intercallability</target>
        </trans-unit>
        <trans-unit id="fc24975fe162222cfd19ed515b65dc4d79d38290" translate="yes" xml:space="preserve">
          <source>interfaces for runtime arithmetic support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f33a7c798af6fd6abb28049d9c1b3edfa2fd24a" translate="yes" xml:space="preserve">
          <source>internal</source>
          <target state="translated">internal</target>
        </trans-unit>
        <trans-unit id="25e06e88fe8949aaa3effb37bdf41d0c3a0e5670" translate="yes" xml:space="preserve">
          <source>internals</source>
          <target state="translated">internals</target>
        </trans-unit>
        <trans-unit id="13a2745f394d4ccefd9fb340931d5d3fb13b70cf" translate="yes" xml:space="preserve">
          <source>interoperability</source>
          <target state="translated">interoperability</target>
        </trans-unit>
        <trans-unit id="16ba36e5428bc82de265c233e02bd5d0cfe895d5" translate="yes" xml:space="preserve">
          <source>into a function compiled with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c264606d3b6fcf37d494263f988b9176e687d1" translate="yes" xml:space="preserve">
          <source>into a function compiled without &lt;code&gt;-mstrict-align&lt;/code&gt; is not allowed. However, inlining a function compiled without</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa57ffcc5b327e97599e9fcf6851067bea3e905" translate="yes" xml:space="preserve">
          <source>into errors. This switch takes a negative form, to be used to negate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e31652c1aafb5171e53b5a9ce78ac16130f3db" translate="yes" xml:space="preserve">
          <source>into functions in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3141c68fbc3a449523372d86aeda1e960f98bb17" translate="yes" xml:space="preserve">
          <source>into shared libraries by default. Otherwise, it takes advantage of the linker and optimizes away the linking with the shared version of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c0dfc0c2ad34b9732f88364cd5a12f71335d06" translate="yes" xml:space="preserve">
          <source>invoking constructors and destructors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e47e3b74c32847a77f6ecd252bdd9099eac37e3" translate="yes" xml:space="preserve">
          <source>ipa</source>
          <target state="translated">ipa</target>
        </trans-unit>
        <trans-unit id="f045c04e878b2215c5f4db97fda19ac2bde1f8a4" translate="yes" xml:space="preserve">
          <source>ipa-cp-array-index-hint-bonus</source>
          <target state="translated">ipa-cp-array-index-hint-bonus</target>
        </trans-unit>
        <trans-unit id="b3c176b75e6260e4e209318a7fca0f6925e2533f" translate="yes" xml:space="preserve">
          <source>ipa-cp-eval-threshold</source>
          <target state="translated">ipa-cp-eval-threshold</target>
        </trans-unit>
        <trans-unit id="f6939099373362eee7c2dc92905276015823defa" translate="yes" xml:space="preserve">
          <source>ipa-cp-loop-hint-bonus</source>
          <target state="translated">ipa-cp-loop-hint-bonus</target>
        </trans-unit>
        <trans-unit id="918fba950c95bbba786a3ed4fa30f1989faf2214" translate="yes" xml:space="preserve">
          <source>ipa-cp-value-list-size</source>
          <target state="translated">ipa-cp-value-list-size</target>
        </trans-unit>
        <trans-unit id="be0af97e74ceabc228c11ed6a4921a4e40a5502a" translate="yes" xml:space="preserve">
          <source>ipa-max-aa-steps</source>
          <target state="translated">ipa-max-aa-steps</target>
        </trans-unit>
        <trans-unit id="b7afb31e51e6933a80cf182a9b4f5d128ab0a547" translate="yes" xml:space="preserve">
          <source>ipa-max-agg-items</source>
          <target state="translated">ipa-max-agg-items</target>
        </trans-unit>
        <trans-unit id="236a23b2d78b1ae5f2d51e19fd9fbf7344c8aed2" translate="yes" xml:space="preserve">
          <source>ipa-sra-ptr-growth-factor</source>
          <target state="translated">ipa-sra-ptr-growth-factor</target>
        </trans-unit>
        <trans-unit id="b47f363e2b430c0647f14deea3eced9b0ef300ce" translate="yes" xml:space="preserve">
          <source>is</source>
          <target state="translated">is</target>
        </trans-unit>
        <trans-unit id="fb6e89ad0914061199d71839ab76f386c8cd821c" translate="yes" xml:space="preserve">
          <source>is &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b102fe9aaa76407ccedfb32faaf064c67bc06d8" translate="yes" xml:space="preserve">
          <source>is &lt;em&gt;O(N^2)&lt;/em&gt; in the number of edges incoming to each block. Increasing values mean more aggressive optimization, making the compilation time increase with probably small improvement in executable size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732fb6ef2664c00f24cbc2f5d37723e4dcf80e61" translate="yes" xml:space="preserve">
          <source>is a built-in construct that returns a constant number of bytes from &lt;var&gt;ptr&lt;/var&gt; to the end of the object &lt;var&gt;ptr&lt;/var&gt; pointer points to (if known at compile time). To determine the sizes of dynamically allocated objects the function relies on the allocation functions called to obtain the storage to be declared with the &lt;code&gt;alloc_size&lt;/code&gt; attribute (see &lt;a href=&quot;common-function-attributes#Common-Function-Attributes&quot;&gt;Common Function Attributes&lt;/a&gt;). &lt;code&gt;__builtin_object_size&lt;/code&gt; never evaluates its arguments for side effects. If there are any side effects in them, it returns &lt;code&gt;(size_t) -1&lt;/code&gt; for &lt;var&gt;type&lt;/var&gt; 0 or 1 and &lt;code&gt;(size_t) 0&lt;/code&gt; for &lt;var&gt;type&lt;/var&gt; 2 or 3. If there are multiple objects &lt;var&gt;ptr&lt;/var&gt; can point to and all of them are known at compile time, the returned number is the maximum of remaining byte counts in those objects if &lt;var&gt;type&lt;/var&gt; &amp;amp; 2 is 0 and minimum if nonzero. If it is not possible to determine which objects &lt;var&gt;ptr&lt;/var&gt; points to at compile time, &lt;code&gt;__builtin_object_size&lt;/code&gt; should return &lt;code&gt;(size_t) -1&lt;/code&gt; for &lt;var&gt;type&lt;/var&gt; 0 or 1 and &lt;code&gt;(size_t) 0&lt;/code&gt; for &lt;var&gt;type&lt;/var&gt; 2 or 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="673f99f7ecce2622b3fbd1bb3c771397559b82f2" translate="yes" xml:space="preserve">
          <source>is a deprecated alias for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cfc542aa3ca7ba8fad061900fb107b13233b16c" translate="yes" xml:space="preserve">
          <source>is a suitable definition of the &lt;code&gt;offsetof&lt;/code&gt; macro. In C++, &lt;var&gt;type&lt;/var&gt; may be dependent. In either case, &lt;var&gt;member&lt;/var&gt; may consist of a single identifier, or a sequence of member accesses and array references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568bb6abcde3903b302d0740f863d7e43100c31b" translate="yes" xml:space="preserve">
          <source>is a valid (though slightly more complex than necessary) expression for the absolute value of &lt;code&gt;foo ()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec26ab0f2bc9ae9e48bbf42e6fcaa131fda9c073" translate="yes" xml:space="preserve">
          <source>is active (default for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146c03d33944360c68794b6f637067ba2d313621" translate="yes" xml:space="preserve">
          <source>is active, which is enabled by optimizations in most targets. The precision of the warnings depends on the optimization options used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09074e7b0ff13054f4243fb658dd9dc0b16a0a52" translate="yes" xml:space="preserve">
          <source>is active. It warns about code that might break the strict aliasing rules that the compiler is using for optimization. Higher levels correspond to higher accuracy (fewer false positives). Higher levels also correspond to more effort, similar to the way</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51ed72ec606e50655eb4027eb0b6b7aa57d959d" translate="yes" xml:space="preserve">
          <source>is active. It warns about code that might break the strict aliasing rules that the compiler is using for optimization. The warning does not catch all cases, but does attempt to catch the more common pitfalls. It is included in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d783992febe2d01865acec4d694b685cb6043678" translate="yes" xml:space="preserve">
          <source>is active. It warns about functions that are not protected against stack smashing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3ebda4ea343d8dc0229024dc90db6c0e31e956" translate="yes" xml:space="preserve">
          <source>is added to get the Fortran runtime libraries. In general, when mixing languages in LTO mode, you should use the same link command options as when mixing languages in a regular (non-LTO) compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6e7d2e063e36076b02b2e78fc816a7ca08aad2" translate="yes" xml:space="preserve">
          <source>is allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f594e16e19b410107fd2d00b9b2f716b524def" translate="yes" xml:space="preserve">
          <source>is also accepted, the former enables recovery for all sanitizers that support it, the latter disables recovery for all sanitizers that support it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd606e191dafda73204465247bd4052c523a668" translate="yes" xml:space="preserve">
          <source>is also enabled automatically. This is because the RX FPU instructions are themselves unsafe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1aca6b20a7df67de2e535a2eb3289de570ab09" translate="yes" xml:space="preserve">
          <source>is also in effect, the topmost word of the save area is always used to store the backchain, and the return address register is always saved two words below the backchain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4630635452e4fc4651d251ce0b38b7d2c431f07" translate="yes" xml:space="preserve">
          <source>is also passed on to the various processes invoked by &lt;code&gt;gcc&lt;/code&gt;, so that they can display the command-line options they accept. If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8390734688c702effe41d05244557a495aa141" translate="yes" xml:space="preserve">
          <source>is also permissible, and is equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26b90e032b4d2fb51cb336e4c7b6b99f6a759d5" translate="yes" xml:space="preserve">
          <source>is also specified anywhere on the command line then this takes precedence over any</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8a053f876a09a0d8888a36f218e3b58f4e1914" translate="yes" xml:space="preserve">
          <source>is also specified, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d15a05a0e0d803bfc1d7627dff5ae5dec4082d5" translate="yes" xml:space="preserve">
          <source>is also specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5797a82ba50375f25ec24005ad1a510ef161e5d7" translate="yes" xml:space="preserve">
          <source>is also specified. This is because NEON hardware does not fully implement the IEEE 754 standard for floating-point arithmetic (in particular denormal values are treated as zero), so the use of NEON instructions may lead to a loss of precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4285d03f04ce984c04d36f7f30f93e6d3d596f80" translate="yes" xml:space="preserve">
          <source>is also turned on and the target supports this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2d69d9b3b6240a65bf80d5769e7981912cb508" translate="yes" xml:space="preserve">
          <source>is an option meant only for C++ programs; you can use the other options with any language supported by GCC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49416380b743825790c956f3f4a845739fce30fc" translate="yes" xml:space="preserve">
          <source>is an option meant only for Objective-C and Objective-C++ programs; you can use the other options with any language supported by GCC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74a4519c4c0a071c30cc53047c1628936304981" translate="yes" xml:space="preserve">
          <source>is available as a shared library, and the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d70aafd40292cd7753e9c297ea9d77155a2a5b2" translate="yes" xml:space="preserve">
          <source>is built on AIX with &amp;ldquo;runtime-linking&amp;rdquo; enabled so that symbol merging can occur. To utilize this feature, the application linked with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5469846fb6b48943e2226f0ef93c24e4e1adddba" translate="yes" xml:space="preserve">
          <source>is call-compatible with code compiled with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5e2ccef6785163a138364b4749d2f0449b855d" translate="yes" xml:space="preserve">
          <source>is call-compatible with code generated with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bec665c2a10100190ea659a8f443039f98b0123" translate="yes" xml:space="preserve">
          <source>is changed. Instead of describing the displayed options, an indication is given as to whether the option is enabled, disabled or set to a specific value (assuming that the compiler knows this at the point where the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d75a870f4323732673c621575596a4acea43992" translate="yes" xml:space="preserve">
          <source>is correct because the &lt;code&gt;xsaddqp&lt;/code&gt; instruction only takes Altivec registers, while:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac6acc4547d1a98e326ec20e99e3e1b7c921364" translate="yes" xml:space="preserve">
          <source>is correct but:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f570f1f62c9f5902a21f6cd19a21f46c5242473c" translate="yes" xml:space="preserve">
          <source>is correct, but:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce287e8d602090ee2c206b84e6471f11fac0144" translate="yes" xml:space="preserve">
          <source>is disabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c109ad469cfa1b1b1f213b26e070723a858465a" translate="yes" xml:space="preserve">
          <source>is enabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd20467f203d1c074e359a77a9ea5ff97ba83709" translate="yes" xml:space="preserve">
          <source>is enabled and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce0206d924e900a2858836a76b49f84937a09f5" translate="yes" xml:space="preserve">
          <source>is enabled by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ce9e89f08ae2a6f977a63794b597cd2e1d9ec2" translate="yes" xml:space="preserve">
          <source>is enabled by default on a language by language basis to let the compiler avoid generating them, if it computes that this is safe, and replace them with descriptors. Descriptors are made up of data only, but the generated code must be prepared to deal with them. As of this writing,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610e1f1b49ccac8dab702153e2cf776dc8eecf3f" translate="yes" xml:space="preserve">
          <source>is enabled by default only for Ada.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fce9f7ab04c0f6eb926b7054de595b1f58f9c8d" translate="yes" xml:space="preserve">
          <source>is enabled by default when this type is selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3209ca5b81571cfea34db5fd5a502361c59ff7c" translate="yes" xml:space="preserve">
          <source>is enabled by default when using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48db418e42321c370f920130cfb3a4db09682b4" translate="yes" xml:space="preserve">
          <source>is enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754afa79e104fd1d11b2cbd5ee43cd80efa7de6c" translate="yes" xml:space="preserve">
          <source>is enabled on PowerPC Linux systems using the ISA 3.0 instruction set, and disabled on other systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f4bbb036e51308d3e16445a5c7a679b93b85a2" translate="yes" xml:space="preserve">
          <source>is enabled on PowerPC Linux systems using the VSX instruction set, and disabled on other systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f24a7fdda21fde15cc99185a1ec763eacb08125" translate="yes" xml:space="preserve">
          <source>is enabled the compile stage is faster but you cannot perform a regular, non-LTO link on them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0618ba1361bf5896719a17e121856eed90bb18d7" translate="yes" xml:space="preserve">
          <source>is enabled together with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fa2df54241cd5e33e7491dac0cdcf352cd5f59" translate="yes" xml:space="preserve">
          <source>is enabled, a redundant load elimination pass is performed after reload. The purpose of this pass is to clean up redundant spilling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9388a49aad8a80f3367fed216478b53665e54244" translate="yes" xml:space="preserve">
          <source>is enabled, a store motion pass is run after global common subexpression elimination. This pass attempts to move stores out of loops. When used in conjunction with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb4239540142738066455db366810f8fd9f68d7" translate="yes" xml:space="preserve">
          <source>is enabled, global common subexpression elimination attempts to move loads that are only killed by stores into themselves. This allows a loop containing a load/store sequence to be changed to a load outside the loop, and a copy/store within the loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c350a86ebf8ada2743a9f4282bf0f795213bc2" translate="yes" xml:space="preserve">
          <source>is enabled, the global common subexpression elimination pass eliminates redundant loads that come after stores to the same memory location (both partial and full redundancies).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5056dfbbce7264749a59530e95c5a58e2cd60f" translate="yes" xml:space="preserve">
          <source>is enabled, then &lt;var&gt;cleanup_function&lt;/var&gt; is run during the stack unwinding that happens during the processing of the exception. Note that the &lt;code&gt;cleanup&lt;/code&gt; attribute does not allow the exception to be caught, only to perform an action. It is undefined what happens if &lt;var&gt;cleanup_function&lt;/var&gt; does not return normally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7313354b737f29ddde1fb1e7d3ce343edbd6b3f0" translate="yes" xml:space="preserve">
          <source>is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec285792f84b2006557cfe7a76ef03e4dffbd46" translate="yes" xml:space="preserve">
          <source>is equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ebfbe2e5a44185269606875a5d21dc5db75eef" translate="yes" xml:space="preserve">
          <source>is equivalent to one of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ab6ac7001b131bc4dc74bd619c612205dff372" translate="yes" xml:space="preserve">
          <source>is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70eda8efc2d26971e265a967972d82926e9ea217" translate="yes" xml:space="preserve">
          <source>is explicitly enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccbf100358a1da0c8c49c8e16a4732aa196e1c35" translate="yes" xml:space="preserve">
          <source>is explicitly requested. Additionally</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4947b165dbf6289f41f74c1d96879d2adbdd69bd" translate="yes" xml:space="preserve">
          <source>is found in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e05456bb8fef09099188c7a2bf1f7bb2c1b15ab" translate="yes" xml:space="preserve">
          <source>is given, functions have a small prologue which decides whether to split the stack. Functions with the &lt;code&gt;no_split_stack&lt;/code&gt; attribute do not have that prologue, and thus may run with only a small amount of stack space available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f2654b110054bce27d4604268533e4097dc61a" translate="yes" xml:space="preserve">
          <source>is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a2fe9700ccac0c431d5bd5c42140522c955708" translate="yes" xml:space="preserve">
          <source>is implicit if the input file has one of the extensions &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30089c0b5ff46a64aff2d16620092364f8d9531e" translate="yes" xml:space="preserve">
          <source>is implicitly enabled. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c2473ffd401ef6855dfd4d27d113f87d1a71b9" translate="yes" xml:space="preserve">
          <source>is implicitly set, which results in faster floating-point greater-equal and less-equal comparisons. The implicit settings can be overridden by specifying either</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef15c9aa46487b2583354e6f513354146278f9dd" translate="yes" xml:space="preserve">
          <source>is in effect and the selected code generation option (e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2dead7c51955c8ae5c94ff113130ca5eb89b70c" translate="yes" xml:space="preserve">
          <source>is in effect the C preprocessor symbol &lt;code&gt;__V850_8BYTE_ALIGN__&lt;/code&gt; is defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bfccdba87993d911993985036d4aa67d13a2524" translate="yes" xml:space="preserve">
          <source>is in effect), or &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8984fa80f6e6a9d62a0e4b878f29e2a71e3cdb4" translate="yes" xml:space="preserve">
          <source>is in effect, both the branch and the body of the &lt;code&gt;if&lt;/code&gt; statement (but not the call to &lt;code&gt;snprint&lt;/code&gt;) can be optimized away when &lt;code&gt;i&lt;/code&gt; is a 32-bit or smaller integer because the return value is guaranteed to be at most 8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8970ded5025e0efefa58b4f766e9a66bd1796828" translate="yes" xml:space="preserve">
          <source>is in effect, enable generation of &lt;code&gt;frecipd&lt;/code&gt;, &lt;code&gt;fsqrtd&lt;/code&gt;, and &lt;code&gt;fdivd&lt;/code&gt; instructions. This is the default except when compiling for CK803.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107f3ac82acaeb6823eb4f61bfe6b2697c3e3484" translate="yes" xml:space="preserve">
          <source>is in effect, enable generation of double-precision float instructions. This is the default except when compiling for CK803.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a515a0f21dcd0f1cf39db8f361f67cc02846b519" translate="yes" xml:space="preserve">
          <source>is in effect, in which case this pragma will generate an error as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc22e4c04e8aca09ee0f90fcf92e438bbc0042d" translate="yes" xml:space="preserve">
          <source>is in effect, static data is accessed via &lt;em&gt;gp-relative&lt;/em&gt; relocations. When</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d86752b7dd7d137abe21c490358f8505075c11" translate="yes" xml:space="preserve">
          <source>is in effect, the backchain is placed into the topmost word of the 96/160 byte register save area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a676fe948eef62b69e6fd6acb431daeb15f72c" translate="yes" xml:space="preserve">
          <source>is in effect, the backchain pointer is stored at the bottom of the stack frame; when</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f71aadf50c18579748c6456b5e95ba08181d232a" translate="yes" xml:space="preserve">
          <source>is in effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8b334507948786daf7534cc4d1242db85465cd9" translate="yes" xml:space="preserve">
          <source>is in effect. In that case &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1dd30f726b4beab712afb5a21187b15babf718" translate="yes" xml:space="preserve">
          <source>is in effect. Otherwise, the behavior when this is not set is equivalent to level &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc31ef0bc7521376f7d803a4c7bcc2c794f1dfba" translate="yes" xml:space="preserve">
          <source>is in effect. With</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9890610150eaf9bc431f86bdd55b9810dededbc7" translate="yes" xml:space="preserve">
          <source>is in effect; this means that operations may be carried out in a wider precision than the types specified in the source if that would result in faster code, and it is unpredictable when rounding to the types specified in the source code takes place. When compiling C, if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e2a1c1f3a07891e536d5a12d766bb276e493688" translate="yes" xml:space="preserve">
          <source>is in how they are implemented in the compiler; some targets use one, some use the other, a few use both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06de566b2dc0d4528d8f018b9dc34ebb8dde001e" translate="yes" xml:space="preserve">
          <source>is in use, GCC recognizes this &lt;code&gt;#pragma&lt;/code&gt; and loads the PCH.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613fbadd1707fc806e2de34b2e527c07fc899d01" translate="yes" xml:space="preserve">
          <source>is in use, the compiler allocates distinct stack memory for all variables that do not have the &lt;code&gt;register&lt;/code&gt; storage-class specifier; if &lt;code&gt;register&lt;/code&gt; is specified, the variable may have a shorter lifespan than the code would indicate and may never be placed in memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b81df77553d1178dc48269c1f8121ee00194a4" translate="yes" xml:space="preserve">
          <source>is included in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12dd3d6e6be049f229fe70b5446ab555c77cbe63" translate="yes" xml:space="preserve">
          <source>is included in multiple source files and you want to see the individual contributions. If you use the &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1849e7b02d8173087c5c121e9745161bc26ca3" translate="yes" xml:space="preserve">
          <source>is incompatible with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785a6cb87f315731189024d914582756694739ee" translate="yes" xml:space="preserve">
          <source>is incorrect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9466c70fd367a77f60ec1b3b6e5ec61bcbb7ee50" translate="yes" xml:space="preserve">
          <source>is intended to be used by GCC developers. Using it may lead to code paths not covered by testing and can potentially result in compiler ICEs or runtime errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356e538aa7d31e91c531443ce8a20eeb508b57ed" translate="yes" xml:space="preserve">
          <source>is interpreted as a synonym for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca7a1a5cd5bb108f6a284d498161ff0c36a4277" translate="yes" xml:space="preserve">
          <source>is invalid even if the size of the structure is the same as the size of the &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce04f395b8a61fa58aa40a30a19998e3bd8e6d2c" translate="yes" xml:space="preserve">
          <source>is less efficient, since it takes 4 instructions to fetch the value of a global symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e7d6fcfb3ff545736a7e7206c9e828899d7d97" translate="yes" xml:space="preserve">
          <source>is mapped to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b5ab8344914b65a48653daa47ac41da9d8c764" translate="yes" xml:space="preserve">
          <source>is needed to dump all profile data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5964f5e1fe15d1e243182cc45bea0339e82c071" translate="yes" xml:space="preserve">
          <source>is not allowed, as some sanitizers cannot be used together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71dbd2bb24ca2b17efd67e5161a7eb3256b2c56d" translate="yes" xml:space="preserve">
          <source>is not also specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d01ef2d3321730522be0f99dab805f31bcd0a2" translate="yes" xml:space="preserve">
          <source>is not an option, then the linker can fix up these calls so that the code compiled without</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b6fb39fad6449df2c190bf4fa8923cc4c5491a" translate="yes" xml:space="preserve">
          <source>is not correct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85a40a23da82a9e507884fe09a03af3dc474c5c" translate="yes" xml:space="preserve">
          <source>is not disabled if specified at compilation time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d3a33f89a3de8c4b3f6faa1973d7f396349ebe" translate="yes" xml:space="preserve">
          <source>is not enabled by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f785f3baa7126dcbe41aed62b3c780ba0c0630ab" translate="yes" xml:space="preserve">
          <source>is not enabled, that will most certainly lead to silently mismatching location views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de688494df27ead856f476ba83f3133562f0a7f" translate="yes" xml:space="preserve">
          <source>is not given on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f562a923a29c702d06e25a7e4767997d1cabd00c" translate="yes" xml:space="preserve">
          <source>is not given, this option is still enabled unless trigraphs are enabled. To get trigraph conversion without warnings, but get the other</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2534644d1d0c224f5bcc9c7165e49edcb26f2e" translate="yes" xml:space="preserve">
          <source>is not given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a193069f6eceec03665cf2140acd968a8fcf06de" translate="yes" xml:space="preserve">
          <source>is not implemented for languages other than C. On the x86, it has no effect if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf373e932e6a1b57bf84ef36bd71fc56b7ee7dc" translate="yes" xml:space="preserve">
          <source>is not implied,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f280220bbc0154f9e2397408d977cc5401d0c1" translate="yes" xml:space="preserve">
          <source>is not implied. The driver determines &lt;var&gt;file&lt;/var&gt; based on whether an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ce92bd6400ad7effb8be6b9865b99ff949cd85" translate="yes" xml:space="preserve">
          <source>is not in effect, the inlined code manipulates the instruction cache address array directly with an associative write. This not only requires privileged mode at run time, but it also fails if the cache line had been mapped via the TLB and has become unmapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b83101f5a5bcbf6d241d14bec4aaeef55bb0b97" translate="yes" xml:space="preserve">
          <source>is not needed when linker plugin is active (see</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8426081bf09b536fa19a5e5ce11f8cf7033212e0" translate="yes" xml:space="preserve">
          <source>is not possible with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055e589871dcac329cc5502637d52e80fde158e6" translate="yes" xml:space="preserve">
          <source>is not presently supported with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b0dca9f35a8687430bed86de1b308cbdcae850" translate="yes" xml:space="preserve">
          <source>is not required to allow this syntax in Objective-C.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf762de2db36ca4e1f1782eb7146391d4478f31" translate="yes" xml:space="preserve">
          <source>is not set to &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa067663489b53e39a091e17cfabc86e06a5aceb" translate="yes" xml:space="preserve">
          <source>is not specified, the default is &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c39449a92c34e10d16bdf09ad1993c80e75664" translate="yes" xml:space="preserve">
          <source>is not specified, the default is 4 (16 bytes or 128 bits).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83eda236032cc8881c952f1c4649f79e9aa481ed" translate="yes" xml:space="preserve">
          <source>is not specified, the default is 4 (16 bytes or 128-bits).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b030ff360e06fd0cd903dfd88da42e40b04b439" translate="yes" xml:space="preserve">
          <source>is not specified, the default is to put an executable file in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f73bde4f3c3c949ff257da6102050fd2c59755" translate="yes" xml:space="preserve">
          <source>is not specified, the driver tries two standard prefixes,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22aed9d2b8f4c01672e807dc2df15f3000bf151d" translate="yes" xml:space="preserve">
          <source>is not specified, the one specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dccbaf5f4afde3a9e5ac062703555a0cf670cbe5" translate="yes" xml:space="preserve">
          <source>is not specified, the version number from this option is used for compatibility aliases. If no explicit version number is provided with this option, but</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6262847e2e9a2a4faaac0373eff646efbf154b31" translate="yes" xml:space="preserve">
          <source>is not supported with link-time optimization (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4941b8f65f3ef7c3339a3993ea6937da25b1da0" translate="yes" xml:space="preserve">
          <source>is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9206e89d1c4da507a5c3f0e9dbce6a03b803d9" translate="yes" xml:space="preserve">
          <source>is not supported. In order to build a linux kernel use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc11a9ef7d4d28154dc88fe7e8f6d85305dab512" translate="yes" xml:space="preserve">
          <source>is not used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc43db1fea2e1ded050d46352b4e9d2dbd1242e5" translate="yes" xml:space="preserve">
          <source>is not used; otherwise, substitute the name of a temporary file, just like &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d61916ceb71003efd2ed030ec44604ecd0b3be" translate="yes" xml:space="preserve">
          <source>is not useful unless you also provide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfc2426896183082a4417614452dabe9bab8c927" translate="yes" xml:space="preserve">
          <source>is not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ed40106c49a65471bcc33db8c0f94a4f430283" translate="yes" xml:space="preserve">
          <source>is not. When assembler support is not available, this may still be enabled, but it will force GCC to output internal line number tables, and if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50839aeb39eaa739ea4cd7818dbb3e5b775fbdd0" translate="yes" xml:space="preserve">
          <source>is on by default. You cannot call through pointers to nested functions or pointers to functions compiled in other languages that use the static chain if you use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7570a9a5b37051a6416027c4d88a485f84896bdb" translate="yes" xml:space="preserve">
          <source>is passed directly on to the linker along with the keyword &lt;var&gt;keyword&lt;/var&gt;. See the section in the documentation of your linker for permitted values and their meanings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="359fdf753efa0a7929bb7ac12f476f54483fae55" translate="yes" xml:space="preserve">
          <source>is passed to the linker, no interprocedural optimizations are applied. Note that when</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bce294b59c78408b301e9c5262c358eefa25db8" translate="yes" xml:space="preserve">
          <source>is present in the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82039aedb83bc09c9800f4d4c1f021589f1502eb" translate="yes" xml:space="preserve">
          <source>is preserved, but not enabled automatically. This makes it possible to build shared libraries without position independent code on architectures this is possible, i.e. on x86.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4772c1759036d6dc28da4f1aa3a50be9b4594305" translate="yes" xml:space="preserve">
          <source>is produced which contains dumps from the vectorizer about missed opportunities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d80690b3a83fcd7f02b760ec8e8001d8a85be8" translate="yes" xml:space="preserve">
          <source>is recommended along with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13b9e6ad4102fce73bbdfd74bd3790f78122e75" translate="yes" xml:space="preserve">
          <source>is required in addition to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db7ca067670dcb5a4c4601f2bc9035f7396d462" translate="yes" xml:space="preserve">
          <source>is sensible enough to avoid over writing an input source file with the same extension as an intermediate file. The corresponding intermediate file may be obtained by renaming the source file before using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef5c67fbc7109f468f9a0673fed7e81e85f331f" translate="yes" xml:space="preserve">
          <source>is set by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b838410cbb8ea82d8097bb3a8a644463e88078" translate="yes" xml:space="preserve">
          <source>is set to &lt;var&gt;n&lt;/var&gt;/2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e084f37e50cb42dde19a2c0f417026c3470b7f0d" translate="yes" xml:space="preserve">
          <source>is set. Generates:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aad4e92b61be315c38838a9ba879b9e953839fb" translate="yes" xml:space="preserve">
          <source>is silently ignored when producing object files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e18d2bbdbb6ae7aa78199ff7e4c255cb2352f89c" translate="yes" xml:space="preserve">
          <source>is similar but includes 68060 targets as well. These two options select the same tuning decisions as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e6e3caccbebfde7a5dfd0463371eb806fcb86f6" translate="yes" xml:space="preserve">
          <source>is specified (or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cadb08f04c8d18325e94905ad6838cc2b97068a2" translate="yes" xml:space="preserve">
          <source>is specified for an individual function). All of these functions have corresponding versions prefixed with &lt;code&gt;__builtin_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911385eb8339885faa8ec0956ef3cc5cd12912f7" translate="yes" xml:space="preserve">
          <source>is specified the binary code is produced for future non-lto linking. The object file produced by incremental linking will be smaller than a static library produced from the same object files. At link-time the result of incremental linking will also load faster to compiler than a static library assuming that majority of objects in the library are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3087cc78a5be5306342ba681013ce10973890b6c" translate="yes" xml:space="preserve">
          <source>is specified then excess precision follows the rules specified in ISO C99; in particular, both casts and assignments cause values to be rounded to their semantic types (whereas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03aff98e83efa3646b62742dfeeaaaabbe0f1eb" translate="yes" xml:space="preserve">
          <source>is specified to generate position-independent code. Note that the Nios II ABI does not permit GP-relative accesses from shared libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42159c2730844ac77ce744ceb1086d52ae409c48" translate="yes" xml:space="preserve">
          <source>is specified without any value, the default value is &lt;var&gt;inline-clone&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574bf8e56b143f3e2f844cb08603de604f7b2a3b" translate="yes" xml:space="preserve">
          <source>is specified without either of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e1e4d8c4b44e415671a788ad179cb5050256d9" translate="yes" xml:space="preserve">
          <source>is specified, also warn about &lt;code&gt;strftime&lt;/code&gt; formats that may yield only a two-digit year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aed8886730a9d409d0610fc3ec3c9f571fd37f3" translate="yes" xml:space="preserve">
          <source>is specified, also warn about uses of format functions that represent possible security problems. At present, this warns about calls to &lt;code&gt;printf&lt;/code&gt; and &lt;code&gt;scanf&lt;/code&gt; functions where the format string is not a string literal and there are no format arguments, as in &lt;code&gt;printf (foo);&lt;/code&gt;. This may be a security hole if the format string came from untrusted input and contains &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f6b8df59ca69023e5b46e4088df66853d2a32b" translate="yes" xml:space="preserve">
          <source>is specified, also warn if the format string is not a string literal and so cannot be checked, unless the format function takes its format arguments as a &lt;code&gt;va_list&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1581ac61e82d6f96ff3e508e1de0b58e0c813d3c" translate="yes" xml:space="preserve">
          <source>is specified, also warn if the format string requires an unsigned argument and the argument is signed and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1f44ce6006a7cb0ba9ed500f758d9152cdea10" translate="yes" xml:space="preserve">
          <source>is specified, also warn when a built-in function that takes arguments is declared without a prototype. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab92c83431d3c2d74ebbe8c810b9e0941d3d2117" translate="yes" xml:space="preserve">
          <source>is specified, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3762c46ad0911aa359d584271eb0443274f59d73" translate="yes" xml:space="preserve">
          <source>is specified, data objects larger than &lt;var&gt;threshold&lt;/var&gt; are placed in the large data section. This value must be the same across all objects linked into the binary, and defaults to 65535.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d092aeef622d54d182bf558e38de4d2fa7b4179f" translate="yes" xml:space="preserve">
          <source>is specified, do not warn about excess arguments to a &lt;code&gt;printf&lt;/code&gt; or &lt;code&gt;scanf&lt;/code&gt; format function. The C standard specifies that such arguments are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8c1cc5dff398d50fc1e13f9f2c2a1442eeefc5" translate="yes" xml:space="preserve">
          <source>is specified, do not warn about format strings that contain NUL bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81dba733af4867c99f548fe3ef7cb7903c485141" translate="yes" xml:space="preserve">
          <source>is specified, do not warn about zero-length formats. The C standard specifies that zero-length formats are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ab7cb956f60385f14f5e07b1602d5030a65b89d" translate="yes" xml:space="preserve">
          <source>is specified, functions in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa0a3496c513a43a379965fc8dc1c39724af5eaf" translate="yes" xml:space="preserve">
          <source>is specified, generate code compliant to the GNU/Linux for S/390 ABI. When</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a229e9cb4417cb9f9724c4bf4e19e25c00f3a1" translate="yes" xml:space="preserve">
          <source>is specified, generate code compliant to the GNU/Linux for zSeries ABI. This allows GCC in particular to generate 64-bit instructions. For the &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a87813d914a1a687fb7ab7682f4c1d3d5163d47" translate="yes" xml:space="preserve">
          <source>is specified, generate code using the instructions available on ESA/390. Note that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534a1fb7363cdafad1258e851e3a78957812f05b" translate="yes" xml:space="preserve">
          <source>is specified, generate code using the instructions available on z/Architecture. When</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f565c46accb58d50520826af4c138a49700626ad" translate="yes" xml:space="preserve">
          <source>is specified, generate code using the instructions available with the vector extension facility introduced with the IBM z13 machine generation. This option changes the ABI for some vector type values with regard to alignment and calling conventions. In case vector type values are being used in an ABI-relevant context a GAS &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0437a752c4fcab621699544c296acf658510fc" translate="yes" xml:space="preserve">
          <source>is specified, register save slots are densely packed at the top of the register save area; unused space is reused for other purposes, allowing for more efficient use of the available stack space. However, when</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0ebc2c6ec72552e9ac2e13c7f5d5d85aa91fb7" translate="yes" xml:space="preserve">
          <source>is specified, that version number is used for ABI warnings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95fb7305f46ee9581ce3af641f08b8e46da6f31f" translate="yes" xml:space="preserve">
          <source>is specified, the compiler generates IEEE floating-point instructions. This is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="985252ea7a9f36641fb6eb8e412d9047ed739ae0" translate="yes" xml:space="preserve">
          <source>is specified, the compiler generates accelerated code according to the OpenACC Application Programming Interface v2.0 &lt;a href=&quot;https://www.openacc.org&quot;&gt;https://www.openacc.org&lt;/a&gt;. This option implies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f70cfa3974458f3af92cbc3e74ecb706a2e7f55" translate="yes" xml:space="preserve">
          <source>is specified, the compiler generates code for the Linux variant of Intel&amp;rsquo;s current Transactional Memory ABI specification document (Revision 1.1, May 6 2009). This is an experimental feature whose interface may change in future versions of GCC, as the official specification changes. Please note that not all architectures are supported for this feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f23960368e28677de30d8da179cfdebaba6e6e7" translate="yes" xml:space="preserve">
          <source>is specified, the compiler generates decimal-floating-point hardware instructions. This is the default for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5186ca325f43d1ab7001f10659ac4a9d36e197a" translate="yes" xml:space="preserve">
          <source>is specified, the compiler generates parallel code according to the OpenMP Application Program Interface v4.5 &lt;a href=&quot;https://www.openmp.org&quot;&gt;https://www.openmp.org&lt;/a&gt;. This option implies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5604f61de599a8109b17c9ec37ecd7892c9ca1" translate="yes" xml:space="preserve">
          <source>is specified, the compiler prefers zero displacement branch code sequences. This is enabled by default when generating code for SH4 and SH4A. It can be explicitly disabled by specifying</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde734a1eb921e54ddcde225736720836a32424c" translate="yes" xml:space="preserve">
          <source>is specified, the compiler uses the all fields of the 96/160 byte register save area only for their default purpose; unused fields still take up stack space. When</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e937ea0cbeb02c520709cf0fa083e07df570bf2" translate="yes" xml:space="preserve">
          <source>is specified, the significands of results of floating-point operations are rounded to 24 bits (single precision);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e797fca88a48662ef11b192aca0215087a3415" translate="yes" xml:space="preserve">
          <source>is specified, then if there are negative values it is the first of &lt;code&gt;signed char&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt; and &lt;code&gt;int&lt;/code&gt; that can represent all the values, otherwise it is the first of &lt;code&gt;unsigned char&lt;/code&gt;, &lt;code&gt;unsigned short&lt;/code&gt; and &lt;code&gt;unsigned int&lt;/code&gt; that can represent all the values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff3165bd28c4be8f268f557b9626ab4ecc177be" translate="yes" xml:space="preserve">
          <source>is specified, use a &lt;code&gt;mvc&lt;/code&gt; loop instead. This is the default unless optimizing for size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7614250cf825ce49ccd1794afad60108faf9d9" translate="yes" xml:space="preserve">
          <source>is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="638d78ed8d2458900bb08801df3ac6066a2e1752" translate="yes" xml:space="preserve">
          <source>is specified. In AAPCS configurations this option is meaningless.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30fb5df80141c1d71b84debcdced230ff0a22494" translate="yes" xml:space="preserve">
          <source>is specified. It overrides the instruction cost info provided by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada0535591166301725737b1056e8c7959926726" translate="yes" xml:space="preserve">
          <source>is specified. This option conflicts with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e882b7bddf5f306d6166feb8af95ddef55fce10" translate="yes" xml:space="preserve">
          <source>is specified; in the former case, IEEE semantics apply without excess precision, and in the latter, rounding is unpredictable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca72850d27b0839afce7343310609cd9f7a0b6a2" translate="yes" xml:space="preserve">
          <source>is that the latter is always lowercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d3fc3154a56245efd8e3d23fde1b27d57e04e30" translate="yes" xml:space="preserve">
          <source>is that with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2bf3ce28005ce69c80fa46797b65f723e625e6" translate="yes" xml:space="preserve">
          <source>is the default at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e3d1f78bdeb3345a7e8011a0c4ed1a31cffc8d" translate="yes" xml:space="preserve">
          <source>is the default choice as its ABI specifies that &lt;code&gt;long double&lt;/code&gt; is aligned on 16-byte boundary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f1abdd6fd4b470116cbb1f56187fa4ef4c5e9e" translate="yes" xml:space="preserve">
          <source>is the default for SVR4-based systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9addcacf67341c03f369b2295f9af284d433db87" translate="yes" xml:space="preserve">
          <source>is the default for all configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d77a35d87743384181131089f620e49d9f3e6b" translate="yes" xml:space="preserve">
          <source>is the default for some configurations; see the installation documentation for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6ec31d3ec7ab14fc1bcd40d600f514afed076d" translate="yes" xml:space="preserve">
          <source>is the default if GCC was configured to use an assembler and a linker that support the &lt;code&gt;.reloc&lt;/code&gt; assembly directive and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cde81236724745ad86de7f597a833df07edca84" translate="yes" xml:space="preserve">
          <source>is the default if GCC was configured to use an assembler that supports relocation operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee1a6d354e08ef288327cd3dd721d449c6de837" translate="yes" xml:space="preserve">
          <source>is the default in 32-bit mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c2b765548953b054fa9768c106eba6fbb55f7e5" translate="yes" xml:space="preserve">
          <source>is the default otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fa82e923c39bcf05efbbb50c35f6ae63dd32b8" translate="yes" xml:space="preserve">
          <source>is the default when</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43234a4e899a2e16873ae0c08e57f4641eccd891" translate="yes" xml:space="preserve">
          <source>is the default when the target is &lt;code&gt;sh*-*-linux*&lt;/code&gt;. If the target is SH1* or SH2*</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad9b1ead4ea13e1f0ffa022902363783bdb0f33" translate="yes" xml:space="preserve">
          <source>is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264f6c6d96a6f5ed3dcb5ce1a8c4026b4653cd70" translate="yes" xml:space="preserve">
          <source>is the default; this allows the compiler to let arguments accumulate on the stack for several function calls and pop them all at once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73d7eae577f78637197b3795b876f869cb11654" translate="yes" xml:space="preserve">
          <source>is the default; this is determined by the ABI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606dca5421ffc9707027f60fc59a0a86523446ff" translate="yes" xml:space="preserve">
          <source>is the maximum number of values and types it stores per one formal parameter of a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841108c86e9fbb4edafbf1fc269ca06fbd9c2aa7" translate="yes" xml:space="preserve">
          <source>is the same as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5834a6c6e966c1e3f747cbc67e6efa64d69a6a54" translate="yes" xml:space="preserve">
          <source>is transformed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c07859fe435fe47c029cad9d65b3c41982b124" translate="yes" xml:space="preserve">
          <source>is turned on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714aa8ee074b75cf011a4f3592064b1da647494a" translate="yes" xml:space="preserve">
          <source>is understood to specify a target object file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299de8df8fc1a566d9c55a1d7727c93206ed8ac7" translate="yes" xml:space="preserve">
          <source>is used They are used for restricted transactional memory. These are the internal low level functions. Normally the functions in &lt;a href=&quot;x86-transactional-memory-intrinsics#x86-transactional-memory-intrinsics&quot;&gt;x86 transactional memory intrinsics&lt;/a&gt; should be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604a444cf1e616f5d3ebf21f5d6b4719ee23d75a" translate="yes" xml:space="preserve">
          <source>is used as a base for a class compiled with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09e539b0842d8caac3873f1a47f47603ec85dc2" translate="yes" xml:space="preserve">
          <source>is used as well. Enabling this reduces precision of division results to about 16 bits for single precision and to 32 bits for double precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="195ff80fbf565bdd96c5702213e65310d2f9dc25" translate="yes" xml:space="preserve">
          <source>is used as well. Enabling this reduces precision of reciprocal square root results to about 16 bits for single precision and to 32 bits for double precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6303ff16abdeaca3e9b1d5ab4a09d7bbf734f6" translate="yes" xml:space="preserve">
          <source>is used as well. Enabling this reduces precision of square root results to about 16 bits for single precision and to 32 bits for double precision. If enabled, it implies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b953fe34f0d30ea1ef086c960806a0b9dd26a2c" translate="yes" xml:space="preserve">
          <source>is used for compilation with profile feedback and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c16098a15ce7806449ba161a3dc8b70c80b7157" translate="yes" xml:space="preserve">
          <source>is used for preprocessing. See &lt;a href=&quot;preprocessor-options#Preprocessor-Options&quot;&gt;Preprocessor Options&lt;/a&gt;, for information about preprocessor-specific dump options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c223583b4fa599e3604b8f16a001f86f06df8c5" translate="yes" xml:space="preserve">
          <source>is used in conjunction with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f895da9daed4d4e5ae4863ffdf292a5a498fdce3" translate="yes" xml:space="preserve">
          <source>is used in which case it is &amp;ldquo;on&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f47a3361700a80404d96ce546538cb637ff454b" translate="yes" xml:space="preserve">
          <source>is used on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aae2d3d6e2f6344ee050fcc49ac6046f879a2e3" translate="yes" xml:space="preserve">
          <source>is used or NO_REGS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a14d0a7829060e68c29967c77b472b2b813526" translate="yes" xml:space="preserve">
          <source>is used the legacy treatment is selected. In this case these instructions are considered arithmetic and avoided where correct operation is required and the input operand might be a NaN. A longer sequence of instructions that manipulate the sign bit of floating-point datum manually is used instead unless the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03ee6d7bf39e10b22f7ded3d12fcf7c02ddb332" translate="yes" xml:space="preserve">
          <source>is used this option is not enabled by default (to avoid linker errors), but may be enabled explicitly (if using a working linker).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329932530499bd22d11de57b9b4f334acb99fa97" translate="yes" xml:space="preserve">
          <source>is used together with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f648ba07c318fb10c2ec4f60a42f5fb257af03" translate="yes" xml:space="preserve">
          <source>is used with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f356522eef7fb7fe510f7a273e13089f8f8804d" translate="yes" xml:space="preserve">
          <source>is used without</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d80e8a997a4fe0c05cbf774d218dffaf7683046" translate="yes" xml:space="preserve">
          <source>is used) checks formats for the standard library functions &lt;code&gt;printf&lt;/code&gt;, &lt;code&gt;fprintf&lt;/code&gt;, &lt;code&gt;sprintf&lt;/code&gt;, &lt;code&gt;scanf&lt;/code&gt;, &lt;code&gt;fscanf&lt;/code&gt;, &lt;code&gt;sscanf&lt;/code&gt;, &lt;code&gt;strftime&lt;/code&gt;, &lt;code&gt;vprintf&lt;/code&gt;, &lt;code&gt;vfprintf&lt;/code&gt; and &lt;code&gt;vsprintf&lt;/code&gt; whenever such warnings are requested (using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc19449c0b40a586d6fe50bb083a088492a22411" translate="yes" xml:space="preserve">
          <source>is used, and &lt;code&gt;__vrd2_sin&lt;/code&gt;, &lt;code&gt;__vrd2_cos&lt;/code&gt;, &lt;code&gt;__vrd2_exp&lt;/code&gt;, &lt;code&gt;__vrd2_log&lt;/code&gt;, &lt;code&gt;__vrd2_log2&lt;/code&gt;, &lt;code&gt;__vrd2_log10&lt;/code&gt;, &lt;code&gt;__vrs4_sinf&lt;/code&gt;, &lt;code&gt;__vrs4_cosf&lt;/code&gt;, &lt;code&gt;__vrs4_expf&lt;/code&gt;, &lt;code&gt;__vrs4_logf&lt;/code&gt;, &lt;code&gt;__vrs4_log2f&lt;/code&gt;, &lt;code&gt;__vrs4_log10f&lt;/code&gt; and &lt;code&gt;__vrs4_powf&lt;/code&gt; for the corresponding function type when</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e767fd5340616bab76f4ae3d3cbe21c8f12c9d" translate="yes" xml:space="preserve">
          <source>is used, but the calls could not be checked without the attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7725ba8e7703ae9da1cd3b05d05dbfb9bee3192" translate="yes" xml:space="preserve">
          <source>is used, compile code the same as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b8289806fed8851b1813060db2cc55a2b07934" translate="yes" xml:space="preserve">
          <source>is used, if the functions generate a call to a library function then the &amp;ldquo;inexact&amp;rdquo; exception may be raised if the library implementation does not follow TS 18661.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8464dc7ff55bb33c5743b6d35df1c51b39a1a73f" translate="yes" xml:space="preserve">
          <source>is used, objects 8 bytes long or smaller are placed in a &lt;em&gt;small data area&lt;/em&gt; (the &lt;code&gt;.sdata&lt;/code&gt; and &lt;code&gt;.sbss&lt;/code&gt; sections) and are accessed via 16-bit relocations off of the &lt;code&gt;$gp&lt;/code&gt; register. This limits the size of the small data area to 64KB, but allows the variables to be directly accessed via a single instruction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2deca4f6fde60e67165a23dc03d80533550b62" translate="yes" xml:space="preserve">
          <source>is used, the compiler assumes that the code of the entire program (or shared library) fits in 4MB, and is thus reachable with a branch instruction. When</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbd89763edbeffb958b786ed6aa188d007ac2fa" translate="yes" xml:space="preserve">
          <source>is used, the compiler can assume that all local symbols share the same &lt;code&gt;$gp&lt;/code&gt; value, and thus reduce the number of instructions required for a function call from 4 to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323a9a83aab7deed5591ecc40732a58a9088b172" translate="yes" xml:space="preserve">
          <source>is used, the element order for AltiVec intrinsics such as &lt;code&gt;vec_splat&lt;/code&gt;, &lt;code&gt;vec_extract&lt;/code&gt;, and &lt;code&gt;vec_insert&lt;/code&gt; match array element order corresponding to the endianness of the target. That is, element zero identifies the leftmost element in a vector register when targeting a big-endian platform, and identifies the rightmost element in a vector register when targeting a little-endian platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a7abad68ed473612308acdcfd525894147e887" translate="yes" xml:space="preserve">
          <source>is used, the field may also be a definition with a tag such as &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2455b94339393405e55afb55d9e1f71575a8693e" translate="yes" xml:space="preserve">
          <source>is used, the following additional vector types are implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a2a594f26e8970b7581175f51865b913dceffe" translate="yes" xml:space="preserve">
          <source>is used, the maximum number of times that an individual variable will be expanded during loop unrolling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46f08ec573434a9094cb5de97c9dd415aba846c" translate="yes" xml:space="preserve">
          <source>is used, the unnamed field must be a structure or union definition without a tag (for example, &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6839d76bbb7783af5dc7927fd3ea8c02821e91c" translate="yes" xml:space="preserve">
          <source>is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70789d4e1327fb690d8967fa237b8d1253a7efd1" translate="yes" xml:space="preserve">
          <source>is used. All of them generate the machine instruction that is part of the name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f7800fc2de23775ffe063a621d00f06e4ecf1e" translate="yes" xml:space="preserve">
          <source>is used. Attempting to use the return value of a non-&lt;code&gt;void&lt;/code&gt; function other than &lt;code&gt;main&lt;/code&gt; that flows off the end by reaching the closing curly brace that terminates the function is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9097297c919cd5698d31bfae21d5f3a421ab0132" translate="yes" xml:space="preserve">
          <source>is used. Both of them generate the immediate form of the bextr machine instruction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c5be451c18a3b0f814e7deb7aedd7710541741" translate="yes" xml:space="preserve">
          <source>is used. Instead, it generates new AVX instructions or AVX equivalence for all SSEx instructions when needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c3df0cddb97aaac990463e6d7578f2c695b737" translate="yes" xml:space="preserve">
          <source>is used. Otherwise, GCC may still be unable to inline a function for many reasons; the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a8295cf7e5c91b054483ee877ef9aaa0607e5a" translate="yes" xml:space="preserve">
          <source>is used. See &lt;a href=&quot;c-dialect-options#C-Dialect-Options&quot;&gt;Options Controlling C Dialect&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4493c3e6fec393900e6f8239dccbee0d8fa1550" translate="yes" xml:space="preserve">
          <source>is used. See &lt;a href=&quot;other-builtins#Other-Builtins&quot;&gt;Other built-in functions provided by GCC&lt;/a&gt;, for details of the functions affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e127c1ff534cdd0c708bff6bbbe664d166fce76" translate="yes" xml:space="preserve">
          <source>is used. The first bit of &lt;code&gt;__CET__&lt;/code&gt; is set to 1 for the value &lt;code&gt;branch&lt;/code&gt; and the second bit of &lt;code&gt;__CET__&lt;/code&gt; is set to 1 for the &lt;code&gt;return&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="708347ac4ce20ec6b602201d6618e47363832923" translate="yes" xml:space="preserve">
          <source>is used. The number of iterations after vectorization needs to be greater than the value specified by this option to allow vectorization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266f989758baffce411f3969b1aa02ef230bba03" translate="yes" xml:space="preserve">
          <source>is used. They generate reads and writes to PKRU.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17f11b79a8172a8f8135ed1804340e128f2e82f" translate="yes" xml:space="preserve">
          <source>is used. This program is also useful when precompiling a C header file with a &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5586ad8297e22414c4f85c896b878d08644700" translate="yes" xml:space="preserve">
          <source>is used. With</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d92a798cd82942ed4b60261a0f9a072d05e027d" translate="yes" xml:space="preserve">
          <source>is used;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf6fc38f956e937fe295ba685c31a1b2422f0f1" translate="yes" xml:space="preserve">
          <source>is useful for cases where the &lt;code&gt;$gp&lt;/code&gt; register might not hold the value of &lt;code&gt;_gp&lt;/code&gt;. For example, if the code is part of a library that might be used in a boot monitor, programs that call boot monitor routines pass an unknown value in &lt;code&gt;$gp&lt;/code&gt;. (In such situations, the boot monitor itself is usually compiled with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa75c06cd04aedc7ba0615cb6982d49a53c734e6" translate="yes" xml:space="preserve">
          <source>is useful if the runtime environment can emulate the instructions and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562f0e49a0a54249120ebcc3358e1df49c38bf90" translate="yes" xml:space="preserve">
          <source>is useful on targets for which it provides better performance, or if you wish to verify that the program will work on other systems that always treat uninitialized variable definitions this way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9f062f5a0b1178d6868617a2baf6e50578559a" translate="yes" xml:space="preserve">
          <source>is valid and compiles function &lt;code&gt;foo&lt;/code&gt; for ARMv8-A with &lt;code&gt;crc&lt;/code&gt; and &lt;code&gt;crypto&lt;/code&gt; extensions and tunes it for &lt;code&gt;cortex-a53&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f5a4381dceafeecbc1348c7611cdfeb80f17de" translate="yes" xml:space="preserve">
          <source>is very different from &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599f6b1a8785583a02e31fcba74a1234ff91b1f7" translate="yes" xml:space="preserve">
          <source>is, that version is used for compatibility aliases. If this option is provided along with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19fc69c8f4cef03e4c8f3163d28a718026a33048" translate="yes" xml:space="preserve">
          <source>isaa</source>
          <target state="translated">isaa</target>
        </trans-unit>
        <trans-unit id="08a889b34b4d53104d229e205a3b67dce124dd76" translate="yes" xml:space="preserve">
          <source>isaaplus</source>
          <target state="translated">isaaplus</target>
        </trans-unit>
        <trans-unit id="bf9ea58d678ff4ae996d72c7f93fdfebf305d5aa" translate="yes" xml:space="preserve">
          <source>isab</source>
          <target state="translated">isab</target>
        </trans-unit>
        <trans-unit id="c90dc120ce6a6b5b488e2a453fab8f16f589b51f" translate="yes" xml:space="preserve">
          <source>isac</source>
          <target state="translated">isac</target>
        </trans-unit>
        <trans-unit id="faba94392c08137900adb96db79e36bc052b5237" translate="yes" xml:space="preserve">
          <source>isel</source>
          <target state="translated">isel</target>
        </trans-unit>
        <trans-unit id="1f4e8c043551e4d3354861142e3b9fe0e0a67347" translate="yes" xml:space="preserve">
          <source>isn&amp;rsquo;t specified is &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee01db13a8867f12ad3a9324455f3ff8f384500" translate="yes" xml:space="preserve">
          <source>iso9899:1990</source>
          <target state="translated">iso9899:1990</target>
        </trans-unit>
        <trans-unit id="51eabcd3841ca579cd78e800a9c8008bc7aae8ee" translate="yes" xml:space="preserve">
          <source>iso9899:199409</source>
          <target state="translated">iso9899:199409</target>
        </trans-unit>
        <trans-unit id="956b02341400462595c1f12d50f42525791c6cd2" translate="yes" xml:space="preserve">
          <source>iso9899:1999</source>
          <target state="translated">iso9899:1999</target>
        </trans-unit>
        <trans-unit id="638ce5f11d4f5c4b784c03e4b8f2e93e4cd5d77f" translate="yes" xml:space="preserve">
          <source>iso9899:199x</source>
          <target state="translated">iso9899:199x</target>
        </trans-unit>
        <trans-unit id="4c4089ec2e4a9658ab65db81d5d8f54b9424bcb5" translate="yes" xml:space="preserve">
          <source>iso9899:2011</source>
          <target state="translated">iso9899:2011</target>
        </trans-unit>
        <trans-unit id="fede9ba4ca5d277fc2f9951f6151b3545accabfb" translate="yes" xml:space="preserve">
          <source>iso9899:2017</source>
          <target state="translated">iso9899:2017</target>
        </trans-unit>
        <trans-unit id="ee73e88ecd30a50172ff72314eed19e5aa18f0be" translate="yes" xml:space="preserve">
          <source>iso9899:2018</source>
          <target state="translated">iso9899:2018</target>
        </trans-unit>
        <trans-unit id="00997c4d49a9a33f16a89e17be3ad4aff3d66516" translate="yes" xml:space="preserve">
          <source>istanbul</source>
          <target state="translated">istanbul</target>
        </trans-unit>
        <trans-unit id="1af81a7b9bdb9e48e1345689f2d412a3e53936ea" translate="yes" xml:space="preserve">
          <source>it also moves operands of conditions that are invariant out of the loop, so that we can use just trivial invariantness analysis in loop unswitching. The pass also includes store motion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b755ad8a5da0362caaac1e502e47a1df14abf7e0" translate="yes" xml:space="preserve">
          <source>it is ambiguous which &lt;code&gt;a&lt;/code&gt; is being referred to with &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0938bbba0d3388397e232065319d45114187cbb9" translate="yes" xml:space="preserve">
          <source>it warns about such constants in system header files. This can be useful when preparing code to use with the &lt;code&gt;FLOAT_CONST_DECIMAL64&lt;/code&gt; pragma from the decimal floating-point extension to C99.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82dd216a31d97117befe1275627a357f501cf7d0" translate="yes" xml:space="preserve">
          <source>itanium</source>
          <target state="translated">itanium</target>
        </trans-unit>
        <trans-unit id="9f21358128f05c3bc5a578116dba275123d73106" translate="yes" xml:space="preserve">
          <source>itanium1</source>
          <target state="translated">itanium1</target>
        </trans-unit>
        <trans-unit id="f897e642159ae4d8f272ac97de808783a17ccb20" translate="yes" xml:space="preserve">
          <source>itanium2</source>
          <target state="translated">itanium2</target>
        </trans-unit>
        <trans-unit id="b3a85c8c90f1ff81265955867ef9d2f2bc85a96f" translate="yes" xml:space="preserve">
          <source>ivybridge</source>
          <target state="translated">ivybridge</target>
        </trans-unit>
        <trans-unit id="6ccbcd19c2a1c2c2db22bd511d01a59e0840d0f5" translate="yes" xml:space="preserve">
          <source>iwmmxt</source>
          <target state="translated">iwmmxt</target>
        </trans-unit>
        <trans-unit id="ef4da78abf9b5f16ce3949b8054185b6664c7306" translate="yes" xml:space="preserve">
          <source>iwmmxt2</source>
          <target state="translated">iwmmxt2</target>
        </trans-unit>
        <trans-unit id="5c2dd944dde9e08881bef0894fe7b22a5c9c4b06" translate="yes" xml:space="preserve">
          <source>j</source>
          <target state="translated">j</target>
        </trans-unit>
        <trans-unit id="c080c4dfb94f69aea7c77a850dc19dabd9d67cca" translate="yes" xml:space="preserve">
          <source>joined</source>
          <target state="translated">joined</target>
        </trans-unit>
        <trans-unit id="05d97e6e9834ccf063c552e404b9ecafc5e4d662" translate="yes" xml:space="preserve">
          <source>json</source>
          <target state="translated">json</target>
        </trans-unit>
        <trans-unit id="dcc78d81e2c9c6275342daa45a8ed7cac1c84199" translate="yes" xml:space="preserve">
          <source>just adds the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="957327eb6e2d6a020ff3a5478329b58b4317c324" translate="yes" xml:space="preserve">
          <source>just before it searches the standard directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fbd79c3d390e5d6585a21e11ff5ec1970cff0c" translate="yes" xml:space="preserve">
          <source>k</source>
          <target state="translated">k</target>
        </trans-unit>
        <trans-unit id="91052b1cecbef0d754d1ca776f805e3a4876d0ac" translate="yes" xml:space="preserve">
          <source>k6</source>
          <target state="translated">k6</target>
        </trans-unit>
        <trans-unit id="ffda4a889e4c2b755765141461192b15dd09373f" translate="yes" xml:space="preserve">
          <source>k6-2</source>
          <target state="translated">k6-2</target>
        </trans-unit>
        <trans-unit id="19deba81c53cac1fd55596136bd3849cc8b00d36" translate="yes" xml:space="preserve">
          <source>k6-3</source>
          <target state="translated">k6-3</target>
        </trans-unit>
        <trans-unit id="a312ea217ee4d29f2106e9bb3959e5a678e89f9f" translate="yes" xml:space="preserve">
          <source>k8</source>
          <target state="translated">k8</target>
        </trans-unit>
        <trans-unit id="dc4f7f87aab100b2e1817d4b8234f24c3a9a1572" translate="yes" xml:space="preserve">
          <source>k8-sse3</source>
          <target state="translated">k8-sse3</target>
        </trans-unit>
        <trans-unit id="1264bdfe5ff3215cf6abac2152fff607f7dc78dc" translate="yes" xml:space="preserve">
          <source>keep</source>
          <target state="translated">keep</target>
        </trans-unit>
        <trans-unit id="dfba82b168ab5920d9df8019530d5bf7ef495c76" translate="yes" xml:space="preserve">
          <source>knl</source>
          <target state="translated">knl</target>
        </trans-unit>
        <trans-unit id="9135466184509d0139aee098b8e33a9e4143a42f" translate="yes" xml:space="preserve">
          <source>knm</source>
          <target state="translated">knm</target>
        </trans-unit>
        <trans-unit id="07c342be6e560e7f43842e2e21b774e61d85f047" translate="yes" xml:space="preserve">
          <source>l</source>
          <target state="translated">l</target>
        </trans-unit>
        <trans-unit id="7a12089b2d1c7530d05b5b3bde7562b35436b545" translate="yes" xml:space="preserve">
          <source>lakemont</source>
          <target state="translated">lakemont</target>
        </trans-unit>
        <trans-unit id="d56da61b4354182da6fca2091635231a655826ea" translate="yes" xml:space="preserve">
          <source>language flag, &lt;code&gt;restrict&lt;/code&gt; is not a keyword in C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5296d5cced2aa1cf19afd9cf498d89f0d85481f2" translate="yes" xml:space="preserve">
          <source>large</source>
          <target state="translated">large</target>
        </trans-unit>
        <trans-unit id="a360ed8b8764dba4520ac8d737ee1f73985ad94a" translate="yes" xml:space="preserve">
          <source>large-stack-frame</source>
          <target state="translated">large-stack-frame</target>
        </trans-unit>
        <trans-unit id="168745a204f23aef301ad2f0ebe9ba8e3f48656d" translate="yes" xml:space="preserve">
          <source>large-stack-frame-growth</source>
          <target state="translated">large-stack-frame-growth</target>
        </trans-unit>
        <trans-unit id="6f367cd60b499c5306b438b9cb1cc48cfd354776" translate="yes" xml:space="preserve">
          <source>layout and alignment of virtual tables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d7362c2a5809ce9f5fdcc2f545f8418eb93bf7" translate="yes" xml:space="preserve">
          <source>layout of structured types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5b6898c6fd1cd38747e8d37648a10a47e5209f" translate="yes" xml:space="preserve">
          <source>layout, alignment, and padding of classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98798241748efaccb230386437b7873a478f5bd4" translate="yes" xml:space="preserve">
          <source>leaf</source>
          <target state="translated">leaf</target>
        </trans-unit>
        <trans-unit id="be92910ae7bb6f58bb9b7c6f845bc30640119592" translate="yes" xml:space="preserve">
          <source>leon</source>
          <target state="translated">leon</target>
        </trans-unit>
        <trans-unit id="1c69d37d6995ebcf6b91f4af7f6276341711696e" translate="yes" xml:space="preserve">
          <source>leon3</source>
          <target state="translated">leon3</target>
        </trans-unit>
        <trans-unit id="ceefd40855f5ef43c11f384f2408f29fd13723e7" translate="yes" xml:space="preserve">
          <source>leon3v7</source>
          <target state="translated">leon3v7</target>
        </trans-unit>
        <trans-unit id="8a5d589c3f5e45df4986c1724c644263f56cc5e3" translate="yes" xml:space="preserve">
          <source>lets the compiler optimize callers based on the knowledge that the return value will never be null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19381bbca0a5c2c14fb98dc2111c996c308a150b" translate="yes" xml:space="preserve">
          <source>level is not set on the command line, even if individual optimization flags are specified. Similarly,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481d56a3490ef9841d2cdd604d537e8fe44543bf" translate="yes" xml:space="preserve">
          <source>level than those listed here. You can invoke GCC with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6fce778a79bf7647e4b7a08220d85cd91d6e140" translate="yes" xml:space="preserve">
          <source>level, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d062bafff17ba8b9a1215c4c51485134d509d91" translate="yes" xml:space="preserve">
          <source>lib</source>
          <target state="translated">lib</target>
        </trans-unit>
        <trans-unit id="66ebc4800e70d020e4d6cf833d3acb0736f7ef55" translate="yes" xml:space="preserve">
          <source>lib/&lt;var&gt;subdir&lt;/var&gt;</source>
          <target state="translated">lib/&lt;var&gt;subdir&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="e8a6c978a709cfd4313c3c029e3702381b5827f3" translate="yes" xml:space="preserve">
          <source>lib&lt;var&gt;library&lt;/var&gt;.a</source>
          <target state="translated">lib&lt;var&gt;library&lt;/var&gt;.a</target>
        </trans-unit>
        <trans-unit id="e96d300fc98849ad54ce19c19ee042d2e5f405f9" translate="yes" xml:space="preserve">
          <source>lib&lt;var&gt;library&lt;/var&gt;.so</source>
          <target state="translated">lib&lt;var&gt;library&lt;/var&gt;.so</target>
        </trans-unit>
        <trans-unit id="2f8820b9ce8c700b533e14ba3be0fd0527bc62b4" translate="yes" xml:space="preserve">
          <source>lib&lt;var&gt;suffix&lt;/var&gt;</source>
          <target state="translated">lib&lt;var&gt;suffix&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="2b1ad41802329a3287ccca7c77111ba187b3c71c" translate="yes" xml:space="preserve">
          <source>libads.a</source>
          <target state="translated">libads.a</target>
        </trans-unit>
        <trans-unit id="7f4bbb422c96b5bca3ec38f4d31f3c8f73676bd8" translate="yes" xml:space="preserve">
          <source>libasan</source>
          <target state="translated">libasan</target>
        </trans-unit>
        <trans-unit id="68048ac14326a9e9edc0361c96bfa9bbbaab4043" translate="yes" xml:space="preserve">
          <source>libatomic</source>
          <target state="translated">libatomic</target>
        </trans-unit>
        <trans-unit id="a643de70a8d373cf0d11f353c90bb78a4e3e9568" translate="yes" xml:space="preserve">
          <source>libc.a</source>
          <target state="translated">libc.a</target>
        </trans-unit>
        <trans-unit id="9a7905485cd7dad121e13853f453e6168bd685d8" translate="yes" xml:space="preserve">
          <source>libc.so</source>
          <target state="translated">libc.so</target>
        </trans-unit>
        <trans-unit id="5f9bb51eb03f23a0b1304fe1cbc64534ee1cb7c7" translate="yes" xml:space="preserve">
          <source>libcall</source>
          <target state="translated">libcall</target>
        </trans-unit>
        <trans-unit id="4c7f75653473a366cfecf45e918a9db2ad270b32" translate="yes" xml:space="preserve">
          <source>libfoo.a</source>
          <target state="translated">libfoo.a</target>
        </trans-unit>
        <trans-unit id="67dd13249b722bb733e893f833244f6651093082" translate="yes" xml:space="preserve">
          <source>libgcc</source>
          <target state="translated">libgcc</target>
        </trans-unit>
        <trans-unit id="acd4522a37fe976ae2d9fabfc77318271e64b415" translate="yes" xml:space="preserve">
          <source>libgcc.a</source>
          <target state="translated">libgcc.a</target>
        </trans-unit>
        <trans-unit id="80218e6fcc0c072989e1a142de7299e32a6e5226" translate="yes" xml:space="preserve">
          <source>libgfortran</source>
          <target state="translated">libgfortran</target>
        </trans-unit>
        <trans-unit id="8ff9b85cc05bc9059feeaac427f121318a18b11f" translate="yes" xml:space="preserve">
          <source>libgnat</source>
          <target state="translated">libgnat</target>
        </trans-unit>
        <trans-unit id="199ec24d1d95820c7415000e0774acda560617ee" translate="yes" xml:space="preserve">
          <source>liblsan</source>
          <target state="translated">liblsan</target>
        </trans-unit>
        <trans-unit id="2756bfedc3a043b88eae6c4369eab9b53b32a6dc" translate="yes" xml:space="preserve">
          <source>libmalloc.a</source>
          <target state="translated">libmalloc.a</target>
        </trans-unit>
        <trans-unit id="cf868f18c5f43bfb072b203fd1712775858b5f1e" translate="yes" xml:space="preserve">
          <source>libmvme.a</source>
          <target state="translated">libmvme.a</target>
        </trans-unit>
        <trans-unit id="52bafbd925e19b244b0b140cdd9a938adf3b9a9e" translate="yes" xml:space="preserve">
          <source>libobjc</source>
          <target state="translated">libobjc</target>
        </trans-unit>
        <trans-unit id="d2ce1f5f35c0c7add8b92c4e7b4d99f2323b6206" translate="yes" xml:space="preserve">
          <source>libobjc_gc.a</source>
          <target state="translated">libobjc_gc.a</target>
        </trans-unit>
        <trans-unit id="390a3f63f242bfcf0f9193ee97dbe46ad2418464" translate="yes" xml:space="preserve">
          <source>libpthread.so</source>
          <target state="translated">libpthread.so</target>
        </trans-unit>
        <trans-unit id="7e8f44c5313b901e98659f6878416b36785d58d7" translate="yes" xml:space="preserve">
          <source>library in GCC relies on the SVR4 dynamic linker semantics which merges global symbols between libraries and applications, especially necessary for C++ streams functionality. This is not the default behavior of AIX shared libraries and dynamic linking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de45fd32ac0242406ac490c08ae64e589e5dab4" translate="yes" xml:space="preserve">
          <source>library may allocate memory that is only 4 byte aligned. Since GCC on the SPARC assumes that doubles are 8 byte aligned, this may result in a fatal signal if doubles are stored in memory allocated by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fbf92c90fe058395afdc672765a4dd0a1390c02" translate="yes" xml:space="preserve">
          <source>library to make an Objective-C program work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27126f36297e0e70e985a635e7a11581bb1a7d6" translate="yes" xml:space="preserve">
          <source>library to make an Objective-C++ program work. Note that &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278730d1ab09258fc350207b865afaacb97e9d5d" translate="yes" xml:space="preserve">
          <source>library which is not dependent on the symbol merging semantics will continue to function correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9077bdb27b2b8fc9d2176658752393ca1567f26a" translate="yes" xml:space="preserve">
          <source>library.</source>
          <target state="translated">library.</target>
        </trans-unit>
        <trans-unit id="2e9789bbcc23e46d9f49e7341743d77a7884114a" translate="yes" xml:space="preserve">
          <source>library. The parameter &lt;var&gt;string-index&lt;/var&gt; specifies which argument is the format string argument (starting from 1), while &lt;var&gt;first-to-check&lt;/var&gt; is the number of the first argument to check against the format string. For functions where the arguments are not available to be checked (such as &lt;code&gt;vprintf&lt;/code&gt;), specify the third parameter as zero. In this case the compiler only checks the format string for consistency. For &lt;code&gt;strftime&lt;/code&gt; formats, the third parameter is required to be zero. Since non-static C++ methods have an implicit &lt;code&gt;this&lt;/code&gt; argument, the arguments of such methods should be counted from two, not one, when giving values for &lt;var&gt;string-index&lt;/var&gt; and &lt;var&gt;first-to-check&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8763ae320b7afe60c052887b5fffb58a7e6fb4d" translate="yes" xml:space="preserve">
          <source>library. Use instead &lt;code&gt;malloc&lt;/code&gt; and related functions from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6563129ab7b939753d85b64de6845d3b3591f7" translate="yes" xml:space="preserve">
          <source>libsim.a</source>
          <target state="translated">libsim.a</target>
        </trans-unit>
        <trans-unit id="273a5305492a3563fc142cc8e7f8c8c1ebe63a03" translate="yes" xml:space="preserve">
          <source>libsim.a)</source>
          <target state="translated">libsim.a)</target>
        </trans-unit>
        <trans-unit id="fc4f8ad51eaa2871aa8cd29abea3a779e83a7a6f" translate="yes" xml:space="preserve">
          <source>libstdc++</source>
          <target state="translated">libstdc++</target>
        </trans-unit>
        <trans-unit id="63132c1bdaa6abe3aba662ac167af103986f9307" translate="yes" xml:space="preserve">
          <source>libstdc++.a</source>
          <target state="translated">libstdc++.a</target>
        </trans-unit>
        <trans-unit id="32986c2867c81674b9b2d82820f066275f8c2a33" translate="yes" xml:space="preserve">
          <source>libtool</source>
          <target state="translated">libtool</target>
        </trans-unit>
        <trans-unit id="8f33268b59a32384e88d81e43a57c3e15de369ad" translate="yes" xml:space="preserve">
          <source>libtsan</source>
          <target state="translated">libtsan</target>
        </trans-unit>
        <trans-unit id="ba488858673646a390e073baad225e3f1abcab5f" translate="yes" xml:space="preserve">
          <source>libubsan</source>
          <target state="translated">libubsan</target>
        </trans-unit>
        <trans-unit id="7cfc12bcca3d5f9ee45754ddca6cde710e67d222" translate="yes" xml:space="preserve">
          <source>libyk.a</source>
          <target state="translated">libyk.a</target>
        </trans-unit>
        <trans-unit id="16edf2fbf12671a4b8e8311124a75cf929f82f3d" translate="yes" xml:space="preserve">
          <source>like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7719c332b91bdd151c2224148fd0b7a5eaeeafdb" translate="yes" xml:space="preserve">
          <source>limit.</source>
          <target state="translated">limit.</target>
        </trans-unit>
        <trans-unit id="7aab91e5937cc6ff0cc3ca54fc6d763de48c3c5c" translate="yes" xml:space="preserve">
          <source>lineno</source>
          <target state="translated">lineno</target>
        </trans-unit>
        <trans-unit id="7560d1a849bdbcf1ce0de297bebdb7b0a06415ed" translate="yes" xml:space="preserve">
          <source>linker flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19458c3f80fdcf4b383992b02cbf825391e6fb6" translate="yes" xml:space="preserve">
          <source>lipo</source>
          <target state="translated">lipo</target>
        </trans-unit>
        <trans-unit id="aadf46ad52b563db141c6a8b633250cb09e7740c" translate="yes" xml:space="preserve">
          <source>little-endian</source>
          <target state="translated">little-endian</target>
        </trans-unit>
        <trans-unit id="9b20e9ff78b04ea36084e818be32bd1148855d55" translate="yes" xml:space="preserve">
          <source>lk</source>
          <target state="translated">lk</target>
        </trans-unit>
        <trans-unit id="110c8a30c16070bf2813480d9492a1a170a7d80a" translate="yes" xml:space="preserve">
          <source>ll</source>
          <target state="translated">ll</target>
        </trans-unit>
        <trans-unit id="6ef106ef8007ba05003fd40a476a2534c22013da" translate="yes" xml:space="preserve">
          <source>llk</source>
          <target state="translated">llk</target>
        </trans-unit>
        <trans-unit id="d99675011226f66fc80b9a6b676aa36cf3836644" translate="yes" xml:space="preserve">
          <source>llr</source>
          <target state="translated">llr</target>
        </trans-unit>
        <trans-unit id="57e7d1dac9aa3a3fecf5d9a24c38810a34f5d97d" translate="yes" xml:space="preserve">
          <source>loc</source>
          <target state="translated">loc</target>
        </trans-unit>
        <trans-unit id="939bb46a04c3640c8c427e92b1b557e882e2d2a0" translate="yes" xml:space="preserve">
          <source>local</source>
          <target state="translated">local</target>
        </trans-unit>
        <trans-unit id="0560cd0fe502f8ca790d068a653a72e12c3e0a37" translate="yes" xml:space="preserve">
          <source>local-dynamic</source>
          <target state="translated">local-dynamic</target>
        </trans-unit>
        <trans-unit id="2eab93c26a30feeaccb886bcb4397fdd946431b6" translate="yes" xml:space="preserve">
          <source>local-exec</source>
          <target state="translated">local-exec</target>
        </trans-unit>
        <trans-unit id="bd3027fa569ea15ca76d84db21c67e2d514c1a5a" translate="yes" xml:space="preserve">
          <source>long</source>
          <target state="translated">long</target>
        </trans-unit>
        <trans-unit id="f5ed406b67c2bb5604ef5a4694b8390a99917e23" translate="yes" xml:space="preserve">
          <source>long time ();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52647f5f2a0bce131d9c59c1c788abcf1c6397c6" translate="yes" xml:space="preserve">
          <source>longcall</source>
          <target state="translated">longcall</target>
        </trans-unit>
        <trans-unit id="004a3b55776a7214cc091dcae8e9f4607d87097c" translate="yes" xml:space="preserve">
          <source>loongson2e</source>
          <target state="translated">loongson2e</target>
        </trans-unit>
        <trans-unit id="9c318c65a997ac6e2688031410b5253ba641d473" translate="yes" xml:space="preserve">
          <source>loongson2f</source>
          <target state="translated">loongson2f</target>
        </trans-unit>
        <trans-unit id="3bf3e1ec38d1908b815ede4c7ce73094fc3beba1" translate="yes" xml:space="preserve">
          <source>loongson3a</source>
          <target state="translated">loongson3a</target>
        </trans-unit>
        <trans-unit id="1df823e482339eb6067f4134408b0b8b28411a78" translate="yes" xml:space="preserve">
          <source>loop</source>
          <target state="translated">loop</target>
        </trans-unit>
        <trans-unit id="0994ef7b2a009adecdd7951ccdd13e81174471ef" translate="yes" xml:space="preserve">
          <source>loop-block-tile-size</source>
          <target state="translated">loop-block-tile-size</target>
        </trans-unit>
        <trans-unit id="75659febc3dd66172aaab43d849f97bf44de92ac" translate="yes" xml:space="preserve">
          <source>loop.opt</source>
          <target state="translated">loop.opt</target>
        </trans-unit>
        <trans-unit id="422e33c27a1d4aa909943a2d93fa38c68b7a7686" translate="yes" xml:space="preserve">
          <source>lp64</source>
          <target state="translated">lp64</target>
        </trans-unit>
        <trans-unit id="15a62d3c8a9c909b90c94fd2aa85270d86d3e51f" translate="yes" xml:space="preserve">
          <source>lp64d</source>
          <target state="translated">lp64d</target>
        </trans-unit>
        <trans-unit id="855d12084bd2abaebd61065cd7cc8322db2c5503" translate="yes" xml:space="preserve">
          <source>lp64f</source>
          <target state="translated">lp64f</target>
        </trans-unit>
        <trans-unit id="1370e957dab4f3d207f42f9df4a879edc31222b0" translate="yes" xml:space="preserve">
          <source>lr</source>
          <target state="translated">lr</target>
        </trans-unit>
        <trans-unit id="ae25d3a2be0b6ba3e4d410df8a5bcf86ae5152ad" translate="yes" xml:space="preserve">
          <source>lse</source>
          <target state="translated">lse</target>
        </trans-unit>
        <trans-unit id="9b11c97d63070e0f9c97348289d53b6cdde1a6ae" translate="yes" xml:space="preserve">
          <source>lwp</source>
          <target state="translated">lwp</target>
        </trans-unit>
        <trans-unit id="7ca0f3cf4835ef74aabdd46bafaea9a17af8b4e9" translate="yes" xml:space="preserve">
          <source>lzcnt</source>
          <target state="translated">lzcnt</target>
        </trans-unit>
        <trans-unit id="6b0d31c0d563223024da45691584643ac78c96e8" translate="yes" xml:space="preserve">
          <source>m</source>
          <target state="translated">m</target>
        </trans-unit>
        <trans-unit id="bbac99823c30a77864d88d16705e62db40ef692a" translate="yes" xml:space="preserve">
          <source>m&amp;lt;&amp;gt;</source>
          <target state="translated">m&amp;lt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="39487aa069cfbe6cc05b34f7d8f0fdc26f24dbc2" translate="yes" xml:space="preserve">
          <source>m14k</source>
          <target state="translated">m14k</target>
        </trans-unit>
        <trans-unit id="d3b13dd13af0c10c3800b1004691691c6a89ebf8" translate="yes" xml:space="preserve">
          <source>m14kc</source>
          <target state="translated">m14kc</target>
        </trans-unit>
        <trans-unit id="c3d85904e3afeb4ffd65e64b4a3dd8768bba5ae3" translate="yes" xml:space="preserve">
          <source>m14ke</source>
          <target state="translated">m14ke</target>
        </trans-unit>
        <trans-unit id="80fea8dedde6007e10673c9f24e9d5e6c6235cbe" translate="yes" xml:space="preserve">
          <source>m14kec</source>
          <target state="translated">m14kec</target>
        </trans-unit>
        <trans-unit id="838e909125b30c3af2561f82d17457613b5eeb41" translate="yes" xml:space="preserve">
          <source>m16c</source>
          <target state="translated">m16c</target>
        </trans-unit>
        <trans-unit id="969efcc5833776d7dce9174f04ce32246e28a4ff" translate="yes" xml:space="preserve">
          <source>m32c</source>
          <target state="translated">m32c</target>
        </trans-unit>
        <trans-unit id="cc1450f56fea69abee47517e23649396558cda1c" translate="yes" xml:space="preserve">
          <source>m32cm</source>
          <target state="translated">m32cm</target>
        </trans-unit>
        <trans-unit id="970959816c1700e35a1e0b0000e595afdefc152f" translate="yes" xml:space="preserve">
          <source>m4k</source>
          <target state="translated">m4k</target>
        </trans-unit>
        <trans-unit id="6b97ff98aa1764d3e0c30448bf9ea523b656e818" translate="yes" xml:space="preserve">
          <source>m5100</source>
          <target state="translated">m5100</target>
        </trans-unit>
        <trans-unit id="cfc3fdd6dfe7ca7c2b5a0c400b1dd40b7b390138" translate="yes" xml:space="preserve">
          <source>m5101</source>
          <target state="translated">m5101</target>
        </trans-unit>
        <trans-unit id="f5e6c84556d2c0bed9a257e3981632b0e27095f0" translate="yes" xml:space="preserve">
          <source>m8</source>
          <target state="translated">m8</target>
        </trans-unit>
        <trans-unit id="b28b7af69320201d1cf206ebf28373980add1451" translate="yes" xml:space="preserve">
          <source>main</source>
          <target state="translated">main</target>
        </trans-unit>
        <trans-unit id="406e031b8824ea26ae0bf4d7579a1d89e3fb5906" translate="yes" xml:space="preserve">
          <source>main.c</source>
          <target state="translated">main.c</target>
        </trans-unit>
        <trans-unit id="c77a5d0e954f79d2c00fd49048e8e9bb76d0839f" translate="yes" xml:space="preserve">
          <source>makes</source>
          <target state="translated">makes</target>
        </trans-unit>
        <trans-unit id="d462055531e1caabc501568b1ce2783b54885593" translate="yes" xml:space="preserve">
          <source>marvell-pj4</source>
          <target state="translated">marvell-pj4</target>
        </trans-unit>
        <trans-unit id="96dcf3a32fc0c91e348ce26fd1bdb84c08c666ae" translate="yes" xml:space="preserve">
          <source>mass</source>
          <target state="translated">mass</target>
        </trans-unit>
        <trans-unit id="93ead51331396f1c8a20a32a16c84074d7716149" translate="yes" xml:space="preserve">
          <source>matches &lt;code&gt;.*&lt;/code&gt; regular expression, any comment is used as fallthrough comment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cef80f4af3762f8acb0c8194e31a9dba7622c98" translate="yes" xml:space="preserve">
          <source>math.h</source>
          <target state="translated">math.h</target>
        </trans-unit>
        <trans-unit id="0706025b2bbcec1ed8d64822f4eccd96314938d0" translate="yes" xml:space="preserve">
          <source>max</source>
          <target state="translated">max</target>
        </trans-unit>
        <trans-unit id="5167d676e2aace33950e8d267fbc680d85cf7c6c" translate="yes" xml:space="preserve">
          <source>max-tail-merge-comparisons</source>
          <target state="translated">max-tail-merge-comparisons</target>
        </trans-unit>
        <trans-unit id="4ae4dd08ef316dcf1c1ccb506c23746480fcaa64" translate="yes" xml:space="preserve">
          <source>max-tail-merge-iterations</source>
          <target state="translated">max-tail-merge-iterations</target>
        </trans-unit>
        <trans-unit id="cf22318ba41acc4b145db1ab3ddc606f15b02be2" translate="yes" xml:space="preserve">
          <source>may also provide limited protection for static stack allocations if the target supports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cefe14e4cb000895f751b82745c772fdaa7755c" translate="yes" xml:space="preserve">
          <source>may be linked with objects compiled with any combination of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e998e07a4cef3d0bbab5d664984c3d74a0afa3f1" translate="yes" xml:space="preserve">
          <source>may be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e99df9beeec07104101df24307ca99f493da582" translate="yes" xml:space="preserve">
          <source>may not work. For example, programs may fail to link if a class compiled with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3dca5e7a2242854bbedb44b0dc32d88753175c" translate="yes" xml:space="preserve">
          <source>may result in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9d3fad30f5ec4e05486016bb4f5930c0495da3" translate="yes" xml:space="preserve">
          <source>may result in a better debugging experience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30bef9b4b94184fdd4a32ae91f71d3427b3ad44b" translate="yes" xml:space="preserve">
          <source>mckinley</source>
          <target state="translated">mckinley</target>
        </trans-unit>
        <trans-unit id="fd4c9fec181e80ec31ff6a86166872555b1cd238" translate="yes" xml:space="preserve">
          <source>mcm</source>
          <target state="translated">mcm</target>
        </trans-unit>
        <trans-unit id="93cd4f8cc2bbf59396447e6952bee162d9d0039a" translate="yes" xml:space="preserve">
          <source>means that no insns are moved prematurely,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9e3a77097a7f9a32260d9bb246f9599ec9c983" translate="yes" xml:space="preserve">
          <source>means that the compiler can assume &lt;code&gt;x&lt;/code&gt;, set to &lt;code&gt;arg&lt;/code&gt;, is at least 16-byte aligned, while:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83fe7839b266fe83f6bf9b14280165a41c758fb5" translate="yes" xml:space="preserve">
          <source>means that the compiler can assume for &lt;code&gt;x&lt;/code&gt;, set to &lt;code&gt;arg&lt;/code&gt;, that &lt;code&gt;(char *) x - 8&lt;/code&gt; is 32-byte aligned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c94c98904f4025ca403ec08b19c23d820b6dee" translate="yes" xml:space="preserve">
          <source>means that the stack is aligned to a 16-byte boundary, no EABI initialization function is called from &lt;code&gt;main&lt;/code&gt;, and the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed14b0ffdb2a268c4ea1400e6e74ddf752556b9" translate="yes" xml:space="preserve">
          <source>means that the stack is aligned to an 8-byte boundary, a function &lt;code&gt;__eabi&lt;/code&gt; is called from &lt;code&gt;main&lt;/code&gt; to set up the EABI environment, and the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c46aaf5e500bf887e040c06748de658c7a574e" translate="yes" xml:space="preserve">
          <source>means there is no limit on how many queued insns can be moved prematurely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6040564b3844e137bf91e917c8976143ad98b47d" translate="yes" xml:space="preserve">
          <source>medany</source>
          <target state="translated">medany</target>
        </trans-unit>
        <trans-unit id="20af418657698863db8d966f4b42ed8dc7d0bd54" translate="yes" xml:space="preserve">
          <source>medium</source>
          <target state="translated">medium</target>
        </trans-unit>
        <trans-unit id="761e744424356d13d51799e970bc5ce8ddf01296" translate="yes" xml:space="preserve">
          <source>medlow</source>
          <target state="translated">medlow</target>
        </trans-unit>
        <trans-unit id="8bf6f23c3d6863bc78b0bdb9a2dd4ac0208c3f8e" translate="yes" xml:space="preserve">
          <source>medmid</source>
          <target state="translated">medmid</target>
        </trans-unit>
        <trans-unit id="7ddbf7835d052dba05318f6012868c30f6fa19b5" translate="yes" xml:space="preserve">
          <source>memtag</source>
          <target state="translated">memtag</target>
        </trans-unit>
        <trans-unit id="3ae684b59fbd928f9d8473f34ebbb82ca345a259" translate="yes" xml:space="preserve">
          <source>merced</source>
          <target state="translated">merced</target>
        </trans-unit>
        <trans-unit id="3b009a12dba9fda7a266c3818c348bc466b16b14" translate="yes" xml:space="preserve">
          <source>merge two sets of profiles with weights.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd67687b2b3eee77d856745d676998c07099396e" translate="yes" xml:space="preserve">
          <source>mfcrf</source>
          <target state="translated">mfcrf</target>
        </trans-unit>
        <trans-unit id="29b957f3b37e62c5817d7868494fa8b827ff5b03" translate="yes" xml:space="preserve">
          <source>mfpgpr</source>
          <target state="translated">mfpgpr</target>
        </trans-unit>
        <trans-unit id="6599d30d5840d7d0b08653f2bb933909edb546fb" translate="yes" xml:space="preserve">
          <source>might be printed in JSON form (after formatting) like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d594318d0ecf151d80fd7fe4f6aa58bb1d49a463" translate="yes" xml:space="preserve">
          <source>might be printed in JSON form as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e60824301eb20168d4a6ac62a8d4657b7370b7" translate="yes" xml:space="preserve">
          <source>mips*el-*-*</source>
          <target state="translated">mips*el-*-*</target>
        </trans-unit>
        <trans-unit id="be6783fad0c856c042434f7d041fbfc92c54a930" translate="yes" xml:space="preserve">
          <source>mips1</source>
          <target state="translated">mips1</target>
        </trans-unit>
        <trans-unit id="8c1469364f4fabe428cbe011d0ce361e630df024" translate="yes" xml:space="preserve">
          <source>mips2</source>
          <target state="translated">mips2</target>
        </trans-unit>
        <trans-unit id="37abf7f17d67bd6b4a37463b72d2b84e11150e9a" translate="yes" xml:space="preserve">
          <source>mips3</source>
          <target state="translated">mips3</target>
        </trans-unit>
        <trans-unit id="1ee7fe77c51878754e2d1a43e2dc59db5f51340c" translate="yes" xml:space="preserve">
          <source>mips32</source>
          <target state="translated">mips32</target>
        </trans-unit>
        <trans-unit id="9c4bddca0ab6081e6fdffcceae90dfd6e71d9a6e" translate="yes" xml:space="preserve">
          <source>mips32r2</source>
          <target state="translated">mips32r2</target>
        </trans-unit>
        <trans-unit id="17dee73c17e20f37af212d2842c25a982df9640c" translate="yes" xml:space="preserve">
          <source>mips32r3</source>
          <target state="translated">mips32r3</target>
        </trans-unit>
        <trans-unit id="cf6dfe8ef980d45bcbc7b95602cfdc231148b9ea" translate="yes" xml:space="preserve">
          <source>mips32r5</source>
          <target state="translated">mips32r5</target>
        </trans-unit>
        <trans-unit id="aa20554db26b6f57029c0f67773a30882fc6287f" translate="yes" xml:space="preserve">
          <source>mips32r6</source>
          <target state="translated">mips32r6</target>
        </trans-unit>
        <trans-unit id="e9551c2b595d2a8250f9e20f0a1f12736173f1dd" translate="yes" xml:space="preserve">
          <source>mips4</source>
          <target state="translated">mips4</target>
        </trans-unit>
        <trans-unit id="5319557440e9c10c4a66e97029ab9471c235b527" translate="yes" xml:space="preserve">
          <source>mips64</source>
          <target state="translated">mips64</target>
        </trans-unit>
        <trans-unit id="a010ec7545852c778a13cfecdcf965dc8f2ec822" translate="yes" xml:space="preserve">
          <source>mips64r2</source>
          <target state="translated">mips64r2</target>
        </trans-unit>
        <trans-unit id="55651199a7209db73f8ba85b5b91c311cb6afefb" translate="yes" xml:space="preserve">
          <source>mips64r3</source>
          <target state="translated">mips64r3</target>
        </trans-unit>
        <trans-unit id="2545d5301b72ee6c6b10e11c524d2e0c4a6d85c2" translate="yes" xml:space="preserve">
          <source>mips64r5</source>
          <target state="translated">mips64r5</target>
        </trans-unit>
        <trans-unit id="41363f32c3ccd0162e865d8dd2613d3ce2ac8e63" translate="yes" xml:space="preserve">
          <source>mips64r6</source>
          <target state="translated">mips64r6</target>
        </trans-unit>
        <trans-unit id="09f7502e71dee8d69f9a4ae5282883ca503b0ffa" translate="yes" xml:space="preserve">
          <source>missed</source>
          <target state="translated">missed</target>
        </trans-unit>
        <trans-unit id="15c2513ded7f9d87f286b53dce87e94c49e292bf" translate="yes" xml:space="preserve">
          <source>missed.all</source>
          <target state="translated">missed.all</target>
        </trans-unit>
        <trans-unit id="b746d79201944bf54f6a239c59d0b4a71be42873" translate="yes" xml:space="preserve">
          <source>mixed</source>
          <target state="translated">mixed</target>
        </trans-unit>
        <trans-unit id="797f26efcc706ffbadedf3c687974252172dcba5" translate="yes" xml:space="preserve">
          <source>mmo</source>
          <target state="translated">mmo</target>
        </trans-unit>
        <trans-unit id="91b7b89bb501179b4c4d9900738e27f24357bde7" translate="yes" xml:space="preserve">
          <source>mmu</source>
          <target state="translated">mmu</target>
        </trans-unit>
        <trans-unit id="4c2c3df089fdbb10bf15f7da93f890a8f1c84861" translate="yes" xml:space="preserve">
          <source>mmx</source>
          <target state="translated">mmx</target>
        </trans-unit>
        <trans-unit id="b2d8911803328b76b9a2185f2df6f57357dd6cf0" translate="yes" xml:space="preserve">
          <source>mn10300</source>
          <target state="translated">mn10300</target>
        </trans-unit>
        <trans-unit id="cbb3136559e02242c2870103e7a0bc9c80b84323" translate="yes" xml:space="preserve">
          <source>mode of the containing operand</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f51ce57dac0b0ef636d3e9f367f5baba04fe695" translate="yes" xml:space="preserve">
          <source>mode of the part</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fbf683243c2e7dafdeeb76fe44df30f8aacad8d" translate="yes" xml:space="preserve">
          <source>mode.</source>
          <target state="translated">mode.</target>
        </trans-unit>
        <trans-unit id="4703f78b330b9ee593fd7765539a45ea43b4ac36" translate="yes" xml:space="preserve">
          <source>more than once, the directories are searched in the order specified. Also, the placement of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d39a83b1bcf3b31072928a3ba70bc9f7877e3c" translate="yes" xml:space="preserve">
          <source>movbe</source>
          <target state="translated">movbe</target>
        </trans-unit>
        <trans-unit id="9eebe282248ca6308e3cffadf0c891199f176482" translate="yes" xml:space="preserve">
          <source>movdf</source>
          <target state="translated">movdf</target>
        </trans-unit>
        <trans-unit id="e4462e0bd6efac05c8e6e69d8b7657e210a31ad8" translate="yes" xml:space="preserve">
          <source>movdir64b</source>
          <target state="translated">movdir64b</target>
        </trans-unit>
        <trans-unit id="a43b41eea32cce5dffd0b817bacdb72f88b07a89" translate="yes" xml:space="preserve">
          <source>movdiri</source>
          <target state="translated">movdiri</target>
        </trans-unit>
        <trans-unit id="0ae4cf18fa8760d8fafb1cc2a2519cdc82e0e782" translate="yes" xml:space="preserve">
          <source>moveq</source>
          <target state="translated">moveq</target>
        </trans-unit>
        <trans-unit id="032d0c7b6f55bb9ec284f11faa4d8864cfe0a934" translate="yes" xml:space="preserve">
          <source>moxie-*-*</source>
          <target state="translated">moxie-*-*</target>
        </trans-unit>
        <trans-unit id="8bb740190b734bacde62b18b67da0576d3125bee" translate="yes" xml:space="preserve">
          <source>moxiebox-*-*</source>
          <target state="translated">moxiebox-*-*</target>
        </trans-unit>
        <trans-unit id="91f6e575920d2d503d8597338fd1637d580f4243" translate="yes" xml:space="preserve">
          <source>mp</source>
          <target state="translated">mp</target>
        </trans-unit>
        <trans-unit id="b4f81e37c4b2f601ece65a7825590d8246c75821" translate="yes" xml:space="preserve">
          <source>mpcore</source>
          <target state="translated">mpcore</target>
        </trans-unit>
        <trans-unit id="b73f7dd4ca103dcc4b80185cb70de3111db4e451" translate="yes" xml:space="preserve">
          <source>mpcorenovfp</source>
          <target state="translated">mpcorenovfp</target>
        </trans-unit>
        <trans-unit id="26cc3217be640e8220112c25628da6e11c78db95" translate="yes" xml:space="preserve">
          <source>ms</source>
          <target state="translated">ms</target>
        </trans-unit>
        <trans-unit id="eab050787654e82ef4b1fc2629d28c20da57478c" translate="yes" xml:space="preserve">
          <source>ms_</source>
          <target state="translated">ms_</target>
        </trans-unit>
        <trans-unit id="2f7d9f3b89ca90e20b2d091fd2df8d68deae6657" translate="yes" xml:space="preserve">
          <source>msched-max-memory-insns</source>
          <target state="translated">msched-max-memory-insns</target>
        </trans-unit>
        <trans-unit id="326234c9c13bff1c936df8725438213da86127ff" translate="yes" xml:space="preserve">
          <source>msp430</source>
          <target state="translated">msp430</target>
        </trans-unit>
        <trans-unit id="067e1691de06c45a3ff6d69e4e5f0eb709b85e23" translate="yes" xml:space="preserve">
          <source>msp430.h</source>
          <target state="translated">msp430.h</target>
        </trans-unit>
        <trans-unit id="4a2c9e793b2b49e403821513f87f560a60afbefb" translate="yes" xml:space="preserve">
          <source>msp430x</source>
          <target state="translated">msp430x</target>
        </trans-unit>
        <trans-unit id="6f56c3163ea6f054bd85f8d4b189b609a1ae4501" translate="yes" xml:space="preserve">
          <source>msp430xv2</source>
          <target state="translated">msp430xv2</target>
        </trans-unit>
        <trans-unit id="040b59fca425b85a1cf647df47adfe0c4085c135" translate="yes" xml:space="preserve">
          <source>msplit-lohi</source>
          <target state="translated">msplit-lohi</target>
        </trans-unit>
        <trans-unit id="e5417da63f65fcd4bae4a718934974a1040886f9" translate="yes" xml:space="preserve">
          <source>msvcrt.dll</source>
          <target state="translated">msvcrt.dll</target>
        </trans-unit>
        <trans-unit id="0dbd0253feb6dcf18c623984be5c37e3ab526bed" translate="yes" xml:space="preserve">
          <source>mulhw</source>
          <target state="translated">mulhw</target>
        </trans-unit>
        <trans-unit id="11133e5b74870d6c3fe38650790a285cdf94c00e" translate="yes" xml:space="preserve">
          <source>mulsi3</source>
          <target state="translated">mulsi3</target>
        </trans-unit>
        <trans-unit id="88fc77e78f48fc9076f997582d6231dc838266b7" translate="yes" xml:space="preserve">
          <source>multiple</source>
          <target state="translated">multiple</target>
        </trans-unit>
        <trans-unit id="0a7084b5dde76a1b43957d5eec8bf79e1099e61f" translate="yes" xml:space="preserve">
          <source>multiple times with different symbols to force loading of additional library modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3a0fe25169d446cf5528cd6f44ea083de42da4" translate="yes" xml:space="preserve">
          <source>must also be compiled with that option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703f433a0dfd08f3ba369d156374372d592c45dd" translate="yes" xml:space="preserve">
          <source>must also be considered: floating-point and Advanced SIMD instructions will only be used if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df1481f68d8f0ac2d4ac967c2e52de580e94341" translate="yes" xml:space="preserve">
          <source>must also be enabled. The MASS libraries must be specified at link time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db2bb8c4287379114744934dc410dc286b4d9311" translate="yes" xml:space="preserve">
          <source>must also be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1500543903c58fb886fa1d6839e6c49d4d1ebe56" translate="yes" xml:space="preserve">
          <source>must be defined in the same way as when the precompiled header was generated. At present, it&amp;rsquo;s not clear which options are safe to change and which are not; the safest choice is to use exactly the same options when generating and using the precompiled header. The following are known to be safe:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4d234b17271ba4e6d1f783f50bade244acef28" translate="yes" xml:space="preserve">
          <source>must be enabled to use the IEEE 128-bit floating point support. The IEEE 128-bit floating point support only works on PowerPC Linux systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f96c39b7e31aa694712b64f3db0be362addd9d8" translate="yes" xml:space="preserve">
          <source>must be used in combination with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5547e4ee01c0fd048180d6cb89161d49b37752" translate="yes" xml:space="preserve">
          <source>must include the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81f0380a541b60c6dbda6a79c2c0ccf7abc026d" translate="yes" xml:space="preserve">
          <source>mvcle</source>
          <target state="translated">mvcle</target>
        </trans-unit>
        <trans-unit id="a1e1b7e864821721bb85e37483e323ecb95bb3b2" translate="yes" xml:space="preserve">
          <source>mwaitx</source>
          <target state="translated">mwaitx</target>
        </trans-unit>
        <trans-unit id="24eb0c02612802a0369f8250dfaf1db101dd1f8a" translate="yes" xml:space="preserve">
          <source>myfile.c.038t.evrp</source>
          <target state="translated">myfile.c.038t.evrp</target>
        </trans-unit>
        <trans-unit id="822f89dd23aab537029f19d29871978dc8c85a59" translate="yes" xml:space="preserve">
          <source>myfoo</source>
          <target state="translated">myfoo</target>
        </trans-unit>
        <trans-unit id="cd4a4fa1334f69e8808242490fd2f1b3d465afb9" translate="yes" xml:space="preserve">
          <source>myprog</source>
          <target state="translated">myprog</target>
        </trans-unit>
        <trans-unit id="d1854cae891ec7b29161ccaf79a24b00c274bdaa" translate="yes" xml:space="preserve">
          <source>n</source>
          <target state="translated">n</target>
        </trans-unit>
        <trans-unit id="6ae999552a0d2dca14d62e2bc8b764d377b1dd6c" translate="yes" xml:space="preserve">
          <source>name</source>
          <target state="translated">name</target>
        </trans-unit>
        <trans-unit id="ce2732fa685c4fa2108d907fae069e35fa5f5a38" translate="yes" xml:space="preserve">
          <source>name mangling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed429828127fabd2fa606da815b9cefe3aa75da2" translate="yes" xml:space="preserve">
          <source>named_vars</source>
          <target state="translated">named_vars</target>
        </trans-unit>
        <trans-unit id="e6efbd8aed7a6a63e6ec49365245a32bdc913b43" translate="yes" xml:space="preserve">
          <source>nano</source>
          <target state="translated">nano</target>
        </trans-unit>
        <trans-unit id="9f51c7cdc7944bfe30880b8e5e6a13c1b2f77061" translate="yes" xml:space="preserve">
          <source>nano-1000</source>
          <target state="translated">nano-1000</target>
        </trans-unit>
        <trans-unit id="ee617d03ae4fc2b574011aefe928e1e83a901d11" translate="yes" xml:space="preserve">
          <source>nano-2000</source>
          <target state="translated">nano-2000</target>
        </trans-unit>
        <trans-unit id="72131405437b8e0e973963d79c37eb4b9f154b30" translate="yes" xml:space="preserve">
          <source>nano-3000</source>
          <target state="translated">nano-3000</target>
        </trans-unit>
        <trans-unit id="3dd415e9a10b445223c6f928a5c3174e0b973cd0" translate="yes" xml:space="preserve">
          <source>nano-x2</source>
          <target state="translated">nano-x2</target>
        </trans-unit>
        <trans-unit id="653731e1bf94b528808a75a42af4ebcb76feafec" translate="yes" xml:space="preserve">
          <source>nano-x4</source>
          <target state="translated">nano-x4</target>
        </trans-unit>
        <trans-unit id="6f5b01580ce43822444ae4c79edcd0dc789028f1" translate="yes" xml:space="preserve">
          <source>native</source>
          <target state="translated">native</target>
        </trans-unit>
        <trans-unit id="d8c46683a8f9c86808adc4afc876b3900a6dcca6" translate="yes" xml:space="preserve">
          <source>near</source>
          <target state="translated">near</target>
        </trans-unit>
        <trans-unit id="de56319c915d64949b7d2c2a065d451506a92383" translate="yes" xml:space="preserve">
          <source>needs to be included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b2da5bb4cc746d921a1037722ad682ff932c74" translate="yes" xml:space="preserve">
          <source>needs to be passed to get old Reload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3e6d83f11492f34901c004be3d5a51d6ccd9eb" translate="yes" xml:space="preserve">
          <source>negates</source>
          <target state="translated">negates</target>
        </trans-unit>
        <trans-unit id="00cd02eab5f75eb7b2c4ec7f4ab05cf0ee1bf4cb" translate="yes" xml:space="preserve">
          <source>nehalem</source>
          <target state="translated">nehalem</target>
        </trans-unit>
        <trans-unit id="ed55712076c1ef16c79124742af4ed8c2f2db120" translate="yes" xml:space="preserve">
          <source>nehemiah</source>
          <target state="translated">nehemiah</target>
        </trans-unit>
        <trans-unit id="09407639790bbb3778e1c2a9f81c0680186097d1" translate="yes" xml:space="preserve">
          <source>neon</source>
          <target state="translated">neon</target>
        </trans-unit>
        <trans-unit id="e1715adccebb79f5daceea803cfcd04d7581631e" translate="yes" xml:space="preserve">
          <source>neon-fp-armv8</source>
          <target state="translated">neon-fp-armv8</target>
        </trans-unit>
        <trans-unit id="68872e2be1ce33bb896f22d4f191b4b392e2d93b" translate="yes" xml:space="preserve">
          <source>neon-fp16</source>
          <target state="translated">neon-fp16</target>
        </trans-unit>
        <trans-unit id="6d08034a86e357b5e62b297ff41112f744eae729" translate="yes" xml:space="preserve">
          <source>neon-vfpv3</source>
          <target state="translated">neon-vfpv3</target>
        </trans-unit>
        <trans-unit id="a7321a716f1a5439b75ffce9b086279a2afdd43e" translate="yes" xml:space="preserve">
          <source>neon-vfpv4</source>
          <target state="translated">neon-vfpv4</target>
        </trans-unit>
        <trans-unit id="9b0b8a8a26df0db9c896cf70e816a0ca67ff28a2" translate="yes" xml:space="preserve">
          <source>neoverse-e1</source>
          <target state="translated">neoverse-e1</target>
        </trans-unit>
        <trans-unit id="bf3d1140495a5cd0018872064d1115f2513cd7ca" translate="yes" xml:space="preserve">
          <source>neoverse-n1</source>
          <target state="translated">neoverse-n1</target>
        </trans-unit>
        <trans-unit id="85777c03b72554cd08e721b6148dc27d2a50a7a6" translate="yes" xml:space="preserve">
          <source>never</source>
          <target state="translated">never</target>
        </trans-unit>
        <trans-unit id="a1ad18f8eb00592149c80d3680da2a4a2f63ebfd" translate="yes" xml:space="preserve">
          <source>new (nothrow)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637dacbf90625cb5636782e45bb4d76a11502165" translate="yes" xml:space="preserve">
          <source>niagara</source>
          <target state="translated">niagara</target>
        </trans-unit>
        <trans-unit id="d9a505a89bb89627b384d4c8fd86bc7e2aaaa4ab" translate="yes" xml:space="preserve">
          <source>niagara2</source>
          <target state="translated">niagara2</target>
        </trans-unit>
        <trans-unit id="6a85c9a83698c2826a0934dfd534942f75ebbd91" translate="yes" xml:space="preserve">
          <source>niagara3</source>
          <target state="translated">niagara3</target>
        </trans-unit>
        <trans-unit id="b1ab7edd1c6521715a2a6eb59b509c9d2e9fd729" translate="yes" xml:space="preserve">
          <source>niagara4</source>
          <target state="translated">niagara4</target>
        </trans-unit>
        <trans-unit id="8ae404d288ee45faa5b4fb8caf41fde4ad4eb7ec" translate="yes" xml:space="preserve">
          <source>niagara7</source>
          <target state="translated">niagara7</target>
        </trans-unit>
        <trans-unit id="fd1286353570c5703799ba76999323b7c7447b06" translate="yes" xml:space="preserve">
          <source>no</source>
          <target state="translated">no</target>
        </trans-unit>
        <trans-unit id="84e9d0dbac2449a2a96508e04c0accf17a79c336" translate="yes" xml:space="preserve">
          <source>no-</source>
          <target state="translated">no-</target>
        </trans-unit>
        <trans-unit id="54b5a13200a41788d2c539c3222b6118da4e6ad2" translate="yes" xml:space="preserve">
          <source>no-3dnow</source>
          <target state="translated">no-3dnow</target>
        </trans-unit>
        <trans-unit id="58bd58addcafa8a1179eff7d67c96fc30345aeff" translate="yes" xml:space="preserve">
          <source>no-3dnowa</source>
          <target state="translated">no-3dnowa</target>
        </trans-unit>
        <trans-unit id="9e58b4df7c9bf69762b5dbecbfe382bb598efeda" translate="yes" xml:space="preserve">
          <source>no-abm</source>
          <target state="translated">no-abm</target>
        </trans-unit>
        <trans-unit id="547512f20e927fe865c42591fce9c22d223ddb6f" translate="yes" xml:space="preserve">
          <source>no-adx</source>
          <target state="translated">no-adx</target>
        </trans-unit>
        <trans-unit id="8aab249723bbce3418a4c6b585dc12e3e9fb8fec" translate="yes" xml:space="preserve">
          <source>no-aes</source>
          <target state="translated">no-aes</target>
        </trans-unit>
        <trans-unit id="db40098d07fa1ea42074d658661345671ba483b3" translate="yes" xml:space="preserve">
          <source>no-align-stringops</source>
          <target state="translated">no-align-stringops</target>
        </trans-unit>
        <trans-unit id="ecb17decfa8d1672de7d074503709ec906d2489f" translate="yes" xml:space="preserve">
          <source>no-altivec</source>
          <target state="translated">no-altivec</target>
        </trans-unit>
        <trans-unit id="deba7f92ab91a1f24755e802f94a5ec29d839bc9" translate="yes" xml:space="preserve">
          <source>no-avoid-indexed-addresses</source>
          <target state="translated">no-avoid-indexed-addresses</target>
        </trans-unit>
        <trans-unit id="62e07b26a15b68282687fcc1b9aa166b912d7b15" translate="yes" xml:space="preserve">
          <source>no-avx</source>
          <target state="translated">no-avx</target>
        </trans-unit>
        <trans-unit id="fc64ca21a6bbc1f302664df710160a08248943bf" translate="yes" xml:space="preserve">
          <source>no-avx2</source>
          <target state="translated">no-avx2</target>
        </trans-unit>
        <trans-unit id="efea1b2db7c62e0b4d36397f111a6846c9a726f3" translate="yes" xml:space="preserve">
          <source>no-avx5124fmaps</source>
          <target state="translated">no-avx5124fmaps</target>
        </trans-unit>
        <trans-unit id="16cbf85e2a57064f8301f3b4ad07177832b0852b" translate="yes" xml:space="preserve">
          <source>no-avx5124vnniw</source>
          <target state="translated">no-avx5124vnniw</target>
        </trans-unit>
        <trans-unit id="c3e8294d64fee70d8d5354fa59ab436f2265aaff" translate="yes" xml:space="preserve">
          <source>no-avx512bitalg</source>
          <target state="translated">no-avx512bitalg</target>
        </trans-unit>
        <trans-unit id="e046b2e2616aa15517d04d9bcdfa74b4889f59a5" translate="yes" xml:space="preserve">
          <source>no-avx512bw</source>
          <target state="translated">no-avx512bw</target>
        </trans-unit>
        <trans-unit id="3bbe2447a0c3b553ae4b95d05a6353210c2d2ec0" translate="yes" xml:space="preserve">
          <source>no-avx512cd</source>
          <target state="translated">no-avx512cd</target>
        </trans-unit>
        <trans-unit id="1a08586e6ffa55e6f055dcd987dd963b53d38c39" translate="yes" xml:space="preserve">
          <source>no-avx512dq</source>
          <target state="translated">no-avx512dq</target>
        </trans-unit>
        <trans-unit id="de3c8d8d9015d22cd015cc20dc7ec00575921ae0" translate="yes" xml:space="preserve">
          <source>no-avx512er</source>
          <target state="translated">no-avx512er</target>
        </trans-unit>
        <trans-unit id="34dc78d3d33debcd2e616fcbbedda8ce706fe754" translate="yes" xml:space="preserve">
          <source>no-avx512f</source>
          <target state="translated">no-avx512f</target>
        </trans-unit>
        <trans-unit id="1ccec35da002c2b540d82ec11b056b5fe276f712" translate="yes" xml:space="preserve">
          <source>no-avx512ifma</source>
          <target state="translated">no-avx512ifma</target>
        </trans-unit>
        <trans-unit id="9e1fadfa78eaf584eec5533739405f3e599bbe58" translate="yes" xml:space="preserve">
          <source>no-avx512pf</source>
          <target state="translated">no-avx512pf</target>
        </trans-unit>
        <trans-unit id="89094075614cbd88013c83fb24a02409dedd9753" translate="yes" xml:space="preserve">
          <source>no-avx512vbmi</source>
          <target state="translated">no-avx512vbmi</target>
        </trans-unit>
        <trans-unit id="61a456f73a4ed694e8b087736dafa49e9618b80d" translate="yes" xml:space="preserve">
          <source>no-avx512vbmi2</source>
          <target state="translated">no-avx512vbmi2</target>
        </trans-unit>
        <trans-unit id="8a47f602637b458fad8e82a56400e7fca544183f" translate="yes" xml:space="preserve">
          <source>no-avx512vl</source>
          <target state="translated">no-avx512vl</target>
        </trans-unit>
        <trans-unit id="436b368e2e98d308527b9ff4f2370797cac2d46b" translate="yes" xml:space="preserve">
          <source>no-avx512vnni</source>
          <target state="translated">no-avx512vnni</target>
        </trans-unit>
        <trans-unit id="c08ae9a7c3d6e2106348a5e08e6330f1dbabbb53" translate="yes" xml:space="preserve">
          <source>no-avx512vpopcntdq</source>
          <target state="translated">no-avx512vpopcntdq</target>
        </trans-unit>
        <trans-unit id="cb3cecfbcdabf8bda264d2834dce234cdd59d281" translate="yes" xml:space="preserve">
          <source>no-backchain</source>
          <target state="translated">no-backchain</target>
        </trans-unit>
        <trans-unit id="57352b788339a2a9dae1c42647ae9d531534f05a" translate="yes" xml:space="preserve">
          <source>no-bmi</source>
          <target state="translated">no-bmi</target>
        </trans-unit>
        <trans-unit id="fe17c43df2aa67bd537d528f62c07c4c81bff594" translate="yes" xml:space="preserve">
          <source>no-bmi2</source>
          <target state="translated">no-bmi2</target>
        </trans-unit>
        <trans-unit id="3e8f596150812b331b3fa6f6294eead683b34c95" translate="yes" xml:space="preserve">
          <source>no-cld</source>
          <target state="translated">no-cld</target>
        </trans-unit>
        <trans-unit id="26dc670a2644cbd9b5040a9ec42b54a3c3744dd6" translate="yes" xml:space="preserve">
          <source>no-cldemote</source>
          <target state="translated">no-cldemote</target>
        </trans-unit>
        <trans-unit id="409f6c8ca96eda981064175944555d523deb4e24" translate="yes" xml:space="preserve">
          <source>no-clflushopt</source>
          <target state="translated">no-clflushopt</target>
        </trans-unit>
        <trans-unit id="258b1f5afa8eecb925c87efb9a149ca39841b6dd" translate="yes" xml:space="preserve">
          <source>no-clwb</source>
          <target state="translated">no-clwb</target>
        </trans-unit>
        <trans-unit id="19f5e46fba6519ec1a5672070808fea3ebfcc472" translate="yes" xml:space="preserve">
          <source>no-clzero</source>
          <target state="translated">no-clzero</target>
        </trans-unit>
        <trans-unit id="973e0520c509d31028d9407b0b6919c95fd032d5" translate="yes" xml:space="preserve">
          <source>no-cmpb</source>
          <target state="translated">no-cmpb</target>
        </trans-unit>
        <trans-unit id="a2b3de1412d4f049e616fa7a3ecd3166d7187f2e" translate="yes" xml:space="preserve">
          <source>no-crc32</source>
          <target state="translated">no-crc32</target>
        </trans-unit>
        <trans-unit id="22aace40ae5bd4c0e75e12884cd42995a99699b4" translate="yes" xml:space="preserve">
          <source>no-custom-&lt;var&gt;insn&lt;/var&gt;</source>
          <target state="translated">no-custom-&lt;var&gt;insn&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="4526c0794a1882aeda46cb393013240517612ecd" translate="yes" xml:space="preserve">
          <source>no-cx16</source>
          <target state="translated">no-cx16</target>
        </trans-unit>
        <trans-unit id="0022d43841e54bf78622d30201349b29936f6b1a" translate="yes" xml:space="preserve">
          <source>no-dlmzb</source>
          <target state="translated">no-dlmzb</target>
        </trans-unit>
        <trans-unit id="db7ae4bb4bdd3eab208cdc7ecbd8cf3a90b504aa" translate="yes" xml:space="preserve">
          <source>no-f16c</source>
          <target state="translated">no-f16c</target>
        </trans-unit>
        <trans-unit id="7cfbf58a70841007ff5e4f9a5f2b2670df8c55bc" translate="yes" xml:space="preserve">
          <source>no-fancy-math-387</source>
          <target state="translated">no-fancy-math-387</target>
        </trans-unit>
        <trans-unit id="f03aa5d3b09095096b943907bb7d558c7711960a" translate="yes" xml:space="preserve">
          <source>no-fma</source>
          <target state="translated">no-fma</target>
        </trans-unit>
        <trans-unit id="bf454d7bb2487744a615894660a50d7c72341b49" translate="yes" xml:space="preserve">
          <source>no-fma4</source>
          <target state="translated">no-fma4</target>
        </trans-unit>
        <trans-unit id="b9c5e96fb31ed00751968598238b5731257babfd" translate="yes" xml:space="preserve">
          <source>no-fprnd</source>
          <target state="translated">no-fprnd</target>
        </trans-unit>
        <trans-unit id="7c5cf82f238ec73963165dba5a5368afc12a2fb6" translate="yes" xml:space="preserve">
          <source>no-friz</source>
          <target state="translated">no-friz</target>
        </trans-unit>
        <trans-unit id="82969757d7f25e5b625d160a01df707ef51865cf" translate="yes" xml:space="preserve">
          <source>no-fsgsbase</source>
          <target state="translated">no-fsgsbase</target>
        </trans-unit>
        <trans-unit id="0b2ace45f8cea094f7437620461e52aa673c8b59" translate="yes" xml:space="preserve">
          <source>no-fxsr</source>
          <target state="translated">no-fxsr</target>
        </trans-unit>
        <trans-unit id="596d6c91c762e32d9d670c4a25bee5b08b0f8582" translate="yes" xml:space="preserve">
          <source>no-gfni</source>
          <target state="translated">no-gfni</target>
        </trans-unit>
        <trans-unit id="a29d20ecfce122f7773fa9aae44612a6e4121f21" translate="yes" xml:space="preserve">
          <source>no-hard-dfp</source>
          <target state="translated">no-hard-dfp</target>
        </trans-unit>
        <trans-unit id="7632101cdd4294d0a6ea7680c92af7b1713bcb7b" translate="yes" xml:space="preserve">
          <source>no-hle</source>
          <target state="translated">no-hle</target>
        </trans-unit>
        <trans-unit id="bf6675726ddb40a93daba69f3bed6161a9d004c1" translate="yes" xml:space="preserve">
          <source>no-htm</source>
          <target state="translated">no-htm</target>
        </trans-unit>
        <trans-unit id="4ddaa76cfd90e338c507b846a5d01870480b2c6b" translate="yes" xml:space="preserve">
          <source>no-ieee-fp</source>
          <target state="translated">no-ieee-fp</target>
        </trans-unit>
        <trans-unit id="a9774310f60c269b39673775be938a9804756fa3" translate="yes" xml:space="preserve">
          <source>no-inline-all-stringops</source>
          <target state="translated">no-inline-all-stringops</target>
        </trans-unit>
        <trans-unit id="5180a37ac4a957cb07333c725a29ec4f70c86997" translate="yes" xml:space="preserve">
          <source>no-inline-stringops-dynamically</source>
          <target state="translated">no-inline-stringops-dynamically</target>
        </trans-unit>
        <trans-unit id="d6c9a0cc55cec7fc89c4520d2e50923a1268973f" translate="yes" xml:space="preserve">
          <source>no-isel</source>
          <target state="translated">no-isel</target>
        </trans-unit>
        <trans-unit id="e91666455eb7e7cf286a2f3e78820387fd8d4ed7" translate="yes" xml:space="preserve">
          <source>no-longcall</source>
          <target state="translated">no-longcall</target>
        </trans-unit>
        <trans-unit id="7121e3a7e4870404a9b01650d8b3d7741e31520f" translate="yes" xml:space="preserve">
          <source>no-lwp</source>
          <target state="translated">no-lwp</target>
        </trans-unit>
        <trans-unit id="bee4538bfd87aaeb6b06b44055b915c270b2f4c1" translate="yes" xml:space="preserve">
          <source>no-lzcnt</source>
          <target state="translated">no-lzcnt</target>
        </trans-unit>
        <trans-unit id="157d23d428944f3da3ef622059a0c5e5f9f688d5" translate="yes" xml:space="preserve">
          <source>no-mfcrf</source>
          <target state="translated">no-mfcrf</target>
        </trans-unit>
        <trans-unit id="60106b02727ec69dde93031ad888342cddf1bdad" translate="yes" xml:space="preserve">
          <source>no-mfpgpr</source>
          <target state="translated">no-mfpgpr</target>
        </trans-unit>
        <trans-unit id="8f4177a51af75f9af53b4525f28382f781d6fe63" translate="yes" xml:space="preserve">
          <source>no-mmx</source>
          <target state="translated">no-mmx</target>
        </trans-unit>
        <trans-unit id="2a5647aa8131e545f9b15b645e1ef26b3b03baf1" translate="yes" xml:space="preserve">
          <source>no-movbe</source>
          <target state="translated">no-movbe</target>
        </trans-unit>
        <trans-unit id="922898823d7fdda9f8caabb2c643c3e5ff30ffb4" translate="yes" xml:space="preserve">
          <source>no-movdir64b</source>
          <target state="translated">no-movdir64b</target>
        </trans-unit>
        <trans-unit id="d5329719c6f4dd5a8f46f3d424d9c62e7a6ef083" translate="yes" xml:space="preserve">
          <source>no-movdiri</source>
          <target state="translated">no-movdiri</target>
        </trans-unit>
        <trans-unit id="321d9624bbe066a70df8633a077298e2ba076b6f" translate="yes" xml:space="preserve">
          <source>no-mulhw</source>
          <target state="translated">no-mulhw</target>
        </trans-unit>
        <trans-unit id="c0a1aad756527d5009dc2530b26de4f074d0d187" translate="yes" xml:space="preserve">
          <source>no-multiple</source>
          <target state="translated">no-multiple</target>
        </trans-unit>
        <trans-unit id="cb968e98efa0b3ec4214e2eaef552a187f6974d2" translate="yes" xml:space="preserve">
          <source>no-mvcle</source>
          <target state="translated">no-mvcle</target>
        </trans-unit>
        <trans-unit id="584ea383cbeb09bac56ed4a3f3d28ce5e3cf5ac1" translate="yes" xml:space="preserve">
          <source>no-mwaitx</source>
          <target state="translated">no-mwaitx</target>
        </trans-unit>
        <trans-unit id="8dd2e10bf51f14eb2a15771b78608dabf84a97fc" translate="yes" xml:space="preserve">
          <source>no-packed-stack</source>
          <target state="translated">no-packed-stack</target>
        </trans-unit>
        <trans-unit id="b85506def4017a8068c925116225c0a6423236d9" translate="yes" xml:space="preserve">
          <source>no-paired</source>
          <target state="translated">no-paired</target>
        </trans-unit>
        <trans-unit id="e18f54d2154e8f17a83e47f61459f70d0fa22371" translate="yes" xml:space="preserve">
          <source>no-pclmul</source>
          <target state="translated">no-pclmul</target>
        </trans-unit>
        <trans-unit id="9b935a64bd1f7737a9f7488d41b04f726cf85581" translate="yes" xml:space="preserve">
          <source>no-pconfig</source>
          <target state="translated">no-pconfig</target>
        </trans-unit>
        <trans-unit id="a07747a02de4ff3b204fe5aa0d8da90193c108bc" translate="yes" xml:space="preserve">
          <source>no-pku</source>
          <target state="translated">no-pku</target>
        </trans-unit>
        <trans-unit id="209beb3da85478a7d87d4a007b4d75c3594daf33" translate="yes" xml:space="preserve">
          <source>no-popcnt</source>
          <target state="translated">no-popcnt</target>
        </trans-unit>
        <trans-unit id="dc345bb9fbf8b5d771258b355a7a1072eccd01a0" translate="yes" xml:space="preserve">
          <source>no-popcntb</source>
          <target state="translated">no-popcntb</target>
        </trans-unit>
        <trans-unit id="aa962bc5c582f650b32cdc0e113da0c39506593a" translate="yes" xml:space="preserve">
          <source>no-popcntd</source>
          <target state="translated">no-popcntd</target>
        </trans-unit>
        <trans-unit id="8f02d8885be70d664e20886cf093de1ec57e4940" translate="yes" xml:space="preserve">
          <source>no-powerpc-gfxopt</source>
          <target state="translated">no-powerpc-gfxopt</target>
        </trans-unit>
        <trans-unit id="cff72283baef92dae75c6716a2f0185ce422e66f" translate="yes" xml:space="preserve">
          <source>no-powerpc-gpopt</source>
          <target state="translated">no-powerpc-gpopt</target>
        </trans-unit>
        <trans-unit id="b626af359d3cd774061907df8b422014e939c81e" translate="yes" xml:space="preserve">
          <source>no-prefetchwt1</source>
          <target state="translated">no-prefetchwt1</target>
        </trans-unit>
        <trans-unit id="eb30fbbb47c6f7791ea05ccfd7df8bb9d45c7ed6" translate="yes" xml:space="preserve">
          <source>no-prfchw</source>
          <target state="translated">no-prfchw</target>
        </trans-unit>
        <trans-unit id="0032f24dccb943acc1a4f9bef4ef121f92d0fe91" translate="yes" xml:space="preserve">
          <source>no-ptwrite</source>
          <target state="translated">no-ptwrite</target>
        </trans-unit>
        <trans-unit id="d2e288f8c2ffcd69cb44407e3a69d38943be8e92" translate="yes" xml:space="preserve">
          <source>no-rdpid</source>
          <target state="translated">no-rdpid</target>
        </trans-unit>
        <trans-unit id="d6824f8c126f6f4aa0a07336003adaf14fb529f3" translate="yes" xml:space="preserve">
          <source>no-rdrnd</source>
          <target state="translated">no-rdrnd</target>
        </trans-unit>
        <trans-unit id="9fadc0e74cf8e3a9c9ac29385944f519a3198482" translate="yes" xml:space="preserve">
          <source>no-rdseed</source>
          <target state="translated">no-rdseed</target>
        </trans-unit>
        <trans-unit id="1aab5e5835b92c1a342ebdad26a459ad78c793c8" translate="yes" xml:space="preserve">
          <source>no-recip</source>
          <target state="translated">no-recip</target>
        </trans-unit>
        <trans-unit id="fa72b0241f7d4b4c5349a2652b3e45758c94e0d8" translate="yes" xml:space="preserve">
          <source>no-recip-precision</source>
          <target state="translated">no-recip-precision</target>
        </trans-unit>
        <trans-unit id="56f9dcb35c0a75e4a6d0277edc7ea63b1d870190" translate="yes" xml:space="preserve">
          <source>no-rtm</source>
          <target state="translated">no-rtm</target>
        </trans-unit>
        <trans-unit id="4f564a95b6e9b4b845480382e5ddb22216899a25" translate="yes" xml:space="preserve">
          <source>no-sahf</source>
          <target state="translated">no-sahf</target>
        </trans-unit>
        <trans-unit id="76381a5af845202e2cc5ddcff2f17b93de846ab5" translate="yes" xml:space="preserve">
          <source>no-sgx</source>
          <target state="translated">no-sgx</target>
        </trans-unit>
        <trans-unit id="bdaca04cefdc051b221713a31e8c6306893b2bcd" translate="yes" xml:space="preserve">
          <source>no-sha</source>
          <target state="translated">no-sha</target>
        </trans-unit>
        <trans-unit id="32ab92bebddc0f8bce79e9808ea3f873402c56ac" translate="yes" xml:space="preserve">
          <source>no-shstk</source>
          <target state="translated">no-shstk</target>
        </trans-unit>
        <trans-unit id="b91be06b42f655e8711b871ca840d7ab4c5b3930" translate="yes" xml:space="preserve">
          <source>no-small-exec</source>
          <target state="translated">no-small-exec</target>
        </trans-unit>
        <trans-unit id="8ad32946144bd4a34ca2229df771a37cede6119b" translate="yes" xml:space="preserve">
          <source>no-sse</source>
          <target state="translated">no-sse</target>
        </trans-unit>
        <trans-unit id="96880606d8f6e8eff31472f762ee9ce931ea61e3" translate="yes" xml:space="preserve">
          <source>no-sse2</source>
          <target state="translated">no-sse2</target>
        </trans-unit>
        <trans-unit id="accca3ef19c66a50362a30ce7022fcc0a6c85050" translate="yes" xml:space="preserve">
          <source>no-sse3</source>
          <target state="translated">no-sse3</target>
        </trans-unit>
        <trans-unit id="feeb9f763379e8d1a016e10db20c671610bc6535" translate="yes" xml:space="preserve">
          <source>no-sse4</source>
          <target state="translated">no-sse4</target>
        </trans-unit>
        <trans-unit id="5a151a840a880322bfc74c63c4a3289af3b1fab7" translate="yes" xml:space="preserve">
          <source>no-sse4.1</source>
          <target state="translated">no-sse4.1</target>
        </trans-unit>
        <trans-unit id="4f1ef8d2514a7d6b86d83e188e9f182fd1060bbb" translate="yes" xml:space="preserve">
          <source>no-sse4.2</source>
          <target state="translated">no-sse4.2</target>
        </trans-unit>
        <trans-unit id="8c25f1c45e45c48bcc84e68ee0b51f7c2601984e" translate="yes" xml:space="preserve">
          <source>no-sse4a</source>
          <target state="translated">no-sse4a</target>
        </trans-unit>
        <trans-unit id="2cfed32feb7593ec84c2cbbc2dfcbe44677f5355" translate="yes" xml:space="preserve">
          <source>no-ssse3</source>
          <target state="translated">no-ssse3</target>
        </trans-unit>
        <trans-unit id="f0cdf8f87de51014ceac4d00e4b98e7af901d5df" translate="yes" xml:space="preserve">
          <source>no-string</source>
          <target state="translated">no-string</target>
        </trans-unit>
        <trans-unit id="fe91b19f49b9fe7aeac7a9e36bb60544af35d89a" translate="yes" xml:space="preserve">
          <source>no-tbm</source>
          <target state="translated">no-tbm</target>
        </trans-unit>
        <trans-unit id="3e4ea7807ce69f4e27b485eca13359211b716bf5" translate="yes" xml:space="preserve">
          <source>no-update</source>
          <target state="translated">no-update</target>
        </trans-unit>
        <trans-unit id="719e66fb0c2273a251ed8176ae7e483181d4dfd0" translate="yes" xml:space="preserve">
          <source>no-vaes</source>
          <target state="translated">no-vaes</target>
        </trans-unit>
        <trans-unit id="942314f9d58ba3a6fb05e3f0e83f3bc6703445ff" translate="yes" xml:space="preserve">
          <source>no-vpclmulqdq</source>
          <target state="translated">no-vpclmulqdq</target>
        </trans-unit>
        <trans-unit id="2f814a676220a452f87b7ef75146385042a63a94" translate="yes" xml:space="preserve">
          <source>no-vsx</source>
          <target state="translated">no-vsx</target>
        </trans-unit>
        <trans-unit id="5bca6a6688582cd526f64f3a1ffffc2ee9a9ca1c" translate="yes" xml:space="preserve">
          <source>no-vx</source>
          <target state="translated">no-vx</target>
        </trans-unit>
        <trans-unit id="2dd7196ed2ba8109b55f724b093c0b5aaf38e8ee" translate="yes" xml:space="preserve">
          <source>no-waitpkg</source>
          <target state="translated">no-waitpkg</target>
        </trans-unit>
        <trans-unit id="9948764e03fa1c020283f10e3d258479d8073cd8" translate="yes" xml:space="preserve">
          <source>no-warn-dynamicstack</source>
          <target state="translated">no-warn-dynamicstack</target>
        </trans-unit>
        <trans-unit id="e7aea100eb7a2b5c95b649a0571617cb6df0ca4a" translate="yes" xml:space="preserve">
          <source>no-wbnoinvd</source>
          <target state="translated">no-wbnoinvd</target>
        </trans-unit>
        <trans-unit id="f8b2ed16f48fb3cf2fb980d968760fcb6ca2b9e2" translate="yes" xml:space="preserve">
          <source>no-xop</source>
          <target state="translated">no-xop</target>
        </trans-unit>
        <trans-unit id="4e979686dc5873a0d0434fe533d81bbf74070878" translate="yes" xml:space="preserve">
          <source>no-xsave</source>
          <target state="translated">no-xsave</target>
        </trans-unit>
        <trans-unit id="4b0003ed6eaccc5db7f07c78ce9d146b58d3246a" translate="yes" xml:space="preserve">
          <source>no-xsavec</source>
          <target state="translated">no-xsavec</target>
        </trans-unit>
        <trans-unit id="41264ed55636f020bb88c9d7d3ead74e92fe5da5" translate="yes" xml:space="preserve">
          <source>no-xsaveopt</source>
          <target state="translated">no-xsaveopt</target>
        </trans-unit>
        <trans-unit id="8c5c316956b494ccc287d326fd58fa6a073e6ddc" translate="yes" xml:space="preserve">
          <source>no-xsaves</source>
          <target state="translated">no-xsaves</target>
        </trans-unit>
        <trans-unit id="a5fd24541db5ff7ea76b55478b12f09a33732796" translate="yes" xml:space="preserve">
          <source>no-zvector</source>
          <target state="translated">no-zvector</target>
        </trans-unit>
        <trans-unit id="0bb65e2e8e97bf45eaceb5a32037e7fde1e0f4d5" translate="yes" xml:space="preserve">
          <source>no&lt;var&gt;feature&lt;/var&gt;</source>
          <target state="translated">no&lt;var&gt;feature&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="1975529b695b21c7de590e5f4afeb1480c24cb66" translate="yes" xml:space="preserve">
          <source>noaes</source>
          <target state="translated">noaes</target>
        </trans-unit>
        <trans-unit id="28762b25eacde5ece0ff07b036f5d1972be4db32" translate="yes" xml:space="preserve">
          <source>nocf_check</source>
          <target state="translated">nocf_check</target>
        </trans-unit>
        <trans-unit id="a2799790d1d72156ccc01cffae73e63ab6d01dc2" translate="yes" xml:space="preserve">
          <source>nocona</source>
          <target state="translated">nocona</target>
        </trans-unit>
        <trans-unit id="17386a4664c390a2c4133a79b3b7c630ab267ca2" translate="yes" xml:space="preserve">
          <source>nocrypto</source>
          <target state="translated">nocrypto</target>
        </trans-unit>
        <trans-unit id="a507df6c86eda3b76f5329e23888d54e25f2c7e9" translate="yes" xml:space="preserve">
          <source>nofp</source>
          <target state="translated">nofp</target>
        </trans-unit>
        <trans-unit id="7e3f778a6f7c4cfef6e13d9955c7b0798a242392" translate="yes" xml:space="preserve">
          <source>nolto-rel</source>
          <target state="translated">nolto-rel</target>
        </trans-unit>
        <trans-unit id="0b8c82acef78e65b6d42e81ad229391b5cb12c8d" translate="yes" xml:space="preserve">
          <source>non-leaf</source>
          <target state="translated">non-leaf</target>
        </trans-unit>
        <trans-unit id="71f8e7976e4cbc4561c9d62fb283e7f788202acb" translate="yes" xml:space="preserve">
          <source>none</source>
          <target state="translated">none</target>
        </trans-unit>
        <trans-unit id="19d0495c3630c205e3f85cd13c6d4cb031c0953f" translate="yes" xml:space="preserve">
          <source>nor</source>
          <target state="translated">nor</target>
        </trans-unit>
        <trans-unit id="1278e1f5cbacb266caf4540a8bd98faddb269649" translate="yes" xml:space="preserve">
          <source>noreturn</source>
          <target state="translated">noreturn</target>
        </trans-unit>
        <trans-unit id="63e37a0d1d51b8efd953de2fcdb71ed70eedafcd" translate="yes" xml:space="preserve">
          <source>norm</source>
          <target state="translated">norm</target>
        </trans-unit>
        <trans-unit id="7350fad1445c3e5b4845f9a332e9f67140d23d6f" translate="yes" xml:space="preserve">
          <source>normal executable (default), uses startup code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7411b594e25fb13715c888ea75650af13f46733b" translate="yes" xml:space="preserve">
          <source>normw</source>
          <target state="translated">normw</target>
        </trans-unit>
        <trans-unit id="a7b64a6a4970b67f5d781ac9789fd72044c1c716" translate="yes" xml:space="preserve">
          <source>nosha2</source>
          <target state="translated">nosha2</target>
        </trans-unit>
        <trans-unit id="57b23ed956c57300d4bd48a0b58cf0732d081b3f" translate="yes" xml:space="preserve">
          <source>nosimd</source>
          <target state="translated">nosimd</target>
        </trans-unit>
        <trans-unit id="a04f8cd6c016a1e568cdc58730a2891fb7bb8042" translate="yes" xml:space="preserve">
          <source>notb</source>
          <target state="translated">notb</target>
        </trans-unit>
        <trans-unit id="c51048b7325d60e326d19a9cfbeff2577be1672e" translate="yes" xml:space="preserve">
          <source>note</source>
          <target state="translated">note</target>
        </trans-unit>
        <trans-unit id="c9fe7c48137805dd9be97344e73b9139c9f2a33b" translate="yes" xml:space="preserve">
          <source>notes file is generated when the source file is compiled with the GCC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53fe2fca35276986b2ff4193fff4d051a6f3e8b" translate="yes" xml:space="preserve">
          <source>novectors</source>
          <target state="translated">novectors</target>
        </trans-unit>
        <trans-unit id="5fcefd2596849bd335a46ebb6ae6896d8bb0d425" translate="yes" xml:space="preserve">
          <source>nps400</source>
          <target state="translated">nps400</target>
        </trans-unit>
        <trans-unit id="5452b39e43d1b2489d5bbc109d98f02590664c28" translate="yes" xml:space="preserve">
          <source>number of the part counting from most to least significant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a81af3e591ac713f81ea1efe93dcf36157d8376" translate="yes" xml:space="preserve">
          <source>o</source>
          <target state="translated">o</target>
        </trans-unit>
        <trans-unit id="db6e43e0026b9fe90100f38295fd9d4b267d502e" translate="yes" xml:space="preserve">
          <source>objc/NXConstStr.h</source>
          <target state="translated">objc/NXConstStr.h</target>
        </trans-unit>
        <trans-unit id="b5ba3ba39f2f14bdc02ef07b1a2ed81e9930c6b1" translate="yes" xml:space="preserve">
          <source>objc/message.h</source>
          <target state="translated">objc/message.h</target>
        </trans-unit>
        <trans-unit id="ed686e50e474517bb1b383f732ca4a1669e472f1" translate="yes" xml:space="preserve">
          <source>objc/objc-api.h</source>
          <target state="translated">objc/objc-api.h</target>
        </trans-unit>
        <trans-unit id="cbaf95443ad26cb853261db47f75467f50586e5f" translate="yes" xml:space="preserve">
          <source>objc/objc-exception.h</source>
          <target state="translated">objc/objc-exception.h</target>
        </trans-unit>
        <trans-unit id="f72b809b08f6f0f7c9b0fbcab95862e0582330b6" translate="yes" xml:space="preserve">
          <source>objc/objc-sync.h</source>
          <target state="translated">objc/objc-sync.h</target>
        </trans-unit>
        <trans-unit id="4bb5fc3fbd3390a59c03b1470e24cd7ccb31f3df" translate="yes" xml:space="preserve">
          <source>objc/objc.h</source>
          <target state="translated">objc/objc.h</target>
        </trans-unit>
        <trans-unit id="83dd2f3bbd17d563b758bc827fda2c3117f67010" translate="yes" xml:space="preserve">
          <source>objc/runtime.h</source>
          <target state="translated">objc/runtime.h</target>
        </trans-unit>
        <trans-unit id="ffb77336efb5ee0683f6fa26c2bbb9397b08be52" translate="yes" xml:space="preserve">
          <source>objc/thr.h</source>
          <target state="translated">objc/thr.h</target>
        </trans-unit>
        <trans-unit id="ba2ceb6bbc66e19d5843f960e299c2ad15a3cd58" translate="yes" xml:space="preserve">
          <source>object file formats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8a01c7ff06e86a51f7617bd9d7464c52d68678" translate="yes" xml:space="preserve">
          <source>objects identifying those parts of the message that refer to expressions, statements or symbol-table nodes, which of these categories they are, and, when available, their source code location,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee76674f4e6b0e94a8a1fff02495da5ffee5660" translate="yes" xml:space="preserve">
          <source>octeon</source>
          <target state="translated">octeon</target>
        </trans-unit>
        <trans-unit id="9a06fce39fb456e8fa2d6e548443be932fd49391" translate="yes" xml:space="preserve">
          <source>octeon+</source>
          <target state="translated">octeon+</target>
        </trans-unit>
        <trans-unit id="1cd872a73785c9375185f4635a41d0fe04ca7ccc" translate="yes" xml:space="preserve">
          <source>octeon2</source>
          <target state="translated">octeon2</target>
        </trans-unit>
        <trans-unit id="2324fb635f986205168eae85ee96c6f5c7252318" translate="yes" xml:space="preserve">
          <source>octeon3</source>
          <target state="translated">octeon3</target>
        </trans-unit>
        <trans-unit id="d8908323364433624ad17fcb60e8658d0b4cd398" translate="yes" xml:space="preserve">
          <source>octeontx</source>
          <target state="translated">octeontx</target>
        </trans-unit>
        <trans-unit id="455cf92e3687e29860146a26b9f5795c50f80d3c" translate="yes" xml:space="preserve">
          <source>octeontx81</source>
          <target state="translated">octeontx81</target>
        </trans-unit>
        <trans-unit id="b4c99e4f213c06743f47c1b7385a4a875e6313e4" translate="yes" xml:space="preserve">
          <source>octeontx83</source>
          <target state="translated">octeontx83</target>
        </trans-unit>
        <trans-unit id="cd0bb09f2f9a98bd9b18bbdb6aa8b973c0633527" translate="yes" xml:space="preserve">
          <source>old_lib</source>
          <target state="translated">old_lib</target>
        </trans-unit>
        <trans-unit id="707c759f8becc21a965062473ca3ddb55f202674" translate="yes" xml:space="preserve">
          <source>omp</source>
          <target state="translated">omp</target>
        </trans-unit>
        <trans-unit id="33142a9896d53630b336d60828e48f3fc960595a" translate="yes" xml:space="preserve">
          <source>on an HP-UX system to determine the proper architecture option for your machine. Code compiled for lower numbered architectures runs on higher numbered architectures, but not the other way around.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a979bc41ae0e52dd660aaa927c29fd3aa05c7c9d" translate="yes" xml:space="preserve">
          <source>on an HP-UX system to determine the proper scheduling option for your machine. The default scheduling is &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="274b1a01029b7b373bd6bb77b4ef6ad3b2d65a04" translate="yes" xml:space="preserve">
          <source>on architectures that support &lt;code&gt;madd&lt;/code&gt; and &lt;code&gt;msub&lt;/code&gt; except for the 74k architecture where it was found to generate slower code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80435168609487e810df784abf6f8decda11289c" translate="yes" xml:space="preserve">
          <source>on little-endian PowerPC systems, since those instructions do not work when the processor is in little-endian mode. The exceptions are PPC740 and PPC750 which permit these instructions in little-endian mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1146d94147284fafe5bef4bcc78030689277de1" translate="yes" xml:space="preserve">
          <source>on programs that use computed gotos.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009f06056ac8f53f18263b604da38244952aef98" translate="yes" xml:space="preserve">
          <source>on targets with linker plugin support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0c8851b1e29c400c6992fcfeb9d3b4c051d4b7" translate="yes" xml:space="preserve">
          <source>on the &lt;code&gt;gcc&lt;/code&gt; command line defines the C preprocessor symbol &lt;code&gt;__XXX__&lt;/code&gt; and cause the linker to search for a script called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21945cab2eea0260d6852a4f52b790bd0f0652f2" translate="yes" xml:space="preserve">
          <source>on the command line does change the behavior of the toolchain since it also enables G14 hardware multiply support. If these options are not specified on the command line then software multiplication routines will be used even though the code targets the RL78 core. This is for backwards compatibility with older toolchains which did not have hardware multiply and divide support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd7f660d5f043522b986b8c5ace210c6ba7d35c" translate="yes" xml:space="preserve">
          <source>on the command-line results in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe05bcdcdc4928012781a5f1a2a77cbb5398e106" translate="yes" xml:space="preserve">
          <source>one</source>
          <target state="translated">one</target>
        </trans-unit>
        <trans-unit id="ae212f72c6c123e44dac374baac912e425718432" translate="yes" xml:space="preserve">
          <source>ones described above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a53deeea759732543c2bbeb24e913c37a96760f" translate="yes" xml:space="preserve">
          <source>only affects assignments). This option is enabled by default for C if a strict conformance option such as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="904fc9f4a26f6e4027bd81c555ca39a110b11272" translate="yes" xml:space="preserve">
          <source>only for pragmatic reasons, not as a requirement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="019411590cefc19af07648066325d195d52ffaa6" translate="yes" xml:space="preserve">
          <source>only performs its checks in the final stage of compilation. This also enforces the coding style convention that methods and selectors must be declared before being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c71b99869fc6ea6b1ad80f7c09ba228e19f03e5" translate="yes" xml:space="preserve">
          <source>optall</source>
          <target state="translated">optall</target>
        </trans-unit>
        <trans-unit id="90abe65fffd3b8e14b35cee25b568cabf4fc8007" translate="yes" xml:space="preserve">
          <source>opteron</source>
          <target state="translated">opteron</target>
        </trans-unit>
        <trans-unit id="acc62c06f43f9d03fb5c3618122aa9ac93ce5e6c" translate="yes" xml:space="preserve">
          <source>opteron-sse3</source>
          <target state="translated">opteron-sse3</target>
        </trans-unit>
        <trans-unit id="605662ddec345caf6b9fee5846058d8cb27f0f7a" translate="yes" xml:space="preserve">
          <source>optimization flags except for those that may interfere with debugging:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784a3ac0bfbd76ec605f3a66ff976a8a001e1c50" translate="yes" xml:space="preserve">
          <source>optimizations except those that often increase code size:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1060ba9408b9341ca3090032ac68787c914c8f" translate="yes" xml:space="preserve">
          <source>optimizations. It also enables optimizations that are not valid for all standard-compliant programs. It turns on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2213a3b55f49a827d728c917f9edee6cb45c4cb8" translate="yes" xml:space="preserve">
          <source>optimized</source>
          <target state="translated">optimized</target>
        </trans-unit>
        <trans-unit id="21d4b8ffb0fce487e0e150755ffd4bd47ef86f91" translate="yes" xml:space="preserve">
          <source>optimized-optall</source>
          <target state="translated">optimized-optall</target>
        </trans-unit>
        <trans-unit id="361f24c57417ba79ddde3bd12ca4c071af09f46e" translate="yes" xml:space="preserve">
          <source>optimizers</source>
          <target state="translated">optimizers</target>
        </trans-unit>
        <trans-unit id="43420a499769c86218aaa8f5d71b54bf717303c0" translate="yes" xml:space="preserve">
          <source>option (but directories specified with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a2f5eb27ddfc2e43166363f664e8d8158f4184" translate="yes" xml:space="preserve">
          <source>option (see &lt;a href=&quot;optimize-options#Optimize-Options&quot;&gt;Optimize Options&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c21b814a654e6849d4d44b7d7f4e466896c0eb" translate="yes" xml:space="preserve">
          <source>option &lt;var&gt;letters&lt;/var&gt;. Here are the possible letters for use in &lt;var&gt;pass&lt;/var&gt; and &lt;var&gt;letters&lt;/var&gt;, and their meanings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20bf99822798e15678801bd2d17332cd77db454c" translate="yes" xml:space="preserve">
          <source>option above for a description of &lt;var&gt;auxname&lt;/var&gt; and instructions on how to generate test coverage data. Coverage data matches the source files more closely if you do not optimize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2d9f148e8a307d8d3e75f5f84cc4cea5cb3c5f" translate="yes" xml:space="preserve">
          <source>option above), suppress instruction numbers for the links to the previous and next instructions in a sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7fad9c41941d7b068ddf77ceffa173e770f53c" translate="yes" xml:space="preserve">
          <source>option allows GCC to generate the FP move to/from general-purpose register instructions implemented on the POWER6X processor and other processors that support the extended PowerPC V2.05 architecture. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb5e4ac7a66bb9c296d758c7b35d9a2acedeee8" translate="yes" xml:space="preserve">
          <source>option allows GCC to generate the FP round to integer instructions implemented on the POWER5+ processor and other processors that support the PowerPC V2.03 architecture. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3dc66935f54c54bc2d8480f466881610f901bb" translate="yes" xml:space="preserve">
          <source>option allows GCC to generate the additional 64-bit instructions that are found in the full PowerPC64 architecture and to treat GPRs as 64-bit, doubleword quantities. GCC defaults to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0ac4e6f4c0cfd37ec929d56fb6f14cf41a2147" translate="yes" xml:space="preserve">
          <source>option allows GCC to generate the compare bytes instruction implemented on the POWER6 processor and other processors that support the PowerPC V2.05 architecture. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b18687236e6930ae072dc5db34f6f6e9fb3fed" translate="yes" xml:space="preserve">
          <source>option allows GCC to generate the decimal floating-point instructions implemented on some POWER processors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d91b73e6d93eedf67eb41d73527346a065ec81b" translate="yes" xml:space="preserve">
          <source>option allows GCC to generate the move from condition register field instruction implemented on the POWER4 processor and other processors that support the PowerPC V2.01 architecture. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f6daedc31231f5a98d99c3c8f0d5968da3e21a" translate="yes" xml:space="preserve">
          <source>option allows GCC to generate the popcount and double-precision FP reciprocal estimate instruction implemented on the POWER5 processor and other processors that support the PowerPC V2.02 architecture. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7588ac3f7971927189bc0416d7eed12199ea24" translate="yes" xml:space="preserve">
          <source>option allows GCC to generate the popcount instruction implemented on the POWER7 processor and other processors that support the PowerPC V2.06 architecture. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc3b97c11d22ff7a3c30e7799d0fb97d065d684f" translate="yes" xml:space="preserve">
          <source>option also sets the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fefa2cbefcb32fb2c16cac20cda8cfbaa404797" translate="yes" xml:space="preserve">
          <source>option also turns off the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68a0776a851adddd7b400f563be999606a9cb36" translate="yes" xml:space="preserve">
          <source>option and the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e3764097aeed9e3de9aa1285361a228dad8f09" translate="yes" xml:space="preserve">
          <source>option and the ISA set by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1ae1e9fe2a9881b4efb48f025d0a98658b1382" translate="yes" xml:space="preserve">
          <source>option and/or the hardware multiply support set by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b2715c6ed026cdf48da6af66fece4a5582bae1" translate="yes" xml:space="preserve">
          <source>option appears on the command line before the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36d1a24a7967f510af7633b0d126ab53a64c527" translate="yes" xml:space="preserve">
          <source>option applies to header files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c11896f38df39c21c86142b0c9ed0d25e653f5d" translate="yes" xml:space="preserve">
          <source>option applies to libraries, but the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e165122aea0cc2b0db5e419cbb4ccbbc04ea096" translate="yes" xml:space="preserve">
          <source>option are incompatible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af47a1626671409238f60d0c9b9410657a8f4963" translate="yes" xml:space="preserve">
          <source>option at all, some compiler passes that collect information useful for debugging do not run at all, so that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2069f42ac93a8096b2e652caf891b1b194e5e3ac" translate="yes" xml:space="preserve">
          <source>option at present because AIX does not have full support for these options. You may still enable or disable them individually if you&amp;rsquo;re sure it&amp;rsquo;ll work in your environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe836b3e92c84a7991c8a824e2ac7d63cb5f8409" translate="yes" xml:space="preserve">
          <source>option because</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540b9609c1db0846d104e200b1c94e38cf77b9ee" translate="yes" xml:space="preserve">
          <source>option besides</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77b090108d124e734b64e24d74568586eb261be" translate="yes" xml:space="preserve">
          <source>option by using the function attribute &lt;code&gt;cdecl&lt;/code&gt;. See &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040a8f48a7a6fc7912e80f1eb056dd92db9e4fc3" translate="yes" xml:space="preserve">
          <source>option can be provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e003c181a8a64c62c36cdefe74b87040b79c1d2c" translate="yes" xml:space="preserve">
          <source>option can be repeated on the command line. Each successive use displays its requested class of options, skipping those that have already been displayed. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efb5da5f6cb96977ea80de231d95730e56efdac" translate="yes" xml:space="preserve">
          <source>option can be specified to have GCC transform calls with null arguments to non-null functions into traps. See &lt;a href=&quot;optimize-options#Optimize-Options&quot;&gt;Optimize Options&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c18067db2541d7b8cee21d830e82144832f2d65" translate="yes" xml:space="preserve">
          <source>option can be used to alter this behavior: only the first detected error is reported and program then exits with a non-zero exit code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c8f81156e18f2cba9d2eb530d8dc431eb5bcf5" translate="yes" xml:space="preserve">
          <source>option can be used to override this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c20870b0874bde4ae427397bc2aad0697e91ba7" translate="yes" xml:space="preserve">
          <source>option can be used to prevent the GCC driver from adding these link options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558d91811a0c1383f401c42d0d8d35e9a33dc3c7" translate="yes" xml:space="preserve">
          <source>option can be used to relax the cost model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e35e0435fa9ba5de3c71b120196b11ab9a29c950" translate="yes" xml:space="preserve">
          <source>option can use both &lt;code&gt;r2&lt;/code&gt; and &lt;code&gt;r13&lt;/code&gt; to point to two separate small data areas. Selecting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa9bc4b9f35905a3a3d0deea589f905d08e26a82" translate="yes" xml:space="preserve">
          <source>option causes all C++-style comments inside a macro to be converted to C-style comments. This is to prevent later use of that macro from inadvertently commenting out the remainder of the source line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753c592a9bafd77da89f48d54d67ad1d740c2899" translate="yes" xml:space="preserve">
          <source>option contains the list of supported dialects, as well as the default dialect if the option is not specified. This information may be important to understand, since assembler code that works correctly when compiled using one dialect will likely fail if compiled using another. See &lt;a href=&quot;x86-options#x86-Options&quot;&gt;x86 Options&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d386be951083a667fefaf5a40d4fb3aa948d1d" translate="yes" xml:space="preserve">
          <source>option controls warnings issued when the alias is more restrictive than the target, which could lead to incorrect code generation. Attributes considered include &lt;code&gt;alloc_align&lt;/code&gt;, &lt;code&gt;alloc_size&lt;/code&gt;, &lt;code&gt;cold&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;hot&lt;/code&gt;, &lt;code&gt;leaf&lt;/code&gt;, &lt;code&gt;malloc&lt;/code&gt;, &lt;code&gt;nonnull&lt;/code&gt;, &lt;code&gt;noreturn&lt;/code&gt;, &lt;code&gt;nothrow&lt;/code&gt;, &lt;code&gt;pure&lt;/code&gt;, &lt;code&gt;returns_nonnull&lt;/code&gt;, and &lt;code&gt;returns_twice&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c375db6694ddfed1ba353f7cd8318b32e18756c" translate="yes" xml:space="preserve">
          <source>option controls which dialect GCC uses as its default for inline assembler. The target-specific documentation for the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04416f67b6282ac9dd5d86d256a8c50f268cc262" translate="yes" xml:space="preserve">
          <source>option depends on the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55650b1f5010a17edd72aef22202b557186b165e" translate="yes" xml:space="preserve">
          <source>option detects some instances of simple overlap even without optimization but works best at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b91a562d8cc1471318e386860a229da3ec7c9cdd" translate="yes" xml:space="preserve">
          <source>option diagnoses incompatibilities between the type of the alias declaration and that of its target. Such incompatibilities are typically indicative of bugs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30fbaddc49f6ae82855c910c6f45660b6a4ca8d3" translate="yes" xml:space="preserve">
          <source>option directs GCC to print a warning message if any of these features is used.) To test for the availability of these features in conditional compilation, check for a predefined macro &lt;code&gt;__GNUC__&lt;/code&gt;, which is always defined under GCC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b904489112d2602779a68b05a67c0c44002b88aa" translate="yes" xml:space="preserve">
          <source>option directs the &lt;code&gt;g++&lt;/code&gt; driver to link</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29f824dcb32322a582f23dbee8fe8a4b9c7dfe2" translate="yes" xml:space="preserve">
          <source>option directs the GCC driver to link</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec18351a58b56788e07ad1f7b39f61a2142309e" translate="yes" xml:space="preserve">
          <source>option does not cause non-ISO programs to be rejected gratuitously. For that,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90fcdc565799ee00fc0cf590a2409d4bc3e1855d" translate="yes" xml:space="preserve">
          <source>option doesn&amp;rsquo;t remove the decrement and branch instructions from the generated instruction stream introduced by other optimization passes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22cc939637c64f82d9ed09692891eb4b83c0f64" translate="yes" xml:space="preserve">
          <source>option enables a set of builtins making use of instructions available with the transactional execution facility introduced with the IBM zEnterprise EC12 machine generation &lt;a href=&quot;s_002f390-system-z-built_002din-functions#S_002f390-System-z-Built_002din-Functions&quot;&gt;S/390 System z Built-in Functions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb4d5abfeb0cd173bd7e3e14690957bee5fd04a" translate="yes" xml:space="preserve">
          <source>option enables shadow stack built-in functions from x86 Control-flow Enforcement Technology (CET).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0edc60a24be02e1962c6aba69183a640242d8bdc" translate="yes" xml:space="preserve">
          <source>option enables use of a custom instruction with encoding &lt;var&gt;N&lt;/var&gt; when generating code that uses &lt;var&gt;insn&lt;/var&gt;. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a8aeb4cf1af552d604015025a985275f5c6722" translate="yes" xml:space="preserve">
          <source>option enables vector language extensions and builtins using instructions available with the vector extension facility introduced with the IBM z13 machine generation. This option adds support for &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b996ab34ea64db1d183bc0b094e3e960b2539d" translate="yes" xml:space="preserve">
          <source>option ensures that a compact branch instruction will be generated if available. If a compact branch instruction is not available, a delay slot form of the branch will be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818b6116c3670e914a55b253aecdf4ebf2a035ec" translate="yes" xml:space="preserve">
          <source>option ensures that compact branch instructions will never be generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bffb9c50f86fa3088f1979708541bf00a3340d04" translate="yes" xml:space="preserve">
          <source>option for a description of how the actual register to hold the small data area pointer is chosen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7b39f806198e9d35128fbeaf309a460990d04d" translate="yes" xml:space="preserve">
          <source>option for each directory that GCC believes might contain startup files. If the target supports multilibs then the current multilib directory is prepended to each of these paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a59604aa1481079b7689e1b94785aeca741601" translate="yes" xml:space="preserve">
          <source>option for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aaa00d886cf9b33114b1b3da00c0a318d8ea703" translate="yes" xml:space="preserve">
          <source>option for strict conformance to some version of ISO C. On some hosts, system include files use a different convention, where &lt;code&gt;__STDC__&lt;/code&gt; is normally 0, but is 1 if the user specifies strict conformance to the C Standard. GCC follows the host convention when processing system include files, but when processing user files it follows the usual GNU C convention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0fd3f4033d3e3417e89a8c8423d9cc43d7878b9" translate="yes" xml:space="preserve">
          <source>option generates an alternate prologue and epilogue that realigns the run-time stack if necessary. This supports mixing legacy codes that keep 4-byte stack alignment with modern codes that keep 16-byte stack alignment for SSE compatibility. See also the attribute &lt;code&gt;force_align_arg_pointer&lt;/code&gt;, applicable to individual functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4093b1060dded6ac0bfa513523381be0638ba899" translate="yes" xml:space="preserve">
          <source>option generates code which conforms to Intel MCU psABI. It requires the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860e8631ea333ab54ea4e527fbaa79b12e8a6355" translate="yes" xml:space="preserve">
          <source>option has also been specified (prior to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35893b96da8d6e5fb7ddb988a434b2ee3872fb3f" translate="yes" xml:space="preserve">
          <source>option has also been specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c5e3f9cb7a21ab6e70f7bcb8db9c3d2e15fbfb" translate="yes" xml:space="preserve">
          <source>option however, target-specific options of the linker and assembler are not displayed. This is because those tools do not currently support the extended</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce54ce63a96b916a9c193ca6af0034927c6d8043" translate="yes" xml:space="preserve">
          <source>option if their program accesses I/O space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c924287d54655427405c149b597e014eb117a9" translate="yes" xml:space="preserve">
          <source>option implies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f2b5a0d1d661726b0bee38e6767d0e20da05cf" translate="yes" xml:space="preserve">
          <source>option in order to link an Objective-C or Objective-C++ program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bcdcf5f3a646be981e9a477d90cdac2c0c00376" translate="yes" xml:space="preserve">
          <source>option in that it warns whenever the compiler decides to drop an attribute, not that the attribute is either unknown, used in a wrong place, etc. This warning is enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df63cb3628539b369e5e34c5943b4140ae1618a" translate="yes" xml:space="preserve">
          <source>option instead of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a039a4e6ba05cf2dfbe395fc0e0ce4a7cd771303" translate="yes" xml:space="preserve">
          <source>option instructs the compiler to report undefined behavior using &lt;code&gt;__builtin_trap&lt;/code&gt; rather than a &lt;code&gt;libubsan&lt;/code&gt; library routine. The advantage of this is that the &lt;code&gt;libubsan&lt;/code&gt; library is not needed and is not linked in, so this is usable even in freestanding environments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ebdac479f6f73e9bc5b983bade27b8c125fe92" translate="yes" xml:space="preserve">
          <source>option into the command line followed by the full path name found. If the file is not found then generate an error message. Note: the current working directory is not searched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f2ea3792f5bf94fb1b16175ec79d0eb60dca85" translate="yes" xml:space="preserve">
          <source>option is active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bdf36406e5cfe16cda7c74f753657160e6fa8b5" translate="yes" xml:space="preserve">
          <source>option is also specified then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150c4138f15c7e291556701bd23adb341369916c" translate="yes" xml:space="preserve">
          <source>option is being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3f304090c132c930071eb8e77f797fefb0976a" translate="yes" xml:space="preserve">
          <source>option is enabled at levels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6e58d99f027cb2e29762de5d8f0ec21ab99cb1" translate="yes" xml:space="preserve">
          <source>option is enabled by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc222b7745c21294d97fa3c900eaad183045f9e9" translate="yes" xml:space="preserve">
          <source>option is enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9923fe2e3af6dfe3c6df37048090acaa3d38ef11" translate="yes" xml:space="preserve">
          <source>option is enabled then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250553f10a5ceb0444e783769a0fa0b1f912e987" translate="yes" xml:space="preserve">
          <source>option is enabled, a warning is issued. See &lt;a href=&quot;warning-options#Warning-Options&quot;&gt;Warning Options&lt;/a&gt;. Unless disabled by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412a39727fd927a8c27170c80d9a4bb0dc8c2c31" translate="yes" xml:space="preserve">
          <source>option is executed. A separate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7091ba3109db02534597ef8e378b2538efffa4f" translate="yes" xml:space="preserve">
          <source>option is generally used to support lint comments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffecba5ea5932141e45c8c7344c24b72e82ccf5d" translate="yes" xml:space="preserve">
          <source>option is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd27ada5034c51e2012139f5c3f87fa6186fb6d" translate="yes" xml:space="preserve">
          <source>option is given. If it is, the driver uses its argument but with a suffix of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b060afd599f10d1e98f46fd09215a775d6ad0a" translate="yes" xml:space="preserve">
          <source>option is given. When the output is done to the terminal, the width is limited to the width given by the &lt;code&gt;COLUMNS&lt;/code&gt; environment variable or, if not set, to the terminal width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c18b0054d4a6cd81af1713da951da9895ac6e7" translate="yes" xml:space="preserve">
          <source>option is ignored. The directory is still searched but as a system directory at its normal position in the system include chain. This is to ensure that GCC&amp;rsquo;s procedure to fix buggy system headers and the ordering for the &lt;code&gt;#include_next&lt;/code&gt; directive are not inadvertently changed. If you really need to change the search order for system directories, use the</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
