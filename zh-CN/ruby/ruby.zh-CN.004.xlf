<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="ruby">
    <body>
      <group id="ruby">
        <trans-unit id="fb72a8b231cbd04b84580b97e4a515b934df0cd4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;flag&lt;/em&gt; can be one of the following, other flags are available depending on your OS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db504a49bda0ef47b33c9a9de82200716e3949be" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;flags&lt;/em&gt; can include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2211c7b1f5eb65b46f3d9946980b0463d225b2f4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;flags&lt;/em&gt; is a bitwise OR of the following constants:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9e5dff21de914710a42bdd6d7d9781e827e6ec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;flags&lt;/em&gt; is bitwise OR of MSG_* constants such as Socket::MSG_OOB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad908815e1ae57fdbeeed81d257ac3fc19b0824" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;flags&lt;/em&gt; is bitwise OR of MSG_* constants such as Socket::MSG_PEEK.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6be53fa080a9bea1eeca2a40b2cd493a21e7a9b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;flags&lt;/em&gt; should be a bitwise OR of Socket::MSG_* constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd65eb0e9bd581d72f0e0aa55dc25e8b75ca9fe9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;flags&lt;/em&gt; should be bitwise OR of Socket::AI_* constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c427014bfd6c1b1a3c537e86b3d7d4ef49ccd13a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;flags&lt;/em&gt; should be bitwise OR of Socket::NI_* constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6df4a00a72739dd29dec8cc9d99fa73d2a54a3f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;format&lt;/em&gt; can be one of these:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c873b674c584a453f159cabbef7afa5e4fb2aab2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;generator&lt;/em&gt; is a small number &amp;gt; 1, typically 2 or 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39cf58a8f492f712234608974b9a0cbf378b8e69" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;hash&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;hash&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6f58fa07a9cc8e18c24a55f8f9c69161742cfa6e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;how&lt;/em&gt; can be symbol or string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3a758d39ca88eb3fddb94ff9789ca0fafdaf7d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ikm&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ikm&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="026584f5175b5bbc2ceb1f268e18940c0011aaec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;info&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;info&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dc6817330140a6406ce810ee9e3d9d2e61fc24b7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;interrupt&lt;/em&gt; means asynchronous event and corresponding procedure by &lt;a href=&quot;thread#method-i-raise&quot;&gt;&lt;code&gt;Thread#raise&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;thread#method-i-kill&quot;&gt;&lt;code&gt;Thread#kill&lt;/code&gt;&lt;/a&gt;, signal trap (not supported yet) and main thread termination (if main thread terminates, then all other thread will be killed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd33b6be18571512c501a4c2983f1af1584b8236" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;io&lt;/em&gt; is an instance of &lt;a href=&quot;../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; containing a DER- or PEM-encoded arbitrary private or public key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda83d9d47831306ce9cd6875b8e5df5efb9d362" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;io&lt;/em&gt; may be any kind of &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object or integer file descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae920a885ad693ef046dba55ea60e74da4d6357" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;iterations&lt;/em&gt; is an integer with a default of 2048.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f014f3c5bd1b10b263062712fe46de01ab076052" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; - Any &lt;a href=&quot;pkey&quot;&gt;&lt;code&gt;PKey&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca83d98511014967f5646579f98db01ac7e16b5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; - the private key to be used for signing this instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d3355108c1ab787dfd0d26d27ff98bff6a1a6e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; - the public key to be used for verifying the &lt;a href=&quot;spki&quot;&gt;&lt;code&gt;SPKI&lt;/code&gt;&lt;/a&gt; signature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd1ba204d7acd1ee5f618a8963a7a17bc4a71ab" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key_iter&lt;/em&gt; - integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c401d72056fd01b07ec4fd0250732019a6c09c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key_pbe&lt;/em&gt; - string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063470f3f7a44a3474ea8b7edb2a3b44c2d665c4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;keytype&lt;/em&gt; - An integer representing an MSIE specific extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940cbc93ab66f27e93d6b854370fe4af5e9ed25b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;klass&lt;/em&gt; will determine the class of &lt;em&gt;io&lt;/em&gt; returned (using the &lt;a href=&quot;io#method-c-for_fd&quot;&gt;&lt;code&gt;IO.for_fd&lt;/code&gt;&lt;/a&gt; singleton method or similar). If &lt;em&gt;klass&lt;/em&gt; is &lt;code&gt;nil&lt;/code&gt;, an integer file descriptor is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f07c8f9b88606d1cd6b5a465c631849f64c72f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;length&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;length&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e7c6a1978c479ee68c69addb09f5ebed5e181c37" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;length&lt;/em&gt; must be a non-negative integer or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc1dca1043960fcd2f2077ea0ae5d0b7239bfec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ln&lt;/em&gt;: the long name as defined in &amp;lt;openssl/objects.h&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1bd7efafee3a2d3c7cbc062855267cd2852de21" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;long_name&lt;/em&gt;: alias for &lt;em&gt;ln&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81721167348105365b71e5b07b5ee526c5095f9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mac_iter&lt;/em&gt; - integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916fb5b1a86c1d11b5f661b432afa376c6de9985" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;maxcontrollen&lt;/em&gt; is the maximum length of controls (ancillary data) to receive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165bab1ebc78500e769a33087d934f76eee32340" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;maxlen&lt;/em&gt; is the maximum number of bytes to receive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5971c4ff669bc79fd5c9d442329deda3b08dd606" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;maxmesglen&lt;/em&gt; and &lt;em&gt;maxcontrollen&lt;/em&gt; can be nil. In that case, the buffer will be grown until the message is not truncated. Internally, MSG_PEEK is used. Buffer full and MSG_CTRUNC are checked for truncation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ace7f8073c5ab28d9fd4bbbcbf79ef24298648f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;maxmesglen&lt;/em&gt; is the maximum length of mesg to receive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428b24fbba0d47cee29e8da4f3a162c6ed7a59e4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mesg&lt;/em&gt; is a string of the received message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd21755b3ac412ad863cc80819087c6ceedd534" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mesg&lt;/em&gt; is a string to send.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6861209d113c6e4feab49e98f67d26f3e01f1854" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mesg&lt;/em&gt; should be a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56252bfba671af1d255f3e32ed2aa10b1697fff7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mgf1_hash&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;mgf1_hash&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="50ee99927bc7c8fc70d980942ddb2b138915e59a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mode&lt;/em&gt; is the same as the argument passed to &lt;a href=&quot;io#method-c-for_fd&quot;&gt;&lt;code&gt;IO.for_fd&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f6fd6a148100a4faf808e30cff335c8c2cd32ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; - A string describing the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2d44a800706c9e8d0d9093e88b662e375165d2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; should be a constant under &lt;code&gt;Etc&lt;/code&gt; which begins with &lt;code&gt;CS_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad61193650893d8f6b7327178c8e02dfa1b87ab" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; should be a constant under &lt;code&gt;Etc&lt;/code&gt; which begins with &lt;code&gt;PC_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2c76c61e9af569b9b672cac3fef9d0cc6b2a25" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; should be a constant under &lt;code&gt;Etc&lt;/code&gt; which begins with &lt;code&gt;SC_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aedda6e5dae8dd945a90a46ca1bcb9bbbb262b8a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt; is the first node. &lt;em&gt;each_child&lt;/em&gt; should have &lt;code&gt;call&lt;/code&gt; method which takes a node argument and yields for each child node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56750240e2365d554934794875e185d29fb9f9aa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;oid&lt;/em&gt;: the object identifier as a &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, e.g. &amp;ldquo;1.2.3.4.5&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058f7c7e9f2b02108f63fb87720d3c9f81dddd2e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;onoff&lt;/em&gt; should be an integer or a boolean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fddf787ff2021a68f815d875a58f2e7f7f70d22" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;opt&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;opt&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="12e3bf2164fa0ce2ae049934f25889d36e6cf0e1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;opt&lt;/em&gt; sets following values by its accessor. The keys are &lt;a href=&quot;http#attribute-i-ca_file&quot;&gt;&lt;code&gt;ca_file&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;http#attribute-i-ca_path&quot;&gt;&lt;code&gt;ca_path&lt;/code&gt;&lt;/a&gt;, cert, &lt;a href=&quot;http#attribute-i-cert_store&quot;&gt;&lt;code&gt;cert_store&lt;/code&gt;&lt;/a&gt;, ciphers, &lt;a href=&quot;http#attribute-i-close_on_empty_response&quot;&gt;&lt;code&gt;close_on_empty_response&lt;/code&gt;&lt;/a&gt;, key, &lt;a href=&quot;http#attribute-i-open_timeout&quot;&gt;&lt;code&gt;open_timeout&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;http#attribute-i-read_timeout&quot;&gt;&lt;code&gt;read_timeout&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;http#attribute-i-write_timeout&quot;&gt;&lt;code&gt;write_timeout&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;http#attribute-i-ssl_timeout&quot;&gt;&lt;code&gt;ssl_timeout&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;http#attribute-i-ssl_version&quot;&gt;&lt;code&gt;ssl_version&lt;/code&gt;&lt;/a&gt;, use_ssl, &lt;a href=&quot;http#attribute-i-verify_callback&quot;&gt;&lt;code&gt;verify_callback&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;http#attribute-i-verify_depth&quot;&gt;&lt;code&gt;verify_depth&lt;/code&gt;&lt;/a&gt; and verify_mode. If you set :use_ssl as true, you can use https and default value of &lt;a href=&quot;http#attribute-i-verify_mode&quot;&gt;&lt;code&gt;verify_mode&lt;/code&gt;&lt;/a&gt; is set as OpenSSL::SSL::VERIFY_PEER.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7831152baf02f36edc8ff3fda0855e255fc93b40" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;opts&lt;/em&gt; can have the following keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db7f704c06dc53f3736d573ddb84e30218445424" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;opts&lt;/em&gt; is option hash. Currently :scm_rights=&amp;gt;bool is the only option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9758a50d69954127d10354a9ccb5a41170ee074" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;order&lt;/em&gt; must be either of &lt;code&gt;:top&lt;/code&gt; or &lt;code&gt;:bottom&lt;/code&gt;, and places the error message and the innermost backtrace come at the top or the bottom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd925c57f8248eab52cda4e980fd0fc764d71a8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;outbuf&lt;/em&gt; will contain only the received data after the method call even if it is not empty at the beginning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a2556a2c52d65e6e3053c4fad39e6f708cfe64" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;p_addr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;p_addr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="89aff6208e100f43dc23e8a1723265761a036edc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;p_pass&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;p_pass&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b2284cb5543920a449f4d3c90d49155021636c45" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;p_port&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;p_port&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="91172d03c912c603bbe1cfec010cae66f792e9c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;p_user&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;p_user&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2476ddccdf82b5c9c02b9910ad39a6617f19e2aa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pass&lt;/em&gt; - string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee1de885813bdb50b39d824468bfac45e93e59f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pass&lt;/em&gt; is a string that contains an optional password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e3cd3f7be2959aad73e5d74c3ce984f21ef71c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;password&lt;/em&gt; is a string containing your password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302e4073b8298d9347f2ef8b84554b5bbdb88be8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pkey&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;pkey&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f307f88ef5eda732b1bb84127544cace0dcf2ed" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;port&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;port&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1119c62891c0eeda88f9c43dbccc6d858f8bc032" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;proc&lt;/em&gt; is invoked whenever an event occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc79433db4a5d5433c0362efe0ae114f07fc09c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;proc&lt;/em&gt; takes up to six parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="259b7bb74a52ff8efe479b319a4ce763b4397341" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;produces:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;produces:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="10d096aa9324f3629cd9686466d56868545239e1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;produces&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;produces&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="36ffa94e5e1196133bfd3ca89f2a17d4944ecf37" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;produces&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;produces&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="141cb7a61b20927ad999935cf518735668b99701" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;protocol&lt;/em&gt; is optional and should be a protocol defined in the domain. If protocol is not given, 0 is used internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8fe274e33a7e81d1a31f51673ee9169c38c8d66" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;protocol&lt;/em&gt; should be a protocol defined in the domain, defaults to 0 for the domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10718f0c597cd8269836fd6a6c4d2400187c970" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;protocol&lt;/em&gt; should be a protocol defined in the domain. 0 is default protocol for the domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c97a9132732fa3d96f1c107df3cf3ab32d55bc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;protocol&lt;/em&gt; should be a protocol defined in the family, and defaults to 0 for the family.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e976a25ef44c364e10b3cf56a021aa79c90a971f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pub&lt;/em&gt; - the public key to be set for this instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd6768324fbb6e8bfdc0dfa5c1ec795a21d08fe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pub_bn&lt;/em&gt; is a &lt;a href=&quot;../bn&quot;&gt;&lt;code&gt;OpenSSL::BN&lt;/code&gt;&lt;/a&gt;, &lt;strong&gt;not&lt;/strong&gt; the &lt;a href=&quot;dh&quot;&gt;&lt;code&gt;DH&lt;/code&gt;&lt;/a&gt; instance returned by &lt;a href=&quot;dh#method-i-public_key&quot;&gt;&lt;code&gt;DH#public_key&lt;/code&gt;&lt;/a&gt; as that contains the &lt;a href=&quot;dh&quot;&gt;&lt;code&gt;DH&lt;/code&gt;&lt;/a&gt; parameters only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903e60f3fc75e8d9a63158a1b611da189b41038b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pwd&lt;/em&gt; is an optional password in case &lt;em&gt;string&lt;/em&gt; or &lt;em&gt;io&lt;/em&gt; is an encrypted PEM resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3649dc4bacb1652d0226888b03eec82ab480e52b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;raises the exception:&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53517ac3f51d8ae46641ca47b6e998cf8bf29a0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reason&lt;/em&gt; and &lt;em&gt;revocation_time&lt;/em&gt; can be given only when &lt;em&gt;status&lt;/em&gt; is OpenSSL::OCSP::V_CERTSTATUS_REVOKED. &lt;em&gt;reason&lt;/em&gt; describes the reason for the revocation, and must be one of OpenSSL::OCSP::REVOKED_STATUS_* constants. &lt;em&gt;revocation_time&lt;/em&gt; is the time when the certificate is revoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a65f06eefd8ee42a127e2072092d7ecda269d5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rem&lt;/em&gt; - &lt;a href=&quot;bn&quot;&gt;&lt;code&gt;BN&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6db28dfa82611c038b70ff828dc97988029017c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;request&lt;/em&gt; - optional raw request, either in PEM or DER format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f7cafdcd0ab98b71860ac18e119fee38aec8d71" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;resource&lt;/em&gt; indicates the kind of resource to limit. It is specified as a symbol such as &lt;code&gt;:CORE&lt;/code&gt;, a string such as &lt;code&gt;&quot;CORE&quot;&lt;/code&gt; or a constant such as &lt;code&gt;Process::RLIMIT_CORE&lt;/code&gt;. See &lt;a href=&quot;process#method-c-setrlimit&quot;&gt;&lt;code&gt;Process.setrlimit&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a8d560adadd43cc96dadfcb3e933e0991273a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;resource&lt;/em&gt; indicates the kind of resource to limit. It should be a symbol such as &lt;code&gt;:CORE&lt;/code&gt;, a string such as &lt;code&gt;&quot;CORE&quot;&lt;/code&gt; or a constant such as &lt;code&gt;Process::RLIMIT_CORE&lt;/code&gt;. The available resources are OS dependent. Ruby may support following resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7793f50837ac8964e5acedaa12d4f5c1ce0cfc3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reverse_lookup&lt;/em&gt; directs the form of the third element, and has to be one of below. If &lt;em&gt;reverse_lookup&lt;/em&gt; is omitted, the default value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c595570711d1497a0d430100307033ba7a96312" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rflags&lt;/em&gt; is a flags on the received message which is bitwise OR of MSG_* constants such as Socket::MSG_TRUNC. It will be nil if the system uses 4.3BSD style old recvmsg system call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8fd02e25ae28be1e5961c8592a1bb37ab2a470" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;safe&lt;/em&gt; - boolean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d25cbc63af3ba29f5b4d621c8eb803c8a12235" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;salt&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;salt&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="02ba06c5947ce879aab491f8cf960780acf85e8a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;salt&lt;/em&gt; must be an 8 byte string if provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794c0428a5d4138f20d7ee5231bb8e60ff070165" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;salt_length&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;salt_length&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="58d35fe15cceb0b07fe30f4a645c099794e329a9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;secs&lt;/em&gt; should be the number of seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118d4e2bffa92502ed3ebbe17123b45a05aa06c3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sender_addrinfo&lt;/em&gt; is a sender socket address for connection-less socket. It is an &lt;a href=&quot;addrinfo&quot;&gt;&lt;code&gt;Addrinfo&lt;/code&gt;&lt;/a&gt; object. For connection-oriented socket such as TCP, sender_addrinfo is platform dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca2787351534e04b93207e3d928f64d6ca4b347" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;short_name&lt;/em&gt;: alias for &lt;em&gt;sn&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f2dbcdcaa105117cf7f753ce21d1590bebd2a6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sig&lt;/em&gt; is a &lt;a href=&quot;dsa&quot;&gt;&lt;code&gt;DSA&lt;/code&gt;&lt;/a&gt; signature value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7cbc9cfdf06c2e02f2bc58567f68c42890d736" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;size&lt;/em&gt; is an integer representing the desired key size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ae91016718f1b2f191c318e2ed68615a4f6ec5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;size&lt;/em&gt; is an integer representing the desired key size. Keys smaller than 1024 bits should be considered insecure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69704870cd231273bca7dca599299c160a17461e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sn&lt;/em&gt;: the short name as defined in &amp;lt;openssl/objects.h&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc51bb32ad37d5c119a7fcdc2e40556587836fe8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sockaddr&lt;/em&gt; should be a string or an addrinfo for &lt;a href=&quot;socket#AF_UNIX&quot;&gt;&lt;code&gt;AF_UNIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541968b210e90666f3f06e049319ef75a3ac1cee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sockaddr&lt;/em&gt; should be a string or an addrinfo for AF_INET/AF_INET6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f6cec6171b0fadc3239c30153b0816a00a869f3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sockaddr&lt;/em&gt; should be one of follows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87fdf92eac067e39aae71143d52722dae0f80f1f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;socktype&lt;/em&gt; should be a socket type such as: :STREAM, :DGRAM, :RAW, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2c9d53f2f6357658f26758e6b0c5d4a9737155" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;socktype&lt;/em&gt; specifies the socket type. If it is omitted, :STREAM is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fced9fbbd438bfbcb5cd2b8105eef2978c6e6dea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;srv&lt;/em&gt; is an instance of &lt;a href=&quot;../../tcpserver&quot;&gt;&lt;code&gt;TCPServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb3884ed9fee68503749216496db3c3d6728ca04" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;str&lt;/em&gt; - Must be a DER encoded &lt;a href=&quot;pkcs12&quot;&gt;&lt;code&gt;PKCS12&lt;/code&gt;&lt;/a&gt; string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7745d6d0c479070c5848ce2c0619d79afd18fb73" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;str&lt;/em&gt; - the challenge string to be set for this instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce495488d2c2048b1e09a3cb2eea95c96c65329" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;string&lt;/em&gt; contains a DER or PEM encoded key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616215bd2a9d7727cf56fd3f748249f915b5b222" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;string&lt;/em&gt; contains the DER or PEM encoded key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4d7f3bc24c3df7eb3ad1a12ddee403a50a4b24" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;string&lt;/em&gt; is a message digest of the original input data to be signed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e2d18bf28b2f057e0ee471adf8acdd6f0ec7cf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tag&lt;/em&gt; equal to 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452628b59cff2b23fd965b7f55995c45296fb566" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tag&lt;/em&gt;: An &lt;a href=&quot;../../integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; indicating the tag number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852ddc83d967c46c54c918a6c8b6c77b6440f6d9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tag&lt;/em&gt;: optional, may be specified for tagged values. If no &lt;em&gt;tag&lt;/em&gt; is specified, the UNIVERSAL tag corresponding to the &lt;a href=&quot;primitive&quot;&gt;&lt;code&gt;Primitive&lt;/code&gt;&lt;/a&gt; sub-class is used by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55cf03903caafe562a891f4c2fa86714fd71470" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tag_class&lt;/em&gt; equal to &lt;code&gt;:CONTEXT_SPECIFIC&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd7e1a097d4b62dda7d73004bd99f612d411668d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tag_class&lt;/em&gt;: A &lt;a href=&quot;../../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; indicating the tag class. Please cf. &lt;a href=&quot;../asn1&quot;&gt;&lt;code&gt;ASN1&lt;/code&gt;&lt;/a&gt; for possible values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126dbfb5e118d32fa424450edfad29854d9ad706" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tag_class&lt;/em&gt;: if &lt;em&gt;tag&lt;/em&gt; and &lt;em&gt;tagging&lt;/em&gt; are &lt;code&gt;nil&lt;/code&gt; then this is set to &lt;code&gt;:UNIVERSAL&lt;/code&gt; by default. If either &lt;em&gt;tag&lt;/em&gt; or &lt;em&gt;tagging&lt;/em&gt; are set then &lt;code&gt;:CONTEXT_SPECIFIC&lt;/code&gt; is used as the default. For possible values please cf. &lt;a href=&quot;../asn1&quot;&gt;&lt;code&gt;ASN1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fb211de0cff41d36d3d4b361d3dd4ebf1c050a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tagging&lt;/em&gt;: may be used as an encoding hint to encode a value either explicitly or implicitly, see &lt;a href=&quot;../asn1&quot;&gt;&lt;code&gt;ASN1&lt;/code&gt;&lt;/a&gt; for possible values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b54c6c64a6c4c6040b24ee75c2d2bb14bcdc51" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;then waits until it is interrupted with Control-C and then prints:&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f142344dbaddfcb9e5b0bc1646955c3f87f3df9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;this_update&lt;/em&gt; and &lt;em&gt;next_update&lt;/em&gt; indicate the time at which ths status is verified to be correct and the time at or before which newer information will be available, respectively. &lt;em&gt;next_update&lt;/em&gt; is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ece7aa127459a4347436222bb4dbc98ea757a0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;trial_div&lt;/em&gt; - boolean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec72d7b14fa10d2d0cbc948f0a243d7ef2e5c4f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;unused_bits&lt;/em&gt;: if the underlying BIT STRING's length is a multiple of 8 then &lt;em&gt;unused_bits&lt;/em&gt; is 0. Otherwise &lt;em&gt;unused_bits&lt;/em&gt; indicates the number of bits that are to be ignored in the final octet of the BitString's &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35ab169e6253ca8876ad37a5d118b58746cb6c33" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value&lt;/em&gt; equal to a &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; that carries the raw encoding of the INTEGER.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b7bfeabb788b5d2be18bc2f3b488e182ce3975" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value&lt;/em&gt; equal to an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; with one single element, an instance of OpenSSL::ASN1::Integer, i.e. the inner element is the non-tagged primitive value, and the tagging is represented in the outer &lt;a href=&quot;asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d00a42e08172d2f9dbf3f2ae736390c3ef41536" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value&lt;/em&gt;: Please have a look at &lt;a href=&quot;constructive&quot;&gt;&lt;code&gt;Constructive&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;primitive&quot;&gt;&lt;code&gt;Primitive&lt;/code&gt;&lt;/a&gt; to see how Ruby types are mapped to ASN.1 types and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c439f6cce8b5117676b5e793bfa5045ecf886a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value&lt;/em&gt;: is mandatory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50be90ae64e47ef42030b7440a9378a66af0e3c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:all&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:all&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1dc0a00c5cc1668d39dda3928e7ab3b738728690" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:col_sep&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:col_sep&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="348c10c4e850e7f17545302100d3ba6d29b6b6cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:converters&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:converters&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc2b342454c8d9c51dc25098511d0731c3deb50f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:date&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:date&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="008763dbada3a4a077151244bced369b62c790e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:date_time&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:date_time&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0264fed3c0f7e024d9095aba0cf5896587502fdf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:downcase&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:downcase&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="645d42c3d683bcaa39124ed2554cb2800adcb575" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:empty_value&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:empty_value&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="525ec6cb63e8dfe53a5dec0bceaa74b6493c9bbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:field_size_limit&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:field_size_limit&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="599a9ce284046ec902d7f7f9374d7aeb42f47a91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:float&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:float&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e0db84605da3d7e1334b32ca8460e6b8bc5889a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:force_quotes&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:force_quotes&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="52377ed6911c989bccaaec5b2b93ba87c3a58054" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:header_converters&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:header_converters&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b5fad7f1182f2f4a3adc86353ce100fd9e2df233" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:headers&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:headers&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28c6df235712e28c618f47c077416f9dea0e7002" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:integer&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:integer&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8df91751781eda0bbb15534a58066dcb9f3b5083" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:liberal_parsing&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:liberal_parsing&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="06ee8dd9085de7c6643069d420f1e397903499ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:nil_value&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:nil_value&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1580f29d30b23642377a6b9a6c7c895e60bc5b99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:numeric&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:numeric&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d1cdab963a90d94e32381c16d90212d755abb0ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:quote_char&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:quote_char&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b5c290d937612c8612383973dcbb697d5e9d5d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:quote_empty&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:quote_empty&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="03379e6431b834f3a5839b8d5b54012d4d30f47c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:return_headers&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:return_headers&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="413815efdc8a3ef2673c8f9ec7f8e2ec2f8b263a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:row_sep&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:row_sep&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c3ffdaa83c29fb9592ba2b23617c2a9e6651b07c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:skip_blanks&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:skip_blanks&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="265b082cb747916dc379600ee7ac0caa588982da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:skip_lines&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:skip_lines&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="622a3efb4dd9453dc70351214d9ffa39fcede21d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:strip&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:strip&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="54faebdc7f151271285cb726d124eee1e45ad938" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:symbol&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:symbol&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="87e2f57030f1928a70da05f320db2c2a85acbc46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:unconverted_fields&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:unconverted_fields&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c5761ccb68f9249c70329df1c676afa381371b65" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:write_converters&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:write_converters&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="47b9ffde1dc8c4ddf9ff529e9fe2ae86ece20f74" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:write_empty_value&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:write_empty_value&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4da24fb96a309c626019d613e19d36ca655ee6ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:write_headers&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:write_headers&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28d99b34e5e2a2bb822c215de7fbe00933db5aa7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:write_nil_value&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:write_nil_value&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="248457192e420e3b6d6c8e8bd6b25d2b2be58937" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;header&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;header&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6bcb834b38be4f9cfd79b9cd5dc394052cd717b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;index&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;index&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4cfe1047c1ae476d61438fb89949c3ce8140c738" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;line&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;line&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb28cbc721996a4a3d618dbc30ba5658c2a8bf92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;All&lt;/strong&gt; functionality from &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;filetest&quot;&gt;&lt;code&gt;FileTest&lt;/code&gt;&lt;/a&gt;, and some from &lt;a href=&quot;dir&quot;&gt;&lt;code&gt;Dir&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fileutils&quot;&gt;&lt;code&gt;FileUtils&lt;/code&gt;&lt;/a&gt; is included, in an unsurprising way. It is essentially a facade for all of these, and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22c3c80cbc99ec3469baffa0ad7510e8fc366a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Always create a secure random IV for every encryption of your &lt;a href=&quot;cipher/cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96f7e51d1e336ae2830dd77a9d87792224d7bc9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Encoded path note:&lt;/strong&gt; Since Bundler::Thor internals use &lt;a href=&quot;../../object#method-i-respond_to-3F&quot;&gt;&lt;code&gt;Object#respond_to?&lt;/code&gt;&lt;/a&gt; to check if it can expand %something%, this `something` should be a public method in the class calling &lt;a href=&quot;actions#method-i-directory&quot;&gt;&lt;code&gt;directory&lt;/code&gt;&lt;/a&gt;. If a method is private, Bundler::Thor stack raises PrivateMethodEncodedError.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a604f0b89e246fd275618391fb505885e420ab21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Message format&lt;/strong&gt;: &lt;code&gt;message&lt;/code&gt; can be any object, but it has to be converted to a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; in order to log it. Generally, &lt;code&gt;inspect&lt;/code&gt; is used if the given object is not a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;. A special case is an &lt;code&gt;Exception&lt;/code&gt; object, which will be printed in detail, including message, class, and backtrace. See msg2str for the implementation if required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34369cb83efb257fb2f3de019528d5bb95a352fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NEWDB&lt;/strong&gt; - open as a writer; overwrite any existing databases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2f43ef00ae1dd7b190cc1a2924fbf4cd7e3d2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOLOCK&lt;/strong&gt; - do not lock the database file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1c23a86c2fcaf1b97b30e3feffa63bc9ad366e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: Calling shutdown for another thread can be dangerous!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fece2064f76ff5f0aa28d54b24bc852cd6a2a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: THIS METHOD IS VERY DANGEROUS!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab51cab1184a6a3e793f8f9133514b2473843f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Seconds range from zero to 60 to allow the system to inject leap seconds. See &lt;a href=&quot;http://en.wikipedia.org/wiki/Leap_second&quot;&gt;en.wikipedia.org/wiki/Leap_second&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5f8221c865e6c02d22c6a49f26c2dd82725dde" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The new object will use the resolution available on your system clock, and may include fractional seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5b8db3be91fc01415b0506bdab16c7a8000e18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This does not invoke the scheduler, see &lt;a href=&quot;thread#method-i-run&quot;&gt;&lt;code&gt;run&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d214c733b95265fdab81125c00d96eee9963a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; this method is obsolete, please use &lt;a href=&quot;tracepoint&quot;&gt;&lt;code&gt;TracePoint&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc804fd28f37f4f42ac655d5ac0518e478e5a366" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;a href=&quot;tracepoint#method-i-defined_class&quot;&gt;&lt;code&gt;defined_class&lt;/code&gt;&lt;/a&gt; returns singleton class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2b66010e3644f0adba3779abb6505619a36863" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;syscall&lt;/code&gt; is essentially unsafe and unportable. Feel free to shoot your foot. The DL (Fiddle) library is preferred for safer and a bit more portable programming.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d3f3b0716e7b94eeb699bbe49ba2a90ddf3b10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; do not depend on current event set, as this list is subject to change. Instead, it is recommended you specify the type of events you want to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d762d97a3b36ac8f28172c0d823e661dc466379f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;a href=&quot;logger&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; does not escape or sanitize any messages passed to it. Developers should be aware of when potentially malicious data (user-input) is passed to &lt;a href=&quot;logger&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt;, and manually escape the untrusted data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71518269ceab8df2821982c5a49f44ff44d4bc8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: A regexp can't use named backreferences and numbered backreferences simultaneously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa1df5d84ff6672207f9deca77decf581c9107e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PERMUTE&lt;/strong&gt; :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ba5e6364f21547e6a41511391cc54f58903f2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;READER&lt;/strong&gt; - open as a reader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31448439978482ea06230b9758fc33cbd70768f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;REQUIRE_ORDER&lt;/strong&gt; :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d27dd931eef26414d00c977cf5d230c15d3e42a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RETURN_IN_ORDER&lt;/strong&gt; :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9064d9366edc10de750baea4dd6addd0368823b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SYNC&lt;/strong&gt; - cause all database operations to be synchronized to the disk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a861eaea867d39ce96aa4dba42ee8761a6486ec5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is a difference between &lt;a href=&quot;kernel#method-i-set_trace_func&quot;&gt;&lt;code&gt;Kernel#set_trace_func&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;tracepoint&quot;&gt;&lt;code&gt;TracePoint&lt;/code&gt;&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c3a9c3ec0e9b9cdfed17a3914e4f9c062be2c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING&lt;/strong&gt; This method opens a serious security hole. Never use this method in production code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc13cf6f2b520b19a919e9dc9e0698bf29367b31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING&lt;/strong&gt; the &lt;code&gt;output_hidden&lt;/code&gt; fields are surrounded by a &amp;lt;fieldset&amp;gt; tag in HTML 4 generation, which is &lt;em&gt;not&lt;/em&gt; invisible on many browsers; you may wish to disable the use of fieldsets with code similar to the following (see &lt;a href=&quot;http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-list/37805&quot;&gt;blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-list/37805&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd20038765f1d3c49a7baad60505d8cefa0acf69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING&lt;/strong&gt;: Be careful not to pass any Ruby data structures with circles as &lt;em&gt;obj&lt;/em&gt; argument because this will cause &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; to go into an infinite loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80de5e640a4e6fc9d0ec9aa46b45e85a8911731c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING&lt;/strong&gt;: This method causes a serious security hole. Use this method only for debugging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19528d2825cbf975710c4a1615aa9535814548d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING&lt;/strong&gt;: This method is only &lt;a href=&quot;pkcs5&quot;&gt;&lt;code&gt;PKCS5&lt;/code&gt;&lt;/a&gt; v1.5 compliant when using RC2, RC4-40, or DES with MD5 or SHA1. Using anything else (like AES) will generate the key/iv using an &lt;a href=&quot;../openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; specific method. This method is deprecated and should no longer be used. Use a &lt;a href=&quot;pkcs5&quot;&gt;&lt;code&gt;PKCS5&lt;/code&gt;&lt;/a&gt; v2 key generation method from &lt;a href=&quot;pkcs5&quot;&gt;&lt;code&gt;OpenSSL::PKCS5&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c804fe7ff359747040967b2c6296b9013c7ea8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING&lt;/strong&gt;: This method is only valid in a &lt;a href=&quot;pstore#method-i-transaction&quot;&gt;&lt;code&gt;PStore#transaction&lt;/code&gt;&lt;/a&gt; and it cannot be read-only. It will raise &lt;a href=&quot;pstore/error&quot;&gt;&lt;code&gt;PStore::Error&lt;/code&gt;&lt;/a&gt; if called at any other time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6155939f2ab091d5776ebd50dcb9083b9dc9be83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING&lt;/strong&gt;: This method is only valid in a &lt;a href=&quot;pstore#method-i-transaction&quot;&gt;&lt;code&gt;PStore#transaction&lt;/code&gt;&lt;/a&gt;. It will raise &lt;a href=&quot;pstore/error&quot;&gt;&lt;code&gt;PStore::Error&lt;/code&gt;&lt;/a&gt; if called at any other time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70364f358215a32ce301605cbe8b81c0bfc8eba5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WRCREAT&lt;/strong&gt; - open as a writer; if the database does not exist, create a new one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7cb43f980e9394d3cadf7f4a8e57ea2be807e57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WRITER&lt;/strong&gt; - open as a writer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0fbe2c180c8f6586df0532dd0aed2deeddb24e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;You should never use ECB mode unless you are absolutely sure that you absolutely need it&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476aaa007778b2e6a98f55c197f248a0e75cc44d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;allow_nan&lt;/strong&gt;: If set to true, allow &lt;a href=&quot;json#NaN&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;json#Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; and -Infinity in defiance of RFC 7159 to be parsed by the Parser. This option defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3ddc4531b7fcde3f9766545f8eb72da14e933b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;allow_nan&lt;/strong&gt;: If set to true, allow &lt;a href=&quot;json#NaN&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;json#Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;, and -Infinity in defiance of RFC 7159 to be parsed by the Parser. This option defaults to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f19ac4d6242fdbe19d45ad2aba0c4e981bc35f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;allow_nan&lt;/strong&gt;: true if &lt;a href=&quot;json#NaN&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;json#Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;, and -Infinity should be generated, otherwise an exception is thrown if these values are encountered. This options defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9080d070f6bd8d52fb6b957015332bc0c894866c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_class&lt;/strong&gt;: Defaults to &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84cc6e63397c1b08f3b8e77f179e4e84fcf9df1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_nl&lt;/strong&gt;: a string that is put at the end of a &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; array (default: ''),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22dbf969ea4bb3d7a7e2427015e6f9317157694e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;create_additions&lt;/strong&gt;: If set to false, the Parser doesn't create additions even if a matching class and &lt;a href=&quot;json#attribute-c-create_id&quot;&gt;&lt;code&gt;create_id&lt;/code&gt;&lt;/a&gt; was found. This option defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9567300a5abf9f4f292c2c40f315c2e82a437484" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;domain:&lt;/strong&gt; The family of protocols:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b9b92b4701b26abc8eefcf991df994dfdc3963" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;hostname:&lt;/strong&gt; The identifier of a network interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc85c91205e6059aa02830e3c6b75cf4ccc9550" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;indent&lt;/strong&gt;: a string used to indent levels (default: ''),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed19238ba426e88b62dbc6da806ee5dd5c738433" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max_nesting&lt;/strong&gt;: The maximum depth of nesting allowed in the data structures from which &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; is to be generated. Disable depth checking with :max_nesting =&amp;gt; false, it defaults to 100.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72da90d9b49412b6a1426196f06f7a33637a0f28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max_nesting&lt;/strong&gt;: The maximum depth of nesting allowed in the parsed data structures. Disable depth checking with :max_nesting =&amp;gt; false. It defaults to 100.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21104b0165781bbaf1bf51a3a128755e63a536fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max_nesting&lt;/strong&gt;: The maximum depth of nesting allowed in the parsed data structures. Enable depth checking with :max_nesting =&amp;gt; anInteger. The parse! methods defaults to not doing max depth checking: This can be dangerous if someone wants to fill up your stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09812ce8fe43d82dca162ac3fb4a7fda51ba0e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;object_class&lt;/strong&gt;: Defaults to &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa28e3b925d9c8576d554389a318b71e15fc330a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;object_nl&lt;/strong&gt;: a string that is put at the end of a &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; object (default: ''),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="646545c9452226683e4034fbdaaa1f98bf822a04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;protocol:&lt;/strong&gt; Typically &lt;em&gt;zero&lt;/em&gt;. This may be used to identify a variant of a protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868b03db81f8efc34c4c3a17b3226ecbe5851d80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;space&lt;/strong&gt;: a string that is put after, a : or , delimiter (default: ''),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9b7093ab577bf822b286f82c24c18f46072c3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;space_before&lt;/strong&gt;: a string that is put before a : pair delimiter (default: ''),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed1a93e442e4ba0d495549de3f09754c7a77637" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;symbolize_names&lt;/strong&gt;: If set to true, returns symbols for the names (keys) in a &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; object. Otherwise strings are returned. Strings are the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c016a6efa48c346606b55ffe02ffbadfe26eefbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;type:&lt;/strong&gt; The type of communications between the two endpoints, typically</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d90aae7f17806d55d78145270fa325ff55a21c8" translate="yes" xml:space="preserve">
          <source>==(obj)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917afd83c46aa27a50d0cd2020f3ac21940c05c5" translate="yes" xml:space="preserve">
          <source>==(oth)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b323e37fa4756ce136d8a77a8ba5c8b5fac2bc" translate="yes" xml:space="preserve">
          <source>==(other)</source>
          <target state="translated">==(other)</target>
        </trans-unit>
        <trans-unit id="676e2bd339d3bac2e727ecc180b27f0608a93b65" translate="yes" xml:space="preserve">
          <source>==(other)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d5b577d7fefd0bd64c787cd1dd78b674688ab6" translate="yes" xml:space="preserve">
          <source>==(p1)</source>
          <target state="translated">==(p1)</target>
        </trans-unit>
        <trans-unit id="47d8754d688a575abc66db6d780d730d56ca6ddc" translate="yes" xml:space="preserve">
          <source>==(p1)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea21db0bc1c8603c97b1ab632c54eaea1419aaa" translate="yes" xml:space="preserve">
          <source>===(o)</source>
          <target state="translated">===(o)</target>
        </trans-unit>
        <trans-unit id="0c8ad3b0213798fed1d9cd1506330ecd717c6f83" translate="yes" xml:space="preserve">
          <source>===(other)</source>
          <target state="translated">===(other)</target>
        </trans-unit>
        <trans-unit id="52d811771c42d86d9ecac1593cc497277a3eae6a" translate="yes" xml:space="preserve">
          <source>===(p1)</source>
          <target state="translated">===(p1)</target>
        </trans-unit>
        <trans-unit id="29ef01b33553e2cc958b4a9c9e74a6f7ab726950" translate="yes" xml:space="preserve">
          <source>===(p1)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ef42b6a065cae9d136c021ed6c2249d31615bc" translate="yes" xml:space="preserve">
          <source>===(ro)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686d542cc4f0edfc72c29d24810600e413073cc2" translate="yes" xml:space="preserve">
          <source>===(tuple)</source>
          <target state="translated">===(tuple)</target>
        </trans-unit>
        <trans-unit id="fab89ea85aa6d5f887d35af6727e80e025aa18cb" translate="yes" xml:space="preserve">
          <source>===(tuple)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="742cac5545aa1756b8c2fde4e81fadad66e6c234" translate="yes" xml:space="preserve">
          <source>@!attribute [r] name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4212fd75a9fe0c53c43d2571a41cd4aaa388cfb" translate="yes" xml:space="preserve">
          <source>@!attribute [r] options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6c1518aaf0caab3a5f273e894644d5419226f3" translate="yes" xml:space="preserve">
          <source>@!attribute [r] uri</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39f803a4ab69c57b2e28e770ed2467c0e6c8d24" translate="yes" xml:space="preserve">
          <source>@!attribute [rw] &lt;a href=&quot;source#attribute-i-dependency_names&quot;&gt;&lt;code&gt;dependency_names&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73387af4cd0546601b3c9635c6a0dca47e490a2e" translate="yes" xml:space="preserve">
          <source>@!visibility private</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234bc3a5dc5f9880d06e881e3ffef421b55c6e8e" translate="yes" xml:space="preserve">
          <source>@!visibility private (see &lt;a href=&quot;../dependencygraph#method-i-add_edge_no_circular&quot;&gt;&lt;code&gt;DependencyGraph#add_edge_no_circular&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6744b2201c651f3662c10ee55d356b8dbbfcde09" translate="yes" xml:space="preserve">
          <source>@!visibility private (see &lt;a href=&quot;../dependencygraph#method-i-delete_edge&quot;&gt;&lt;code&gt;DependencyGraph#delete_edge&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb017fb82ff22f3ebb686db1bb002d8da55ac68" translate="yes" xml:space="preserve">
          <source>@!visibility private @see &lt;a href=&quot;../dependencygraph#method-i-detach_vertex_named&quot;&gt;&lt;code&gt;DependencyGraph#detach_vertex_named&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637e24f55bc982b3939ee95f853e535242feedb0" translate="yes" xml:space="preserve">
          <source>@!visibility private @see &lt;a href=&quot;../dependencygraph#method-i-tag&quot;&gt;&lt;code&gt;DependencyGraph#tag&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be15301e704dee4a4926afec5c64c95e8bc14c40" translate="yes" xml:space="preserve">
          <source>@!visibility private Enumerates each action in the log @yield [Action]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c07fbfdda91a5d61e84c5d18a733857284e7d4e" translate="yes" xml:space="preserve">
          <source>@!visibility private Enumerates each action in the log in reverse order @yield [Action]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc93f8fda7ac069390e4c511ae9e2278374812b" translate="yes" xml:space="preserve">
          <source>@attr [Object] locked_requirement the relevant locking requirement. @attr [Array&amp;lt;Array&amp;lt;Object&amp;gt;&amp;gt;] &lt;a href=&quot;resolution#method-i-requirement_trees&quot;&gt;&lt;code&gt;requirement_trees&lt;/code&gt;&lt;/a&gt; the different requirement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da0e9692f08e2af33c08a27be29f2a00241fbf8" translate="yes" xml:space="preserve">
          <source>@attr [Object] possibility_set the set of specs that was unable to be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1275ba3eecdc99e540b4bc7c2e64295cab0912" translate="yes" xml:space="preserve">
          <source>@attr [{String=&amp;gt;Object}] activated_by_name the already-activated specs. @attr [Object] underlying_error an error that has occurred during resolution, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cbbc7e69faeaf117c24ac8a1cde1a3e5ba1d7cc" translate="yes" xml:space="preserve">
          <source>@deprecated Use `original_env` instead @return [Hash] Environment with all bundler-related variables removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9cbda34fcb1655f6eac22b4d8800b2f74463f70" translate="yes" xml:space="preserve">
          <source>@example</source>
          <target state="translated">@example</target>
        </trans-unit>
        <trans-unit id="c7b9fcf534625afebc5a8ec2814bbb875c3bf5eb" translate="yes" xml:space="preserve">
          <source>@example Output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3579f0c8561de20a7562d251fd45f181c620f7" translate="yes" xml:space="preserve">
          <source>@example Using an inline Gemfile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f135351ecda9ec490f97476d46d6330467adef" translate="yes" xml:space="preserve">
          <source>@macro action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b09594eeb23d2f09c4bceafd7b0103d6b5ecec" translate="yes" xml:space="preserve">
          <source>@note Every gem that is specified in this 'Gemfile' will be `require`d, as if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859ab37ec9db0b25983eda662929edda88e1700f" translate="yes" xml:space="preserve">
          <source>@note This exception will be thrown iff a {Vertex} is added to a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4828c60d797a137efa99225545d03a94740b9d6" translate="yes" xml:space="preserve">
          <source>@option opts [Proc] :version_for_spec A proc that returns the version number for a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fedd7be1313414c86260ffee39b3e58def5dc9" translate="yes" xml:space="preserve">
          <source>@param &lt;a href=&quot;definition#attribute-i-ruby_version&quot;&gt;&lt;code&gt;ruby_version&lt;/code&gt;&lt;/a&gt; [Bundler::RubyVersion, nil] Requested Ruby Version @param optional_groups [Array(String)] A list of optional groups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1238096f896e843ad683a8636c7c2b1ffca9065" translate="yes" xml:space="preserve">
          <source>@param &lt;a href=&quot;gemversionpromoter#attribute-i-locked_specs&quot;&gt;&lt;code&gt;locked_specs&lt;/code&gt;&lt;/a&gt; [SpecSet] All current locked specs. Unlike &lt;a href=&quot;definition&quot;&gt;&lt;code&gt;Definition&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4396bdd7c9e08f89d15eaaa3585acf280b277d1" translate="yes" xml:space="preserve">
          <source>@param &lt;a href=&quot;gemversionpromoter#attribute-i-unlock_gems&quot;&gt;&lt;code&gt;unlock_gems&lt;/code&gt;&lt;/a&gt; [String] List of gem names being unlocked. If empty,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ef83cbab6d7f07b92bfffff9c3277d7012e48b" translate="yes" xml:space="preserve">
          <source>@param [Array&amp;lt;Object&amp;gt;] array of requirements that combine to create a conflict @return [Array&amp;lt;UnwindDetails&amp;gt;] array of &lt;a href=&quot;resolution/unwinddetails&quot;&gt;&lt;code&gt;UnwindDetails&lt;/code&gt;&lt;/a&gt; that have a chance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49373a5dbe692701a4c65a1f1cc7873d84630f7" translate="yes" xml:space="preserve">
          <source>@param [Array&amp;lt;Object&amp;gt;] dependencies @param [DependencyGraph] activated the current dependency graph in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d4b018f35320ffbd02c09d150d0c116e73b27b" translate="yes" xml:space="preserve">
          <source>@param [Array&amp;lt;String&amp;gt;] names of inferred source plugins that can be ignored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e02cc82525b251c8cc4d3938b54d3f08ef0520" translate="yes" xml:space="preserve">
          <source>@param [Array&amp;lt;String&amp;gt;] names the name of plugin to be installed @param [Hash] options various parameters as described in description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb932bcea18c8112adc4439dc77908c1cf85bb4" translate="yes" xml:space="preserve">
          <source>@param [Array&amp;lt;String&amp;gt;] plugins list to be installed @param [Hash] specs of plugins mapped to installation path (currently they</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbda5a78b9b78341f0d65ca50236a65a2cc4d96" translate="yes" xml:space="preserve">
          <source>@param [Array] gemfile &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of gemfile contents. @param [String] block_name Name of block name to look for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b996b10d2d29ca20abf7cdb2126d140c44079f" translate="yes" xml:space="preserve">
          <source>@param [Array] gems &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of names of gems to be removed. @param [Pathname] gemfile_path The Gemfile from which to remove dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca0bd4a776c90cb7db0eba7ebe5bffc1974f864" translate="yes" xml:space="preserve">
          <source>@param [Conflict] conflict @return [Array] minimal array of requirements that would cause the passed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4696fb50bbdcbccbc6e895f451440fb91880e048" translate="yes" xml:space="preserve">
          <source>@param [Definition] definition object @return [Hash] map of names to their specs they are installed with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa6477e3a653080caaa5ef4218139436f01d7ab" translate="yes" xml:space="preserve">
          <source>@param [DependencyGraph,nil] base the base dependency graph to which</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3e0941f30ef56afb68759664f03d098e9cb579" translate="yes" xml:space="preserve">
          <source>@param [DependencyGraph] graph the graph to find vertices from @return [Edge] The edge this action adds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb841f4e4b45412c0488fc4a7f7dd7f33e41a43" translate="yes" xml:space="preserve">
          <source>@param [DependencyState] state @param [Array] array of requirements @return [Boolean] whether or not the given state has any possibilities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c7a60eded6ce85692bdc6581bbcfcff88b2fd9" translate="yes" xml:space="preserve">
          <source>@param [Dsl] builder &lt;a href=&quot;dsl&quot;&gt;&lt;code&gt;Dsl&lt;/code&gt;&lt;/a&gt; object of current Gemfile. @param [Array] gems &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of names of gems to be removed. @param [Pathname] path of the Gemfile @return [Array] removed_deps &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of removed dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5da1f62ad04026952b70581fa21bfae515ad0cb" translate="yes" xml:space="preserve">
          <source>@param [Exception] backtrace @see backtrace @param [String] &lt;a href=&quot;dslerror#attribute-i-dsl_path&quot;&gt;&lt;code&gt;dsl_path&lt;/code&gt;&lt;/a&gt; @see &lt;a href=&quot;dslerror#attribute-i-dsl_path&quot;&gt;&lt;code&gt;dsl_path&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665f474c1dae7887269e13617838157a0174ca27" translate="yes" xml:space="preserve">
          <source>@param [Gem::Specification] specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413a6467a94b5ee9d4eccfcd4d4d5a8ea48b387b" translate="yes" xml:space="preserve">
          <source>@param [Hash] The options that are present in the lock file @return [API::Source] the instance of the class that handles the source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da7ef516d882228ae048fd5ce27cbbdda531159" translate="yes" xml:space="preserve">
          <source>@param [Hash] options options for dot output. @return [String] Returns a dot format representation of the graph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483e41f22261279c27a8f6b72d1022f020a68063" translate="yes" xml:space="preserve">
          <source>@param [Hash] opts the options to create a message with. @option opts [String] :solver_name The user-facing name of the solver @option opts [String] :possibility_type The generic name of a possibility @option opts [Proc] :reduce_trees A proc that reduced the list of requirement trees @option opts [Proc] :printable_requirement A proc that pretty-prints requirements @option opts [Proc] :additional_message_for_conflict A proc that appends additional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814f589cfda2374af2bb62c817525b53808e0e33" translate="yes" xml:space="preserve">
          <source>@param [Integer] depth the current depth of the resolution process. @return [void]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60ac215d5000b08e3050c0e8bfed77531132973" translate="yes" xml:space="preserve">
          <source>@param [Object] dependency @return [Array&amp;lt;Object&amp;gt;] the specifications that satisfy the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d62e22ed5b1c117fa4002b627f2f46191e86a29" translate="yes" xml:space="preserve">
          <source>@param [Object] dependency @return [Boolean] whether this dependency can safely be skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c28e42285aa17c41a23e79090f84c8186b4255" translate="yes" xml:space="preserve">
          <source>@param [Object] dependency @return [String] the name for the given `dependency`.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58beb042eb347b4ff61cdbd2c5fc3e931d33426" translate="yes" xml:space="preserve">
          <source>@param [Object] possibility a single possibility @param [Array] requirements an array of requirements @return [Boolean] whether the possibility satisfies all of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa92051c56908944797e4c0d5890706b7244a661" translate="yes" xml:space="preserve">
          <source>@param [Object] requirement @param [DependencyGraph] activated the current dependency graph in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6e30c2a4a87fc91f37fb398dd0f1a2edadb65b" translate="yes" xml:space="preserve">
          <source>@param [Object] requirement we wish to check @param [Array] array of requirements @param [Array] array of possibilities the requirements will be used to filter @return [Boolean] whether or not the given requirement is required to filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25074eef240dce842f5dc2a375c118c5e6eb127" translate="yes" xml:space="preserve">
          <source>@param [Object] spec @return [Boolean] whether `requirement` is satisfied by `spec` in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a2d971bc8ca43be7c197ab03e073cf70f5b2f6" translate="yes" xml:space="preserve">
          <source>@param [Object] specification @return [Array&amp;lt;Object&amp;gt;] the dependencies that are required by the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d77757a1227ad939e51142442cac0ebfeb8bcea" translate="yes" xml:space="preserve">
          <source>@param [Object] the proposed requirement @return [Array] possibility set containing only the locked requirement, if any</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a0f7f7ab993b82c8d77df706165b7abaeaac44" translate="yes" xml:space="preserve">
          <source>@param [Pathname] gemfile path @param [Proc] block that can be evaluated for (inline) Gemfile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27dd7998ee2d1570a3f12e5574846e4674c151e6" translate="yes" xml:space="preserve">
          <source>@param [Pathname] gemfile_path The Gemfile from which to remove dependencies. @param [Array] original_deps &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of original dependencies. @param [Array] removed_deps &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of removed dependencies. @param [Array] initial_gemfile Contents of original Gemfile before any operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9358a33833610a5483e79ad57e8ec4656790e7" translate="yes" xml:space="preserve">
          <source>@param [Pathname] gemfile_path The Gemfile from which to remove dependencies. @param [Pathname] lockfile_path The lockfile from which to remove dependencies. @return [Array]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9cc59833c1a71a11cbc49944ee97e57f799d69d" translate="yes" xml:space="preserve">
          <source>@param [Pathname] gemfile_path The Gemfile in which to inject the new dependency. @param [Pathname] lockfile_path The lockfile in which to inject the new dependency. @return [Array]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966a46a598b2e7fbbedbf3364dcf871749b2faa9" translate="yes" xml:space="preserve">
          <source>@param [Pathname] plugin_path the path plugin is installed at @raise [MalformattedPlugin] if plugins.rb file is not found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ad600c715b12849a1073ffcd13fe75e1f57808" translate="yes" xml:space="preserve">
          <source>@param [Specification] spec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a787b3538c77512712237ac2ae3300ed449367f" translate="yes" xml:space="preserve">
          <source>@param [String] command being handled by them @param [Class] (optional) class that handles the command. If not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b4df8f5d35f1084b3f2b7d6e43415209f4f2cf" translate="yes" xml:space="preserve">
          <source>@param [String] download_path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b3076a26e9f80691d71a63260c365a77ccb622" translate="yes" xml:space="preserve">
          <source>@param [String] event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03d398c3b0320ae01e491d8bb29718099b15568" translate="yes" xml:space="preserve">
          <source>@param [String] local_cache_path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd81c2fb2c9e55548a73b8d9aba43b7bcf3dc94" translate="yes" xml:space="preserve">
          <source>@param [String] name @param [Object] payload @param [Array&amp;lt;String&amp;gt;] parent_names @param [Object] requirement the requirement that is requiring the child @return [void]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c54d0e21af1263426995e83bb1b5404b206776" translate="yes" xml:space="preserve">
          <source>@param [String] name @return [Vertex,nil] the root vertex with the given name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8412289f997ae52b8af869aa48312853ead53203" translate="yes" xml:space="preserve">
          <source>@param [String] name @return [Vertex,nil] the vertex with the given name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc9084c6bdea773233c0d6c794468ca218d0cc8" translate="yes" xml:space="preserve">
          <source>@param [String] name of the plugin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4491dde35d044f6b731be372b7319e18afc54823" translate="yes" xml:space="preserve">
          <source>@param [String] name of the plugin gem to search in the source @param [Array] version of the gem to install @param [String, &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;&amp;lt;String&amp;gt;] source(s) to resolve the gem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d866d1ca8010018bc0e9f132ca0199783b2f2ebc" translate="yes" xml:space="preserve">
          <source>@param [String] name of the plugin to be registered @param [String] path where the plugin is installed @param [Array&amp;lt;String&amp;gt;] &lt;a href=&quot;index#method-i-load_paths&quot;&gt;&lt;code&gt;load_paths&lt;/code&gt;&lt;/a&gt; for the plugin @param [Array&amp;lt;String&amp;gt;] commands that are handled by the plugin @param [Array&amp;lt;String&amp;gt;] sources that are handled by the plugin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="213709919bb68fd134ff68d2f6c6d428abf8ec35" translate="yes" xml:space="preserve">
          <source>@param [String] name the name of the plugin @param [Specification] spec of installed plugin @param [Boolean] optional_plugin, removed if there is conflict with any</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6017a13f9475d85deb7de78461cd7d02828e75" translate="yes" xml:space="preserve">
          <source>@param [String] requirement_name the spec name to search for @return [Object] the locked spec named `requirement_name`, if one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f91d7c634c728656fab55c415ff9cbdf2cfdf0" translate="yes" xml:space="preserve">
          <source>@param [String] the source type they provide @param [Class] (optional) class that handles the source. If not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ff07d3afb58930e3c5a75c9be3e9a600c61c79" translate="yes" xml:space="preserve">
          <source>@param [UI] &lt;a href=&quot;resolution#attribute-i-resolver_ui&quot;&gt;&lt;code&gt;resolver_ui&lt;/code&gt;&lt;/a&gt; see {#resolver_ui} @param [Array] requested see {#original_requested} @param [DependencyGraph] base see {#base}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2513d70ec637b09743d04723a083185d853bb2" translate="yes" xml:space="preserve">
          <source>@param [UI] &lt;a href=&quot;resolver#attribute-i-resolver_ui&quot;&gt;&lt;code&gt;resolver_ui&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ce383ddc7ea1b25331f2b11897105ba15aa907" translate="yes" xml:space="preserve">
          <source>@param [Vertex] other the other vertex to compare to @return [Boolean] whether the two vertices are equal, determined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47361e1e0f7ecd08f424e10b5eeab13fa54ba736" translate="yes" xml:space="preserve">
          <source>@param [Vertex] other the vertex to check if there's a path to @param [Set&amp;lt;Vertex&amp;gt;] visited the vertices of {#graph} that have been visited @return [Boolean] whether there is a path to `other` from `self`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa535604e1557f354ca68d7ece34a0aaa3d0ebc" translate="yes" xml:space="preserve">
          <source>@param [{String =&amp;gt; &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;&amp;lt;Conflict&amp;gt;}] conflicts @return [Array&amp;lt;Object&amp;gt;] a sorted copy of `dependencies`.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51cf5e658d8e35e628720f1e7da32a297ebed9b" translate="yes" xml:space="preserve">
          <source>@param env [ENV] @param keys [Array&amp;lt;String&amp;gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bcd9d6b992e347de968032f4050bf0aae96f0d4" translate="yes" xml:space="preserve">
          <source>@param env [Hash]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef68bcb7278fae32e87813248e4fdd63f224b40f" translate="yes" xml:space="preserve">
          <source>@param gemfile [Pathname] Path to Gemfile @param lockfile [Pathname,nil] Path to Gemfile.lock @param unlock [Hash, Boolean, nil] Gems that have been requested</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97584c54ff83c238ee2d42dc31ed3c5a4f5dfe0d" translate="yes" xml:space="preserve">
          <source>@param gemfile [Proc] a block that is evaluated as a `Gemfile`.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2970f3aa6dd9dc73dc4402293421aae87724c3" translate="yes" xml:space="preserve">
          <source>@param install [Boolean] whether gems that aren't already installed on the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6e226f03ef0d7994bd0f4c96c9d22b9a8809f6" translate="yes" xml:space="preserve">
          <source>@param lockfile [Pathname] Path to Gemfile.lock @param dependencies [Array(Bundler::Dependency)] array of dependencies from Gemfile @param sources [Bundler::SourceList] @param unlock [Hash, Boolean, nil] Gems that have been requested</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6a2b1f12e1b248e7dc9d2328bb829b1713e40a" translate="yes" xml:space="preserve">
          <source>@param obj [String] mostly it is name of spec that should be downloaded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70e577605931bb4bd24bd22c80c8b860161310af" translate="yes" xml:space="preserve">
          <source>@param path [String] the path that the action will be attempted to @param action [Symbol, to_s] the type of operation that will be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd387a143b443e0382834d63fb812bdc1c0f6d5" translate="yes" xml:space="preserve">
          <source>@param prober [Prober object, nil] by default a &lt;a href=&quot;tcpsocketprobe&quot;&gt;&lt;code&gt;TCPSocketProbe&lt;/code&gt;&lt;/a&gt;, this object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0309c22386f9fa0064b85fa74b0134a5922fb40b" translate="yes" xml:space="preserve">
          <source>@param size [Integer] Size of pool @param name [String] name the name of the worker @param func [Proc] job to run in inside the worker pool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7725055028d283d61877f1a4e8ea5fb833e22674" translate="yes" xml:space="preserve">
          <source>@param specs to install</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ab7863208b0e94096cd20302cb341cb1b17863" translate="yes" xml:space="preserve">
          <source>@param unlock [Hash, Boolean, nil] Gems that have been requested</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4706c466f5043ecba2a3ccc0314245cd5295f97" translate="yes" xml:space="preserve">
          <source>@param value [Symbol] One of three Symbols: :major, :minor or :patch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d328364d90e0bc3478d1f661cbda816c85c200" translate="yes" xml:space="preserve">
          <source>@private</source>
          <target state="translated">@private</target>
        </trans-unit>
        <trans-unit id="a4ea99b7b76bd43079162eccdadf919336297246" translate="yes" xml:space="preserve">
          <source>@private Returns true</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef07aeb596c3e170a84b684c5415b24638b9b0ea" translate="yes" xml:space="preserve">
          <source>@private This &lt;a href=&quot;../api&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt; on source might not be stable, and for now we expect plugins to download all specs in `#specs`, so we implement the method for compatibility purposes and leave it undocumented (and don't support) overriding it)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c0e27c856c997a97b5be67a82ff83383e4c343" translate="yes" xml:space="preserve">
          <source>@raise [Bundler::PermissionError] if Errno:EACCES is raised in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e22c987288b1d5ebbf90c817d6f4f8a382b2125" translate="yes" xml:space="preserve">
          <source>@raise [Bundler::TemporaryResourceError] if Errno:EAGAIN is raised in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a21b9dd9874fdac0709f0eb41002fa73407d23" translate="yes" xml:space="preserve">
          <source>@raise [MalformattedPlugin] if plugins.rb raises any error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d171dd1ddcb63643b7151e6cec2da13f359833" translate="yes" xml:space="preserve">
          <source>@raise [ResolverError] if successful resolution is impossible @return [DependencyGraph] the dependency graph of successfully resolved</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec7a83e46cb125ad7a71d07b4c997c1b849945a" translate="yes" xml:space="preserve">
          <source>@return [Action,Nil] The next action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c869cb44264b9de08aae945ece3832ef2129b95" translate="yes" xml:space="preserve">
          <source>@return [Action,Nil] The previous action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f3da37880fb6c1e0187c465ceff07dc8c5bccd1" translate="yes" xml:space="preserve">
          <source>@return [Array&amp;lt;Array&amp;lt;Object&amp;gt;&amp;gt;] The different requirement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479abd5f77c204832cacb03f6562268e0d4a87ca" translate="yes" xml:space="preserve">
          <source>@return [Array&amp;lt;Edge&amp;gt;] the edges of {#graph} that have `self` as their</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c00d371a55f79854dd83dfe982a5782c5fa4a10" translate="yes" xml:space="preserve">
          <source>@return [Array&amp;lt;Object&amp;gt;] all of the requirements that required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69e6f35ec5bfbf8f28de62f32ee0ab38655977d" translate="yes" xml:space="preserve">
          <source>@return [Array&amp;lt;Object&amp;gt;] the explicit requirements that required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e81e0651ee1432369336f1cbf807611c69bee516" translate="yes" xml:space="preserve">
          <source>@return [Array&amp;lt;Object&amp;gt;] the list of requirements that led to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28de9818f605c49a776b6dc34778dba7ed92af47" translate="yes" xml:space="preserve">
          <source>@return [Array&amp;lt;Object&amp;gt;] the specifications that depended upon {#dependency}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba7e1166913f94be59090b013fcac00e26fe386" translate="yes" xml:space="preserve">
          <source>@return [Array&amp;lt;ResolutionState&amp;gt;] the stack of states for the resolution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd2dcf3b96e81cbf84ea28e590d5aca458ae407" translate="yes" xml:space="preserve">
          <source>@return [Array&amp;lt;String&amp;gt;] paths of the gemspec files for gems that can</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca53e0729becb5ca9c947356cfe3839418b0ce22" translate="yes" xml:space="preserve">
          <source>@return [Array&amp;lt;Vertex&amp;gt;] The sorted vertices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4a8b19d0cd7c8521e0affac75da0aa0ea46c85" translate="yes" xml:space="preserve">
          <source>@return [Array&amp;lt;Vertex&amp;gt;] the vertices of {#graph} that have an edge with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d0e76d3df5c8d0f46633f6fc0d11e0c8d4bb3c" translate="yes" xml:space="preserve">
          <source>@return [Array&amp;lt;Vertex&amp;gt;] the vertices of {#graph} where `self` is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f8c86427a049ad6ab3401cfa8002586a4683103" translate="yes" xml:space="preserve">
          <source>@return [Array&amp;lt;Vertex&amp;gt;] the vertices of {#graph} where `self` is an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975ae5c9dd098215ba0c6444abfa4f0be5770315" translate="yes" xml:space="preserve">
          <source>@return [Array] an object you can use to compare and sort this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f0d73882a4892fdd8cf34caa565dc578cafe04" translate="yes" xml:space="preserve">
          <source>@return [Array] array of all the requirements that led to the need for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d9dd999e9e129fd7213b86af7792051762fdfe" translate="yes" xml:space="preserve">
          <source>@return [Array] array of sub-dependencies to avoid when choosing a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4fd32353d63afb7fb3a24111a1d85a36d8f9fc" translate="yes" xml:space="preserve">
          <source>@return [Array] the dependencies that were explicitly required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264486171e441466b0d67670c9f30451f1677deb" translate="yes" xml:space="preserve">
          <source>@return [Boolean]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c110f95d528442d823af52c00d743ead0e27966a" translate="yes" xml:space="preserve">
          <source>@return [Boolean] where the requirement of the state we're unwinding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1ac2ab60f3289d94e68415eefe8b68ae22e4b7" translate="yes" xml:space="preserve">
          <source>@return [Boolean] whether the two dependency graphs are equal, determined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e153685a4ae0785816deabaea1f9cfc41619d3e" translate="yes" xml:space="preserve">
          <source>@return [Boolean] whether the two vertices are equal, determined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921bcbb5002a4a5d7f90995e38e7f5f7f31cdfa7" translate="yes" xml:space="preserve">
          <source>@return [Boolean] whether the vertex is considered a root vertex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2641be04ddb4905a003461c63f7252243edd907f" translate="yes" xml:space="preserve">
          <source>@return [Bundler::Definition]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a9862c6aaf079387f1fcbbafd69ee7e68dc943" translate="yes" xml:space="preserve">
          <source>@return [Bundler::Index] index containing the specs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065bea10493063b1ce8fe6e98d9773e5eadc6c99" translate="yes" xml:space="preserve">
          <source>@return [Bundler::SpecSet]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c89d057ad907696d67b2da7e94f319878da07f" translate="yes" xml:space="preserve">
          <source>@return [Class] that handles the source. The calss includes &lt;a href=&quot;plugin/api/source&quot;&gt;&lt;code&gt;API::Source&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7bba38cd82200bfa971406af93f7a53344a554" translate="yes" xml:space="preserve">
          <source>@return [Conflict] a {Conflict} that reflects the failure to activate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8115b0aee69f5ad1884b576c0d11cd78a49d4294" translate="yes" xml:space="preserve">
          <source>@return [CurrentRuby] Current version of Ruby</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45fc66e5639ba9737f1dba788d69cdf15faeff0" translate="yes" xml:space="preserve">
          <source>@return [DependencyGraph] the base dependency graph to which</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926b7eedc3913dc5d55b552b9138b584f614fc86" translate="yes" xml:space="preserve">
          <source>@return [Exception] the backtrace of the exception raised by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae29fbdcfbd8fb86450348a1731edbc0f9eb7d56" translate="yes" xml:space="preserve">
          <source>@return [Fixnum] a hash for the vertex based upon its {#name}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f77c834e6e1702b9ff3666bad415a63bca6597" translate="yes" xml:space="preserve">
          <source>@return [Float]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f30bf8835e49506c8046b6e5d5b76b595ed0f1" translate="yes" xml:space="preserve">
          <source>@return [GemVersionPromoter]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f4fc2e92c4575d99e6cd04d5d13dde84770c98" translate="yes" xml:space="preserve">
          <source>@return [Hash]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff075f51c26eca4636c46c7ca713ebb33c9b1072" translate="yes" xml:space="preserve">
          <source>@return [Hash] Environment present before &lt;a href=&quot;bundler&quot;&gt;&lt;code&gt;Bundler&lt;/code&gt;&lt;/a&gt; was activated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d232a220407618dd9500cc86eeb0b670b92cbf" translate="yes" xml:space="preserve">
          <source>@return [Hash] map of names to the specs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765c9c2485dcc27a2cf9911909e001df68ff7fdc" translate="yes" xml:space="preserve">
          <source>@return [Hash] map of names to the specs of plugins installed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f7454e5f4d459d8924078f1a44a238a9327809" translate="yes" xml:space="preserve">
          <source>@return [IO]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7f88071a2379915340b5afaecf32ea44cca313" translate="yes" xml:space="preserve">
          <source>@return [Integer] index of state requirement in reversed requirement tree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4247d2e4c062470bea8c10033af8fd67bda5ed97" translate="yes" xml:space="preserve">
          <source>@return [Integer] the number of resolver iterations in between calls to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8801e132801f22ad738cbbd0e0c65480a501a7be" translate="yes" xml:space="preserve">
          <source>@return [Lambda] A lambda that takes an array of inputs and a block, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc22f7524de7787dc4c04b0e47fb328c71b6a1ce" translate="yes" xml:space="preserve">
          <source>@return [Log] the op log for this graph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae9e8ce8c007e278869869281a8769e0df61c065" translate="yes" xml:space="preserve">
          <source>@return [Object] An opaque tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e954ffa6f4950e932121beb39b8540ca9f9bdf" translate="yes" xml:space="preserve">
          <source>@return [Object] a spec that was unable to be activated due to a conflict</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21bbba17f3509d7b66fc3101601420f0b3940344" translate="yes" xml:space="preserve">
          <source>@return [Object] most up-to-date dependency in the possibility set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886b27f57f22f01393c192b743e535346c3011b1" translate="yes" xml:space="preserve">
          <source>@return [Object] the current possibility that the resolution is trying</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656d5e0f671750878e08e22dec3b3a10c7e0c897" translate="yes" xml:space="preserve">
          <source>@return [Object] the dependency that could not be found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31620f8695e07c9365ea32abe33761d0fc6c161" translate="yes" xml:space="preserve">
          <source>@return [Object] the payload the vertex holds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5146339a2adcedcd34b41794867a61dd896bead" translate="yes" xml:space="preserve">
          <source>@return [Object] the requirement that led to `requirement` being added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e334aa594d8c2bb49c567670d8bdb852c59ab2" translate="yes" xml:space="preserve">
          <source>@return [Object] the requirement that led to a version of a possibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2995310d3c19e05e8f5e9459ba17d5981eacf599" translate="yes" xml:space="preserve">
          <source>@return [Object] the requirement that the edge represents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536da3095d91ff98ee42882bdd945b9bf23e04fd" translate="yes" xml:space="preserve">
          <source>@return [Pathname] The global cache path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e863bf2b9dd45041a3459ba601ff3b0aad2d3f" translate="yes" xml:space="preserve">
          <source>@return [Pathname] object for the new directory created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91beef5d666c74f793088b979d9b8bd660f76a64" translate="yes" xml:space="preserve">
          <source>@return [Pathname] path of the cache dir</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb994ee5b7af7f236a7abd5d6a46aeeedad5414" translate="yes" xml:space="preserve">
          <source>@return [RequirementState] the current state the resolution is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cecfcf065f13b340ec73950aa94941d4b35aa1d" translate="yes" xml:space="preserve">
          <source>@return [ResolutionState] the state whose `requirement` is the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416f2b16a01d36a16b85e70d57eb1b0a1f0f27b0" translate="yes" xml:space="preserve">
          <source>@return [SpecGroup] A new instance of the SpecGroup &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; sorted and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1539fa46b63676912e0d5e586748b380147854" translate="yes" xml:space="preserve">
          <source>@return [SpecSet] resolved dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f310bfecd4dade0192159673d77f2ccf30a28e1" translate="yes" xml:space="preserve">
          <source>@return [SpecificationProvider] the provider that knows about</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f6945d4694af0de83465907dee052ee820c7442" translate="yes" xml:space="preserve">
          <source>@return [SpecificationProvider] the specification provider used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1219bc53e55ba3c7694b9ea680cefa5623cddcd" translate="yes" xml:space="preserve">
          <source>@return [SpecificationProvider] the specification provider used during</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c69ff05942ee24874f58341ec33f6d044af5bbd" translate="yes" xml:space="preserve">
          <source>@return [String, nil] installed path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567217d241ee9309d1b9c18a028d577b86c9f849" translate="yes" xml:space="preserve">
          <source>@return [String] A slug suitable for use as a cache key for this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f2ca8a022badd4f25406635b6380ca9f85637d6" translate="yes" xml:space="preserve">
          <source>@return [String] An error message that includes requirement trees,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44b214c2a9549ad342c88c5bb6b198f41e8d458" translate="yes" xml:space="preserve">
          <source>@return [String] a string suitable for debugging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4d366dc4b1339cc7921d2b0c9a2927d95912a6" translate="yes" xml:space="preserve">
          <source>@return [String] post installation message (if any)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c375fa48b93cb429378bd1b137219c8dadff5779" translate="yes" xml:space="preserve">
          <source>@return [String] the contents of the DSL that cause the exception to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e19a8d05df4ec37e297b3f4b3bcf9aba2aaf026" translate="yes" xml:space="preserve">
          <source>@return [String] the description that should be presented to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfcd6556af12185127144dcf134175c15b1b9e26" translate="yes" xml:space="preserve">
          <source>@return [String] the message of the exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="739dd037d8995225818b051f72a842321352c131" translate="yes" xml:space="preserve">
          <source>@return [String] the name of the destination of the edge</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4dc7ed57f3c8b760e9b3ebc4b1102e04f1d928" translate="yes" xml:space="preserve">
          <source>@return [String] the name of the origin of the edge</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad08b23648144d6111b1d5a9847d2176007288a" translate="yes" xml:space="preserve">
          <source>@return [String] the name of the source of 'locked' dependencies, i.e.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c307d92e459a501f54c37f9643ad4b1226f25d" translate="yes" xml:space="preserve">
          <source>@return [String] the name of the source of explicit dependencies, i.e.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7d8103993c8a7b28e751009fed91a72fecfb97" translate="yes" xml:space="preserve">
          <source>@return [String] the name of the vertex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c39c4152ba035f73c857373ecab0f17bbe45a9d" translate="yes" xml:space="preserve">
          <source>@return [String] the name of the vertex to detach</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38da9120787c5ca9475997052422e99d0808aa10" translate="yes" xml:space="preserve">
          <source>@return [String] the name of the worker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b418aac5e92724245a1f912377a6958606a3c39" translate="yes" xml:space="preserve">
          <source>@return [String] the path of the dsl file that raised the exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9399774829184f307ed15bd92fed084575580c6e" translate="yes" xml:space="preserve">
          <source>@return [Symbol] The name of the action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4787878447e54945068e89ba11dd4355e269212" translate="yes" xml:space="preserve">
          <source>@return [Time] the time at which resolution began</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31579ab69a7f222fd2c7b361f2b07dd9cceed16" translate="yes" xml:space="preserve">
          <source>@return [UI] the &lt;a href=&quot;../ui&quot;&gt;&lt;code&gt;UI&lt;/code&gt;&lt;/a&gt; that knows how to communicate feedback about the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ff5a275d04a70939b943519c602e5230796827" translate="yes" xml:space="preserve">
          <source>@return [UI] the &lt;a href=&quot;ui&quot;&gt;&lt;code&gt;UI&lt;/code&gt;&lt;/a&gt; module used to communicate back to the user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6581ac8d3d223cc65af8ea77c0b207091b6dc27c" translate="yes" xml:space="preserve">
          <source>@return [UnwindDetails] Details of the nearest index to which we could unwind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f56a426ee93e674dbff69638a818e9352945203" translate="yes" xml:space="preserve">
          <source>@return [bool] Convenience method for testing value of level variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b92224c351a3df717e6b32ead9197c160a6d801" translate="yes" xml:space="preserve">
          <source>@return [void]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0e3386c23fc1fe3f70f9568d3e5e021168f683" translate="yes" xml:space="preserve">
          <source>@return [{String =&amp;gt; Resolution::Conflict}] the conflicts that caused</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931b622fd04f1a8dce5f659afbddf012a6b0280d" translate="yes" xml:space="preserve">
          <source>@return [{String =&amp;gt; Vertex}] the vertices of the dependency graph, keyed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6f4713d723e77ec0d25b7a6044aadc3dde93e6" translate="yes" xml:space="preserve">
          <source>@see #&amp;lt;=&amp;gt; @see &lt;code&gt;Gem::Specification#sort_obj&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f64ad606cf85d47807a7f535bfd62c2ecb5b22e" translate="yes" xml:space="preserve">
          <source>@see {Bundler::PermissionError}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f6da7dc0d10191cf35473923b1e05b191d46f9" translate="yes" xml:space="preserve">
          <source>@yield path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea562e12f82c1795165348a76b51c1e3e004fac" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;generator&amp;rdquo; provides an implementation of enumerating pseudo-prime numbers and it remembers the position of enumeration and upper bound. Furthermore, it is an external iterator of prime enumeration which is compatible with an &lt;a href=&quot;enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea3660a2a3a66c5987c4c0b994449b559036de5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../openssl/x509/store&quot;&gt;&lt;code&gt;OpenSSL::X509::Store&lt;/code&gt;&lt;/a&gt; used for verification of certificates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3317dcde4cbd64b303269a80c3b6c4d7951778e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; containing the message digest algorithm name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaee9331aa50bc18cdb9b7e6e6b511aaca1ce82c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;. The data to be signed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4ed2f3dabb70707f542cf81f0f3ed40ee0cf7c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; representing the tag class of this &lt;a href=&quot;asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt;. Never &lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt; for possible values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e744f7e9a544d83dd436d302bacfd1bb2d4b15" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; query abstract class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd42b578ca6a1b3708ba98636c5dbad9e2b60bf2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; resource abstract class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094727f9616d2636a8e15d03afa98e2b30d567dd" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; of options to initialize this &lt;a href=&quot;cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt;. Possible options are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4f81341cac1677905f07d9f37df90c1bb00966" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../query&quot;&gt;&lt;code&gt;Query&lt;/code&gt;&lt;/a&gt; type requesting any RR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20063676d51ba3b69a1164da89de3e25e5ccc73" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; represents a name inside the ruby interpreter. See &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; for more details on what symbols are and when ruby creates them internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5ae2fcbf5fb556df64a1fdb091a398feb480d8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; instance representing when the message was logged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5c5b353e7b8bdaa5f79778d940e0220209c290" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;alt&quot;&gt;&lt;code&gt;Resolv::LOC::Alt&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c95609f16b839cccf137545bbd2865777550b24" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;coord&quot;&gt;&lt;code&gt;Resolv::LOC::Coord&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd082ddbe6e940b8ed441e38e0e21b22f532e03" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;csv#FieldInfo&quot;&gt;&lt;code&gt;FieldInfo&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt; contains details about a field's position in the data source it was read from. &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; will pass this &lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt; to some blocks that make decisions based on field structure. See &lt;a href=&quot;csv#method-i-convert_fields&quot;&gt;&lt;code&gt;CSV.convert_fields()&lt;/code&gt;&lt;/a&gt; for an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f475ac319bafc7c6f95e73ccdc3f43e8fe3ddd3" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object can be created with an optional argument, the day of calendar reform as a Julian day number, which should be 2298874 to 2426355 or negative/positive infinity. The default value is &lt;code&gt;Date::ITALY&lt;/code&gt; (2299161=1582-10-15). See also sample/cal.rb.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4659b33fcb48170e198252f26f69df454a900907" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object has various methods. See each reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f0fb65b1b0c17f8a72d2f556b684da456fe123" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object is created with &lt;a href=&quot;date#method-c-new&quot;&gt;&lt;code&gt;Date::new&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;date#method-c-jd&quot;&gt;&lt;code&gt;Date::jd&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;date#method-c-ordinal&quot;&gt;&lt;code&gt;Date::ordinal&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;date#method-c-commercial&quot;&gt;&lt;code&gt;Date::commercial&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;date#method-c-parse&quot;&gt;&lt;code&gt;Date::parse&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;date#method-c-strptime&quot;&gt;&lt;code&gt;Date::strptime&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;date#method-c-today&quot;&gt;&lt;code&gt;Date::today&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;time#method-i-to_date&quot;&gt;&lt;code&gt;Time#to_date&lt;/code&gt;&lt;/a&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="813954cf6a0a2ed2cc0162992c196ce4a432d6a9" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; object has various methods. See each reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d5cac9df223fe1088e2025dffe504d4afac5f1" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; object is created with &lt;a href=&quot;datetime#method-c-new&quot;&gt;&lt;code&gt;DateTime::new&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datetime#method-c-jd&quot;&gt;&lt;code&gt;DateTime::jd&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datetime#method-c-ordinal&quot;&gt;&lt;code&gt;DateTime::ordinal&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datetime#method-c-commercial&quot;&gt;&lt;code&gt;DateTime::commercial&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datetime#method-c-parse&quot;&gt;&lt;code&gt;DateTime::parse&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datetime#method-c-strptime&quot;&gt;&lt;code&gt;DateTime::strptime&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datetime#method-c-now&quot;&gt;&lt;code&gt;DateTime::now&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;time#method-i-to_datetime&quot;&gt;&lt;code&gt;Time#to_datetime&lt;/code&gt;&lt;/a&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848562abd45b79043175c0e7fb597c1f52b72bd0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;dns&quot;&gt;&lt;code&gt;Resolv::DNS&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;ipv4&quot;&gt;&lt;code&gt;IPv4&lt;/code&gt;&lt;/a&gt; address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89cd8b000c220c00379745d58051c7a9136f55a2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;dns&quot;&gt;&lt;code&gt;Resolv::DNS&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;ipv6&quot;&gt;&lt;code&gt;IPv6&lt;/code&gt;&lt;/a&gt; address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7384cba1431627282e222935d1836b8bfebdb177" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; can also be created through its &lt;a href=&quot;hash#method-c-new&quot;&gt;&lt;code&gt;::new&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124eb0a3eb10dcff988804428420b4df9909b869" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; can be easily created by using its implicit form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1ba4417a529d0d8fa8f14129467975e8e6df05" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; is a dictionary-like collection of unique keys and their values. Also called associative arrays, they are similar to Arrays, but where an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; uses integers as its index, a &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; allows you to use any object type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faac8eb42859f525d1797227b24c12a2d09a3aee" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; of header values. The following header keys are recognized:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f607c1e2af8935a71c92d41f1c03ddc783ef613" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; that recognizes three options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2312c52553447676d915c27ab03614054d32150" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;imap#Envelope&quot;&gt;&lt;code&gt;Net::IMAP::Envelope&lt;/code&gt;&lt;/a&gt; object that describes the envelope structure of a message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74dafdb8b0310d5df5ecc2022bcad20ef33f7d1e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;imap/noresponseerror&quot;&gt;&lt;code&gt;Net::IMAP::NoResponseError&lt;/code&gt;&lt;/a&gt; is raised if &lt;code&gt;mailbox&lt;/code&gt; cannot be subscribed to; for instance, because it does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36db2e8eca8e3c2a799531746e254132d58ade1" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;imap/noresponseerror&quot;&gt;&lt;code&gt;Net::IMAP::NoResponseError&lt;/code&gt;&lt;/a&gt; is raised if &lt;code&gt;mailbox&lt;/code&gt; cannot be unsubscribed from; for instance, because the client is not currently subscribed to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f25b77ac62a058ccbad7fafb804ce0dad8f6b6" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;imap/noresponseerror&quot;&gt;&lt;code&gt;Net::IMAP::NoResponseError&lt;/code&gt;&lt;/a&gt; is raised if a mailbox with that name cannot be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9453a6bad73037ebc0c9acbb2ce5518eceb57a15" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;imap/noresponseerror&quot;&gt;&lt;code&gt;Net::IMAP::NoResponseError&lt;/code&gt;&lt;/a&gt; is raised if a mailbox with that name cannot be deleted, either because it does not exist or because the client does not have permission to delete it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66145b9778bace99744dc780028f0c2fa4b08e5d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;imap/noresponseerror&quot;&gt;&lt;code&gt;Net::IMAP::NoResponseError&lt;/code&gt;&lt;/a&gt; is raised if a mailbox with the name &lt;code&gt;mailbox&lt;/code&gt; cannot be renamed to &lt;code&gt;newname&lt;/code&gt; for whatever reason; for instance, because &lt;code&gt;mailbox&lt;/code&gt; does not exist, or because there is already a mailbox with the name &lt;code&gt;newname&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4701f4c70eb9356311df7b422d28a74028ab10a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;imap/noresponseerror&quot;&gt;&lt;code&gt;Net::IMAP::NoResponseError&lt;/code&gt;&lt;/a&gt; is raised if authentication fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6538a305d538bde77166f782b653ab7faa89e549" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;imap/noresponseerror&quot;&gt;&lt;code&gt;Net::IMAP::NoResponseError&lt;/code&gt;&lt;/a&gt; is raised if status values for &lt;code&gt;mailbox&lt;/code&gt; cannot be returned; for instance, because it does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3b83b5d274b517d1076936d8212dbdaa36c4c7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;imap/noresponseerror&quot;&gt;&lt;code&gt;Net::IMAP::NoResponseError&lt;/code&gt;&lt;/a&gt; is raised if the mailbox does not exist (it is not created automatically), or if the flags, date_time, or message arguments contain errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def585f6508d1d8d9a23284deb4b2b004d75b2ae" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;imap/noresponseerror&quot;&gt;&lt;code&gt;Net::IMAP::NoResponseError&lt;/code&gt;&lt;/a&gt; is raised if the mailbox does not exist or is for some reason non-examinable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de29f86354bfb64c0bb986fa1e36e2b2c6632f6d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;imap/noresponseerror&quot;&gt;&lt;code&gt;Net::IMAP::NoResponseError&lt;/code&gt;&lt;/a&gt; is raised if the mailbox does not exist or is for some reason non-selectable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056e249461698915dc4e40a2b508ed34bc14e699" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;notifytemplateentry&quot;&gt;&lt;code&gt;NotifyTemplateEntry&lt;/code&gt;&lt;/a&gt; is returned by &lt;a href=&quot;tuplespace#method-i-notify&quot;&gt;&lt;code&gt;TupleSpace#notify&lt;/code&gt;&lt;/a&gt; and is notified of &lt;a href=&quot;tuplespace&quot;&gt;&lt;code&gt;TupleSpace&lt;/code&gt;&lt;/a&gt; changes. You may receive either your subscribed event or the 'close' event when iterating over notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe118df802a977a830071a593a304daee010fa9" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;pathname&quot;&gt;&lt;code&gt;Pathname&lt;/code&gt;&lt;/a&gt; can be relative or absolute. It's not until you try to reference the file that it even matters whether the file exists or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589fb8e433fc1221867966fa94e80f2478f02572" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt; object converted from a method has no tricks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14944b4c9776e8d2f2e4cbe9c86a0f7b89ff3cc4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt; object generated by &lt;code&gt;&amp;amp;&lt;/code&gt; argument has the tricks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6333634276c4f09cb910d06c80803dfdb0594b" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt; object generated by &lt;code&gt;lambda&lt;/code&gt; doesn't have such tricks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc0648c3c39745ac59d4014c588cd79275a8fa3" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt; object generated by &lt;code&gt;proc&lt;/code&gt; ignores extra arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90c6f7fd253f056caf884a7be23b9be7cbe33cb" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt; used to find and convert some common &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d489afbd531e0f80b5de94fcd3927a0278a1a0b" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt; used to find and convert some common &lt;a href=&quot;datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff0ea4695b6c6aecae4efe4cdf6a2cf1585ea46" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;ringfinger&quot;&gt;&lt;code&gt;RingFinger&lt;/code&gt;&lt;/a&gt; sends a UDP packet containing the &lt;a href=&quot;../drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; where it will listen for a reply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbedd67cf271539647fc62501bbf9d24b3b8ba55" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;ringserver&quot;&gt;&lt;code&gt;RingServer&lt;/code&gt;&lt;/a&gt; allows a &lt;a href=&quot;tuplespace&quot;&gt;&lt;code&gt;Rinda::TupleSpace&lt;/code&gt;&lt;/a&gt; to be located via UDP broadcasts. Default service location uses the following steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4563f5f55691c35e7978b1ecc4712f88d893b77b" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;ringserver&quot;&gt;&lt;code&gt;RingServer&lt;/code&gt;&lt;/a&gt; begins listening on the network broadcast UDP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3970ef05d6f5bd478dfa4a148df7ada7e770de7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;ringserver&quot;&gt;&lt;code&gt;RingServer&lt;/code&gt;&lt;/a&gt; requires a TupleSpace:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d9fa73b97471d3a0e7d738e96427c4ad6b7ead" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;row&quot;&gt;&lt;code&gt;CSV::Row&lt;/code&gt;&lt;/a&gt; is part &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; and part &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;. It retains an order for the fields and allows duplicates just as an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; would, but also allows you to access fields by name just as you could if they were in a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d90b39dd525107e84193c05a5a30901e0baddf5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;row&quot;&gt;&lt;code&gt;CSV::Row&lt;/code&gt;&lt;/a&gt; object supports the following &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; methods through delegation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d68c2c63aea4ffaa12c532236d7c0e6d464d32d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;session&quot;&gt;&lt;code&gt;CGI::Session&lt;/code&gt;&lt;/a&gt; instance is created from a &lt;a href=&quot;../cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; object. By default, this &lt;a href=&quot;session&quot;&gt;&lt;code&gt;CGI::Session&lt;/code&gt;&lt;/a&gt; instance will start a new session if none currently exists, or continue the current session for this client if one does exist. The &lt;code&gt;new_session&lt;/code&gt; option can be used to either always or never create a new session. See new() for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a47b2cbdf4148e28aed70d0d9f1b4fba153490" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;simpledelegator&quot;&gt;&lt;code&gt;SimpleDelegator&lt;/code&gt;&lt;/a&gt; instance can take advantage of the fact that &lt;a href=&quot;simpledelegator&quot;&gt;&lt;code&gt;SimpleDelegator&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;code&gt;Delegator&lt;/code&gt; to call &lt;code&gt;super&lt;/code&gt; to have methods called on the object being delegated to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5adb0bc8683e1f9af544073f9d32e3ca502d308a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;size&quot;&gt;&lt;code&gt;Resolv::LOC::Size&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3330fdd0de3261221e26bccea2008a02de5b8b8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;storecontext&quot;&gt;&lt;code&gt;StoreContext&lt;/code&gt;&lt;/a&gt; is used while validating a single certificate and holds the status involved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750b92f8e6793b9ee5f41c26083632dc1a6e4ec6" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;stringio&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt; duck-typed class that uses &lt;a href=&quot;tempfile&quot;&gt;&lt;code&gt;Tempfile&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; as the backing store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6121aa4cbfb1c872e1b633d0469d57f13bd93a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt; is a convenient way to bundle a number of attributes together, using accessor methods, without having to write an explicit class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b4b236c5e38cada8ed6efd9a04f6d3f1bd349f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;table&quot;&gt;&lt;code&gt;CSV::Table&lt;/code&gt;&lt;/a&gt; is a two-dimensional data structure for representing &lt;a href=&quot;../csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; documents. Tables allow you to work with the data by row or column, manipulate the data, and even convert the results back to &lt;a href=&quot;../csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt;, if needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a188bf7847527d6b33a5d95bc8d2f3941f4cfc" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;table&quot;&gt;&lt;code&gt;CSV::Table&lt;/code&gt;&lt;/a&gt; object supports the following &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; methods through delegation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4ed44f989fe5e536b89c0d77d1ee52629f290e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;templateentry&quot;&gt;&lt;code&gt;TemplateEntry&lt;/code&gt;&lt;/a&gt; is a &lt;a href=&quot;template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; together with expiry and cancellation data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf0bc945d84e142cc62853d168353b60c13de83" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;threaderror&quot;&gt;&lt;code&gt;ThreadError&lt;/code&gt;&lt;/a&gt; exception is raised if &lt;a href=&quot;thread#method-c-new&quot;&gt;&lt;code&gt;::new&lt;/code&gt;&lt;/a&gt; is called without a block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513f7c65eec1c2726e4342f0c88fe5be7d15c947" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; instance representing when the message was logged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17622a924f942008b05c714c58dfc3ada3c10119" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;tupleentry&quot;&gt;&lt;code&gt;TupleEntry&lt;/code&gt;&lt;/a&gt; is a &lt;a href=&quot;tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; (i.e. a possible entry in some Tuplespace) together with expiry and cancellation data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39351eaabd2c3554a93101e329f37181ba24230a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;tupleentry&quot;&gt;&lt;code&gt;TupleEntry&lt;/code&gt;&lt;/a&gt; is dead when it is canceled or expired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be04fd8ad9ad07c5d624bfce37713c30d618ae80" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised if the &lt;code&gt;numeric&lt;/code&gt; is not a Fixnum or Bignum type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7cd255b26c1e43b456919396402ea402fc9944c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;weakref&quot;&gt;&lt;code&gt;WeakRef&lt;/code&gt;&lt;/a&gt; may be used exactly like the object it references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a90fe6170a848fd6b83faebd6cdf7b017fb3e7d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;File&lt;/code&gt; is an abstraction of any file object accessible by the program and is closely associated with class &lt;code&gt;IO&lt;/code&gt;. &lt;code&gt;File&lt;/code&gt; includes the methods of module &lt;code&gt;FileTest&lt;/code&gt; as class methods, allowing you to write (for example) &lt;code&gt;File.exist?(&quot;foo&quot;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8fbead2bb53d514cca117d92d6180dcb5f3417a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Module&lt;/code&gt; is a collection of methods and constants. The methods in a module may be instance methods or module methods. Instance methods appear as methods in a class when the module is included, module methods do not. Conversely, module methods may be called without creating an encapsulating object, while instance methods may not. (See &lt;code&gt;Module#module_function&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59df1fda0b2d1551ed12d9ceac95f6ac8853eb1a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Proc&lt;/code&gt; object is an encapsulation of a block of code, which can be stored in a local variable, passed to a method or another &lt;a href=&quot;proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt;, and can be called. &lt;a href=&quot;proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt; is an essential concept in Ruby and a core of its functional programming features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c272ac0c0d6b4226540180cfef5afc75a4208c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Psych::BadAlias&lt;/code&gt; exception will be raised if the yaml contains aliases but the &lt;code&gt;aliases&lt;/code&gt; keyword argument is set to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2371b1aff664784f394796cd706d8d599a2bfea8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Psych::DisallowedClass&lt;/code&gt; exception will be raised if the yaml contains a class that isn't in the &lt;code&gt;permitted_classes&lt;/code&gt; list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaae6932fe48ccc56faa9b6a5a0d4a24b5031e15" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Range&lt;/code&gt; represents an interval&amp;mdash;a set of values with a beginning and an end. Ranges may be constructed using the &lt;em&gt;s&lt;/em&gt;&lt;code&gt;..&lt;/code&gt;&lt;em&gt;e&lt;/em&gt; and &lt;em&gt;s&lt;/em&gt;&lt;code&gt;...&lt;/code&gt;&lt;em&gt;e&lt;/em&gt; literals, or with &lt;a href=&quot;range#method-c-new&quot;&gt;&lt;code&gt;Range::new&lt;/code&gt;&lt;/a&gt;. Ranges constructed using &lt;code&gt;..&lt;/code&gt; run from the beginning to the end inclusively. Those created using &lt;code&gt;...&lt;/code&gt; exclude the end value. When used as an iterator, ranges return each value in the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f0a25a34b32dee21f5782ea232bc115b8e9d7c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Regexp&lt;/code&gt; holds a regular expression, used to match a pattern against strings. Regexps are created using the &lt;code&gt;/.../&lt;/code&gt; and &lt;code&gt;%r{...}&lt;/code&gt; literals, and by the &lt;code&gt;Regexp::new&lt;/code&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e9105829acd4ee7281f8277f931b49cdc58f54" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; object holds and manipulates an arbitrary sequence of bytes, typically representing characters. &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; objects may be created using &lt;code&gt;String::new&lt;/code&gt; or as literals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69156901412db2b9660d33f3c8113b65ed8469e6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;length&lt;/code&gt; of &lt;code&gt;nil&lt;/code&gt; is equivalent to the length of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e4b2ed7afbbeaea97af48cbaed2b086ad5f75b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;start&lt;/code&gt; of &lt;code&gt;nil&lt;/code&gt; is equivalent to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a1f1dc299d9bea90028ea7c2b2eead938393fb" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;character class&lt;/em&gt; is delimited with square brackets (&lt;code&gt;[&lt;/code&gt;, &lt;code&gt;]&lt;/code&gt;) and lists characters that may appear at that point in the match. &lt;code&gt;/[ab]/&lt;/code&gt; means &lt;em&gt;a&lt;/em&gt; or &lt;em&gt;b&lt;/em&gt;, as opposed to &lt;code&gt;/ab/&lt;/code&gt; which means &lt;em&gt;a&lt;/em&gt; followed by &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906a78f7bd754dd33d40018901d7518e36dc10ea" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;state&lt;/em&gt; hash can have the following keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56368b4da3939ff440882f10d938ac01979caf31" translate="yes" xml:space="preserve">
          <source>A C struct wrapper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12499b95c250e8a6589e881805065fe15a889011" translate="yes" xml:space="preserve">
          <source>A C union wrapper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a03aa6e5a757af231e9f09e267d4e000e51ab1b" translate="yes" xml:space="preserve">
          <source>A CA certificate is created the same way we created a certificate above, but with different extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef5471931402fb1bb9216673b9a6cf50aeee618" translate="yes" xml:space="preserve">
          <source>A CSR is saved to disk and sent to the CA for signing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8432d73c105b83573c8201d461c0cb32f2d94679" translate="yes" xml:space="preserve">
          <source>A DH callback. See &lt;a href=&quot;../../openssl/ssl/sslcontext#attribute-i-tmp_dh_callback&quot;&gt;&lt;code&gt;OpenSSL::SSL::SSLContext.tmp_dh_callback&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33013a678f4ff9ffd66cd557a0117ed5f8d65b52" translate="yes" xml:space="preserve">
          <source>A DRbServer can be configured with an access control list to selectively allow or deny access from specified IP addresses. The main druby distribution provides the &lt;a href=&quot;acl&quot;&gt;&lt;code&gt;ACL&lt;/code&gt;&lt;/a&gt; class for this purpose. In general, this mechanism should only be used alongside, rather than as a replacement for, a good firewall.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc5d826cfd7ce99cb1168b9daf25ef52574035a" translate="yes" xml:space="preserve">
          <source>A DRbServer must be running in the local process before any incoming dRuby calls can be accepted, or any local objects can be passed as dRuby references to remote processes, even if those local objects are never actually called remotely. You do not need to start a DRbServer in the local process if you are only making outgoing dRuby calls passing marshalled parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e08075a1c6059c7fcbea20f777b8601d0bd87a" translate="yes" xml:space="preserve">
          <source>A DSL that provides the means to dynamically load libraries and build modules around them including calling extern functions within the C library that has been loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b767365be1501e10fb5f6f5f1ae12965faf8d5e0" translate="yes" xml:space="preserve">
          <source>A Default port of 21 for &lt;a href=&quot;ftp&quot;&gt;&lt;code&gt;URI::FTP&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe26da0cd8bf2ff6ebb48a39f8e9f5cd9bcf2db" translate="yes" xml:space="preserve">
          <source>A Default port of 389 for &lt;a href=&quot;ldap&quot;&gt;&lt;code&gt;URI::LDAP&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ec73328fe527b6cda7e86fd654657a018b0091" translate="yes" xml:space="preserve">
          <source>A Default port of 443 for &lt;a href=&quot;https&quot;&gt;&lt;code&gt;URI::HTTPS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b87c8141b5f484e3c64bb4cc6b697392785eb6" translate="yes" xml:space="preserve">
          <source>A Default port of 636 for &lt;a href=&quot;ldaps&quot;&gt;&lt;code&gt;URI::LDAPS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29cc801e860763062f13416ba90190f6652d8437" translate="yes" xml:space="preserve">
          <source>A Default port of 80 for &lt;a href=&quot;http&quot;&gt;&lt;code&gt;URI::HTTP&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ce7bb4aa4bb8955408ac6a4d2b42ba66507fe0" translate="yes" xml:space="preserve">
          <source>A Default port of nil for &lt;a href=&quot;file&quot;&gt;&lt;code&gt;URI::File&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87068f2188fcb70af5e62f2cceb965716cabee20" translate="yes" xml:space="preserve">
          <source>A Default port of nil for &lt;a href=&quot;generic&quot;&gt;&lt;code&gt;URI::Generic&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c39f3f0da2ed6b078c99494873887424ac19ad9" translate="yes" xml:space="preserve">
          <source>A Default port of nil for &lt;a href=&quot;mailto&quot;&gt;&lt;code&gt;URI::MailTo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea6a258fa2146a5560e8241c9913e17d8fa4eb1" translate="yes" xml:space="preserve">
          <source>A More Realistic Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="592c2427680e61c4a7c50d61d15f1b0c759f2f80" translate="yes" xml:space="preserve">
          <source>A POST can be made using the &lt;a href=&quot;http/post&quot;&gt;&lt;code&gt;Net::HTTP::Post&lt;/code&gt;&lt;/a&gt; request class. This example creates a URL encoded POST body:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc07f5d4b2d7c242699994efa9e5a939c977be40" translate="yes" xml:space="preserve">
          <source>A Pointer to another &lt;a href=&quot;../../dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b671ac0d028246c423146116e7e15964cde16b69" translate="yes" xml:space="preserve">
          <source>A Simple Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad58aedc62793802dd9d6ac37befc1bf3afae57" translate="yes" xml:space="preserve">
          <source>A Simple Public Key Infrastructure implementation (pronounced &amp;ldquo;spooky&amp;rdquo;). The structure is defined as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729c0d92f7a005156799dc479ede280e6f0ce618" translate="yes" xml:space="preserve">
          <source>A Unicode character's &lt;em&gt;General Category&lt;/em&gt; value can also be matched with &lt;code&gt;\p{&lt;/code&gt;&lt;em&gt;Ab&lt;/em&gt;&lt;code&gt;}&lt;/code&gt; where &lt;em&gt;Ab&lt;/em&gt; is the category's abbreviation as described below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a928a6ba96f0df6a08f8b4e097d6dd31a1e425" translate="yes" xml:space="preserve">
          <source>A array of flag symbols that are set for this message. Flag symbols are capitalized by &lt;a href=&quot;../string#method-i-capitalize&quot;&gt;&lt;code&gt;String#capitalize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481c7372a4c0bfc7c454ddc93733ef4c27f7d8db" translate="yes" xml:space="preserve">
          <source>A bitmask for matching no valid IP address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a9e0851296377a4a7091f7df672c940e7caa99" translate="yes" xml:space="preserve">
          <source>A block is required and should evaluate to the body of the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4acfd311ed96331cc322381441a4c9f33cb071" translate="yes" xml:space="preserve">
          <source>A block must be given, otherwise an &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09200ca7cafe884be70914e9a0273c4542b6429e" translate="yes" xml:space="preserve">
          <source>A block will accept arguments from the method it was sent to. Arguments are defined similar to the way a method defines arguments. The block's arguments go in &lt;code&gt;| ... |&lt;/code&gt; following the opening &lt;code&gt;do&lt;/code&gt; or &lt;code&gt;{&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d5e94b93f047933c56cbfeb273f5fdc029bddb" translate="yes" xml:space="preserve">
          <source>A boolean value. If true, prepend protocol string and status code, and date; and sets default values for &amp;ldquo;server&amp;rdquo; and &amp;ldquo;connection&amp;rdquo; if not explicitly set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8d6511b1fafb89e62e2147c468298e0243e372" translate="yes" xml:space="preserve">
          <source>A callback for additional certificate verification. The callback is invoked for each certificate in the chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd421338c53ab3e0bbe27111a74576ef16e02707" translate="yes" xml:space="preserve">
          <source>A callback invoked at connect time to distinguish between multiple server names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c1c249950a104639fbc707e0601afe874abb24" translate="yes" xml:space="preserve">
          <source>A callback invoked on a server when a session is proposed by the client but the session could not be found in the server's internal cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0402a93bfb2e7da6b394923be0f4f3c1236e39ce" translate="yes" xml:space="preserve">
          <source>A callback invoked on the client side when the client needs to select a protocol from the list sent by the server. Supported in &lt;a href=&quot;../../openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; 1.0.1 and higher. The client MUST select a protocol of those advertised by the server. If none is acceptable, raising an error in the callback will cause the handshake to fail. Not setting this callback explicitly means not supporting the NPN extension on the client - any protocols advertised by the server will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87df65382942768d0e87f5372081370e79c75fb" translate="yes" xml:space="preserve">
          <source>A callback invoked on the server side when the server needs to select a protocol from the list sent by the client. Supported in &lt;a href=&quot;../../openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; 1.0.2 and higher. The callback must return a protocol of those advertised by the client. If none is acceptable, raising an error in the callback will cause the handshake to fail. Not setting this callback explicitly means not supporting the ALPN extension on the server - any protocols advertised by the client will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca05c88fe51b9b7e978581f2bbd614446ffe5b4" translate="yes" xml:space="preserve">
          <source>A callback invoked when DH parameters are required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28e817ddabc0fbf05d55e09582108506e682192" translate="yes" xml:space="preserve">
          <source>A callback invoked when ECDH parameters are required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb58f0294d1c9960e9579b839d60bb82235e7cb" translate="yes" xml:space="preserve">
          <source>A callback invoked when a client certificate is requested by a server and no certificate has been set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6cb07167431c4ff0f1ff395723fc0004000581" translate="yes" xml:space="preserve">
          <source>A callback invoked when a new session was negotiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f9503807ea4de94296a83f9fc5a1f28a6b6d0d" translate="yes" xml:space="preserve">
          <source>A callback invoked when a session is removed from the internal cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4621d6144f580b607e4f8e116cad1ca48e741f" translate="yes" xml:space="preserve">
          <source>A callback invoked whenever a new handshake is initiated. May be used to disable renegotiation entirely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc4d824a59d5e779a54ea26d7e6f966a406d56b" translate="yes" xml:space="preserve">
          <source>A callback to be used for additional verification. See &lt;a href=&quot;../../openssl/ssl/sslcontext#attribute-i-verify_callback&quot;&gt;&lt;code&gt;OpenSSL::SSL::SSLContext.verify_callback&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d696a74e57246100e454635c44364049254d2f97" translate="yes" xml:space="preserve">
          <source>A certificate authority (CA) is a trusted third party that allows you to verify the ownership of unknown certificates. The CA issues key signatures that indicate it trusts the user of that key. A user encountering the key can verify the signature by using the CA's public key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8442b7ff0b9b05a3c41d1ec2ceba0aacfc17ae7a" translate="yes" xml:space="preserve">
          <source>A certificate may be encoded in DER format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e8fb34641c33ced7e5201e7a063938a8262553" translate="yes" xml:space="preserve">
          <source>A certificate or &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of certificates that will be sent to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773af6271f941766db93ffaae587d594867f2de6" translate="yes" xml:space="preserve">
          <source>A certificate. An instance of &lt;a href=&quot;../x509/certificate&quot;&gt;&lt;code&gt;OpenSSL::X509::Certificate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833fe4332e2614f99e003b566626a9596100c25f" translate="yes" xml:space="preserve">
          <source>A character class may contain another character class. By itself this isn't useful because &lt;code&gt;[a-z[0-9]]&lt;/code&gt; describes the same set as &lt;code&gt;[a-z0-9]&lt;/code&gt;. However, character classes also support the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; operator which performs set intersection on its arguments. The two can be combined as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad58b1891158c729ced9d5e0d8ab6b1624f7004" translate="yes" xml:space="preserve">
          <source>A class for calculating message digests using RIPEMD-160 cryptographic hash function, designed by Hans Dobbertin, Antoon Bosselaers, and Bart Preneel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414d9da241e4cd7e27c9fcfe377a2e3a22df906d" translate="yes" xml:space="preserve">
          <source>A class for calculating message digests using the &lt;a href=&quot;md5&quot;&gt;&lt;code&gt;MD5&lt;/code&gt;&lt;/a&gt; Message-Digest Algorithm by RSA &lt;code&gt;Data&lt;/code&gt; Security, Inc., described in RFC1321.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f30f91e8ba337c0a832316ed8535c8e1742079" translate="yes" xml:space="preserve">
          <source>A class for calculating message digests using the SHA-1 Secure &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; Algorithm by NIST (the US' National Institute of Standards and Technology), described in FIPS PUB 180-1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e6ea5e3dea7bf1bea1d0c5b574588c695fa2547" translate="yes" xml:space="preserve">
          <source>A class that provides the functionality of &lt;a href=&quot;kernel#method-i-set_trace_func&quot;&gt;&lt;code&gt;Kernel#set_trace_func&lt;/code&gt;&lt;/a&gt; in a nice Object-Oriented API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50089496b9c1a5b51dcb4f0bd02891c141213877" translate="yes" xml:space="preserve">
          <source>A class that provides two-phase lock with a counter. See &lt;a href=&quot;sync_m&quot;&gt;&lt;code&gt;Sync_m&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df94233f4e7351133e23f47d68b05826656fde62" translate="yes" xml:space="preserve">
          <source>A class variable must start with a &lt;code&gt;@@&lt;/code&gt; (two &amp;ldquo;at&amp;rdquo; signs). The rest of the name follows the same rules as instance variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696c6efaf13dc2ccdaf1e8315728513705a01773" translate="yes" xml:space="preserve">
          <source>A class which allows both internal and external iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167361006a3bea7947e49c3b609da671d29684bd" translate="yes" xml:space="preserve">
          <source>A collection of possibility states that share the same dependencies @attr [Array] dependencies the dependencies for this set of possibilities @attr [Array] possibilities the possibilities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b583f73ade6aa857487b3471c300ea7656ed94" translate="yes" xml:space="preserve">
          <source>A combination of &lt;code&gt;:integer&lt;/code&gt; and &lt;code&gt;:float&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7a1d4ea6c271bf6ff6ced482876e14c654bfcd" translate="yes" xml:space="preserve">
          <source>A command that is hidden in help messages but still invocable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ec0270b87edb81611d9350698e852d38cd7508" translate="yes" xml:space="preserve">
          <source>A comment to be used for generating the certificate. The default is &amp;ldquo;Generated by Ruby/OpenSSL&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c1a86d28e7ec514f06468d3f91110d0fd51b5b" translate="yes" xml:space="preserve">
          <source>A complex number can be represented as a paired real number with imaginary unit; a+bi. Where a is real part, b is imaginary part and i is imaginary unit. Real a equals complex a+0i mathematically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="376b877b7d75eec3cf1022f35a4b96304f6bfed8" translate="yes" xml:space="preserve">
          <source>A complex object is either an exact or an inexact number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148f7bc50eeafc49271ac2ad7d3bb010e34bd271" translate="yes" xml:space="preserve">
          <source>A composite &lt;a href=&quot;ipv6&quot;&gt;&lt;code&gt;IPv6&lt;/code&gt;&lt;/a&gt; address &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f808c538531387843eda11e574615ddade2282" translate="yes" xml:space="preserve">
          <source>A concrete implementation of &lt;a href=&quot;delegator&quot;&gt;&lt;code&gt;Delegator&lt;/code&gt;&lt;/a&gt;, this class provides the means to delegate all supported method calls to the object passed into the constructor and even to change the object being delegated to at a later time with #__setobj__.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a68563393495ef0d03623bbd5e13cb87c3b4e99" translate="yes" xml:space="preserve">
          <source>A condition in a &lt;code&gt;case&lt;/code&gt; expression. See &lt;a href=&quot;syntax/control_expressions_rdoc&quot;&gt;control expressions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98947ffdeace17d9a4a937c33f995c6774992992" translate="yes" xml:space="preserve">
          <source>A conflict that the resolution process encountered @attr [Object] requirement the requirement that immediately led to the conflict @attr [{String,Nil=&amp;gt;}] requirements the requirements that caused the conflict @attr [Object, nil] existing the existing spec that was in conflict with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52580e83ef1aae05c64872d5c5ac89e5c6e7f790" translate="yes" xml:space="preserve">
          <source>A contrived pattern to match a number with optional decimal places:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5eebcd2c6bc70c0cb9dc4bcca090f83ee57ab4" translate="yes" xml:space="preserve">
          <source>A convenience method for &lt;a href=&quot;tracepoint#method-c-new&quot;&gt;&lt;code&gt;TracePoint.new&lt;/code&gt;&lt;/a&gt;, that activates the trace automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b551a3c7fc24cd42085302815ce32cdd02a3305a" translate="yes" xml:space="preserve">
          <source>A convenience method that's only available when the you require the IRB::XMP standard library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8558d3bcbbb381b76c1ac6df0af03fa617ec82bf" translate="yes" xml:space="preserve">
          <source>A convenience method to access the values like a &lt;a href=&quot;../../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c965ee59294e2c62b04a71ebcd41d992e53bab" translate="yes" xml:space="preserve">
          <source>A convenience method which is same as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccddfff1e252d797586b96f5416bc639551d7df9" translate="yes" xml:space="preserve">
          <source>A convenience method, like &lt;a href=&quot;ppmethods#method-i-object_group&quot;&gt;&lt;code&gt;object_group&lt;/code&gt;&lt;/a&gt;, but also reformats the Object's object_id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b45651856c6d59134e00dfab2b0a8e1c371f463" translate="yes" xml:space="preserve">
          <source>A cookie or cookies, returned as one or more Set-Cookie headers. The value can be the literal string of the cookie; a &lt;a href=&quot;cgi/cookie&quot;&gt;&lt;code&gt;CGI::Cookie&lt;/code&gt;&lt;/a&gt; object; an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of literal cookie strings or &lt;a href=&quot;cgi/cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; objects; or a hash all of whose values are literal cookie strings or &lt;a href=&quot;cgi/cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bdc4ea3abbfecbe51a40497f64fd826c5d753c1" translate="yes" xml:space="preserve">
          <source>A created socket is bound to &lt;code&gt;interface_address&lt;/code&gt;. If you use IPv4 multicast then the interface of &lt;code&gt;interface_address&lt;/code&gt; is used as the inbound interface. If &lt;code&gt;interface_address&lt;/code&gt; is omitted or nil then '0.0.0.0' or '::1' is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4652e9a1fa0a16312d65e0381561afe8b1a2669" translate="yes" xml:space="preserve">
          <source>A critical condition has occurred</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99acb0c38630019124f62b274d4c9f72e7462549" translate="yes" xml:space="preserve">
          <source>A cryptographic hash function is a procedure that takes data and returns a fixed bit string: the hash value, also known as &lt;em&gt;digest&lt;/em&gt;. &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; functions are also called one-way functions, it is easy to compute a digest from a message, but it is infeasible to generate a message from a digest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79bb260f90d0cbe073d355ce942e6438e7598142" translate="yes" xml:space="preserve">
          <source>A data object, representing the times associated with a benchmark measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac46f54f73b5005df126e6f616c4786baa273c9" translate="yes" xml:space="preserve">
          <source>A datagram socket provides connectionless, unreliable messaging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5296b78b1a4a4da9a0919cbc0c122b4f8f6308c2" translate="yes" xml:space="preserve">
          <source>A default installation path to install a single gem. If the source servers multiple gems, it's not of much use and the source should one of its own.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515a61ab71bb08ca38e8ec2abbdd900d8dee43f3" translate="yes" xml:space="preserve">
          <source>A description of the current connection state. This is for diagnostic purposes only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b862cb71bee8624af550b5566d69c43bc459cb8" translate="yes" xml:space="preserve">
          <source>A directed acyclic graph that is tuned to hold named dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ff1aee260f85caa8f074f78e0a5ff901c99150" translate="yes" xml:space="preserve">
          <source>A directed edge of a {DependencyGraph} @attr [Vertex] origin The origin of the directed edge @attr [Vertex] destination The destination of the directed edge @attr [Object] requirement The requirement the directed edge represents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95aff0dee96a4e65e37adbf250a2a9dc03a8e3d6" translate="yes" xml:space="preserve">
          <source>A directive consists of a percent (%) character, zero or more flags, an optional minimum field width, an optional modifier, and a conversion specifier as follows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37a9c88089352a23c7971626ce2cf5f3e92f584" translate="yes" xml:space="preserve">
          <source>A dynamic command that handles method missing scenarios.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c51622f13a58bf91c54245b1467ace78d265a0" translate="yes" xml:space="preserve">
          <source>A failure of &lt;a href=&quot;time#method-c-parse&quot;&gt;&lt;code&gt;Time.parse&lt;/code&gt;&lt;/a&gt; should be checked, though.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="671ddbd766ce124084c27015aabc9f8e898452b3" translate="yes" xml:space="preserve">
          <source>A false value usually indicating &amp;ldquo;no value&amp;rdquo; or &amp;ldquo;unknown&amp;rdquo;. See &lt;a href=&quot;syntax/literals_rdoc&quot;&gt;literals&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8001027c25be0edcdd8602d548bea14e0c954ad" translate="yes" xml:space="preserve">
          <source>A filename can be specified as a hash value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3bc2a25caea916a7744e2f09817237e7c187aaf" translate="yes" xml:space="preserve">
          <source>A flag for &lt;a href=&quot;name#method-i-to_s&quot;&gt;&lt;code&gt;to_s&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0b64d1ff35e1ee56a2c257c9c2400988a4bf06" translate="yes" xml:space="preserve">
          <source>A flag that makes the process exit with status 1 if any error happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da0bb917846f07f720ec1f5be4fc858736081f3" translate="yes" xml:space="preserve">
          <source>A form of BODYSTRUCTURE without extension data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051f24960c89d3f916e90f1ac8630fd07ea7a5bb" translate="yes" xml:space="preserve">
          <source>A format sequence consists of a percent sign, followed by optional flags, width, and precision indicators, then terminated with a field type character. The field type controls how the corresponding &lt;code&gt;sprintf&lt;/code&gt; argument is to be interpreted, while the flags modify that interpretation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e6efeff96165e8c6d73fa14c632373fd606ca2" translate="yes" xml:space="preserve">
          <source>A generic error class raised when an invalid operation is attempted. &lt;a href=&quot;kernel#method-i-raise&quot;&gt;&lt;code&gt;Kernel#raise&lt;/code&gt;&lt;/a&gt; will raise a &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; if no &lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; class is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669ca4743cd67585031506dacd04b58053db9b2b" translate="yes" xml:space="preserve">
          <source>A generic resource abstract class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6501756d5fd9008c3e3fbf7cf8a5bae4dbb4181" translate="yes" xml:space="preserve">
          <source>A given &lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; object can only belong to one &lt;a href=&quot;threadgroup&quot;&gt;&lt;code&gt;ThreadGroup&lt;/code&gt;&lt;/a&gt; at a time; adding a thread to a new group will remove it from any previous group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91ea614171e4cee9ba85bf8dc62a4bdf915c811" translate="yes" xml:space="preserve">
          <source>A good place to view an RFC spec is &lt;a href=&quot;http://www.ietf.org/rfc.html&quot;&gt;www.ietf.org/rfc.html&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f922abfcd564a9a66210344e3cee69711658e6" translate="yes" xml:space="preserve">
          <source>A handleable error condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9510312f13535a58438890b1a9121ceb286b3329" translate="yes" xml:space="preserve">
          <source>A hash containing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7a2d0cdb7af6ba41293c1f09e4ae225ffbbb95" translate="yes" xml:space="preserve">
          <source>A hash is created using key-value pairs between &lt;code&gt;{&lt;/code&gt; and &lt;code&gt;}&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436633954462c24273cff725cc1fc3cd13793d1d" translate="yes" xml:space="preserve">
          <source>A hash representation of the build metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d7e7e2ec7bfd5e97269fa5daefda2a12e3ccd4f" translate="yes" xml:space="preserve">
          <source>A helper method, not necessary if not used internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e3df5d16b26329df7a3aa0f69c77ee55f6bde1" translate="yes" xml:space="preserve">
          <source>A heredoc allows interpolation and escaped characters. You may disable interpolation and escaping by surrounding the opening identifier with single quotes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f42ee248f08723dbb957758cf4a16ec9cf70068" translate="yes" xml:space="preserve">
          <source>A kernel message (not sendable by user processes, so not of much use to Ruby, but listed here for completeness).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9071ba391ced5051c2717ed2e013370507666840" translate="yes" xml:space="preserve">
          <source>A key can also be loaded from a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc5158280e54cd8c0004f76fb631bfc9ce2ec6f" translate="yes" xml:space="preserve">
          <source>A key can instead be loaded from an &lt;em&gt;encoded_key&lt;/em&gt; which must be PEM or DER encoded. A &lt;em&gt;pass_phrase&lt;/em&gt; can be used to decrypt the key. If none is given &lt;a href=&quot;../../openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; will prompt for the pass phrase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32e74848a67834858bc4e937e71582ed0670088" translate="yes" xml:space="preserve">
          <source>A key of the hash is a name of the named captures. A value of the hash is a string of last successful capture of corresponding group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563245a2c40802f8526f7b6c64b298c5dd6c1e68" translate="yes" xml:space="preserve">
          <source>A key of the hash is a name of the named captures. A value of the hash is an array which is list of indexes of corresponding named captures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a3f8051f554e1ab0d8d97c0ca645ce4a3a01ff" translate="yes" xml:space="preserve">
          <source>A lambda or &lt;a href=&quot;proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt;, that takes one argument, of a Fixnum, and returns the corresponding number of spaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e8f559fbb5835a35140820ddbdf74b6fbdf552" translate="yes" xml:space="preserve">
          <source>A libffi wrapper for Ruby.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ac9544106ef40645841659c9864ca825b58d76" translate="yes" xml:space="preserve">
          <source>A library like &lt;a href=&quot;optionparser&quot;&gt;&lt;code&gt;OptionParser&lt;/code&gt;&lt;/a&gt; can be used to process command-line arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c76e7d0f0e74ab46b9718608374873a13e9ee8e" translate="yes" xml:space="preserve">
          <source>A limit of 0, the default, means no upper limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5029a917656b3eee9fc1d118470b7328cdd2a8" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;aclentry&quot;&gt;&lt;code&gt;ACLEntry&lt;/code&gt;&lt;/a&gt; objects. Used to implement the allow and deny halves of an &lt;a href=&quot;../acl&quot;&gt;&lt;code&gt;ACL&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bae503c2dadb9e025ac1a7c9a87c03bc26270ed" translate="yes" xml:space="preserve">
          <source>A list of cipher names is available by calling &lt;a href=&quot;cipher#method-c-ciphers&quot;&gt;&lt;code&gt;OpenSSL::Cipher.ciphers&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4c84367d90f12980010159c696c4675309e0c9" translate="yes" xml:space="preserve">
          <source>A list of commands that should be affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab7061dface64a0031326fe3e70dd0a5cc53665" translate="yes" xml:space="preserve">
          <source>A list of exceptions and control flow operators (rescue, next, redo, break, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31844dc808bc545539255ea9300b55e19d23529" translate="yes" xml:space="preserve">
          <source>A list of supported algorithms can be obtained by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6531d670e0481fb5a8def334080b8d60cf9804" translate="yes" xml:space="preserve">
          <source>A local variable name may contain letters, numbers, an &lt;code&gt;_&lt;/code&gt; (underscore or low line) or a character with the eighth bit set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee1b71798d35eaff51b4fefd1d99904f42b7189" translate="yes" xml:space="preserve">
          <source>A local variable name must start with a lowercase US-ASCII letter or a character with the eight bit set. Typically local variables are US-ASCII compatible since the keys to type them exist on all keyboards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df5090732f9548d7c0550f986a96b2aa7524125" translate="yes" xml:space="preserve">
          <source>A log for dependency graph actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ae562bb20e090002af27418fbbaad61c863a0e" translate="yes" xml:space="preserve">
          <source>A long indicating the number of bytes of Bignum data follows, divided by two. Multiply the length by two to determine the number of bytes of data that follow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da10d4e052963e8951b8477ebe84a3fabb61c148" translate="yes" xml:space="preserve">
          <source>A loop that is similar to using the &lt;code&gt;each&lt;/code&gt; method. See &lt;a href=&quot;syntax/control_expressions_rdoc&quot;&gt;control expressions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1d6b665d02f7110e12d9950508795de762968d" translate="yes" xml:space="preserve">
          <source>A method defined like this is called a &amp;ldquo;singleton method&amp;rdquo;. &lt;code&gt;broaden&lt;/code&gt; will only exist on the string instance &lt;code&gt;greeting&lt;/code&gt;. Other strings will not have &lt;code&gt;broaden&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d047ff011b30698826f759c444c84703c04c4894" translate="yes" xml:space="preserve">
          <source>A method definition consists of the &lt;code&gt;def&lt;/code&gt; keyword, a method name, the body of the method, &lt;code&gt;return&lt;/code&gt; value and the &lt;code&gt;end&lt;/code&gt; keyword. When called the method will execute the body of the method. This method returns &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb4f80019e3623f4b3c74d35147bd0b939946b1" translate="yes" xml:space="preserve">
          <source>A method may accept arguments. The argument list follows the method name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803913ec4fe3d87fb1927bf880835e4db9cb7dc2" translate="yes" xml:space="preserve">
          <source>A method may be defined on another object. You may define a &amp;ldquo;class method&amp;rdquo; (a method that is defined on the class, not an instance of the class) like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee16843b4d0cfe9790e4ce14cfd4d7fa1337d3a" translate="yes" xml:space="preserve">
          <source>A minimum of 1000 iterations is recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29838b995420ff317b8fa87197120c8020d7b586" translate="yes" xml:space="preserve">
          <source>A mirror</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f60e74962094c3d855003b6ecf97d09e1dcdddf" translate="yes" xml:space="preserve">
          <source>A mixin that provides methods for parsing C struct and prototype signatures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a081b32bc3bfb2e9c60d509926c448f7358278" translate="yes" xml:space="preserve">
          <source>A module is created using the &lt;code&gt;module&lt;/code&gt; keyword:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd9343e9cf11a196f4f486d3bf639e4871a0629" translate="yes" xml:space="preserve">
          <source>A module may be reopened any number of times to add, change or remove functionality:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7359910230f56bd76bbefc01149ed8a0030415b0" translate="yes" xml:space="preserve">
          <source>A module that provides a two-phase lock with a counter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05adcd7eec85bb184599195525da4f19cfe599ef" translate="yes" xml:space="preserve">
          <source>A module to implement the Linda distributed computing paradigm in Ruby.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef0b6a5cf77c8603162fb2861f4422cb43ea7d1" translate="yes" xml:space="preserve">
          <source>A more complex example which also resolves parent directory is as follows. Suppose we are in bin/mygem and want the absolute path of lib/mygem.rb.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac57519835abde5dc762d0b65e7eaf5775e31395" translate="yes" xml:space="preserve">
          <source>A more subtle example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76d953ffbea0dace2e457aff95b179b0466ea86" translate="yes" xml:space="preserve">
          <source>A more usable server (serving multiple clients):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8587ed351a847671037933423e7221f2e7f165" translate="yes" xml:space="preserve">
          <source>A mutex for Digest().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3424c45add2b2f26098778ee13e6f1672954bf3c" translate="yes" xml:space="preserve">
          <source>A name for this connection. Allows you to keep your connections apart from everybody else's.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f53c62e0c100ae59ef6b8bb450a934b39cd47cf2" translate="yes" xml:space="preserve">
          <source>A name is required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ed25fee109423ec769e94f88d5a49b3d2e35fa" translate="yes" xml:space="preserve">
          <source>A name may be created from a DER encoded string &lt;em&gt;der&lt;/em&gt;, an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; representing a &lt;em&gt;distinguished_name&lt;/em&gt; or a &lt;em&gt;distinguished_name&lt;/em&gt; along with a &lt;em&gt;template&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d958d0d19aaca542a9d0fcc9aeddc577e83bff62" translate="yes" xml:space="preserve">
          <source>A namespace can be used to organize code by package or functionality that separates common names from interference by other packages. For example, the IRB namespace provides functionality for irb that prevents a collision for the common name &amp;ldquo;Context&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc37f7df6cedca8cd71987a4f90c6e92e6a8642" translate="yes" xml:space="preserve">
          <source>A new array can be created by using the literal constructor &lt;code&gt;[]&lt;/code&gt;. Arrays can contain different types of objects. For example, the array below contains an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; and a Float:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5764b187d47af5823248c0d1542d80df0de280" translate="yes" xml:space="preserve">
          <source>A new protocol is registered with the &lt;a href=&quot;drbprotocol&quot;&gt;&lt;code&gt;DRbProtocol&lt;/code&gt;&lt;/a&gt; module using the &lt;a href=&quot;drbprotocol#method-i-add_protocol&quot;&gt;&lt;code&gt;add_protocol&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ea9bbaed0f8a0c1d47e5f8240f2424c4bdceb9" translate="yes" xml:space="preserve">
          <source>A new, random IV should be created for every encryption of data. Think of the IV as a nonce (number used once) - it's public but random and unpredictable. A secure random IV can be created as follows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc884ee7931b6fca5632c864c48447d6135589b" translate="yes" xml:space="preserve">
          <source>A no-op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec0ada662baf57c2babed6e50a514f773c235f8" translate="yes" xml:space="preserve">
          <source>A non-blocking version of &lt;a href=&quot;sslsocket#method-i-sysread&quot;&gt;&lt;code&gt;sysread&lt;/code&gt;&lt;/a&gt;. Raises an &lt;a href=&quot;sslerror&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; if reading would block. If &amp;ldquo;exception: false&amp;rdquo; is passed, this method returns a symbol of :wait_readable, :wait_writable, or nil, rather than raising an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c9e78a0f705b425e6450f89770f1c79d7d00ac" translate="yes" xml:space="preserve">
          <source>A normal but significant condition occurred</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d7fb3e8c03179ea1103d06d0e4cd998af41acb5" translate="yes" xml:space="preserve">
          <source>A note about comparisons</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351e66f116e6aca72d4017839499f041a3bbf1d4" translate="yes" xml:space="preserve">
          <source>A number expressing the [RFC-822] size of the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263d1528a4caae457e0f03f376eab598f255399b" translate="yes" xml:space="preserve">
          <source>A number expressing the unique identifier of the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d8e034e047638014e23b6b06d1908618a33e3b" translate="yes" xml:space="preserve">
          <source>A number identifying the data format. &lt;strong&gt;Always 1&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93c40b6c54c0873ddc0db885e9c06a90cdfcaa5" translate="yes" xml:space="preserve">
          <source>A path to a CA certificate file, in PEM format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef418001c8eb5597f66bc08a7904bfbecde8bbc9" translate="yes" xml:space="preserve">
          <source>A path to the directory of CA certificates. The certificates must be in PEM format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540d111b82124a30543b72b420a2538809f35d7d" translate="yes" xml:space="preserve">
          <source>A plain string represents a filename suitable for the underlying operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f106be1ba7b6aef305b6c0d01da833b6c7d58862" translate="yes" xml:space="preserve">
          <source>A predefined pseudo-handle of RTLD_DEFAULT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ab815db1c2e1e42ee6f62dcb73d504d7d0528d" translate="yes" xml:space="preserve">
          <source>A predefined pseudo-handle of RTLD_NEXT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e78d812344a21fa2de78fa9a1b7d9f1b076c87c" translate="yes" xml:space="preserve">
          <source>A present standard failsafe for pretty printing any given &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505ae46ae04b3a1dd1062f247a69ad68e958284d" translate="yes" xml:space="preserve">
          <source>A pretty print for a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eefcbcd75239c9ef8ab36b22ae020bd9c83b2fc" translate="yes" xml:space="preserve">
          <source>A pretty-printer for Ruby objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094219f1d3597d22baf443e05b47b53b81e8f226" translate="yes" xml:space="preserve">
          <source>A private key instance, like &lt;a href=&quot;../../openssl/pkey/rsa&quot;&gt;&lt;code&gt;OpenSSL::PKey::RSA&lt;/code&gt;&lt;/a&gt;. This key must be the key that signed the :SSLCertificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb467029267e817584b1a25250ea4e8ffd53b039" translate="yes" xml:space="preserve">
          <source>A proc can be created with &lt;code&gt;-&amp;gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd28f9a67bc352119cea39c2dda229a94f8078f1" translate="yes" xml:space="preserve">
          <source>A process is allowed to open several different databases at the same time. A process can open a database as a &amp;ldquo;reader&amp;rdquo; or a &amp;ldquo;writer&amp;rdquo;. Whereas a reader has only read-access to the database, a writer has read- and write-access. A database can be accessed either by any number of readers or by exactly one writer at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d1cf82b2cf131a5dc4388f9b9d0a4fc4f613fa" translate="yes" xml:space="preserve">
          <source>A proxy can be set through &lt;a href=&quot;persistent#method-i-proxy-3D&quot;&gt;&lt;code&gt;proxy=&lt;/code&gt;&lt;/a&gt; or at initialization time by providing a second argument to &lt;a href=&quot;persistent#method-c-new&quot;&gt;&lt;code&gt;::new&lt;/code&gt;&lt;/a&gt;. The proxy may be the &lt;a href=&quot;../../../../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; of the proxy server or &lt;code&gt;:ENV&lt;/code&gt; which will consult environment variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cee384b92131bb70e7d3df45e3d259efaaaacdc" translate="yes" xml:space="preserve">
          <source>A quantifier followed by &lt;code&gt;+&lt;/code&gt; matches &lt;em&gt;possessively&lt;/em&gt;: once it has matched it does not backtrack. They behave like greedy quantifiers, but having matched they refuse to &amp;ldquo;give up&amp;rdquo; their match even if this jeopardises the overall match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f49a7df3ca7ecc2538dc356190107db4c9ba6f8" translate="yes" xml:space="preserve">
          <source>A range represents an interval of values. The range may include or exclude its ending value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fede87a441f9adbec7295eb19e0df6f51b1a41b" translate="yes" xml:space="preserve">
          <source>A rational number can be represented as a pair of integer numbers: a/b (b&amp;gt;0), where a is the numerator and b is the denominator. &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; a equals rational a/1 mathematically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d609ed840971d01bef8a6faef335fea449c88af" translate="yes" xml:space="preserve">
          <source>A rational object is an exact number, which helps you to write programs without any rounding errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eded78c1695cfd7d5e67ba630e180e7abf150d01" translate="yes" xml:space="preserve">
          <source>A raw socket provides low-level access for direct access or implementing network protocols</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f8e82ca2af0a7e72320d55c843ca31be9ca62d" translate="yes" xml:space="preserve">
          <source>A readable &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; that contains the command's standard output and standard error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049d7b0f8ee58bb823376810aa76e5e6cc99c842" translate="yes" xml:space="preserve">
          <source>A regexp can be matched against a string when they either share an encoding, or the regexp's encoding is &lt;em&gt;US-ASCII&lt;/em&gt; and the string's encoding is ASCII-compatible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e525bd696f844616630ab487050b1021605bdeb" translate="yes" xml:space="preserve">
          <source>A regexp interpolation, &lt;code&gt;#{}&lt;/code&gt;, also disables the assignment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531466bab433578b48929a30204cfe6044ea7e27" translate="yes" xml:space="preserve">
          <source>A regexp is usually delimited with forward slashes (&lt;code&gt;/&lt;/code&gt;). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be32ca5904265fdc9a13a5f4b47334df7c5a2b55" translate="yes" xml:space="preserve">
          <source>A regular expression is created using &amp;ldquo;/&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64cceb7ab7d16b16c3496b0daa6b4dbccdcb0225" translate="yes" xml:space="preserve">
          <source>A reliable datagram socket provides reliable delivery of messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be920c56f1ac479ec5abca50e3265a03de1afd67" translate="yes" xml:space="preserve">
          <source>A renewer must implement the &lt;code&gt;renew&lt;/code&gt; method which returns a &lt;a href=&quot;../numeric&quot;&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/a&gt;, nil, or true to indicate when the tuple has expired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c76aa8106b5571966c2f611ed805fc39c1b2e82" translate="yes" xml:space="preserve">
          <source>A representation of a &lt;a href=&quot;../dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e04289ea8bee27006eb5855a30cfba18811d4fb3" translate="yes" xml:space="preserve">
          <source>A representation of a C function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414d7f3d76478b5881ca2e638a330e5d5dbca94e" translate="yes" xml:space="preserve">
          <source>A second optional &lt;code&gt;length&lt;/code&gt; parameter can be used to limit how many entries are returned from the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54074dcd3f72d9f36b76a0aa992c98af7991a07f" translate="yes" xml:space="preserve">
          <source>A sequential packet socket provides sequenced, reliable two-way connection for datagrams</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef5a9d96430cb1c843b31c0faf43d32a3e3f468" translate="yes" xml:space="preserve">
          <source>A setter to toggle transfers in binary mode. &lt;code&gt;newmode&lt;/code&gt; is either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b918ba7863ede2f96279d0b478a508d1a34d0e1" translate="yes" xml:space="preserve">
          <source>A shortcut for appending multiple fields. Equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d05cc9cc088a0043b7bcf72e87888e92311268" translate="yes" xml:space="preserve">
          <source>A shortcut for appending multiple rows. Equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b293964fe89b22ea8fa951764e4bacbc7fb033f6" translate="yes" xml:space="preserve">
          <source>A shortcut for:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab30153feb76a6b6351f0b089d11769fae16645" translate="yes" xml:space="preserve">
          <source>A similar case is typified by the following example, which takes approximately 60 seconds to execute for me:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed7cac4136a8cce6fc1ba62ad1676debf2c4648" translate="yes" xml:space="preserve">
          <source>A simple TCP server may look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a483d786826c10aaca99c5f5ce884936b03c2b19" translate="yes" xml:space="preserve">
          <source>A simple client may look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62741139b06df1b4903432a396671298968c56e" translate="yes" xml:space="preserve">
          <source>A simple client may look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc5640c0505c7272273da8eea6264c31a7891be" translate="yes" xml:space="preserve">
          <source>A simple encoding and decoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc1c5c8ba9a0ad7d6e5f22806dfb11f3f86740b" translate="yes" xml:space="preserve">
          <source>A simple example of using &lt;code&gt;dir_string&lt;/code&gt; is as follows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d53a3481f3cecea0069cb75f1ddfebeb99f21d8" translate="yes" xml:space="preserve">
          <source>A simple interface to the &lt;a href=&quot;benchmark#method-i-benchmark&quot;&gt;&lt;code&gt;benchmark&lt;/code&gt;&lt;/a&gt; method, &lt;a href=&quot;benchmark#method-i-bm&quot;&gt;&lt;code&gt;bm&lt;/code&gt;&lt;/a&gt; generates sequential reports with labels. &lt;code&gt;label_width&lt;/code&gt; and &lt;code&gt;labels&lt;/code&gt; parameters have the same meaning as for &lt;a href=&quot;benchmark#method-i-benchmark&quot;&gt;&lt;code&gt;benchmark&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8297513616b52ddf5ef4a162599ff17a7dcea96b" translate="yes" xml:space="preserve">
          <source>A simple server might look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896b2c86d19cf1a0369b740ca8033940d7882219" translate="yes" xml:space="preserve">
          <source>A single byte containing &amp;ldquo;+&amp;rdquo; for a positive value or &amp;ldquo;-&amp;rdquo; for a negative value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e69fca2e13a8c469edb237b9227ded7a9c7dc9a" translate="yes" xml:space="preserve">
          <source>A socket bound to &lt;a href=&quot;constants#INADDR_ANY&quot;&gt;&lt;code&gt;INADDR_ANY&lt;/code&gt;&lt;/a&gt; receives packets from all interfaces and sends from the default IP address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4024d142e2a1377eda03f886cd19670d484fbecb" translate="yes" xml:space="preserve">
          <source>A socket bound to &lt;a href=&quot;socket#INADDR_ANY&quot;&gt;&lt;code&gt;INADDR_ANY&lt;/code&gt;&lt;/a&gt; receives packets from all interfaces and sends from the default IP address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9286a1848d6d3d575e838c8feae5fa6340196fca" translate="yes" xml:space="preserve">
          <source>A space at the start of s returns positive values with a leading space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d17b5c39563cd9a804b664632a10774c1e783f" translate="yes" xml:space="preserve">
          <source>A specific resolution from a given {Resolver}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb4879a0a2fa17e4ec9b3f96352a1b87ee7dce6" translate="yes" xml:space="preserve">
          <source>A state that a {Resolution} can be in @attr [String] name the name of the current requirement @attr [Array&amp;lt;Object&amp;gt;] requirements currently unsatisfied requirements @attr [DependencyGraph] activated the graph of activated dependencies @attr [Object] requirement the current requirement @attr [Object] possibilities the possibilities to satisfy the current requirement @attr [Integer] depth the depth of the resolution @attr [Hash] conflicts unresolved conflicts, indexed by dependency name @attr [Array&amp;lt;UnwindDetails&amp;gt;] unused_unwind_options unwinds for previous conflicts that weren't explored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979bbf8dece27642755b05278ace8d63e0137fc3" translate="yes" xml:space="preserve">
          <source>A state that encapsulates a set of {#requirements} with an {Array} of possibilities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf2933cb541f5dfe2dc3ba037c7843ccb3c877bc" translate="yes" xml:space="preserve">
          <source>A state that encapsulates a single possibility to fulfill the given {#requirement}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f7794955ba611c4df83b9e02945e0ab3e5a56d" translate="yes" xml:space="preserve">
          <source>A stream socket provides a sequenced, reliable two-way connection for a byte stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9730b00ea61c8550809d0dfa77222701a0762e55" translate="yes" xml:space="preserve">
          <source>A string equal to &lt;code&gt;&quot;|-&quot;&lt;/code&gt; will create another Ruby instance as a subprocess.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5531bec53a916660c9ddcea6e0977ff68de7fb1f" translate="yes" xml:space="preserve">
          <source>A string identifying the data format. &lt;strong&gt;Always &lt;code&gt;YARVInstructionSequence/SimpleDataFormat&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a479ce44d5f81e0c00620946f846a50bc1146de0" translate="yes" xml:space="preserve">
          <source>A string representing the date the bundler gem was built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982ce8e948efc99820550cdc766ab88beacffe45" translate="yes" xml:space="preserve">
          <source>A string representing the internal date of the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d190a720533af1c7392811f4d9b248def125bc7" translate="yes" xml:space="preserve">
          <source>A string starting with &lt;code&gt;&quot;|&quot;&lt;/code&gt; indicates a subprocess. The remainder of the string following the &lt;code&gt;&quot;|&quot;&lt;/code&gt; is invoked as a process with appropriate input/output channels connected to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c03854f9329f72a1f31d63c4ea62205077ac4c5" translate="yes" xml:space="preserve">
          <source>A string suitable for passing to &lt;code&gt;strftime&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b4be5bbdafb2af364e704f8712527cbd2ea9ab" translate="yes" xml:space="preserve">
          <source>A stub yaml serializer that can handle only hashes and strings (as of now).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab45367e39980c4686ee6532cb2f909982687f8f" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; that easily handles date, hour, minute, second, and offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce50062dad4091544bc06996061540f52daebc95" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; that includes the &lt;a href=&quot;comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; module and easily handles date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08683bd5439549b6d4354b36138ce5f3c6022bf" translate="yes" xml:space="preserve">
          <source>A summary of cookie string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abcd8c8d07be7069aee376b39fd7e7d928bad6cf" translate="yes" xml:space="preserve">
          <source>A summary of fields, by header, in an ASCII compatible &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22ec64ac17e04b6ebb56510dfe3c14a629c8d29" translate="yes" xml:space="preserve">
          <source>A symmetric key encrypted with the public key can only be decrypted with the corresponding private key of the recipient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c278b3d3a15600f17f2a932adc8f9171d1d79b" translate="yes" xml:space="preserve">
          <source>A synonym for &lt;code&gt;FTP.new&lt;/code&gt;, but with a mandatory host parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a40835568d4af238cc8b08a23b0d2ff3c6700da" translate="yes" xml:space="preserve">
          <source>A system daemon which has no facility value of its own.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5811e26a1eba94b538081c7d5ea3b12334acfa71" translate="yes" xml:space="preserve">
          <source>A timezone argument must have &lt;code&gt;local_to_utc&lt;/code&gt; and &lt;code&gt;utc_to_local&lt;/code&gt; methods, and may have &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;abbr&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef089304399f75d057cf67a9b75bc1bf892ddeb2" translate="yes" xml:space="preserve">
          <source>A tmp dir to be used by plugins Accepts names that get concatenated as suffix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1067625e067800d34c9d83f0c758db17990f9c0d" translate="yes" xml:space="preserve">
          <source>A tuple has expired when its expiry timer based on the &lt;code&gt;sec&lt;/code&gt; argument to initialize runs out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f5b1b7acb6ed848e88ab6e3331cd16803ddab3" translate="yes" xml:space="preserve">
          <source>A tuple is the elementary object in &lt;a href=&quot;../rinda&quot;&gt;&lt;code&gt;Rinda&lt;/code&gt;&lt;/a&gt; programming. Tuples may be matched against templates if the tuple and the template are the same size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681ce422fb54f8ab72bb9da73062831b1237e658" translate="yes" xml:space="preserve">
          <source>A tuple was added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612934696ff532f8476c75b2c3678d6de0eb8ef1" translate="yes" xml:space="preserve">
          <source>A tuple was lost after being overwritten or expiring</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd04fa789002f36314ca284d5b48d2b1272dea9f" translate="yes" xml:space="preserve">
          <source>A tuple was taken or moved</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd94825966343043881517e664f9d827b953d72" translate="yes" xml:space="preserve">
          <source>A typical implementation of &lt;code&gt;hash&lt;/code&gt; is based on the object's data while &lt;code&gt;eql?&lt;/code&gt; is usually aliased to the overridden &lt;code&gt;==&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f304d36cfbd0e15de84d723492b9c5f98f536b55" translate="yes" xml:space="preserve">
          <source>A typical scenario is attempting to yield when no block is given:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1398a7319536236f2ed6e2519b164752858bb01" translate="yes" xml:space="preserve">
          <source>A useful method if you need to remove &lt;code&gt;nil&lt;/code&gt; values from an array is &lt;a href=&quot;array#method-i-compact&quot;&gt;&lt;code&gt;compact&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4435f9a520bca03d64c191b99d06dcf0db4deac7" translate="yes" xml:space="preserve">
          <source>A user-defined class may be used as a hash key if the &lt;code&gt;hash&lt;/code&gt; and &lt;code&gt;eql?&lt;/code&gt; methods are overridden to provide meaningful behavior. By default, separate instances refer to separate hash keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da057728660a451f8195dbae96ef110de0a9fff" translate="yes" xml:space="preserve">
          <source>A utility class for managing temporary files. When you create a &lt;a href=&quot;tempfile&quot;&gt;&lt;code&gt;Tempfile&lt;/code&gt;&lt;/a&gt; object, it will create a temporary file with a unique filename. A &lt;a href=&quot;tempfile&quot;&gt;&lt;code&gt;Tempfile&lt;/code&gt;&lt;/a&gt; objects behaves just like a &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object, and you can perform all the usual file operations on it: reading data, writing data, changing its permissions, etc. So although this class does not explicitly document all instance methods supported by &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;, you can in fact call any &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; instance method on a &lt;a href=&quot;tempfile&quot;&gt;&lt;code&gt;Tempfile&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470c98c15233652a357e9ebb8e5562585bb501c1" translate="yes" xml:space="preserve">
          <source>A utility method for encoding the &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;&lt;em&gt;s&lt;/em&gt; as a URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="950d833a67c40daeeebda952bdee813be2d4567b" translate="yes" xml:space="preserve">
          <source>A utility method for escaping HTML tag characters in &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036b102eb5938705ae15a3fc66dd1c39f86bb9f3" translate="yes" xml:space="preserve">
          <source>A utility module for conversion routines, often handy in HTML generation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0717b630f1dba517f87d6252c99d4192ee7a0b98" translate="yes" xml:space="preserve">
          <source>A value &lt;em&gt;x&lt;/em&gt; returned by &lt;em&gt;block&lt;/em&gt; is decomposed if either of the following conditions is true:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2bf928005f319fb6fc5512988aa2ed31bd3a67" translate="yes" xml:space="preserve">
          <source>A variety of strategies can be used to provide useful portions of the standard library to subclasses of &lt;a href=&quot;basicobject&quot;&gt;&lt;code&gt;BasicObject&lt;/code&gt;&lt;/a&gt;. A subclass could &lt;code&gt;include Kernel&lt;/code&gt; to obtain &lt;code&gt;puts&lt;/code&gt;, &lt;code&gt;exit&lt;/code&gt;, etc. A custom Kernel-like module could be created and included or delegation can be used via &lt;a href=&quot;basicobject#method-i-method_missing&quot;&gt;&lt;code&gt;method_missing&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3946f5ae9bca795179537084183ac7520aac7b" translate="yes" xml:space="preserve">
          <source>A vertex in a {DependencyGraph} that encapsulates a {#name} and a {#payload}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8fc0175e892c3887d8e9dc25820ec9dc39d5d0" translate="yes" xml:space="preserve">
          <source>A very simple `make' like tool can be implemented as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dabde5f0017b5c49560e2f20b03613c882815204" translate="yes" xml:space="preserve">
          <source>A very simple example is this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c132202a00e402048b52477a84c0146595c9a32" translate="yes" xml:space="preserve">
          <source>A warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88deac843a5838e8b41c25fdd1b9b18448011a34" translate="yes" xml:space="preserve">
          <source>A wrapper class to use a &lt;a href=&quot;../stringio&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt; object as the body and switch to a TempFile when the passed threshold is passed. Initialize the data from the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f804ac53d66a0a8005e4ac9da443651d24dda9" translate="yes" xml:space="preserve">
          <source>A writable &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; that is the command's standard input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82243a82de61228e26a13314f019d8115b04d6ef" translate="yes" xml:space="preserve">
          <source>ABBR_DAYNAMES</source>
          <target state="translated">ABBR_DAYNAMES</target>
        </trans-unit>
        <trans-unit id="798ac010b77f5a9b6404e786c2b6a50487e03b7b" translate="yes" xml:space="preserve">
          <source>ABBR_MONTHNAMES</source>
          <target state="translated">ABBR_MONTHNAMES</target>
        </trans-unit>
        <trans-unit id="374db9dc71bb824e9355195ce7f550fb0930cbe4" translate="yes" xml:space="preserve">
          <source>ABI check</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c74eaad630c2a3e8b4134e3c93a8adbba01593" translate="yes" xml:space="preserve">
          <source>AC#ac_arg_disable</source>
          <target state="translated">AC#ac_arg_disable</target>
        </trans-unit>
        <trans-unit id="d318bfd150b5ed9b594f4fe605430a1dc188b56b" translate="yes" xml:space="preserve">
          <source>AC#ac_arg_enable</source>
          <target state="translated">AC#ac_arg_enable</target>
        </trans-unit>
        <trans-unit id="e72702fce16879fb96c6e4bc0f58971bba1ca317" translate="yes" xml:space="preserve">
          <source>AC#ac_arg_with</source>
          <target state="translated">AC#ac_arg_with</target>
        </trans-unit>
        <trans-unit id="3f08cc0b30779a95143aa2ad65f0531b4ad12960" translate="yes" xml:space="preserve">
          <source>ACL</source>
          <target state="translated">ACL</target>
        </trans-unit>
        <trans-unit id="90ccdc7f6af08f32647a0e2128e990da1facb71f" translate="yes" xml:space="preserve">
          <source>ACL#allow_addr?</source>
          <target state="translated">ACL#allow_addr?</target>
        </trans-unit>
        <trans-unit id="f4bd8b22e22963713332ad47569c26e5db74ad90" translate="yes" xml:space="preserve">
          <source>ACL#allow_socket?</source>
          <target state="translated">ACL#allow_socket?</target>
        </trans-unit>
        <trans-unit id="140a7a0744546ccf204c545bc5708f96e79b7a78" translate="yes" xml:space="preserve">
          <source>ACL#install_list</source>
          <target state="translated">ACL#install_list</target>
        </trans-unit>
        <trans-unit id="26672c10dacb423f4a55e85fcbf223c179ed4a78" translate="yes" xml:space="preserve">
          <source>ACL::ACLEntry</source>
          <target state="translated">ACL::ACLEntry</target>
        </trans-unit>
        <trans-unit id="5acb8c7eb8554e70f3358307d8878d205cc5f836" translate="yes" xml:space="preserve">
          <source>ACL::ACLEntry#dot_pat</source>
          <target state="translated">ACL::ACLEntry#dot_pat</target>
        </trans-unit>
        <trans-unit id="f55d2244c8254494b31f3d78cf27ca73a0c7cff9" translate="yes" xml:space="preserve">
          <source>ACL::ACLEntry#dot_pat_str</source>
          <target state="translated">ACL::ACLEntry#dot_pat_str</target>
        </trans-unit>
        <trans-unit id="e14a678552558f54acb67f221a88fbba8aa1e7cd" translate="yes" xml:space="preserve">
          <source>ACL::ACLEntry#match</source>
          <target state="translated">ACL::ACLEntry#match</target>
        </trans-unit>
        <trans-unit id="e61643973b16eeba0ee428c104874b678525475c" translate="yes" xml:space="preserve">
          <source>ACL::ACLEntry::new</source>
          <target state="translated">ACL::ACLEntry::new</target>
        </trans-unit>
        <trans-unit id="87a48a59c916bc16e3ba8de520869fb857dc1ab5" translate="yes" xml:space="preserve">
          <source>ACL::ACLList</source>
          <target state="translated">ACL::ACLList</target>
        </trans-unit>
        <trans-unit id="ae163c2d8f6a73e39c8519bee07e7694ccd883a7" translate="yes" xml:space="preserve">
          <source>ACL::ACLList#add</source>
          <target state="translated">ACL::ACLList#add</target>
        </trans-unit>
        <trans-unit id="dee7a856768b636a4d1ad2481e076daa5bd9cdaf" translate="yes" xml:space="preserve">
          <source>ACL::ACLList#match</source>
          <target state="translated">ACL::ACLList#match</target>
        </trans-unit>
        <trans-unit id="4544ee31015a70a20720b58ca4bbee5eb7825cf5" translate="yes" xml:space="preserve">
          <source>ACL::ACLList::new</source>
          <target state="translated">ACL::ACLList::new</target>
        </trans-unit>
        <trans-unit id="1be342dc424aaa5221fd7bda2a104dedfc74a7cd" translate="yes" xml:space="preserve">
          <source>ACL::new</source>
          <target state="translated">ACL::new</target>
        </trans-unit>
        <trans-unit id="e1d92af9e06f7e424f36dc2674a78412b39fedf9" translate="yes" xml:space="preserve">
          <source>AFTER_OUTPUT</source>
          <target state="translated">AFTER_OUTPUT</target>
        </trans-unit>
        <trans-unit id="3bc1580c8a50d05cecf7c2755486a358c01a979a" translate="yes" xml:space="preserve">
          <source>AF_APPLETALK</source>
          <target state="translated">AF_APPLETALK</target>
        </trans-unit>
        <trans-unit id="8a462854c4268694d96af743b6fbbab2d6419ccf" translate="yes" xml:space="preserve">
          <source>AF_ATM</source>
          <target state="translated">AF_ATM</target>
        </trans-unit>
        <trans-unit id="b680a702cef9137a0ce329f3a36e466f042a8b92" translate="yes" xml:space="preserve">
          <source>AF_AX25</source>
          <target state="translated">AF_AX25</target>
        </trans-unit>
        <trans-unit id="5d0c608453938414f02c3968fc31930328f1909e" translate="yes" xml:space="preserve">
          <source>AF_CCITT</source>
          <target state="translated">AF_CCITT</target>
        </trans-unit>
        <trans-unit id="242b260477a56ed3c3c7a5c44404f95aa0cbf430" translate="yes" xml:space="preserve">
          <source>AF_CHAOS</source>
          <target state="translated">AF_CHAOS</target>
        </trans-unit>
        <trans-unit id="46c32939b350964540c3b6e30a6fdc7edb60e18b" translate="yes" xml:space="preserve">
          <source>AF_CNT</source>
          <target state="translated">AF_CNT</target>
        </trans-unit>
        <trans-unit id="67ab2943e3ef94aa491b6698675c4fc105b45bfc" translate="yes" xml:space="preserve">
          <source>AF_COIP</source>
          <target state="translated">AF_COIP</target>
        </trans-unit>
        <trans-unit id="4744cd62576fa552fa250e66c60fb6aa1348e6d5" translate="yes" xml:space="preserve">
          <source>AF_DATAKIT</source>
          <target state="translated">AF_DATAKIT</target>
        </trans-unit>
        <trans-unit id="10d83471436ac6b50219bbd3988572e4c246de28" translate="yes" xml:space="preserve">
          <source>AF_DEC</source>
          <target state="translated">AF_DEC</target>
        </trans-unit>
        <trans-unit id="8216526c6a96e1639f81c33f98331387e5aa5492" translate="yes" xml:space="preserve">
          <source>AF_DLI</source>
          <target state="translated">AF_DLI</target>
        </trans-unit>
        <trans-unit id="42d1613af500f0e7382d71ed11e028ba9d946f7f" translate="yes" xml:space="preserve">
          <source>AF_E164</source>
          <target state="translated">AF_E164</target>
        </trans-unit>
        <trans-unit id="42550365d7d53278d86b477197ed72dc00bdb1a6" translate="yes" xml:space="preserve">
          <source>AF_ECMA</source>
          <target state="translated">AF_ECMA</target>
        </trans-unit>
        <trans-unit id="b4daf25ead35a182b09872a47ea27f717d19ea5a" translate="yes" xml:space="preserve">
          <source>AF_HYLINK</source>
          <target state="translated">AF_HYLINK</target>
        </trans-unit>
        <trans-unit id="0576e05581f880b1081abb160d21bf404bf5cb4e" translate="yes" xml:space="preserve">
          <source>AF_IMPLINK</source>
          <target state="translated">AF_IMPLINK</target>
        </trans-unit>
        <trans-unit id="26c55362b4ef9addfe409ee3b7642dcb750c3225" translate="yes" xml:space="preserve">
          <source>AF_INET</source>
          <target state="translated">AF_INET</target>
        </trans-unit>
        <trans-unit id="fb87ea1299fb79ac5fd6c47d5b064f96793a147f" translate="yes" xml:space="preserve">
          <source>AF_INET6</source>
          <target state="translated">AF_INET6</target>
        </trans-unit>
        <trans-unit id="8d63ab16f5756010512c7aeb6480e9c7a8a8a03d" translate="yes" xml:space="preserve">
          <source>AF_IPX</source>
          <target state="translated">AF_IPX</target>
        </trans-unit>
        <trans-unit id="96c6222bc2000e9a99bfa0b480692e1f63a4912d" translate="yes" xml:space="preserve">
          <source>AF_ISDN</source>
          <target state="translated">AF_ISDN</target>
        </trans-unit>
        <trans-unit id="926a367eae94166cc62ef1fcdaba8ca63129acf0" translate="yes" xml:space="preserve">
          <source>AF_ISO</source>
          <target state="translated">AF_ISO</target>
        </trans-unit>
        <trans-unit id="1278b765ccab08f090ca8da8b11c78ec1c156888" translate="yes" xml:space="preserve">
          <source>AF_LAT</source>
          <target state="translated">AF_LAT</target>
        </trans-unit>
        <trans-unit id="2a1b1e7fd5c655ce9f4634d044f5ba5c1cb5b6bf" translate="yes" xml:space="preserve">
          <source>AF_LINK</source>
          <target state="translated">AF_LINK</target>
        </trans-unit>
        <trans-unit id="b39b91c1cdb413e4859dc53a940ee7408acb869b" translate="yes" xml:space="preserve">
          <source>AF_LOCAL</source>
          <target state="translated">AF_LOCAL</target>
        </trans-unit>
        <trans-unit id="f029a08883eb170766fc9cc3da0f1bd5dd27571c" translate="yes" xml:space="preserve">
          <source>AF_MAX</source>
          <target state="translated">AF_MAX</target>
        </trans-unit>
        <trans-unit id="7c61da49ae25643ba3c98b7aabe4b7a3724a38a9" translate="yes" xml:space="preserve">
          <source>AF_NATM</source>
          <target state="translated">AF_NATM</target>
        </trans-unit>
        <trans-unit id="65e5a905d9175312269b1c05d2077ed23d360da2" translate="yes" xml:space="preserve">
          <source>AF_NDRV</source>
          <target state="translated">AF_NDRV</target>
        </trans-unit>
        <trans-unit id="5d8fa9551a2189554ce796d465a2553ab8c0c63f" translate="yes" xml:space="preserve">
          <source>AF_NETBIOS</source>
          <target state="translated">AF_NETBIOS</target>
        </trans-unit>
        <trans-unit id="db099e3de3ac2dc70bf30180097176bb199569ae" translate="yes" xml:space="preserve">
          <source>AF_NETGRAPH</source>
          <target state="translated">AF_NETGRAPH</target>
        </trans-unit>
        <trans-unit id="016a228383ff4e168152f5d2a77f9fe417cb2ddd" translate="yes" xml:space="preserve">
          <source>AF_NS</source>
          <target state="translated">AF_NS</target>
        </trans-unit>
        <trans-unit id="7ada76522ceb6ccf7e21f0bfc64301f4897aeb58" translate="yes" xml:space="preserve">
          <source>AF_OSI</source>
          <target state="translated">AF_OSI</target>
        </trans-unit>
        <trans-unit id="1b545989d6182795af5e49be2b38e875b6ea3e18" translate="yes" xml:space="preserve">
          <source>AF_PACKET</source>
          <target state="translated">AF_PACKET</target>
        </trans-unit>
        <trans-unit id="82470daefaaa6c348d73ae5895141f236610942e" translate="yes" xml:space="preserve">
          <source>AF_PPP</source>
          <target state="translated">AF_PPP</target>
        </trans-unit>
        <trans-unit id="7729049c108f8b1a993cbe13ea9dee0160a9f099" translate="yes" xml:space="preserve">
          <source>AF_PUP</source>
          <target state="translated">AF_PUP</target>
        </trans-unit>
        <trans-unit id="808fb47dfad93e1538de5c006355a4ffa6ce9b05" translate="yes" xml:space="preserve">
          <source>AF_ROUTE</source>
          <target state="translated">AF_ROUTE</target>
        </trans-unit>
        <trans-unit id="312ec2afec876e8c285531e367b81847b57ad1e0" translate="yes" xml:space="preserve">
          <source>AF_SIP</source>
          <target state="translated">AF_SIP</target>
        </trans-unit>
        <trans-unit id="3db1640c2a546f8fcdb4dddf9a7dc3a829113981" translate="yes" xml:space="preserve">
          <source>AF_SNA</source>
          <target state="translated">AF_SNA</target>
        </trans-unit>
        <trans-unit id="aa55b42e4e6e921662f0efc80cf53a02017b7653" translate="yes" xml:space="preserve">
          <source>AF_SYSTEM</source>
          <target state="translated">AF_SYSTEM</target>
        </trans-unit>
        <trans-unit id="be7a7252b53c10bba48ebf83af95e4d63af628ba" translate="yes" xml:space="preserve">
          <source>AF_UNIX</source>
          <target state="translated">AF_UNIX</target>
        </trans-unit>
        <trans-unit id="90cc16aa411a0a33ec1a02adb1b7ded56ae11d40" translate="yes" xml:space="preserve">
          <source>AF_UNSPEC</source>
          <target state="translated">AF_UNSPEC</target>
        </trans-unit>
        <trans-unit id="0f43913777fae0e1696077e4054ee9c4534734d7" translate="yes" xml:space="preserve">
          <source>AI_ADDRCONFIG</source>
          <target state="translated">AI_ADDRCONFIG</target>
        </trans-unit>
        <trans-unit id="82dba119486e59d8473c5c3f20d17423ec47786e" translate="yes" xml:space="preserve">
          <source>AI_ALL</source>
          <target state="translated">AI_ALL</target>
        </trans-unit>
        <trans-unit id="3537445adaca536cab2a7686d43dc5160e9a6779" translate="yes" xml:space="preserve">
          <source>AI_CANONNAME</source>
          <target state="translated">AI_CANONNAME</target>
        </trans-unit>
        <trans-unit id="8afb8095491ce613e9ddabd74c83917a4bdfa584" translate="yes" xml:space="preserve">
          <source>AI_DEFAULT</source>
          <target state="translated">AI_DEFAULT</target>
        </trans-unit>
        <trans-unit id="a002dea26f08aace1553d14bb0ddd7dceb2e1a19" translate="yes" xml:space="preserve">
          <source>AI_MASK</source>
          <target state="translated">AI_MASK</target>
        </trans-unit>
        <trans-unit id="4620c46aeacbc229eafc938539c71b493eb24304" translate="yes" xml:space="preserve">
          <source>AI_NUMERICHOST</source>
          <target state="translated">AI_NUMERICHOST</target>
        </trans-unit>
        <trans-unit id="90243ea329df4e2c732bf0055051ad531b272da1" translate="yes" xml:space="preserve">
          <source>AI_NUMERICSERV</source>
          <target state="translated">AI_NUMERICSERV</target>
        </trans-unit>
        <trans-unit id="09260387d29750af08963df2cc73f983c3e0f300" translate="yes" xml:space="preserve">
          <source>AI_PASSIVE</source>
          <target state="translated">AI_PASSIVE</target>
        </trans-unit>
        <trans-unit id="badcba6b8c35c1b95359c366f7ea7e65a4fedb39" translate="yes" xml:space="preserve">
          <source>AI_V4MAPPED</source>
          <target state="translated">AI_V4MAPPED</target>
        </trans-unit>
        <trans-unit id="101b9ffde128c7b12d85dee8176eec63445a0799" translate="yes" xml:space="preserve">
          <source>AI_V4MAPPED_CFG</source>
          <target state="translated">AI_V4MAPPED_CFG</target>
        </trans-unit>
        <trans-unit id="2cab3b8f90cec6951e2a87487c0faa3758bb90b1" translate="yes" xml:space="preserve">
          <source>ALIGN_CHAR</source>
          <target state="translated">ALIGN_CHAR</target>
        </trans-unit>
        <trans-unit id="81c45e5fc13adbec5056655d48999481b6f37b3b" translate="yes" xml:space="preserve">
          <source>ALIGN_DOUBLE</source>
          <target state="translated">ALIGN_DOUBLE</target>
        </trans-unit>
        <trans-unit id="4365691f464209acd9d4106ed202732a3d04083c" translate="yes" xml:space="preserve">
          <source>ALIGN_FLOAT</source>
          <target state="translated">ALIGN_FLOAT</target>
        </trans-unit>
        <trans-unit id="ee169aab341ed6b8ae4f68d1843535243bde837b" translate="yes" xml:space="preserve">
          <source>ALIGN_INT</source>
          <target state="translated">ALIGN_INT</target>
        </trans-unit>
        <trans-unit id="46702159b3a417d02780dfa15ac883bdc92eefbb" translate="yes" xml:space="preserve">
          <source>ALIGN_INTPTR_T</source>
          <target state="translated">ALIGN_INTPTR_T</target>
        </trans-unit>
        <trans-unit id="fa2f0e9e64ae3351df3885b6408f42a4eac719c8" translate="yes" xml:space="preserve">
          <source>ALIGN_LONG</source>
          <target state="translated">ALIGN_LONG</target>
        </trans-unit>
        <trans-unit id="a4b88f3d815e92961b7f9ed56c2ba57014c42766" translate="yes" xml:space="preserve">
          <source>ALIGN_LONG_LONG</source>
          <target state="translated">ALIGN_LONG_LONG</target>
        </trans-unit>
        <trans-unit id="c3b92de43b810b5c81711de3611628fa8466e70b" translate="yes" xml:space="preserve">
          <source>ALIGN_PTRDIFF_T</source>
          <target state="translated">ALIGN_PTRDIFF_T</target>
        </trans-unit>
        <trans-unit id="8b806aaaac75a80ec3ac320082b8da238f85d316" translate="yes" xml:space="preserve">
          <source>ALIGN_SHORT</source>
          <target state="translated">ALIGN_SHORT</target>
        </trans-unit>
        <trans-unit id="f58c841d1b08d96a049673262371fadef19247b3" translate="yes" xml:space="preserve">
          <source>ALIGN_SIZE_T</source>
          <target state="translated">ALIGN_SIZE_T</target>
        </trans-unit>
        <trans-unit id="f44466611ba7dbeb74ba99f4b4c16b3206d1632b" translate="yes" xml:space="preserve">
          <source>ALIGN_SSIZE_T</source>
          <target state="translated">ALIGN_SSIZE_T</target>
        </trans-unit>
        <trans-unit id="a30a93a5eecb3b487acd95a45f654653314e2aca" translate="yes" xml:space="preserve">
          <source>ALIGN_UINTPTR_T</source>
          <target state="translated">ALIGN_UINTPTR_T</target>
        </trans-unit>
        <trans-unit id="c0ea1b16e4e7222c805428b5917ed1be056fdadc" translate="yes" xml:space="preserve">
          <source>ALIGN_VOIDP</source>
          <target state="translated">ALIGN_VOIDP</target>
        </trans-unit>
        <trans-unit id="2aa4234804bc74aa56f157a02abca60f9cbdb2e4" translate="yes" xml:space="preserve">
          <source>ALLOW_DENY</source>
          <target state="translated">ALLOW_DENY</target>
        </trans-unit>
        <trans-unit id="65add0f8707dc7de7412dde69911fc9a7ccef78e" translate="yes" xml:space="preserve">
          <source>ALPHANUMERIC</source>
          <target state="translated">ALPHANUMERIC</target>
        </trans-unit>
        <trans-unit id="b83f012e8ce7248c4300a667697403148ddb6588" translate="yes" xml:space="preserve">
          <source>ALT_SEPARATOR</source>
          <target state="translated">ALT_SEPARATOR</target>
        </trans-unit>
        <trans-unit id="c2f934cb8cab6c1b3af0d4f2fdd824eabafb6bf4" translate="yes" xml:space="preserve">
          <source>AND</source>
          <target state="translated">AND</target>
        </trans-unit>
        <trans-unit id="c0508fdb76b29401c285817f8748a044734541e8" translate="yes" xml:space="preserve">
          <source>ANSWERED</source>
          <target state="translated">ANSWERED</target>
        </trans-unit>
        <trans-unit id="90d80a2c547febba458b4f7daa2fa4a76d933231" translate="yes" xml:space="preserve">
          <source>API_REQUEST_LIMIT</source>
          <target state="translated">API_REQUEST_LIMIT</target>
        </trans-unit>
        <trans-unit id="b97b9f6ee76ec8ced858dbae75ed74fd7dde2745" translate="yes" xml:space="preserve">
          <source>API_REQUEST_SIZE</source>
          <target state="translated">API_REQUEST_SIZE</target>
        </trans-unit>
        <trans-unit id="ff371b137db17a9da2c0e97a34e61b2e06341db5" translate="yes" xml:space="preserve">
          <source>APOP(isapop)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c670f22d8bd765867d5c5478e7418a6735574d" translate="yes" xml:space="preserve">
          <source>APOPSession</source>
          <target state="translated">APOPSession</target>
        </trans-unit>
        <trans-unit id="dcd841a84977bdbe6867616933e41e140bdbd8b2" translate="yes" xml:space="preserve">
          <source>APOPSession#apop?</source>
          <target state="translated">APOPSession#apop?</target>
        </trans-unit>
        <trans-unit id="025e07020e93e25579c1a9621d736dca0c1f26de" translate="yes" xml:space="preserve">
          <source>APPEND</source>
          <target state="translated">APPEND</target>
        </trans-unit>
        <trans-unit id="8f0301af9c5b21db7baf9f91dba0bbd459a2c175" translate="yes" xml:space="preserve">
          <source>ARGF</source>
          <target state="translated">ARGF</target>
        </trans-unit>
        <trans-unit id="5ee3fa08f54c579eba7ad55ef16ec361ffc9fca6" translate="yes" xml:space="preserve">
          <source>ARGF#argv</source>
          <target state="translated">ARGF#argv</target>
        </trans-unit>
        <trans-unit id="eec3a67b0ab45799a36a9d301974ded56b87afda" translate="yes" xml:space="preserve">
          <source>ARGF#each</source>
          <target state="translated">ARGF#each</target>
        </trans-unit>
        <trans-unit id="0b905e203552a55561261cb42eb9d3fe4591178b" translate="yes" xml:space="preserve">
          <source>ARGF#eof</source>
          <target state="translated">ARGF#eof</target>
        </trans-unit>
        <trans-unit id="344b71e6203eb87d32c063f3347ef5d23ab97d99" translate="yes" xml:space="preserve">
          <source>ARGF#eof?</source>
          <target state="translated">ARGF#eof?</target>
        </trans-unit>
        <trans-unit id="3611f290de62d4d009b759923eb226c4e0d53132" translate="yes" xml:space="preserve">
          <source>ARGF#file</source>
          <target state="translated">ARGF#file</target>
        </trans-unit>
        <trans-unit id="0c93b11a08f38df6e79f3fa8e6dbe0f4e07f36e2" translate="yes" xml:space="preserve">
          <source>ARGF#getc</source>
          <target state="translated">ARGF#getc</target>
        </trans-unit>
        <trans-unit id="f4defd78d5a9ff82c438303f694918f85c6e120a" translate="yes" xml:space="preserve">
          <source>ARGF#gets</source>
          <target state="translated">ARGF#gets</target>
        </trans-unit>
        <trans-unit id="cc1f79a690584a88668539a23e2c2d2763f6cf14" translate="yes" xml:space="preserve">
          <source>ARGF#path</source>
          <target state="translated">ARGF#path</target>
        </trans-unit>
        <trans-unit id="bb1c69ded185f64d67c41eeba3f043cce190fd03" translate="yes" xml:space="preserve">
          <source>ARGF#pos</source>
          <target state="translated">ARGF#pos</target>
        </trans-unit>
        <trans-unit id="4c0404d55cc0fe9c6fa608a0c7fd4af14abc6d16" translate="yes" xml:space="preserve">
          <source>ARGF#pos=</source>
          <target state="translated">ARGF#pos=</target>
        </trans-unit>
        <trans-unit id="b406074ad68f6777cdee802efd4f7261a6315577" translate="yes" xml:space="preserve">
          <source>ARGF#putc</source>
          <target state="translated">ARGF#putc</target>
        </trans-unit>
        <trans-unit id="f5a9f79910d1836604e566a86b210229c17a7087" translate="yes" xml:space="preserve">
          <source>ARGF#puts</source>
          <target state="translated">ARGF#puts</target>
        </trans-unit>
        <trans-unit id="789d24f8a7d1da758dac1dbc5ca76ab6b9222859" translate="yes" xml:space="preserve">
          <source>ARGF#read</source>
          <target state="translated">ARGF#read</target>
        </trans-unit>
        <trans-unit id="9c68328bfdf73e536f3ee326349f962c61aed998" translate="yes" xml:space="preserve">
          <source>ARGF#seek</source>
          <target state="translated">ARGF#seek</target>
        </trans-unit>
        <trans-unit id="f37b5670b5797bc9054f75b14b11e0fa1058dfec" translate="yes" xml:space="preserve">
          <source>ARGF#skip</source>
          <target state="translated">ARGF#skip</target>
        </trans-unit>
        <trans-unit id="16dffd09014f14daa12a00929568a875efe5c559" translate="yes" xml:space="preserve">
          <source>ARGF#tell</source>
          <target state="translated">ARGF#tell</target>
        </trans-unit>
        <trans-unit id="d9d7cd3dc5732facffe3ebecebd8a81968121593" translate="yes" xml:space="preserve">
          <source>ARGF#to_a</source>
          <target state="translated">ARGF#to_a</target>
        </trans-unit>
        <trans-unit id="73f0d9abcbfd45adef4db1f40db61cb060e4c568" translate="yes" xml:space="preserve">
          <source>ARGF#to_i</source>
          <target state="translated">ARGF#to_i</target>
        </trans-unit>
        <trans-unit id="2e56872e6fffd6e4e4dfdf7038de0d949131cf6b" translate="yes" xml:space="preserve">
          <source>ARGF#to_s</source>
          <target state="translated">ARGF#to_s</target>
        </trans-unit>
        <trans-unit id="749e4fa81e4cd365697c47f6bcc7d7ef0fcc4ce8" translate="yes" xml:space="preserve">
          <source>ARGUMENT_FLAGS</source>
          <target state="translated">ARGUMENT_FLAGS</target>
        </trans-unit>
        <trans-unit id="3669288cabd0e6c21385584c21cb897733b8578f" translate="yes" xml:space="preserve">
          <source>ARGV</source>
          <target state="translated">ARGV</target>
        </trans-unit>
        <trans-unit id="0dbd8fe4d9e3c2b3535df241b66b4aa638476807" translate="yes" xml:space="preserve">
          <source>ARPANET IMP protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189ce35e7d9f573bfeb71fa7e155cb3942727c59" translate="yes" xml:space="preserve">
          <source>ARRAY_KEYS</source>
          <target state="translated">ARRAY_KEYS</target>
        </trans-unit>
        <trans-unit id="ff0ec7e16a5f5f7113c54a54cad8d211af7e1a9f" translate="yes" xml:space="preserve">
          <source>ARRAY_REGEX</source>
          <target state="translated">ARRAY_REGEX</target>
        </trans-unit>
        <trans-unit id="d00bb3f3b7c7b8815b6dcf237dd16aab9744eca8" translate="yes" xml:space="preserve">
          <source>AS</source>
          <target state="translated">AS</target>
        </trans-unit>
        <trans-unit id="94090230b1f8c256f7ac5dc5a70bd3b20ee4ff15" translate="yes" xml:space="preserve">
          <source>ASCII</source>
          <target state="translated">ASCII</target>
        </trans-unit>
        <trans-unit id="5ab8f29d0b87385a23b5cbb3362a81bb45aa0f65" translate="yes" xml:space="preserve">
          <source>ASN.1 class hierarchy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5efa5ddcec8116c7b2c3931a072d8c1c867da2" translate="yes" xml:space="preserve">
          <source>ASN1::ASN1Data</source>
          <target state="translated">ASN1::ASN1Data</target>
        </trans-unit>
        <trans-unit id="df3156fa4e4f568c7fe8e511d205e10265ed80e3" translate="yes" xml:space="preserve">
          <source>ASN1::ASN1Data#indefinite_length</source>
          <target state="translated">ASN1::ASN1Data#indefinite_length</target>
        </trans-unit>
        <trans-unit id="a7a341f77b8074174c5ffbe98b68537d4f62281c" translate="yes" xml:space="preserve">
          <source>ASN1::ASN1Data#infinite_length</source>
          <target state="translated">ASN1::ASN1Data#infinite_length</target>
        </trans-unit>
        <trans-unit id="7d915ca9307dd2b681cb576398901ce613ded1c7" translate="yes" xml:space="preserve">
          <source>ASN1::ASN1Data#tag</source>
          <target state="translated">ASN1::ASN1Data#tag</target>
        </trans-unit>
        <trans-unit id="b12b5a716e7dd6836a4fc84c6b7e61d3926cc58a" translate="yes" xml:space="preserve">
          <source>ASN1::ASN1Data#tag_class</source>
          <target state="translated">ASN1::ASN1Data#tag_class</target>
        </trans-unit>
        <trans-unit id="1cf97fee20fa98804b4c8ce7b0bb31f4b9d21323" translate="yes" xml:space="preserve">
          <source>ASN1::ASN1Data#to_der</source>
          <target state="translated">ASN1::ASN1Data#to_der</target>
        </trans-unit>
        <trans-unit id="ed9c3537f52463dbd8060c8c735321a36b0e2b71" translate="yes" xml:space="preserve">
          <source>ASN1::ASN1Data#value</source>
          <target state="translated">ASN1::ASN1Data#value</target>
        </trans-unit>
        <trans-unit id="532421b49984c4154a8705414874dafcf44271af" translate="yes" xml:space="preserve">
          <source>ASN1::ASN1Data::new</source>
          <target state="translated">ASN1::ASN1Data::new</target>
        </trans-unit>
        <trans-unit id="d29b8a59321c37f1b3bf16aebdd86a0459e34a7f" translate="yes" xml:space="preserve">
          <source>ASN1::ASN1Error</source>
          <target state="translated">ASN1::ASN1Error</target>
        </trans-unit>
        <trans-unit id="d8b72637f4fce95631332447bc6a50329f7f5603" translate="yes" xml:space="preserve">
          <source>ASN1::Constructive</source>
          <target state="translated">ASN1::Constructive</target>
        </trans-unit>
        <trans-unit id="af4098c3c3bf2786eac6d1458a970810e8be5950" translate="yes" xml:space="preserve">
          <source>ASN1::Constructive#each</source>
          <target state="translated">ASN1::Constructive#each</target>
        </trans-unit>
        <trans-unit id="7b469a5cd9777fbadb5239e8a2ba1f80e1fd2620" translate="yes" xml:space="preserve">
          <source>ASN1::Constructive#tagging</source>
          <target state="translated">ASN1::Constructive#tagging</target>
        </trans-unit>
        <trans-unit id="5ffbf413743955a45bf4ce55015e972941021bb3" translate="yes" xml:space="preserve">
          <source>ASN1::Constructive#to_der</source>
          <target state="translated">ASN1::Constructive#to_der</target>
        </trans-unit>
        <trans-unit id="34c2b1fdfdbe4f6f8ee3b185a3a1e0d9948f67d8" translate="yes" xml:space="preserve">
          <source>ASN1::Constructive::new</source>
          <target state="translated">ASN1::Constructive::new</target>
        </trans-unit>
        <trans-unit id="b7a1593b00987100b824089d8e37e573eaf70e5e" translate="yes" xml:space="preserve">
          <source>ASN1::ObjectId</source>
          <target state="translated">ASN1::ObjectId</target>
        </trans-unit>
        <trans-unit id="eef23b090dcba4349c2722432260184b27a2a06a" translate="yes" xml:space="preserve">
          <source>ASN1::ObjectId#ln</source>
          <target state="translated">ASN1::ObjectId#ln</target>
        </trans-unit>
        <trans-unit id="cea8c6554dd0cab9b52ff8448bcc8498b2b44fb5" translate="yes" xml:space="preserve">
          <source>ASN1::ObjectId#long_name</source>
          <target state="translated">ASN1::ObjectId#long_name</target>
        </trans-unit>
        <trans-unit id="6da375ce1e7a7633a28c04f4675203097291e331" translate="yes" xml:space="preserve">
          <source>ASN1::ObjectId#oid</source>
          <target state="translated">ASN1::ObjectId#oid</target>
        </trans-unit>
        <trans-unit id="940e5b77547075832fc4dc101ea2698848f69527" translate="yes" xml:space="preserve">
          <source>ASN1::ObjectId#short_name</source>
          <target state="translated">ASN1::ObjectId#short_name</target>
        </trans-unit>
        <trans-unit id="3c69c1b194b1b60ce623b24c916422caab15ad6c" translate="yes" xml:space="preserve">
          <source>ASN1::ObjectId#sn</source>
          <target state="translated">ASN1::ObjectId#sn</target>
        </trans-unit>
        <trans-unit id="cc1b2d84deac6a247656f381814b68c875bb5aca" translate="yes" xml:space="preserve">
          <source>ASN1::ObjectId::register</source>
          <target state="translated">ASN1::ObjectId::register</target>
        </trans-unit>
        <trans-unit id="5c0b7a3b8b41eeb5f9fc9b39d3b4e2b83679300b" translate="yes" xml:space="preserve">
          <source>ASN1::Primitive</source>
          <target state="translated">ASN1::Primitive</target>
        </trans-unit>
        <trans-unit id="31bc3a3954afe07994a15a754755006797716fb9" translate="yes" xml:space="preserve">
          <source>ASN1::Primitive#tagging</source>
          <target state="translated">ASN1::Primitive#tagging</target>
        </trans-unit>
        <trans-unit id="b2507904cc2263f9f037b87ec953cae9945ab93d" translate="yes" xml:space="preserve">
          <source>ASN1::Primitive#to_der</source>
          <target state="translated">ASN1::Primitive#to_der</target>
        </trans-unit>
        <trans-unit id="a147864d52d0d806c9c215b030eb1d51995745c1" translate="yes" xml:space="preserve">
          <source>ASN1::Primitive::new</source>
          <target state="translated">ASN1::Primitive::new</target>
        </trans-unit>
        <trans-unit id="efc1ab6096768f4ff5c958a64275652722cd3ecc" translate="yes" xml:space="preserve">
          <source>ASN1::Set and ASN1::Sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e874bdd18e68edba295451d2831ac0279dffdb4b" translate="yes" xml:space="preserve">
          <source>ASN1::decode</source>
          <target state="translated">ASN1::decode</target>
        </trans-unit>
        <trans-unit id="322cadd6ce055da9da572811f7ca97342479970d" translate="yes" xml:space="preserve">
          <source>ASN1::decode_all</source>
          <target state="translated">ASN1::decode_all</target>
        </trans-unit>
        <trans-unit id="97c0a9a86a14d5949cfda0092ef3b394a8e29cf0" translate="yes" xml:space="preserve">
          <source>ASN1::traverse</source>
          <target state="translated">ASN1::traverse</target>
        </trans-unit>
        <trans-unit id="13293161c77e0903a0c907b0f6562edbb578e359" translate="yes" xml:space="preserve">
          <source>AUTH_REQUIRED</source>
          <target state="translated">AUTH_REQUIRED</target>
        </trans-unit>
        <trans-unit id="326e6a51b96148bca4f9061d1ddf55085be280d2" translate="yes" xml:space="preserve">
          <source>AUTO_INSTALL_CMDS</source>
          <target state="translated">AUTO_INSTALL_CMDS</target>
        </trans-unit>
        <trans-unit id="52cc5166fc80e4f99a1c0b1b3023d85d3a8db533" translate="yes" xml:space="preserve">
          <source>AX.25 protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f544a5681678c72d5a1ad0e841688e073e3bbc44" translate="yes" xml:space="preserve">
          <source>AX.25 socket options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6384d69f4ffd490fe5d682281148313d7c4ccab7" translate="yes" xml:space="preserve">
          <source>Abbrev</source>
          <target state="translated">Abbrev</target>
        </trans-unit>
        <trans-unit id="abf7666d05441155b8946d06bb03ed47201379e4" translate="yes" xml:space="preserve">
          <source>Abbreviated Assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a14f0343dfe799b100387055b94affd1d972bf7" translate="yes" xml:space="preserve">
          <source>Abbreviated day-of-week names specified by RFC 822</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09b347f1affdc735d7c62e4cd45528f7998337c" translate="yes" xml:space="preserve">
          <source>Abbreviated month names specified by RFC 822</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aaff8a118d1798cb78a52e988be1ad241394bdb" translate="yes" xml:space="preserve">
          <source>Aborts the current mail transaction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c40a53eff4ed2ccf003c1ba1dd36f19a30b258" translate="yes" xml:space="preserve">
          <source>Aborts the previous command (ABOR command).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb715e1cbe706d35a12bcbec2b8e1243d63af729" translate="yes" xml:space="preserve">
          <source>Absolute mode is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2942f7b69fd8667ae05f3822f4f657cb392cbff" translate="yes" xml:space="preserve">
          <source>Abstract Syntax Notation One (or ASN.1) is a notation syntax to describe data structures and is defined in ITU-T X.680. ASN.1 itself does not mandate any encoding or parsing rules, but usually ASN.1 data structures are encoded using the Distinguished &lt;a href=&quot;../encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; Rules (DER) or less often the Basic &lt;a href=&quot;../encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; Rules (BER) described in ITU-T X.690. DER and BER encodings are binary Tag-Length-Value (TLV) encodings that are quite concise compared to other popular data description formats such as &lt;code&gt;XML&lt;/code&gt;, &lt;a href=&quot;../json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; etc. ASN.1 data structures are very common in cryptographic applications, e.g. X.509 public key certificates or certificate revocation lists (CRLs) are all defined in ASN.1 and DER-encoded. ASN.1, DER and BER are the building blocks of applied cryptography. The &lt;a href=&quot;asn1&quot;&gt;&lt;code&gt;ASN1&lt;/code&gt;&lt;/a&gt; module provides the necessary classes that allow generation of ASN.1 data structures and the methods to encode them using a DER encoding. The decode method allows parsing arbitrary BER-/DER-encoded data to a Ruby object that can then be modified and re-encoded at will.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58dc5da0f81189089eb3cb546ef218c4dc066a6" translate="yes" xml:space="preserve">
          <source>AbstractSyntaxTree</source>
          <target state="translated">AbstractSyntaxTree</target>
        </trans-unit>
        <trans-unit id="955d12511a935233cd701aa97da0388198a54961" translate="yes" xml:space="preserve">
          <source>AbstractSyntaxTree::Node</source>
          <target state="translated">AbstractSyntaxTree::Node</target>
        </trans-unit>
        <trans-unit id="e4533f2a6ba60c08b6ee71a0659d79a4ae0ade3d" translate="yes" xml:space="preserve">
          <source>AbstractSyntaxTree::Node#children</source>
          <target state="translated">AbstractSyntaxTree::Node#children</target>
        </trans-unit>
        <trans-unit id="17d94a4c617d0ff6cf038e4ee8cf15235e3f75c4" translate="yes" xml:space="preserve">
          <source>AbstractSyntaxTree::Node#first_column</source>
          <target state="translated">AbstractSyntaxTree::Node#first_column</target>
        </trans-unit>
        <trans-unit id="87f6463ad617be6d092a820030dde62eaed52a4a" translate="yes" xml:space="preserve">
          <source>AbstractSyntaxTree::Node#first_lineno</source>
          <target state="translated">AbstractSyntaxTree::Node#first_lineno</target>
        </trans-unit>
        <trans-unit id="77aa18ae2b01e5a23b75205536a93dc9f23705ee" translate="yes" xml:space="preserve">
          <source>AbstractSyntaxTree::Node#inspect</source>
          <target state="translated">AbstractSyntaxTree::Node#inspect</target>
        </trans-unit>
        <trans-unit id="30064fc014b25025fe03044d336180589b9d0f3e" translate="yes" xml:space="preserve">
          <source>AbstractSyntaxTree::Node#last_column</source>
          <target state="translated">AbstractSyntaxTree::Node#last_column</target>
        </trans-unit>
        <trans-unit id="1bfe522b4c3ad1becb573e4c8a1f51edaf07567f" translate="yes" xml:space="preserve">
          <source>AbstractSyntaxTree::Node#last_lineno</source>
          <target state="translated">AbstractSyntaxTree::Node#last_lineno</target>
        </trans-unit>
        <trans-unit id="866bfc5310a617817fac81dca232bd67db1d4d60" translate="yes" xml:space="preserve">
          <source>AbstractSyntaxTree::Node#pretty_print</source>
          <target state="translated">AbstractSyntaxTree::Node#pretty_print</target>
        </trans-unit>
        <trans-unit id="d6d1109137c17046f25c717d55fd0e4764d3d0c4" translate="yes" xml:space="preserve">
          <source>AbstractSyntaxTree::Node#pretty_print_children</source>
          <target state="translated">AbstractSyntaxTree::Node#pretty_print_children</target>
        </trans-unit>
        <trans-unit id="7b9c48c47d8886240c0849d237a0b18d60e2b36c" translate="yes" xml:space="preserve">
          <source>AbstractSyntaxTree::Node#type</source>
          <target state="translated">AbstractSyntaxTree::Node#type</target>
        </trans-unit>
        <trans-unit id="b912861f796b83de10c791ff5ad2e4eb6e757669" translate="yes" xml:space="preserve">
          <source>AbstractSyntaxTree::of</source>
          <target state="translated">AbstractSyntaxTree::of</target>
        </trans-unit>
        <trans-unit id="32d45380bb35c6c3a686e87de2d148da913c3bf9" translate="yes" xml:space="preserve">
          <source>AbstractSyntaxTree::parse</source>
          <target state="translated">AbstractSyntaxTree::parse</target>
        </trans-unit>
        <trans-unit id="e4114a9a4749b887f5fd42b47bba78ae62fd2147" translate="yes" xml:space="preserve">
          <source>AbstractSyntaxTree::parse_file</source>
          <target state="translated">AbstractSyntaxTree::parse_file</target>
        </trans-unit>
        <trans-unit id="de07be44b12d6f761a3a5145c27ae3148dfb906e" translate="yes" xml:space="preserve">
          <source>Accept IPv4 mapped addresses if the kernel supports it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f8b8dc2f0b6495ec7c55316cd6a38565300b01" translate="yes" xml:space="preserve">
          <source>Accept IPv4-mapped IPv6 addresses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a89de3cf2bf49e1b8f30d3f717471f874ff86dff" translate="yes" xml:space="preserve">
          <source>Accept a new connection to the server. Returns a protocol instance capable of communicating with the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03586c9231adbda57d70c9383e79ec484fc3e3ae" translate="yes" xml:space="preserve">
          <source>Accept connection to &lt;a href=&quot;../../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;&lt;code&gt;tcp&lt;/code&gt;, with context of the current certificate configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f023d8080d34e8d72dede74f1e456f06cbaa6c4" translate="yes" xml:space="preserve">
          <source>Accept only if any address is assigned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7083878d3e6df5a4873211517c4bc82196ebac06" translate="yes" xml:space="preserve">
          <source>Acceptable argument classes. Now contains DecimalInteger, OctalInteger and DecimalNumeric. See Acceptable argument classes (in source code).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f6b72bac57191b8d9cd98836bbdec1ab20a16b7" translate="yes" xml:space="preserve">
          <source>Acceptable option argument format, must be pre-defined with &lt;a href=&quot;optionparser#method-c-accept&quot;&gt;&lt;code&gt;OptionParser.accept&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;optionparser#method-i-accept&quot;&gt;&lt;code&gt;OptionParser#accept&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt;. This can appear once or assigned as &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; if not present, otherwise causes an &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt;. Examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72eaaaf9f81b826cc3ac6b20fe7e045eeacbce5" translate="yes" xml:space="preserve">
          <source>Acceptables</source>
          <target state="translated">Acceptables</target>
        </trans-unit>
        <trans-unit id="61a0572c4893ef34311320d84c82df88bea83e11" translate="yes" xml:space="preserve">
          <source>Accepted</source>
          <target state="translated">Accepted</target>
        </trans-unit>
        <trans-unit id="a3f4b48daecae55c831346bced5d0f95139f3523" translate="yes" xml:space="preserve">
          <source>Accepts a connection from a client, and starts up its own thread to handle it. This thread loops, receiving requests from the client, invoking them on a local object, and returning responses, until the client closes the connection or a local method call fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ab1610fff021f443771ae204380b6fd97defce" translate="yes" xml:space="preserve">
          <source>Accepts a new connection. It returns the new file descriptor which is an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add8d35e5bd9a8bd60bea046b9fa5c7bda614b58" translate="yes" xml:space="preserve">
          <source>Accepts a next connection. Returns a new &lt;a href=&quot;socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; object and &lt;a href=&quot;addrinfo&quot;&gt;&lt;code&gt;Addrinfo&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8428baa83c2507fcf43369ef3ee323da6640ab" translate="yes" xml:space="preserve">
          <source>Accepts an incoming connection returning an array containing the (integer) file descriptor for the incoming connection, &lt;em&gt;client_socket_fd&lt;/em&gt;, and an &lt;a href=&quot;addrinfo&quot;&gt;&lt;code&gt;Addrinfo&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;client_addrinfo&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71791a8e1d877a674bf6a459812816641407c99d" translate="yes" xml:space="preserve">
          <source>Accepts an incoming connection using accept(2) after O_NONBLOCK is set for the underlying file descriptor. It returns an accepted &lt;a href=&quot;tcpsocket&quot;&gt;&lt;code&gt;TCPSocket&lt;/code&gt;&lt;/a&gt; for the incoming connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb96758ef4a37644d5cf26476e6acbc9f270419" translate="yes" xml:space="preserve">
          <source>Accepts an incoming connection using accept(2) after O_NONBLOCK is set for the underlying file descriptor. It returns an accepted &lt;a href=&quot;unixsocket&quot;&gt;&lt;code&gt;UNIXSocket&lt;/code&gt;&lt;/a&gt; for the incoming connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4327897d4d28e33342e5874a969400e154882695" translate="yes" xml:space="preserve">
          <source>Accepts an incoming connection using accept(2) after O_NONBLOCK is set for the underlying file descriptor. It returns an array containing the accepted socket for the incoming connection, &lt;em&gt;client_socket&lt;/em&gt;, and an &lt;a href=&quot;addrinfo&quot;&gt;&lt;code&gt;Addrinfo&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;client_addrinfo&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91bfd6d70fd67ab48d9d58ca7c7744030c4755c3" translate="yes" xml:space="preserve">
          <source>Accepts an incoming connection. It returns a new &lt;a href=&quot;tcpsocket&quot;&gt;&lt;code&gt;TCPSocket&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27dbf4faaf600f394b6a7529ca58104d11f59c5b" translate="yes" xml:space="preserve">
          <source>Accepts an incoming connection. It returns a new &lt;a href=&quot;unixsocket&quot;&gt;&lt;code&gt;UNIXSocket&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4def259582b56f60d4516ba322b6e3b3093da254" translate="yes" xml:space="preserve">
          <source>Access control lists are composed of &amp;ldquo;allow&amp;rdquo; and &amp;ldquo;deny&amp;rdquo; halves to control access. Use &amp;ldquo;all&amp;rdquo; or &amp;ldquo;*&amp;rdquo; to match any address. To match a specific address use any address or address mask that &lt;a href=&quot;ipaddr&quot;&gt;&lt;code&gt;IPAddr&lt;/code&gt;&lt;/a&gt; can understand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68acafb27254e1d52ade4da50f63c737661c59e3" translate="yes" xml:space="preserve">
          <source>Access from other threads is also forbidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ff5138037e96c695726ffe32b7a98607a0e680" translate="yes" xml:space="preserve">
          <source>Access messages by using &lt;a href=&quot;pop3#method-i-each_mail&quot;&gt;&lt;code&gt;POP3#each_mail&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;pop3#method-i-mails&quot;&gt;&lt;code&gt;POP3#mails&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5939fde4330b1c7029b735347e474f73f8bfba71" translate="yes" xml:space="preserve">
          <source>Access rights</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3b86ac54dd94314fce58f8c29165060c37dceb" translate="yes" xml:space="preserve">
          <source>Access to classes and modules from the Ruby standard library can be obtained in a &lt;a href=&quot;basicobject&quot;&gt;&lt;code&gt;BasicObject&lt;/code&gt;&lt;/a&gt; subclass by referencing the desired constant from the root like &lt;code&gt;::File&lt;/code&gt; or &lt;code&gt;::Enumerator&lt;/code&gt;. Like &lt;a href=&quot;basicobject#method-i-method_missing&quot;&gt;&lt;code&gt;method_missing&lt;/code&gt;&lt;/a&gt;, const_missing can be used to delegate constant lookup to &lt;code&gt;Object&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40bf72abc3db4ab9eb86360b7ac1d8e91518a01" translate="yes" xml:space="preserve">
          <source>Access to cookies, including the cookies attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8fdc5fd1a189bce34ed72e7427133f3678fa3b5" translate="yes" xml:space="preserve">
          <source>Access to parameters, including the params attribute, and overloading &lt;a href=&quot;queryextension#method-i-5B-5D&quot;&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/a&gt; to perform parameter value lookup by key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4af0221b4c0f92827287564d1aa273988c05a7c" translate="yes" xml:space="preserve">
          <source>Access to the &lt;a href=&quot;../cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; environment variables as methods. See documentation to the &lt;a href=&quot;../cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; class for a list of these variables. The methods are exposed by removing the leading &lt;code&gt;HTTP_&lt;/code&gt; (if it exists) and downcasing the name. For example, &lt;code&gt;auth_type&lt;/code&gt; will return the environment variable &lt;code&gt;AUTH_TYPE&lt;/code&gt;, and &lt;code&gt;accept&lt;/code&gt; will return the value for &lt;code&gt;HTTP_ACCEPT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9aa0dbb4274298237ae97d2ac58c13c80e5e054" translate="yes" xml:space="preserve">
          <source>Accessible constants are different depending on the module nesting (which syntax was used to define the module). In the following example the constant &lt;code&gt;A::Z&lt;/code&gt; is accessible from B as A is part of the nesting:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece6386d3716deed7be562dd37c497f5832fe4a7" translate="yes" xml:space="preserve">
          <source>Accessing Elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e12fcfd4ed90d0f748951f8d3460fee22edb8dc7" translate="yes" xml:space="preserve">
          <source>Accessing a value in a &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; requires using its key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f56c78e052eae16f64b3726c65ea71187ac31783" translate="yes" xml:space="preserve">
          <source>Accessing an uninitialized class variable will raise a &lt;a href=&quot;../nameerror&quot;&gt;&lt;code&gt;NameError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64cf9184f926f4a85087ab0580343913009eb533" translate="yes" xml:space="preserve">
          <source>Accessor method for elements of the tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d965a731f04a2464f60dd8667f9cff9e4a0b7b" translate="yes" xml:space="preserve">
          <source>Accessor methods for the Diffie-Hellman parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de82a9bc481a9097c3988c20cd4d11e561df39bc" translate="yes" xml:space="preserve">
          <source>Account information for ACCT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4b65b856e023d89fffd94f64e1dd5f271762f4" translate="yes" xml:space="preserve">
          <source>Action needs to be taken immediately</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f95a4004cb12694551e6ceadd401ff74e1148a1" translate="yes" xml:space="preserve">
          <source>Activate TLS_FALLBACK_SCSV for this context. See RFC 7507.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405f5da7bd42128a406343cf10f2195f52789629" translate="yes" xml:space="preserve">
          <source>Activate the refinement with using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8429671bd48df72f16073b63936968fe1f518b1" translate="yes" xml:space="preserve">
          <source>Activates the trace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d0ba4648230ce663e5d2352ebefd0ec9e2fa42" translate="yes" xml:space="preserve">
          <source>Actual &lt;a href=&quot;../optionparser&quot;&gt;&lt;code&gt;OptionParser&lt;/code&gt;&lt;/a&gt; object, automatically created if nonexistent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b2bfc9efba2678a3353e1de84732a9788310a8" translate="yes" xml:space="preserve">
          <source>Add 32 to window_bits to enable zlib and gzip decoding with automatic header detection, or add 16 to decode only the gzip format (a &lt;a href=&quot;dataerror&quot;&gt;&lt;code&gt;Zlib::DataError&lt;/code&gt;&lt;/a&gt; will be raised for a non-gzip stream).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b389b70874ee369030275208de68a29959ef6244" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;obj&lt;/code&gt; to the text to be output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef124932ed969d97e92581744d7db5c6432e808" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;observer&lt;/code&gt; as an observer on this object. So that it will receive notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe72c8ebaf1cc05d6025acedd262f0b7172cf67" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;tuple&lt;/code&gt; to the &lt;a href=&quot;tuplebag&quot;&gt;&lt;code&gt;TupleBag&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eff292eaca5decf7c9ce611cf927548f99ff2cb" translate="yes" xml:space="preserve">
          <source>Add a multicast group membership</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4198ec6805b2f557e94442a1f623d89b3a02f42d" translate="yes" xml:space="preserve">
          <source>Add a new protocol to the &lt;a href=&quot;drbprotocol&quot;&gt;&lt;code&gt;DRbProtocol&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946201a751cb033de29413e311336564e77f1307" translate="yes" xml:space="preserve">
          <source>Add option switch and handler. See &lt;a href=&quot;optionparser#method-i-make_switch&quot;&gt;&lt;code&gt;make_switch&lt;/code&gt;&lt;/a&gt; for an explanation of parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d8ba3bc84b907375109679edc5b21b373424d0" translate="yes" xml:space="preserve">
          <source>Add option switch like with &lt;a href=&quot;optionparser#method-i-on&quot;&gt;&lt;code&gt;on&lt;/code&gt;&lt;/a&gt;, but at head of summary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7fdb8c873b031bddeea7be7f5e3e8f219be37a" translate="yes" xml:space="preserve">
          <source>Add option switch like with &lt;a href=&quot;optionparser#method-i-on&quot;&gt;&lt;code&gt;on&lt;/code&gt;&lt;/a&gt;, but at tail of summary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b022e4d6071f7b4ae45deacccd848ef962f26746" translate="yes" xml:space="preserve">
          <source>Add runtime options that help actions execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad76437b19b21b1c85a24b6fcde4594255e3edc" translate="yes" xml:space="preserve">
          <source>Add separator in summary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755ea1024c7d81363d51c00a01211aae005903a6" translate="yes" xml:space="preserve">
          <source>Add shell to initialize config values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e02f7937810581b7bab0e8f067f12963bc311df" translate="yes" xml:space="preserve">
          <source>Add the current {#possibility} to the dependency graph of the current {#state} @return [void]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff89af233c52ba5b101ca1d9e3ff23b1f29781f" translate="yes" xml:space="preserve">
          <source>Add the specified value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106d1d21130ac8a253b2003abdb2a545055cd6c6" translate="yes" xml:space="preserve">
          <source>Adding Items to Arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329db55e1485e3840ecc9f2a0a8353933d9690bb" translate="yes" xml:space="preserve">
          <source>Adding a nonce to the request protects against replay attacks but not all CA process the nonce.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee94fc933d860b5bf3db304b7f51847363e4c5c" translate="yes" xml:space="preserve">
          <source>Adding custom URIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96109fd97555f8aaa70f3da394469325bf2a9fba" translate="yes" xml:space="preserve">
          <source>Adding parentheses when checking if the instance variable is defined is a better check. This correctly returns &lt;code&gt;nil&lt;/code&gt; when the instance variable is not defined and &lt;code&gt;false&lt;/code&gt; when the instance variable is not zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a16425bdeda83df0525af41937f33024765190" translate="yes" xml:space="preserve">
          <source>Addition &amp;mdash; Adds some number of seconds (possibly fractional) to &lt;em&gt;time&lt;/em&gt; and returns that value as a new &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544c0e44aee6268e328ffd52706e61e6be1094dd" translate="yes" xml:space="preserve">
          <source>Additional attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3b27e2c41a2a9609c7e24ebc3b820c52659159" translate="yes" xml:space="preserve">
          <source>Additional header fields can be specified by an optional hash argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35817a9b42a29d9d035dac36986d1411462d00e2" translate="yes" xml:space="preserve">
          <source>Additionally &lt;a href=&quot;string#method-i-encode&quot;&gt;&lt;code&gt;String#encode&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;string#method-i-encode-21&quot;&gt;&lt;code&gt;String#encode!&lt;/code&gt;&lt;/a&gt; use the default internal encoding if no encoding is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="730f0738304e66a48abbc2d2931011fa39ef1d67" translate="yes" xml:space="preserve">
          <source>Additionally digests can be encoded in &amp;ldquo;bubble babble&amp;rdquo; format as a sequence of consonants and vowels which is more recognizable and comparable than a hexadecimal digest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f0c3c72b86fa3781a395f2b13d59aa820bdd5d" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;:debug_level&lt;/code&gt; can be set to an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0ce91e168a95d6a0a6e38806cb2584acf4e204" translate="yes" xml:space="preserve">
          <source>Additionally, methods for element reference and assignment may be defined: &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;[]=&lt;/code&gt; respectively. Both can take one or more arguments, and element reference can take none.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f825006500b6e09d80a39ee80b41f024835ce4" translate="yes" xml:space="preserve">
          <source>Additionally, signal handlers do not run between two successive local variable accesses, so shortcuts such as `+=' and `-=' will not trigger a data race when used on &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; classes in signal handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724cbbdcba8c7e24ca557369860c906e3376b506" translate="yes" xml:space="preserve">
          <source>Additionally, these options can also be toggled for the remainder of the pattern:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70f93df5e8f9b55be44fbeee9d203972e3383d4" translate="yes" xml:space="preserve">
          <source>Address</source>
          <target state="translated">Address</target>
        </trans-unit>
        <trans-unit id="71e4cae13b047aa26110a857b4e74313c0ee0a1f" translate="yes" xml:space="preserve">
          <source>Address &lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt; to use for matching IP addresses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52063a26284fe80d24bb942d998dd2c52bb75108" translate="yes" xml:space="preserve">
          <source>Address family for hostname not supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ee922cd750ff4631c23d9b88d00633994c2466" translate="yes" xml:space="preserve">
          <source>Address family not supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29040477aa63cb5ac855bc0888a39c55ea7073c2" translate="yes" xml:space="preserve">
          <source>Address of proxy host. If &lt;a href=&quot;http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt; does not use a proxy, nil.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65eee373813048f0ae401909d1248b41a805b14f" translate="yes" xml:space="preserve">
          <source>Address of the ruby_xfree() function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed529940a85bae78d87b661555766463cc97058" translate="yes" xml:space="preserve">
          <source>Address of the source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a918c5ecbbac34f118ad8df4740f748873d6f8d" translate="yes" xml:space="preserve">
          <source>AddressFamilyError</source>
          <target state="translated">AddressFamilyError</target>
        </trans-unit>
        <trans-unit id="18f01f91d0b079e6f05d576882a1164e15fe530e" translate="yes" xml:space="preserve">
          <source>AddressRegex</source>
          <target state="translated">AddressRegex</target>
        </trans-unit>
        <trans-unit id="ee2371a343eaaf8ad088b89e3642d81151ff9f9a" translate="yes" xml:space="preserve">
          <source>AddressV4</source>
          <target state="translated">AddressV4</target>
        </trans-unit>
        <trans-unit id="4c1cc8c317d93105d6eb84303851c10cea9086cb" translate="yes" xml:space="preserve">
          <source>AddressV6</source>
          <target state="translated">AddressV6</target>
        </trans-unit>
        <trans-unit id="4ca7b9663ad28e00bad95a214ec91b0b6850abe7" translate="yes" xml:space="preserve">
          <source>Addresses</source>
          <target state="translated">Addresses</target>
        </trans-unit>
        <trans-unit id="6b3ae13325031f23a92bd45a4a58d59108577159" translate="yes" xml:space="preserve">
          <source>Addresses to symbols</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ad0e65ce9cac6f040675d094861848e31d4535" translate="yes" xml:space="preserve">
          <source>Addrinfo</source>
          <target state="translated">Addrinfo</target>
        </trans-unit>
        <trans-unit id="02e77baa6916b1fa25afdf0ae37389d347272365" translate="yes" xml:space="preserve">
          <source>Addrinfo#afamily</source>
          <target state="translated">Addrinfo#afamily</target>
        </trans-unit>
        <trans-unit id="923cf75d4ee6cfc9b5c236201833b055aa46e0b1" translate="yes" xml:space="preserve">
          <source>Addrinfo#bind</source>
          <target state="translated">Addrinfo#bind</target>
        </trans-unit>
        <trans-unit id="0bac1526d8c1fca2eb3aaa5d03a5fb383878dbfd" translate="yes" xml:space="preserve">
          <source>Addrinfo#canonname</source>
          <target state="translated">Addrinfo#canonname</target>
        </trans-unit>
        <trans-unit id="39e37a8345066f969cacedcd35b1e2243448b858" translate="yes" xml:space="preserve">
          <source>Addrinfo#connect</source>
          <target state="translated">Addrinfo#connect</target>
        </trans-unit>
        <trans-unit id="4182c0c1cdc70b7a4721d060e0013b1cc958cb8e" translate="yes" xml:space="preserve">
          <source>Addrinfo#connect_from</source>
          <target state="translated">Addrinfo#connect_from</target>
        </trans-unit>
        <trans-unit id="9b00269bb41ce68898b74aac4dbb4750e2ef4f4d" translate="yes" xml:space="preserve">
          <source>Addrinfo#connect_internal</source>
          <target state="translated">Addrinfo#connect_internal</target>
        </trans-unit>
        <trans-unit id="ccd5ec1e2895ed834648ee07ec2b0e36a5868c42" translate="yes" xml:space="preserve">
          <source>Addrinfo#connect_to</source>
          <target state="translated">Addrinfo#connect_to</target>
        </trans-unit>
        <trans-unit id="8baf5fd1c2cef8c6df9c4e17bd6e590286a2d05d" translate="yes" xml:space="preserve">
          <source>Addrinfo#family_addrinfo</source>
          <target state="translated">Addrinfo#family_addrinfo</target>
        </trans-unit>
        <trans-unit id="75aada26710ede1ffa1162c992b3404aff65f10a" translate="yes" xml:space="preserve">
          <source>Addrinfo#getnameinfo</source>
          <target state="translated">Addrinfo#getnameinfo</target>
        </trans-unit>
        <trans-unit id="cc3d53dcf4ca8edc1625367c481dfc84006a6739" translate="yes" xml:space="preserve">
          <source>Addrinfo#inspect</source>
          <target state="translated">Addrinfo#inspect</target>
        </trans-unit>
        <trans-unit id="368f259d0a5727371b7d16dbc261f457731eb8a2" translate="yes" xml:space="preserve">
          <source>Addrinfo#inspect_sockaddr</source>
          <target state="translated">Addrinfo#inspect_sockaddr</target>
        </trans-unit>
        <trans-unit id="6c501d992a3b836a99a8056f00df20d2c0997c41" translate="yes" xml:space="preserve">
          <source>Addrinfo#ip?</source>
          <target state="translated">Addrinfo#ip?</target>
        </trans-unit>
        <trans-unit id="ac81fbad86e4c530d33461ef1bbc7915744df138" translate="yes" xml:space="preserve">
          <source>Addrinfo#ip_address</source>
          <target state="translated">Addrinfo#ip_address</target>
        </trans-unit>
        <trans-unit id="7ddc840ab2e676b7b9677d9f8ba2f0d33b45b860" translate="yes" xml:space="preserve">
          <source>Addrinfo#ip_port</source>
          <target state="translated">Addrinfo#ip_port</target>
        </trans-unit>
        <trans-unit id="67e9bcbb14460ab34c4e97b9a8ca704499d52f6d" translate="yes" xml:space="preserve">
          <source>Addrinfo#ip_unpack</source>
          <target state="translated">Addrinfo#ip_unpack</target>
        </trans-unit>
        <trans-unit id="7ccf262b8d8d213180e0daf381fa04383f8a7125" translate="yes" xml:space="preserve">
          <source>Addrinfo#ipv4?</source>
          <target state="translated">Addrinfo#ipv4?</target>
        </trans-unit>
        <trans-unit id="77047156c168351bc23f7634199d36991f74f42c" translate="yes" xml:space="preserve">
          <source>Addrinfo#ipv4_loopback?</source>
          <target state="translated">Addrinfo#ipv4_loopback?</target>
        </trans-unit>
        <trans-unit id="f4b85e082759f7d9ae20e8739f2bec31ebd00bd5" translate="yes" xml:space="preserve">
          <source>Addrinfo#ipv4_multicast?</source>
          <target state="translated">Addrinfo#ipv4_multicast?</target>
        </trans-unit>
        <trans-unit id="19a66eef530e391562efd285199bc66713251be3" translate="yes" xml:space="preserve">
          <source>Addrinfo#ipv4_private?</source>
          <target state="translated">Addrinfo#ipv4_private?</target>
        </trans-unit>
        <trans-unit id="b3f0de8785c1f1c88b9c4d364205c13c536e10b6" translate="yes" xml:space="preserve">
          <source>Addrinfo#ipv6?</source>
          <target state="translated">Addrinfo#ipv6?</target>
        </trans-unit>
        <trans-unit id="a5b797671d801800e4f01d0e2ca689da313657eb" translate="yes" xml:space="preserve">
          <source>Addrinfo#ipv6_linklocal?</source>
          <target state="translated">Addrinfo#ipv6_linklocal?</target>
        </trans-unit>
        <trans-unit id="3cfdfe1f8e99b04051fd45a23b2bf7f1b0887119" translate="yes" xml:space="preserve">
          <source>Addrinfo#ipv6_loopback?</source>
          <target state="translated">Addrinfo#ipv6_loopback?</target>
        </trans-unit>
        <trans-unit id="9dc3903297c520fecf9111a6fc678b5800e9044c" translate="yes" xml:space="preserve">
          <source>Addrinfo#ipv6_mc_global?</source>
          <target state="translated">Addrinfo#ipv6_mc_global?</target>
        </trans-unit>
        <trans-unit id="78b232a28b40ecc0a8742b9538f944e6a2e0cecb" translate="yes" xml:space="preserve">
          <source>Addrinfo#ipv6_mc_linklocal?</source>
          <target state="translated">Addrinfo#ipv6_mc_linklocal?</target>
        </trans-unit>
        <trans-unit id="5ea46635eaf51e94e97e1b825c85df1da45c0886" translate="yes" xml:space="preserve">
          <source>Addrinfo#ipv6_mc_nodelocal?</source>
          <target state="translated">Addrinfo#ipv6_mc_nodelocal?</target>
        </trans-unit>
        <trans-unit id="220855a8c0b5f424eab629684ce3c7c3d5d371cf" translate="yes" xml:space="preserve">
          <source>Addrinfo#ipv6_mc_orglocal?</source>
          <target state="translated">Addrinfo#ipv6_mc_orglocal?</target>
        </trans-unit>
        <trans-unit id="936b3e47eab61dd3201f23e6cf3e9f1ddedd78cf" translate="yes" xml:space="preserve">
          <source>Addrinfo#ipv6_mc_sitelocal?</source>
          <target state="translated">Addrinfo#ipv6_mc_sitelocal?</target>
        </trans-unit>
        <trans-unit id="67572f2005ca4f8f748725ef3ceced0deee9f4eb" translate="yes" xml:space="preserve">
          <source>Addrinfo#ipv6_multicast?</source>
          <target state="translated">Addrinfo#ipv6_multicast?</target>
        </trans-unit>
        <trans-unit id="a7b95c3bc7ff36de680336e4a7feced20bf40435" translate="yes" xml:space="preserve">
          <source>Addrinfo#ipv6_sitelocal?</source>
          <target state="translated">Addrinfo#ipv6_sitelocal?</target>
        </trans-unit>
        <trans-unit id="ce5e1634ab0397abf9c6f5a4b3d3b7bcb0ff1952" translate="yes" xml:space="preserve">
          <source>Addrinfo#ipv6_to_ipv4</source>
          <target state="translated">Addrinfo#ipv6_to_ipv4</target>
        </trans-unit>
        <trans-unit id="31c0ef9f825a615dcce55d976d5b459d8839cc1e" translate="yes" xml:space="preserve">
          <source>Addrinfo#ipv6_unique_local?</source>
          <target state="translated">Addrinfo#ipv6_unique_local?</target>
        </trans-unit>
        <trans-unit id="07810cc5defc9abe97e91e8103e2c076156eff49" translate="yes" xml:space="preserve">
          <source>Addrinfo#ipv6_unspecified?</source>
          <target state="translated">Addrinfo#ipv6_unspecified?</target>
        </trans-unit>
        <trans-unit id="792fc7d52557a80e4b0ab08269b7f7149bc79ba2" translate="yes" xml:space="preserve">
          <source>Addrinfo#ipv6_v4compat?</source>
          <target state="translated">Addrinfo#ipv6_v4compat?</target>
        </trans-unit>
        <trans-unit id="86ce5fdeca88868cf61e3fcce7a14e36ad4aa71a" translate="yes" xml:space="preserve">
          <source>Addrinfo#ipv6_v4mapped?</source>
          <target state="translated">Addrinfo#ipv6_v4mapped?</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
