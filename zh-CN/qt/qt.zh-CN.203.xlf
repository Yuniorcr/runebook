<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="3fab4c5b3b3409f3b74eb70e37d5e44fee3e117b" translate="yes" xml:space="preserve">
          <source>This function can handle the entire integer range without overflow, providing that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6968c3c1c9a246c569cab6a2e6ffb02eb2f6519" translate="yes" xml:space="preserve">
          <source>This function can handle the entire integer range without overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf5aac90019071e28b059d0a8d4bfce226560a3" translate="yes" xml:space="preserve">
          <source>This function can only be called after &lt;a href=&quot;qxmlstreamwriter#writeStartElement&quot;&gt;writeStartElement&lt;/a&gt;() before any content is written, or after &lt;a href=&quot;qxmlstreamwriter#writeEmptyElement&quot;&gt;writeEmptyElement&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="676703e38717a91f3c8f48c42942ff393d58b06c" translate="yes" xml:space="preserve">
          <source>This function can only be called once for each &lt;a href=&quot;qaxscript&quot;&gt;QAxScript&lt;/a&gt; object, which is done automatically when using &lt;a href=&quot;qaxscriptmanager#load&quot;&gt;QAxScriptManager::load&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79717ef87fc1656f71a8b27e3d47542565d4cf45" translate="yes" xml:space="preserve">
          <source>This function can operate without an event loop. It is useful when writing non-GUI applications and when performing I/O operations in a non-GUI thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe5b7182dcc28150cdb9ea98e30f004a23cd0b0" translate="yes" xml:space="preserve">
          <source>This function can potentially be called from multiple threads. It's the reimplementation's responsibility to ensure thread safety.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5229e34ea67b66e0bb380a3d75e6f298482a7c02" translate="yes" xml:space="preserve">
          <source>This function can return instances for secondary services too. The include relationships between services can be expressed via &lt;a href=&quot;qlowenergyservice#includedServices&quot;&gt;QLowEnergyService::includedServices&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713c35d77c03330c8a83c1bbbdee4a6e2b072e67" translate="yes" xml:space="preserve">
          <source>This function can return true even if the type of this &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; is different from the type of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90adf9c2ce7c7bb472ede5cb421b7acdfc3f5497" translate="yes" xml:space="preserve">
          <source>This function can typically be used for restoring unlockable products when the application has been reinstalled and lost the saved purchase states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de88474a52acd679c5a5c0840ffedbdcd580eb26" translate="yes" xml:space="preserve">
          <source>This function cannot be called before the item hierarchy has been set up, i.e., the &lt;a href=&quot;qtreewidgetitem&quot;&gt;QTreeWidgetItem&lt;/a&gt; that will hold</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486496debd09ae1a7048f434eb57e969be38dfe7" translate="yes" xml:space="preserve">
          <source>This function cannot be used in property binding declarations (see the documentation on &lt;a href=&quot;qtqml-syntax-propertybinding#qml-javascript-assignment&quot;&gt;binding declarations and binding assignments&lt;/a&gt;) except when the result is stored in an array bound to a var property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb1018353087dbed4f06a35cc81a328f870b87a" translate="yes" xml:space="preserve">
          <source>This function causes the &lt;a href=&quot;qml-qtquick-spritesequence&quot;&gt;SpriteSequence&lt;/a&gt; to jump to the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c321e4108e7da1717b752d7d7676050ea4cd6087" translate="yes" xml:space="preserve">
          <source>This function causes the &lt;a href=&quot;qqmlengine#exit&quot;&gt;QQmlEngine::exit&lt;/a&gt;(int) signal to be emitted. Within the &lt;a href=&quot;qtquick-qmlscene&quot;&gt;Prototyping with qmlscene&lt;/a&gt;, this causes the launcher application to exit the specified return code. To exit from the event loop with a specified return code when this method is called, a C++ application can connect the &lt;a href=&quot;qqmlengine#exit&quot;&gt;QQmlEngine::exit&lt;/a&gt;(int) signal to the &lt;a href=&quot;qcoreapplication#exit&quot;&gt;QCoreApplication::exit&lt;/a&gt;(int) slot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12794491aa94be61a2abca427dd49996fe9cf74c" translate="yes" xml:space="preserve">
          <source>This function causes the &lt;a href=&quot;qqmlengine#quit&quot;&gt;QQmlEngine::quit()&lt;/a&gt; signal to be emitted. Within the &lt;a href=&quot;qtquick-qmlscene&quot;&gt;Prototyping with qmlscene&lt;/a&gt;, this causes the launcher application to exit; to quit a C++ application when this method is called, connect the &lt;a href=&quot;qqmlengine#quit&quot;&gt;QQmlEngine::quit()&lt;/a&gt; signal to the &lt;a href=&quot;qcoreapplication#quit&quot;&gt;QCoreApplication::quit()&lt;/a&gt; slot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e4ee014a5851dc916619f8364c8cbcb257abb9" translate="yes" xml:space="preserve">
          <source>This function causes the property metadata of all components previously loaded by the engine to be destroyed. All previously loaded components and the property bindings for all extant objects created from those components will cease to function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eabfd516fc02868a16452190dd6933263034f272" translate="yes" xml:space="preserve">
          <source>This function causes the property metadata of any loaded components which are not currently in use to be destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f540c55e5709615086b974e363e8a8a0505ab8b" translate="yes" xml:space="preserve">
          <source>This function checks for a Byte Order Mark (BOM). If it is missing, host byte order is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11146efdcfd63dcf04f3d822ce5f83a9212b1c5" translate="yes" xml:space="preserve">
          <source>This function checks whether</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f3fb82a9edd9d4a87a785da60df77ddd1a3e9a" translate="yes" xml:space="preserve">
          <source>This function completes the component creation begun with &lt;a href=&quot;qqmlcomponent#beginCreate&quot;&gt;QQmlComponent::beginCreate&lt;/a&gt;() and must be called afterwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b854b44525bc337ca61681e9c889cd3498fe91" translate="yes" xml:space="preserve">
          <source>This function complies with the requirements for the function &lt;a href=&quot;http://en.cppreference.com/w/cpp/numeric/random/seed_seq/generate&quot;&gt;&lt;code&gt;std::seed_seq::generate&lt;/code&gt;&lt;/a&gt;, which requires unsigned 32-bit integer values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc63e6cdd79d80cb0aa1cb0e72e772446cb1e8f" translate="yes" xml:space="preserve">
          <source>This function connects one of its signals to the slot specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f539ab8dc4bd12c966035d10cf3abbe9c0edf8f9" translate="yes" xml:space="preserve">
          <source>This function constructs a &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53e6faae620c4d3051f521384472857cc35680e" translate="yes" xml:space="preserve">
          <source>This function corresponds to &lt;a href=&quot;qwidget#maximumSize-prop&quot;&gt;setMaximumSize&lt;/a&gt;(&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4eb9fa83e7eaed58f307f9ae7853030e333954" translate="yes" xml:space="preserve">
          <source>This function corresponds to &lt;a href=&quot;qwidget#minimumSize-prop&quot;&gt;setMinimumSize&lt;/a&gt;(&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;(minw, minh)). Sets the minimum width to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12354a12ec317e02d14e350284b42a7bf187ef7d" translate="yes" xml:space="preserve">
          <source>This function corresponds to the &lt;code&gt;dm:namespace-nodes&lt;/code&gt; accessor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9a287dae8836b0b53617f5ae764354816ae606" translate="yes" xml:space="preserve">
          <source>This function counts overlapping matches, so in the example below, there are four instances of &quot;ana&quot; or &quot;ama&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93389f1e7116a50c07558b3e52e1e3ade7c7162" translate="yes" xml:space="preserve">
          <source>This function creates a modal file dialog with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb4d5770a02449bdc96b6caf98bab24e53728a2" translate="yes" xml:space="preserve">
          <source>This function creates and returns a calendar widget if none has been set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ca89a189c32874a3650858942e95ddebd7b71b" translate="yes" xml:space="preserve">
          <source>This function creates one polygon for each subpath regardless of intersecting subpaths (i.e. overlapping bounding rectangles). To make sure that such overlapping subpaths are filled correctly, use the &lt;a href=&quot;qpainterpath#toFillPolygons&quot;&gt;toFillPolygons&lt;/a&gt;() function instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d105d486b1dac5ea6336d4677cd59400ffc48a2f" translate="yes" xml:space="preserve">
          <source>This function creates the standard context menu which is shown when the user clicks on the line edit with the right mouse button. It is called from the default &lt;a href=&quot;qlineedit#contextMenuEvent&quot;&gt;contextMenuEvent&lt;/a&gt;() handler. The popup menu's ownership is transferred to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43aaee0879710501df98ec37c495d30d84c3cbd" translate="yes" xml:space="preserve">
          <source>This function creates the standard context menu which is shown when the user clicks on the text edit with the right mouse button. It is called from the default &lt;a href=&quot;qplaintextedit#contextMenuEvent&quot;&gt;contextMenuEvent&lt;/a&gt;() handler and it takes the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b051df1b1a046694dcd0c4d3db49ef0be3bd6c3f" translate="yes" xml:space="preserve">
          <source>This function creates the standard context menu which is shown when the user clicks on the text edit with the right mouse button. It is called from the default &lt;a href=&quot;qplaintextedit#contextMenuEvent&quot;&gt;contextMenuEvent&lt;/a&gt;() handler. The popup menu's ownership is transferred to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85e375ecb9db6a65c8e7caf1c8cbac6c4a01c18" translate="yes" xml:space="preserve">
          <source>This function creates the standard context menu which is shown when the user clicks on the text edit with the right mouse button. It is called from the default &lt;a href=&quot;qtextedit#contextMenuEvent&quot;&gt;contextMenuEvent&lt;/a&gt;() handler and it takes the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808df97702049d7abfbfd8e942a88c6dea53136d" translate="yes" xml:space="preserve">
          <source>This function creates the standard context menu which is shown when the user clicks on the text edit with the right mouse button. It is called from the default &lt;a href=&quot;qtextedit#contextMenuEvent&quot;&gt;contextMenuEvent&lt;/a&gt;() handler. The popup menu's ownership is transferred to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53ddb184544639e703e3c8b4712405846099e0d" translate="yes" xml:space="preserve">
          <source>This function declares a prefix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036c66635adfbeb30b6cb5a12402f0d49970ada6" translate="yes" xml:space="preserve">
          <source>This function deletes the variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e39e2a714ef2086f7e97474ad92f1093f6a450d" translate="yes" xml:space="preserve">
          <source>This function depends on the platform and the backend. It may not work at all, it may take several seconds before it takes effect, or it may pause instantly. Some synthesizers will look for a break that they can later resume from, such as a sentence end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc3de0d49e16f0f2a7ac4a0d95ae014190acca1" translate="yes" xml:space="preserve">
          <source>This function does exactly the same as &lt;a href=&quot;qpainter#drawPicture&quot;&gt;QPainter::drawPicture&lt;/a&gt;() with (x, y) = (0, 0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898e06624f2de315414edf2a64013bd4ebd92194" translate="yes" xml:space="preserve">
          <source>This function does exactly the same as &lt;a href=&quot;qpicture#play&quot;&gt;QPicture::play&lt;/a&gt;() when called with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3362e1dc644da571344a2daa406298d22b700db1" translate="yes" xml:space="preserve">
          <source>This function does not allow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf056d0dfa13c4612d8cf4a80e2dad947dd3d54" translate="yes" xml:space="preserve">
          <source>This function does not alter any of the canvas attributes (i.e. they can be set elsewhere.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77a79a8ba376a09a9981abd593223260e3e6fb9" translate="yes" xml:space="preserve">
          <source>This function does not cache the system environment. Therefore, it's possible to obtain an updated version of the environment if low-level C library functions like &lt;code&gt;setenv&lt;/code&gt; or &lt;code&gt;putenv&lt;/code&gt; have been called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcfe7702ec122a6239e514348cc37d6cc078d05a" translate="yes" xml:space="preserve">
          <source>This function does not cause an immediate paint; instead it schedules a paint request that is processed by &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; after control reaches the event loop. The item will only be redrawn if it is visible in any associated view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05c6243d6f8b00efec5670b8673e0caf74910e0" translate="yes" xml:space="preserve">
          <source>This function does not cause an immediate paint; instead it schedules a paint request that is processed by the QML Scene Graph when the next frame is rendered. The item will only be redrawn if it is visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75109dae1e9a6c5895119d1009d85e47d622244" translate="yes" xml:space="preserve">
          <source>This function does not cause an immediate repaint; instead it schedules a paint event for processing when Qt returns to the main event loop. This permits Qt to optimize for more speed and less flicker than a call to &lt;a href=&quot;qwidget#repaint&quot;&gt;repaint&lt;/a&gt;() does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98628ac6d3b7cee9c2630ae382080dd510806a7" translate="yes" xml:space="preserve">
          <source>This function does not clear the color, depth and stencil buffers. Use &lt;a href=&quot;qquickwindow#setClearBeforeRendering&quot;&gt;QQuickWindow::setClearBeforeRendering&lt;/a&gt; to control clearing of the color buffer. The depth and stencil buffer might be clobbered by the scene graph renderer. Clear these manually on demand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76efd6cd3761f87667550a049748ef86b7a0b193" translate="yes" xml:space="preserve">
          <source>This function does not fall back to the 'C' locale if the string cannot be interpreted in this locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f313015f214d817a813be26446f395e36c386cc7" translate="yes" xml:space="preserve">
          <source>This function does not guarantee the returned host name is a Fully Qualified Domain Name (FQDN). For that, use &lt;a href=&quot;qhostinfo&quot;&gt;QHostInfo&lt;/a&gt; to resolve the returned name to an FQDN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d88882fc7529fae7164c9420151609cd59995c" translate="yes" xml:space="preserve">
          <source>This function does not guarantee the returned host name is a Fully Qualified Domain Name (FQDN). For that, use &lt;a href=&quot;qhostinfo#fromName&quot;&gt;fromName&lt;/a&gt;() to resolve the returned name to an FQDN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5966401666aef0c76e84a3f4214f77e4dc9c26" translate="yes" xml:space="preserve">
          <source>This function does not handle the event itself; based on the type of event delivered, it calls an event handler for that specific type of event, and sends a response based on whether the event was accepted or ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00884f362d335f255b718144aee63740c71a960" translate="yes" xml:space="preserve">
          <source>This function does not handle the newline character (\n), as it cannot break text into multiple lines, and it cannot display the newline character. Use the QPainter::drawText() overload that takes a rectangle instead if you want to draw multiple lines of text with the newline character, or if you want the text to be wrapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b56e5061fe8bfc20fb5935ed17db9208e5fe28f" translate="yes" xml:space="preserve">
          <source>This function does not perform any type conversions, including from boolean or CBOR tag. Therefore, it may only be called if &lt;a href=&quot;qcborstreamreader#isInteger&quot;&gt;isInteger&lt;/a&gt;() is true; calling it in any other condition is an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b7bd991d89e4a62baf0f4a16a6930a199abd08" translate="yes" xml:space="preserve">
          <source>This function does not perform any type conversions, including from boolean or CBOR tag. Therefore, it may only be called if &lt;a href=&quot;qcborstreamreader#isNegativeInteger&quot;&gt;isNegativeInteger&lt;/a&gt;() is true; calling it in any other condition is an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf15172c440debbeaf7a85a453c39ac66a7801de" translate="yes" xml:space="preserve">
          <source>This function does not perform any type conversions, including from boolean or CBOR tag. Therefore, it may only be called if &lt;a href=&quot;qcborstreamreader#isUnsignedInteger&quot;&gt;isUnsignedInteger&lt;/a&gt;() is true; calling it in any other condition is an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4b46366a3f0f6f129add37f45e8f766420f898" translate="yes" xml:space="preserve">
          <source>This function does not perform any type conversions, including from integer. Therefore, it may only be called if &lt;a href=&quot;qcborstreamreader#isSimpleType&quot;&gt;isSimpleType&lt;/a&gt;() is true; calling it in any other condition is an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2bc0c4775de6fd29b8b63d4d15d6fe30369310b" translate="yes" xml:space="preserve">
          <source>This function does not perform any type conversions, including from integer. Therefore, it may only be called if &lt;a href=&quot;qcborstreamreader#isTag&quot;&gt;isTag&lt;/a&gt;() is true; calling it in any other condition is an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf471381f2642615c9a39ec3667e4c84724248a" translate="yes" xml:space="preserve">
          <source>This function does not perform any type conversions, including from integer. Therefore, it may only be called if &lt;a href=&quot;qcborstreamreader#isTrue&quot;&gt;isTrue&lt;/a&gt;(), &lt;a href=&quot;qcborstreamreader#isFalse&quot;&gt;isFalse&lt;/a&gt;() or &lt;a href=&quot;qcborstreamreader#isBool&quot;&gt;isBool&lt;/a&gt;() returned true; calling it in any other condition is an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69895750d426cc46d2828562a59770e26782c71b" translate="yes" xml:space="preserve">
          <source>This function does not perform any type conversions, including from integers or from byte arrays. Therefore, it may only be called if &lt;a href=&quot;qcborstreamreader#isString&quot;&gt;isString&lt;/a&gt;() returned true; calling it in any other condition is an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63ea9dd4383763bf3b937f1e1a39d150548c1ed" translate="yes" xml:space="preserve">
          <source>This function does not perform any type conversions, including from integers or from strings. Therefore, it may only be called if &lt;a href=&quot;qcborstreamreader#isByteArray&quot;&gt;isByteArray&lt;/a&gt;() is true; calling it in any other condition is an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f255966c4481909ac3031230e82c2f5ed1bf93a" translate="yes" xml:space="preserve">
          <source>This function does not perform any type conversions, including from other floating point types or from integer values. Therefore, it may only be called if &lt;a href=&quot;qcborstreamreader#isDouble&quot;&gt;isDouble&lt;/a&gt;() is true; calling it in any other condition is an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a5e45da668b1601d118312475e975e80a2ebf3" translate="yes" xml:space="preserve">
          <source>This function does not perform any type conversions, including from other floating point types or from integer values. Therefore, it may only be called if &lt;a href=&quot;qcborstreamreader#isFloat&quot;&gt;isFloat&lt;/a&gt;() is true; calling it in any other condition is an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6633d4741ed9cb82f93e6317acbf06895e194ff" translate="yes" xml:space="preserve">
          <source>This function does not perform any type conversions, including from other floating point types or from integer values. Therefore, it may only be called if &lt;a href=&quot;qcborstreamreader#isFloat16&quot;&gt;isFloat16&lt;/a&gt;() is true; calling it in any other condition is an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b4e343228c916892286592ae576970352c42cb" translate="yes" xml:space="preserve">
          <source>This function does not process events continuously; it returns after all available events are processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c2b76612ad501e37dfea3e56540f7cfdaf8a07" translate="yes" xml:space="preserve">
          <source>This function does not replace existing objects: if there is already an object registered at path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b627183660808cf31ef383b5c9dd17f228d1f43" translate="yes" xml:space="preserve">
          <source>This function does not store the password it is given. Instead, the password is passed directly to the driver for opening the connection and it is then discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7282ed85666e0be3a4478e541cae88e1ac443b56" translate="yes" xml:space="preserve">
          <source>This function does not touch state in the fixed-function pipeline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="015f4b6e32e9419ef186f71c3a180942c2c09773" translate="yes" xml:space="preserve">
          <source>This function does not try to open the file. To also use the content when determining the MIME type, use &lt;a href=&quot;qmimedatabase#mimeTypeForFile&quot;&gt;mimeTypeForFile&lt;/a&gt;() or &lt;a href=&quot;qmimedatabase#mimeTypeForFileNameAndData&quot;&gt;mimeTypeForFileNameAndData&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8764ccfe8c63d79c8bc6b4c2a31d8038732e34" translate="yes" xml:space="preserve">
          <source>This function does not wait and only discards the data that is already available for reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8486070f4a404bc8c9e711309f27598a2caed59b" translate="yes" xml:space="preserve">
          <source>This function does nothing and returns false if the object's class info for &quot;RegisterObject&quot; is not set to &quot;yes&quot;, or if the server is an in-process server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e18ae640c9ecbbaf7dba43b0e58085d17ec83a8" translate="yes" xml:space="preserve">
          <source>This function does nothing if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32428859bf5825e491faede99620d75b342960b1" translate="yes" xml:space="preserve">
          <source>This function does nothing if the button is &lt;a href=&quot;qwidget#enabled-prop&quot;&gt;disabled.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa4de1a7788c270fed046f141c022b340c0e1f8" translate="yes" xml:space="preserve">
          <source>This function does nothing if the button is &lt;a href=&quot;qwinthumbnailtoolbutton#enabled-prop&quot;&gt;disabled&lt;/a&gt; or &lt;a href=&quot;qwinthumbnailtoolbutton#interactive-prop&quot;&gt;non-interactive&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efaa2693a84c35c5a98a69c029db4d98255915ff" translate="yes" xml:space="preserve">
          <source>This function does nothing if the controller is in the &lt;a href=&quot;qlowenergycontroller#ControllerState-enum&quot;&gt;UnconnectedState&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0b7cd628324852117a043147e5c5b06edf5503" translate="yes" xml:space="preserve">
          <source>This function does nothing if the controller's &lt;a href=&quot;qlowenergycontroller#state&quot;&gt;state&lt;/a&gt;() is not equal to &lt;a href=&quot;qlowenergycontroller#ControllerState-enum&quot;&gt;UnconnectedState&lt;/a&gt;. The &lt;a href=&quot;qlowenergycontroller#connected&quot;&gt;connected&lt;/a&gt;() signal is emitted once the connection is successfully established.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0981edd1f4d697d4b62296decef74a8eb1fb052" translate="yes" xml:space="preserve">
          <source>This function does nothing if the thread does not have an event loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c765bc084cc8de16e6a66f8ed6125d4f04098f" translate="yes" xml:space="preserve">
          <source>This function doesn't change the features of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef3af86bf87037aeb48cadb8ff6a34fc97dc2cc" translate="yes" xml:space="preserve">
          <source>This function draws the text item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b92af15fd066f2302aede392c583526f0dba7d" translate="yes" xml:space="preserve">
          <source>This function dynamically creates a QML object from the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0a500c480ef79b8ab3d88e45f79d5bec8366aa" translate="yes" xml:space="preserve">
          <source>This function emits the signal &lt;a href=&quot;qabstractitemmodel#modelAboutToBeReset&quot;&gt;modelAboutToBeReset&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0a27702424447e127dad0ac1645fe566914e00" translate="yes" xml:space="preserve">
          <source>This function emits the signal &lt;a href=&quot;qabstractitemmodel#modelReset&quot;&gt;modelReset&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c9adca2b8c0738875434419b9e0105abf2309f" translate="yes" xml:space="preserve">
          <source>This function enables DTLS cookie verification when</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0cad538cc53b7fe7ea633fad4d448eac378c66" translate="yes" xml:space="preserve">
          <source>This function handles keyboard input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35af31c357e5a7e5e69fb1bf15c11a509cf8632" translate="yes" xml:space="preserve">
          <source>This function has no effect if &lt;a href=&quot;qguiapplication#setOverrideCursor&quot;&gt;setOverrideCursor&lt;/a&gt;() was not called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e64d5da692929134c97421c2e32e99a91a0928d" translate="yes" xml:space="preserve">
          <source>This function has no effect if no persistent editor is open for this combination of item and column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e20af19e50c4b41939bf3ef137393de8583da7" translate="yes" xml:space="preserve">
          <source>This function has no effect on Windows or Mac.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56bbe889388d208cf71f3087adea918100fabb73" translate="yes" xml:space="preserve">
          <source>This function has no way of reporting errors; returning an empty &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; can mean either that no data was currently available for peeking, or that an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d773c56dec84d4118928a9561c393d853d006ec" translate="yes" xml:space="preserve">
          <source>This function has no way of reporting errors; returning an empty &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; can mean either that no data was currently available for reading, or that an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db939f35f6e1bd33f1ee73d065a7e01fc081c79" translate="yes" xml:space="preserve">
          <source>This function ignores leading and trailing whitespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f106349a4177460e26ea4267f35b82b92747099" translate="yes" xml:space="preserve">
          <source>This function indicates that the application does not wish to roam the session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cecea987356247343e874389bdf943bbf7c6ad9" translate="yes" xml:space="preserve">
          <source>This function initializes resources or sets options that are required by the different back-ends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1355793490169ae2e861ad5ba2c8d34f238587" translate="yes" xml:space="preserve">
          <source>This function inserts the contents of the MIME data object, specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02afe375c6aa759745549410470706a6e0a438b" translate="yes" xml:space="preserve">
          <source>This function interprets the text of the spin box. If the value has changed since last interpretation it will emit signals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1d00098c5acb5b3d0f4599700300f89e364de8" translate="yes" xml:space="preserve">
          <source>This function is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd20e38373e724d2e93fda981cedb01710ff1c78" translate="yes" xml:space="preserve">
          <source>This function is a Qt implementation of C++17's std::as_const(), a cast function like std::move(). But while std::move() turns lvalues into rvalues, this function turns non-const lvalues into const lvalues. Like std::as_const(), it doesn't work on rvalues, because it cannot be efficiently implemented for rvalues without leaving dangling references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ebeb6f545fbd958e6e26c560603c107373647c" translate="yes" xml:space="preserve">
          <source>This function is a callback for every incoming TCP connection. The user should provide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a520022a9cfb79172e12792b344dfbc993de22b2" translate="yes" xml:space="preserve">
          <source>This function is a convenience function provided for custom layouts, and will go through all items in the layout and reparent their graphics items to the closest &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; ancestor of the layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6deaa21df79c4590f901b93f5062f8125f508657" translate="yes" xml:space="preserve">
          <source>This function is a convenience slot for &lt;a href=&quot;qmessagebox#aboutQt&quot;&gt;QMessageBox::aboutQt&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c03b9c2e264a8de5c549bc710d3e35e848145c" translate="yes" xml:space="preserve">
          <source>This function is a direct call to &lt;code&gt;glBindBuffer(type, 0)&lt;/code&gt; for use when the caller does not know which &lt;a href=&quot;qopenglbuffer&quot;&gt;QOpenGLBuffer&lt;/a&gt; has been bound to the context but wants to make sure that it is released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaaeb507e2eb8b60c048befb613ffb7398e7907a" translate="yes" xml:space="preserve">
          <source>This function is a fake virtual slot that you can reimplement in your subclass in order to control how new proxy widgets are created. The default implementation returns a proxy created with the &lt;a href=&quot;qgraphicsproxywidget#QGraphicsProxyWidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt;() constructor with this proxy widget as the parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee785184b02d9abca2be09d4c47df0ca40367f3f" translate="yes" xml:space="preserve">
          <source>This function is a part of the &lt;a href=&quot;qtconcurrent-index#&quot;&gt;Qt Concurrent&lt;/a&gt; framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c60ad26adca8d42faa888cc04f18dc49f1a64e" translate="yes" xml:space="preserve">
          <source>This function is a reimplementation of another function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5949a405e34800ca2aaddf75faa0902e94d5348" translate="yes" xml:space="preserve">
          <source>This function is an extension of &lt;a href=&quot;qtextdocument#loadResource&quot;&gt;QTextDocument::loadResource&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8b291b8eddf5163bc53d3bcfa3fcb47c9fda1b" translate="yes" xml:space="preserve">
          <source>This function is an overload of another function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5e8ddce2f1f71582859384bf96964964c0c80d" translate="yes" xml:space="preserve">
          <source>This function is applied to the syntax highlighter's current text block (i.e. the text that is passed to the &lt;a href=&quot;qsyntaxhighlighter#highlightBlock&quot;&gt;highlightBlock&lt;/a&gt;() function).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f8da92e4959bb578c34befe1c6bae81129b5906" translate="yes" xml:space="preserve">
          <source>This function is called after all other test functions in the &lt;a href=&quot;qml-qttest-testcase&quot;&gt;TestCase&lt;/a&gt; type have completed. The default implementation does nothing. The application can provide its own implementation to perform test case cleanup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ddac30939ec6e5269dffdcc50cac1a806b46f3" translate="yes" xml:space="preserve">
          <source>This function is called after all other test functions in the &lt;a href=&quot;qml-testcase&quot;&gt;TestCase&lt;/a&gt; type have completed. The default implementation does nothing. The application can provide its own implementation to perform test case cleanup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4ce8a1babbe43e92429463470703a459e439c9" translate="yes" xml:space="preserve">
          <source>This function is called after each test function that is executed in the &lt;a href=&quot;qml-qttest-testcase&quot;&gt;TestCase&lt;/a&gt; type. The default implementation does nothing. The application can provide its own implementation to perform cleanup after each test function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3147aeae1eb12e858f7a4f38c80ebbef67e63870" translate="yes" xml:space="preserve">
          <source>This function is called after each test function that is executed in the &lt;a href=&quot;qml-testcase&quot;&gt;TestCase&lt;/a&gt; type. The default implementation does nothing. The application can provide its own implementation to perform cleanup after each test function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c6cff685fe63324566d283c0bc3445502df9fa" translate="yes" xml:space="preserve">
          <source>This function is called as a result of &lt;a href=&quot;qquickitem#update&quot;&gt;QQuickFramebufferObject::update&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49caf1ee10e52ed00b50f0f42f5302ebbb82b0e6" translate="yes" xml:space="preserve">
          <source>This function is called automatically by non-const member functions of &lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt; if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af234c3c14ffa001dad88211c2ee465f77337956" translate="yes" xml:space="preserve">
          <source>This function is called automatically for you when the &lt;a href=&quot;qgraphicsview#backgroundBrush-prop&quot;&gt;backgroundBrush&lt;/a&gt; or &lt;a href=&quot;qgraphicsscene#backgroundBrush-prop&quot;&gt;QGraphicsScene::backgroundBrush&lt;/a&gt; properties change; you only need to call this function if you have reimplemented &lt;a href=&quot;qgraphicsscene#drawBackground&quot;&gt;QGraphicsScene::drawBackground&lt;/a&gt;() or &lt;a href=&quot;qgraphicsview#drawBackground&quot;&gt;QGraphicsView::drawBackground&lt;/a&gt;() to draw a custom background, and need to trigger a full redraw.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4040a4633c7541446bae4fefef5f34b37e82692c" translate="yes" xml:space="preserve">
          <source>This function is called automatically from &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;'s destructor and by the event loop at regular intervals, so you normally don't need to call it yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18279624b29b7b4fead63588671c1ee29f2fdc10" translate="yes" xml:space="preserve">
          <source>This function is called before any other test functions in the &lt;a href=&quot;qml-qttest-testcase&quot;&gt;TestCase&lt;/a&gt; type. The default implementation does nothing. The application can provide its own implementation to perform test case initialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6b28da7aef36b4ce3d00e1fe23e21ee7ae69fd" translate="yes" xml:space="preserve">
          <source>This function is called before any other test functions in the &lt;a href=&quot;qml-testcase&quot;&gt;TestCase&lt;/a&gt; type. The default implementation does nothing. The application can provide its own implementation to perform test case initialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a80eec279dd56fdea002bd197a8048fba8004a" translate="yes" xml:space="preserve">
          <source>This function is called before each test function that is executed in the &lt;a href=&quot;qml-qttest-testcase&quot;&gt;TestCase&lt;/a&gt; type. The default implementation does nothing. The application can provide its own implementation to perform initialization before each test function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be06597634a29020af09a45b69e663cd87929936" translate="yes" xml:space="preserve">
          <source>This function is called before each test function that is executed in the &lt;a href=&quot;qml-testcase&quot;&gt;TestCase&lt;/a&gt; type. The default implementation does nothing. The application can provide its own implementation to perform initialization before each test function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e233a6598fb89756b4bad7a2e8261b6911607a" translate="yes" xml:space="preserve">
          <source>This function is called by &lt;a href=&quot;qaxbase#initialize&quot;&gt;initialize&lt;/a&gt;() if the control string contains the substring &quot;/{&quot;. The information about the remote machine needs to be provided in front of the substring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1908628c11862b9d99484fd501e17ebf1e7f81" translate="yes" xml:space="preserve">
          <source>This function is called by &lt;a href=&quot;qaxbase#initialize&quot;&gt;initialize&lt;/a&gt;() if the control string contains the substring &quot;}&amp;amp;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c8c8cc3fa7040f3f0fbf4a5447a4c76c20ef6e" translate="yes" xml:space="preserve">
          <source>This function is called by &lt;a href=&quot;qaxbase#initialize&quot;&gt;initialize&lt;/a&gt;() if the control string contains the substring &quot;}:&quot;. The license key needs to follow this substring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c191b6a5ac8749296cd31cc295b173ebc539bfe6" translate="yes" xml:space="preserve">
          <source>This function is called by &lt;a href=&quot;qaxbase#initialize&quot;&gt;initialize&lt;/a&gt;() if the control string is the name of an existing file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58545dd778ad77e3e1f8b5e38728e97e7b0f62ed" translate="yes" xml:space="preserve">
          <source>This function is called by &lt;a href=&quot;qaxwidget#initialize&quot;&gt;initialize&lt;/a&gt;(). If you reimplement initialize to customize the actual control instantiation, call this function in your reimplementation to have the control embedded by the default client side. Creates the client site for the ActiveX control, and returns true if the control could be embedded successfully, otherwise returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e083384d0ac87104b2ceccad45000d4dbc8d204c" translate="yes" xml:space="preserve">
          <source>This function is called by &lt;a href=&quot;qcanbusdevice#connectDevice&quot;&gt;connectDevice&lt;/a&gt;(). Subclasses must provide an implementation which returns &lt;code&gt;true&lt;/code&gt; if the CAN bus connection could be established; otherwise &lt;code&gt;false&lt;/code&gt;. The &lt;a href=&quot;qcanbusdevice&quot;&gt;QCanBusDevice&lt;/a&gt; implementation ensures upon entry of this function that the device's &lt;a href=&quot;qcanbusdevice#state&quot;&gt;state&lt;/a&gt;() is set to &lt;a href=&quot;qcanbusdevice#CanBusDeviceState-enum&quot;&gt;QCanBusDevice::ConnectingState&lt;/a&gt; already.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b992906a0a26af9948d57a7699e1c99946aa65" translate="yes" xml:space="preserve">
          <source>This function is called by &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;. Reimplement this function when creating a subclass of &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58229ce686d04eaf13065c24f2d77fec62fead67" translate="yes" xml:space="preserve">
          <source>This function is called by &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;(), and provides its base implementation, using &lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;(). Buffered devices can improve the performance of &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;() by reimplementing this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79386c31d039e57207f7a9be4218fbc3e560f6f" translate="yes" xml:space="preserve">
          <source>This function is called by &lt;a href=&quot;qmodbusdevice#connectDevice&quot;&gt;connectDevice&lt;/a&gt;(). Subclasses must provide an implementation that returns &lt;code&gt;true&lt;/code&gt; on successful Modbus connection or connection initiation; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4737589fc6caadc29958c55bb9b7d4cc16c74265" translate="yes" xml:space="preserve">
          <source>This function is called by &lt;a href=&quot;qtcpserver#incomingConnection&quot;&gt;QTcpServer::incomingConnection&lt;/a&gt;() to add the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7759f02dc84884620d57c4c11da41b5db759d9b6" translate="yes" xml:space="preserve">
          <source>This function is called by &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; to determine whether the &lt;b&gt;Finish&lt;/b&gt; button should be shown for this page or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da347f6f2f7c7b352d2498527b0f5271749ec49" translate="yes" xml:space="preserve">
          <source>This function is called by Qt to create a new &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; object for the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c614e8e3253ed3afd82187a1c8d723e46ab573d" translate="yes" xml:space="preserve">
          <source>This function is called by the default implementations of &lt;a href=&quot;qgraphicsitem#contains&quot;&gt;contains&lt;/a&gt;() and &lt;a href=&quot;qgraphicsitem#collidesWithPath&quot;&gt;collidesWithPath&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bca4853ae9b9f9c7096873e4114cb8ce4194f7f" translate="yes" xml:space="preserve">
          <source>This function is called by the framework to allow the recognizer to filter input events dispatched to &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; or &lt;a href=&quot;qgraphicsobject&quot;&gt;QGraphicsObject&lt;/a&gt; instances that it is monitoring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c775a67e9149a68941f5c029105724fe90ef2c69" translate="yes" xml:space="preserve">
          <source>This function is called by the framework to reset a given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029361b49b68a6ef8a91820acdc7f4716d6d5a03" translate="yes" xml:space="preserve">
          <source>This function is called by the general &lt;a href=&quot;qmimedata#data&quot;&gt;data&lt;/a&gt;() getter and by the convenience getters (&lt;a href=&quot;qmimedata#text&quot;&gt;text&lt;/a&gt;(), &lt;a href=&quot;qmimedata#html&quot;&gt;html&lt;/a&gt;(), &lt;a href=&quot;qmimedata#urls&quot;&gt;urls&lt;/a&gt;(), &lt;a href=&quot;qmimedata#imageData&quot;&gt;imageData&lt;/a&gt;(), and &lt;a href=&quot;qmimedata#colorData&quot;&gt;colorData&lt;/a&gt;()). You can reimplement it if you want to store your data using a custom data structure (instead of a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;, which is what &lt;a href=&quot;qmimedata#setData&quot;&gt;setData&lt;/a&gt;() provides). You would then also need to reimplement &lt;a href=&quot;qmimedata#hasFormat&quot;&gt;hasFormat&lt;/a&gt;() and &lt;a href=&quot;qmimedata#formats&quot;&gt;formats&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e91e1e6fae419469f0d1dd449e3fcb58377e28b" translate="yes" xml:space="preserve">
          <source>This function is called by the layout system. It is used only if &lt;a href=&quot;qstyle#PixelMetric-enum&quot;&gt;PM_LayoutHorizontalSpacing&lt;/a&gt; or &lt;a href=&quot;qstyle#PixelMetric-enum&quot;&gt;PM_LayoutVerticalSpacing&lt;/a&gt; returns a negative value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32adb5354677ffafb06879cf9815edc488e32f36" translate="yes" xml:space="preserve">
          <source>This function is called by the renderer and should paint this node with directly invoking commands in the graphics API (OpenGL, Direct3D, etc.) currently in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc79aa36c623d7dbd31a02b62099401b9487aa4" translate="yes" xml:space="preserve">
          <source>This function is called by the rich text engine to request data that isn't directly stored by &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;, but still associated with it. For example, images are referenced indirectly by the name attribute of a &lt;a href=&quot;qtextimageformat&quot;&gt;QTextImageFormat&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ca5a0a597e81feb238985f7d866fb8a217e723" translate="yes" xml:space="preserve">
          <source>This function is called by the scene graph before geometry is rendered to make sure the shader is in the right state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb5d097534cd96fb969df996824207e8107b29d" translate="yes" xml:space="preserve">
          <source>This function is called by the scene graph to indicate that geometry is about to be rendered using this shader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2daba728110f2f87715049c0dbaaec85797fe6" translate="yes" xml:space="preserve">
          <source>This function is called by the scene graph to indicate that geometry will no longer to be rendered using this shader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6b0f25f4bb792f6b2b878917ebb1e22d2155de" translate="yes" xml:space="preserve">
          <source>This function is called by the scene graph to return a unique instance per subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d5d3e5c82b95c3bcd6d3e32b4b7a4cccf85054" translate="yes" xml:space="preserve">
          <source>This function is called continuously with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7999ef7b4033e95dd969aaa4d3e322f4650a3d1" translate="yes" xml:space="preserve">
          <source>This function is called during the scene graph sync phase when the GUI thread is blocked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85bdce3830928170c4f57925c9e8a20abe8d6276" translate="yes" xml:space="preserve">
          <source>This function is called for absolute URLs that are prefixed with &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt; and for unrecognized schemes, such as &lt;code&gt;mailto:&lt;/code&gt;, which will be handled by &lt;a href=&quot;qdesktopservices&quot;&gt;QDesktopServices&lt;/a&gt; if accepted. To have this function called also upon receiving navigation requests to local URLs, prefix the URLs with &lt;code&gt;http://&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0e313e470b5d53a9d6a67d6e949a41bdb8b3ae" translate="yes" xml:space="preserve">
          <source>This function is called for every widget at some point after it has been fully created but just</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac0d5bb0dfea57049279e3e936ee37a3ecdd06c" translate="yes" xml:space="preserve">
          <source>This function is called from &lt;code&gt;addLayout()&lt;/code&gt; or &lt;code&gt;insertLayout()&lt;/code&gt; functions in subclasses to add layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd68ca0ef2952150cb84e3636d3c840bc2777eb" translate="yes" xml:space="preserve">
          <source>This function is called from &lt;code&gt;addWidget()&lt;/code&gt; functions in subclasses to add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e216fe19e25d35df28f373706e71df46537d2c11" translate="yes" xml:space="preserve">
          <source>This function is called from the &lt;a href=&quot;qwebenginepage#createWindow&quot;&gt;createWindow()&lt;/a&gt; method of the associated &lt;a href=&quot;qwebenginepage&quot;&gt;QWebEnginePage&lt;/a&gt; each time the page wants to create a new window of the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7bb58a34a76c0937a2ea2d896f36a3e1fbb4dc" translate="yes" xml:space="preserve">
          <source>This function is called from the destructor. Therefore there will typically be no need to call it directly. Pay attention however to the fact that this requires the context, that was passed to &lt;a href=&quot;qquickrendercontrol#initialize&quot;&gt;initialize&lt;/a&gt;(), to be the current one at the time of destroying the &lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87d4d6a4fa43c4cb9f2d291e3f0598065f4061b" translate="yes" xml:space="preserve">
          <source>This function is called implicitly when the item is shown for the first time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91a2de58e925f68e330db27a587dcee90ae16e61" translate="yes" xml:space="preserve">
          <source>This function is called in the child process context just before the program is executed on Unix or &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; (i.e., after &lt;code&gt;fork()&lt;/code&gt;, but before &lt;code&gt;execve()&lt;/code&gt;). Reimplement this function to do last minute initialization of the child process. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f8314159fde6f4ea0b3f0034969c458e437984" translate="yes" xml:space="preserve">
          <source>This function is called on the rendering thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b462a7efbf0f4b513f41f4b32d0be7d0dc6be1" translate="yes" xml:space="preserve">
          <source>This function is called on the scene graph rendering thread to create a &lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; instance from the factory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff1c8e9b99a64a81d89565d201e59c9a782eb2b" translate="yes" xml:space="preserve">
          <source>This function is called on the thread on which the Qt Quick scene graph performs rendering, with the OpenGL context bound. Ownership of the returned instance is transferred: the returned instance will live on the render thread and will be destroyed automatically when necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e893d6365c8c122bd4734be39c623ae04a4bbc7" translate="yes" xml:space="preserve">
          <source>This function is called once for each QML test file, so any arguments are unique to that test. For example, this means that each QML test file will have its own QML engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8567b89eee4116620d04eecca93ba964168bdce6" translate="yes" xml:space="preserve">
          <source>This function is called to begin a transaction. If successful, return true, otherwise return false. The default implementation does nothing and returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c5490ee179ab6bcffffa86cc271a48abcac283b" translate="yes" xml:space="preserve">
          <source>This function is called to commit a transaction. If successful, return true, otherwise return false. The default implementation does nothing and returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88158e4a7603c21937383b0800f0bc8bfa66f2d9" translate="yes" xml:space="preserve">
          <source>This function is called to create a new window of the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e59001695dc2905098aa4f08ec41493f1f348d1" translate="yes" xml:space="preserve">
          <source>This function is called to determine whether the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a19326b2d29af56f29dff7f4997cfffa4c3edc" translate="yes" xml:space="preserve">
          <source>This function is called to draw the inline object,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5e1232d6aea13e0a383d9ade007b18cf1e2c8c" translate="yes" xml:space="preserve">
          <source>This function is called to handle this item's changes in geometry from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba1e163c0b468ed59ae57f3272b814f716a9d32" translate="yes" xml:space="preserve">
          <source>This function is called to initialize the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b281fc8410262acefa71ce13e577ec33b8ffbea5" translate="yes" xml:space="preserve">
          <source>This function is called to rollback a transaction. If successful, return true, otherwise return false. The default implementation does nothing and returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef709e6fb2d865c539237285694700d4d1bd87a4" translate="yes" xml:space="preserve">
          <source>This function is called to subscribe to event notifications from the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed70d1b4311dd137c23a406cfc36cfbb826578a" translate="yes" xml:space="preserve">
          <source>This function is called to unsubscribe from event notifications from the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af88018ce96f331c8f534c93c0e16eae5d10a7ec" translate="yes" xml:space="preserve">
          <source>This function is called upon receiving a request to navigate to the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0ae80d81df2ffadca8215c489c361a04939457" translate="yes" xml:space="preserve">
          <source>This function is called when a JavaScript program tries to print the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473d9c2ec97d5b36b3d1e60cb81c5e5cc2e4d516" translate="yes" xml:space="preserve">
          <source>This function is called when a new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="506a3dec0424d6262e960d6f7e3ece0ea3fd2639" translate="yes" xml:space="preserve">
          <source>This function is called when a new FBO is needed. This happens on the initial frame. If &lt;a href=&quot;qquickframebufferobject#textureFollowsItemSize-prop&quot;&gt;QQuickFramebufferObject::textureFollowsItemSize&lt;/a&gt; is set to true, it is called again every time the dimensions of the item changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76314b9dbc40d3720754550b0f2b4b8722fd61de" translate="yes" xml:space="preserve">
          <source>This function is called when all custom graphics resources allocated by this node have to be freed immediately. In case the node does not directly allocate graphics resources (buffers, textures, render targets, fences, etc.) through the graphics API that is in use, there is nothing to do here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab155ec99878a517c67c734a2cc06969d7e3577c" translate="yes" xml:space="preserve">
          <source>This function is called when an invalid certificate error is raised while loading a given request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3777c9c563bbbbf2447375a96df77105d90fdba" translate="yes" xml:space="preserve">
          <source>This function is called when an item should release graphics resources which are not already managed by the nodes returned from &lt;a href=&quot;qquickitem#updatePaintNode&quot;&gt;QQuickItem::updatePaintNode&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f01e84a5fd9e5636ea96e371e806b3fda30941e6" translate="yes" xml:space="preserve">
          <source>This function is called when the FBO should be rendered into. The framebuffer is bound at this point and the &lt;code&gt;glViewport&lt;/code&gt; has been set up to match the FBO size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203c5d60881e74662efd1095cfa802d123a5e18d" translate="yes" xml:space="preserve">
          <source>This function is called when the document is loaded and for each image in the document. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c525c0821606198c18c59907e80f5b2c2d164d" translate="yes" xml:space="preserve">
          <source>This function is called when the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e84d9d20d9653c52ee6a3ccf1c40aa429e0f166" translate="yes" xml:space="preserve">
          <source>This function is called when the item being dragged leaves the view. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c573f50a8ab54253bf2d227b68ff21dd65f7e35c" translate="yes" xml:space="preserve">
          <source>This function is called when the material shader is initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e545aaeda33cd12126ed845dcb31e1773fdb21b8" translate="yes" xml:space="preserve">
          <source>This function is called when the plugin is loaded. The plugin should register sensor backends by calling &lt;a href=&quot;qsensormanager#registerBackend&quot;&gt;QSensorManager::registerBackend&lt;/a&gt;(). Any backends that utilise other sensors should be registered in the QSensorPluginInterface::sensorsChanged() method instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4fd2b916c9d6225f2bbfc9d8bc80b6ae425c86c" translate="yes" xml:space="preserve">
          <source>This function is called when the registered backends have changed. Any backends that depend on the presence of other sensors should be registered or unregistered in here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9772c1e2168b6f21f7d1535749ac31fab23f300" translate="yes" xml:space="preserve">
          <source>This function is called when the sensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7cdc599f0c46add4bbf699b42163a0c7cf5af2" translate="yes" xml:space="preserve">
          <source>This function is called when the shader is compiled to specify which attributes exist. The order of the attribute names defines the attribute register position in the vertex shader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="716e37212248695bfcd8004d7ec6f93925aadf8d" translate="yes" xml:space="preserve">
          <source>This function is called when the shader is initialized to compile the actual &lt;a href=&quot;qopenglshaderprogram&quot;&gt;QOpenGLShaderProgram&lt;/a&gt;. Do not call it explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f793cf631d6cec14b0e27a0d1ebe7dbf3b03bd" translate="yes" xml:space="preserve">
          <source>This function is called when the state is entered. The given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86dde000d2ba5d2736b4a1c5508ddc8ac14b857a" translate="yes" xml:space="preserve">
          <source>This function is called when the state is exited. The given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03eb8a6dbad62cc8fde72077ea400a62f0cc7f4a" translate="yes" xml:space="preserve">
          <source>This function is called when the transition is triggered. The given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69578b04b4ef98015b17f4a9b797c1aa830ffce6" translate="yes" xml:space="preserve">
          <source>This function is called when the web content requests a file name, for example as a result of the user clicking on a file upload button in an HTML form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c3ada48b3f4af63fed269958409ded510126dc4" translate="yes" xml:space="preserve">
          <source>This function is called whenever</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6b5886aba4ea25dc81de60687ed40eb3b2dd99" translate="yes" xml:space="preserve">
          <source>This function is called whenever a JavaScript program running in a frame affiliated with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd0344fdb40ec0b5f088fe8988fa24fff668177" translate="yes" xml:space="preserve">
          <source>This function is called whenever the action is added to a container widget that supports custom widgets. If you don't want a custom widget to be used as representation of the action in the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="958071d7b866b08e66c43ea56c4fcfb9928d2ed2" translate="yes" xml:space="preserve">
          <source>This function is called whenever the action is removed from a container widget that displays the action using a custom</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc729ed4705dc3c06fe1cc2f81bd77fb6e87ac28" translate="yes" xml:space="preserve">
          <source>This function is called whenever the contents of the document change. A change occurs when text is inserted, removed, or a combination of these two. The change is specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1977eafbb8926074b8da109a73a2649081f76bcd" translate="yes" xml:space="preserve">
          <source>This function is called whenever the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b668e64bf904dd74b9c8c2c5d08dca2fd5c999" translate="yes" xml:space="preserve">
          <source>This function is called with key event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c14b91bb5fe20ff95592a6b40f41e002ed70bd29" translate="yes" xml:space="preserve">
          <source>This function is called with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e855efd9cdb5c87de1eddf2650b7297082d04f" translate="yes" xml:space="preserve">
          <source>This function is commonly used to discard the transaction after higher-level protocol errors or loss of stream synchronization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9b7b885ca7560a7c62966359091ac6871d754f" translate="yes" xml:space="preserve">
          <source>This function is commonly used to rollback the transaction when an incomplete read was detected prior to committing the transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142aa9de1e8f3017ec29fabdbf56c2c6a4dd13a1" translate="yes" xml:space="preserve">
          <source>This function is convenient when iterating a single directory. When using the &lt;a href=&quot;qdiriterator#IteratorFlag-enum&quot;&gt;QDirIterator::Subdirectories&lt;/a&gt; flag, you can use &lt;a href=&quot;qdiriterator#filePath&quot;&gt;filePath&lt;/a&gt;() to get the full path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461235413282cbe420c3338177a84d0012f2135c" translate="yes" xml:space="preserve">
          <source>This function is currently only implemented for Linux and Apple operating systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59010ea61d089ed65af2f337a05dd1b7ada64bb" translate="yes" xml:space="preserve">
          <source>This function is declared const so that it can be called from &lt;a href=&quot;qimageiohandler#canRead&quot;&gt;canRead&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f57d502be17d817fd0bcc7203182295a6b23e1" translate="yes" xml:space="preserve">
          <source>This function is defined in the &lt;code&gt;&amp;lt;QTextDocument&amp;gt;&lt;/code&gt; header file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5172b0b4d5eca97ae9a2d51860cb766aedbdb02" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Please use the overloaded version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0748c028b8448fdcbfde8c12f34f49a4a41695" translate="yes" xml:space="preserve">
          <source>This function is enabled by defining the &lt;code&gt;QT_SHAREDPOINTER_TRACK_POINTERS&lt;/code&gt; macro before including the &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a407a4acf44b51b7f06ab276d65b770d356d3c3" translate="yes" xml:space="preserve">
          <source>This function is equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5edcc496fd23001060b3d690ffb8fb2ac8ce3a5d" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;a href=&quot;qvariant#value&quot;&gt;QVariant::value&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01a2b6eee290671dc725ee2f3d0cd73fd9139c8" translate="yes" xml:space="preserve">
          <source>This function is equivalent to calling &lt;a href=&quot;qgraphicslayoutitem#setSizePolicy&quot;&gt;setSizePolicy&lt;/a&gt;(&lt;a href=&quot;qsizepolicy&quot;&gt;QSizePolicy&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5336ab35883d6ac4e3774037da9ab8f1648b91b7" translate="yes" xml:space="preserve">
          <source>This function is equivalent to calling update(&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3296f34999e4eedc40c7271db75b3a5d630029e3" translate="yes" xml:space="preserve">
          <source>This function is equivalent to extracting the information from &lt;a href=&quot;qbluetoothserviceinfo-sequence&quot;&gt;QBluetoothServiceInfo::Sequence&lt;/a&gt; returned by &lt;a href=&quot;qbluetoothserviceinfo#attribute&quot;&gt;QBluetoothServiceInfo::attribute&lt;/a&gt;(&lt;a href=&quot;qbluetoothserviceinfo#AttributeId-enum&quot;&gt;QBluetoothServiceInfo::ProtocolDescriptorList&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58695a987e34ca3173b8672bc8c9ede5e0470de1" translate="yes" xml:space="preserve">
          <source>This function is equivalent to extracting the information from &lt;a href=&quot;qbluetoothserviceinfo-sequence&quot;&gt;QBluetoothServiceInfo::Sequence&lt;/a&gt; returned by &lt;a href=&quot;qbluetoothserviceinfo#attribute&quot;&gt;QBluetoothServiceInfo::attribute&lt;/a&gt;(QBluetootherServiceInfo::ProtocolDescriptorList).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221b7c9658354a050f1c41ac188d4091bfbb94ef" translate="yes" xml:space="preserve">
          <source>This function is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7764c74eca9d7881b6a292d8ca8730ace1a0b248" translate="yes" xml:space="preserve">
          <source>This function is especially convenient since it will automatically copy parameters from this datagram to the new datagram as appropriate:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e66e3772489ca79190e5a7179afb8116fd2dd75" translate="yes" xml:space="preserve">
          <source>This function is especially useful if you have a long running operation and want to show its progress without allowing user input; i.e. by using the &lt;a href=&quot;qeventloop#ProcessEventsFlag-enum&quot;&gt;ExcludeUserInputEvents&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae311202d76fda1ff603fdadaac384b078089b8b" translate="yes" xml:space="preserve">
          <source>This function is especially useful if you have a long running operation, and want to show its progress without allowing user input by using the &lt;a href=&quot;qeventloop#ProcessEventsFlag-enum&quot;&gt;QEventLoop::ExcludeUserInputEvents&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a24db9749db0274ddd4acfa5c66b917ca7058b" translate="yes" xml:space="preserve">
          <source>This function is executed on each iteration. If the execution fails,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a96542eb41d810e173aaa09bd67fa4b732fe6f" translate="yes" xml:space="preserve">
          <source>This function is fast, and does not copy or convert image data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4101762f4b5ce2032b44929b31379ac5c8f9dfcd" translate="yes" xml:space="preserve">
          <source>This function is guaranteed to be atomic and is thus very handy for repeated measurements. Call &lt;a href=&quot;qtime#start&quot;&gt;start&lt;/a&gt;() to start the first measurement, and restart() for each later measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5609fe1b05a6fae170b72bb8e4060b418acb02" translate="yes" xml:space="preserve">
          <source>This function is identical to &lt;a href=&quot;#member&quot;&gt;member&lt;/a&gt;(), except that it operates on a string value instead of a list variable, and consequently the indices refer to character positions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ba52415ad99b9ae84ec4890b1f822f488557ba" translate="yes" xml:space="preserve">
          <source>This function is identical to &lt;a href=&quot;qlist#count-1&quot;&gt;count&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bbd558772624f31227644c96d23b82f91b4a198" translate="yes" xml:space="preserve">
          <source>This function is incremental and renders only the new part added to the Trace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7bbceb037f6b7132c832c0f7673711d363fe099" translate="yes" xml:space="preserve">
          <source>This function is intended for animations. An alternative is to multiple-inherit from &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; and use the &lt;a href=&quot;https://doc.qt.io/qt-5.13/animation-overview.html&quot;&gt;Animation Framework&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d50379d0cf6cd4f3162cb112d639896a82abdf5" translate="yes" xml:space="preserve">
          <source>This function is intended for testing applications where a condition changes based on asynchronous events. Use &lt;a href=&quot;qml-qttest-testcase#verify-method&quot;&gt;verify()&lt;/a&gt; for testing synchronous condition changes, and &lt;a href=&quot;qml-qttest-testcase#tryCompare-method&quot;&gt;tryCompare()&lt;/a&gt; for testing asynchronous property changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f7eb7470e354b64bb191b0d076745e69790ee9" translate="yes" xml:space="preserve">
          <source>This function is intended for testing applications where a condition changes based on asynchronous events. Use &lt;a href=&quot;qml-testcase#verify-method&quot;&gt;verify()&lt;/a&gt; for testing synchronous condition changes, and &lt;a href=&quot;qml-testcase#tryCompare-method&quot;&gt;tryCompare()&lt;/a&gt; for testing asynchronous property changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4bf2a4d5c7e1d1d3eb432cf21583ea9f190f37" translate="yes" xml:space="preserve">
          <source>This function is intended for testing applications where a property changes value based on asynchronous events. Use &lt;a href=&quot;qml-qttest-testcase#compare-method&quot;&gt;compare()&lt;/a&gt; for testing synchronous property changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341f4075b127137983781d94def4ed1f4d042112" translate="yes" xml:space="preserve">
          <source>This function is intended for testing applications where a property changes value based on asynchronous events. Use &lt;a href=&quot;qml-testcase#compare-method&quot;&gt;compare()&lt;/a&gt; for testing synchronous property changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a6f3e47f090f5540c4b59264bbc8f0a12e8a92" translate="yes" xml:space="preserve">
          <source>This function is intended to be a short-cut for quickly adding vertex and fragment shaders to a shader program without creating an instance of &lt;a href=&quot;qopenglshader&quot;&gt;QOpenGLShader&lt;/a&gt; first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7798cb0b9d4d9b2d5365bbffc6e58b12ebe96d" translate="yes" xml:space="preserve">
          <source>This function is linear in complexity; it determines the size of the returned bounding rect by iterating through all descendants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97dcd54687646108764c81d0fb8e1b49bf5f5f9" translate="yes" xml:space="preserve">
          <source>This function is meant to be called from within &lt;a href=&quot;qthread#run&quot;&gt;run&lt;/a&gt;(). It is necessary to call this function to start event handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c56367c2e1216ca66c1c6f22424fe8fdac3ac4" translate="yes" xml:space="preserve">
          <source>This function is most commonly called from within mouse event handlers in a subclass in &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf90a0754834768ef8ce6a6e06da014bdc12cd21" translate="yes" xml:space="preserve">
          <source>This function is most commonly used when reading data from the serial port in a loop. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67670b4e404ba3450cac5d8aec345f01777348a8" translate="yes" xml:space="preserve">
          <source>This function is most commonly used when reading data from the socket in a loop. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af77dac33ea93c392c21264b0a3fd9dfed227a60" translate="yes" xml:space="preserve">
          <source>This function is mostly used to set a default value that the user can override in the print dialog when you call setup().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0822c9b4f98d0789aeff414b8dbdea1451c60b1b" translate="yes" xml:space="preserve">
          <source>This function is mostly useful for setting a default value that the user can override in the print dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b60c0e69f1998cab07ef483c40b9c5c9322e97a" translate="yes" xml:space="preserve">
          <source>This function is mostly useful to pass a byte array to a function that accepts a &lt;code&gt;const char *&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7084803674a76e7a9567e06a56564c4cbf22a5cd" translate="yes" xml:space="preserve">
          <source>This function is mostly useful to pass a vector to a function that accepts a plain C++ array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8fab87d66d94feeb21133b867eba88cbd675054" translate="yes" xml:space="preserve">
          <source>This function is mostly useful to pass an array to a function that accepts a plain C++ array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641b0f0451e9406fdfd6c8c3fd0fccb76a8c3f82" translate="yes" xml:space="preserve">
          <source>This function is non-blocking and ideally should be used to check for the availability of the query result before calling &lt;a href=&quot;qopengltimerquery#waitForResult&quot;&gt;waitForResult&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a8ba8d08f0f3c9b3dd4f2a6a943ee83fd7c893" translate="yes" xml:space="preserve">
          <source>This function is not available if the remote call returns &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe4693e68a973e3e2c04155f7ae9b83e866be85" translate="yes" xml:space="preserve">
          <source>This function is not available in Qt 5.x until 5.0.2 and will return NULL in earlier versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f167c954599ba6678600877553a392c547c1c9cf" translate="yes" xml:space="preserve">
          <source>This function is not available in Qt 5.x until 5.0.2 and will return a null pixmap in earlier versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c18b81d0b021d8449df79a05237f79c284418a" translate="yes" xml:space="preserve">
          <source>This function is not available when &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; is defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d863d6946759a3db552d61b1cc0e72a8a3abfa7" translate="yes" xml:space="preserve">
          <source>This function is not called for empty model indices, i.e., indices for which the model returns an invalid &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f041223430abdc5ef981a39dc60c21c63b03d3ab" translate="yes" xml:space="preserve">
          <source>This function is not commonly used and is expected to be slow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8b07ea0f5a005c82e8f90af1422a3d2e87ceed" translate="yes" xml:space="preserve">
          <source>This function is not usually called in application code. To add a widget to a layout, use the &lt;a href=&quot;qlayout#addWidget&quot;&gt;addWidget&lt;/a&gt;() function; to add a child layout, use the addLayout() function provided by the relevant &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt; subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236e6269212c12dfaf2a83ee88e277dabfb11c1a" translate="yes" xml:space="preserve">
          <source>This function is not virtual. You can use alternative translation techniques by subclassing &lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34fb16a6cf685d944a0cda366a0d16ccdd975da" translate="yes" xml:space="preserve">
          <source>This function is often called in conjunction with the &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead&lt;/a&gt;() signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8eeec92dfdb9a089e869c01f8eb4d85fdbba16d" translate="yes" xml:space="preserve">
          <source>This function is only applicable to the X11 version of Qt. If no creator name is specified, the creator will be set to &quot;Qt&quot; followed by some version number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8ce058becd449bf423d1b43c1698878e9343e5" translate="yes" xml:space="preserve">
          <source>This function is only available if the program is being compiled in C++11 mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8eafe54a9481c06dfa65c6def7cc917caf3ec3" translate="yes" xml:space="preserve">
          <source>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11d4f3ab7703705bf7511e5ddec419da1d9d9e4" translate="yes" xml:space="preserve">
          <source>This function is only called if the result is in an active state. Derived classes must reimplement this function and position the result to the first record, and call &lt;a href=&quot;qsqlresult#setAt&quot;&gt;setAt&lt;/a&gt;() with an appropriate value. Return true to indicate success, or false to signify failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923823fe253b46264541f872ffa80c8c7066678e" translate="yes" xml:space="preserve">
          <source>This function is only called if the result is in an active state. Derived classes must reimplement this function and position the result to the last record, and call &lt;a href=&quot;qsqlresult#setAt&quot;&gt;setAt&lt;/a&gt;() with an appropriate value. Return true to indicate success, or false to signify failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed1be3a3dfff593601438a2854e2f973583e17d" translate="yes" xml:space="preserve">
          <source>This function is only called if the result is in an active state. Derived classes must reimplement this function and position the result to the row</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9279630d919cc54ca4933f037e912d0cd4d37807" translate="yes" xml:space="preserve">
          <source>This function is only called if the result is in an active state. The default implementation calls &lt;a href=&quot;qsqlresult#fetch&quot;&gt;fetch&lt;/a&gt;() with the next index. Derived classes can reimplement this function and position the result to the next record in some other way, and call &lt;a href=&quot;qsqlresult#setAt&quot;&gt;setAt&lt;/a&gt;() with an appropriate value. Return true to indicate success, or false to signify failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01c511bb4f2e36693c533f3b0f6eada091e390c" translate="yes" xml:space="preserve">
          <source>This function is only called if the result is in an active state. The default implementation calls &lt;a href=&quot;qsqlresult#fetch&quot;&gt;fetch&lt;/a&gt;() with the previous index. Derived classes can reimplement this function and position the result to the next record in some other way, and call &lt;a href=&quot;qsqlresult#setAt&quot;&gt;setAt&lt;/a&gt;() with an appropriate value. Return true to indicate success, or false to signify failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea3b58d3319d1b93f7e1f3cf27ecc3d8f120c2cb" translate="yes" xml:space="preserve">
          <source>This function is only reliable for visible objects (invisible objects might not be laid out correctly).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd1f6aad5eb88d0917221a7a18ac6bf271e58ca" translate="yes" xml:space="preserve">
          <source>This function is only relyable for visible objects (invisible object might not be laid out correctly).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce89f96ba38faca3280f2ba68e59b351892b83f2" translate="yes" xml:space="preserve">
          <source>This function is only supported under X11.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3dcaf2e029445752eb5c1ba08defd80f111bef" translate="yes" xml:space="preserve">
          <source>This function is particularly useful for applications with many top-level windows. It could, for example, be connected to a &lt;b&gt;Exit&lt;/b&gt; entry in the &lt;b&gt;File&lt;/b&gt; menu:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7158afb4ed46a64f5229756f5ed4dbc7c72add2" translate="yes" xml:space="preserve">
          <source>This function is potentially faster than multiple calls to &lt;a href=&quot;qpainter#drawPixmap&quot;&gt;drawPixmap&lt;/a&gt;(), since the backend can optimize state changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7226a72f17e3e66b75ae56ea5d18fb2bc7644e1a" translate="yes" xml:space="preserve">
          <source>This function is primarily useful when combining &lt;a href=&quot;qopenglshaderprogram&quot;&gt;QOpenGLShaderProgram&lt;/a&gt; with other OpenGL functions that operate directly on the shader program id, like &lt;code&gt;GL_OES_get_program_binary&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f26b798c0ea184560c97a9b3ea0392a8f7b1afc" translate="yes" xml:space="preserve">
          <source>This function is provided as a convenience, matching the &lt;a href=&quot;qdbusreply#value&quot;&gt;QDBusReply::value&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d437cfa42134dbb9d34ca41cb25d10a0cf32488d" translate="yes" xml:space="preserve">
          <source>This function is provided for API compatibility with &lt;code&gt;std::shared_ptr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fabbe208d24f364d90012768df8b1c8c460bfd7" translate="yes" xml:space="preserve">
          <source>This function is provided for API compatibility with std::weak_ptr.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fe942f0a71f19fc453de6df6097a5e0178f5a5" translate="yes" xml:space="preserve">
          <source>This function is provided for Qt API consistency. It is equivalent to &lt;a href=&quot;qdomnamednodemap#length&quot;&gt;length&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43206d5f843e3c716e1e7923ef1bddd91713272" translate="yes" xml:space="preserve">
          <source>This function is provided for Qt API consistency. It is equivalent to &lt;a href=&quot;qdomnodelist#item&quot;&gt;item&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01532e9c7f6a65e5946f4e1af753ccc3d7e07882" translate="yes" xml:space="preserve">
          <source>This function is provided for Qt API consistency. It is equivalent to &lt;a href=&quot;qdomnodelist#length&quot;&gt;length&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1507f908676d0d2707170b156a52f6f151604192" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility, appending the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f6342663aa9a3392986232a61312dcc5699903" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility, prepending the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43170dba9c69fe75e05b6d6fb4862b8a7a7bf0bb" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50fa7ad6854919146e71514ea8d9fe30cff2034f" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qbytearray#squeeze&quot;&gt;squeeze&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382fae6bd87eb6feb383b6a951b245e81e57efcd" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qhash#isEmpty&quot;&gt;isEmpty&lt;/a&gt;(), returning true if the hash is empty; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbfc17eca1e0752c83f37ddcbd0f76cdbd4cd6bc" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qjsonarray#append&quot;&gt;append&lt;/a&gt;(value) and will append</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99441bc1b7c209c383132ff9f3952a6b8c692059" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qjsonarray#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() and returns &lt;code&gt;true&lt;/code&gt; if the array is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229b2c6c5ea45957889bb3083398cee7ef7e274b" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qjsonarray#prepend&quot;&gt;prepend&lt;/a&gt;(value) and will prepend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa0b4501d93e47d9b8946058f5078f061ff66a31" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qjsonarray#removeFirst&quot;&gt;removeFirst&lt;/a&gt;(). The array must not be empty. If the array can be empty, call &lt;a href=&quot;qjsonarray#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() before calling this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c44f9d4cd0135ac911338e2852fc307f296b1b7b" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qjsonarray#removeLast&quot;&gt;removeLast&lt;/a&gt;(). The array must not be empty. If the array can be empty, call &lt;a href=&quot;qjsonarray#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() before calling this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68e24b5a26cb5c38ed4b8a17365381e3bfcdc14" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qjsonobject#isEmpty&quot;&gt;isEmpty&lt;/a&gt;(), returning &lt;code&gt;true&lt;/code&gt; if the object is empty; otherwise returning &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66433dad9d658ab8bf08f072f264096dd6112a4" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qlinkedlist#first&quot;&gt;first&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="360ad6074ff89b91f94d2eb4a73e24e9a63cc36d" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qlinkedlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() and returns &lt;code&gt;true&lt;/code&gt; if the list is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54aaf5b3904d1d38cd1d30efba8e94fd1dc31f82" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qlinkedlist#last&quot;&gt;last&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc746e6d5221c34a0112d454e511975362d193a5" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qlinkedlist#removeFirst&quot;&gt;removeFirst&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b67b8feb7c81cf9c16c3691154e9d6991d9b9a" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qlinkedlist#removeLast&quot;&gt;removeLast&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c12de91aa520410d97e10d8795c691e1453351f" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qlist#append&quot;&gt;append&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77fe6a2dbf520cdfa3b5098d88baaf4855d7ebd2" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qlist#first&quot;&gt;first&lt;/a&gt;(). The list must not be empty. If the list can be empty, call &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() before calling this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce4a33acd5959bd689b5f2a7b562680b565f577" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() and returns &lt;code&gt;true&lt;/code&gt; if the list is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e72ab9a6c5d7082d438f227a6cf0763412f031f" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qlist#last&quot;&gt;last&lt;/a&gt;(). The list must not be empty. If the list can be empty, call &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() before calling this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c277b79fad364fda191df735f0f2229b70b9081" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qlist#prepend&quot;&gt;prepend&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf1c5ff7ad188a84cb9d86710ebe6dc71147566" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qlist#removeFirst&quot;&gt;removeFirst&lt;/a&gt;(). The list must not be empty. If the list can be empty, call &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() before calling this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d04afe6240188d3064eb0a524b5012033f1265" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qlist#removeLast&quot;&gt;removeLast&lt;/a&gt;(). The list must not be empty. If the list can be empty, call &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() before calling this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b12660850f2a3c4cf2fd0293c569ca3645ef327" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qmap#isEmpty&quot;&gt;isEmpty&lt;/a&gt;(), returning true if the map is empty; otherwise returning false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0984afd91575668e430f9b60e2fa14479a0e53b5" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qstring#squeeze&quot;&gt;squeeze&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d0a969440189ff1f356baaf0e7736faf4044302" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qvector#first&quot;&gt;first&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f21e874f532bb7a749d8aa00c305082955559e" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qvector#isEmpty&quot;&gt;isEmpty&lt;/a&gt;(), returning &lt;code&gt;true&lt;/code&gt; if the vector is empty; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17215ea6196c30076bf9b30ccfe48a209e7e7d97" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qvector#last&quot;&gt;last&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b46783af2006a537fbcf0e0a4ce568de07443c" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qvector#removeFirst&quot;&gt;removeFirst&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052a7c2bd81f228e7e5577f35dbfa40659d34e6c" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qvector#removeLast&quot;&gt;removeLast&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e4f12a30164b4d2f7bef73580eac40beafde78" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qvector#squeeze&quot;&gt;squeeze&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f633bcad66f2f6b991a5136500bda37070c3abfd" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qwaitcondition#wakeAll&quot;&gt;wakeAll&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0001014f499034ae001886f6df5e6eafcc0e6241" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to &lt;a href=&quot;qwaitcondition#wakeOne&quot;&gt;wakeOne&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8cb3db660993dbef315b5ef7c92dc713e83d448" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to append(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66922051bb50cb6f798aef0eaac6f4053b7a05e4" translate="yes" xml:space="preserve">
          <source>This function is provided for STL compatibility. It is equivalent to prepend(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab713aafad52e1a4f515efd3f00305c8fd1406da" translate="yes" xml:space="preserve">
          <source>This function is provided for compatibility with other Qt containers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a19b52dc3693e7e3e92c893c840c7ff187fbd6" translate="yes" xml:space="preserve">
          <source>This function is provided for compatibility with the Standard Library concept &lt;code&gt;Lockable&lt;/code&gt;. It is equivalent to &lt;a href=&quot;qmutex#tryLock&quot;&gt;tryLock&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da21e83f6532378d73d3fd24598d6a1193521a3" translate="yes" xml:space="preserve">
          <source>This function is provided for convenience, allowing individual toggling of the selected state of an item. However, a more common way of selecting items is to call &lt;a href=&quot;qgraphicsscene#setSelectionArea&quot;&gt;QGraphicsScene::setSelectionArea&lt;/a&gt;(), which will call this function for all visible, enabled, and selectable items within a specified area on the scene.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18819488cc5e983031722ba1c99168894f9f52df" translate="yes" xml:space="preserve">
          <source>This function is provided for convenience. It is equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b26cf234e9eff6d033cec2ba5faf835bc4069fb" translate="yes" xml:space="preserve">
          <source>This function is provided for convenience. It's equivalent to calling &lt;a href=&quot;qgraphicsview#centerOn&quot;&gt;centerOn&lt;/a&gt;(&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c88cee2d8a81929b21a8be04403cf4486272cc" translate="yes" xml:space="preserve">
          <source>This function is provided for convenience. It's equivalent to calling &lt;a href=&quot;qgraphicsview#ensureVisible&quot;&gt;ensureVisible&lt;/a&gt;(&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6804e97c92e719359a342a3ba92efab27651fd" translate="yes" xml:space="preserve">
          <source>This function is provided for convenience. It's equivalent to calling &lt;a href=&quot;qgraphicsview#itemAt&quot;&gt;itemAt&lt;/a&gt;(&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bcb62bd46a8238ec280144541055d0e41526793" translate="yes" xml:space="preserve">
          <source>This function is provided for convenience. It's equivalent to calling &lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt;(&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17606a78650eaf1c9a21f31720505690c84077d" translate="yes" xml:space="preserve">
          <source>This function is provided for convenience. It's equivalent to calling &lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt;(&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81806431c7d59a8d88bd18c0bc81d2a76e1b6d1e" translate="yes" xml:space="preserve">
          <source>This function is provided for convenience. It's equivalent to calling &lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;mapToScene&lt;/a&gt;(&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="161d9b71b239153b425258083f7ddc65e76a9158" translate="yes" xml:space="preserve">
          <source>This function is provided for convenience. It's equivalent to calling &lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;mapToScene&lt;/a&gt;(&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30571953f1d807d95d5c24928098a5332c736fce" translate="yes" xml:space="preserve">
          <source>This function is provided for convenience. It's equivalent to calling items(&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47709987f540d1aff72c6e631851ebdc3b0c52c7" translate="yes" xml:space="preserve">
          <source>This function is provided for derived classes to indicate whether or not the current statement is a SQL &lt;code&gt;SELECT&lt;/code&gt; statement. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b219f4d6618624fbc5551bbfd80c2279813b45c5" translate="yes" xml:space="preserve">
          <source>This function is provided for derived classes to set the internal (zero-based) row position to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a282159cfb8f1c42132e5549d37bb333de26ccf" translate="yes" xml:space="preserve">
          <source>This function is provided for derived classes to set the internal active state to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff74c1b9f24e169d51226c0e01ecae116d8fe59a" translate="yes" xml:space="preserve">
          <source>This function is provided for derived classes to set the last error to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a5c5c828303b48df7c87d697c7c049d519dcc9" translate="yes" xml:space="preserve">
          <source>This function is provided for low-level code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d761ef26916d5ca4cc65f569097a83966520f07" translate="yes" xml:space="preserve">
          <source>This function is provided for low-level code. If you're using &lt;a href=&quot;qdbusabstractinterface#call&quot;&gt;QDBusInterface::call&lt;/a&gt;(), error codes are reported by its return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f91762bd525a2b9dc2d7160e63363a1f8f76d1" translate="yes" xml:space="preserve">
          <source>This function is provided for those who need to manipulate the list, in order to add or remove a TLD. It is not recommended to change its value for purposes other than testing, as it may expose users to security risks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e93d4136b9a1666161f34a564331bb2cfc07d5" translate="yes" xml:space="preserve">
          <source>This function is provided so that you may support &quot;virtual copy constructors&quot; for your own types. In order to so, you should declare a template-specialization of this function for your own type, like the example below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a8e3a4ae5e3a54e7dcce24c51b34813e8590480" translate="yes" xml:space="preserve">
          <source>This function is provided to make &lt;a href=&quot;qcborarray&quot;&gt;QCborArray&lt;/a&gt; iterators behave like C++ pointers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed8f152c8bfb835323373771454d18776c1d4192" translate="yes" xml:space="preserve">
          <source>This function is provided to make &lt;a href=&quot;qjsonarray&quot;&gt;QJsonArray&lt;/a&gt; iterators behave like C++ pointers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ebbb473f8a07e54834983beac13bedd4bd47e3" translate="yes" xml:space="preserve">
          <source>This function is provided to make &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; iterators behave like C++ pointers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d66f465eca022e15ef5da3df4f59a6ab9a20e62" translate="yes" xml:space="preserve">
          <source>This function is provided to support right-to-left desktops, and is typically used in implementations of the &lt;a href=&quot;qstyle#subControlRect&quot;&gt;subControlRect&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b468d06f160099aa506b3bf73aedf7b6bf2017b0" translate="yes" xml:space="preserve">
          <source>This function is reserved for future use by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c00fa61b11afd7dca9113a9013b2c3bef728e656" translate="yes" xml:space="preserve">
          <source>This function is responsible for closing the CAN bus connection. The implementation must ensure that the instance's &lt;a href=&quot;qcanbusdevice#state&quot;&gt;state&lt;/a&gt;() is set to &lt;a href=&quot;qcanbusdevice#CanBusDeviceState-enum&quot;&gt;QCanBusDevice::UnconnectedState&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504b8119858a27b4774b1810a18b14f9efae2fa0" translate="yes" xml:space="preserve">
          <source>This function is responsible for closing the Modbus connection. The implementation must ensure that the instance's &lt;a href=&quot;qmodbusdevice#state&quot;&gt;state&lt;/a&gt;() is set to &lt;a href=&quot;qmodbusdevice#State-enum&quot;&gt;QModbusDevice::UnconnectedState&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6860294b9635c190456ace1c83afb3b5bf78db48" translate="yes" xml:space="preserve">
          <source>This function is significantly faster to compute than the exact &lt;a href=&quot;qpainterpath#boundingRect&quot;&gt;boundingRect&lt;/a&gt;(), and the returned rectangle is always a superset of the rectangle returned by &lt;a href=&quot;qpainterpath#boundingRect&quot;&gt;boundingRect&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69f3b5d0cec7e704ace8f55974a5732febc6feb" translate="yes" xml:space="preserve">
          <source>This function is simply a wrapper for &lt;a href=&quot;qabstracteventdispatcher#processEvents&quot;&gt;QAbstractEventDispatcher::processEvents&lt;/a&gt;(). See the documentation for that function for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647a3d3932dcd5dcae4245e8c350c41d70eb23e2" translate="yes" xml:space="preserve">
          <source>This function is slow because it involves converting to/from a &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;, and non-trivial computations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490d877d98870dd00618f538777722a1052841e0" translate="yes" xml:space="preserve">
          <source>This function is slow because it involves converting to/from a &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931d1d3bb449a649e572419ecfe902b2d5f3151f" translate="yes" xml:space="preserve">
          <source>This function is slow because it involves transformation to a &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;, non-trivial computations and a transformation back to a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e0c292203b5d07a56bb6719b64ca959fb2ae6d" translate="yes" xml:space="preserve">
          <source>This function is slow compared to the other Unicode conversions. Use &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;(const &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt; *, int) or &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;(const &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt; *) if possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e11b7f3582481534f174ed8ea977db96a7f8c0" translate="yes" xml:space="preserve">
          <source>This function is suitable for calling also when the underlying platform window is already destroyed. This means that it is safe to call this function from a &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; subclass' destructor. If there is no native window anymore, an offscreen surface is used instead. This ensures that OpenGL resource cleanup operations in the destructor will always work, as long as this function is called first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20c83dc9461fe9a4ad36195d9cfea82b0f052da" translate="yes" xml:space="preserve">
          <source>This function is suitable for method calls only. It is guaranteed that the slot will be called exactly once with the reply, as long as the parameter types match and no error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3fff1a70b344873546db55d7229ed64da17dbf" translate="yes" xml:space="preserve">
          <source>This function is suitable for use in Qt APIs that take a millisecond timeout, such as the many &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;&lt;code&gt;waitFor&lt;/code&gt; functions or the timed lock functions in &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt;, &lt;a href=&quot;qwaitcondition&quot;&gt;QWaitCondition&lt;/a&gt;, &lt;a href=&quot;qsemaphore&quot;&gt;QSemaphore&lt;/a&gt;, or &lt;a href=&quot;qreadwritelock&quot;&gt;QReadWriteLock&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c39227d84abf7a16592a8338fc6dab83f98ff67" translate="yes" xml:space="preserve">
          <source>This function is the counterpart to &lt;a href=&quot;qstyle#polish&quot;&gt;polish&lt;/a&gt;(). It is called for every polished widget whenever the style is dynamically changed; the former style has to unpolish its settings before the new style can polish them again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd1719abc609d9ea823cac7b5f242381790ea26" translate="yes" xml:space="preserve">
          <source>This function is the only place when it is safe for the renderer and the item to read and write each others members.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8ed796ee5cab6231b2c1093fd4d98c01df5ff7" translate="yes" xml:space="preserve">
          <source>This function is the same as &lt;a href=&quot;qtabwidget#addTab&quot;&gt;addTab&lt;/a&gt;(), but with an additional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29eba74964788186deb511ffc421680d64480b15" translate="yes" xml:space="preserve">
          <source>This function is the same as &lt;a href=&quot;qtabwidget#insertTab&quot;&gt;insertTab&lt;/a&gt;(), but with an additional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbbcb85a05648ccdd36e6a87624b92a40e539f0b" translate="yes" xml:space="preserve">
          <source>This function is the same as combining this item's scene transform with the view's viewport transform, but it also understands the &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIgnoresTransformations&lt;/a&gt; flag. The device transform can be used to do accurate coordinate mapping (and collision detection) for untransformable items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d1e601fa128165daa07ce11ff19bd9b99f0934c" translate="yes" xml:space="preserve">
          <source>This function is timeconsuming and its use is discouraged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b89b41a7989e83c502bfcd644be2d1da4f44160a" translate="yes" xml:space="preserve">
          <source>This function is typically used to register the revision of a base class to use for the specified version of the type (see &lt;a href=&quot;qtqml-cppintegration-definetypes#type-revisions-and-versions&quot;&gt;Type Revisions and Versions&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15416b38b646185d09e97d8aaa6513c12b51b18d" translate="yes" xml:space="preserve">
          <source>This function is typically used together with construct() to perform low-level management of the memory used by a type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2b985b9c36373d3772ec7b1721958a57633d86" translate="yes" xml:space="preserve">
          <source>This function is used as the &amp;lt; operator when sorting, and handles the following &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b997cbc47ed72bd04cee574491d84d34ef980f" translate="yes" xml:space="preserve">
          <source>This function is used by &lt;a href=&quot;qgraphicsitem#isObscuredBy&quot;&gt;isObscuredBy&lt;/a&gt;(), which is called by underlying items to determine if they are obscured by this item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6faf8b283a7cadb0339a3b89fb5f2059694a38f9" translate="yes" xml:space="preserve">
          <source>This function is used by gesture recognizers to inform the scroller about a new input event. The scroller changes its internal &lt;a href=&quot;qscroller#state-prop&quot;&gt;state&lt;/a&gt;() according to the input event and its attached scroller properties. The scroller doesn't distinguish between the kind of input device the event came from. Therefore the event needs to be split into the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d2b4f03cf6f416b9cc9d674c21e53da8efbe91" translate="yes" xml:space="preserve">
          <source>This function is used by subclasses of &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; to specify custom print and paint engines (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6db10b3df75a0aec6a1290be5bd044bc0eb6651" translate="yes" xml:space="preserve">
          <source>This function is used in &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;'s base implementation for window frame interaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4d56063c4a68eee7d202d99f95291645ba4e98" translate="yes" xml:space="preserve">
          <source>This function is used in views with a horizontal header to find the size hint for a header section based on the contents of the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303abae5d3b6644b8ba6cd3f970ecf811dbbe2f9" translate="yes" xml:space="preserve">
          <source>This function is used in views with a vertical header to find the size hint for a header section based on the contents of the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232a98fbeba42329786cb41e69f635f0bf78aa90" translate="yes" xml:space="preserve">
          <source>This function is used to access local files on Qt for WebAssembly, where the web sandbox places restrictions on how such access may happen. Its implementation will make the browser display a native file dialog, where the user makes the file selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1c537b2e501a6935258b9adf99063f955aeded" translate="yes" xml:space="preserve">
          <source>This function is used to draw</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87205a283c404aa5a90d4a97013bacdbd562bcba" translate="yes" xml:space="preserve">
          <source>This function is used to ensure that declarations inside a scope are only processed if the variable contains the correct number of values. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb15b397eb10120b61797cf06797165c9533d75" translate="yes" xml:space="preserve">
          <source>This function is used to handle tool tips, and What's This? mode, if the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb403a2f5f1b09d3075da3c3a3451a38c5c287ae" translate="yes" xml:space="preserve">
          <source>This function is used to register a &lt;a href=&quot;qnearfieldmanager&quot;&gt;QNearFieldManager&lt;/a&gt; instance to receive notifications when a NDEF message matching a pre-registered message format is received. See the section on &lt;a href=&quot;qnearfieldmanager#automatically-launching-ndef-message-handlers&quot;&gt;Automatically launching NDEF message handlers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349a7ad3782cff59d33b2ce116c3846b310c8808" translate="yes" xml:space="preserve">
          <source>This function is used to set the value of the last error,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523668ab2ca4629fe6cd0c0b05638f032686f927" translate="yes" xml:space="preserve">
          <source>This function is used to synchronize the QML scene with the rendering scene graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7606d4593c1b17469bc8b8ff24407855f982ccb4" translate="yes" xml:space="preserve">
          <source>This function is used usually in &lt;code&gt;operator&amp;gt;&amp;gt;&lt;/code&gt; streaming operators, as in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a60e9b4658c27dd3d59fb8897b27ee5ab2d7309" translate="yes" xml:space="preserve">
          <source>This function is used usually in &lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt; streaming operators, as in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f854402be168e753f3f1d0f2c005348a04ffef3" translate="yes" xml:space="preserve">
          <source>This function is useful for animations, where only parts of the frame may be updated at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc83c63624c78930ab8973e5eb1d03b90c764686" translate="yes" xml:space="preserve">
          <source>This function is useful for code that needs to build a huge hash and wants to avoid repeated reallocation. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06de6a653c426df83164cd34b593b31084731621" translate="yes" xml:space="preserve">
          <source>This function is useful for code that needs to build a huge set and wants to avoid repeated reallocation. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c0f037457e39a5db5588ffd9919c3e1fc19bf8" translate="yes" xml:space="preserve">
          <source>This function is useful for code that needs to build up a long string and wants to avoid repeated reallocation. In this example, we want to add to the string until some condition is &lt;code&gt;true&lt;/code&gt;, and we're fairly sure that size is large enough to make a call to reserve() worthwhile:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4cf839422a16ad6b00cec60110293fccd221776" translate="yes" xml:space="preserve">
          <source>This function is useful for code that requires simulating a pending call, but that has already finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f9a6f54e50607b2c5a81c5634b437bfb350f86" translate="yes" xml:space="preserve">
          <source>This function is useful for custom drawing or positioning of items in the style's components. For example, it can be used to calculate the angles at which to draw an arc around the dial indicating the safe range of values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e778b88ff91ce5359f64c4bf8948a19d039ce425" translate="yes" xml:space="preserve">
          <source>This function is useful for custom drawing or positioning of items in the style's components. For example, it can be used to calculate the angles at which to draw an arc around the gauge indicating the safe area for the needle to be within.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19cb13eb5edb0c64b3b6796dba7eb9524b4d2f92" translate="yes" xml:space="preserve">
          <source>This function is useful for doing auto tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d07a30d1d1db5d11ca8cfaa2b7dede0aac3bb7" translate="yes" xml:space="preserve">
          <source>This function is useful for optimization purposes. For instance, there's no point in drawing the source in device coordinates to avoid pixmap scaling if this function returns &lt;code&gt;true&lt;/code&gt; - the source pixmap will be scaled anyways.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae98a12c6842f46de18817e2c00c80e763af8f45" translate="yes" xml:space="preserve">
          <source>This function is useful for registering &lt;a href=&quot;qobject#Q_NAMESPACE&quot;&gt;Q_NAMESPACE&lt;/a&gt; namespaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0134717b30d7a0dc892d449bcc874f952933cff" translate="yes" xml:space="preserve">
          <source>This function is useful if a floating point comparison requires a certain precision. Therefore, if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c19972ce802317b28fb9675759b18be1b7cbe6" translate="yes" xml:space="preserve">
          <source>This function is useful if you have exposed a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; to the JavaScript environment and later in your program would like to regain access. It does not require you to keep the wrapper around that was returned from &lt;a href=&quot;qjsengine#newQObject&quot;&gt;QJSEngine::newQObject&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ffcd772f38e6cec94887fba5405960a0a921213" translate="yes" xml:space="preserve">
          <source>This function is useful if you need to pass a query string that does not fit into the key-value pattern, or that uses a different scheme for encoding special characters than what is suggested by &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d819df31e2c21405a11e2a65c756159a48771f7" translate="yes" xml:space="preserve">
          <source>This function is useful in some circumstances, for example if you want to use &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; objects as keys in a &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5253a81d6c9641cadbb70fa12c6909d70a7940dd" translate="yes" xml:space="preserve">
          <source>This function is useful in some circumstances, for example if you want to use &lt;a href=&quot;qkeysequence&quot;&gt;QKeySequence&lt;/a&gt; objects as keys in a &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763632149f8f86eb66e621de526819a24ec28afd" translate="yes" xml:space="preserve">
          <source>This function is useful to construct regexp patterns dynamically:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cede1dd0a1b6e05e9c23167e0c67ffad53d605aa" translate="yes" xml:space="preserve">
          <source>This function is useful to create objects, or get properties on Android UI thread:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5cb244f1846a82b1114c06e9c773e8b4844e8f" translate="yes" xml:space="preserve">
          <source>This function is useful to pre-allocate the buffer whose pointer can be passed to &lt;a href=&quot;qcborstreamreader#readStringChunk&quot;&gt;readStringChunk&lt;/a&gt;() later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04fd1c5090f7da5d8caf26aed72b0d2803e6c283" translate="yes" xml:space="preserve">
          <source>This function is useful to register typedefs so they can be used by &lt;a href=&quot;qmetaproperty&quot;&gt;QMetaProperty&lt;/a&gt;, or in QueuedConnections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e2c44219bbad966c372f2d34c3726e77030ec3" translate="yes" xml:space="preserve">
          <source>This function is useful to set asynchronously properties of objects that must be set on on Android UI thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c344bef0dd066fabc6579ffc17408ff317eb56c" translate="yes" xml:space="preserve">
          <source>This function is useful when reimplementing &lt;a href=&quot;qlistwidgetitem#clone&quot;&gt;clone&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e842db5002a8d973f62e82329b3f9aa81e73199" translate="yes" xml:space="preserve">
          <source>This function is useful when reimplementing &lt;a href=&quot;qstandarditem#clone&quot;&gt;clone&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a276660252a8b22a71d0867ea30c9c760fd9e80b" translate="yes" xml:space="preserve">
          <source>This function is useful when reimplementing &lt;a href=&quot;qtablewidgetitem#clone&quot;&gt;clone&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dfb18295a9f7e22ea758bb322c8926d2c368550" translate="yes" xml:space="preserve">
          <source>This function is useful when reimplementing &lt;a href=&quot;qtreewidgetitem#clone&quot;&gt;clone&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5667b986ab573da58cb130a6d43b9f8dfcc66f9" translate="yes" xml:space="preserve">
          <source>This function is useful when you have a single source file for a given shader stage. If your shader consists of multiple source files then use &lt;a href=&quot;qsgmaterialshader#setShaderSourceFiles&quot;&gt;setShaderSourceFiles&lt;/a&gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df44041d44e63b9b05203f2cffc53048154f70f" translate="yes" xml:space="preserve">
          <source>This function is usually called at the end of the property's write function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2aacd77403e58f45f6dc895bb087ddf4c667b28" translate="yes" xml:space="preserve">
          <source>This function is usually called first in the write function for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20cd0baca25de2fd41dc1bd7ac89b362978687fa" translate="yes" xml:space="preserve">
          <source>This function is usually called from the &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; destructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242db8d413c5cb86a9c0c4ceeead91eb449e12e5" translate="yes" xml:space="preserve">
          <source>This function is usually used alongside &lt;a href=&quot;qcborstreamreader#currentStringChunkSize&quot;&gt;currentStringChunkSize&lt;/a&gt;() in a loop. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c89074b0c6f0062ea3b8aa196e02efb55eb86f8" translate="yes" xml:space="preserve">
          <source>This function is usually used when the contents of the document are abandoned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af53a8da58362b7959b6791587d99ae8180d393" translate="yes" xml:space="preserve">
          <source>This function is very fast (&lt;a href=&quot;containers#algorithmic-complexity&quot;&gt;constant time&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0613d475b5022a8d3c347098ff88b95bc9e5fb0c" translate="yes" xml:space="preserve">
          <source>This function issues an asynchronous download request for the web page and returns immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7c3ca1658ef9fd7b0d8a5f8d8f69a7ee72d7e4" translate="yes" xml:space="preserve">
          <source>This function keeps the view's rotation, translation, or shear. The view is scaled according to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d58bf145112890b3fef242885c7b042de937ab3" translate="yes" xml:space="preserve">
          <source>This function lets the receiver of the drop set the drop action that was performed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb753cb7d810c810b3489a0ad1c2dc164dd302b" translate="yes" xml:space="preserve">
          <source>This function mainly exists for completeness. Normally you should not need use it, because &lt;a href=&quot;qxmlstreamwriter#writeCharacters&quot;&gt;writeCharacters&lt;/a&gt;() automatically escapes all non-content characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6b5303217f45ee6c2b109cb3b601faeb8cd3a3" translate="yes" xml:space="preserve">
          <source>This function makes it possible to acquire proxies for non top-level widgets. For instance, you can embed a dialog, and then transform only one of its widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d710a84768180bca03637a60310e4a6c1652d6ff" translate="yes" xml:space="preserve">
          <source>This function maps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e0af74173b2be34b49005ae57639420682a3f0" translate="yes" xml:space="preserve">
          <source>This function maps to the &lt;code&gt;dm:base-uri&lt;/code&gt; accessor, which returns a base URI according to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb6166de0ed4f6bd1b416dfb3b4332a0b7e9a75" translate="yes" xml:space="preserve">
          <source>This function maps to the &lt;code&gt;dm:document-uri&lt;/code&gt; accessor, which returns a document URI according to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f836c54ec91f2daa333aae1c05b4255c8afd694b" translate="yes" xml:space="preserve">
          <source>This function maps to the &lt;code&gt;dm:node-name()&lt;/code&gt; accessor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7bceb0360976611ba8208165ddc2bf5b19d085d" translate="yes" xml:space="preserve">
          <source>This function maps to the &lt;code&gt;dm:string-value()&lt;/code&gt; accessor, which the specification completely specifies. Here's a summary:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f551b74f03f5471873ff0027c21df24461f08ccc" translate="yes" xml:space="preserve">
          <source>This function may be necessary to set the first and second values after the control has been completed, as there is a circular dependency between firstValue and secondValue which can cause assigned values to be clamped to each other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5352b33ad66319ac47021b363f7cd8a7d162f4" translate="yes" xml:space="preserve">
          <source>This function may be overridden by the keyboard layout to create the input method object dynamically. The default implementation forwards the call to the child keyboard layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46036640058202ad0e88e9481dd2019690907884" translate="yes" xml:space="preserve">
          <source>This function may be overridden by the keyboard layout to create the input method object dynamically. The default implementation returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f147220faa6310adabeb52a9192ab56d779f51e" translate="yes" xml:space="preserve">
          <source>This function may be used along with &lt;a href=&quot;qcompleter#currentCompletion&quot;&gt;currentCompletion&lt;/a&gt;() to iterate through all the possible completions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0306a62d6c06b94b21e8fd0cd3d2f511b548e3" translate="yes" xml:space="preserve">
          <source>This function may be used to obtain numbers beyond the range of the return type of &lt;a href=&quot;qcborstreamreader#toInteger&quot;&gt;toInteger&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b3ad09f02ede3529215aef536bd290dd811fe0" translate="yes" xml:space="preserve">
          <source>This function may be used to obtain numbers beyond the range of the return type of &lt;a href=&quot;qcborstreamreader#toInteger&quot;&gt;toInteger&lt;/a&gt;(). However, use of negative numbers smaller than -2&lt;sup&gt;63&lt;/sup&gt; is extremely discouraged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca0d64d8af5f0de4d6844545e26dbf79521f73a" translate="yes" xml:space="preserve">
          <source>This function may be used to register a singleton type provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a171ce8c1bc9fc1efc1dc553bf8682fd99d81b9" translate="yes" xml:space="preserve">
          <source>This function may be used to register a singleton type with the name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad513401fdc419fb698607ad120dda54a6f6858" translate="yes" xml:space="preserve">
          <source>This function may not always be supported on all platforms and returns 0. The platform capability can be detected via &lt;a href=&quot;qnetworkconfigurationmanager#Capability-enum&quot;&gt;QNetworkConfigurationManager::DataStatistics&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b1347e2031ae8ab5f66e5738f60d9d768d5b7b" translate="yes" xml:space="preserve">
          <source>This function may not always return a count that equals &lt;a href=&quot;qmodbusdataunit#values&quot;&gt;values&lt;/a&gt;() size. Since this class is used to request data from the remote data register, the valueCount() can be used to indicate the size of the requested register's data block. Once the request has been processed, the valueCount() is equal to the size of &lt;a href=&quot;qmodbusdataunit#values&quot;&gt;values&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8519c307d782b7e2ffa29ced1ac77b3d04c52b" translate="yes" xml:space="preserve">
          <source>This function may only be called if &lt;a href=&quot;qcborstreamreader#hasNext&quot;&gt;hasNext&lt;/a&gt;() has returned false and &lt;a href=&quot;qcborstreamreader#containerDepth&quot;&gt;containerDepth&lt;/a&gt;() is not zero. Calling it in any other condition is an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b47909b7ee20ca37c66d37c422fdfb407acea3a" translate="yes" xml:space="preserve">
          <source>This function may only be called if the current item is an array or a map (that is, if &lt;a href=&quot;qcborstreamreader#isArray&quot;&gt;isArray&lt;/a&gt;(), &lt;a href=&quot;qcborstreamreader#isMap&quot;&gt;isMap&lt;/a&gt;() or &lt;a href=&quot;qcborstreamreader#isContainer&quot;&gt;isContainer&lt;/a&gt;() is true). Calling it in any other condition is an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec0bc81fcadc46fe531f5d464e8577bd86e6e3b" translate="yes" xml:space="preserve">
          <source>This function may only be called on the rendering thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbdcab3e359bda99631fcd08ffc8dcf1c4678d24" translate="yes" xml:space="preserve">
          <source>This function merges the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df08fd8309b9debedc944154ec86e7df2fd1b14" translate="yes" xml:space="preserve">
          <source>This function might be called with a maxSize of 0, which can be used to perform post-reading operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ec56aa0ab88b222392056a592371c0aca0d14a" translate="yes" xml:space="preserve">
          <source>This function must be called before &lt;a href=&quot;qpainter#begin&quot;&gt;QPainter::begin&lt;/a&gt;() to have an effect on all platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec313aa04c23c1410a88a307bcd9099786624126" translate="yes" xml:space="preserve">
          <source>This function must be called before creating the &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; object, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4396f12e5d757d3390ccfeed63e7e6b19d4a24" translate="yes" xml:space="preserve">
          <source>This function must be called exactly once in response to each invocation of the QVulkanWindowRenderer::startNextFrame() implementation. At the time of this call, the main command buffer, exposed via &lt;a href=&quot;qvulkanwindow#currentCommandBuffer&quot;&gt;currentCommandBuffer&lt;/a&gt;(), must have all necessary rendering commands added to it since this function will trigger submitting the commands and queuing the present command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312dea5066fc1285a814ef347c284a0b4ffb53a6" translate="yes" xml:space="preserve">
          <source>This function must be called when a VkDevice, for which &lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;deviceFunctions&lt;/a&gt;() was called, gets destroyed while the application intends to continue running, possibly creating a new logical Vulkan device later on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34391279de9c619d55e59b11b51358d07e1dbd8" translate="yes" xml:space="preserve">
          <source>This function must be called when the socket is not connected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08b13ef3f534b017185b985e3f1cd8f1db7afaa" translate="yes" xml:space="preserve">
          <source>This function must be called with a current &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;. The buffer will be bound to and can only be used in that context (or any other context that is shared with it).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a64545f57190f85c49dbe7b31e320d5237d042c" translate="yes" xml:space="preserve">
          <source>This function must be called with the same &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; current as when &lt;a href=&quot;qopenglbuffer#bind&quot;&gt;bind&lt;/a&gt;() was called on the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9cd0b59335a30d57bc4f6cf990137b1afcac20" translate="yes" xml:space="preserve">
          <source>This function must be implemented by the sub-class. &lt;a href=&quot;qabstractmessagehandler#message&quot;&gt;message&lt;/a&gt;() will call this function, passing in its parameters,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ccd94a99484483394570660a2ef95db006b8a3" translate="yes" xml:space="preserve">
          <source>This function must be reimplemented when providing more information about a widget or object through the specialized interfaces. For example a line edit should implement the &lt;a href=&quot;qaccessibletextinterface&quot;&gt;QAccessibleTextInterface&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aac82383c670d96c68e883c4ab6bd82a1d257cf" translate="yes" xml:space="preserve">
          <source>This function need not be used on the root element of a &lt;a href=&quot;qcborstreamreader&quot;&gt;QCborStreamReader&lt;/a&gt;. For example, the following code illustrates how to skip the CBOR signature tag from the beginning of a file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa407fa8f164f6c7073be12f7347ce8267f2ed7" translate="yes" xml:space="preserve">
          <source>This function needs to be called when the user accepted the dialog with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e04f6314d1f6f366dd52ab00b2e090e729982a73" translate="yes" xml:space="preserve">
          <source>This function needs to be called when the user did not accepted the dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23263bf86f0d27a4704e5ae3ed243150f56750d3" translate="yes" xml:space="preserve">
          <source>This function needs to handle all messages to the path of the virtual object, when the SubPath option is specified. The service, path, interface and methos are all part of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9317c7a9ea39ab40746e2232f0ce2b782ec064" translate="yes" xml:space="preserve">
          <source>This function needs to handle the introspection of the virtual object on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4012ed5a4fe9ca3ec9790ede37db036f776f274b" translate="yes" xml:space="preserve">
          <source>This function never returns a value. qmake displays &lt;code&gt;string&lt;/code&gt; as an error message to the user and exits. This function should only be used for unrecoverable errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d625f43471d957271482456c6856e3d613d2de0" translate="yes" xml:space="preserve">
          <source>This function notifies the effect framework when the effect's bounding rectangle has changed. As a custom effect author, you must call this function whenever you change any parameters that will cause the virtual &lt;a href=&quot;qgraphicseffect#boundingRectFor&quot;&gt;boundingRectFor&lt;/a&gt;() function to return a different value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ac67ecbb7df3ce642080d75baa5d2cb69980ce" translate="yes" xml:space="preserve">
          <source>This function notifies the engine that the user accepted the dialog, providing the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b904c1aaab4f08c672e4068f9165b34e6104c853" translate="yes" xml:space="preserve">
          <source>This function notifies the engine that the user accepted the dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531d36a2f328086a54b7417d38f40277dc29b526" translate="yes" xml:space="preserve">
          <source>This function notifies the engine that the user rejected the dialog and the authentication shall not proceed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c95f9726fa92087374d184997e5f1b43629b18a" translate="yes" xml:space="preserve">
          <source>This function notifies the engine that the user rejected the dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5cfcece330740bc6ced4664ed13ad082600b595" translate="yes" xml:space="preserve">
          <source>This function only applies when using &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; to process XSL-T stylesheets. The name becomes part of the compiled stylesheet. Therefore, this function must be called before calling &lt;a href=&quot;qxmlquery#setQuery&quot;&gt;setQuery&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e74f6086b71e6fe75cba7e93d6578642c376f76" translate="yes" xml:space="preserve">
          <source>This function only has an effect when the usage pattern for vertices is StaticData and the renderer that renders this geometry uploads the geometry into Vertex Buffer Objects (VBOs).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86bbbc3a37e703cbd8b23144448a1722645b7e0" translate="yes" xml:space="preserve">
          <source>This function only makes sense when demarshalling arguments. If it is used while marshalling, it will always return &lt;a href=&quot;qdbusargument#ElementType-enum&quot;&gt;UnknownType&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fb7fc58d1a6005a3d6fdca8a89f34818b7c1e9" translate="yes" xml:space="preserve">
          <source>This function only needs to be overridden when &lt;a href=&quot;qml-qtquick-controls2-spinbox#textFromValue-prop&quot;&gt;textFromValue&lt;/a&gt; is overridden for an editable spinbox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789ccc5ff96741b33343f8f8edc0a429d5727915" translate="yes" xml:space="preserve">
          <source>This function only operates on &lt;a href=&quot;qcanbusdevice&quot;&gt;QCanBusDevice&lt;/a&gt; buffers. Frames that are already written to the CAN driver or CAN hardware layer, or that are not yet read from these layers, are not cleared by this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d85126058264661cd40abebfa677d7a15400e2" translate="yes" xml:space="preserve">
          <source>This function only returns a valid &lt;a href=&quot;qnetworkinterface&quot;&gt;QNetworkInterface&lt;/a&gt; when this session is &lt;a href=&quot;qnetworksession#State-enum&quot;&gt;Connected&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e60b1a47aa9de976b7df45b2bf2cc48f4be746" translate="yes" xml:space="preserve">
          <source>This function only works for top level windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ad0ea9dbacf4a989869f0cd7657b3ac182498b" translate="yes" xml:space="preserve">
          <source>This function operates on the current read channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3172ab63e0b676f933872234c8e80f85c0fe0ca9" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qbytearray#append&quot;&gt;append&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e581b1a53f3a9a7bb7efd335913046d2b3e410b7" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qbytearray#begin&quot;&gt;begin&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71de942b2b3255205b73e5861a823f310679e12" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qbytearray#end&quot;&gt;end&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de4d31c3d4b5e2a01b26798d56a8b24473ccf68" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8007f86d30c1eb2d5d5121ed579e2746b929e7" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qcryptographichash#addData&quot;&gt;addData&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e2d7be2f395125f98f0ba614b772317839e5e5" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qjsengine#throwError&quot;&gt;throwError&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0445f2ec54fde72111447f0b97203be90291950c" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qlatin1string#operator-not-eq&quot;&gt;operator!=&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90df3bca2bef5a0ce501e24b1db2ea5f2583dece" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qlocale#toCurrencyString&quot;&gt;toCurrencyString&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d2f221ebd3dd3e305571d8b01e8d526200c4c7" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qmenu#addAction&quot;&gt;addAction()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861519ed44d3b736ace458db3d546ae5de6cdce8" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qmessageauthenticationcode#addData&quot;&gt;addData&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ca103beb016f3aaf81e120ea4caa78217a99e5" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qmetamethod#invoke&quot;&gt;invoke&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40e8cb5197a73677d9f970c32889ee4ab010065" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;invokeMethod&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82d775e12872dee323164f7897ee376fe40b838" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qobject#connect&quot;&gt;connect&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660dd5370dd9dd0f97173a79a7a44f6e4ea6b525" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qobject#disconnect&quot;&gt;disconnect&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed0a8242c11a31d17083d15773bcb90f6fae755" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qobject#findChildren&quot;&gt;findChildren&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc9b76a5430e690410b252e3320026cf177f98d" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qprocess#startDetached&quot;&gt;startDetached&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a3e8403338fc157eefbd12f5576656b119d22e9" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qremoteobjectnode#instances&quot;&gt;instances&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7aa732f90cb93bcbfdccdac23a2909be3f57309" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qsharedmemory#QSharedMemory&quot;&gt;QSharedMemory&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2b3a99c2a49e641700db97ccb770ae7eebc180" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qsharedmemory#data&quot;&gt;data&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93c1afe4bac9fd3ecdec7867a4171624fda2cc5" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qsignalmapper#mapping&quot;&gt;mapping&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7866c004d7c32d019e8f40fa05ad39f46075175" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#append&quot;&gt;append&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34d2d6aa3523cf3673b00ca7aeb692415e4aec1" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#arg&quot;&gt;arg&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fcfc9aae03214dec0bc0160a95c7c1280d92073" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#begin&quot;&gt;begin&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547f9ac03b2af4f7edfdc0b5067358a4076850a9" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#compare&quot;&gt;compare&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0ce36c1acf7d5f8b3dd8d3b11028d3942b44d5" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#contains&quot;&gt;contains&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8baeb5aa2d7c1c0937e60130f1807911273da2d" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#count-1&quot;&gt;count&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="554db3232403b0941bfb8c306ef07f30c966b33c" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#end&quot;&gt;end&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89dcb7869b01001c372508683a1184a135937e44" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#endsWith&quot;&gt;endsWith&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b88ddcefad8b330269a4def3c5fe06953a042d" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#indexOf&quot;&gt;indexOf&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c1274e8e7c123aee20890b25caab4fbfc9e6c8" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#insert&quot;&gt;insert&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a51441795aabb80118aae04d78f3cf98fe14c59" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#lastIndexOf&quot;&gt;lastIndexOf&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f5682371bd90a12ad7ef41ce64844c54f4ecf6" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#localeAwareCompare&quot;&gt;localeAwareCompare&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73bba25e7f5241a591604f4f2e758257ede58fce" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#operator-2b-eq-1&quot;&gt;operator+=&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b5f28bea465bb91032a41338774ac5e6af124e" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#operator-5b-5d&quot;&gt;operator[]&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9944cc5bb2d97c6486eea793f41427b147162fef" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#operator-eq&quot;&gt;operator=&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7883fe052b04bfe7284c07f1afa56a35ea68810a" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#operator-eq-eq&quot;&gt;operator==&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a281277603ca073a67934a379afdef437ec454" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#operator-gt&quot;&gt;operator&amp;gt;&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e6a095d3a5187bd42139a07f5776e6586fdb3d" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#operator-gt-eq&quot;&gt;operator&amp;gt;=&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7a139540b077c2f35935c1d261b459d1e6aeb6" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#operator-lt&quot;&gt;operator&amp;lt;&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0fe4ee43a4aa8debbb3747e8bd2977b998e5d02" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#operator-lt-eq&quot;&gt;operator&amp;lt;=&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ef2edf4fea4c40edcae72ea977026ae96ec4f4" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#operator-not-eq&quot;&gt;operator!=&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57191a4612e8792405a436453c23ca77f4fc492a" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#prepend&quot;&gt;prepend&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b41b7b1ad6175e7353bc96810fd132a6e602a5" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#replace&quot;&gt;replace&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153e746c34432a926426a041fb11449b516a8dfe" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#section&quot;&gt;section&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b58b6f9d7dbcd5cea6a8b42a3abe2f39b7b9652" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstring#startsWith&quot;&gt;startsWith&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9349521b9a5ab4fe8a2191a847a745451c93d92f" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstringlist#indexOf&quot;&gt;indexOf&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad45d3cfa043a7030829db2185e2065caf737452" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstringlist#join&quot;&gt;join&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12e04a26729f67fcb9e923dbe66ede648ada1d4e" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstringlist#lastIndexOf&quot;&gt;lastIndexOf&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0438dfc0e17b3652263b04f4a22b4bc079584485" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstringref#contains&quot;&gt;contains&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6cb9dfbb172dc8cc61e47ce2fa57c7c7fd3bc0d" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstringref#count&quot;&gt;count&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703cf174f3a59e3ec3202f8b72d5a2a1cf9e7a30" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstringref#endsWith&quot;&gt;endsWith&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a7ff9c88d423900e363f53a732605a8ae5bb98" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstringref#indexOf&quot;&gt;indexOf&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ee0061dc18743a3c1e4d12aaa0d3d8e2523b41" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstringref#lastIndexOf&quot;&gt;lastIndexOf&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c46753ceab3ec9317a590f432bf32642387eb7d" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qstringref#startsWith&quot;&gt;startsWith&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71fc0139e2a82e41c75060ac9303c68c661e461" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qsystemtrayicon#showMessage&quot;&gt;showMessage&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26225c41b4406bbe2614cf58480194424983121" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qtimer#callOnTimeout&quot;&gt;callOnTimeout&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce844f7569def5375d02e8902292ca17c67808cf" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qtranslator#load&quot;&gt;load&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c98080045054bc723e8d0a5d4221010c69201de" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qvarlengtharray#append&quot;&gt;append&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d003db649fe20bd730be78d3409404e4abec04b" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qvarlengtharray#push_back&quot;&gt;push_back&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4fef6e2b67aa2c65fdb0318a11c60d0f935df1" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qwidget#grabMouse&quot;&gt;grabMouse&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852f7d95d2ab9af8e44b6861941fc0341684fa0a" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qwinjumplist#addCategory&quot;&gt;addCategory&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3649900023ca6b911af75335a82b50aee7b0bbaf" translate="yes" xml:space="preserve">
          <source>This function overloads &lt;a href=&quot;qwinjumplistcategory#addLink&quot;&gt;addLink&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5b071fd5d8b9bd62061c02c465545c6a4a46ae" translate="yes" xml:space="preserve">
          <source>This function overloads count().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba3a103fc17e262c376ff7424b4d13aafbdfe16" translate="yes" xml:space="preserve">
          <source>This function overloads diconnect().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19dcfcf2e9370364004d3e4713de11ed8f0f2ac" translate="yes" xml:space="preserve">
          <source>This function overloads operator!=().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baed0e0fe4821fa2d552b3542b55e68bbe544c61" translate="yes" xml:space="preserve">
          <source>This function overloads operator&amp;gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1967ac2e89fc840b4ddfa02a8a4b3da49fa029d9" translate="yes" xml:space="preserve">
          <source>This function overloads operator&amp;gt;=().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9e67e38ecaefedc4bf793bf3c569d8fb6792d4" translate="yes" xml:space="preserve">
          <source>This function overloads operator&amp;lt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f642bb35777b80130a01dde5a3f531c3da90f5" translate="yes" xml:space="preserve">
          <source>This function overloads operator&amp;lt;=().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fafb3b422e0ba800c9f18899ea46fe07b3481a73" translate="yes" xml:space="preserve">
          <source>This function overloads operator+=().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71395776dcc0b6b63634eee90cde5e6edc848f96" translate="yes" xml:space="preserve">
          <source>This function overloads operator==().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bb5deaa43c4417943dbb575b3122a48de54261" translate="yes" xml:space="preserve">
          <source>This function overloads qFindChildren().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573c9ea5b7d5269b8d9e8b0d388a59115d0b8d07" translate="yes" xml:space="preserve">
          <source>This function overloads start().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e38cb2038b7c4a43401a976bf94af69a5df422f" translate="yes" xml:space="preserve">
          <source>This function overloads versionFunctions().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229559c93e761bfcd452f819d07da825d27b2b37" translate="yes" xml:space="preserve">
          <source>This function overloads...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20b618da199a51cb40581cdd2454ff4f5466222" translate="yes" xml:space="preserve">
          <source>This function paints the item using the view's &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2298d9c49702422c9117fcdb88a64b6985743040" translate="yes" xml:space="preserve">
          <source>This function parses the XML document from the byte array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a386877481a036914cf654054d72c1cf48dc52d" translate="yes" xml:space="preserve">
          <source>This function performs the actual scrolling by calling &lt;a href=&quot;qscroller#scrollTo&quot;&gt;scrollTo&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974f5730be75dfbedc759e1ba4a4d98f36344490" translate="yes" xml:space="preserve">
          <source>This function performs the same operation as clicking the mouse on the title bar of a top-level window. On X11, the result depends on the Window Manager. If you want to ensure that the window is stacked on top as well you should also call &lt;a href=&quot;qwidget#raise&quot;&gt;raise&lt;/a&gt;(). Note that the window must be visible, otherwise activateWindow() has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928372c87dd50cb6bfbad2726f7f2896031fe0ba" translate="yes" xml:space="preserve">
          <source>This function produces the equivalent representation of the stream that &lt;a href=&quot;qcborvalue#toCbor&quot;&gt;toCbor&lt;/a&gt;() would produce, without any transformation option provided there. This also implies this function may not produce a representation of the stream that was used to create the object, if it was created using &lt;a href=&quot;qcborvalue#fromCbor&quot;&gt;fromCbor&lt;/a&gt;(), as that function may have applied transformations. For a high-fidelity notation of a stream, without transformation, see the &lt;code&gt;cbordump&lt;/code&gt; example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10797a0723db973314145acf17aeed70a3efbe53" translate="yes" xml:space="preserve">
          <source>This function protects a module from having types registered into it. This can be used to prevent other plugins from injecting types into your module. It can also be a performance improvement, as it allows the engine to skip checking for the possibility of new types or plugins when this import is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923ee62aa04d9f99b4539dd1964fe5a53d9e57cc" translate="yes" xml:space="preserve">
          <source>This function provides a consistent interface that model subclasses must use to create model indexes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edcfd097a03906f04dbed908ac7049b373683019" translate="yes" xml:space="preserve">
          <source>This function provides a way to customize the behavior of &lt;a href=&quot;qdesktopservices#openUrl&quot;&gt;openUrl&lt;/a&gt;(). If &lt;a href=&quot;qdesktopservices#openUrl&quot;&gt;openUrl&lt;/a&gt;() is called with a URL with the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2df19a1fbece86408b192935c4967f4b82bd06a" translate="yes" xml:space="preserve">
          <source>This function provides access to the &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;'s underlying native context. The returned variant contains a platform-specific value type. These classes can be found in the module &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtplatformheaders-module.html&quot;&gt;QtPlatformHeaders&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e15b8f2366719c71c1f7ec61002f9c46b6bfd19a" translate="yes" xml:space="preserve">
          <source>This function provides an alternative way of doing approximated comparisons of floating-point numbers similar to &lt;a href=&quot;qtglobal#qFuzzyCompare&quot;&gt;qFuzzyCompare&lt;/a&gt;(). However, it returns the distance between two numbers, which gives the caller a possibility to choose the accepted error. Errors are relative, so for instance the distance between 1.0E-5 and 1.00001E-5 will give 110, while the distance between 1.0E36 and 1.00001E36 will give 127.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2465d84fd3b7084fada271bfe4ab0b422b87d599" translate="yes" xml:space="preserve">
          <source>This function provides more efficient support for populating new items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1be6817b3be11961f44f1fd3f44109ba8f0a16" translate="yes" xml:space="preserve">
          <source>This function provides the CA certificate database provided by the operating system. The CA certificate database returned by this function is used to initialize the database returned by &lt;a href=&quot;qsslconfiguration#caCertificates&quot;&gt;caCertificates&lt;/a&gt;() on the default &lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50128371b50bd84b6e88ed69eed00f971c2652f" translate="yes" xml:space="preserve">
          <source>This function provides the same possibilities like &lt;code&gt;disconnect(const QObject *sender, const char *signal, const QObject *receiver, const char *method)&lt;/code&gt; but uses &lt;a href=&quot;qmetamethod&quot;&gt;QMetaMethod&lt;/a&gt; to represent the signal and the method to be disconnected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f41d166dcc972d91f05932ac42f52527128a66" translate="yes" xml:space="preserve">
          <source>This function reads a &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; from the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e85a5f4423310c4c8d28b3813e9e8e8fb1d7ba1" translate="yes" xml:space="preserve">
          <source>This function reads a line of ASCII characters from the device, up to a maximum of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="555d78533e14355af89aa82b39b9750fef4c4d30" translate="yes" xml:space="preserve">
          <source>This function reads more data from the device that was set during construction. If the input source already contained data, this function deletes that data first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f2ea40b75cfb03f12d9f08ec588a28d722ce9f" translate="yes" xml:space="preserve">
          <source>This function reads the XML document from the &lt;a href=&quot;qxmlinputsource&quot;&gt;QXmlInputSource&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ed047524d2b88e6736a2f6d1de9989503b45cc" translate="yes" xml:space="preserve">
          <source>This function reads the XML document from the IO device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a56de3efb1ac4be7407c1108a2867c682ce409" translate="yes" xml:space="preserve">
          <source>This function reads the XML document from the byte array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d94ad86d3154da23861790b862a5c6e335f3de" translate="yes" xml:space="preserve">
          <source>This function reads the XML document from the string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5a4b04e9499c21eeebfbb099f105adc614f536" translate="yes" xml:space="preserve">
          <source>This function reads the XML file from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a592dec48c8a9c3efdbfe0956a2b1b07f0f3fe9" translate="yes" xml:space="preserve">
          <source>This function reconstructs the query string from the &lt;a href=&quot;qurlquery&quot;&gt;QUrlQuery&lt;/a&gt; object and sets on this &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; object. This function does not have parsing parameters because the &lt;a href=&quot;qurlquery&quot;&gt;QUrlQuery&lt;/a&gt; contains data that is already parsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b12f5021b1fa2b7e135f1230545b7e3517284a16" translate="yes" xml:space="preserve">
          <source>This function registers a module in a particular</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ca0470dae2b9568f8c98e0d11db5fe5ed11cd9" translate="yes" xml:space="preserve">
          <source>This function registers a new SQL driver called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa334e6f027c93ae5fd56b23ebd09a52492b9ae6" translate="yes" xml:space="preserve">
          <source>This function registers a type in the QML system with the name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb8fa611ae29ec64e25664813858986d68ca29d" translate="yes" xml:space="preserve">
          <source>This function registers a user-defined implementation to calculate the request data size for function code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bddc54388f6d820a1b30c7e37e18036963c9a44f" translate="yes" xml:space="preserve">
          <source>This function registers a user-defined implementation to calculate the response data size for function code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ff9503107e1afde3d4675e314cacde372f1b8b" translate="yes" xml:space="preserve">
          <source>This function registers the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3a82ca1c054173c0bf3c845d00c3b26c2c740a" translate="yes" xml:space="preserve">
          <source>This function removes duplicate entries from a list. The entries do not have to be sorted. They will retain their original order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c8e8d47bfa7b6b2f633de41badbef9ddf131e4" translate="yes" xml:space="preserve">
          <source>This function requires both the Bluetooth devices to support the 2.1 specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64efe04c4ffb2b3783951c163fedefce3afa4750" translate="yes" xml:space="preserve">
          <source>This function requires qHash() to be overloaded for the value type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e74fa811503b772989d174293f2fc82de58c756" translate="yes" xml:space="preserve">
          <source>This function requires that &lt;code&gt;T&lt;/code&gt; is a fully defined type at the point where the function is called. For pointer types, it also requires that the pointed to type is fully defined. Use &lt;a href=&quot;qmetatype#Q_DECLARE_OPAQUE_POINTER&quot;&gt;Q_DECLARE_OPAQUE_POINTER&lt;/a&gt;() to be able to register pointers to forward declared types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2de04bafe978ce2d3d9adb97cdee7f92521ceb9" translate="yes" xml:space="preserve">
          <source>This function requires the T1 and T2 types to have an implementation of &lt;code&gt;operator&amp;lt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e703c15ba0f184b1aa0e3314656b2d1ef0d02a38" translate="yes" xml:space="preserve">
          <source>This function requires the T1 and T2 types to have an implementation of &lt;code&gt;operator==()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cda024d16a644c08921086e27cad953a67767d3" translate="yes" xml:space="preserve">
          <source>This function requires the T1 and T2 types to implement &lt;code&gt;operator&amp;gt;&amp;gt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc11e80a2336b11dbf165b359f0e94ba1545ac2" translate="yes" xml:space="preserve">
          <source>This function requires the T1 and T2 types to implement &lt;code&gt;operator&amp;lt;&amp;lt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c937037199762247565e42f1df5d0dd61fb749" translate="yes" xml:space="preserve">
          <source>This function requires the key and value types to implement &lt;code&gt;operator&amp;gt;&amp;gt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef025ee411fe00cd5ecc4c7c49a7aa891869158" translate="yes" xml:space="preserve">
          <source>This function requires the key and value types to implement &lt;code&gt;operator&amp;lt;&amp;lt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea97c5bfe1ca3629a300e8a1f6a8a90ddc43e42e" translate="yes" xml:space="preserve">
          <source>This function requires the value type to have an implementation of &lt;code&gt;operator&amp;lt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7c61f565480a68de6e3fd204782d72ade23221" translate="yes" xml:space="preserve">
          <source>This function requires the value type to have an implementation of &lt;code&gt;operator==()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6ebe76adb038f4d800ef67b83526d7da144cbd" translate="yes" xml:space="preserve">
          <source>This function requires the value type to implement &lt;code&gt;operator&amp;gt;&amp;gt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa09de7bff3d8e03a105076ebdbceb67f58ef6c" translate="yes" xml:space="preserve">
          <source>This function requires the value type to implement &lt;code&gt;operator&amp;lt;&amp;lt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1ec8a3df3b2bed0c227926e2457e081d290b47" translate="yes" xml:space="preserve">
          <source>This function requires the value type to implement &lt;code&gt;operator==()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5f5723ec6dc87145f4b82a3848a3def7bee5b9" translate="yes" xml:space="preserve">
          <source>This function resends the &lt;a href=&quot;qscrollprepareevent&quot;&gt;QScrollPrepareEvent&lt;/a&gt;. Calling resendPrepareEvent triggers a &lt;a href=&quot;qscrollprepareevent&quot;&gt;QScrollPrepareEvent&lt;/a&gt; from the scroller. This allows the receiver to re-set content position and content size while scrolling. Calling this function while in the Inactive state is useless as the prepare event is sent again before scrolling starts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe847ed05641ca5142029560a4e2f69af3289d4" translate="yes" xml:space="preserve">
          <source>This function returns -1 if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82237d8f831ffde4ae63a9db06fd239a97107f60" translate="yes" xml:space="preserve">
          <source>This function returns -1 if the prefix length could not be determined (i.e., &lt;a href=&quot;qnetworkaddressentry#netmask&quot;&gt;netmask&lt;/a&gt;() returns a null QHostAddress()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758c31ec283c58d52865b1e6c98c49fc045734ce" translate="yes" xml:space="preserve">
          <source>This function returns 0 if no tests failed, or a value other than 0 if one or more tests failed or in case of unhandled exceptions. (Skipped tests do not influence the return value.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="495fed1cc9411b45014eb4e91df401a9043dcd63" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;false&lt;/code&gt; if the stack is empty or if the top command on the stack has already been redone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adddeef3e216669d281e5716003c3a0968e62bf0" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;false&lt;/code&gt; if the stack is empty, or if the bottom command on the stack has already been undone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19beea27ddf1ef4ffd54954f92199982ec5da139" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;nullptr&lt;/code&gt; if no application cursor has been defined (i.e. the internal cursor stack is empty).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2b4466f388c7d39994ec5c059473a689d2e1919" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;true&lt;/code&gt; if any services were removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211e770e80722ab52cdca43dd84de8b4449ff9f7" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;true&lt;/code&gt; if successful; otherwise it returns &lt;code&gt;false&lt;/code&gt; and sets the socket error accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c24a8fd73cf10b4c7d6f1139129d3e7003a58a" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;true&lt;/code&gt; if the contents of the MIME data object, specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa243b1cb7fe9db6ca2abaa253b3d636e2a23170" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;true&lt;/code&gt; if the event was recognized, otherwise it returns &lt;code&gt;false&lt;/code&gt;. If the recognized event was accepted (see &lt;a href=&quot;qevent#accepted-prop&quot;&gt;QEvent::accepted&lt;/a&gt;), any further processing such as event propagation to the parent widget stops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49818d3c4d8663317952fd8076045b03e1869476" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;true&lt;/code&gt; if the information could be successfully retrieved, false if the lock file doesn't exist or doesn't contain the expected data. This can happen if the lock file was deleted between the time where &lt;a href=&quot;qlockfile#tryLock&quot;&gt;tryLock&lt;/a&gt;() failed and the call to this function. Simply call &lt;a href=&quot;qlockfile#tryLock&quot;&gt;tryLock&lt;/a&gt;() again if this happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75bfa37410cd0ea5940af147d507fb8a7a6375a5" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;true&lt;/code&gt; if the queueing succeeded: it does not indicate that the call succeeded. If it failed, the slot will be called with an error message. &lt;a href=&quot;qdbusabstractinterface#lastError&quot;&gt;lastError&lt;/a&gt;() will not be set under those circumstances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f80ea1403b08582d60de96cf5e5e7a05493b29" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;true&lt;/code&gt; if the queueing succeeds. It does not indicate that the executed call succeeded. If it fails, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d538bb6960b91fd97cb21067c67f4fb249d1483" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;true&lt;/code&gt; when the peeker has stopped the event proccesing by returning &lt;code&gt;true&lt;/code&gt; from the callback. If there were no events in the buffered native event queue to peek at or all the events have been processed by the peeker, this function returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3901b0998a1e5df7f11f39b59a86983ffdb2fa" translate="yes" xml:space="preserve">
          <source>This function returns Online Certificate Status Protocol responses that a server may send during a TLS handshake using OCSP stapling. The vector is empty if no definitive response or no response at all was received.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f814bb0f521618d5259acc29793f529fb8b163" translate="yes" xml:space="preserve">
          <source>This function returns a &lt;a href=&quot;qdbusmessage&quot;&gt;QDBusMessage&lt;/a&gt; object that can be sent with &lt;a href=&quot;qdbusconnection#call&quot;&gt;QDBusConnection::call&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1d73e588b65e324f807ef9c934b7d86746837c" translate="yes" xml:space="preserve">
          <source>This function returns a block to test for the end of the document while iterating over it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9c9e25485d11cf16a52e009dc015235102cf70" translate="yes" xml:space="preserve">
          <source>This function returns a bytearray that can be used to query &lt;a href=&quot;qguiapplication#platformFunction&quot;&gt;QGuiApplication::platformFunction&lt;/a&gt;() to retrieve the &lt;a href=&quot;qwindowswindowfunctions#SetWindowActivationBehaviorType-typedef&quot;&gt;SetWindowActivationBehaviorType&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7d14704065ed94a497bbba05c9b10728bf2d3a" translate="yes" xml:space="preserve">
          <source>This function returns a certificate used to sign OCSP response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bbbeeabe6e4ca8a62f25ac76b55df5d9a8d666e" translate="yes" xml:space="preserve">
          <source>This function returns a certificate, for which this response was issued.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37419905e6d0b390719e7f16fdb67e6c3e0f8cb1" translate="yes" xml:space="preserve">
          <source>This function returns a const pointer, because modifying a command, once it has been pushed onto the stack and executed, almost always causes corruption of the state of the document, if the command is later undone or redone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c87025e20b8dd2d18c2dfc7166591fb48836bd" translate="yes" xml:space="preserve">
          <source>This function returns a copy of the current texture which is removed from its atlas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c02bcffe6b194fd1541a6d031c3e0b34fc0f15c" translate="yes" xml:space="preserve">
          <source>This function returns a list of pointers to the contents of the selected cells. Use the &lt;a href=&quot;qtableview#selectedIndexes&quot;&gt;selectedIndexes&lt;/a&gt;() function to retrieve the complete selection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1aa18dc77278875048a3f126e3fce8578ba87e" translate="yes" xml:space="preserve">
          <source>This function returns a new MIME data object to represent the contents of the text edit's current selection. It is called when the selection needs to be encapsulated into a new &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; object; for example, when a drag and drop operation is started, or when data is copied to the clipboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5b1b562555503b52442448e1b9764db5e56288" translate="yes" xml:space="preserve">
          <source>This function returns a new UUID with variant &lt;a href=&quot;quuid#Variant-enum&quot;&gt;QUuid::DCE&lt;/a&gt; and version &lt;a href=&quot;quuid#Version-enum&quot;&gt;QUuid::Md5&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a143c902e71d7b89ea2fa8dfb60598b87b1149" translate="yes" xml:space="preserve">
          <source>This function returns a new UUID with variant &lt;a href=&quot;quuid#Variant-enum&quot;&gt;QUuid::DCE&lt;/a&gt; and version &lt;a href=&quot;quuid#Version-enum&quot;&gt;QUuid::Sha1&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e01a5fc8b3dad1a916520b0b231540f4e40ea0a" translate="yes" xml:space="preserve">
          <source>This function returns a new instance of a the &lt;a href=&quot;qsgmaterialshader&quot;&gt;QSGMaterialShader&lt;/a&gt; implementatation used to render geometry for a specific implementation of &lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e079c88552b5251c60cfe5d6fe74fc523a6d48" translate="yes" xml:space="preserve">
          <source>This function returns a null pointer if no service with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898838f6e259a5bd45296ae1c1fb5007b98434e9" translate="yes" xml:space="preserve">
          <source>This function returns a pointer to the line edit of the spin box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec8870116286a28d7942d90ec6d04dedbe524e7" translate="yes" xml:space="preserve">
          <source>This function returns a rasterized image of the glyph at the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda8301749a6ca9bf773d87f7ffc7724184eccdf" translate="yes" xml:space="preserve">
          <source>This function returns a section of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4106b935b4c8f7656d31810360d1d1714c8e278" translate="yes" xml:space="preserve">
          <source>This function returns an empty &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e905d45d8804387a006e832ee99583763e24aa15" translate="yes" xml:space="preserve">
          <source>This function returns an empty &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; for peer-to-peer connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71c9fde03e3de8aae7f2b89ec2fb0f0148bcb8c" translate="yes" xml:space="preserve">
          <source>This function returns an empty string if this is an invalid configuration, a network configuration of type &lt;a href=&quot;qnetworkconfiguration#Type-enum&quot;&gt;QNetworkConfiguration::ServiceNetwork&lt;/a&gt; or &lt;a href=&quot;qnetworkconfiguration#Type-enum&quot;&gt;QNetworkConfiguration::UserChoice&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a878d8413edb20106d8464e8f17abd039275cd6" translate="yes" xml:space="preserve">
          <source>This function returns an iterator to the item at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="943ceac465d78e010534cfff4cd6986f85c70b03" translate="yes" xml:space="preserve">
          <source>This function returns an unambiguous value, which may contain that characters still percent-encoded, plus some control sequences not representable in decoded form in &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39032670f38e67f22cdb11df15dd87252a92abc3" translate="yes" xml:space="preserve">
          <source>This function returns immediately. The event is added to the state machine's event queue. Events are processed in the order posted. The state machine takes ownership of the event and deletes it once it has been processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185ce5df338d95c67540401f036906fb09f7c2df" translate="yes" xml:space="preserve">
          <source>This function returns immediately. When the delay has expired, the event will be added to the state machine's event queue for processing. The state machine takes ownership of the event and deletes it once it has been processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0949f3e59d3464d0917a90eef489635e39210718" translate="yes" xml:space="preserve">
          <source>This function returns null if there are no pending datagram-mode connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be96c42b4b78f38ff98651a6c445d50f2a7376a1" translate="yes" xml:space="preserve">
          <source>This function returns one IPv4 or IPv6 address found, that was found in a network interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ea506144bc09ab3962e4c4249242b446553790" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; that created the &lt;a href=&quot;qgraphicsscenedragdropevent&quot;&gt;QGraphicsSceneDragDropEvent&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5416aa0e5a20f7b53fc502f1fd5426ee5cc1b8" translate="yes" xml:space="preserve">
          <source>This function returns the MIME data of the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0fd8120f385ebf1579ad8839e5a957d77a950dc" translate="yes" xml:space="preserve">
          <source>This function returns the Qt meta type id for the type (the same value that is returned from &lt;a href=&quot;qmetatype#qRegisterMetaType-1&quot;&gt;qRegisterMetaType&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c064357fb6ddbc5fb70dbfa84ac9bd5b3f5c901" translate="yes" xml:space="preserve">
          <source>This function returns the actual length of the string in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a3c588e9a98b96c7ac0e964829474acc99251f4" translate="yes" xml:space="preserve">
          <source>This function returns the allowed protocols to be negotiated with the server through the Next Protocol Negotiation (NPN) or Application-Layer Protocol Negotiation (ALPN) TLS extension, as set by &lt;a href=&quot;qsslconfiguration#setAllowedNextProtocols&quot;&gt;setAllowedNextProtocols&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c1b610407063e11bcee9ae2a9bdba5479c1e6d" translate="yes" xml:space="preserve">
          <source>This function returns the byte array that can be used to query &lt;a href=&quot;qguiapplication#platformFunction&quot;&gt;QGuiApplication::platformFunction&lt;/a&gt; to retrieve the &lt;a href=&quot;qxcbwindowfunctions#SetWmWindowIconText-typedef&quot;&gt;SetWmWindowIconText&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b95f2c5bd0a925ec3f62ff6acdfdcd294567cfb" translate="yes" xml:space="preserve">
          <source>This function returns the byte array that can be used to query &lt;a href=&quot;qguiapplication#platformFunction&quot;&gt;QGuiApplication::platformFunction&lt;/a&gt; to retrieve the &lt;a href=&quot;qxcbwindowfunctions#SetWmWindowRole-typedef&quot;&gt;SetWmWindowRole&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e13c29f04daf2079fadd2fc7b5d6999ac2cc47" translate="yes" xml:space="preserve">
          <source>This function returns the byte array that can be used to query &lt;a href=&quot;qguiapplication#platformFunction&quot;&gt;QGuiApplication::platformFunction&lt;/a&gt; to retrieve the &lt;a href=&quot;qxcbwindowfunctions#SetWmWindowType-typedef&quot;&gt;SetWmWindowType&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785660c9d3b2b897b1d0d35d079ad74d7de8843a" translate="yes" xml:space="preserve">
          <source>This function returns the byte array that can be used to query &lt;a href=&quot;qguiapplication#platformFunction&quot;&gt;QGuiApplication::platformFunction&lt;/a&gt; to retrieve the &lt;a href=&quot;qxcbwindowfunctions#VisualId-typedef&quot;&gt;VisualId&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd3aec5f53e6e3c831f9a1468860809b9ea9e47" translate="yes" xml:space="preserve">
          <source>This function returns the bytearray that can be used to query &lt;a href=&quot;qguiapplication#platformFunction&quot;&gt;QGuiApplication::platformFunction&lt;/a&gt; to retrieve the &lt;a href=&quot;qcocoawindowfunctions#BottomLeftClippedByNSWindowOffset-typedef&quot;&gt;BottomLeftClippedByNSWindowOffset&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db55bf5bcf223a5868ff61f961d4292f23d000f" translate="yes" xml:space="preserve">
          <source>This function returns the bytearray that can be used to query &lt;a href=&quot;qguiapplication#platformFunction&quot;&gt;QGuiApplication::platformFunction&lt;/a&gt; to retrieve the &lt;a href=&quot;qwindowswindowfunctions#SetHasBorderInFullScreen-typedef&quot;&gt;SetHasBorderInFullScreen&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18b93148ffea118e7e50b6689ca674e1360b3c1" translate="yes" xml:space="preserve">
          <source>This function returns the bytearray that can be used to query &lt;a href=&quot;qguiapplication#platformFunction&quot;&gt;QGuiApplication::platformFunction&lt;/a&gt; to retrieve the &lt;a href=&quot;qwindowswindowfunctions#SetTouchWindowTouchType-typedef&quot;&gt;SetTouchWindowTouchType&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50e3f00f1ee28347191569e3a7c5bf4edd10a6c" translate="yes" xml:space="preserve">
          <source>This function returns the character position at x and y pixels from the top left of the textInput. Position 0 is before the first character, position 1 is after the first character but before the second, and so on until position text.length, which is after all characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ace1aa6c200a989236f9d2371c9e53a38d9b0f" translate="yes" xml:space="preserve">
          <source>This function returns the current proxy for this style. By default most styles will return themselves. However when a proxy style is in use, it will allow the style to call back into its proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba064723204d8af5a84a43783a4198f3d461683" translate="yes" xml:space="preserve">
          <source>This function returns the discovery methods supported by the current platform. It can be used to limit the scope of the device discovery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2945efed03ae159ea13d4eefd17d7f2221d3ef0" translate="yes" xml:space="preserve">
          <source>This function returns the engine to a state where it does not contain any loaded component data. This may be useful in order to reload a smaller subset of the previous component set, or to load a new version of a previously loaded component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1605f275ddf2ee7e9961dc33892f8dc47093adf" translate="yes" xml:space="preserve">
          <source>This function returns the floating point number which has been entered by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c2fc7d56b82e164e626c7b14aa18e4b384da24" translate="yes" xml:space="preserve">
          <source>This function returns the imported node that belongs to this document. The returned node has no parent. It is not possible to import &lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt; and &lt;a href=&quot;qdomdocumenttype&quot;&gt;QDomDocumentType&lt;/a&gt; nodes. In those cases this function returns a &lt;a href=&quot;qdomnode#isNull&quot;&gt;null node&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009745870fe03966514e6abfbfb61d1e8133969f" translate="yes" xml:space="preserve">
          <source>This function returns the protocol negotiated with the server if the Next Protocol Negotiation (NPN) or Application-Layer Protocol Negotiation (ALPN) TLS extension was enabled. In order for the NPN/ALPN extension to be enabled, &lt;a href=&quot;qsslconfiguration#setAllowedNextProtocols&quot;&gt;setAllowedNextProtocols&lt;/a&gt;() needs to be called explicitly before connecting to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436a3edaa36dee09f342cad97505b7ff32eaf777" translate="yes" xml:space="preserve">
          <source>This function returns the relative document order for the nodes indexed by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f943d29dadc08b4015c901f5a0b14336855f5e" translate="yes" xml:space="preserve">
          <source>This function returns the root of the context hierarchy. Each QML component is instantiated in a &lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;. &lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;'s are essential for passing data to QML components. In QML, contexts are arranged hierarchically and this hierarchy is managed by the &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd6eeeedcb2550e0062e371cc7b31a727752c083" translate="yes" xml:space="preserve">
          <source>This function returns the same as &lt;a href=&quot;qfileinfo#filePath&quot;&gt;filePath&lt;/a&gt;(), unless &lt;a href=&quot;qfileinfo#isRelative&quot;&gt;isRelative&lt;/a&gt;() is true. In contrast to &lt;a href=&quot;qfileinfo#canonicalFilePath&quot;&gt;canonicalFilePath&lt;/a&gt;(), symbolic links or redundant &quot;.&quot; or &quot;..&quot; elements are not necessarily removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa6869637ce0fc0944d4674135aeba5eb0f9775" translate="yes" xml:space="preserve">
          <source>This function returns the same as &lt;a href=&quot;qhostinfo#localHostName&quot;&gt;QHostInfo::localHostName&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a98a0f4db6af1a93cbf854488dea27353d305a" translate="yes" xml:space="preserve">
          <source>This function returns the same as &lt;a href=&quot;qsysinfo#machineHostName&quot;&gt;QSysInfo::machineHostName&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb168ad12682ced1c873ca9f491c3b6d873c5be" translate="yes" xml:space="preserve">
          <source>This function returns the same as &lt;a href=&quot;qtextdocument#toRawText&quot;&gt;toRawText&lt;/a&gt;(), but will replace some unicode characters with ASCII alternatives. In particular, no-break space (U+00A0) is replaced by a regular space (U+0020), and both paragraph (U+2029) and line (U+2028) separators are replaced by line feed (U+000A). If you need the precise contents of the document, use &lt;a href=&quot;qtextdocument#toRawText&quot;&gt;toRawText&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5919d523fccf628dc5dd47d024b86cece39e1a9" translate="yes" xml:space="preserve">
          <source>This function returns the same value as the QML type registration functions such as &lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;() and &lt;a href=&quot;qqmlengine#qmlRegisterSingletonType&quot;&gt;qmlRegisterSingletonType&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16fa7213a43b6e80ece829d55ba97d53cdb6d7b1" translate="yes" xml:space="preserve">
          <source>This function returns the selected version of the path, based on the conditions at runtime. If no selectable files are present, returns the original</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="935471cb7f7eda9b5e957f3954f03220ecd45899" translate="yes" xml:space="preserve">
          <source>This function returns the shape of the glyph at a given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3cd408ed2867074e2e293a88c5e10463e8ffac9" translate="yes" xml:space="preserve">
          <source>This function returns the status of the Next Protocol Negotiation (NPN) or Application-Layer Protocol Negotiation (ALPN). If the feature has not been enabled through &lt;a href=&quot;qsslconfiguration#setAllowedNextProtocols&quot;&gt;setAllowedNextProtocols&lt;/a&gt;(), this function returns &lt;a href=&quot;qsslconfiguration#NextProtocolNegotiationStatus-enum&quot;&gt;NextProtocolNegotiationNone&lt;/a&gt;. The status will be set before emitting the encrypted() signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e764e67b6d5906e2ac0c6c15332d69e54a4ae511" translate="yes" xml:space="preserve">
          <source>This function returns the string that the delegate will use to display the &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::DisplayRole&lt;/a&gt; of the model in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad3af34852b3881063d42a25b9d1979880062ee" translate="yes" xml:space="preserve">
          <source>This function returns the text of the current item, or if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d389a512604d6c2d6f3193b7d733d9183efeead" translate="yes" xml:space="preserve">
          <source>This function returns true if DTLS cookie verification was enabled on a server-side socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebb0eb9abd1fc2dd6f5fe7653db3d0cd6017ad1" translate="yes" xml:space="preserve">
          <source>This function returns true if advancing was successful, false otherwise. It may fail if the stream is corrupt, incomplete or if the nesting level of arrays and maps exceeds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0da1bfa4fdf39d927a205c2a39ae77ccafddda" translate="yes" xml:space="preserve">
          <source>This function returns true if all the checks succeeded, and false otherwise. This allows to use the function in &lt;a href=&quot;qtglobal#Q_ASSERT&quot;&gt;Q_ASSERT&lt;/a&gt; and similar other debugging mechanisms. If some check failed, a warning message will be printed in the &lt;code&gt;qt.core.qabstractitemmodel.checkindex&lt;/code&gt; logging category, containing some information that may be useful for debugging the failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab97ec74cf47b3b7de9154821268ab7f90e3ec2" translate="yes" xml:space="preserve">
          <source>This function rewinds the value to the minimum value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d30eda9856de116f8cf823200919aa191171e2" translate="yes" xml:space="preserve">
          <source>This function schedules callback to be invoked before composing the Qt Quick scene.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a9df24dabe07cd7b0ae9417027b07cccbe9075" translate="yes" xml:space="preserve">
          <source>This function searches month names and the names of the days of the week in the current locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ceabd4612c8cbf13a555be8aa695bc78e9105b" translate="yes" xml:space="preserve">
          <source>This function serves the same purpose as &lt;code&gt;qFloatDistance(float, float)&lt;/code&gt;, but returns the distance between two &lt;code&gt;double&lt;/code&gt; numbers. Since the range is larger than for two &lt;code&gt;float&lt;/code&gt; numbers (&lt;code&gt;[-DBL_MAX,DBL_MAX]&lt;/code&gt;), the return type is quint64.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4abbf4662b73c994e2b8ddbb5e8f99b42b1b9da9" translate="yes" xml:space="preserve">
          <source>This function sets both the vertical and horizontal spacing to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9c9d472d63d6c1800a22413882de4ba6d0895e" translate="yes" xml:space="preserve">
          <source>This function sets the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66932b066d242fbc480dc7842a7e85315815c09" translate="yes" xml:space="preserve">
          <source>This function sets the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_SetStyle&lt;/a&gt; attribute if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18827b84e5453ecc89cb8015e1872bfb24d848d8" translate="yes" xml:space="preserve">
          <source>This function sets the allowed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aef504ae72054c4f12128a1402ae68e5ce5d6da" translate="yes" xml:space="preserve">
          <source>This function sets the local certificate, the ciphers, the private key and the CA certificates to those stored in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548f37209c2ed51238970c3c7e70a7dd61a998cf" translate="yes" xml:space="preserve">
          <source>This function sets the open error state of the database to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16680041b3165ae39d2ec0f12f98570d52c5f9d5" translate="yes" xml:space="preserve">
          <source>This function sets the open state of the database to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45e175a59aa2fe4918fb68be93d205863c8c54e" translate="yes" xml:space="preserve">
          <source>This function sets the position used by &lt;a href=&quot;qxmlinputsource#next&quot;&gt;next&lt;/a&gt;() to the beginning of the data returned by &lt;a href=&quot;qxmlinputsource#data&quot;&gt;data&lt;/a&gt;(). This is useful if you want to use the input source for more than one parse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e0b13136c97a514a00920c1f4ae2ed48a45833" translate="yes" xml:space="preserve">
          <source>This function shadows &lt;a href=&quot;qwidget#windowModality-prop&quot;&gt;QWidget::setWindowModality&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564029c906edd2cdd848d7f5c8d9690d7179d379" translate="yes" xml:space="preserve">
          <source>This function shadows &lt;a href=&quot;qwidget#windowTitle-prop&quot;&gt;QWidget::setWindowTitle&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9eb5f7eb057f8a19fc41f6d91003406f78272f7" translate="yes" xml:space="preserve">
          <source>This function should be called after the system's timezone has been updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b6123efbb03f54e49079cbe47ffa74f624a0a6" translate="yes" xml:space="preserve">
          <source>This function should be called as late as possible before &lt;a href=&quot;qquickrendercontrol#sync&quot;&gt;sync&lt;/a&gt;(). In a threaded scenario, rendering can happen in parallel with this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="137c7ccf0e3e84a4e81ecf7a3a5e9134a45f43b5" translate="yes" xml:space="preserve">
          <source>This function should be called by the application's renderer after queuing a present operation for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654ccf8e41b847d061ea7dd9472757641dd75641" translate="yes" xml:space="preserve">
          <source>This function should be called if you are implementing custom filtering (e.g. &lt;a href=&quot;qsortfilterproxymodel#filterAcceptsRow&quot;&gt;filterAcceptsRow&lt;/a&gt;()), and your filter parameters have changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb474ec25c781beeb4059944c7e0d0d3d529b0f" translate="yes" xml:space="preserve">
          <source>This function should be called to enable the Drag and Drop events for custom pasteboard types on Cocoa implementations. This is required in addition to a &lt;a href=&quot;qmacpasteboardmime&quot;&gt;QMacPasteboardMime&lt;/a&gt; subclass implementation. By default drag and drop is enabled for all standard pasteboard types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b340bf099a6268dc5f1b67292d492ccf6f0fca13" translate="yes" xml:space="preserve">
          <source>This function should be called when there is a need to postpone the decision whether to ignore a certificate error, for example, while waiting for user input. When called, the function pauses the URL request until &lt;a href=&quot;qml-qtwebengine-webenginecertificateerror#ignoreCertificateError-method&quot;&gt;WebEngineCertificateError::ignoreCertificateError()&lt;/a&gt; or &lt;a href=&quot;qml-qtwebengine-webenginecertificateerror#rejectCertificate-method&quot;&gt;WebEngineCertificateError::rejectCertificate()&lt;/a&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2342dc80db166d4fbc19aee8130ba799a3c77e" translate="yes" xml:space="preserve">
          <source>This function should be implemented by custom Modbus servers. It is called by &lt;a href=&quot;qmodbusserver#processRequest&quot;&gt;processRequest&lt;/a&gt;() if the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7e59b181a15667b0282b51e56522ad86dab77b" translate="yes" xml:space="preserve">
          <source>This function should be used when the type will not be referenced by name. Specifically, it has to be used for C++ types that are used as the left-hand side of a property binding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ff20557ed1ce8137014b53c41fe539f561bb50" translate="yes" xml:space="preserve">
          <source>This function should not be called explicitly by the user, since it is meant for reimplementation purposes only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15ad6b3d07842f864aa843fbdb1b05e192736b9" translate="yes" xml:space="preserve">
          <source>This function should not be used when the toolbar is managed by &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt;. You can use &lt;a href=&quot;qmainwindow#addToolBar&quot;&gt;QMainWindow::addToolBar&lt;/a&gt;() or &lt;a href=&quot;qmainwindow#insertToolBar&quot;&gt;QMainWindow::insertToolBar&lt;/a&gt;() if you wish to move a toolbar that is already added to a main window to another &lt;a href=&quot;qt#ToolBarArea-enum&quot;&gt;Qt::ToolBarArea&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302511e8f33a0c2aaf588ca6342276c01143c436" translate="yes" xml:space="preserve">
          <source>This function should only be called from &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;QGraphicsEffect::draw&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa9506e4fa60aee5845c3ef0ccaf4be53d0747e" translate="yes" xml:space="preserve">
          <source>This function should only be called if the application has been started by the user (i.e. not by COM to respond to a request), and only for one object, usually the toplevel object of the application's object hierarchy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043b01ef0606850a104fc2c8c3561741369534e6" translate="yes" xml:space="preserve">
          <source>This function should only be used if the XML header either says the encoding is &quot;UTF-8&quot; or lacks any encoding information (the latter is the case of &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt; writing to a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;). Any other encoding is likely going to cause data corruption (&quot;mojibake&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd710ec1ce3f3f2a10909aa6efb8955d6fd9e7d" translate="yes" xml:space="preserve">
          <source>This function should only be used if this is a property of a &lt;a href=&quot;qobject#Q_GADGET&quot;&gt;Q_GADGET&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a37efe16ce71b2b7c4b26d91e882e274363e432" translate="yes" xml:space="preserve">
          <source>This function should only be used to display static content in the place of a list widget item. If you want to display custom dynamic content or implement a custom editor widget, use &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt; and subclass &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9dae63664ed396ddd3670fc79046c9ad25a216c" translate="yes" xml:space="preserve">
          <source>This function should only be used to display static content in the place of a tree widget item. If you want to display custom dynamic content or implement a custom editor widget, use &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; and subclass &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1a3e926a64b2a60eb33a40740a75bd11f1f47a" translate="yes" xml:space="preserve">
          <source>This function should only be used to display static content within the visible area corresponding to an item of data. If you want to display custom dynamic content or implement a custom editor widget, subclass &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2785115ca17075f2fb85bcc800aa48ce5546c5" translate="yes" xml:space="preserve">
          <source>This function should perform any layout as required for this item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ca4fdf83a4b32ecf9232ece6495b1463db4c9d" translate="yes" xml:space="preserve">
          <source>This function should return a mask where each bit represents graphics states changed by the &lt;a href=&quot;qsgrendernode#render&quot;&gt;render&lt;/a&gt;() function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ccb2e85ebdd087a66b84bc3a241af92e6b24a7" translate="yes" xml:space="preserve">
          <source>This function should set up any required OpenGL resources and state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad597f50c12845bbbf568e4f5b7256f156b83b4" translate="yes" xml:space="preserve">
          <source>This function simply calls &lt;a href=&quot;qsqlquerymodel#setQuery&quot;&gt;QSqlQueryModel::setQuery&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb71d49061c146d17a22e9886a1daa3635d8bb3" translate="yes" xml:space="preserve">
          <source>This function stores the error state, if any, in the object pointed to by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52846f66547690eea4fedbe873f1bbb452270d01" translate="yes" xml:space="preserve">
          <source>This function stores the namespace URI in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7977075a0088566b90d21f5438db2a5a0090fc" translate="yes" xml:space="preserve">
          <source>This function supports arguments in the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af4c7f5ed38cdc358824cb46400f97c160c6d4c" translate="yes" xml:space="preserve">
          <source>This function switches the user interface into &quot;What's This?&quot; mode. The user interface can be switched back into normal mode by the user (e.g. by them clicking or pressing Esc), or programmatically by calling &lt;a href=&quot;qwhatsthis#leaveWhatsThisMode&quot;&gt;leaveWhatsThisMode&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362af6a60d609258b27b644a55921e3bdd417580" translate="yes" xml:space="preserve">
          <source>This function takes a character position and returns the rectangle that the cursor would occupy, if it was placed at that character position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8317c490d5588d7a5755aaf3c08a17c13d85c55" translate="yes" xml:space="preserve">
          <source>This function takes a format string and a list of arguments, similar to the C printf() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cfbf62f83949d5db6bfa73af911e856c64301a1" translate="yes" xml:space="preserve">
          <source>This function takes a format string and a list of arguments, similar to the C printf() function. The format should be a Latin-1 string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f335dfff2031aaf8e4bf4035e590e0454906480f" translate="yes" xml:space="preserve">
          <source>This function takes the query request,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6225925e010962b6aafdd05c868fb6187c0f9fb" translate="yes" xml:space="preserve">
          <source>This function tries to conform the locale name to BCP47.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2519500bfecd19ff82a45bd5e14b6e842cde76c9" translate="yes" xml:space="preserve">
          <source>This function tries to release redundant resources currently held by the QML scene.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4b8d2f2ea653ee9faf46fb373c0756d64da321c" translate="yes" xml:space="preserve">
          <source>This function unconditionally calls &lt;a href=&quot;qabstractmessagehandler#handleMessage&quot;&gt;handleMessage&lt;/a&gt;(), passing all its parameters unmodified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b926db320ca7d2feb2ffa28696f2f71608be0a1" translate="yes" xml:space="preserve">
          <source>This function updates the preview, which causes the &lt;a href=&quot;qprintpreviewwidget#paintRequested&quot;&gt;paintRequested&lt;/a&gt;() signal to be emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1901234509bb420cc57d8dfd104601852034e6d8" translate="yes" xml:space="preserve">
          <source>This function uses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938c6477da97dde85673b070e88b12e2ab72e110" translate="yes" xml:space="preserve">
          <source>This function uses &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;sizeHint&lt;/a&gt;() if it is valid, i.e., the size hint's width and height are &amp;gt;= 0. Otherwise, it sets the size to the children rectangle that covers all child widgets (the union of all child widget rectangles).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47cc02825a25cbeaa258032dddc25fe598b5ab1" translate="yes" xml:space="preserve">
          <source>This function uses a fast and therefore simple heuristic. It mainly checks whether there is something that looks like a tag before the first line break. Although the result may be correct for common cases, there is no guarantee.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd91a85157963335cd2e2d535d196bb37a1f837" translate="yes" xml:space="preserve">
          <source>This function uses a sequentially consistent memory ordering if possible; or &quot;Ordered&quot; ordering if not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f16c990733fe969d48548229793ef438841e68" translate="yes" xml:space="preserve">
          <source>This function uses the view's &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; to determine the size of the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d185623fbe917b80537e4946dda03ab55519d65b" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 4.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad4b9c1f321e8e2f3c79b92bff81cc0b58914c6" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 4.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96cc3f27c47c29c2bc0162140f7d8cb3e751f664" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 4.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535b7f420cb9b8a4e47294ddbbc66815b14b058c" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 4.3.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9727f79a0c55d114df98c4dfa7fc7feb7e05bcdd" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 4.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec5c6dcc98e4c999bc103d7685162c085558ddd" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 4.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400a2af9aa3226ca0c55d8de72e5ebfe00f5033c" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 4.6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3fed760a7b884b8fa86b04cb683390c6a6b7dd" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 4.7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd43ec5cbb13bddc5f422dba303dfbb1adcbada" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 4.8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395d67682031a7f0425d68f51d5492c458984e9f" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 5.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf31aed4e2a9f174d2474d1c72d3e8c46985fb0" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 5.0.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e61776c93446aac1c43c591e679031d26689b93" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 5.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18360db3381e0f120dbbad2daeb491893792742" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 5.10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a10a3220b1ca33bd8397a6a102656bde9ab0c56" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 5.11.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fbce9efd1733a586501dd92dc982133ad34bf52" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 5.12.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5fe21b66e604646dd9d33a9e6a8eb68aa78f549" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 5.12.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e574197d7dec7aa449dd4a61d141a97d36df1d" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 5.12.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cfab0c3d11ea7061e1ab674388ccc40fcadd7fa" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 5.13.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44021731d8e6c593cf4d6f6569a15c601aefac70" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 5.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711de800953d08749e033e025e671b75966768d5" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 5.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28ad51f3294ad6ec3eb1faeff74da1e88eadd70" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 5.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9b24a4e99eccfc3009772827133772b2035c1c" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 5.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809c97510e1eae5704ea6e0d80574ef50e98fc89" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 5.6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6dcdab96aa73019c44f98ecd6ab4e73bb1596bd" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 5.6.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664154d2a75fa7e364ca6139afba4b4a2cd53d53" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 5.7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af8899e8019a3440233e339ed8d11ea88b2ad93" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 5.8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2234dffb45a603213dbd996ba6fa65fb6de3bad0" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt 5.9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06515e85969cab32e1e4c08eff1be6675ec5544a" translate="yes" xml:space="preserve">
          <source>This function was introduced in Qt version 4.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c630416e0c4f543eea12f010c8f077a4d20f558" translate="yes" xml:space="preserve">
          <source>This function was introduced in QtDataVisualization 1.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a96950f8eb4a4d223371b0f2e9662aa0045248e" translate="yes" xml:space="preserve">
          <source>This function was introduced in QtDataVisualization 1.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0156427247ea61fafdeecb9d9b97d26bdeed50" translate="yes" xml:space="preserve">
          <source>This function was introduced in QtLocation 5.11.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df2963de0ff373c7efe472937a7d3011ca2d7c0" translate="yes" xml:space="preserve">
          <source>This function was introduced in QtPositioning 5.12.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900475a9dcd4fdc5a30cde566eacc714f612be2b" translate="yes" xml:space="preserve">
          <source>This function was introduced in QtQuick.VirtualKeyboard 2.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="080e2dd84650de4dbebe70709a1b5ca12a12fd5c" translate="yes" xml:space="preserve">
          <source>This function was introduced in QtQuick.VirtualKeyboard 2.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c010a90bafa4893f58d6bb90a5d33e2f33e12355" translate="yes" xml:space="preserve">
          <source>This function was introduced in QtQuick.VirtualKeyboard 2.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e517742b4340efa3258ac83aaacfd40d071bb089" translate="yes" xml:space="preserve">
          <source>This function will attempt to call a constructor for type &lt;code&gt;T&lt;/code&gt; that can accept all the arguments passed (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff277be2af4b5ec7a7948d81abcf94d95ab85279" translate="yes" xml:space="preserve">
          <source>This function will attempt to construct a &lt;a href=&quot;qgeocodingmanager&quot;&gt;QGeoCodingManager&lt;/a&gt; instance when it is called for the first time. If the attempt is successful the &lt;a href=&quot;qgeocodingmanager&quot;&gt;QGeoCodingManager&lt;/a&gt; will be cached, otherwise each call of this function will attempt to construct a &lt;a href=&quot;qgeocodingmanager&quot;&gt;QGeoCodingManager&lt;/a&gt; instance until the construction is successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe45a621015f0737e94f523b0155f72c07f40f7a" translate="yes" xml:space="preserve">
          <source>This function will attempt to construct a &lt;a href=&quot;qgeoroutingmanager&quot;&gt;QGeoRoutingManager&lt;/a&gt; instance when it is called for the first time. If the attempt is successful the &lt;a href=&quot;qgeoroutingmanager&quot;&gt;QGeoRoutingManager&lt;/a&gt; will be cached, otherwise each call of this function will attempt to construct a &lt;a href=&quot;qgeoroutingmanager&quot;&gt;QGeoRoutingManager&lt;/a&gt; instance until the construction is successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3da3d0b9b562449a71fe8d011910877f125255a" translate="yes" xml:space="preserve">
          <source>This function will attempt to construct a &lt;a href=&quot;qplacemanager&quot;&gt;QPlaceManager&lt;/a&gt; instance when it is called for the first time. If the attempt is successful the &lt;a href=&quot;qplacemanager&quot;&gt;QPlaceManager&lt;/a&gt; will be cached, otherwise each call of this function will attempt to construct a &lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt; instance until the construction is successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f945e9ad6c29797e2569878f44ffd18a2bf21e6" translate="yes" xml:space="preserve">
          <source>This function will be called on the rendering thread while the GUI thread is blocked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5b6e7f3c53399ff246b9b8dd3e647dc30ce769" translate="yes" xml:space="preserve">
          <source>This function will block until OpenGL indicates the results are available. It is recommended to check the availability of the result prior to calling this function with &lt;a href=&quot;qopengltimemonitor#isResultAvailable&quot;&gt;isResultAvailable&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f065bc912ca4e13e980712c3399cd52cb6a8d14d" translate="yes" xml:space="preserve">
          <source>This function will block until the result is made available by OpenGL. It is recommended to call &lt;a href=&quot;qopengltimerquery#isResultAvailable&quot;&gt;isResultAvailable&lt;/a&gt;() to ensure that the result is available to avoid unnecessary blocking and stalling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944f83b83aab67868e0aa162cccaf302bf062ad0" translate="yes" xml:space="preserve">
          <source>This function will call &lt;a href=&quot;qgraphicseffect#update&quot;&gt;update&lt;/a&gt;() if this is necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e43caa15102225b4b440b6abc5212f28aeb1a7" translate="yes" xml:space="preserve">
          <source>This function will call &lt;a href=&quot;qstatemachine#start&quot;&gt;start&lt;/a&gt;() to start the state machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97708902ee4ec65acdc83140602b793aceea75ed" translate="yes" xml:space="preserve">
          <source>This function will call &lt;a href=&quot;qstatemachine#stop&quot;&gt;stop&lt;/a&gt;() to stop the state machine and subsequently emit the &lt;a href=&quot;qstatemachine#stopped&quot;&gt;stopped&lt;/a&gt;() signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15264b026ca9edce1e4376e2047b752cf45182fb" translate="yes" xml:space="preserve">
          <source>This function will cancel the animation callback referenced by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6743c04c2f7ee87bc59e97f3f6d41c1008143350" translate="yes" xml:space="preserve">
          <source>This function will create and set a new selection model, replacing any model that was previously set with &lt;a href=&quot;qabstractitemview#setSelectionModel&quot;&gt;setSelectionModel&lt;/a&gt;(). However, the old selection model will not be deleted as it may be shared between several views. We recommend that you delete the old selection model if it is no longer required. This is done with the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3925673f20706678c8cd0f6c4d818feb3c95981c" translate="yes" xml:space="preserve">
          <source>This function will first empty Qts events by calling &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;QCoreApplication::processEvents&lt;/a&gt;(), then the platform plugin will sync up with the windowsystem, and finally Qts events will be delived by another call to &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;QCoreApplication::processEvents&lt;/a&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb9a9d1219e2e53531391c34e651ead8dd5f713" translate="yes" xml:space="preserve">
          <source>This function will forcibly hide the torn off menu making it disappear from the user's desktop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0805490220f4f4a8b2816252e72d0c8af76a91b3" translate="yes" xml:space="preserve">
          <source>This function will forcibly show the torn off menu making it appear on the user's desktop at the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d320b0b313a78d94cfe7691e63d3e9c492bbadf" translate="yes" xml:space="preserve">
          <source>This function will forcibly show the torn off menu making it appear on the user's desktop under the mouse currsor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197b43eeaec6ea2de1472da8f187c4fa457aeeb8" translate="yes" xml:space="preserve">
          <source>This function will have no effect unless &lt;a href=&quot;qopenglframebufferobject#hasOpenGLFramebufferBlit&quot;&gt;hasOpenGLFramebufferBlit&lt;/a&gt;() returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8713e34e57d5572241333fee9a7bf409a5ddda" translate="yes" xml:space="preserve">
          <source>This function will not be included in the documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4b782e172b58c7fa4d1ca54703f33d48684a68" translate="yes" xml:space="preserve">
          <source>This function will not be included in the documentation. Instead, a link to the base function &lt;a href=&quot;qabstractbutton#nextCheckState&quot;&gt;QAbstractButton::nextCheckState&lt;/a&gt;() will appear in the documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76af6b2e1458acbf33ddb2048c865513f5c1a5cb" translate="yes" xml:space="preserve">
          <source>This function will not fail, except if this &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; or any of the contained items, if this is a map or array, are invalid. Invalid types are not produced normally by the API, but can result from decoding errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc57473de5002ff1c467a9e9155b290e68b1bbec" translate="yes" xml:space="preserve">
          <source>This function will not overwrite an already existing entity in the file system; in this case, &lt;code&gt;link()&lt;/code&gt; will return false and set &lt;a href=&quot;qfiledevice#error&quot;&gt;error()&lt;/a&gt; to return &lt;a href=&quot;qfiledevice#FileError-enum&quot;&gt;RenameError&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a97c4724c022ac93600272773771b96dda220034" translate="yes" xml:space="preserve">
          <source>This function will return 0 if no viewport bias was specified in the &lt;a href=&quot;qgeocodingmanager&quot;&gt;QGeoCodingManager&lt;/a&gt; function which created this reply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4040140ed1aed15de5da2d4e449e84e37ad66ff2" translate="yes" xml:space="preserve">
          <source>This function will return 0 if the service provider does not provide any geocoding services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="360a5287d11a7e1ff3a203dcda57b0ac4511a88f" translate="yes" xml:space="preserve">
          <source>This function will return 0 if the service provider does not provide any geographic routing services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a466c41dd7065085436f6cbf40f12c6f3e9e76" translate="yes" xml:space="preserve">
          <source>This function will return false if the OpenGL implementation does not support buffers, or there is no current &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2456ea1627cb7fd3ddd71845d5987c2e5e0f712d" translate="yes" xml:space="preserve">
          <source>This function will return false until a tool such as a screen reader accessed the accessibility framework. It is still possible to use &lt;a href=&quot;qaccessible#queryAccessibleInterface&quot;&gt;QAccessible::queryAccessibleInterface&lt;/a&gt;() even if accessibility is not active. But there will be no notifications sent to the platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69425f36ac2f7c9c7c72c70d5d22bc1645caf4a" translate="yes" xml:space="preserve">
          <source>This function will return the same as &lt;a href=&quot;qmdiarea#activeSubWindow&quot;&gt;activeSubWindow&lt;/a&gt;() if the &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; containing &lt;a href=&quot;qmdiarea&quot;&gt;QMdiArea&lt;/a&gt; is active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b6ab90543ef65677eb48af820086b9c3a0bb60" translate="yes" xml:space="preserve">
          <source>This function will return true even if this object doesn't have a property of the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c2db125c17f023df3067361765762117453bb1" translate="yes" xml:space="preserve">
          <source>This function will set the labels for the &lt;a href=&quot;qfiledialog#DialogLabel-enum&quot;&gt;FileName&lt;/a&gt; and &lt;a href=&quot;qfiledialog#DialogLabel-enum&quot;&gt;Accept&lt;/a&gt;&lt;a href=&quot;qfiledialog#DialogLabel-enum&quot;&gt;DialogLabel&lt;/a&gt;s. It is possible to set custom text after the call to setFileMode().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c8b5b55251b1b817d99389bec11e2cbbbba498" translate="yes" xml:space="preserve">
          <source>This function will still return true if the widget is obscured by other windows on the screen, but could be physically visible if it or they were to be moved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25b2508abbb3c3126650df5692552a07b4419e1" translate="yes" xml:space="preserve">
          <source>This function will uncompress data compressed with &lt;a href=&quot;qbytearray#qCompress&quot;&gt;qCompress&lt;/a&gt;() from this and any earlier Qt version, back to Qt 3.1 when this feature was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6861a1f30e40cdab8efddfbcf63a7a650884b76e" translate="yes" xml:space="preserve">
          <source>This function works for all devices, including sequential ones that cannot &lt;a href=&quot;qiodevice#seek&quot;&gt;seek&lt;/a&gt;(). It is optimized to skip unwanted data after a &lt;a href=&quot;qiodevice#peek&quot;&gt;peek&lt;/a&gt;() call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8747594f021f075135f17c44e835711ac27595" translate="yes" xml:space="preserve">
          <source>This function works for the built-in Qt layouts, but might not work for custom layouts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa1cb5dc8a7f2fbe10ed3242f30625d2e0dab02" translate="yes" xml:space="preserve">
          <source>This function works in the same way as &lt;code&gt;connect(const QObject *sender, const char *signal, const QObject *receiver, const char *method, Qt::ConnectionType type)&lt;/code&gt; but it uses &lt;a href=&quot;qmetamethod&quot;&gt;QMetaMethod&lt;/a&gt; to specify signal and method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9d8cffc07f1513d934b3ec55873b14e1674900" translate="yes" xml:space="preserve">
          <source>This function works the same as the constructor. It reconstructs this &lt;a href=&quot;qsystemsemaphore&quot;&gt;QSystemSemaphore&lt;/a&gt; object. If the new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb4c3c8f253de239708c276efb9f5223df6ab09" translate="yes" xml:space="preserve">
          <source>This function writes a &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; to the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9c5de4258ed017fe19122bf58cc1b1e5930567" translate="yes" xml:space="preserve">
          <source>This function writes a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; to the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d4b896f340541fc27b66e9695878ff4b8b34d3" translate="yes" xml:space="preserve">
          <source>This function writes as much as possible from the internal write buffer to the socket, without blocking. If any data was written, this function returns &lt;code&gt;true&lt;/code&gt;; otherwise false is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301115c4b4d9ab5b6b0e660aac32132297586147" translate="yes" xml:space="preserve">
          <source>This function writes as much as possible from the internal write buffer to the underlying network socket, without blocking. If any data was written, this function returns &lt;code&gt;true&lt;/code&gt;; otherwise false is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba0592026e64538e80877e0a1150418aad29894" translate="yes" xml:space="preserve">
          <source>This function writes as much as possible from the internal write buffer to the underlying network socket, without blocking. If any data was written, this function returns true; otherwise false is returned. Call this function if you need &lt;a href=&quot;qwebsocket&quot;&gt;QWebSocket&lt;/a&gt; to start sending buffered data immediately. The number of bytes successfully written depends on the operating system. In most cases, you do not need to call this function, because &lt;a href=&quot;qwebsocket&quot;&gt;QWebSocket&lt;/a&gt; will start sending data automatically once control goes back to the event loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e561f65a1b1186acd45bad2b620787af27431670" translate="yes" xml:space="preserve">
          <source>This function writes as much as possible from the internal write buffer to the underlying serial port without blocking. If any data was written, this function returns &lt;code&gt;true&lt;/code&gt;; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee0020e3f78851a872f5295446547bf663f7e81" translate="yes" xml:space="preserve">
          <source>This function's most important task is to close the socket to the CAN device and to call &lt;a href=&quot;qcanbusdevice#setState&quot;&gt;QCanBusDevice::setState&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6124a3e263ea0c19c57629f602923a5f33d4fd59" translate="yes" xml:space="preserve">
          <source>This function, which is usually called by &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;, paints the contents of an item in local coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f9bca0645964395debabec7bbe57926f79cb91" translate="yes" xml:space="preserve">
          <source>This function, which is usually called by the QML Scene Graph, paints the contents of an item in local coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81fe678c7f8e466f6a39ef260d9851a4ae4c271" translate="yes" xml:space="preserve">
          <source>This functional might be useful when the gesture event is delivered to a &lt;a href=&quot;qgraphicsobject&quot;&gt;QGraphicsObject&lt;/a&gt; to translate a point in screen coordinates to scene-local coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a75e4288ca3f302e90d4d79a4cc33807cc86ae2" translate="yes" xml:space="preserve">
          <source>This functionality facilitates deploying different image asset file types on different target platforms. This can be useful in order to tune application performance and adapt to different graphics hardware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41bbcf67562946e095781979c2d9204b9aa2a68" translate="yes" xml:space="preserve">
          <source>This functionality was introduced in Qt 5.11.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f45bd07200d0c73e54f822f852c0da8643d6b555" translate="yes" xml:space="preserve">
          <source>This functions is provided for compatibility with other Qt containers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e46865a4781a947601276881c3af0686947e6da" translate="yes" xml:space="preserve">
          <source>This functions normalizes the path and domain of the cookie if they were previously empty. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c16074a9d5147e57e4acf7b1a1f01bdcbf13f7b" translate="yes" xml:space="preserve">
          <source>This functions returns the current rubber band area (in viewport coordinates) if the user is currently doing an itemselection with rubber band. When the user is not using the rubber band this functions returns (a null) QRectF().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ad864f7dbbb99be7524283ac0af9d81a178876" translate="yes" xml:space="preserve">
          <source>This functions returns the number of columns necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0e972b2c97ee40e4511eedcb57b6b4cd1a89f6" translate="yes" xml:space="preserve">
          <source>This functions should be used instead of the regular &lt;code&gt;qmlRegisterType()&lt;/code&gt; variations. The arguments are identical to the corresponding non-extension registration functions, except for the ExtendedT parameter which is the type of the extension object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7da8b3fd5dc6c1fd65aa44a75ee7104ee114a46" translate="yes" xml:space="preserve">
          <source>This generates HTML documentation using the default settings, as well as WebXML documentation into output subdirectory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db933779e0186df3e4b402cc9468cca432c5953" translate="yes" xml:space="preserve">
          <source>This generates a list of all the C++ classes and/or QML types in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33af37040d111d1e34cd201c647cb30fc3498b9" translate="yes" xml:space="preserve">
          <source>This generates the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd7e879fadcef4917a334b7644ba4e59c7d0ee32" translate="yes" xml:space="preserve">
          <source>This generic signal gets emitted when the COM object issues the event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505f8d6b948d1a06886bb8d232bb3db4426e86db" translate="yes" xml:space="preserve">
          <source>This geo services plugin allows applications to access &lt;a href=&quot;http://mapbox.com&quot;&gt;Mapbox&lt;/a&gt; location based services using the Qt Location API. The use of these services is governed by the &lt;a href=&quot;https://www.mapbox.com/tos&quot;&gt;Mapbox terms of service&lt;/a&gt;. An access token is required to use these services. Data is provided by &lt;a href=&quot;https://www.mapbox.com/about/maps&quot;&gt;OpenStreetMap and others&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130f87508ac8da49ac910df181ef538fb75bae35" translate="yes" xml:space="preserve">
          <source>This geo services plugin allows applications to access &lt;a href=&quot;http://mapbox.com&quot;&gt;Mapbox&lt;/a&gt; mapping services using the Qt Location API. The use of these services is governed by the &lt;a href=&quot;https://www.mapbox.com/tos&quot;&gt;Mapbox terms of service&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca5a9d2870c19f1319731b55c6925ce4d9f29e1" translate="yes" xml:space="preserve">
          <source>This geo services plugin allows applications to access &lt;a href=&quot;http://openstreetmap.org&quot;&gt;Open Street Map&lt;/a&gt; location based services using the Qt Location API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cabc74837b528a0d0178304ada2247e95195dd65" translate="yes" xml:space="preserve">
          <source>This geo services plugin allows applications to access &lt;a href=&quot;http://www.esri.com&quot;&gt;Esri&lt;/a&gt; location based services using the Qt Location API. The use of these services is governed by the &lt;a href=&quot;http://www.esri.com/legal/terms-use&quot;&gt;Esri terms of use&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8f3596d09351575c82cd50e5b0ae7e0bfcc4bb" translate="yes" xml:space="preserve">
          <source>This geo services plugin is a special plugin providing only an empty map. This plugin provides no services, and is intended to be used in those cases where a &lt;a href=&quot;qml-qtlocation-map&quot;&gt;Map&lt;/a&gt; element should only show the added map items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49400444e6b1c4f183e813442fdc832ee59dc36" translate="yes" xml:space="preserve">
          <source>This gives the opportunity to position and resize a line as it is being laid out. It can for example be used to create columns or lay out text around objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69e47cf6e3687a72f6c61153aa991b974526a6d" translate="yes" xml:space="preserve">
          <source>This gives us the following result, given the stack [A, B, C]:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d83ba56672abf734f0dc73aeec3511dd682d33e" translate="yes" xml:space="preserve">
          <source>This gives us the following table. To split the first row of the table back into two cells, we invoke the &lt;a href=&quot;qtexttable#splitCell&quot;&gt;splitCell&lt;/a&gt;() function with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053c9d293bf5b986b776167fc95c5152833322dd" translate="yes" xml:space="preserve">
          <source>This group holds the size constraints of the content item. This is the area between the &lt;a href=&quot;qml-qtquick-controls-toolbar&quot;&gt;ToolBar&lt;/a&gt; and the &lt;a href=&quot;qml-qtquick-controls-statusbar&quot;&gt;StatusBar&lt;/a&gt;. The &lt;a href=&quot;qml-qtquick-controls-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt; will use this as input when calculating the effective size constraints of the actual window. It holds these 6 properties for describing the minimum, implicit and maximum sizes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c6c8a3eea8c1318c18ebb0abbf6e04332f51df" translate="yes" xml:space="preserve">
          <source>This guarantees that make will run the moc before it compiles &lt;code&gt;foo.cpp&lt;/code&gt;. You can then put</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30916ab0915ea30b92d3704a54640cf01b728022" translate="yes" xml:space="preserve">
          <source>This guide assumes that you have registered the in-app products for your application in the external store. For more information about registering products, see &lt;a href=&quot;qtpurchasing-googleplay#&quot;&gt;Registering Products in Google Play&lt;/a&gt; and &lt;a href=&quot;qtpurchasing-appstore#&quot;&gt;Registering Products in App Store&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd467ad6c1a11a8b10a92ea2d3bfa9e83aca685" translate="yes" xml:space="preserve">
          <source>This guide assumes that you have registered the in-app products for your application in the external store. For more information about registering products, see &lt;a href=&quot;qtpurchasing-googleplay#&quot;&gt;Registering Products in Google Play&lt;/a&gt;, &lt;a href=&quot;qtpurchasing-appstore#&quot;&gt;Registering Products in App Store&lt;/a&gt;, and &lt;a href=&quot;qtpurchasing-windowsstore#&quot;&gt;Registering Products in Windows Store&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df7adab0ffd041507e2c07525a1e48c566b885f" translate="yes" xml:space="preserve">
          <source>This guide provides a brief introduction to registering an application and its in-app products on Windows Store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b850ac676689296f39c59c8c41c7ebeeda9837" translate="yes" xml:space="preserve">
          <source>This handler can take the exclusive grab from another handler of the same class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071ebb46611a6cefeb118167f79d8c41b8625281" translate="yes" xml:space="preserve">
          <source>This handler can take the exclusive grab from any kind of handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa91fa5d42d1bda7bb026b9f1dd95328aaf6e4a7" translate="yes" xml:space="preserve">
          <source>This handler can take the exclusive grab from any type of Item or Handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0806ed6416e885b99b42d8b90e4b7675603dc526" translate="yes" xml:space="preserve">
          <source>This handler gives permission for another handler of the same class to take the grab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0cd998acc757662ef695068e35ea48c4e75a92" translate="yes" xml:space="preserve">
          <source>This handler gives permission for any any type of Item or Handler to take the grab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2291f6af0d61fe071ea5b0461493983e68b87219" translate="yes" xml:space="preserve">
          <source>This handler gives permission for any kind of Item to take the grab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465340086c7c498b0764c491d14d664e8acc36ce" translate="yes" xml:space="preserve">
          <source>This handler gives permission for any kind of handler to take the grab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c110821a6b32b545497479cce140457c59d300" translate="yes" xml:space="preserve">
          <source>This handler is called when a previously purchased unlockable product is restored. This can happen when the &lt;a href=&quot;qml-qtpurchasing-store#restorePurchases-method&quot;&gt;restorePurchases()&lt;/a&gt; function in the current &lt;a href=&quot;qml-qtpurchasing-store&quot;&gt;Store&lt;/a&gt; is called. The &lt;code&gt;onPurchaseRestored&lt;/code&gt; handler will then be called for each unlockable product which has previously been purchased by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5024f199e405ca21c43eb3135725a38d5fb8041d" translate="yes" xml:space="preserve">
          <source>This handler is called when a product has been purchased successfully. It is triggered when the application has called &lt;a href=&quot;qml-qtpurchasing-product#purchase-method&quot;&gt;purchase()&lt;/a&gt; on the product and the user has subsequently confirmed the purchase, for example by entering their password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4dac9be4f0ce6c51c8fac4da5863bb9b7378df" translate="yes" xml:space="preserve">
          <source>This handler is called when a purchase was requested for a given product, but the purchase failed. This will typically happen if the application calls &lt;a href=&quot;qml-qtpurchasing-product#purchase-method&quot;&gt;purchase()&lt;/a&gt; on a product, and the user subsequently cancels the purchase. It could also happen under other circumstances, for example if there is no suitable network connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142b17044642c983dddfbfe0552fc7695c4fb333" translate="yes" xml:space="preserve">
          <source>This handler neither takes from nor gives grab permission to any type of Item or Handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046ccffc2c803bc2b4bc8d4248acacc60035aa63" translate="yes" xml:space="preserve">
          <source>This handler will allow its grab to be set to null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e61c56818feeb5c0c821ca879604de307a9b4b" translate="yes" xml:space="preserve">
          <source>This happens automatically on application termination, so you shouldn't normally need to call this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747ea230dc7f6319d746b6f624b88c07a82c2681" translate="yes" xml:space="preserve">
          <source>This happens because when matching the first branch of the alternation operator a partial match is found, and therefore matching stops, without trying the second branch. Another example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0b12b02a33ef3f81ae33e97b871b215ca567c3" translate="yes" xml:space="preserve">
          <source>This happens when the item is about to be removed from the window it was previously rendering to. The item is guaranteed to have a &lt;a href=&quot;qquickitem#window&quot;&gt;window&lt;/a&gt; when the function is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52189b73aaa4b2d4ebf2c7e16b729093919c89f8" translate="yes" xml:space="preserve">
          <source>This happens, for instance, on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS, where the system UI fonts are not accessible to the user. For completeness, &lt;a href=&quot;qfontdatabase#families&quot;&gt;QFontDatabase::families&lt;/a&gt;() returns all font families, including the private ones. You should use this function if you are developing a font selection control in order to keep private fonts hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7187330943069c8c42644615bd6a449320ad1244" translate="yes" xml:space="preserve">
          <source>This has almost the same API as &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, but provides significantly faster lookups. &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; stores its data in an arbitrary order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf29596bbd0f6b1759adb18eb28d90aac6c85e0a" translate="yes" xml:space="preserve">
          <source>This has exactly the same effect as the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c7c7ed627eb7e559daca382893790791ce30a01" translate="yes" xml:space="preserve">
          <source>This has the same effect as setting the &lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt::AA_ShareOpenGLContexts&lt;/a&gt; attribute with &lt;a href=&quot;qcoreapplication#setAttribute&quot;&gt;QCoreApplication::setAttribute&lt;/a&gt; before constructing &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c14297479ef72e7108fa452c202297921c3bc1f" translate="yes" xml:space="preserve">
          <source>This header cell spans three columns, but only one row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8eafcf90aae754d9e345415498a3982189a15be" translate="yes" xml:space="preserve">
          <source>This header file provides support for half-precision (16-bit) floating point data with the class &lt;code&gt;qfloat16&lt;/code&gt;. It is fully compliant with IEEE 754 as a storage type. This implies that any arithmetic operation on a &lt;code&gt;qfloat16&lt;/code&gt; instance results in the value first being converted to a &lt;code&gt;float&lt;/code&gt;. This conversion to and from &lt;code&gt;float&lt;/code&gt; is performed by hardware when possible, but on processors that do not natively support half-precision, the conversion is performed through a sequence of lookup table operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94066293833db3f6fc5b72df6fc9d0329543b223" translate="yes" xml:space="preserve">
          <source>This hint is supplied along with &lt;a href=&quot;qml-qtquick-canvas#renderStrategy-prop&quot;&gt;renderStrategy&lt;/a&gt; to the graphics context to determine the method of rendering. A &lt;a href=&quot;qml-qtquick-canvas#renderStrategy-prop&quot;&gt;renderStrategy&lt;/a&gt;, renderTarget or a combination may not be supported by a graphics context, in which case the context will choose appropriate options and Canvas will signal the change to the properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8a50aa4e0b409106ed0596581ddc5c95ec2641" translate="yes" xml:space="preserve">
          <source>This hint is supplied along with &lt;a href=&quot;qml-qtquick-canvas#renderTarget-prop&quot;&gt;renderTarget&lt;/a&gt; to the graphics context to determine the method of rendering. A renderStrategy, &lt;a href=&quot;qml-qtquick-canvas#renderTarget-prop&quot;&gt;renderTarget&lt;/a&gt; or a combination may not be supported by a graphics context, in which case the context will choose appropriate options and Canvas will signal the change to the properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060eca0dd50254df0e050184ac45018a9eb3e3ae" translate="yes" xml:space="preserve">
          <source>This hint specifies that the gesture framework should consume the filtered event and not deliver it to the receiver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d00669ef773f55972a9d6a3a87ca5f59ee72b8" translate="yes" xml:space="preserve">
          <source>This holds the footer item created from the &lt;a href=&quot;qml-qtquick-gridview#footer-prop&quot;&gt;footer&lt;/a&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3972a9ca71cb7be43b108197e09fc3fbb8fd7c5" translate="yes" xml:space="preserve">
          <source>This holds the footer item created from the &lt;a href=&quot;qml-qtquick-listview#footer-prop&quot;&gt;footer&lt;/a&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6a8ec815777f3856dee11ac4ee27334cc16059" translate="yes" xml:space="preserve">
          <source>This holds the header item created from the &lt;a href=&quot;qml-qtquick-gridview#header-prop&quot;&gt;header&lt;/a&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c1272bc204d28ab81be96cb7cf1460f1850299" translate="yes" xml:space="preserve">
          <source>This holds the header item created from the &lt;a href=&quot;qml-qtquick-listview#header-prop&quot;&gt;header&lt;/a&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee06e64973adeda5ce705e4999efb297a0c1a617" translate="yes" xml:space="preserve">
          <source>This holds the highlight item created from the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-views-example.html#highlight&quot;&gt;highlight&lt;/a&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf50abbe8a9eef4b7615a43e91dac4b484722003" translate="yes" xml:space="preserve">
          <source>This holds the transition to be applied to the content view when it snaps back to the bounds of the flickable. The transition is triggered when the view is flicked or dragged past the edge of the content area, or when &lt;a href=&quot;qml-qtquick-flickable#returnToBounds-method&quot;&gt;returnToBounds()&lt;/a&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89bff8412a4707f70baf453602d1a4a08b1ffef1" translate="yes" xml:space="preserve">
          <source>This holds the url of the JavaScript file that implements the &lt;code&gt;WorkerScript.onMessage()&lt;/code&gt; handler for threaded operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a97f7825195ae73de764db749102f3ac176f3fe" translate="yes" xml:space="preserve">
          <source>This holds true whenever this Input Handler has taken sole responsibility for handing one or more EventPoints, by successfully taking an exclusive grab of those points. This means that it is keeping its properties up-to-date according to the movements of those Event Points and actively manipulating its &lt;a href=&quot;qml-qtquick-multipointhandler#target-prop&quot;&gt;target&lt;/a&gt; (if any).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701b411576036bfa8da400ef2a6b73f4fe12d8b4" translate="yes" xml:space="preserve">
          <source>This holds true whenever this Input Handler has taken sole responsibility for handing one or more EventPoints, by successfully taking an exclusive grab of those points. This means that it is keeping its properties up-to-date according to the movements of those Event Points and actively manipulating its &lt;a href=&quot;qml-qtquick-pointerdevicehandler#target-prop&quot;&gt;target&lt;/a&gt; (if any).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0bda90c8de3605c8b22ce08ac5cd7a3f865ccbd" translate="yes" xml:space="preserve">
          <source>This holds true whenever this Input Handler has taken sole responsibility for handing one or more EventPoints, by successfully taking an exclusive grab of those points. This means that it is keeping its properties up-to-date according to the movements of those Event Points and actively manipulating its &lt;a href=&quot;qml-qtquick-pointerhandler#target-prop&quot;&gt;target&lt;/a&gt; (if any).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2d7f2edbcf782a20dd87940301f77996b0b960" translate="yes" xml:space="preserve">
          <source>This holds true whenever this Input Handler has taken sole responsibility for handing one or more EventPoints, by successfully taking an exclusive grab of those points. This means that it is keeping its properties up-to-date according to the movements of those Event Points and actively manipulating its &lt;a href=&quot;qml-qtquick-pointhandler#target-prop&quot;&gt;target&lt;/a&gt; (if any).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de0a1bb32fad55031f09d473ae85c1171a956d6" translate="yes" xml:space="preserve">
          <source>This holds true whenever this Input Handler has taken sole responsibility for handing one or more EventPoints, by successfully taking an exclusive grab of those points. This means that it is keeping its properties up-to-date according to the movements of those Event Points and actively manipulating its &lt;a href=&quot;qml-qtquick-singlepointhandler#target-prop&quot;&gt;target&lt;/a&gt; (if any).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73bbfe7075f0c0e4147ed95c983acafbd2fe2b4" translate="yes" xml:space="preserve">
          <source>This holds true whenever this Input Handler has taken sole responsibility for handing one or more EventPoints, by successfully taking an exclusive grab of those points. This means that it is keeping its properties up-to-date according to the movements of those Event Points and actively manipulating its &lt;a href=&quot;qml-qtquick-taphandler#target-prop&quot;&gt;target&lt;/a&gt; (if any).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d519aa632f3fad2ade5435ffa7345134d716334" translate="yes" xml:space="preserve">
          <source>This identifies C++ as the language of the Qt source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e6f3050c7ba5c10f09593278a26f80333ed05f" translate="yes" xml:space="preserve">
          <source>This idiom is more flexible than the traditional approach; e.g.,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbdd3650805f70135e70eb447d1f072c10b0337d" translate="yes" xml:space="preserve">
          <source>This illustration shows a fragment of a dialog with a five-column, three-row grid (the grid is shown overlaid in magenta):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e097b2d24f6947bd7f557255dc2dd4ec634bec" translate="yes" xml:space="preserve">
          <source>This immediately sets the &lt;code&gt;transformOrigin&lt;/code&gt; property to the value defined in the end state of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; (i.e. the value defined in the &lt;a href=&quot;qml-qtquick-propertyaction&quot;&gt;PropertyAction&lt;/a&gt; object) so that the rotation animation begins with the correct transform origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c068dfcb2e3217086321057b42f18cf1c1c46054" translate="yes" xml:space="preserve">
          <source>This imperative API can be used to register objects on the fly. For static objects, the declarative &lt;a href=&quot;qml-qtwebchannel-webchannel#registeredObjects-prop&quot;&gt;registeredObjects&lt;/a&gt; property should be preferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26e78048c6205f628347608bcdb4840216a6c70" translate="yes" xml:space="preserve">
          <source>This implementation caches the size hint to avoid resizing when the contents change dynamically. To invalidate the cached value change the &lt;a href=&quot;qcombobox#sizeAdjustPolicy-prop&quot;&gt;sizeAdjustPolicy&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd27477354a2b781408f6813f53abe13939a36ee" translate="yes" xml:space="preserve">
          <source>This implicitly sends a configure event to the corresponding &lt;a href=&quot;qml-qtwayland-compositor-xdgsurface&quot;&gt;XdgSurface&lt;/a&gt; as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c240a5b17c175932c50f3ac8ebba18311ead18" translate="yes" xml:space="preserve">
          <source>This implicitly sends a configure event to the corresponding &lt;a href=&quot;qml-qtwayland-compositor-xdgsurfacev6&quot;&gt;XdgSurfaceV6&lt;/a&gt; as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478cce56642d407f8c980abdecc63c986b71dd70" translate="yes" xml:space="preserve">
          <source>This implicitly sends a configure event to the corresponding &lt;a href=&quot;qwaylandxdgsurface&quot;&gt;QWaylandXdgSurface&lt;/a&gt; as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6277823411fc4585bade05af24870ec110f764b" translate="yes" xml:space="preserve">
          <source>This implicitly sends a configure event to the corresponding &lt;a href=&quot;qwaylandxdgsurfacev6&quot;&gt;QWaylandXdgSurfaceV6&lt;/a&gt; as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b1722d978fc443529bbeeccc4defd5a6ca6a3e" translate="yes" xml:space="preserve">
          <source>This implies that &lt;a href=&quot;qdtlsclientverifier&quot;&gt;QDtlsClientVerifier&lt;/a&gt; does not read directly from a socket, instead it expects the application to read an incoming datagram, extract the sender's address, and port, and then pass this data to &lt;a href=&quot;qdtlsclientverifier#verifyClient&quot;&gt;verifyClient&lt;/a&gt;(). To send a HelloVerifyRequest message, &lt;a href=&quot;qdtlsclientverifier#verifyClient&quot;&gt;verifyClient&lt;/a&gt;() can write to the &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538a88bd24e23a474e60d82cb0cdc423e3325327" translate="yes" xml:space="preserve">
          <source>This implies, among other things, that you should never pass the &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; object (&lt;code&gt;this&lt;/code&gt;) as the parent of an object created in the thread (since the &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; object itself was created in another thread).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc662c3012c7a0876dca3c0b65a4516e2e7967e" translate="yes" xml:space="preserve">
          <source>This import allows multiple modules which provide conflicting type names to be imported at the same time, however since each usage of a type provided by a module which was imported into a qualified namespace must be preceded by the qualifier, the conflict is able to be resolved unambiguously by the QML engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd6a0567e4d8f7c5e1803621ff318c6b6a55bdf" translate="yes" xml:space="preserve">
          <source>This import allows the use of all of the types provided by the &lt;code&gt;QtQuick&lt;/code&gt; module without needing to specify a qualifier. For example, the client code to create a rectangle is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88e8a0903f178c3f177828a3105b7e9985954b5" translate="yes" xml:space="preserve">
          <source>This import path, as returned by &lt;a href=&quot;qqmlengine#importPathList&quot;&gt;QQmlEngine::importPathList&lt;/a&gt;(), defines the default locations to be searched by the engine. By default, this list contains:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3898470beed213c37f96608e7169415548a1ed38" translate="yes" xml:space="preserve">
          <source>This includes the map minimum and maximum zoom level, minimum and maximum tilt angle and minimum and maximum field of view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a3e5a511c2afbe5a7552c56110905f5092fc05a" translate="yes" xml:space="preserve">
          <source>This includes the map type's &lt;a href=&quot;qml-qtlocation-maptype#name-prop&quot;&gt;name&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-maptype#description-prop&quot;&gt;description&lt;/a&gt;, the &lt;a href=&quot;qml-qtlocation-maptype#style-prop&quot;&gt;style&lt;/a&gt; and a flag to indicate if the map type is optimized for mobile devices (&lt;a href=&quot;qml-qtlocation-maptype#mobile-prop&quot;&gt;mobile&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97ab0657cd2af01d025534e6a6918c9a165432e" translate="yes" xml:space="preserve">
          <source>This index is also found in the IPv6 address' scope ID field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a82532e54a61b0810187f139d1a15572a2e68fd" translate="yes" xml:space="preserve">
          <source>This indicates how many labels are drawn. The number of grid lines to be drawn is calculated with formula: &lt;code&gt;segments * subsegments + 1&lt;/code&gt;. The preset default is &lt;code&gt;5&lt;/code&gt;. The value cannot be below &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b24439863469d676d9da2a7c81e4f416d4a4de" translate="yes" xml:space="preserve">
          <source>This indicates the current progress of the downloading of the XML data source. This value ranges from 0.0 (no data downloaded) to 1.0 (all data downloaded). If the XML data is not from a remote source, the progress becomes 1.0 as soon as the data is read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b02f104f1142b7cde6f81ed75cbbd7eb3550fa" translate="yes" xml:space="preserve">
          <source>This indicates what role the action serves in the application menu on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;. By default all actions have the &lt;a href=&quot;qaction#MenuRole-enum&quot;&gt;TextHeuristicRole&lt;/a&gt;, which means that the action is added based on its text (see &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt; for more information).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002b85f6236bfa4b7fcf0adef289fa468e9b85f0" translate="yes" xml:space="preserve">
          <source>This information can be divided into 2 broad classifications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b307f19330e1589450387b00241fc7610d997c09" translate="yes" xml:space="preserve">
          <source>This information can be used by display widgets to update their scroll bars correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81f9d5d2a8f5770f6e17dd99c5f7246314470c9" translate="yes" xml:space="preserve">
          <source>This information will be saved into a &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; object (meaning it will be stored in different places for different platforms).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a65af5dd9b5025c8f6d12ea5ed79036d251e1e6" translate="yes" xml:space="preserve">
          <source>This inserts the following three (key, value) pairs into the &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;: (&quot;one&quot;, 1), (&quot;three&quot;, 3), and (&quot;seven&quot;, 7). Another way to insert items into the hash is to use &lt;a href=&quot;qhash#insert&quot;&gt;insert&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a998791c64697ff3adc0dd7c076adadd531e1476" translate="yes" xml:space="preserve">
          <source>This inserts the following three (key, value) pairs into the &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;: (&quot;one&quot;, 1), (&quot;three&quot;, 3), and (&quot;seven&quot;, 7). Another way to insert items into the map is to use &lt;a href=&quot;qmap#insert&quot;&gt;insert&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f22676545347aa727a5730b067c57737310d1d" translate="yes" xml:space="preserve">
          <source>This inserts the three new columns as columns 4, 5, and 6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb7be6e1167b651c874dab373066fdaa13224f9" translate="yes" xml:space="preserve">
          <source>This inserts the three new rows as rows 2, 3, and 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1fec6696aed34c5daaefb2301b718c7e005f601" translate="yes" xml:space="preserve">
          <source>This interface corresponds to the IAccessibleText interface. It should be implemented for widgets that display more text than a plain label. Labels should be represented by only &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; and return their text as name (&lt;a href=&quot;qaccessibleinterface#text&quot;&gt;QAccessibleInterface::text&lt;/a&gt;() with &lt;a href=&quot;qaccessible#Text-enum&quot;&gt;QAccessible::Name&lt;/a&gt; as type). The &lt;a href=&quot;qaccessibletextinterface&quot;&gt;QAccessibleTextInterface&lt;/a&gt; is typically for text that a screen reader might want to read line by line, and for widgets that support text selection and input. This interface is, for example, implemented for &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e81ac0dc73c14fc6176ff8f94d5801dbffa303" translate="yes" xml:space="preserve">
          <source>This interface is based on the SAX2 extension DeclHandler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3e4874c1afe8ddedb7f3d4bd8b7ba1594d0cc7" translate="yes" xml:space="preserve">
          <source>This interface must be implemented in order to register a sensor backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb94101c947185fb9fa8028d0cb3187d0979dd29" translate="yes" xml:space="preserve">
          <source>This interface represents a Wayland surface role given by a Wayland protocol extension that defines how the &lt;a href=&quot;qml-qtwayland-compositor-waylandsurface&quot;&gt;WaylandSurface&lt;/a&gt; should map onto the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4abe361966e81ae2b52a047302b532bd677f5342" translate="yes" xml:space="preserve">
          <source>This interface represents a Wayland surface role given by a Wayland protocol extension that defines how the &lt;a href=&quot;qwaylandsurface&quot;&gt;QWaylandSurface&lt;/a&gt; should map onto the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf25404d370c396e46563507fd87684896a06cd1" translate="yes" xml:space="preserve">
          <source>This interface should be implemented by accessible objects that represent a value. Examples are spinner, slider, dial and scroll bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feceb8294814eab03caa4066d66badd30d554a80" translate="yes" xml:space="preserve">
          <source>This interface's design is based on the SAX2 extension LexicalHandler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb009afadf74b93ea708bca8a247fe73136045e9" translate="yes" xml:space="preserve">
          <source>This introduction contains many links to the specifications, which, of course, are the ultimate source of information about &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;. They can be a bit difficult, though, so consider investing in a textbook:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8fb56f25c1a990ad3df86e85747bcff7cd1b84" translate="yes" xml:space="preserve">
          <source>This is &lt;code&gt;true&lt;/code&gt; when &lt;a href=&quot;qguiapplication#commitDataRequest&quot;&gt;commitDataRequest&lt;/a&gt;() and &lt;a href=&quot;qguiapplication#saveStateRequest&quot;&gt;saveStateRequest&lt;/a&gt;() are emitted, but also when the windows are closed afterwards by session management.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b925fb259e2cede53acac94ffa9e35c06afc8e" translate="yes" xml:space="preserve">
          <source>This is a an invalid url if no document is displayed or if the source is unknown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321cf5fa5966f6bafedf3057285438c080129fea" translate="yes" xml:space="preserve">
          <source>This is a bit longer to type, but it provides exactly the same benefits as the first version of the code, and is faster than converting the Latin-1 strings using &lt;a href=&quot;qstring#fromLatin1&quot;&gt;QString::fromLatin1&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d370f20f612d7ec143ecea260f9d10b7be5423e" translate="yes" xml:space="preserve">
          <source>This is a blocking function call. Its use is disadvised in a single-threaded GUI application, since the whole application will stop responding until the function returns. waitForNewConnection() is mostly useful when there is no event loop available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ec62f7931b8c1fee20335ca1772c3bd39e5c9d" translate="yes" xml:space="preserve">
          <source>This is a blocking function call. Its use is ill-advised in a single-threaded GUI application, since the whole application will stop responding until the function returns. waitForNewConnection() is mostly useful when there is no event loop available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b23c7bdf847549840fbd61876ac0a7950560452" translate="yes" xml:space="preserve">
          <source>This is a boolean value indicating if the extension is critical to correctly interpreting the certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef758487496ecf25783a8a332c86d1edff24d5e" translate="yes" xml:space="preserve">
          <source>This is a complete, alphabetized list of the QDoc commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac52afc2bf1b964f9cad1435d7aca8a6ee1ed584" translate="yes" xml:space="preserve">
          <source>This is a convenience for specifying a generic transition for items that are displaced by add, move or remove operations, without having to specify the individual &lt;a href=&quot;qml-qtquick-gridview#addDisplaced-prop&quot;&gt;addDisplaced&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-gridview#moveDisplaced-prop&quot;&gt;moveDisplaced&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-gridview#removeDisplaced-prop&quot;&gt;removeDisplaced&lt;/a&gt; properties. For example, here is a view that specifies a displaced transition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85fe2bcc175a712078018949e1872fe37250669d" translate="yes" xml:space="preserve">
          <source>This is a convenience for specifying the generic transition to be applied to any items that are displaced by an add, move or remove operation, without having to specify the individual &lt;a href=&quot;qml-qtquick-listview#addDisplaced-prop&quot;&gt;addDisplaced&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-listview#moveDisplaced-prop&quot;&gt;moveDisplaced&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-listview#removeDisplaced-prop&quot;&gt;removeDisplaced&lt;/a&gt; properties. For example, here is a view that specifies a displaced transition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb83f4bc3040a4edb1b4e3b606f99e1b38c861e" translate="yes" xml:space="preserve">
          <source>This is a convenience function and is the same as calling &lt;code&gt;setOrientation(QPrinter::Landscape)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20083c24f13f9a222e02160b8ab994d962526019" translate="yes" xml:space="preserve">
          <source>This is a convenience function and is the same as calling &lt;code&gt;setOrientation(QPrinter::Portrait)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1a8d3cbbd8499802ea3158cebd131171afbf0a" translate="yes" xml:space="preserve">
          <source>This is a convenience function and is the same as calling &lt;code&gt;setViewMode(QPrintPreviewWidget::AllPagesView)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b925f4078bf936fc5ff0c5fab639d54d839c9f80" translate="yes" xml:space="preserve">
          <source>This is a convenience function and is the same as calling &lt;code&gt;setViewMode(QPrintPreviewWidget::FacingPagesView)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc9f340e2bc8ead3269794d89430c7e9858b7a4" translate="yes" xml:space="preserve">
          <source>This is a convenience function and is the same as calling &lt;code&gt;setViewMode(QPrintPreviewWidget::SinglePageView)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c68f07cbd75da951d3ede99b29d4fcb5187178a" translate="yes" xml:space="preserve">
          <source>This is a convenience function and is the same as calling &lt;code&gt;setZoomMode(QPrintPreviewWidget::FitInView)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c30dd451bc1a85a53fa373529fc1a9cb97d8570" translate="yes" xml:space="preserve">
          <source>This is a convenience function and is the same as calling &lt;code&gt;setZoomMode(QPrintPreviewWidget::FitToWidth)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de43c4f5f084232b368b8b218315e253a76d926f" translate="yes" xml:space="preserve">
          <source>This is a convenience function equivalent to &lt;a href=&quot;qwebenginepage#setContent&quot;&gt;setContent&lt;/a&gt;(html, &quot;text/html&quot;, baseUrl).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13dc5ad9520f59202f54f610abc0b3b9f9356c59" translate="yes" xml:space="preserve">
          <source>This is a convenience function equivalent to &lt;code&gt;setContent(html, &quot;text/html;charset=UTF-8&quot;, baseUrl)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7560e0f1b7cf2855f9e12eb9fdfd2b33c9ff6ad" translate="yes" xml:space="preserve">
          <source>This is a convenience function equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5221a69be70d9c389c506f6beb47aff4f443fb4d" translate="yes" xml:space="preserve">
          <source>This is a convenience function for the &lt;a href=&quot;qaction#checked-prop&quot;&gt;checked&lt;/a&gt; property. Connect to it to change the checked state to its opposite state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a8cc4c7298fb4e1f602110b717f2975dfaba41" translate="yes" xml:space="preserve">
          <source>This is a convenience function for the &lt;a href=&quot;qaction#enabled-prop&quot;&gt;enabled&lt;/a&gt; property, that is useful for signals--slots connections. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9793dde20564463eddf569a8aba5c67fda980c" translate="yes" xml:space="preserve">
          <source>This is a convenience function for the &lt;a href=&quot;qactiongroup#enabled-prop&quot;&gt;enabled&lt;/a&gt; property, that is useful for signals--slots connections. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b92593ba19923afd587476a747812e50a73091a" translate="yes" xml:space="preserve">
          <source>This is a convenience function for when you're only concerned with parsing XML elements. The &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtxml-streambookmarks-example.html&quot;&gt;QXmlStream Bookmarks Example&lt;/a&gt; makes extensive use of this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="235dbfa2dd677cda8f8c41de5061bc13064ddb06" translate="yes" xml:space="preserve">
          <source>This is a convenience function that calls &lt;a href=&quot;qabstractitemmodel#removeRows&quot;&gt;removeRows&lt;/a&gt;(). The &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; implementation of &lt;a href=&quot;qabstractitemmodel#removeRows&quot;&gt;removeRows&lt;/a&gt;() does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7244c4f43d3b0f62b610a6c3bb5a2890117f27a" translate="yes" xml:space="preserve">
          <source>This is a convenience function that can be used directly instead of resolving the function pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc64f8dcd696910dfdf90d41b32a3ccfb50f60a4" translate="yes" xml:space="preserve">
          <source>This is a convenience function that can be used directly instead of resolving the function pointer. Returns true if Windows 10 operates in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070282c46befeee9128265ae81035b55b668c21f" translate="yes" xml:space="preserve">
          <source>This is a convenience function that returns &lt;a href=&quot;qsqlerror#databaseText&quot;&gt;databaseText&lt;/a&gt;() and &lt;a href=&quot;qsqlerror#driverText&quot;&gt;driverText&lt;/a&gt;() concatenated into a single string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5605a526a7a5eba74aa17b1bd63ee7fd7461c42e" translate="yes" xml:space="preserve">
          <source>This is a convenience function that returns a &lt;a href=&quot;qpainter-pixmapfragment&quot;&gt;QPainter::PixmapFragment&lt;/a&gt; that is initialized with the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8b061b5847f8305fe6276ad459461322cb9878" translate="yes" xml:space="preserve">
          <source>This is a convenience function which checks if the &lt;a href=&quot;qabstractvideobuffer#MapMode-enum&quot;&gt;MapMode&lt;/a&gt; contains the &lt;a href=&quot;qabstractvideobuffer#MapMode-enum&quot;&gt;QAbstractVideoBuffer::WriteOnly&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af38e0d1e0d8db2ee8028c0eed3df4f4f98cec6c" translate="yes" xml:space="preserve">
          <source>This is a convenience function which checks if the &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;OpenMode&lt;/a&gt; of the device contains the &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;ReadOnly&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409b531d8f749644c5a8f9d1301ae1cf4d1c53c2" translate="yes" xml:space="preserve">
          <source>This is a convenience function which checks if the &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;OpenMode&lt;/a&gt; of the device contains the &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;WriteOnly&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5daa58a71c43d8bcd92da17d9b979ab91df7721e" translate="yes" xml:space="preserve">
          <source>This is a convenience function which checks that the &lt;a href=&quot;qabstractvideobuffer#MapMode-enum&quot;&gt;MapMode&lt;/a&gt; of the frame is not equal to &lt;a href=&quot;qabstractvideobuffer#MapMode-enum&quot;&gt;QAbstractVideoBuffer::NotMapped&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6c4b79a6b8dabdf93de33bae20ecbd853ec77f" translate="yes" xml:space="preserve">
          <source>This is a convenience function which retrieves unique frame rate ranges from the supported settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a25d2c1f4df5d397f9270305461419a9eae2db1" translate="yes" xml:space="preserve">
          <source>This is a convenience function which retrieves unique pixel formats from the supported settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44f28371df21aa0e50d5e48def63febd0bec51f" translate="yes" xml:space="preserve">
          <source>This is a convenience function which retrieves unique resolutions from the supported settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baaa8f24aa2de9a2ff93f0108169403f422ec6cc" translate="yes" xml:space="preserve">
          <source>This is a convenience function, since anchoring corners can be expressed as anchoring two edges. For instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf23616caad6438ca2a6b5317281bef5238f246" translate="yes" xml:space="preserve">
          <source>This is a convenience function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c82f6c044ecd830a84c27b42952533220798361" translate="yes" xml:space="preserve">
          <source>This is a convenience function. It is equivalent to calling &lt;a href=&quot;qbluetoothserviceinfo#setAttribute&quot;&gt;setAttribute&lt;/a&gt;(&lt;a href=&quot;qbluetoothserviceinfo#AttributeId-enum&quot;&gt;QBluetoothServiceInfo::ServiceAvailability&lt;/a&gt;, availability).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd000e49c9b38685164f523974ef525a18bdfc6a" translate="yes" xml:space="preserve">
          <source>This is a convenience function. It is equivalent to calling &lt;a href=&quot;qbluetoothserviceinfo#setAttribute&quot;&gt;setAttribute&lt;/a&gt;(&lt;a href=&quot;qbluetoothserviceinfo#AttributeId-enum&quot;&gt;QBluetoothServiceInfo::ServiceDescription&lt;/a&gt;, description).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3def19bc0b8addd05382c121650ab9201d55b9ed" translate="yes" xml:space="preserve">
          <source>This is a convenience function. It is equivalent to calling &lt;a href=&quot;qbluetoothserviceinfo#setAttribute&quot;&gt;setAttribute&lt;/a&gt;(&lt;a href=&quot;qbluetoothserviceinfo#AttributeId-enum&quot;&gt;QBluetoothServiceInfo::ServiceId&lt;/a&gt;, uuid).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da168d71d4cfa504ca9b1ee137bf88a639fcc2e" translate="yes" xml:space="preserve">
          <source>This is a convenience function. It is equivalent to calling &lt;a href=&quot;qbluetoothserviceinfo#setAttribute&quot;&gt;setAttribute&lt;/a&gt;(&lt;a href=&quot;qbluetoothserviceinfo#AttributeId-enum&quot;&gt;QBluetoothServiceInfo::ServiceName&lt;/a&gt;, name).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1868d61491c5d034e2345a4f7aacd65ad5a50fd3" translate="yes" xml:space="preserve">
          <source>This is a convenience function. It is equivalent to calling &lt;a href=&quot;qbluetoothserviceinfo#setAttribute&quot;&gt;setAttribute&lt;/a&gt;(&lt;a href=&quot;qbluetoothserviceinfo#AttributeId-enum&quot;&gt;QBluetoothServiceInfo::ServiceProvider&lt;/a&gt;, provider).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab43fccde4d88688a60dd8e7cac3084cf3449627" translate="yes" xml:space="preserve">
          <source>This is a convenience function. It is equivalent to calling attribute(&lt;a href=&quot;qbluetoothserviceinfo#AttributeId-enum&quot;&gt;QBluetoothServiceInfo::ServiceAvailability&lt;/a&gt;).toUInt().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de9ad7d684bbabd6272dbd936404c4f22504b84" translate="yes" xml:space="preserve">
          <source>This is a convenience function. It is equivalent to calling attribute(&lt;a href=&quot;qbluetoothserviceinfo#AttributeId-enum&quot;&gt;QBluetoothServiceInfo::ServiceClassIds&lt;/a&gt;).value&amp;lt;&lt;a href=&quot;qbluetoothserviceinfo-sequence&quot;&gt;QBluetoothServiceInfo::Sequence&lt;/a&gt;&amp;gt;() and subsequently iterating over its &lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99314db0fef6486226ec134ad55e8ea0ad355d85" translate="yes" xml:space="preserve">
          <source>This is a convenience function. It is equivalent to calling attribute(&lt;a href=&quot;qbluetoothserviceinfo#AttributeId-enum&quot;&gt;QBluetoothServiceInfo::ServiceDescription&lt;/a&gt;).toString().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9643a1bcd0ae6f099bf288ef3b28559ef56db9c6" translate="yes" xml:space="preserve">
          <source>This is a convenience function. It is equivalent to calling attribute(&lt;a href=&quot;qbluetoothserviceinfo#AttributeId-enum&quot;&gt;QBluetoothServiceInfo::ServiceId&lt;/a&gt;).value&amp;lt;&lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt;&amp;gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d349a53994b7ade18d2457acafc6af026fd78b" translate="yes" xml:space="preserve">
          <source>This is a convenience function. It is equivalent to calling attribute(&lt;a href=&quot;qbluetoothserviceinfo#AttributeId-enum&quot;&gt;QBluetoothServiceInfo::ServiceName&lt;/a&gt;).toString().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc92f4c449f2285ef71681512d72654740af256d" translate="yes" xml:space="preserve">
          <source>This is a convenience function. It is equivalent to calling attribute(&lt;a href=&quot;qbluetoothserviceinfo#AttributeId-enum&quot;&gt;QBluetoothServiceInfo::ServiceProvider&lt;/a&gt;).toString().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56f156a4bf3c33e10361cf6d3ba4bdfb986f7d4a" translate="yes" xml:space="preserve">
          <source>This is a convenience function. Returns the protocol/service multiplexer for services which support the L2CAP protocol, otherwise returns -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d756e334f2b3eaec49ee74e6d075ef999861036" translate="yes" xml:space="preserve">
          <source>This is a convenience function. Returns the server channel for services which support the RFCOMM protocol, otherwise returns -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5f4d72ceb9a4c2db2e4cde9a52fb45089355cb" translate="yes" xml:space="preserve">
          <source>This is a convenience function; the member variables can also be initialized manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="febd4e2fe4ae23d5c6126077a88d34144b79391f" translate="yes" xml:space="preserve">
          <source>This is a convenience method combining &lt;a href=&quot;qtransform#quadToSquare&quot;&gt;quadToSquare&lt;/a&gt;() and &lt;a href=&quot;qtransform#squareToQuad&quot;&gt;squareToQuad&lt;/a&gt;() methods. It allows the input quad to be transformed into any other quad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad0d7469c8b3decde3f8e81e4fcde25c0916d8f3" translate="yes" xml:space="preserve">
          <source>This is a convenience method that helps out plugins doing dynamic registration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ceb468023294c49539224a30c974f5053a909b" translate="yes" xml:space="preserve">
          <source>This is a convenience method, and is equivalent to calling &lt;code&gt;stop()&lt;/code&gt; and then &lt;code&gt;start()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689eb8956090e2d2675857b023c0bccae08e0fc4" translate="yes" xml:space="preserve">
          <source>This is a convenience property equivalent to &lt;code&gt;pressed &amp;amp;&amp;amp; containsMouse&lt;/code&gt;, i.e. it holds whether any of the &lt;a href=&quot;qml-qtquick-mousearea#acceptedButtons-prop&quot;&gt;acceptedButtons&lt;/a&gt; are currently pressed and the mouse is currently within the &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01855db61cc7218ce92df886fbf47bd2d9a15292" translate="yes" xml:space="preserve">
          <source>This is a convenience property for modifying the color of the brush.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f4f64624ea44344e5d1aa57e095c9146266342a" translate="yes" xml:space="preserve">
          <source>This is a convenience property for modifying the color of the pen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93590d7ac824d6c327538b8e24f6d6ccc44371fe" translate="yes" xml:space="preserve">
          <source>This is a convenience property that's simply the average of the &lt;a href=&quot;qscreen#logicalDotsPerInchX-prop&quot;&gt;logicalDotsPerInchX&lt;/a&gt; and &lt;a href=&quot;qscreen#logicalDotsPerInchY-prop&quot;&gt;logicalDotsPerInchY&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0805a6ba551c1047a79c351a6e2a2d0b31632676" translate="yes" xml:space="preserve">
          <source>This is a convenience property that's simply the average of the &lt;a href=&quot;qscreen#physicalDotsPerInchX-prop&quot;&gt;physicalDotsPerInchX&lt;/a&gt; and &lt;a href=&quot;qscreen#physicalDotsPerInchY-prop&quot;&gt;physicalDotsPerInchY&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce1c902180db46f25ea8c940e7e45a6ff6abe99" translate="yes" xml:space="preserve">
          <source>This is a convenience slot that calls activate(Hover).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af53693debfce6ac3f75e46e6ed96577830a1f28" translate="yes" xml:space="preserve">
          <source>This is a convenience slot that calls activate(Trigger).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c39a378db852a3a2bbfc0aa842cdbd6d258d38" translate="yes" xml:space="preserve">
          <source>This is a convenience static function that returns a file selected by the user. The file does not have to exist. If the user presses Cancel, it returns an empty url.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16e9ca94b7398529684a04c579084d9e9ead6a9" translate="yes" xml:space="preserve">
          <source>This is a convenience static function that returns an existing file selected by the user. If the user presses Cancel, it returns a null string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66bf4445926f46cd9ca254201c71b4f5d54d831c" translate="yes" xml:space="preserve">
          <source>This is a convenience static function that returns an existing file selected by the user. If the user presses Cancel, it returns an empty url.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0caa5307ed15b74a652c16dacd75613d3d2a38c3" translate="yes" xml:space="preserve">
          <source>This is a convenience static function that will return a file name selected by the user. The file does not have to exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="575c710a4ff761259a11d0ec01658125eb0d1c37" translate="yes" xml:space="preserve">
          <source>This is a convenience static function that will return an existing directory selected by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8f0ccc372075756763c64c149b8d7cbcc459cc5" translate="yes" xml:space="preserve">
          <source>This is a convenience static function that will return an existing directory selected by the user. If the user presses Cancel, it returns an empty url.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c77a2a7b71a7cd46139b101b22e13750ccae1d6a" translate="yes" xml:space="preserve">
          <source>This is a convenience static function that will return one or more existing files selected by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368b6341d0c0eecf7559fdeb22ba7ece87076f34" translate="yes" xml:space="preserve">
          <source>This is a convenience static function that will return one or more existing files selected by the user. If the user presses Cancel, it returns an empty list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e7ed67b2a52bf5fd87f0900ceea5adef433dd4" translate="yes" xml:space="preserve">
          <source>This is a convenience static function that will return the content of a file selected by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac95dd8f1f58142353b485ff74f0d927bf695774" translate="yes" xml:space="preserve">
          <source>This is a convenience subclass of &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; that provides a nice interface for multi-valued hashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3e1c073849f76f744a4f02bba7c61681e53d78" translate="yes" xml:space="preserve">
          <source>This is a convenience subclass of &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; that provides &quot;first in, first out&quot; (FIFO) semantics. It adds the following functions to those already present in &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;: &lt;a href=&quot;qqueue#enqueue&quot;&gt;enqueue()&lt;/a&gt;, &lt;a href=&quot;qqueue#dequeue&quot;&gt;dequeue()&lt;/a&gt;, and &lt;a href=&quot;qqueue#head&quot;&gt;head()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a448cbb2e12ffe27821bbdfc65035ea2cb6a58" translate="yes" xml:space="preserve">
          <source>This is a convenience subclass of &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; that provides a nice interface for multi-valued maps, i.e. maps where one key can be associated with multiple values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59dde4e05c453c3e6d3968bc11c36a1f50184986" translate="yes" xml:space="preserve">
          <source>This is a convenience subclass of &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; which will automatically load and display a QML scene when given the URL of the main source file. Alternatively, you can instantiate your own objects using &lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent&lt;/a&gt; and place them in a manually setup &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="128fa926da02808245e4afc1a7270c3bf4b75f04" translate="yes" xml:space="preserve">
          <source>This is a convenience subclass of &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; that provides &quot;last in, first out&quot; (LIFO) semantics. It adds the following functions to those already present in &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;: &lt;a href=&quot;qstack#push&quot;&gt;push()&lt;/a&gt;, &lt;a href=&quot;qstack#pop&quot;&gt;pop()&lt;/a&gt;, and &lt;a href=&quot;qstack#top&quot;&gt;top()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba35aa8eca05551a1d2a6ba3f860dc721556264c" translate="yes" xml:space="preserve">
          <source>This is a convenience to the equivalent signals in &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; for &quot;one shot&quot; tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5786477c43da6017e7b13411566a2323a30ccf33" translate="yes" xml:space="preserve">
          <source>This is a convenience version of select operating on &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; objects. If the scheme is not file or qrc,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77541380afc5f293e2b43e6e4c53dda00dd3fd2a" translate="yes" xml:space="preserve">
          <source>This is a convenience wrapper for &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; which will automatically load and display a QML scene when given the URL of the main source file. Alternatively, you can instantiate your own objects using &lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent&lt;/a&gt; and place them in a manually set up &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9801de81927f42c20ca02fc097f419000d9050e" translate="yes" xml:space="preserve">
          <source>This is a fast, lightweight, and low-level class used by Qt internally. We recommend using the higher-level &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; class rather than this class if you want to use timers in your applications. Note that this timer is a repeating timer that will send subsequent timer events unless the &lt;a href=&quot;qbasictimer#stop&quot;&gt;stop&lt;/a&gt;() function is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6fed7fb1a3ce1c2d64df0acd3abf9f2f2dca506" translate="yes" xml:space="preserve">
          <source>This is a flag that can be combined with any one of the above connection types, using a bitwise OR. When Qt::UniqueConnection is set, &lt;a href=&quot;qobject#connect&quot;&gt;QObject::connect&lt;/a&gt;() will fail if the connection already exists (i.e. if the same signal is already connected to the same slot for the same pair of objects). This flag was introduced in Qt 4.6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb84ab3e31e1eec57b6f0ccce446d5733e076987" translate="yes" xml:space="preserve">
          <source>This is a generic reply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505ce5826a90e7fb665b186e44a4923283042586" translate="yes" xml:space="preserve">
          <source>This is a hint to the window manager in case it needs to display additional content like popups, dialogs, status bars, or similar in relation to the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39cc7e6546ccec96ee3b985423c9428a1cf4231" translate="yes" xml:space="preserve">
          <source>This is a hint to the window manager that this window is a dialog or pop-up on behalf of the transient parent. It usually means that the transient window will be centered over its transient parent when it is initially shown, that minimizing the parent window will also minimize the transient window, and so on; however results vary somewhat from platform to platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93d55b28c220e170831f23a03301c3675e176d5" translate="yes" xml:space="preserve">
          <source>This is a hint to the window manager to prevent resizing above the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad1c3ac115a4b0bed003298c814d079148290cf" translate="yes" xml:space="preserve">
          <source>This is a hint to the window manager to prevent resizing above the specified width and height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd9146a9cf580ad2a2f84ee68423b7933a60976" translate="yes" xml:space="preserve">
          <source>This is a hint to the window manager to prevent resizing below the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634672e3162ad0ca3f35109a42e62b27d0e864ea" translate="yes" xml:space="preserve">
          <source>This is a hint to the window manager to prevent resizing below the specified width and height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e97c46c595f7ff8bfbd246011c25ddb4fd4d6232" translate="yes" xml:space="preserve">
          <source>This is a key sequence with an optional combination of Shift, Ctrl, and Alt. The key sequence may be supplied in a number of ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df7951185037705a88864254480a3275b9826e4" translate="yes" xml:space="preserve">
          <source>This is a list of the data rates that the sensor supports. Measured in Hertz.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43689f42183685862e71aa42ee7218968b2fcb95" translate="yes" xml:space="preserve">
          <source>This is a low-level function for explicitly managing the memory used to store the type. Consider calling &lt;a href=&quot;qmetatype#create&quot;&gt;create&lt;/a&gt;() if you don't need this level of control (that is, use &quot;new&quot; rather than &quot;placement new&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2223ede3b139bc34d9810801f1668e586dcabbc1" translate="yes" xml:space="preserve">
          <source>This is a low-level method that operates directly on the database and should not be called directly. Use &lt;a href=&quot;qabstractitemmodel#insertRow&quot;&gt;insertRow&lt;/a&gt;() and &lt;a href=&quot;qsqltablemodel#setData&quot;&gt;setData&lt;/a&gt;() to insert values. The model will decide depending on its edit strategy when to modify the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71b214637764d45409bee394f9919a59b63f188" translate="yes" xml:space="preserve">
          <source>This is a low-level method that operates directly on the database and should not be called directly. Use &lt;a href=&quot;qabstractitemmodel#removeRow&quot;&gt;removeRow&lt;/a&gt;() or &lt;a href=&quot;qsqltablemodel#removeRows&quot;&gt;removeRows&lt;/a&gt;() to delete values. The model will decide depending on its edit strategy when to modify the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68cffd94393317a5b06227599075bc71782239f" translate="yes" xml:space="preserve">
          <source>This is a low-level method that operates directly on the database and should not be called directly. Use &lt;a href=&quot;qsqltablemodel#setData&quot;&gt;setData&lt;/a&gt;() to update values. The model will decide depending on its edit strategy when to modify the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43e8867c6eff3700385c3ad7f44ff5483016686" translate="yes" xml:space="preserve">
          <source>This is a overload function. Returns a CanvasPattern object that uses the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f905311b3e2f3821ae0eed5ccb5ef471136b9f8c" translate="yes" xml:space="preserve">
          <source>This is a platform-dependent function, and filesystem names can vary between different operating systems. For example, on Windows filesystems they can be named &lt;code&gt;NTFS&lt;/code&gt;, and on Linux they can be named &lt;code&gt;ntfs-3g&lt;/code&gt; or &lt;code&gt;fuseblk&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad493656b96f766710f986739116add10860d95" translate="yes" xml:space="preserve">
          <source>This is a predefined specialization for a signed stereo 16 bit sample. Each channel is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eade26e1c3440828d7418e95ea569cf9a415a32" translate="yes" xml:space="preserve">
          <source>This is a predefined specialization for a signed stereo 8 bit sample. Each channel is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96ce0bf2d26bac4635ca27f9298f3723fa7a540" translate="yes" xml:space="preserve">
          <source>This is a predefined specialization for an 32 bit float sample. Each channel is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656401133adf2d836ed3f5e752cfd1e347b7a31b" translate="yes" xml:space="preserve">
          <source>This is a predefined specialization for an unsigned stereo 16 bit sample. Each channel is an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7327a2d87ce08300dab172a3f3da682cde018868" translate="yes" xml:space="preserve">
          <source>This is a predefined specialization for an unsigned stereo 8 bit sample. Each channel is an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f762f4e6a0f0a38770a70279d16a0862bee9c3d" translate="yes" xml:space="preserve">
          <source>This is a read-only property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b87695420eb4dca254c5795a9596c3f72ed254" translate="yes" xml:space="preserve">
          <source>This is a reference to the first created object, intended as a convenience for the case where only one object has been created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec157934a1db82b6203fc23a98aae86061e890b" translate="yes" xml:space="preserve">
          <source>This is a reply for a search suggestion operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30525ff37fe7e5101c3fcfe1fc00ec6f21965d54" translate="yes" xml:space="preserve">
          <source>This is a reply for content associated with a place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ae7bcf2a437ebfaf822e72c226ee3a2bd7e21b" translate="yes" xml:space="preserve">
          <source>This is a reply for the place search operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4abde46ab2c3f1159aafa2b7365d91bd9e2126" translate="yes" xml:space="preserve">
          <source>This is a reply for the retrieval of place details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3986c38e4d69c92a018f12ac14b1ca62d27e4a83" translate="yes" xml:space="preserve">
          <source>This is a reply that returns an identifier of a place or category. Typically used for place or category save and remove operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861b0bf8d79a5b19cd1856becaa90bdd978df53d" translate="yes" xml:space="preserve">
          <source>This is a reply that returns places that match those from another provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221985b2d0b9308e07645f8c4b0d34eec1c850b1" translate="yes" xml:space="preserve">
          <source>This is a semaphore that locks the shared memory segment for access by this process and returns &lt;code&gt;true&lt;/code&gt;. If another process has locked the segment, this function blocks until the lock is released. Then it acquires the lock and returns &lt;code&gt;true&lt;/code&gt;. If this function returns &lt;code&gt;false&lt;/code&gt;, it means that you have ignored a false return from &lt;a href=&quot;qsharedmemory#create&quot;&gt;create&lt;/a&gt;() or &lt;a href=&quot;qsharedmemory#attach&quot;&gt;attach&lt;/a&gt;(), that you have set the key with &lt;a href=&quot;qsharedmemory#setNativeKey&quot;&gt;setNativeKey&lt;/a&gt;() or that &lt;a href=&quot;qsystemsemaphore#acquire&quot;&gt;QSystemSemaphore::acquire&lt;/a&gt;() failed due to an unknown system error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8275f302cae76afa7ceaf8d46fb02fb77532e31e" translate="yes" xml:space="preserve">
          <source>This is a short cut for the following actions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11239d004c15f8b5c9bf25ad5c1f25b8fbf73ce" translate="yes" xml:space="preserve">
          <source>This is a simple &quot;Hello world&quot; example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6ebacca826fc5930286675006be063be5d0703" translate="yes" xml:space="preserve">
          <source>This is a slot so it can be connected to a &lt;a href=&quot;qtimer#timeout&quot;&gt;QTimer::timeout&lt;/a&gt;() signal to perform animation. Note however that in the modern OpenGL world it is a much better choice to rely on synchronization to the vertical refresh rate of the display. See &lt;a href=&quot;qsurfaceformat#setSwapInterval&quot;&gt;setSwapInterval()&lt;/a&gt; on a description of the swap interval. With a swap interval of &lt;code&gt;1&lt;/code&gt;, which is the case on most systems by default, the &lt;a href=&quot;qopenglcontext#swapBuffers&quot;&gt;swapBuffers()&lt;/a&gt; call, that is executed internally by &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; after each repaint, will block and wait for vsync. This means that whenever the swap is done, an update can be scheduled again by calling &lt;a href=&quot;qpaintdevicewindow#update-2&quot;&gt;update&lt;/a&gt;(), without relying on timers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df6c79a6c62faa549b5de3d4323682dfda6fc85" translate="yes" xml:space="preserve">
          <source>This is a small positive integer, suitable for use with C library functions such as &lt;code&gt;fdopen()&lt;/code&gt; and &lt;code&gt;fcntl()&lt;/code&gt;. On systems that use file descriptors for sockets (i.e. Unix systems, but not Windows) the handle can be used with &lt;a href=&quot;qsocketnotifier&quot;&gt;QSocketNotifier&lt;/a&gt; as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04319df64e74b4a48e4aa712ceb16e966e269a3" translate="yes" xml:space="preserve">
          <source>This is a string list of the arguments the executable was invoked with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5840051f771c230deaa6e7c1ad526cef3ec00f78" translate="yes" xml:space="preserve">
          <source>This is a synonym for &lt;a href=&quot;qdtlsclientverifier-generatorparameters&quot;&gt;QDtlsClientVerifier::GeneratorParameters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00746f2b58900a4ca8b7c6736e8f43f718931cf8" translate="yes" xml:space="preserve">
          <source>This is a synonym for &lt;a href=&quot;qtglobal#Q_OS_WIN&quot;&gt;Q_OS_WIN&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30aebe567918489ff8ca40cfb7926dc9327d44f" translate="yes" xml:space="preserve">
          <source>This is a typedef for &lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;qreal, &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69fa883e238121fd591fa0ac08b95a50d19e60f5" translate="yes" xml:space="preserve">
          <source>This is a typedef for &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qvariantanimation#KeyValue-typedef&quot;&gt;KeyValue&lt;/a&gt;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01583948f45e8b1e5fcd6555bd93f282177fd028" translate="yes" xml:space="preserve">
          <source>This is a typedef for &lt;code&gt;void (*)()&lt;/code&gt;, a pointer to a function that takes no arguments and returns void.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0c8707a9c1424799555c05fc46e84af6c6f0bb" translate="yes" xml:space="preserve">
          <source>This is a typedef for a &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt;&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c459244f1a5a2b025d1cf36cd4afc2e343d4946a" translate="yes" xml:space="preserve">
          <source>This is a typedef for a pointer to a function with the following signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151a92cbf82416499b579d16123e4689b37b9fa1" translate="yes" xml:space="preserve">
          <source>This is a unique ID to identify the camera and may not be human-readable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a877508d3b42d25149ade65c2a0c67cddcd3109" translate="yes" xml:space="preserve">
          <source>This is a unique id to identify the printer and may not be human-readable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9050e7dd3446141d1653f2f3b684c7aeb17c149" translate="yes" xml:space="preserve">
          <source>This is a useful, and quick to calculate, approximation to the true length:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f70d60c3bc116bc1e106c1f04cd61fa8fb3db2" translate="yes" xml:space="preserve">
          <source>This is a utility property. It sets the translation component of the general texture transform matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb76a1f79d29cb4bd8d0dffac8e63c2cab6c97b" translate="yes" xml:space="preserve">
          <source>This is a value interval, not a pixel interval. If it is 0, the slider will choose between &lt;a href=&quot;qabstractslider#singleStep-prop&quot;&gt;singleStep&lt;/a&gt; and &lt;a href=&quot;qabstractslider#pageStep-prop&quot;&gt;pageStep&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54be08f1cefddcf2d47f34d8f6aa69f1d89ca9c2" translate="yes" xml:space="preserve">
          <source>This is a velocity vector pointing in the direction of movement, in logical pixels per second. It has x and y components, at least one of which will be nonzero when this point is in motion. It holds the average recent velocity: how fast and in which direction the event point has been moving recently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687fa9292a144de9407e69fb84f1d729c1be1324" translate="yes" xml:space="preserve">
          <source>This is a write-once property. Once the Navigator has a &lt;a href=&quot;qml-qtpositioning-positionsource&quot;&gt;PositionSource&lt;/a&gt; associated with it, any attempted modifications of the positionSource property will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d291253023a6385fdf5b6a4c2156f8d8426099d5" translate="yes" xml:space="preserve">
          <source>This is a write-once property. Once the Navigator has a Map associated with it, any attempted modifications of the map property will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e3ce4fb4236acbd344f3345065d5cda3ebb11d" translate="yes" xml:space="preserve">
          <source>This is a write-once property. Once the Navigator has a plugin associated with it, any attempted modifications of the plugin property will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa21902656e4481088e1e71aedc5fba4a60df3b3" translate="yes" xml:space="preserve">
          <source>This is a write-once property. Once the map has a plugin associated with it, any attempted modifications of the plugin will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b99fc75f7ff031e0e6bc51da897d435b24bb03" translate="yes" xml:space="preserve">
          <source>This is achieved by creating a streaming operator for the type, which is often defined in the header file for that type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b532130067b781fd91e7725fae512faa9234f4" translate="yes" xml:space="preserve">
          <source>This is achieved more efficiently using anchors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf686a5f769b22583c8b4c225a47ad0b31718ae" translate="yes" xml:space="preserve">
          <source>This is all you need to do to actually build custom targets. Of course, you may want to tie one of these targets to the &lt;a href=&quot;qmake-variable-reference#target&quot;&gt;qmake build target&lt;/a&gt;. To do this, you simply need to include your Makefile target in the list of &lt;a href=&quot;qmake-variable-reference#pre-targetdeps&quot;&gt;PRE_TARGETDEPS&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a03671faaf92955dfcb0f6de064436392d279a2" translate="yes" xml:space="preserve">
          <source>This is also emitted when dragging the mouse to another date while it is pressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564439df15504ab8915eebb5aaafa04bffaf4f87" translate="yes" xml:space="preserve">
          <source>This is also more efficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b081c908958246618aab7056d9b37c7c01b2b93d" translate="yes" xml:space="preserve">
          <source>This is also the place where size-dependent calculations (for example, the projection matrix) should be made since this function is called effectively on every resize.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
