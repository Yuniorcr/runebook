<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="3810715d0ae6640e0ac248a9e49f68be39a738b9" translate="yes" xml:space="preserve">
          <source>There are three essential materials for generating documentation with qdoc:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94de4612bdb1e452f7e5777fc406280df5d92d35" translate="yes" xml:space="preserve">
          <source>There are three general ways to use &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; when reading text files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5775c521db22b64ef7f8d572ef5625a078a4b82b" translate="yes" xml:space="preserve">
          <source>There are three primary navigation operations in &lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt;: &lt;a href=&quot;qml-qtquick-controls-stackview#push-method&quot;&gt;push()&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls-stackview#pop-method&quot;&gt;pop()&lt;/a&gt;, and replace (replace by specifying argument &lt;code&gt;replace&lt;/code&gt; to &lt;a href=&quot;qml-qtquick-controls-stackview#push-method&quot;&gt;push()&lt;/a&gt;). These correspond to classic stack operations where &quot;push&quot; adds an item to the top of a stack, &quot;pop&quot; removes the top item from the stack, and &quot;replace&quot; is like a pop followed by a push, in that it replaces the topmost item on the stack with a new item (but the applied transtition might be different). The topmost item in the stack corresponds to the one that is &lt;a href=&quot;qml-qtquick-controls-stackview#currentItem-prop&quot;&gt;currently&lt;/a&gt; visible on the screen. That means that &quot;push&quot; is the logical equivalent of navigating forward or deeper into the application, &quot;pop&quot; is the equivalent of navigating back, and &quot;replace&quot; is the equivalent of replacing the current item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04e8dfffdf88223423c8812f71f3aa039a44cee" translate="yes" xml:space="preserve">
          <source>There are three render loop variants available: &lt;code&gt;basic&lt;/code&gt;, &lt;code&gt;windows&lt;/code&gt;, and &lt;code&gt;threaded&lt;/code&gt;. Out of these, &lt;code&gt;basic&lt;/code&gt; and &lt;code&gt;windows&lt;/code&gt; are single-threaded, while &lt;code&gt;threaded&lt;/code&gt; performs scene graph rendering on a dedicated thread. Qt attempts to choose a suitable loop based on the platform and possibly the graphics drivers in use. When this is not satisfactory, or for testing purposes, the environment variable &lt;code&gt;QSG_RENDER_LOOP&lt;/code&gt; can be used to force the usage of a given loop. To verify which render loop is in use, enable the &lt;code&gt;qt.scenegraph.general&lt;/code&gt;&lt;a href=&quot;qloggingcategory&quot;&gt;logging category&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d33dc5a3e51e1ef48c544cba977eb7bc683f3b2" translate="yes" xml:space="preserve">
          <source>There are three types of socket notifiers: read, write, and exception. The type is described by the &lt;a href=&quot;qsocketnotifier#Type-enum&quot;&gt;Type&lt;/a&gt; enum, and must be specified when constructing the socket notifier. After construction it can be determined using the &lt;a href=&quot;qsocketnotifier#type&quot;&gt;type&lt;/a&gt;() function. Note that if you need to monitor both reads and writes for the same file descriptor, you must create two socket notifiers. Note also that it is not possible to install two socket notifiers of the same type (&lt;a href=&quot;qsocketnotifier#Type-enum&quot;&gt;Read&lt;/a&gt;, &lt;a href=&quot;qsocketnotifier#Type-enum&quot;&gt;Write&lt;/a&gt;, &lt;a href=&quot;qsocketnotifier#Type-enum&quot;&gt;Exception&lt;/a&gt;) on the same socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2373a12a3d073e1dbbdb5fadc7bd8fa90cb0dbd" translate="yes" xml:space="preserve">
          <source>There are three ways to create a &lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38de1e7531e8ed5ba28b1e2ea9bf90cf39a0a3cb" translate="yes" xml:space="preserve">
          <source>There are two Qt APIs that can be used to render content into a window, &lt;a href=&quot;qbackingstore&quot;&gt;QBackingStore&lt;/a&gt; for rendering with a &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; and flushing the contents to a window with type &lt;a href=&quot;qsurface#SurfaceType-enum&quot;&gt;QSurface::RasterSurface&lt;/a&gt;, and &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; for rendering with OpenGL to a window with type &lt;a href=&quot;qsurface#SurfaceType-enum&quot;&gt;QSurface::OpenGLSurface&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8036bb215e3f77e0bc89f0430de6798e4aee23f4" translate="yes" xml:space="preserve">
          <source>There are two approaches to handle this: either write conditional property values based on &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt;.shaderType, or use file selectors. In practice the latter is strongly recommended as it leads to more concise and cleaner application code. The only case it is not suitable is when the source strings are constructed dynamically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5a5cbfa07e08d7c11147f311a3cc7762e0e153" translate="yes" xml:space="preserve">
          <source>There are two color roles related to hyperlinks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="247d7c5e199e7008ae4b9279b6b798254fb2f88e" translate="yes" xml:space="preserve">
          <source>There are two different kinds of JavaScript resources which are supported in QML: code-behind implementation files, and shared (library) files. Both kinds of JavaScript resource may be &lt;a href=&quot;qtqml-javascript-imports#&quot;&gt;imported&lt;/a&gt; by other JavaScript resources, or included in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-modules-topic.html#&quot;&gt;QML modules&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ce3b94cfa083d0d566ec61e76dd20691426e5a" translate="yes" xml:space="preserve">
          <source>There are two exceptions in which detach() must be called explicitly, that is when calling the handle() or the x11PictureHandle() function (only available on X11). Otherwise, any modifications done using system calls, will be performed on the shared data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296dc3a7fe28f01c1127677faae5b5859008ff4f" translate="yes" xml:space="preserve">
          <source>There are two forms of this template function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a621b75167d85809433d3394482865a4bd899ad" translate="yes" xml:space="preserve">
          <source>There are two functions that give information about the actions that must return localized strings: &lt;a href=&quot;qaccessibleactioninterface#localizedActionName&quot;&gt;localizedActionName()&lt;/a&gt; and &lt;a href=&quot;qaccessibleactioninterface#localizedActionDescription&quot;&gt;localizedActionDescription()&lt;/a&gt;. These functions can be used by the client to present the actions to the user. In general, the name should be concise and only consist of a single word, such as &quot;press&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e1261489262d4e030b9c6127aa82184058cfe2" translate="yes" xml:space="preserve">
          <source>There are two item flags that affect how the item's opacity is combined with the parent: &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIgnoresParentOpacity&lt;/a&gt; and &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemDoesntPropagateOpacityToChildren&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5693b903c9958b7342b24992db33125366e3036d" translate="yes" xml:space="preserve">
          <source>There are two kinds of show events: show events caused by the window system (spontaneous), and internal show events. Spontaneous (&lt;a href=&quot;qevent#spontaneous&quot;&gt;QEvent::spontaneous&lt;/a&gt;()) show events are sent just after the window system shows the window; they are also sent when a top-level window is redisplayed after being iconified. Internal show events are delivered just before the widget becomes visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efafb36ff8c62ad2fc09a20df704a5b25bd6f1e4" translate="yes" xml:space="preserve">
          <source>There are two main use-cases for the function: firstly, to apply a property binding imperatively from JavaScript code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aab1700d8f225e032916f4d730f8e7b38fbe748" translate="yes" xml:space="preserve">
          <source>There are two modes in which to write: using the more compact handwriting panel (as shown above), or &lt;a href=&quot;qml-qtquick-virtualkeyboard-handwritinginputpanel&quot;&gt;fullscreen&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3aacb2183b3d116eaa71d12100285107718b0c" translate="yes" xml:space="preserve">
          <source>There are two notable differences to be aware of: First, with Vulkan Y points down the screen in clip space, while OpenGL uses an upwards pointing Y axis. Second, the standard OpenGL projection matrix assume a near and far plane values of -1 and 1, while Vulkan prefers 0 and 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568b71f84a4fbb0f19630850b2147bb18b8dd257" translate="yes" xml:space="preserve">
          <source>There are two occasions where a fetch is done implicitly by another function call: during construction (so that the object starts out with some initial data where available), and during a call to &lt;a href=&quot;qxmlinputsource#next&quot;&gt;next&lt;/a&gt;() (if the data had run out).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5993a1cab49954886a27baf18d98bb0d2e0987" translate="yes" xml:space="preserve">
          <source>There are two platform plugins that are usable on VxWorks: EGLFS and &lt;a href=&quot;#vxworksfb&quot;&gt;VxWorksFB&lt;/a&gt;. The availability of these plugins depends on the configuration of Qt. The default platform plugin is also device-specific. For instance, on many boards &lt;code&gt;eglfs&lt;/code&gt; will be chosen as the default one. If the default is not suitable, the &lt;code&gt;QT_QPA_PLATFORM&lt;/code&gt; environment variable parameter can be used to request another plugin. Alternatively, for quick tests, the &lt;code&gt;-platform&lt;/code&gt; command-line option can be used with the same syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b46fd53f36cc7d567d0d36edae4ffb684eba83" translate="yes" xml:space="preserve">
          <source>There are two possible scenarios: the signal has already been emitted when wait() is called, or the signal has not yet been emitted. The wait() function handles the first scenario by immediately returning if the signal has already occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b819b7d31229b2a3222afa74ccc536eb1ef1e02a" translate="yes" xml:space="preserve">
          <source>There are two signals emitted if the current item of a combobox changes, &lt;a href=&quot;qcombobox#currentIndexChanged&quot;&gt;currentIndexChanged&lt;/a&gt;() and &lt;a href=&quot;qcombobox#activated&quot;&gt;activated&lt;/a&gt;(). &lt;a href=&quot;qcombobox#currentIndexChanged&quot;&gt;currentIndexChanged&lt;/a&gt;() is always emitted regardless if the change was done programmatically or by user interaction, while &lt;a href=&quot;qcombobox#activated&quot;&gt;activated&lt;/a&gt;() is only emitted when the change is caused by user interaction. The &lt;a href=&quot;qcombobox#highlighted&quot;&gt;highlighted&lt;/a&gt;() signal is emitted when the user highlights an item in the combobox popup list. All three signals exist in two versions, one with a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; argument and one with an &lt;code&gt;int&lt;/code&gt; argument. If the user selects or highlights a pixmap, only the &lt;code&gt;int&lt;/code&gt; signals are emitted. Whenever the text of an editable combobox is changed the &lt;a href=&quot;qcombobox#editTextChanged&quot;&gt;editTextChanged&lt;/a&gt;() signal is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff23caebb1a76862a050f2687e5093b534042c4b" translate="yes" xml:space="preserve">
          <source>There are two types of bindings in QML: optimized and non-optimized bindings. It is a good idea to keep binding expressions as simple as possible, since the QML engine makes use of an optimized binding expression evaluator which can evaluate simple binding expressions without needing to switch into a full JavaScript execution environment. These optimized bindings are evaluated far more efficiently than more complex (non-optimized) bindings. The basic requirement for optimization of bindings is that the type information of every symbol accessed must be known at compile time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2b4de722d7db98e6d6a4a72cbdae01c7ff390b" translate="yes" xml:space="preserve">
          <source>There are two types of input to the &lt;a href=&quot;qml-qtquick-shadereffect#vertexShader-prop&quot;&gt;vertexShader&lt;/a&gt;: uniform variables and attributes. Some are predefined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543ade297f22021009dad53f032581af992badc1" translate="yes" xml:space="preserve">
          <source>There are two types of proxies that Qt understands: transparent proxies and caching proxies. The first group consists of proxies that can handle any arbitrary data transfer, while the second can only handle specific requests. The caching proxies only make sense for the specific classes where they can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b1a814b1dd6dc671f1b76e20ec456905c5eb8f" translate="yes" xml:space="preserve">
          <source>There are two types of purchases supported by &lt;a href=&quot;qinappstore&quot;&gt;QInAppStore&lt;/a&gt;: &lt;a href=&quot;qinappproduct#ProductType-enum&quot;&gt;QInAppProduct::Consumable&lt;/a&gt; and &lt;a href=&quot;qinappproduct#ProductType-enum&quot;&gt;QInAppProduct::Unlockable&lt;/a&gt;. The former will be consumed when the transaction is completed and &lt;a href=&quot;qinapptransaction#finalize&quot;&gt;QInAppTransaction::finalize&lt;/a&gt;() is called, meaning that it can be purchased again, any number of times. Unlockable items can only be purchased once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8186dead278a8a9c7d9abd60c8ba4a7656dbde9" translate="yes" xml:space="preserve">
          <source>There are two types of qmake functions: replace functions and test functions. Replace functions return a value list, while test functions return a boolean result. The functions are implemented in two places: fundamental functionality is offered as built-in functions. More complex functions are implemented in a library of feature files (.prf).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46c8f8d9dfbcff4fc9df96dc229b32c6bfb8c39" translate="yes" xml:space="preserve">
          <source>There are two ways Qt XML Patterns can be used to evaluate queries. You can run the query engine in your Qt application using the Qt XML Patterns C++ API, or you can run the query engine from the command line using Qt's &lt;code&gt;xmlpatterns&lt;/code&gt; command line utility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3506aeef26a67cff0c2b6d2e4d7977ae2077caaf" translate="yes" xml:space="preserve">
          <source>There are two ways Qt XML Patterns can be used to validate schemas: You can use the C++ API in your Qt application using the classes &lt;a href=&quot;qxmlschema&quot;&gt;QXmlSchema&lt;/a&gt; and &lt;a href=&quot;qxmlschemavalidator&quot;&gt;QXmlSchemaValidator&lt;/a&gt;, or you can use the command line utility named xmlpatternsvalidator (located in the &quot;bin&quot; directory of your Qt build).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98cc65ea20ce5f3271b77de994366c531ae5d3f4" translate="yes" xml:space="preserve">
          <source>There are two ways of accessing the data provided by this model, either through the &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#suggestions-prop&quot;&gt;suggestions&lt;/a&gt; property or through views and delegates. The latter is the preferred method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a03528ecb489f9c9c73fc8a0cce2e17a16dc1b2" translate="yes" xml:space="preserve">
          <source>There are two ways of approaching sorting in the model/view architecture; which approach to choose depends on your underlying model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd523e14deef66198ab91d82a71cb6dd9f5a962" translate="yes" xml:space="preserve">
          <source>There are two ways of using &lt;a href=&quot;qprogressdialog&quot;&gt;QProgressDialog&lt;/a&gt;: modal and modeless.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619aaeb1084c646a5675de6862d5077b90541a5e" translate="yes" xml:space="preserve">
          <source>There are two ways that &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; supports &lt;a href=&quot;highdpi#high-dpi-displays&quot;&gt;high DPI&lt;/a&gt; icons: via &lt;a href=&quot;qicon#addFile&quot;&gt;addFile&lt;/a&gt;() and &lt;a href=&quot;qicon#fromTheme&quot;&gt;fromTheme&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c7cc4b90fdb71b9316246816539110eebea221" translate="yes" xml:space="preserve">
          <source>There are two ways to add items to the list: they can be constructed with the list widget as their parent widget, or they can be constructed with no parent widget and added to the list later. If a list widget already exists when the items are constructed, the first method is easier to use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ba5a2c301c366821e32f891a3f8269ee5439bf" translate="yes" xml:space="preserve">
          <source>There are two ways to affect how &lt;a href=&quot;qvariantanimation&quot;&gt;QVariantAnimation&lt;/a&gt; interpolates the values. You can set an easing curve by calling &lt;a href=&quot;qvariantanimation#easingCurve-prop&quot;&gt;setEasingCurve&lt;/a&gt;(), and configure the duration by calling &lt;a href=&quot;qvariantanimation#duration-prop&quot;&gt;setDuration&lt;/a&gt;(). You can change how the &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;s are interpolated by creating a subclass of &lt;a href=&quot;qvariantanimation&quot;&gt;QVariantAnimation&lt;/a&gt;, and reimplementing the virtual &lt;a href=&quot;qvariantanimation#interpolated&quot;&gt;interpolated&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e5a4f8a8b2112075138b03029984d166be544b" translate="yes" xml:space="preserve">
          <source>There are two ways to construct an item group. The easiest and most common approach is to pass a list of items (e.g., all selected items) to &lt;a href=&quot;qgraphicsscene#createItemGroup&quot;&gt;QGraphicsScene::createItemGroup&lt;/a&gt;(), which returns a new &lt;a href=&quot;qgraphicsitemgroup&quot;&gt;QGraphicsItemGroup&lt;/a&gt; item. The other approach is to manually construct a &lt;a href=&quot;qgraphicsitemgroup&quot;&gt;QGraphicsItemGroup&lt;/a&gt; item, add it to the scene calling &lt;a href=&quot;qgraphicsscene#addItem&quot;&gt;QGraphicsScene::addItem&lt;/a&gt;(), and then add items to the group manually, one at a time by calling &lt;a href=&quot;qgraphicsitemgroup#addToGroup&quot;&gt;addToGroup&lt;/a&gt;(). To dismantle (&quot;ungroup&quot;) an item group, you can either call &lt;a href=&quot;qgraphicsscene#destroyItemGroup&quot;&gt;QGraphicsScene::destroyItemGroup&lt;/a&gt;(), or you can manually remove all items from the group by calling &lt;a href=&quot;qgraphicsitemgroup#removeFromGroup&quot;&gt;removeFromGroup&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a70fb138b33df172cb4851452595101d6276f81" translate="yes" xml:space="preserve">
          <source>There are two ways to create &lt;a href=&quot;qml-qtaudioengine-soundinstance&quot;&gt;SoundInstance&lt;/a&gt; objects. You can obtain it by calling newInstance method of a &lt;a href=&quot;qml-qtaudioengine-sound&quot;&gt;Sound&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49aaec2699aac0c26a832804ceb1149838a9b84d" translate="yes" xml:space="preserve">
          <source>There are two ways to create objects dynamically from JavaScript. You can either call &lt;a href=&quot;qml-qtqml-qt#createComponent-method&quot;&gt;Qt.createComponent()&lt;/a&gt; to dynamically create a &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt; object, or use &lt;a href=&quot;qml-qtqml-qt#createQmlObject-method&quot;&gt;Qt.createQmlObject()&lt;/a&gt; to create an object from a string of QML. Creating a component is better if you have an existing component defined in a QML document and you want to dynamically create instances of that component. Otherwise, creating an object from a string of QML is useful when the object QML itself is generated at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad0e4fb60a51220ca07fb662a10e0d9c4c9c102" translate="yes" xml:space="preserve">
          <source>There are two ways to define a property binding: the most common one is shown in the example earlier, in a &lt;a href=&quot;qtqml-syntax-objectattributes#value-assignment-on-initialization&quot;&gt;property initialization&lt;/a&gt;. The second (and much rarer) way is to assign the property a function returned from the &lt;a href=&quot;qml-qtqml-qt#binding-method&quot;&gt;Qt.binding()&lt;/a&gt; function, from within imperative JavaScript code, as shown below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ee79d2653e49e4aa7a065cdbdbbb601c72bfa7" translate="yes" xml:space="preserve">
          <source>There are two ways to embed a widget using &lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt;. The most common way is to pass a widget pointer to &lt;a href=&quot;qgraphicsscene#addWidget&quot;&gt;QGraphicsScene::addWidget&lt;/a&gt;() together with any relevant &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::WindowFlags&lt;/a&gt;. This function returns a pointer to a &lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt;. You can then choose to reparent or position either the proxy, or the embedded widget itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0b272752edd3b3a26e0eba4702702d3de025a4" translate="yes" xml:space="preserve">
          <source>There are two ways to install Qt:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e8d75c19150ace0e1fed108e21301e69557093" translate="yes" xml:space="preserve">
          <source>There are two ways to populate the input source with data: you can construct it with a &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;* so that the input source reads the data from that device. Or you can set the data explicitly with one of the &lt;a href=&quot;qxmlinputsource#setData&quot;&gt;setData&lt;/a&gt;() functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4bfeab275db72237c720b9da1dd3542460b8b3" translate="yes" xml:space="preserve">
          <source>There are two ways you can access this improved method of string construction. The straightforward way is to include &lt;code&gt;QStringBuilder&lt;/code&gt; wherever you want to use it, and use the &lt;code&gt;'%'&lt;/code&gt; operator instead of &lt;code&gt;'+'&lt;/code&gt; when concatenating strings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="496f1dece6a2f67e36a1ab8a6c7e1e4f48339367" translate="yes" xml:space="preserve">
          <source>There can also be alternate ways of dismissing the dialog which may cause destructive results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b9f67c23345abba60bcfee767743ea7d6791c2" translate="yes" xml:space="preserve">
          <source>There can be multiple selected items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a801b170a8956368ca3dfcaa44f77677b395838" translate="yes" xml:space="preserve">
          <source>There can only be one current item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6630c15d89215bfef2c2ee428c016df641b2b5a3" translate="yes" xml:space="preserve">
          <source>There has to be exactly one &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; object in every GUI application that uses Qt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac144b56b74a3b76825627cd6397ec17017d9da" translate="yes" xml:space="preserve">
          <source>There is a &amp;lt;Type&amp;gt;SimpleSource class defined in the header, which provides basic getter/setter methods for each property and implements data members of the correct property type in the header. Here &quot;&amp;lt;Type&amp;gt;&quot; represents the class name from the .rep file, so if your class is of type &quot;MyType&quot; in the .rep file, there will be a MyTypeSimpleSource class declared in the generated header file. This is a fast way to get started using the API. To use this class, you need to inherit from this class and implement any defined slots (which are pure virtual in the generated header file). Whatever logic is needed to manage the exposed properties and emit signals would be added to the inheriting class as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2313e842244ff8c23805bf7dbeca8b7bd9a964f1" translate="yes" xml:space="preserve">
          <source>There is a &lt;a href=&quot;qpainter#drawPicture&quot;&gt;drawPicture&lt;/a&gt;() function that draws the contents of an entire &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;. The &lt;a href=&quot;qpainter#drawPicture&quot;&gt;drawPicture&lt;/a&gt;() function is the only function that disregards all the painter's settings as &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt; has its own settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1988826b1f8b0d33a4825e1c6957969129f6082e" translate="yes" xml:space="preserve">
          <source>There is a class of attribute types of the format x_id_&amp;lt;provider&amp;gt; for example x_id_here. This class of attributes is a set of alternative identifiers of the place, from the specified provider's perspective.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f59be61eb411d5901a0e3ea0ee7e5c28fe3ce2" translate="yes" xml:space="preserve">
          <source>There is a corresponding &lt;a href=&quot;qxmlcontenthandler#endElement&quot;&gt;endElement&lt;/a&gt;() call when the corresponding end element tag is read. The startElement() and &lt;a href=&quot;qxmlcontenthandler#endElement&quot;&gt;endElement&lt;/a&gt;() calls are always nested correctly. Empty element tags (e.g. &lt;code&gt;&amp;lt;x/&amp;gt;&lt;/code&gt;) cause a startElement() call to be immediately followed by an &lt;a href=&quot;qxmlcontenthandler#endElement&quot;&gt;endElement&lt;/a&gt;() call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db777b850d525796dcda0193d7194ac42ddb0f08" translate="yes" xml:space="preserve">
          <source>There is a corresponding &lt;code&gt;disconnect()&lt;/code&gt; method for removing connected signals:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd19dfa8869f5eac4dc19841b2dba63f9642268e" translate="yes" xml:space="preserve">
          <source>There is a delay to showing the menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2390adf22ea96a79b2e168d0d8c92a8494e814" translate="yes" xml:space="preserve">
          <source>There is a known issue when running Microsoft NetMeeting, Lotus SameTime, and other applications that require screen grabbing while direct rendering is enabled. Other GL-applications may not work as expected, unless direct rendering is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fdad1047478ff9ba3f72cbb3b0731f2fbb6168f" translate="yes" xml:space="preserve">
          <source>There is a list of standard action names and localizations available that should be used when the action fits. This makes it easier for clients to understand the semantics, and Qt will try to expose them correctly on the different platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4239053bded9a4f7a7552be0ec5b4d770c9fcb6c" translate="yes" xml:space="preserve">
          <source>There is a set of environment variables you should set when starting a Qt application. Most of them are actually not specific to QNX Neutrino RTOS. They are still mentioned here, since knowing them just saves a lot of time in case of problems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c960632e664b7b5f2b3232e4b3b2041540c96a" translate="yes" xml:space="preserve">
          <source>There is a significant performance cost to using a &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; with dynamic roles enabled. The cost varies from platform to platform but is typically somewhere between 4-6x slower than using static role types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa231e8cb7a84a0d05da5d243da65fb967339cca" translate="yes" xml:space="preserve">
          <source>There is a single &lt;a href=&quot;qclipboard&quot;&gt;QClipboard&lt;/a&gt; object in an application, accessible as &lt;a href=&quot;qguiapplication#clipboard&quot;&gt;QGuiApplication::clipboard&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7d7c3a070e90710bd236c84d68a8103d2733c8" translate="yes" xml:space="preserve">
          <source>There is a strict ordering of the section units:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab176ae73921ee7472b128fd24bc1326ea49e46" translate="yes" xml:space="preserve">
          <source>There is a third constructor that creates a &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; using the top-left and bottom-right coordinates, but we recommend that you avoid using it. The rationale is that for historical reasons the values returned by the &lt;a href=&quot;qrect#bottom&quot;&gt;bottom&lt;/a&gt;() and &lt;a href=&quot;qrect#right&quot;&gt;right&lt;/a&gt;() functions deviate from the true bottom-right corner of the rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34d43baf02402f60fb8356a5f224db49f8346a3" translate="yes" xml:space="preserve">
          <source>There is also a &lt;a href=&quot;qhash#value&quot;&gt;value&lt;/a&gt;() overload that uses its second argument as a default value if there is no item with the specified key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e35049049c739c9b33819a908c67c64d9c24a5c" translate="yes" xml:space="preserve">
          <source>There is also a &lt;a href=&quot;qmap#value&quot;&gt;value&lt;/a&gt;() overload that uses its second argument as a default value if there is no item with the specified key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7becc76637d807cf5958ce8fb022659e8e0be346" translate="yes" xml:space="preserve">
          <source>There is also a command for documenting that a QML type inherits some other QML type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e4ce289cce72f1172919dc3dee4350b425c0e2" translate="yes" xml:space="preserve">
          <source>There is also a templatized version of &lt;a href=&quot;qaudiobuffer#data&quot;&gt;data&lt;/a&gt;() allows you to retrieve a specific type of pointer to the data. Note that there is no checking done on the format of the audio buffer - this is simply a convenience function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96e63838c3f15d115746307284c69a8b6107d14" translate="yes" xml:space="preserve">
          <source>There is also a templatized version of this constData() function that allows you to retrieve a specific type of read-only pointer to the data. Note that there is no checking done on the format of the audio buffer - this is simply a convenience function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0493c27d9462d156ddd3dda77071f9ee76927e9" translate="yes" xml:space="preserve">
          <source>There is also a templatized version of this data() function that allows you to retrieve a specific type of read-only pointer to the data. Note that there is no checking done on the format of the audio buffer - this is simply a convenience function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6766377a2fe3ca45fa80875e15d29323e0e3c4c" translate="yes" xml:space="preserve">
          <source>There is also a third constructor creating a &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; from a &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;, and a corresponding &lt;a href=&quot;qrectf#toRect&quot;&gt;toRect&lt;/a&gt;() function that returns a &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; object based on the values of this rectangle (note that the coordinates in the returned rectangle are rounded to the nearest integer).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f92f74f5b3160f1cbc547bbae6dc615dc6fae68" translate="yes" xml:space="preserve">
          <source>There is also the &lt;code&gt;|&lt;/code&gt; operator to act like a logical OR operator, joining together a number of conditions, and requiring only one of them to be true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a09b7f6b5364f0ef161e6960eff8ee9e208fb6a3" translate="yes" xml:space="preserve">
          <source>There is always an attachment at GL_COLOR_ATTACHMENT0. Call this function to set up additional attachments at GL_COLOR_ATTACHMENT1, GL_COLOR_ATTACHMENT2, ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8e71db9a2bb0c45f7fbcdf6ee52417d0aa96ab" translate="yes" xml:space="preserve">
          <source>There is an assumption that the Earth is spherical for the purpose of this calculation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5903225736b7fc3854ca9f217bccc9e980f286" translate="yes" xml:space="preserve">
          <source>There is an attached &lt;a href=&quot;qml-qtquick-controls-stack#status-attached-prop&quot;&gt;Stack.status&lt;/a&gt; property that tracks the lifecycle. This property is an enumeration with the following values: &lt;code&gt;Stack.Inactive&lt;/code&gt;, &lt;code&gt;Stack.Activating&lt;/code&gt;, &lt;code&gt;Stack.Active&lt;/code&gt; and &lt;code&gt;Stack.Deactivating&lt;/code&gt;. Combined with the normal &lt;code&gt;Component.onComplete&lt;/code&gt; and &lt;code&gt;Component.onDestruction&lt;/code&gt; signals, the entire lifecycle is thus:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3d12f9a0d16d1edfe6d0811ff578c50f4bbbe9" translate="yes" xml:space="preserve">
          <source>There is an instance of an anonymous</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d89c31b6d01afeafbd7ec420b85486d0cd5ad5e" translate="yes" xml:space="preserve">
          <source>There is an intersection if any of the lines making up the rectangle crosses a part of the path or if any part of the rectangle overlaps with any area enclosed by the path. This function respects the current &lt;a href=&quot;qpainterpath#fillRule&quot;&gt;fillRule&lt;/a&gt; to determine what is considered inside the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f6a17b45dc8a57be94fe29c5798264866f622d" translate="yes" xml:space="preserve">
          <source>There is currently no &lt;a href=&quot;http://www.zeroconf.org/&quot;&gt;zeroconf&lt;/a&gt; facility included in QtRO. All processes or devices must therefore know beforehand how to connect to each other. A &lt;a href=&quot;qremoteobjectregistry&quot;&gt;QRemoteObjectRegistry&lt;/a&gt; (see below) can be used to simplify the connection process for a network with multiple Host Nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8d4a9276f021ca1573eb59ad1a3cbeb06474b2" translate="yes" xml:space="preserve">
          <source>There is data to be read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa4c5a28e4f3b13cd9cd641a46c1d60642dba3e" translate="yes" xml:space="preserve">
          <source>There is much more to the &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; language than we have presented in this short introduction. We will be adding more here in later releases. In the meantime, playing with the &lt;code&gt;xmlpatterns&lt;/code&gt; utility and making modifications to the &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; examples provided here will be quite informative. An &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; textbook will be a good investment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fccc19ec00fffed72316fd525abc81c6783ef4" translate="yes" xml:space="preserve">
          <source>There is no &quot;raw&quot; representation of an event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571bcf2093bf0241a3679abd227deb735dc3c365" translate="yes" xml:space="preserve">
          <source>There is no behavior defined for setting an item which is null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80df523ce3900cccf9424cf45ef3ce83863c3a3c" translate="yes" xml:space="preserve">
          <source>There is no color model, only alpha is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8381b1018d8748c2e0a5605450ea81142d332b4" translate="yes" xml:space="preserve">
          <source>There is no current error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc902def3d5929ac72d572cd72e179f437aaa23" translate="yes" xml:space="preserve">
          <source>There is no default Bluetooth device to perform the service discovery. The model always uses the local default adapter. Specifying a default adapter is not possible. If that's required, &lt;a href=&quot;qbluetoothservicediscoveryagent&quot;&gt;QBluetoothServiceDiscoveryAgent&lt;/a&gt; should be directly used. This value was introduced by Qt 5.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1eb18de13937450e63ca386dfc922a6515bf8a0" translate="yes" xml:space="preserve">
          <source>There is no default text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbfd10e8333aa3b989a7b2b5ac5050716c9e7321" translate="yes" xml:space="preserve">
          <source>There is no default title text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bdd89928e4e4482ae82a2904787c2535b695be" translate="yes" xml:space="preserve">
          <source>There is no default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76db881a6c674fbc116b40a4dddb03df223e27e" translate="yes" xml:space="preserve">
          <source>There is no detailed tutorial documentation for writing QPA plugins at this time. However, there are two minimal plugins shipped with Qt 5 for testing and other special purposes that you can use as examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30bcb6499b659f449042d7d624339e028c4a503a" translate="yes" xml:space="preserve">
          <source>There is no difference between horizontal and vertical spacing inserted between items, so any additional space must be added within the items themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80fa486a5d0467d629c0969041cdea62c9e7beaf" translate="yes" xml:space="preserve">
          <source>There is no direct way of changing an item's key through an iterator, although it can be done by calling &lt;a href=&quot;qcbormap#erase&quot;&gt;QCborMap::erase&lt;/a&gt;() followed by &lt;a href=&quot;qcbormap#insert&quot;&gt;QCborMap::insert&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697065ae7b1aa2661ab1e7068ef9300d7f73c68b" translate="yes" xml:space="preserve">
          <source>There is no direct way of changing an item's key through an iterator, although it can be done by calling &lt;a href=&quot;qhash#erase&quot;&gt;QHash::erase&lt;/a&gt;() followed by &lt;a href=&quot;qhash#insert&quot;&gt;QHash::insert&lt;/a&gt;() or &lt;a href=&quot;qhash#insertMulti&quot;&gt;QHash::insertMulti&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e6903b15a46ae9f5ea86b8e5e1fc3945500089" translate="yes" xml:space="preserve">
          <source>There is no direct way of changing an item's key through an iterator, although it can be done by calling &lt;a href=&quot;qjsonobject#erase&quot;&gt;QJsonObject::erase&lt;/a&gt;() followed by &lt;a href=&quot;qjsonobject#insert&quot;&gt;QJsonObject::insert&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb36b60408c9f8520843edffa1ecb59c14887ce3" translate="yes" xml:space="preserve">
          <source>There is no direct way of changing an item's key through an iterator, although it can be done by calling &lt;a href=&quot;qmap#erase&quot;&gt;QMap::erase&lt;/a&gt;() followed by &lt;a href=&quot;qmap#insert&quot;&gt;QMap::insert&lt;/a&gt;() or &lt;a href=&quot;qmap#insertMulti&quot;&gt;QMap::insertMulti&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36dd4bd9d545081d829c3a446407803d572930a" translate="yes" xml:space="preserve">
          <source>There is no direct way to do wildcard matching in &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;. However, the &lt;a href=&quot;qregularexpression#wildcardToRegularExpression&quot;&gt;wildcardToRegularExpression&lt;/a&gt; method is provided to translate glob patterns into a Perl-compatible regular expression that can be used for that purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1c9d886b36571844de565fe60cab20ecac692e" translate="yes" xml:space="preserve">
          <source>There is no direction associated with the instruction text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e8b9554d36c6887e7164904248df1d36b02378" translate="yes" xml:space="preserve">
          <source>There is no explicit size restriction on an offset from UTC, but there is an implicit limit imposed when using the &lt;a href=&quot;qdatetime#toString&quot;&gt;toString&lt;/a&gt;() and &lt;a href=&quot;qdatetime#fromString&quot;&gt;fromString&lt;/a&gt;() methods which use a [+|-]hh:mm format, effectively limiting the range to +/- 99 hours and 59 minutes and whole minutes only. Note that currently no time zone lies outside the range of +/- 14 hours.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c381378063df2cd2e04373a23a8e0d5a6d87a5" translate="yes" xml:space="preserve">
          <source>There is no minimum or maximum angle for this property, but the default style only supports angles whose absolute range is less than or equal to &lt;code&gt;360&lt;/code&gt; degrees. This is because ranges higher than &lt;code&gt;360&lt;/code&gt; degrees will cause the tickmarks and labels to overlap each other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781595d0468bfc3bfecf44000d66082ec451e59f" translate="yes" xml:space="preserve">
          <source>There is no need to call &lt;a href=&quot;qopenglwidget#makeCurrent&quot;&gt;makeCurrent&lt;/a&gt;() because this has already been done when this function is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191901b693603f999c40cf71e2401b8a6e4e805d" translate="yes" xml:space="preserve">
          <source>There is no need to call &lt;a href=&quot;qopenglwidget#makeCurrent&quot;&gt;makeCurrent&lt;/a&gt;() because this has already been done when this function is called. Additionally, the framebuffer is also bound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d213bd05de130f9b11211b11288ec9f40cd4ab5" translate="yes" xml:space="preserve">
          <source>There is no need to call &lt;a href=&quot;qopenglwidget#makeCurrent&quot;&gt;makeCurrent&lt;/a&gt;() because this has already been done when this function is called. Note however that the framebuffer is not yet available at this stage, so avoid issuing draw calls from here. Defer such calls to &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda2a892158f852497393e4691565de703d47448" translate="yes" xml:space="preserve">
          <source>There is no need to call &lt;a href=&quot;qopenglwindow#makeCurrent&quot;&gt;makeCurrent&lt;/a&gt;() because this has already been done when this function is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36040aa053e65bfdf61dc685961c28d7aacc0e9b" translate="yes" xml:space="preserve">
          <source>There is no need to call &lt;a href=&quot;qopenglwindow#makeCurrent&quot;&gt;makeCurrent&lt;/a&gt;() because this has already been done when this function is called. Note however that the framebuffer, in case partial update mode is used, is not yet available at this stage, so avoid issuing draw calls from here. Defer such calls to &lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f108aa2a1dff31922661f66df1bc2fbc7681f3d" translate="yes" xml:space="preserve">
          <source>There is no need to call this before destroying the &lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt; since clean up is then performed automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a5fe31c5c8f49ca71364259bddc3647e2b28009" translate="yes" xml:space="preserve">
          <source>There is no need to lay out a menu bar. It automatically sets its own geometry to the top of the parent widget and changes it appropriately whenever the parent is resized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="182f02c34cf1d7ab591584a4ae0d499767ae8b74" translate="yes" xml:space="preserve">
          <source>There is no opacity mask by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0fd8ccf10181605405f1b49ef4caf432e79452" translate="yes" xml:space="preserve">
          <source>There is no radio service available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77bea4b42aab28d26883a18291422b5d3334a497" translate="yes" xml:space="preserve">
          <source>There is no recommended action to be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bda0b702dc431c4b46e9b637f032ac0a1c5fa64" translate="yes" xml:space="preserve">
          <source>There is no risk of deadlocks when using the event system for thread synchronization, unlike using low-level primitives. However, the event system does not enforce mutual exclusion. If invokable methods access shared data, they must still be protected with low-level primitives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7a58b8f1d88d956e4bd1d1237cfb34a7aaeb5b" translate="yes" xml:space="preserve">
          <source>There is no service available to provide the requested functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8181b0a0708e2a42ba9fc85c858a02e1adb77ba7" translate="yes" xml:space="preserve">
          <source>There is no setter for the node model because instances of &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; instances are only created with &lt;a href=&quot;qabstractxmlnodemodel#createIndex&quot;&gt;QAbstractXmlNodeModel::createIndex&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f82515f78da3bd7f1b9e44216f514516fee3ef0" translate="yes" xml:space="preserve">
          <source>There is no single correct 3D coordinate to match a particular screen position, so to be consistent, the queries are always done against the inner sides of an invisible box surrounding the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbbd18421c2e5a9fcf43e13a867a61ae0c37e9d6" translate="yes" xml:space="preserve">
          <source>There is no such file to load into the default XML node model, but one can write a subclass of &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; to represent the file system. This custom XML node model, once populated with all the directory and file descriptors obtained directly from the system, presents the complete file system hierarchy to the query engine via the same API used by the default XML node model to present the contents of an XML file. In other words, once the custom XML node model is populated, it presents the file system to the query engine as if a description of it had been loaded into the default XML node model from an XML file like the one shown above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08ddd396cac5da789e55fcb21f3cecb40e952ab" translate="yes" xml:space="preserve">
          <source>There is no support for describing YUV's macro pixels. Instead a list of YUV formats has been made. When a &lt;a href=&quot;qpixelformat&quot;&gt;QPixelFormat&lt;/a&gt; is describing a YUV format, the &lt;a href=&quot;qpixelformat#bitsPerPixel&quot;&gt;bitsPerPixel&lt;/a&gt; value has been deduced by the YUV Layout enum. Also, the color channels should all be set to zero except the fifth color channel that should store the &lt;a href=&quot;qpixelformat#bitsPerPixel&quot;&gt;bitsPerPixel&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c290218400895d51dc525b9e11d3c133229375ea" translate="yes" xml:space="preserve">
          <source>There is no year 0. Dates in that year are considered invalid. The year -1 is the year &quot;1 before Christ&quot; or &quot;1 before current era.&quot; The day before 1 January 1 CE is 31 December 1 BCE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b4b7d4b2cce871be175e6550e1a35b3dba78490" translate="yes" xml:space="preserve">
          <source>There is no year 0. Dates in that year are considered invalid. The year -1 is the year &quot;1 before Christ&quot; or &quot;1 before current era.&quot; The day before 1 January 1 CE, &lt;a href=&quot;qdate&quot;&gt;QDate&lt;/a&gt;(1, 1, 1), is 31 December 1 BCE, &lt;a href=&quot;qdate&quot;&gt;QDate&lt;/a&gt;(-1, 12, 31).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a09bfd2547c985b82c56e455c40cc0376dfa841" translate="yes" xml:space="preserve">
          <source>There is nothing stopping you from using values for the additiveFacor property outside the 0 to 1 range, but please be aware that the input animation clips may not be authored in such a way for this to make sense.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd1cb7db3a684105a019d00f36b786eda6256be" translate="yes" xml:space="preserve">
          <source>There is nothing wrong with either of these string constructions, but there are a few hidden inefficiencies. Beginning with Qt 4.6, you can eliminate them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd670fd14a54fbbdbcb0267744caf09c9c05784" translate="yes" xml:space="preserve">
          <source>There is one bug that is so common that it deserves mention here: If you include the &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; macro in a class declaration and run &lt;a href=&quot;moc#&quot;&gt;the meta-object compiler&lt;/a&gt; (&lt;code&gt;moc&lt;/code&gt;), but forget to link the &lt;code&gt;moc&lt;/code&gt;-generated object code into your executable, you will get very confusing error messages. Any link error complaining about a lack of &lt;code&gt;vtbl&lt;/code&gt;, &lt;code&gt;_vtbl&lt;/code&gt;, &lt;code&gt;__vtbl&lt;/code&gt; or similar is likely to be a result of this problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1cb5fae9c8ed9feef9b8164149c8bb9184e2a9" translate="yes" xml:space="preserve">
          <source>There is one or more resources missing, so the media player cannot be used. It may be possible to try again at a later time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc0da852ecf29b4b0fecfd929dd24a46baea087" translate="yes" xml:space="preserve">
          <source>There is one or more resources missing, so the radio cannot be used. It may be possible to try again at a later time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754d0b06837f4a776f4063562284d09de93c56cf" translate="yes" xml:space="preserve">
          <source>There is one or more resources missing, so the radio cannot be used. It may be possible to try again at a later time. This can occur if there is no antenna connected - see the &lt;a href=&quot;qml-qtmultimedia-radio#antennaConnected-prop&quot;&gt;antennaConnected&lt;/a&gt; property as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375d543648116f32a41a92c3ae61758e7e9873dc" translate="yes" xml:space="preserve">
          <source>There is one or more resources missing, so the video player cannot be used. It may be possible to try again at a later time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202b838181fe78d36611e4556c120db86d5685ba" translate="yes" xml:space="preserve">
          <source>There is only one tab in the toolbox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd9efbbb3eb24869e2de1578d00494df11080d9" translate="yes" xml:space="preserve">
          <source>There is only one toolbar or line. This is the default value of the &lt;a href=&quot;qstyleoptiontoolbar#positionOfLine-var&quot;&gt;positionOfLine&lt;/a&gt; and &lt;a href=&quot;qstyleoptiontoolbar#positionWithinLine-var&quot;&gt;positionWithinLine&lt;/a&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469730b114844abfabfa8533b4a7f3e2fea4ae06" translate="yes" xml:space="preserve">
          <source>There is some redundancy between this property and &lt;a href=&quot;qml-qtquick-pointerdevice#type-prop&quot;&gt;PointerDevice::type&lt;/a&gt;. If a tocuchscreen is used, then the device is TouchScreen and pointerType is Finger (always).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb0805ba34ff98a002102b659064848a3c7c453" translate="yes" xml:space="preserve">
          <source>There is typically no need to perform anything special in this function because &lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt; will automatically retry to initialize itself after a certain amount of time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823381dd99076924e0cc3ac3637347bb955017a0" translate="yes" xml:space="preserve">
          <source>There is typically no need to perform anything special in this function. &lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt; will automatically release all resources (invoking &lt;a href=&quot;qvulkanwindowrenderer#releaseSwapChainResources&quot;&gt;releaseSwapChainResources&lt;/a&gt;() and &lt;a href=&quot;qvulkanwindowrenderer#releaseResources&quot;&gt;releaseResources&lt;/a&gt;() as necessary) and will attempt to reinitialize, acquiring a new device. When the physical device was also lost, this reinitialization attempt may then result in &lt;a href=&quot;qvulkanwindowrenderer#physicalDeviceLost&quot;&gt;physicalDeviceLost&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6debb2bf1cc2fdf9f055f19b4f323bdf7dfdfd" translate="yes" xml:space="preserve">
          <source>There may be artifacts of uninitialized graphics memory on some Qt Quick Controls 2 components, such as checkboxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b85812e6193f58b8e906a6fc051fbb728bb6047" translate="yes" xml:space="preserve">
          <source>There may be at most one integer ID for each sender.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918c84c09fa7f49ca6e9bbcb7ad1af33dee1f530" translate="yes" xml:space="preserve">
          <source>There may be at most one object for each sender.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106b415cba3b75c2bb67670a9af77acb21475e41" translate="yes" xml:space="preserve">
          <source>There may be at most one text for each sender.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bccfac83c325255220c7d36a1155dd9997578f" translate="yes" xml:space="preserve">
          <source>There may be at most one widget for each sender.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7420f20fc59ffbebd3124bf1308aa8c1853171bf" translate="yes" xml:space="preserve">
          <source>There may be more fine-tuning to the QBig5hkscsCodec to maximize its compatibility with the standard Big5 (2002) mapping as determined by Li18nux Big5 Standard Subgroup. See &lt;a href=&quot;http://www.autrijus.org/xml/&quot;&gt;http://www.autrijus.org/xml/&lt;/a&gt; for the various Big5 CharMapML tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330bde8482e24a027a987b02eab98495dc82169e" translate="yes" xml:space="preserve">
          <source>There may be significant variation in the features supported by different providers of routing information, or even in the features supported by the same provider if different levels of authorization are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37dcc66685924b66ffcb2785fc50c4712584dde5" translate="yes" xml:space="preserve">
          <source>There must be at least one row and one column in the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9680817c46ee9bdcfc0a675c1a8956ef5a3d814d" translate="yes" xml:space="preserve">
          <source>There seems to be a issue when both &lt;code&gt;-prebind&lt;/code&gt; and &lt;code&gt;-multi_module&lt;/code&gt; are defined when linking static C libraries into dynamic libraries. If you get the following error message when linking Qt:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a059ca6f233a7fe8f9e08181423093cf0e3162" translate="yes" xml:space="preserve">
          <source>There should be exactly one occurrence of this macro in the source code for a Qt plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4624dba6f43a51cf090f84dcd5b048470144e3b" translate="yes" xml:space="preserve">
          <source>There should be no need to set the widget flags,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae02ebaba19a9e8cd38de15e813fe40f398c9a5" translate="yes" xml:space="preserve">
          <source>There will always be one (and only one) item in the &lt;a href=&quot;qml-qtquick-controls-splitview&quot;&gt;SplitView&lt;/a&gt; that has &lt;a href=&quot;qml-qtquick-layouts-layout#fillWidth-attached-prop&quot;&gt;Layout.fillWidth&lt;/a&gt; set to &lt;code&gt;true&lt;/code&gt; (or &lt;a href=&quot;qml-qtquick-layouts-layout#fillHeight-attached-prop&quot;&gt;Layout.fillHeight&lt;/a&gt;, if orientation is Qt.Vertical). This means that the item will get all leftover space when other items have been laid out. By default, the last visible child of the &lt;a href=&quot;qml-qtquick-controls-splitview&quot;&gt;SplitView&lt;/a&gt; will have this set, but it can be changed by explicitly setting fillWidth to &lt;code&gt;true&lt;/code&gt; on another item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b98fdfc9a9b44c08a2f4ed8a41b969043653646" translate="yes" xml:space="preserve">
          <source>There will always be one item (the fill item) in the &lt;a href=&quot;qml-qtquick-controls2-splitview&quot;&gt;SplitView&lt;/a&gt; that has &lt;code&gt;SplitView.fillWidth&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; (or &lt;code&gt;SplitView.fillHeight&lt;/code&gt;, if &lt;a href=&quot;qml-qtquick-controls2-splitview#orientation-prop&quot;&gt;orientation&lt;/a&gt; is &lt;code&gt;Qt.Vertical&lt;/code&gt;). This means that the item will get all leftover space when other items have been laid out. By default, the last visible child of the &lt;a href=&quot;qml-qtquick-controls2-splitview&quot;&gt;SplitView&lt;/a&gt; will have this set, but it can be changed by explicitly setting &lt;code&gt;fillWidth&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; on another item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fab652a7f943b68de147799881300f0ed3b871b" translate="yes" xml:space="preserve">
          <source>There's also a &lt;a href=&quot;qsemaphore#tryAcquire&quot;&gt;tryAcquire&lt;/a&gt;() function that returns immediately if it cannot acquire the resources, and an &lt;a href=&quot;qsemaphore#available&quot;&gt;available&lt;/a&gt;() function that returns the number of available resources at any time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467cf94348f018b34a9db30eecce01a20d248c47" translate="yes" xml:space="preserve">
          <source>There's also a &lt;a href=&quot;qsqlquerymodel#setQuery&quot;&gt;setQuery()&lt;/a&gt; overload that takes a &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; object and operates on its result set. This enables you to use any features of &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; to set up the query (e.g., prepared queries).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a2be12ba96ce0614c4b578c6495b1b2e3ff738" translate="yes" xml:space="preserve">
          <source>Therefore isEnabledTo(0) stops at this widget's window, unlike &lt;a href=&quot;qwidget#enabled-prop&quot;&gt;isEnabled&lt;/a&gt;() which also takes parent windows into considerations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e82ea95c588f4c03fd61cc3838ff53cbc91999" translate="yes" xml:space="preserve">
          <source>Therefore this function is very fast and never fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741103b5be85e76dfc3c9c0afc8172b350cbce65" translate="yes" xml:space="preserve">
          <source>Therefore, Qt's &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; class really represents a query for fonts. When text is interpreted, Qt will do its best to match the text to the query, but depending on the support, different fonts can be used behind the scenes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16033e622377884a506b2191a598cfd15d5915fa" translate="yes" xml:space="preserve">
          <source>Therefore, a &lt;a href=&quot;qml-qtquick-scriptaction&quot;&gt;ScriptAction&lt;/a&gt; within a view transition should not refer to the &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; attached property, as it may not refer to the expected values at the time that the &lt;a href=&quot;qml-qtquick-scriptaction&quot;&gt;ScriptAction&lt;/a&gt; is actually invoked. Consider the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13229edc1e03a3848070c4616f11976db7407855" translate="yes" xml:space="preserve">
          <source>Therefore, dynamic typing is disabled by default; the developer must specifically set the boolean &quot;dynamicRoles&quot; property of the model to enable dynamic typing (and suffer the attendant performance degradation). We recommend that you do not use dynamic typing if it is possible to redesign your application to avoid it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f553df541383dfdc930a99fc8bed2e4ff49d606" translate="yes" xml:space="preserve">
          <source>Therefore, if an item with margins is a child of another &lt;code&gt;Item&lt;/code&gt;, its position, size and implicit size will remain unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5b97643bcbbef20dfcb61ae72268c6ba014093" translate="yes" xml:space="preserve">
          <source>Therefore, in the most general case, you should wrap the pattern between the &lt;code&gt;\A&lt;/code&gt; and the &lt;code&gt;\z&lt;/code&gt; anchors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef30901cff4a748f33ace7526e280e7473b6fb97" translate="yes" xml:space="preserve">
          <source>Therefore, it's important not to unneccessarily request an alpha channel. When the alphaBufferSize is 0 or the default -1, all these extra steps can be avoided and the traditional window-based swapchain is sufficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c888c4ad3aa8d6ee0a88cb258b9bdf6af98fd68b" translate="yes" xml:space="preserve">
          <source>Therefore, to access the pointer that &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; is tracking, you must first promote it to &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; and verify if the resulting object is null or not. &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; guarantees that the object isn't deleted, so if you obtain a non-null object, you may use the pointer. See &lt;a href=&quot;qweakpointer#toStrongRef&quot;&gt;QWeakPointer::toStrongRef&lt;/a&gt;() for an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8f24499ecc97190e272455975205f1836948d9" translate="yes" xml:space="preserve">
          <source>Therefore, we strongly recommend that all subclasses of &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; use the &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; macro regardless of whether or not they actually use signals, slots, and properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39096ff6042eea0ccb8389afeb3900c5a8e7c17a" translate="yes" xml:space="preserve">
          <source>Therefore, writes to elements of a reference sequence will be much slower than writes to elements of a copy sequence. In fact, writing to a single element of an N-element reference sequence is equivalent in cost to assigning a N-element copy sequence to that reference sequence, so you're usually better off modifying a temporary copy sequence and then assigning the result to a reference sequence, during computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb5ed969b4cc67f352f4f91e498dbfcfffe8bfa" translate="yes" xml:space="preserve">
          <source>These &lt;a href=&quot;qtcore-index&quot;&gt;Qt Core&lt;/a&gt; classes provide threading support to applications. The &lt;a href=&quot;threads#&quot;&gt;Thread Support in Qt&lt;/a&gt; page covers how to use these classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88972ff921fc2a7e41f8658432476dff0017b3fc" translate="yes" xml:space="preserve">
          <source>These &lt;a href=&quot;qtcore-index#&quot;&gt;Qt Core&lt;/a&gt; classes are part of the &lt;a href=&quot;statemachine-api#&quot;&gt; State Machine Framework&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01d371f485faffe55cf3e588ea8962eb0418149" translate="yes" xml:space="preserve">
          <source>These &lt;a href=&quot;qtcore-index#&quot;&gt;Qt Core&lt;/a&gt; classes are used to create and handle events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e62b3165f5f6338cf73414050227980f01123d" translate="yes" xml:space="preserve">
          <source>These &lt;a href=&quot;qtcore-index#&quot;&gt;Qt Core&lt;/a&gt; classes are used to handle input and output to and from external devices, processes, files etc. as well as manipulating files and directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8c822216b55b5b97378a93d7b0ba866daf9d26" translate="yes" xml:space="preserve">
          <source>These &lt;a href=&quot;qtcore-index#&quot;&gt;Qt Core&lt;/a&gt; classes deal with shared libraries, (for example, .so and DLL files), and with Qt plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef4039b441d3c31d84d3e9f2e91952fa50d5a470" translate="yes" xml:space="preserve">
          <source>These &lt;a href=&quot;qtcore-index#&quot;&gt;Qt Core&lt;/a&gt; classes provides a safe and efficient way of sharing and manipulating data by &lt;a href=&quot;implicit-sharing#&quot;&gt;implicitly sharing&lt;/a&gt; data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa3f8684dc7f0e3f8c91e0a6af1831037881029" translate="yes" xml:space="preserve">
          <source>These additional restrictions stem from the fact that the accelerated series is drawn on a separate widget on top of the chart:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d281a0b3e8dbda375fbd8da42e8d6937780883e9" translate="yes" xml:space="preserve">
          <source>These are all of the arguments that were not recognized as part of an option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f733526149d3360fb0f4254c2f402611d42450be" translate="yes" xml:space="preserve">
          <source>These are convenience that allow you to, for example, have nested MultiPointTouchAreas, one handling two finger touches, and another handling three finger touches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d65d276845035680325a65c501e08bfa5bf169" translate="yes" xml:space="preserve">
          <source>These are links to the API reference material:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33417f022e606a4b0610d66c3d4ddbd3fd31ab9b" translate="yes" xml:space="preserve">
          <source>These are links to the API reference materials and related pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce01e19ba6216ae390a2c2183e637f0003293ba" translate="yes" xml:space="preserve">
          <source>These are links to the API reference materials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc19251b6d81d99139ac14269e9e7e04a7ff92f" translate="yes" xml:space="preserve">
          <source>These are specialized animation types that animate different property types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f45f3195af2ffa94a3e581d04f6ee94593c7f2c" translate="yes" xml:space="preserve">
          <source>These are the built-in types supported by &lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1424e0fad5e591dc4bf7cc818b35d74842d67a68" translate="yes" xml:space="preserve">
          <source>These are the limitations for the current version of this function. Future versions of Qt may lift some of the limitations listed here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d265f8d694d345e111a5dc73cc418e78afedefa" translate="yes" xml:space="preserve">
          <source>These are the possible documentation styles for signals:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="723e1d921b8c117e93a4edea74b9911e668e9b66" translate="yes" xml:space="preserve">
          <source>These are the satellites that are used to get a &quot;fix&quot; - that is, those used to determine the current position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e333ced540cc021abe564a8e4613c9035940e43" translate="yes" xml:space="preserve">
          <source>These are typically specified in C++ in the beginning of &lt;code&gt;main()&lt;/code&gt;, but can also be controlled in QML via the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f1703f402b517fb92da044e686bab49717823cb" translate="yes" xml:space="preserve">
          <source>These articles assume that the reader has basic knowledge about multithreaded applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a57a4560f8d03a2e11ad009b407e8f828ed035" translate="yes" xml:space="preserve">
          <source>These articles contain information about Qt Network setup and about applications with networking capabilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f394ffbfd5de954d1f4b875051c60c522170840" translate="yes" xml:space="preserve">
          <source>These attached properties hold the size of the item's window. The Window attached property can be attached to any Item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59fb60eb802103f2884b506f4126d8747556e624" translate="yes" xml:space="preserve">
          <source>These attributes are discussed in detail below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d6ba2c9afb75fa83a64cd4664025bb08439a90" translate="yes" xml:space="preserve">
          <source>These basic widgets (controls), e.g. buttons, comboboxes and scroll bars, are designed for direct use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6cb204015054559138a6cbee035edc14ce0730" translate="yes" xml:space="preserve">
          <source>These classes are abstract classes describing the interface. The &lt;a href=&quot;qxmldefaulthandler&quot;&gt;QXmlDefaultHandler&lt;/a&gt; class provides a &quot;do nothing&quot; default implementation for all of them. Therefore users only need to overload the &lt;a href=&quot;qxmldefaulthandler&quot;&gt;QXmlDefaultHandler&lt;/a&gt; functions they are interested in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e74d45bebc26ec4bb5de062709240bad4d624b" translate="yes" xml:space="preserve">
          <source>These classes are less flexible than the view classes, and cannot be used with arbitrary models. We recommend that you use a model/view approach to handling data in item views unless you strongly need an item-based set of classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0829cb5515d0016bcffe579e7ff73b5f9e19dbb1" translate="yes" xml:space="preserve">
          <source>These classes are provided by qt for creating event-driven state machines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6b60ecc7c31e477374b6e8569975164017d78c" translate="yes" xml:space="preserve">
          <source>These classes are relevant to XML users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805015d3f76eeb5f3c1295d1403fbcdd8316cc1b" translate="yes" xml:space="preserve">
          <source>These classes are relevant to threaded applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ebcdded254c1d81405690a0dc3bd34bf7211f0b" translate="yes" xml:space="preserve">
          <source>These classes are relevant when working with string data. For information about rendering text, see the &lt;a href=&quot;richtext&quot;&gt;Rich Text Processing&lt;/a&gt; overview, and if your string data is in XML, see the &lt;a href=&quot;xml-processing&quot;&gt;XML Processing&lt;/a&gt; overview.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbaee5fcc8c273b5bc6e8a5d056c34d34e7667ba" translate="yes" xml:space="preserve">
          <source>These classes are used to customize an application's appearance and style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec93af25ac09d38d4b0fe94f8fd1ab875f9e1ef" translate="yes" xml:space="preserve">
          <source>These classes deal with drag and drop and the necessary mime type encoding and decoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1faa9c8c593de2022dd112f7bdbd4e64ab2231" translate="yes" xml:space="preserve">
          <source>These classes derive from &lt;a href=&quot;qabstracttablemodel&quot;&gt;QAbstractTableModel&lt;/a&gt; (which in turn inherits from &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;) and make it easy to present data from a database in an item view class such as &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt; and &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;. This is explained in detail in the &lt;a href=&quot;sql-presenting#&quot;&gt;Presenting Data in a Table View&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72dbaa48826500b8f11bf1735020294dc1ab5271" translate="yes" xml:space="preserve">
          <source>These classes form the basis of the Qt Object Model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e0f57c763ac6aedfb703d6f7c66dffae313951" translate="yes" xml:space="preserve">
          <source>These classes link the data from a database to data-aware widgets. They include &lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt;, &lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt;, and &lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt;. These classes are designed to work with Qt's &lt;a href=&quot;model-view-programming&quot;&gt;model/view framework&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156e0f1cbc71d4ab74f9bf40c57ea6e84096b448" translate="yes" xml:space="preserve">
          <source>These classes provide a framework for creating interactive applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23695bc99423fad9604bc99a46ffd3adcdb7707f" translate="yes" xml:space="preserve">
          <source>These classes provide access to SQL databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c9b661ea4e66ec52d2ca44a1d78fad7ee2b384" translate="yes" xml:space="preserve">
          <source>These classes provide access to databases. Connections are made using the &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; class. Database interaction is achieved by using the &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; class. In addition to &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; and &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt;, the SQL API layer is supported by &lt;a href=&quot;qsqlerror&quot;&gt;QSqlError&lt;/a&gt;, &lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt;, &lt;a href=&quot;qsqlindex&quot;&gt;QSqlIndex&lt;/a&gt;, and &lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32544a2d8d6aed1046be38df7bc3ceefc6c81946" translate="yes" xml:space="preserve">
          <source>These classes provide convenience wrappers that reduce the need for casting. Each of these classes represents a sensor type that the Qt Sensors API knows about. Note that additional types may be made available at run-time. See &lt;a href=&quot;#sensor-types&quot;&gt;Sensor Types&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e20c25ed65350b339d17a437bad44f80677d8e" translate="yes" xml:space="preserve">
          <source>These classes provide everything you need for a typical modern main application window, like the main window itself, menu and tool bars, a status bar, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2b859d4b760398db3b5e4469f17fa0f316acf7" translate="yes" xml:space="preserve">
          <source>These classes provide support for painting onto a paint device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91f3a4b8e5d646e378c28f02ff2aa8bc9e43e09" translate="yes" xml:space="preserve">
          <source>These classes support internationalizing of Qt applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de62bdbff4e301e491ee3946baf22166e6a02834" translate="yes" xml:space="preserve">
          <source>These classes use the model/view design pattern in which the underlying data (in the model) is kept separate from the way the data is presented and manipulated by the user (in the view).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab1363e38941ec8acedd8080a7a0b6d080fc712" translate="yes" xml:space="preserve">
          <source>These commands are for creating hyperlinks to classes, functions, examples, and other targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112ce137b55c5d685ac3725bd8c9aa9d81da34d3" translate="yes" xml:space="preserve">
          <source>These commands are for indicating that a documented element has some special status. The element could be marked as about to be made obsolete, or that it is simply not to be included in the public interface. The &lt;a href=&quot;#since-command&quot;&gt;\since&lt;/a&gt; command is for specifying the version number in which a function or class first appeared. The &lt;a href=&quot;#qmlabstract-command&quot;&gt;\qmlabstract&lt;/a&gt; command is for marking a QML type as an abstract base class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986cf194e083f94e80e1dc44834026007a1bf6eb" translate="yes" xml:space="preserve">
          <source>These commands enable creating lists and tables. A list is rendered left aligned as a separate paragraph. A table is rendered centered as a separate paragraph. The table width depends on the width of its contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672213fd8f3777cd1f5ad02d30197adf5298a8ba" translate="yes" xml:space="preserve">
          <source>These commands provide miscellaneous functions connected to the visual appearance of the documentation, and to the process of generating the documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f7c3d14adfae9ca384cc0dbadf4cde64699064" translate="yes" xml:space="preserve">
          <source>These components can be retrieved individually using the &lt;a href=&quot;qcolor#cyan&quot;&gt;cyan&lt;/a&gt;(), &lt;a href=&quot;qcolor#magenta&quot;&gt;magenta&lt;/a&gt;(), &lt;a href=&quot;qcolor#yellow&quot;&gt;yellow&lt;/a&gt;(), &lt;a href=&quot;qcolor#black&quot;&gt;black&lt;/a&gt;() and &lt;a href=&quot;qcolor#alpha&quot;&gt;alpha&lt;/a&gt;() functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703d3485e1be630169418b7459ceab26d092366f" translate="yes" xml:space="preserve">
          <source>These components can be retrieved individually using the &lt;a href=&quot;qcolor#cyanF&quot;&gt;cyanF&lt;/a&gt;(), &lt;a href=&quot;qcolor#magentaF&quot;&gt;magentaF&lt;/a&gt;(), &lt;a href=&quot;qcolor#yellowF&quot;&gt;yellowF&lt;/a&gt;(), &lt;a href=&quot;qcolor#blackF&quot;&gt;blackF&lt;/a&gt;() and &lt;a href=&quot;qcolor#alphaF&quot;&gt;alphaF&lt;/a&gt;() functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a14f05b38f1d80cd26eedfffd155e5571ab24e" translate="yes" xml:space="preserve">
          <source>These components can be retrieved individually using the &lt;a href=&quot;qcolor#hslHue&quot;&gt;hslHue&lt;/a&gt;(), &lt;a href=&quot;qcolor#hslSaturation&quot;&gt;hslSaturation&lt;/a&gt;(), &lt;a href=&quot;qcolor#lightness&quot;&gt;lightness&lt;/a&gt;() and &lt;a href=&quot;qcolor#alpha&quot;&gt;alpha&lt;/a&gt;() functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7725d3b413343f4bad9e28f9bf194c973a640165" translate="yes" xml:space="preserve">
          <source>These components can be retrieved individually using the &lt;a href=&quot;qcolor#hslHueF&quot;&gt;hslHueF&lt;/a&gt;(), &lt;a href=&quot;qcolor#hslSaturationF&quot;&gt;hslSaturationF&lt;/a&gt;(), &lt;a href=&quot;qcolor#lightnessF&quot;&gt;lightnessF&lt;/a&gt;() and &lt;a href=&quot;qcolor#alphaF&quot;&gt;alphaF&lt;/a&gt;() functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f766f58de4a4ed0a229035a24bb5aee6ec5a23" translate="yes" xml:space="preserve">
          <source>These components can be retrieved individually using the &lt;a href=&quot;qcolor#hue&quot;&gt;hue&lt;/a&gt;(), &lt;a href=&quot;qcolor#saturation&quot;&gt;saturation&lt;/a&gt;(), &lt;a href=&quot;qcolor#value&quot;&gt;value&lt;/a&gt;() and &lt;a href=&quot;qcolor#alpha&quot;&gt;alpha&lt;/a&gt;() functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2575ad270432c0fd83645a773818b0fd434132a4" translate="yes" xml:space="preserve">
          <source>These components can be retrieved individually using the &lt;a href=&quot;qcolor#hueF&quot;&gt;hueF&lt;/a&gt;(), &lt;a href=&quot;qcolor#saturationF&quot;&gt;saturationF&lt;/a&gt;(), &lt;a href=&quot;qcolor#valueF&quot;&gt;valueF&lt;/a&gt;() and &lt;a href=&quot;qcolor#alphaF&quot;&gt;alphaF&lt;/a&gt;() functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89459f3d087057ce0c16770122c00d5935933f84" translate="yes" xml:space="preserve">
          <source>These components can be retrieved individually using the &lt;a href=&quot;qcolor#red&quot;&gt;red&lt;/a&gt;(), &lt;a href=&quot;qcolor#green&quot;&gt;green&lt;/a&gt;(), &lt;a href=&quot;qcolor#blue&quot;&gt;blue&lt;/a&gt;() and &lt;a href=&quot;qcolor#alpha&quot;&gt;alpha&lt;/a&gt;() functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0134fe0f3feb00bbaffbb53217b7ee6323b313" translate="yes" xml:space="preserve">
          <source>These components can be retrieved individually using the &lt;a href=&quot;qcolor#redF&quot;&gt;redF&lt;/a&gt;(), &lt;a href=&quot;qcolor#greenF&quot;&gt;greenF&lt;/a&gt;(), &lt;a href=&quot;qcolor#blueF&quot;&gt;blueF&lt;/a&gt;() and &lt;a href=&quot;qcolor#alphaF&quot;&gt;alphaF&lt;/a&gt;() functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7120e247f4c18225f9191e3de8564d1efc34a6" translate="yes" xml:space="preserve">
          <source>These container classes are designed to be lighter, safer, and easier to use than the STL containers. If you are unfamiliar with the STL, or prefer to do things the &quot;Qt way&quot;, you can use these classes instead of the STL classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f377a44ed528eb222cc817000a2b60716497f14" translate="yes" xml:space="preserve">
          <source>These custom signals will be available in the &lt;a href=&quot;qsensorgesture&quot;&gt;QSensorGesture&lt;/a&gt; object at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0677f4a006971a8e27aae4a4f0772bb8c990e32" translate="yes" xml:space="preserve">
          <source>These default values are set if the Z value of the item is &lt;code&gt;0&lt;/code&gt;, so setting the Z value of these items to &lt;code&gt;0&lt;/code&gt; has no effect. Note that the Z value is of type &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;, so it is possible to set fractional values like &lt;code&gt;0.1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20515bac9d6ee02c2606e4a9831c47b9e0f759e" translate="yes" xml:space="preserve">
          <source>These digits and other symbols can be shown: 0/O, 1, 2, 3, 4, 5/S, 6, 7, 8, 9/g, minus, decimal point, A, B, C, D, E, F, h, H, L, o, P, r, u, U, Y, colon, degree sign (which is specified as single quote in the string) and space. &lt;a href=&quot;qlcdnumber&quot;&gt;QLCDNumber&lt;/a&gt; substitutes spaces for illegal characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6bd64a806c1ec7f5f13755850e287d30f54f2c" translate="yes" xml:space="preserve">
          <source>These elements either contain or group together other elements in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906a2533eff846cc2915894851fd9a076e7dab1b" translate="yes" xml:space="preserve">
          <source>These enum values are used for &lt;a href=&quot;qiconengine#virtual_hook&quot;&gt;virtual_hook&lt;/a&gt;() to allow additional queries to icon engine without breaking binary compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbe3592c7b0201a200034fb69198fd9becd8bc8" translate="yes" xml:space="preserve">
          <source>These enums describe flags for standard buttons. Each button has a defined &lt;a href=&quot;qdialogbuttonbox#ButtonRole-enum&quot;&gt;ButtonRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8679995ccff9a19c703c8b6d7976ea402286fc86" translate="yes" xml:space="preserve">
          <source>These enums describe flags for standard buttons. Each button has a defined &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;ButtonRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8633dd91f76a7180565b79b5b377d5f330e85c6e" translate="yes" xml:space="preserve">
          <source>These expressions may be used for formatting time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2126351c41a5544320c15720f19c3d110669258b" translate="yes" xml:space="preserve">
          <source>These expressions may be used for the date part of the format string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba5269511b52128d9b51bec15866003f23a6f94" translate="yes" xml:space="preserve">
          <source>These expressions may be used for the date:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d8f2cf76c9622df6d88285a9562da9aa6f223e" translate="yes" xml:space="preserve">
          <source>These expressions may be used for the format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9caf714a5dc72f834416aed4d1519b3487aa5777" translate="yes" xml:space="preserve">
          <source>These expressions may be used for the time part of the format string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463f87286b245a96fa1b157c09ce2ed1a44dec54" translate="yes" xml:space="preserve">
          <source>These expressions may be used for the time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a8a3928edca339ddd7472e4fc7a4f3e0e56109" translate="yes" xml:space="preserve">
          <source>These expressions may be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88908368e3bd7b407b78aa3e5a03e0cffdcd8bf6" translate="yes" xml:space="preserve">
          <source>These extension classes allow you to control how a widget's properties are displayed in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536ccb79d8929ddd0799e1f570b007fcaf7be76a" translate="yes" xml:space="preserve">
          <source>These files should be copied to the application bundle by adding something like the following code snippet to the .pro file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c09468cc438b0ff5aa6effaf4a3d4436971d51f" translate="yes" xml:space="preserve">
          <source>These flags allow the system to inform the application of network usage restrictions that may be in place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77832c13526f77c76dafeabc6a220413ac5a4e2" translate="yes" xml:space="preserve">
          <source>These flags are combined together to form the various &lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;Policy&lt;/a&gt; values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a48f73ba3dd30ef933ee159dba35f4d0c117938" translate="yes" xml:space="preserve">
          <source>These flags are defined in &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::AlignmentFlag&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e150ffc47cd763313ab69a91c5415c9598ded6cc" translate="yes" xml:space="preserve">
          <source>These flags are defined in the &lt;a href=&quot;qt#TextFlag-enum&quot;&gt;Qt::TextFlag&lt;/a&gt; enum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e308b86a685fe7c71d1a3934234271773e54321e" translate="yes" xml:space="preserve">
          <source>These flags can be passed to a &lt;a href=&quot;qtreewidgetitemiterator&quot;&gt;QTreeWidgetItemIterator&lt;/a&gt; constructor (OR-ed together if more than one is used), so that the iterator will only iterate over items that match the given flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed9be69b18d65cf9c1f9721057e0c7e7627347d" translate="yes" xml:space="preserve">
          <source>These flags indicate the capabilities that a given proxy server supports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f788bb18ec9383cd2082ef1967517397904db529" translate="yes" xml:space="preserve">
          <source>These flags indicate the corner widgets in a tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a472137cf50d0a5fcca222533f049b416e6f519" translate="yes" xml:space="preserve">
          <source>These following QML types are provided by framework to create event-driven state machines:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005ef922b28ebbf33b1fa70fa504c45f1d6cae08" translate="yes" xml:space="preserve">
          <source>These four functions must be implemented in all types of model, including list models (&lt;a href=&quot;qabstractlistmodel&quot;&gt;QAbstractListModel&lt;/a&gt; subclasses) and table models (&lt;a href=&quot;qabstracttablemodel&quot;&gt;QAbstractTableModel&lt;/a&gt; subclasses).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d495ec343a4027e2ad7d825ea88fdaa7dda1f032" translate="yes" xml:space="preserve">
          <source>These functions allow the programmer to move forward, backward or arbitrarily through the records returned by the query. If you only need to move forward through the results (e.g., by using &lt;a href=&quot;qsqlquery#next&quot;&gt;next&lt;/a&gt;()), you can use &lt;a href=&quot;qsqlquery#setForwardOnly&quot;&gt;setForwardOnly&lt;/a&gt;(), which will save a significant amount of memory overhead and improve performance on some databases. Once an active query is positioned on a valid record, data can be retrieved using &lt;a href=&quot;qsqlquery#value&quot;&gt;value&lt;/a&gt;(). All data is transferred from the SQL backend using QVariants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3867fbe32d8f412e424de96fe9ecc9bf2012e7" translate="yes" xml:space="preserve">
          <source>These functions are a part of the &lt;a href=&quot;qtconcurrent-index#&quot;&gt;Qt Concurrent&lt;/a&gt; framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b303a754153f1279cfceba75c457b16bf4370df" translate="yes" xml:space="preserve">
          <source>These functions enable the model to automatically insert new data using the existing implementation provided by &lt;a href=&quot;qabstractitemmodel#dropMimeData&quot;&gt;QAbstractItemModel::dropMimeData&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4371a44bc20835dc57b94b7bc1409aed4a3cd8e6" translate="yes" xml:space="preserve">
          <source>These functions return the value of the environment variable,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1722cd8ee3c54a8bd180a7d951800c50ea4088fa" translate="yes" xml:space="preserve">
          <source>These hints are used to initialize &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; before each visible item is drawn. &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; uses render hints to toggle rendering features such as antialiasing and smooth pixmap transformation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c32c1debc92b47b71891d90f8c0bb59d7ae0ccb" translate="yes" xml:space="preserve">
          <source>These hints let the delegate influence the behavior of the view:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04892184c344ffe4dfa569528eea86dfaae12cb8" translate="yes" xml:space="preserve">
          <source>These host objects and functions are always available, regardless of whether any modules have been imported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c9de429b6d9396a4354961d176a2cc34998912" translate="yes" xml:space="preserve">
          <source>These macros are useful for detecting program errors, e.g. like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf8a431324d993f34ba429c921f8aabe7317554" translate="yes" xml:space="preserve">
          <source>These named items are used as the delegates by the two views who reference the special &lt;a href=&quot;qml-qtqml-models-delegatemodel#parts-prop&quot;&gt;DelegateModel::parts&lt;/a&gt; property to select a model which provides the chosen delegate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d448d818b27e5d9d28fa673a6a66ff8a2efee0cc" translate="yes" xml:space="preserve">
          <source>These names are tested against the connected peer's host name, if either the subject information for &lt;a href=&quot;qsslcertificate#SubjectInfo-enum&quot;&gt;CommonName&lt;/a&gt; doesn't define a valid host name, or the subject info name doesn't match the peer's host name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ab2b31ee56628fcedb02b63026278b02a7cf6b" translate="yes" xml:space="preserve">
          <source>These objects can reimplement &lt;a href=&quot;qobject#event&quot;&gt;QObject::event&lt;/a&gt;(), the general event handler, and either do their event handling before or after the usual handling, or they can replace the function completely. A very unusual widget that both interprets Tab and has an application-specific custom event might contain the following &lt;a href=&quot;qobject#event&quot;&gt;event()&lt;/a&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc13bd4bb58708d65a7d0e617abad78c0e26fef" translate="yes" xml:space="preserve">
          <source>These operations are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93409dc85bbc46a8c892c902ae04cebd840df93c" translate="yes" xml:space="preserve">
          <source>These options define specific features on Windows only:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49d7d3f829c7d57ef9ab4fc45ebd6da6fbdf2cd" translate="yes" xml:space="preserve">
          <source>These options must be set before &lt;a href=&quot;qlocalserver#listen&quot;&gt;listen&lt;/a&gt;() is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a8d2be59d13acb10ebca09e16ac549b63644a3" translate="yes" xml:space="preserve">
          <source>These options only control how dock widgets may be dropped in a &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt;. They do not re-arrange the dock widgets to conform with the specified options. For this reason they should be set before any dock widgets are added to the main window. Exceptions to this are the AnimatedDocks and VerticalTabs options, which may be set at any time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d79f5ff083018705bf546f5419427a9a0f5209b" translate="yes" xml:space="preserve">
          <source>These pages contain suggestions for debugging under various circumstances:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788177a4f9c517a95a1770403efbfe55419221d0" translate="yes" xml:space="preserve">
          <source>These pages document Qt's API's for developing with ActiveX controls, servers, and COM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89275172cc7b6b596a5ce9d2c9f6ae8a4e6e72ee" translate="yes" xml:space="preserve">
          <source>These parameters describe key details of the route, such as &lt;a href=&quot;qml-qtlocation-routequery#waypoints-prop&quot;&gt;waypoints&lt;/a&gt; to pass through, &lt;a href=&quot;qml-qtlocation-routequery#excludedAreas-prop&quot;&gt;excludedAreas&lt;/a&gt; to avoid, the &lt;a href=&quot;qml-qtlocation-routequery#travelModes-prop&quot;&gt;travelModes&lt;/a&gt; in use, as well as detailed preferences on how to optimize the route and what features to prefer or avoid along the path (such as toll roads, highways, etc).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba3dd83fea235aa87483fa5467258219b9ce1df" translate="yes" xml:space="preserve">
          <source>These properties affect the position of the current item when the list is scrolled. For example, if the currently selected item should stay in the middle of the list when the view is scrolled, set the &lt;code&gt;preferredHighlightBegin&lt;/code&gt; and &lt;code&gt;preferredHighlightEnd&lt;/code&gt; values to the top and bottom coordinates of where the middle item would be. If the &lt;code&gt;currentItem&lt;/code&gt; is changed programmatically, the list will automatically scroll so that the current item is in the middle of the view. Furthermore, the behavior of the current item index will occur whether or not a highlight exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068dd613c06575bd1bec4aaf3c1d9a2330c43a37" translate="yes" xml:space="preserve">
          <source>These properties affect the position of the current item when the view is scrolled. For example, if the currently selected item should stay in the middle of the view when it is scrolled, set the &lt;code&gt;preferredHighlightBegin&lt;/code&gt; and &lt;code&gt;preferredHighlightEnd&lt;/code&gt; values to the top and bottom coordinates of where the middle item would be. If the &lt;code&gt;currentItem&lt;/code&gt; is changed programmatically, the view will automatically scroll so that the current item is in the middle of the view. Furthermore, the behavior of the current item index will occur whether or not a highlight exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613bb04f92aaf1d162fa45738f61624e547667b5" translate="yes" xml:space="preserve">
          <source>These properties allow the item to determine if it is the first or last item in the positioner, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fee39feddd32ca47fdcf8077cc6f5536043f45b" translate="yes" xml:space="preserve">
          <source>These properties are true if the flickable view is positioned at the beginning, or end respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387b8e088eaaf6dd2ae9eb657d259f79febab071" translate="yes" xml:space="preserve">
          <source>These properties are typically used to draw a scrollbar. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f843d9b05348ec729e3c903041a6e6beaa1ef9b8" translate="yes" xml:space="preserve">
          <source>These properties are used as a set to determine which properties should be animated. The singular and plural forms are functionally identical, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad01cfacd896d156291fd14a5d41ff0fdbffb6b" translate="yes" xml:space="preserve">
          <source>These properties can be combined to produce a variety of layouts, as shown in the table below. The GridViews in the first row all have a &lt;a href=&quot;qml-qtquick-gridview#flow-prop&quot;&gt;flow&lt;/a&gt; value of &lt;a href=&quot;qml-qtquick-gridview&quot;&gt;GridView&lt;/a&gt;.FlowLeftToRight, but use different combinations of horizontal and vertical layout directions (specified by &lt;a href=&quot;qml-qtquick-gridview#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-gridview#verticalLayoutDirection-prop&quot;&gt;verticalLayoutDirection&lt;/a&gt; respectively). Similarly, the GridViews in the second row below all have a &lt;a href=&quot;qml-qtquick-gridview#flow-prop&quot;&gt;flow&lt;/a&gt; value of &lt;a href=&quot;qml-qtquick-gridview&quot;&gt;GridView&lt;/a&gt;.FlowTopToBottom, but use different combinations of horizontal and vertical layout directions to lay out their items in different ways.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6062fd531ae7c9dd23c5b41a234c272bf304c3" translate="yes" xml:space="preserve">
          <source>These properties can be used to verify the purchase using the public key of your application. It is also possible to have the back-end verify the purchases by passing in the public key before registering products, using &lt;a href=&quot;qinappstore#setPlatformProperty&quot;&gt;QInAppStore::setPlatformProperty&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebbd891814c98f450281e30af812d04f1d4c6e8" translate="yes" xml:space="preserve">
          <source>These properties change the respective anchors of the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef9d643fec958aef9b60b77b0024489a3498e41d" translate="yes" xml:space="preserve">
          <source>These properties control the speed of the move and resize animations for the highlight delegate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509f34557bffb9fc6ecd125aa0ea835974662e2e" translate="yes" xml:space="preserve">
          <source>These properties define an offset in pixels for the blur direction center point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f9c71ea9e094ca3046831403468fdaa378c4ddd" translate="yes" xml:space="preserve">
          <source>These properties define the center and focal points. To specify a simple radial gradient, set &lt;a href=&quot;qml-qtquick-shapes-radialgradient#focalX-prop&quot;&gt;focalX&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-shapes-radialgradient#focalY-prop&quot;&gt;focalY&lt;/a&gt; to the value of &lt;a href=&quot;qml-qtquick-shapes-radialgradient#centerX-prop&quot;&gt;centerX&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-shapes-radialgradient#centerY-prop&quot;&gt;centerY&lt;/a&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e4ee1ca3b9ac28c0f08af24fd412216d6935a1" translate="yes" xml:space="preserve">
          <source>These properties define the center and focal radius. For simple radial gradients, &lt;a href=&quot;qml-qtquick-shapes-radialgradient#focalRadius-prop&quot;&gt;focalRadius&lt;/a&gt; should be set to &lt;code&gt;0&lt;/code&gt; (the default value).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687bc0283f13068c74be8d23e8fac85b90b6a99f" translate="yes" xml:space="preserve">
          <source>These properties define the center point of the conical gradient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7591c8a014dcef318e4d6b6a9891bc7f4f71047e" translate="yes" xml:space="preserve">
          <source>These properties define the offset in pixels for the perceived center point of the rotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183898c58a2885380827eefb77a9a805e68edca4" translate="yes" xml:space="preserve">
          <source>These properties define the preferred range of the highlight (for the current item) within the view. The &lt;code&gt;preferredHighlightBegin&lt;/code&gt; value must be less than the &lt;code&gt;preferredHighlightEnd&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b19da4e3fd86f10c0bdb60faeaefc8857e94dc43" translate="yes" xml:space="preserve">
          <source>These properties define the start and end points between which color interpolation occurs. By default both points are set to (0, 0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d192b1e0b99041cc3b4a0da5fe396069ef79eb3e" translate="yes" xml:space="preserve">
          <source>These properties describe the position and size of the currently viewed area. The size is defined as the percentage of the full view currently visible, scaled to 0.0 - 1.0. The page position is usually in the range 0.0 (beginning) to 1.0 minus size ratio (end), i.e. &lt;code&gt;yPosition&lt;/code&gt; is in the range 0.0 to 1.0-&lt;code&gt;heightRatio&lt;/code&gt;. However, it is possible for the contents to be dragged outside of the normal range, resulting in the page positions also being outside the normal range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1893f2f61826e2920339a342ddd235429dc93cf9" translate="yes" xml:space="preserve">
          <source>These properties describe whether the view is currently moving horizontally, vertically or in either direction, due to the user dragging the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2da088c1079d1069786406a6deb0a1f7555ab0d" translate="yes" xml:space="preserve">
          <source>These properties describe whether the view is currently moving horizontally, vertically or in either direction, due to the user either dragging or flicking the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebf44936028d634f6b8030ea5acf53db9220735" translate="yes" xml:space="preserve">
          <source>These properties describe whether the view is currently moving horizontally, vertically or in either direction, due to the user flicking the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2213d044b69c8a03f1153fdbff57d4258b01d07" translate="yes" xml:space="preserve">
          <source>These properties determine the expression to be evaluated and appearance of the section labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe822223980a30fec953d90d44c1c7b9f07661b5" translate="yes" xml:space="preserve">
          <source>These properties determine the items and their properties that are affected by this action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e245ca4131d03ec8ce39bc5203a0a65a3fa4cd" translate="yes" xml:space="preserve">
          <source>These properties determine the section labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe82e0c08fca407c17bbaeb560f3d292c16073a1" translate="yes" xml:space="preserve">
          <source>These properties have the same characteristics as a &lt;a href=&quot;qml-qtquick-smoothedanimation&quot;&gt;SmoothedAnimation&lt;/a&gt;: if both the velocity and duration are set, the animation will use whichever gives the shorter duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab3e8a88cabbad60dbc3418035d3c3970e2367d" translate="yes" xml:space="preserve">
          <source>These properties hold additional information about the current state of the touch point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f1513cd18657d6afc2e3f18a27f5899feda706" translate="yes" xml:space="preserve">
          <source>These properties hold the angle between the two touch points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e1dc17679aa6da53aa0ac30b07c756b190268f" translate="yes" xml:space="preserve">
          <source>These properties hold the coordinates of the last drag event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f522d9ac28b3a7baa6f04b8b7b8317c8ae47258c" translate="yes" xml:space="preserve">
          <source>These properties hold the coordinates of the mouse cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51624193d9e510295c15f18eebdc6fa27ea34d72" translate="yes" xml:space="preserve">
          <source>These properties hold the coordinates of the position supplied by the mouse event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545dfae1988dbb34c087c8f97e3bc0da2f00b197" translate="yes" xml:space="preserve">
          <source>These properties hold the coordinates of the position supplied by the wheel event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="904c6dbb3b412d344a3e49af622a631134c50192" translate="yes" xml:space="preserve">
          <source>These properties hold the current position of the touch point in scene coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d13146771d53ed050ad4bed3e6e6acd6043054" translate="yes" xml:space="preserve">
          <source>These properties hold the current position of the touch point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf038f12278a0b9e58bb4218309ebefc2a23cdf" translate="yes" xml:space="preserve">
          <source>These properties hold the currently selected name filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe2d48d7184bcbe26455f7c8703a587d0d90f00" translate="yes" xml:space="preserve">
          <source>These properties hold the down indicator item and whether it is pressed or hovered. The &lt;code&gt;down.hovered&lt;/code&gt; property was introduced in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 2.1, and the &lt;code&gt;down.implicitIndicatorWidth&lt;/code&gt; and &lt;code&gt;down.implicitIndicatorHeight&lt;/code&gt; properties were introduced in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 2.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e0a2154ec919b48395f57010c66737d0045ea4" translate="yes" xml:space="preserve">
          <source>These properties hold the margins around the content. This space is reserved in addition to the &lt;a href=&quot;qml-qtquick-flickable#contentWidth-prop&quot;&gt;contentWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-flickable#contentHeight-prop&quot;&gt;contentHeight&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b92cea23b392e38e8a222c2efb5a489ef9e825" translate="yes" xml:space="preserve">
          <source>These properties hold the meta data for the camera captures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f016644d8409e40deae89aa8c5ddf5b5abcfcdb6" translate="yes" xml:space="preserve">
          <source>These properties hold the meta data for the current media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046c2daded8710f169e37cb0cba1723bde963253" translate="yes" xml:space="preserve">
          <source>These properties hold the new position, size, scale, and rotation for the item in this state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059751150b938e65f6610c77a960805eb9089558" translate="yes" xml:space="preserve">
          <source>These properties hold the origin of the content. This value always refers to the top-left position of the content regardless of layout direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf044656f9c68cb567e916624c0208231d6c515" translate="yes" xml:space="preserve">
          <source>These properties hold the padding around the content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7beafa66a84349e9dd34f7843cb3a074e9b7c1bd" translate="yes" xml:space="preserve">
          <source>These properties hold the padding around the content. This space is reserved in addition to the &lt;a href=&quot;qml-qtquick-text#contentWidth-prop&quot;&gt;contentWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-text#contentHeight-prop&quot;&gt;contentHeight&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b8ec907475aa1457c8f4f29a6dda812e8677fc" translate="yes" xml:space="preserve">
          <source>These properties hold the padding around the content. This space is reserved in addition to the &lt;a href=&quot;qml-qtquick-textedit#contentWidth-prop&quot;&gt;contentWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-textedit#contentHeight-prop&quot;&gt;contentHeight&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8ac44710bfef267dd59e669b6f941fd7bdfc82" translate="yes" xml:space="preserve">
          <source>These properties hold the padding around the content. This space is reserved in addition to the &lt;a href=&quot;qml-qtquick-textinput#contentWidth-prop&quot;&gt;contentWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-textinput#contentHeight-prop&quot;&gt;contentHeight&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f53c022246f66baffc463540c57c479ac07f0fab" translate="yes" xml:space="preserve">
          <source>These properties hold the position of the center point between the two touch points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f88ab961d6da11386e865005711b94e8c965ad" translate="yes" xml:space="preserve">
          <source>These properties hold the position of the path at &lt;a href=&quot;qml-qtquick-pathinterpolator#progress-prop&quot;&gt;progress&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6244621681cd3806438a2fc80470c0166db8efa" translate="yes" xml:space="preserve">
          <source>These properties hold the previous position of the touch point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273ce93ccb242ebf555aac2df66d27ccf32eefe2" translate="yes" xml:space="preserve">
          <source>These properties hold the range of touch points to be handled by the touch area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6887569dd85c0d9e391c66d976ff156370569c2" translate="yes" xml:space="preserve">
          <source>These properties hold the scale factor determined by the change in distance between the two touch points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f4d2d69ce0ce98e72a8f7b2897fda7120c5fa1" translate="yes" xml:space="preserve">
          <source>These properties hold the size of the image that is actually painted. In most cases it is the same as &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;, but when using an &lt;a href=&quot;qml-qtquick-image#fillMode-prop&quot;&gt;Image.PreserveAspectFit&lt;/a&gt; or an &lt;a href=&quot;qml-qtquick-image#fillMode-prop&quot;&gt;Image.PreserveAspectCrop&lt;/a&gt;&lt;code&gt;paintedWidth&lt;/code&gt; or &lt;code&gt;paintedHeight&lt;/code&gt; can be smaller or larger than &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; of the Image item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16cc2d90dc6ef5e1507f43c032ca8caf30f87a01" translate="yes" xml:space="preserve">
          <source>These properties hold the starting position of the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8573d2425983fb9577f12baa1e5a749e754766c3" translate="yes" xml:space="preserve">
          <source>These properties hold the starting position of the touch point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d84e77a91262558a0b9c2ea07b17ffb74ca609" translate="yes" xml:space="preserve">
          <source>These properties hold the surface coordinate currently at the top-left corner of the Flickable. For example, if you flick an image up 100 pixels, &lt;code&gt;contentY&lt;/code&gt; will increase by 100.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0918084e37142ee42c2484a1a9947f4e6d736821" translate="yes" xml:space="preserve">
          <source>These properties hold the up indicator item and whether it is pressed or hovered. The &lt;code&gt;up.hovered&lt;/code&gt; property was introduced in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 2.1, and the &lt;code&gt;up.implicitIndicatorWidth&lt;/code&gt; and &lt;code&gt;up.implicitIndicatorHeight&lt;/code&gt; properties were introduced in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 2.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08f622d2637fb6346acebfa76507e42394fd5bf" translate="yes" xml:space="preserve">
          <source>These properties hold the viewfinder settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa15ca457cb84781aba3745887641daa8277c913" translate="yes" xml:space="preserve">
          <source>These properties holds the width and height of each cell in the grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513a7231a8f938d9da19656294bba0fd5c1f7a93" translate="yes" xml:space="preserve">
          <source>These properties indicate the state changes that trigger the transition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367b3e579d4472bfe836e7d210d0a63af4966da9" translate="yes" xml:space="preserve">
          <source>These properties provide the actual touch points generating the pinch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d503832216c8cd8cde56aa8f8ed0af549a79217e" translate="yes" xml:space="preserve">
          <source>These properties reflect the state and possible values for the elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5677acd14d4423d7f18b3e5a8df4e230820c940e" translate="yes" xml:space="preserve">
          <source>These properties set the preferred range of the highlight (current item) within the view. The preferred values must be in the range 0.0-1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199d28d57a336666d7d1570fe84de5f471d6332d" translate="yes" xml:space="preserve">
          <source>These provide various hints for the item; for example, the &lt;a href=&quot;qquickitem#Flag-enum&quot;&gt;ItemClipsChildrenToShape&lt;/a&gt; flag indicates that all children of this item should be clipped to fit within the item area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7da6e3a4ef5e05a5885b28a06af745e2c6e472" translate="yes" xml:space="preserve">
          <source>These quantities provide sensible default values that are compliant with the underlying windowing system for you to use if you provide drag and drop support in your controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539d8e3d911b8b55281960d236f952092047007e" translate="yes" xml:space="preserve">
          <source>These read-only properties are part of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1caaf98aae0a87c4ac1d3ce193359fad000ff8b" translate="yes" xml:space="preserve">
          <source>These read-only properties hold the actual touch points generating the pinch. The points are not in any particular order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f51f7ded64b818d0e545981b54fd11993db8d3" translate="yes" xml:space="preserve">
          <source>These sections are from &lt;a href=&quot;qmlreference#&quot;&gt;The QML Reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e53e578dde7bf38e79473016349ec340d663f3a" translate="yes" xml:space="preserve">
          <source>These selectors have priority over any which have been automatically picked up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70caac7e153be0013b07c833fbd1fcc246ecb2b5" translate="yes" xml:space="preserve">
          <source>These sequence types are implemented directly in terms of the underlying C++ sequence. There are two ways in which such sequences can be exposed to QML: as a &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt; of the given sequence type; or as the return type of a &lt;a href=&quot;qobject#Q_INVOKABLE&quot;&gt;Q_INVOKABLE&lt;/a&gt; method. There are some differences in the way these are implemented, which are important to note.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b141b8fe9bff277476af63eb440ec95bb5a6f794" translate="yes" xml:space="preserve">
          <source>These settings are applied only during the connection handshake. Setting them after the connection has been established has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8cda5edf3f5b20859a78914b92c091e28934ce4" translate="yes" xml:space="preserve">
          <source>These settings are provided by the platform/audio plugin being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f4093e38f35189344a3774ccd94cddff7ab01c" translate="yes" xml:space="preserve">
          <source>These signals could be received by any &lt;code&gt;SquareButton&lt;/code&gt; objects in another QML file in the same directory, where implementations for the signal handlers are provided by the client:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8969bc8515c055572cd1f9a8bf5b5544f1ce5a8c" translate="yes" xml:space="preserve">
          <source>These standard applications work with ActiveX controls developed with &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt;. Note that some clients support only in-process controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71e2636570d864def893981014a86ec686422e4" translate="yes" xml:space="preserve">
          <source>These synchronization classes can be used to make a method thread safe. However, doing so incurs a performance penalty, which is why most Qt methods are not made thread safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e850f77b29120449e0477f507321dd3760138e4" translate="yes" xml:space="preserve">
          <source>These systems allow the application developers to create applications which use external authentication servers provided by an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89e34871d63fccce4954eba888af7136ab7f63f" translate="yes" xml:space="preserve">
          <source>These tests are followed all the way up the parent window chain until one of the above rules is satisfied. If all else fails, a default menu bar will be created. The default menu bar on Qt is an empty menu bar. However, you can create a different default menu bar by creating a parentless &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;. The first one created will be designated the default menu bar and will be used whenever a default menu bar is needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8025440dba8745872cc7fd8a989360783f463238" translate="yes" xml:space="preserve">
          <source>These three states require some explanation. An &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Invalid&lt;/a&gt; string is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abb47b4168f0f9e4581ed1face6d3fc487dd6ef" translate="yes" xml:space="preserve">
          <source>These touch points will be owned by the item until they are released. Alternatively, the grab can be stolen by a filtering item like Flickable. Use &lt;a href=&quot;qquickitem#setKeepTouchGrab&quot;&gt;setKeepTouchGrab&lt;/a&gt;() to prevent the grab from being stolen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df2d7a27c4eefc59c3102b4d30368544d69e2f6" translate="yes" xml:space="preserve">
          <source>These two files can be converted into the &lt;code&gt;bdic&lt;/code&gt; format by using the &lt;code&gt;qwebengine_convert_dict&lt;/code&gt; tool that is shipped together with Qt. When the Qt WebEngine spellchecker initializes, it will try to load the &lt;code&gt;bdict&lt;/code&gt; dictionaries and to check them for consistency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47051174f968272b4ce5a8f845e1237b249ec488" translate="yes" xml:space="preserve">
          <source>These types are used by &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; to trigger lazy updates of the various states in the &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; using &lt;a href=&quot;qpaintengine#updateState&quot;&gt;QPaintEngine::updateState&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4506857f330d92fe4496650b59d9ffd2762f929" translate="yes" xml:space="preserve">
          <source>These types are used to access and modify contact details in &lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt; via:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3057736aba07f75cf33d21e9a9dc749fe101cc" translate="yes" xml:space="preserve">
          <source>These types have properties and behaviors exclusive to each type. Visit their respective documentation for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b60775ddf853b57e04dddd68f895be464adcd7c9" translate="yes" xml:space="preserve">
          <source>These values correspond the &lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;Color roles&lt;/a&gt; in the widget's &lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30e102e427bdcc90a36b8c47351febd09fbb3c1" translate="yes" xml:space="preserve">
          <source>These values will be used in combination with &lt;a href=&quot;qgeorouterequest#FeatureWeight-enum&quot;&gt;QGeoRouteRequest::FeatureWeight&lt;/a&gt; to determine if they should or should not be part of the route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828087dea39963054a7dd19b405e9eaebe73a598" translate="yes" xml:space="preserve">
          <source>These values will be used in combination with QGeoRouteRequest::Feature to determine if they should or should not be part of the route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccf3304a13283511b2f398a3f8a0db5bec82602" translate="yes" xml:space="preserve">
          <source>These variables are handled internally by qmake and should not be modified or utilized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bcc08dd44e61335da2123cad672ae537870559c" translate="yes" xml:space="preserve">
          <source>These variables specify all the OpenGL libraries for OpenGL ES 1 and OpenGL ES 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d8ba840e3b0b794b2349130b3e7efd236b8ad6" translate="yes" xml:space="preserve">
          <source>They are a unique string identifier for the audio device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d372ffa5cbb0bfd02fb5b9a733b1df168a3a4de" translate="yes" xml:space="preserve">
          <source>They are also dependent on the &lt;a href=&quot;qaudio&quot;&gt;QAudio&lt;/a&gt;::Mode being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9835933259591d56cd4dfd646d666bfcc3f4888e" translate="yes" xml:space="preserve">
          <source>They are also possibly backed by a true hardware random number generator. For that reason, the &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; returned by this function should not be used for bulk data generation. Instead, use it to seed &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; or a random engine from the &amp;lt;random&amp;gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08126ce8db3121a758be60555089e88ec329070d" translate="yes" xml:space="preserve">
          <source>They can also be constructed without a parent list widget and added to a list at some later time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a034b39648d0e032eb53199fc2d32342bcdbe7fd" translate="yes" xml:space="preserve">
          <source>They influence the reporting behavior in the following way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05eec8b88ddc4c2e607ac4bf66eac7cd6804a007" translate="yes" xml:space="preserve">
          <source>They may be useful when emulating language features in C++ requires the use of specialized exception types. In addition, they may help to more clearly communicate certain typical conditions, instead of throwing a generic JavaScript exception. For example, code that deals with networking and resource locators may find it useful to propagate errors related to malformed locators using the URIError type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab8eafcd55c6e3c9fa6ae9e3e0883fa51d52886" translate="yes" xml:space="preserve">
          <source>Thickness of the slider handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae906421fbbd523983b43ab126e552b6b89a8fcb" translate="yes" xml:space="preserve">
          <source>Thin wrapper around QString substrings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809f9927f9aa8b3b42beead968cc49eb08d6e4fd" translate="yes" xml:space="preserve">
          <source>Thin wrapper around an US-ASCII/Latin-1 encoded string literal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515a9ca12ac81890350bbebc1c6f7b394d464153" translate="yes" xml:space="preserve">
          <source>Things to avoid in binding expressions to maximize optimizability:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38bececb7f2d3243e5eac8ee94b4452e6c0dcbe5" translate="yes" xml:space="preserve">
          <source>Think of a path expression as an algorithm for traversing an XML tree to find and collect items of interest. This algorithm is evaluated by evaluating each step moving from left to right through the sequence. A step is evaluated with a set of input items (nodes and atomic values), sometimes called the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2687c8413b1aeba2255a42b97ecef48073a716c7" translate="yes" xml:space="preserve">
          <source>Third Party Libraries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f477d83985c6ce811f56e3d0d3c522be83f29151" translate="yes" xml:space="preserve">
          <source>Third-Party Libraries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3f7cc351d36204b32513e32bd1744353b84a52" translate="yes" xml:space="preserve">
          <source>Third-party Plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7971e6a051104074fdae0f02322417b6eb5695a2" translate="yes" xml:space="preserve">
          <source>This</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6b2f70babeff83400e19f2f1fb672cd7243acc" translate="yes" xml:space="preserve">
          <source>This &quot;torn-off&quot; copy lives in a separate window. It contains the same menu items as the original menu, with the exception of the tear-off handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f991cc9706ed5cef5e3b678741c063dbb33aab9b" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent&lt;/a&gt; has no data. Call &lt;a href=&quot;qqmlcomponent#loadUrl&quot;&gt;loadUrl&lt;/a&gt;() or &lt;a href=&quot;qqmlcomponent#setData&quot;&gt;setData&lt;/a&gt;() to add QML content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dee241c04dfd5e7a526530bad49cb323898fa04" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent&lt;/a&gt; is loading network data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2b1fdf303a622214e2c6ce70b733b441962b04" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent&lt;/a&gt; is ready and &lt;a href=&quot;qqmlcomponent#create&quot;&gt;create&lt;/a&gt;() may be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7970271403db4c12ebb284aca3033ec4cb9d7166" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; has loaded and created the QML component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773fb473225de8a53900e0e3c915ce8386350611" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; has no source set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67f526416533ff132f44542d0fbd51f4639bc47" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; is loading network data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b031938e427f19b0d2466faf51b6b84105d80f" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt; has loaded and created the QML component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333ed516c530f651bf46c741de78391758c73887" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt; has no source set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515811ce0cbf1879f433f99a020bdac2939faf8e" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt; is loading network data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b229b145c5fc8bda0a4caaccd956c3b15e0b6889" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;qstackedlayout&quot;&gt;QStackedLayout&lt;/a&gt; must be installed on a widget later on to become effective.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9889f546d6665c2a556e6fb08ee8721bcab0ec4" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; is a single path expression composed of three steps. The first step creates the initial focus by calling the &lt;code&gt;doc()&lt;/code&gt; function. We can paraphrase what the query engine does at each step:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225b5991f482b6fcc85ff36b001379df68b7b0ae" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;&amp;lt;recipe/&amp;gt;&lt;/code&gt; element is an &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; expression that forms a complete &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;. In fact, this &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; doesn't actually query anything. It just creates an empty &lt;code&gt;&amp;lt;recipe/&amp;gt;&lt;/code&gt; element in the output. But &lt;a href=&quot;#constructing-elements&quot;&gt;constructing new elements in an XQuery&lt;/a&gt; is often necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069566faa74424ab740ec3ba65dfb981d856bdbf" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;currentDateTime&lt;/code&gt; value can be set directly by the C++ application that loads the QML component, using &lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext::setContextProperty&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87fa2e4d4ad97a98a2eba4451dde1c57bf67f251" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;examplesinstallpath&lt;/code&gt; variable indicates that the examples will be installed in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0164c5a6e39474204427eca2b23a31deed6172b8" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;object&lt;/code&gt; is the instance of the &lt;code&gt;MyItem.qml&lt;/code&gt; component that has been created. You can now modify the item's properties using &lt;a href=&quot;qobject#setProperty&quot;&gt;QObject::setProperty&lt;/a&gt;() or &lt;a href=&quot;qqmlproperty#write&quot;&gt;QQmlProperty::write&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0593a0ab5c56cb5b0f38159b08ff1460e5a6bbaa" translate="yes" xml:space="preserve">
          <source>This API does not provide support for management of network configurations themselves. It is up to the platform to provide infrastructure which enables to user to create, edit or delete network configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5467a8fe78349311a667110281f04e6e88d80212" translate="yes" xml:space="preserve">
          <source>This API doesn't actually make sense, since there may be many pointer resources per client It's here for compatibility reasons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e496564872f666239867ae20cced730f43f01d" translate="yes" xml:space="preserve">
          <source>This API supports two types of roaming. Application level roaming (ALR) provides the most control over the process. Applications will be notified about upcoming link layer changes and get the opportunity to test the new access point. Eventually they can reject or accept the link layer change. The second form of roaming is referred to as Forced Roaming. The system simply changes the link layer without consulting the application. It is up to the application to detect that some of its internal socket may have become invalid. As a consequence it has to reinitialize those sockets and reestablish the previous user session without any interruption. Forced roaming has the advantage that applications don't have to manage the entire roaming process by themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b031ad5d360b525dc1a9279cb458b3c2dce36d3f" translate="yes" xml:space="preserve">
          <source>This Component paints the corner area between scroll bars</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9562bcdc4134eb407edadf3999f7236b473774" translate="yes" xml:space="preserve">
          <source>This Component paints the frame around scroll bars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22788cb805fd8e0382afb7652c8022d0e828dad" translate="yes" xml:space="preserve">
          <source>This FunctionFlags enum describes formatting for function introspection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af8435d8c6b984576c5427c353ee2f6e5ffe1eb" translate="yes" xml:space="preserve">
          <source>This QDoc comment will only be rendered if the &lt;code&gt;opensourceedition&lt;/code&gt; preprocessor symbol is defined, and specified in the &lt;a href=&quot;22-qdoc-configuration-generalvariables#defines-variable&quot;&gt;defines&lt;/a&gt; variable in the configuration file to make QDoc process the code within #ifdef and #endif:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd02a2746522524899d200dfba80d011ec496bfe" translate="yes" xml:space="preserve">
          <source>This QML document can be loaded with &lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent&lt;/a&gt; or &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; with the following C++ code. Using a &lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent&lt;/a&gt; requires calling &lt;a href=&quot;qqmlcomponent#create&quot;&gt;QQmlComponent::create&lt;/a&gt;() to create a new instance of the component, while a &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; automatically creates an instance of the component, which is accessible via &lt;a href=&quot;qquickview#rootObject&quot;&gt;QQuickView::rootObject&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4e43106d49c902e5d9293c1ddb4af95b678b71" translate="yes" xml:space="preserve">
          <source>This QML method was introduced in Qt 5.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599b52d3bd201d6b0d3ac8907f219f782343d9e7" translate="yes" xml:space="preserve">
          <source>This QML property was introduced by Qt 5.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a0356115acbae76400dbd64da54f884e811045" translate="yes" xml:space="preserve">
          <source>This QML type contains information about a certificate error that occurred. The &lt;a href=&quot;qml-qtwebengine-webenginecertificateerror#error-prop&quot;&gt;error&lt;/a&gt; property holds the reason that the error occurred and the &lt;a href=&quot;qml-qtwebengine-webenginecertificateerror#description-prop&quot;&gt;description&lt;/a&gt; property holds a short localized description of the error. The &lt;a href=&quot;qml-qtwebengine-webenginecertificateerror#url-prop&quot;&gt;url&lt;/a&gt; property holds the URL that triggered the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af452aab3d8b9a49440be9cf3175cce253ec8043" translate="yes" xml:space="preserve">
          <source>This XML file has to be added to the root directory of the application resources and named &lt;b&gt;QtStoreSimulation.xml&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63255a49405cf3828371a41cd3cf1577b34b037" translate="yes" xml:space="preserve">
          <source>This XML reader is suitable for a wide range of applications. It is able to parse well-formed XML and can report the namespaces of elements to a content handler; however, it does not parse any external entities. For historical reasons, Attribute Value Normalization and End-of-Line Handling as described in the XML 1.0 specification is not performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0538467b24f9c1868d0a977787c603ad5de468cd" translate="yes" xml:space="preserve">
          <source>This abstract class implements some of the widget's look and feel that is common to all GUI styles provided and shipped as part of Qt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d98c62bfce49f0c7ff9b2f1a23861934ebed4f4" translate="yes" xml:space="preserve">
          <source>This abstract class provides an interface for all of Qt's XML readers. Currently there is only one implementation of a reader included in Qt's XML module: &lt;a href=&quot;qxmlsimplereader&quot;&gt;QXmlSimpleReader&lt;/a&gt;. In future releases there might be more readers with different properties available (e.g. a validating parser).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3939dcc5128a3ef59a98164d10975bcd2cc464fc" translate="yes" xml:space="preserve">
          <source>This accounts for 99% of the user-visible strings you're likely to write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44788107f8295c8f37c17ee78069a2a2b5ac78c" translate="yes" xml:space="preserve">
          <source>This action handles the &quot;About Qt&quot; menu item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6ff050602d06c11587839ee0b89803ea598dc4" translate="yes" xml:space="preserve">
          <source>This action should be placed where the &quot;About&quot; menu item is in the application menu. The text of the menu item will be set to &quot;About &amp;lt;application name&amp;gt;&quot;. The application name is fetched from the &lt;code&gt;Info.plist&lt;/code&gt; file in the application's bundle (See &lt;a href=&quot;https://doc.qt.io/qt-5.13/macos-deployment.html&quot;&gt;Qt for macOS - Deployment&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47bb9468e96a0385537639e65dd87d51a2f3a66" translate="yes" xml:space="preserve">
          <source>This action should be placed where the &quot;Preferences...&quot; menu item is in the application menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f9a781bf56f5f977325d2b603baf203d5ffa3b" translate="yes" xml:space="preserve">
          <source>This action should be placed where the Quit menu item is in the application menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54113af05dd2a41a9781319ebfde6c2d32da5c13" translate="yes" xml:space="preserve">
          <source>This action should be put in the application menu based on the action's text as described in the &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d659539e510e1756e777a72341f4014e63cfba6a" translate="yes" xml:space="preserve">
          <source>This action should be put in the application menu with an application specific role</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a486a200ce1b15361e7f000152a48eb5fab0e823" translate="yes" xml:space="preserve">
          <source>This action should not be put into the application menu</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415d92907cfb2c0fc37b7a864477433ba6b8affa" translate="yes" xml:space="preserve">
          <source>This adaptation also allows better integration with Windows, as Direct3D is the primary vendor-supported solution. Consequently, there are fewer problems anticipated with drivers, operations like window resizes, and special events like graphics device loss caused by device resets or graphics driver updates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad9d5e57262d730c51f38c770b4db8debddb6dd" translate="yes" xml:space="preserve">
          <source>This address is eligible for publication in DNS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a411d014dec236ca3583ddf0ad47f4911404edd" translate="yes" xml:space="preserve">
          <source>This address should not be published in DNS and should not be transmitted to other parties, except maybe as the source address of an outgoing packet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68bfbb6292b53f86e1f40fbadbe409371d4009ae" translate="yes" xml:space="preserve">
          <source>This adds the current directory to the import path so that &lt;code&gt;qmlscene&lt;/code&gt; will find the plugin in the &lt;code&gt;imports&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f0b8ae3ae86cbfdae0e6cd2eae04e5ba9fc9a6" translate="yes" xml:space="preserve">
          <source>This adds the specified height between lines (in pixels).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3a7b76f318ec5d783a1cb135351773de47caab" translate="yes" xml:space="preserve">
          <source>This affects the locations into which test programs might write files: &lt;a href=&quot;qstandardpaths#StandardLocation-enum&quot;&gt;GenericDataLocation&lt;/a&gt;, &lt;a href=&quot;qstandardpaths#StandardLocation-enum&quot;&gt;DataLocation&lt;/a&gt;, &lt;a href=&quot;qstandardpaths#StandardLocation-enum&quot;&gt;ConfigLocation&lt;/a&gt;, &lt;a href=&quot;qstandardpaths#StandardLocation-enum&quot;&gt;GenericConfigLocation&lt;/a&gt;, &lt;a href=&quot;qstandardpaths#StandardLocation-enum&quot;&gt;AppConfigLocation&lt;/a&gt;, &lt;a href=&quot;qstandardpaths#StandardLocation-enum&quot;&gt;GenericCacheLocation&lt;/a&gt;, &lt;a href=&quot;qstandardpaths#StandardLocation-enum&quot;&gt;CacheLocation&lt;/a&gt;. Other locations are not affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af08690cb3e2f59ebf88b4f250b5347162c349ab" translate="yes" xml:space="preserve">
          <source>This allows a C++ application to locate an item within a QML component using the &lt;a href=&quot;qobject#findChild&quot;&gt;QObject::findChild()&lt;/a&gt; method. For example, the following C++ application locates the child &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; item and dynamically changes its &lt;code&gt;color&lt;/code&gt; value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75900a60637f3d47770ce0ac25a9a4002667e9e2" translate="yes" xml:space="preserve">
          <source>This allows expressions for multiple operating systems to be joined with a logical OR operator and still work as expected. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63aeea295f2bd30337201a3735dc7522fef5dad" translate="yes" xml:space="preserve">
          <source>This allows the Makefile to be processed using the default rule:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43f225bbe906ae56dadd3f0fbb12b4799b01bf4" translate="yes" xml:space="preserve">
          <source>This allows the path to reuse previous memory allocations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60eb0fe5371ce2731ded6e9a8d412a0c71368228" translate="yes" xml:space="preserve">
          <source>This allows the plugin to access &lt;a href=&quot;qvirtualkeyboardinputcontext&quot;&gt;QVirtualKeyboardInputContext&lt;/a&gt; and other interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d796c69cbfcaa15ba1a5a2eadb7a70316f12926" translate="yes" xml:space="preserve">
          <source>This allows the test to find its testdata regardless of whether the test has been installed, and regardless of whether the test's build tree is equal to the test's source tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6336a7894b716e49eacfd89e75a07b17b6712c4" translate="yes" xml:space="preserve">
          <source>This allows to pre-select &quot;tar.bz2&quot; for foo.tar.bz2, but still only &quot;txt&quot; for my.file.with.dots.txt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0507588c15fa519cd3d29ba44f719fc250974312" translate="yes" xml:space="preserve">
          <source>This allows you to produce universal applications with valid LaunchImages as required by the Apple App Store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25026a1af444cff3aa15853708bcb9a4e36c1a96" translate="yes" xml:space="preserve">
          <source>This also allows providing filters in QML plugins, separately from the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="671a0c7ffcfecfe8a310ef2c179e3134c57a8ab5" translate="yes" xml:space="preserve">
          <source>This also disables auto detecting the image format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57367d049748dac8c8148e6f82b4faba6b3625c4" translate="yes" xml:space="preserve">
          <source>This also provides a way to change the data in the case where a source model is supplied by a third party which cannot be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e221083c27b4635cd87eae6ed02edac881ddb6" translate="yes" xml:space="preserve">
          <source>This also sets the variable QMAKE_CONFIG_TESTS_DIR to the &lt;code&gt;config.tests&lt;/code&gt; subdirectory of the project's parent directory. It is possible to override this value after loading the feature file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2189cd93fd4bf3b4c9cd095ceb2d92e87c9bed0" translate="yes" xml:space="preserve">
          <source>This alters the text to be rendered in all lowercase type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b8fe269964e5adb682f85e2adc7ffde9512fe7" translate="yes" xml:space="preserve">
          <source>This alters the text to be rendered in all uppercase type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69e860fc4bd0a8131d4520cbd2166099bd0151b" translate="yes" xml:space="preserve">
          <source>This alters the text to be rendered in small-caps type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba3a1f1a168eedd50f671d646ba9111c2f4ab28" translate="yes" xml:space="preserve">
          <source>This alters the text to be rendered with the first character of each word as an uppercase character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08991d73b6ee86bb8c689b94ab709c649a9e598f" translate="yes" xml:space="preserve">
          <source>This animates newly added items along a path. Notice that each path is specified relative to each item's final destination point, so that items inserted at different indexes start their paths from different positions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74fcdf33fdc5975c97028fef6a8b5f521a30cec5" translate="yes" xml:space="preserve">
          <source>This appends the two new columns as columns 6, 7, and 8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef20314898c0442734bbe4791f1c80adc69e45fc" translate="yes" xml:space="preserve">
          <source>This appends the two new rows as rows 4 and 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9eabb7c94e78368470abcb78e1e9e9da59b3e1" translate="yes" xml:space="preserve">
          <source>This application implements a generic test container for ActiveX controls. You can insert ActiveX controls installed on your system, and execute methods and modify properties. The container will log information about events and property changes as well as debug output in the log window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e025a7ed2dd03ef6d17c17652e19c5b15c1efe1" translate="yes" xml:space="preserve">
          <source>This application object must be constructed before any &lt;a href=&quot;qpaintdevice&quot;&gt;paint devices&lt;/a&gt; (including pixmaps, bitmaps etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59196c44599233bedea3336229cb6368dd4fa45" translate="yes" xml:space="preserve">
          <source>This application object must be constructed before any &lt;a href=&quot;qpaintdevice&quot;&gt;paint devices&lt;/a&gt; (including widgets, pixmaps, bitmaps etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca1cbd8e25d29cc43040b881124930b5798e336" translate="yes" xml:space="preserve">
          <source>This applies to &lt;a href=&quot;qtqml-typesystem-objecttypes#defining-object-types-from-qml&quot;&gt;custom QML types&lt;/a&gt; as well. If a QML type was defined in a file named &lt;code&gt;ColorfulButton.qml&lt;/code&gt; (in a directory which was then imported by the client), then a property of type &lt;code&gt;ColorfulButton&lt;/code&gt; would also be valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f047cbda25997b64514e7b1c3a2e984e2fa4e6" translate="yes" xml:space="preserve">
          <source>This approach can prove to be a significant performance gain as only a single file will be loaded, and pieces of data will be given out via the path requested in &lt;a href=&quot;qresource#setFileName&quot;&gt;setFileName&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5674e97dc321670a81a71ff1ee9ce3c4f14f9354" translate="yes" xml:space="preserve">
          <source>This approach is convenient for applications that depend on a limited number of resources. However, whenever a new file is added to &lt;code&gt;RESOURCES&lt;/code&gt; using this approach, it causes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f693a86f43ba81055a9472180c62566405ada5e5" translate="yes" xml:space="preserve">
          <source>This approach is different from rendering shapes via &lt;a href=&quot;qquickpainteditem&quot;&gt;QQuickPaintedItem&lt;/a&gt; or the 2D Canvas because the path never gets rasterized in software. Therefore Shape is suitable for creating shapes spreading over larger areas of the screen, avoiding the performance penalty for texture uploads or framebuffer blits. In addition, the declarative API allows manipulating, binding to, and even animating the path element properties like starting and ending position, the control points, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8fd54e345c47cda865945832ee09795e54e512" translate="yes" xml:space="preserve">
          <source>This approach is used in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-calculatorform-example.html#&quot;&gt;Calculator Form&lt;/a&gt; example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b67e400d24f114b7e9a13fbd4fc6a40cbd036f" translate="yes" xml:space="preserve">
          <source>This approach is used in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtuitools-multipleinheritance-example.html&quot;&gt;Multiple Inheritance&lt;/a&gt; example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcad5a01155f390d7bcafa90b9538759eb271e6c" translate="yes" xml:space="preserve">
          <source>This attached method hides the shared tooltip. The method can be attached to any item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6932377f2e3f0b7382e95886dc123bf9e3ec19aa" translate="yes" xml:space="preserve">
          <source>This attached method returns the effective color value of the specified &lt;a href=&quot;#pre-defined-material-colors&quot;&gt;pre-defined Material color&lt;/a&gt; combined with the given &lt;a href=&quot;#pre-defined-shades&quot;&gt;shade&lt;/a&gt;. If omitted, the shade argument defaults to &lt;code&gt;Material.Shade500&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a5fcf5012bdce8c3bdfc6cd2c6c516d0c97169" translate="yes" xml:space="preserve">
          <source>This attached method returns the effective color value of the specified &lt;a href=&quot;#pre-defined-universal-colors&quot;&gt;pre-defined Universal color&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c85871e761f9f95efc6a3de08f4c87ae5dd7c0" translate="yes" xml:space="preserve">
          <source>This attached method shows the shared tooltip with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6aca674348b20fb5e2c7fadb4f0cd4b27ec7bf" translate="yes" xml:space="preserve">
          <source>This attached property controls the maximum height of the split item. The &lt;a href=&quot;qml-qtquick-controls2-splitview#preferredHeight-attached-prop&quot;&gt;preferredHeight&lt;/a&gt; is bound within the &lt;a href=&quot;qml-qtquick-controls2-splitview#minimumHeight-attached-prop&quot;&gt;minimumHeight&lt;/a&gt; and maximumHeight. A split item cannot be dragged to be larger than its &lt;code&gt;maximumHeight&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ee0dee4a6a2c69aa51eb3614c2a6cfb4b6ff48" translate="yes" xml:space="preserve">
          <source>This attached property controls the maximum width of the split item. The &lt;a href=&quot;qml-qtquick-controls2-splitview#preferredWidth-attached-prop&quot;&gt;preferredWidth&lt;/a&gt; is bound within the &lt;a href=&quot;qml-qtquick-controls2-splitview#minimumWidth-attached-prop&quot;&gt;minimumWidth&lt;/a&gt; and maximumWidth. A split item cannot be dragged to be larger than its &lt;code&gt;maximumWidth&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a092a5d22221159ef96c6f1461099d95d76461d0" translate="yes" xml:space="preserve">
          <source>This attached property controls the minimum height of the split item. The &lt;a href=&quot;qml-qtquick-controls2-splitview#preferredHeight-attached-prop&quot;&gt;preferredHeight&lt;/a&gt; is bound within the minimumHeight and &lt;a href=&quot;qml-qtquick-controls2-splitview#maximumHeight-attached-prop&quot;&gt;maximumHeight&lt;/a&gt;. A split item cannot be dragged to be smaller than its &lt;code&gt;minimumHeight&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3fa3241bbbe654861b90c393fcc4880dcdfb8a" translate="yes" xml:space="preserve">
          <source>This attached property controls the minimum width of the split item. The &lt;a href=&quot;qml-qtquick-controls2-splitview#preferredWidth-attached-prop&quot;&gt;preferredWidth&lt;/a&gt; is bound within the minimumWidth and &lt;a href=&quot;qml-qtquick-controls2-splitview#maximumWidth-attached-prop&quot;&gt;maximumWidth&lt;/a&gt;. A split item cannot be dragged to be smaller than its &lt;code&gt;minimumWidth&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174df1431728ba2b1694b4f17b99b4e5a7c0602c" translate="yes" xml:space="preserve">
          <source>This attached property controls the preferred height of the split item. The preferred height will be used as the size of the item, and will be bound within the &lt;a href=&quot;qml-qtquick-controls2-splitview#minimumHeight-attached-prop&quot;&gt;minimumHeight&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-splitview#maximumHeight-attached-prop&quot;&gt;maximumHeight&lt;/a&gt;. If the preferred height is not set, the item's &lt;a href=&quot;qml-qtquick-item#implicitHeight-prop&quot;&gt;implicitHeight&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2b1936e7e1bb37e19a2bf82333dea247564a8d" translate="yes" xml:space="preserve">
          <source>This attached property controls the preferred width of the split item. The preferred width will be used as the size of the item, and will be bound within the &lt;a href=&quot;qml-qtquick-controls2-splitview#minimumWidth-attached-prop&quot;&gt;minimumWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-splitview#maximumWidth-attached-prop&quot;&gt;maximumWidth&lt;/a&gt;. If the preferred width is not set, the item's &lt;a href=&quot;qml-qtquick-item#implicitWidth-prop&quot;&gt;implicitWidth&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a24af1c013c6681b4d9e28b7c5b9a39bc361bc" translate="yes" xml:space="preserve">
          <source>This attached property controls whether the item takes the remaining space in the split view after all other items have been laid out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e968d04a531e0ddd7933af8b911d8fa3d44351ad" translate="yes" xml:space="preserve">
          <source>This attached property holds a component to use as a visual item that implements background dimming for modal popups. It is created for and stacked below visible modal popups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1b2d6832c3cdca56555f8eb70ef05d7fa26f26" translate="yes" xml:space="preserve">
          <source>This attached property holds a component to use as a visual item that implements background dimming for modeless popups. It is created for and stacked below visible dimming popups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6122cc17507f6df293c80fdc701179bcbb38e829" translate="yes" xml:space="preserve">
          <source>This attached property holds a list of the indexes of the items in view that are the target of the relevant operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f564df116f65e057433ac4ce0dc630eb8e4e04" translate="yes" xml:space="preserve">
          <source>This attached property holds a value from &lt;code&gt;-visibleItemCount / 2&lt;/code&gt; to &lt;code&gt;visibleItemCount / 2&lt;/code&gt;, which represents how far away this item is from being the current item, with &lt;code&gt;0&lt;/code&gt; being completely current.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c494c99f9c86afefccebfd93f3f19fd1e417ee" translate="yes" xml:space="preserve">
          <source>This attached property holds the accent color of the theme. The property can be attached to any window or item. The value is propagated to children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca0c671764e834314853f1a5ec1bc13f4a00749" translate="yes" xml:space="preserve">
          <source>This attached property holds the application window. The property can be attached to any item. The value is &lt;code&gt;null&lt;/code&gt; if the item is not in an &lt;a href=&quot;qml-qtquick-controls2-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b79e37e28ee7a776897875cb06a46463959e04" translate="yes" xml:space="preserve">
          <source>This attached property holds the background color of the theme. The property can be attached to any window or item. The value is propagated to children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f40cc1dca021b45a7c056ea024a7949d04b7f71" translate="yes" xml:space="preserve">
          <source>This attached property holds the button box that manages this button, or &lt;code&gt;null&lt;/code&gt; if the button is not in a button box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30dc5d49bcd5ce84b48ff64df1eb4728d7a14ac5" translate="yes" xml:space="preserve">
          <source>This attached property holds the control that currently has active focus, or &lt;code&gt;null&lt;/code&gt; if there is no control with active focus. The property can be attached to any item. The value is &lt;code&gt;null&lt;/code&gt; if the item is not in a window, or the window has no active focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55100fdeeb6fafdb326149f6ff8ecc0e74ecb68" translate="yes" xml:space="preserve">
          <source>This attached property holds the data model this delegate instance belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681d49d9993f7ac3b0add95d603b054af1b945f9" translate="yes" xml:space="preserve">
          <source>This attached property holds the delay (milliseconds) of the shared tool tip. The property can be attached to any item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe7a7eda9112177c6d7993797eb022abc16f004" translate="yes" xml:space="preserve">
          <source>This attached property holds the elevation of the control. The higher the elevation, the deeper the shadow. The property can be attached to any control, but not all controls visualize elevation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453cc8277a5f6b307181e9ae2bc597afb542b5a8" translate="yes" xml:space="preserve">
          <source>This attached property holds the final destination position for the transitioned item within the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7327349281b9536b76360a638bf0e7c45e7e1395" translate="yes" xml:space="preserve">
          <source>This attached property holds the foreground color of the theme. The property can be attached to any window or item. The value is propagated to children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422ca9df78715fcf7306968d30fb725163aeede2" translate="yes" xml:space="preserve">
          <source>This attached property holds the index of each child item in the &lt;a href=&quot;qml-qtquick-controls2-swipeview&quot;&gt;SwipeView&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad63a505039c9519c1abe31a0fd3972ac08f017e" translate="yes" xml:space="preserve">
          <source>This attached property holds the index of each tab button in the &lt;a href=&quot;qtquickcontrols2-navigation#tabbar&quot;&gt;TabBar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0dee453a9a1e0d0314c0a643386c4ca13a640a8" translate="yes" xml:space="preserve">
          <source>This attached property holds the index of the item in the &lt;a href=&quot;qml-qtqml-models-delegatemodel#persistedItems-prop&quot;&gt;persistedItems&lt;/a&gt;&lt;a href=&quot;qml-qtqml-models-delegatemodelgroup&quot;&gt;DelegateModelGroup&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc3f1d460e34e2461b5b43ff3e47421d8debaa1" translate="yes" xml:space="preserve">
          <source>This attached property holds the index of the item in the default &lt;a href=&quot;qml-qtqml-models-delegatemodel#items-prop&quot;&gt;items&lt;/a&gt;&lt;a href=&quot;qml-qtqml-models-delegatemodelgroup&quot;&gt;DelegateModelGroup&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833ab81dcfbdcac3b01000d47692245f0f103234" translate="yes" xml:space="preserve">
          <source>This attached property holds the index of the item that is being transitioned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a69f8d74c7cd43400f0f2a5cc2621f02f747339" translate="yes" xml:space="preserve">
          <source>This attached property holds the index of this delegate's item within the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e63fc75d798030980941c308071c717c3afaf8c" translate="yes" xml:space="preserve">
          <source>This attached property holds the invisible root item of the scene or &lt;code&gt;null&lt;/code&gt; if the item is not in a window. The Window attached property can be attached to any Item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4209697e0bcca4299d04f8b6b6ecb3ead7c79a09" translate="yes" xml:space="preserve">
          <source>This attached property holds the item that is being transitioned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426d4260859678944033a82a312588376cfc1f13" translate="yes" xml:space="preserve">
          <source>This attached property holds the item which currently has active focus or &lt;code&gt;null&lt;/code&gt; if there is no item with active focus. The Window attached property can be attached to any Item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f90467ec1c0b522a7deaa02682a41b8e8b39cf" translate="yes" xml:space="preserve">
          <source>This attached property holds the item's window. The Window attached property can be attached to any Item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0814c57cdf4667a0467b34c2e653c8d53d93b5ac" translate="yes" xml:space="preserve">
          <source>This attached property holds the list of items in view that are the target of the relevant operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a75c84278d6b945b3ea2181a0a6ab76bca3147b" translate="yes" xml:space="preserve">
          <source>This attached property holds the name of DelegateModelGroups the item belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145fab41861f38296865dfb87db63ad4c039cf15" translate="yes" xml:space="preserve">
          <source>This attached property holds the name of an item within a Package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa8795bc5ad7c46b76e99796f342a78fb48ab00" translate="yes" xml:space="preserve">
          <source>This attached property holds the path to the image assets...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f94269646d043e28215caa58006686d00427924" translate="yes" xml:space="preserve">
          <source>This attached property holds the position of the tab bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3bfe69e3ee9f296fe904765e440b3520646ccc" translate="yes" xml:space="preserve">
          <source>This attached property holds the primary color of the theme. The property can be attached to any window or item. The value is propagated to children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3849c9d858302da80e53e745e8ae6a77ab09f22" translate="yes" xml:space="preserve">
          <source>This attached property holds the role of each button in a button box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebb96b14b050ca4727d7f7fe1fe22ce7a5baf4f" translate="yes" xml:space="preserve">
          <source>This attached property holds the section of the next element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e4c375933d0f13fb84d1584e695649134c3954" translate="yes" xml:space="preserve">
          <source>This attached property holds the section of the previous element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="293354b8e3fb758d9daa807030b3e87b3fcd4c9f" translate="yes" xml:space="preserve">
          <source>This attached property holds the section of this element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85279676db4ac749d71cfe0b243210a68cd0c3e7" translate="yes" xml:space="preserve">
          <source>This attached property holds the shared tool tip instance. The property can be attached to any item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa901cf6ca2fc8cd7ef68216aad2a893642202eb" translate="yes" xml:space="preserve">
          <source>This attached property holds the split view of the item it is attached to, or &lt;code&gt;null&lt;/code&gt; if the item is not in a split view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d0e0d6a834bfd23ddf6d0064a360af0193c53d" translate="yes" xml:space="preserve">
          <source>This attached property holds the stack index of the item it's attached to, or &lt;code&gt;-1&lt;/code&gt; if the item is not in a stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a01aba13bb54c023f8bffccce88222b0da2a2f" translate="yes" xml:space="preserve">
          <source>This attached property holds the stack status of the item it's attached to, or &lt;code&gt;StackView.Inactive&lt;/code&gt; if the item is not in a stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523f73f20318b264872edece147b3c83e581035b" translate="yes" xml:space="preserve">
          <source>This attached property holds the stack view of the item it's attached to, or &lt;code&gt;null&lt;/code&gt; if the item is not in a stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c6d4728cc17b1226dc76ebcf3094bfdb50533c" translate="yes" xml:space="preserve">
          <source>This attached property holds the tab bar that manages this tab button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57a8312d482d7d6c878a4f56fc25cb80a5a9a55" translate="yes" xml:space="preserve">
          <source>This attached property holds the text of the shared tool tip. The property can be attached to any item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59b528c4121e2513e6a3b8ddfc9f1bdba6b469c" translate="yes" xml:space="preserve">
          <source>This attached property holds the timeout (milliseconds) of the shared tool tip. The property can be attached to any item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b0e8d913ad55b7f642dc755bcd68ae94a7e6d8a" translate="yes" xml:space="preserve">
          <source>This attached property holds the tumbler. The property can be attached to a tumbler delegate. The value is &lt;code&gt;null&lt;/code&gt; if the item is not a tumbler delegate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7293d949ac3d01e784db7abc6472eeddf4e94723" translate="yes" xml:space="preserve">
          <source>This attached property holds the view that manages the delegate instance. It is attached to each instance of the delegate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5afc1828bfa54dadb30a6bbe6c8cce586d8731" translate="yes" xml:space="preserve">
          <source>This attached property holds the view that manages this child item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10502ca51d84b5409ebdb6e4af23c6747b54b17" translate="yes" xml:space="preserve">
          <source>This attached property holds the view that manages this delegate instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef6cd79c335ba8e7045ccbe1211d962ede9d75e" translate="yes" xml:space="preserve">
          <source>This attached property holds the visibility of the item it's attached to. The value follows the value of &lt;a href=&quot;qml-qtquick-item#visible-prop&quot;&gt;Item::visible&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bcfdb08b44d758be2c2ade51d0cd345db288724" translate="yes" xml:space="preserve">
          <source>This attached property holds the window content item. The property can be attached to any item. The value is &lt;code&gt;null&lt;/code&gt; if the item is not in an &lt;a href=&quot;qml-qtquick-controls2-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd3c67b34ea20a71c18e3e9473679fe53fdeda8" translate="yes" xml:space="preserve">
          <source>This attached property holds the window footer item. The property can be attached to any item. The value is &lt;code&gt;null&lt;/code&gt; if the item is not in an &lt;a href=&quot;qml-qtquick-controls2-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt;, or the window has no footer item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4cd9ce977d1e025b903070eeb416b33d67e099a" translate="yes" xml:space="preserve">
          <source>This attached property holds the window header item. The property can be attached to any item. The value is &lt;code&gt;null&lt;/code&gt; if the item is not in an &lt;a href=&quot;qml-qtquick-controls2-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt;, or the window has no header item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bdfe4ede10fe6a8909b5aa0fc96aaa22cc419de" translate="yes" xml:space="preserve">
          <source>This attached property holds the window menu bar. The property can be attached to any item. The value is &lt;code&gt;null&lt;/code&gt; if the item is not in an &lt;a href=&quot;qml-qtquick-controls2-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt;, or the window has no menu bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8baad9f16888c14a322dd447ddd32fdef833bcfa" translate="yes" xml:space="preserve">
          <source>This attached property holds the window overlay item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd8a6e299a4c8a4860c41e7b9c1331e2cc7f406" translate="yes" xml:space="preserve">
          <source>This attached property holds whether the delegate may be destroyed. It is attached to each instance of the delegate. The default value is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842b93b0792e9a8e2413945661724342c1b5f7a6" translate="yes" xml:space="preserve">
          <source>This attached property holds whether the item belongs to the &lt;a href=&quot;qml-qtqml-models-delegatemodel#persistedItems-prop&quot;&gt;persistedItems&lt;/a&gt;&lt;a href=&quot;qml-qtqml-models-delegatemodelgroup&quot;&gt;DelegateModelGroup&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0136c7a21b5f166845a6f9d257122caaa5236137" translate="yes" xml:space="preserve">
          <source>This attached property holds whether the item belongs to the default &lt;a href=&quot;qml-qtqml-models-delegatemodel#items-prop&quot;&gt;items&lt;/a&gt;&lt;a href=&quot;qml-qtqml-models-delegatemodelgroup&quot;&gt;DelegateModelGroup&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7448dddcb047d002f28a8a7c5a57bab6e6a58254" translate="yes" xml:space="preserve">
          <source>This attached property holds whether the item is currently on the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b30207897b265820276fc599f3ac5fdb4f636c" translate="yes" xml:space="preserve">
          <source>This attached property holds whether the shared tool tip is visible. The property can be attached to any item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb2c5f3816dfcb21a248864483b399042f2d6ee" translate="yes" xml:space="preserve">
          <source>This attached property holds whether the split handle is hovered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8ca27f003286ac2f818f3864657d40fa128e73" translate="yes" xml:space="preserve">
          <source>This attached property holds whether the split handle is pressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a63dd65a3ed12b13d0be20b91e06444c5becf0" translate="yes" xml:space="preserve">
          <source>This attached property holds whether the theme is light or dark. The property can be attached to any window or item. The value is propagated to children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9e2639c6618247d9f30059bd31faa0de2822c9" translate="yes" xml:space="preserve">
          <source>This attached property holds whether the window is currently shown in the windowing system as normal, minimized, maximized, fullscreen or hidden. The &lt;code&gt;Window&lt;/code&gt; attached property can be attached to any Item. If the item is not shown in any window, the value will be &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;Hidden&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7561adac90d1857a0f76012e8bafee729c927d" translate="yes" xml:space="preserve">
          <source>This attached property indicates whether the visual item is bound to a data model index. Returns true if the item is not bound to the model, and false if it is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ac5d77dfaa3f1440b8f703a7f7e382ede69cea" translate="yes" xml:space="preserve">
          <source>This attached property is &lt;code&gt;true&lt;/code&gt; if this child is the current item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c959cc4e10737479fb6aad222b834267af551fd0" translate="yes" xml:space="preserve">
          <source>This attached property is &lt;code&gt;true&lt;/code&gt; if this child is the next item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a908884e1f8ac5ce34965b48221afbb19071a7" translate="yes" xml:space="preserve">
          <source>This attached property is &lt;code&gt;true&lt;/code&gt; if this child is the previous item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4aa77c3213fc041794a540b46447e569754ae64" translate="yes" xml:space="preserve">
          <source>This attached property is true if this delegate is the current item; otherwise false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e941a892e3a0e9b50b1498b6d0a6c04e141328" translate="yes" xml:space="preserve">
          <source>This attached property tells whether the window is active. The Window attached property can be attached to any Item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a325b228bdd72d8cb21f8816595fb282273fec94" translate="yes" xml:space="preserve">
          <source>This attached signal is emitted immediately after an item is added to the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db5b77521d03de8af344ee2960e1e7697f0b101" translate="yes" xml:space="preserve">
          <source>This attached signal is emitted immediately before an item is removed from the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe6cf4957ee25023a76a5565b46d00021a7c691" translate="yes" xml:space="preserve">
          <source>This attached signal is emitted when the item it's attached to has been removed from the stack. It can be used to safely destroy an Item that was pushed onto the stack, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df06c17f2efafa5b6c33c1a937d0896b209aaa54" translate="yes" xml:space="preserve">
          <source>This attached signal is emitted when the item it's attached to is activated in the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50bf7ee986faa1f0efb55a84e8269690d282fc0d" translate="yes" xml:space="preserve">
          <source>This attached signal is emitted when the item it's attached to is deactivated in the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e02bcb3f0bc39a3f20948f33a06123c958fdba0" translate="yes" xml:space="preserve">
          <source>This attached signal is emitted when the item it's attached to is in the process of being activated in the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b951a5e0a33079877241e612ac974443fc45fa97" translate="yes" xml:space="preserve">
          <source>This attached signal is emitted when the item it's attached to is in the process of being dectivated in the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b723edd4193d62b8ec73180b68ebc36a353c593a" translate="yes" xml:space="preserve">
          <source>This attached signal is emitted when the overlay is pressed by the user while a popup is visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e019738118e3510d7e0cee499d214ad4201108" translate="yes" xml:space="preserve">
          <source>This attached signal is emitted when the overlay is released by the user while a popup is visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c7a299e0e8dca493c8ce2b746eb883e28d4f31" translate="yes" xml:space="preserve">
          <source>This attribute has been deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46df6d01396a0419de86e2e9d34cc0722c782c84" translate="yes" xml:space="preserve">
          <source>This attribute has been deprecated. Use AA_PluginApplication instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df34b5b412c95bbacd68ced14aeba134aec5b40" translate="yes" xml:space="preserve">
          <source>This attribute is no longer fully supported in Qt 5. It ensures that widgets are created as soon as they are constructed. By default, resources for widgets are allocated on demand to improve efficiency and minimize resource usage. Setting or clearing this attribute affects widgets constructed after the change. Setting it tells Qt to create toplevel windows immediately. Therefore, if it is important to minimize resource consumption, do not set this attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34990acd46d5945ad226cc9dd2ce7e4d7d0ab58a" translate="yes" xml:space="preserve">
          <source>This attribute is only required to be set on Linux/&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-attribution-bluez.html#&quot;&gt;BlueZ&lt;/a&gt; systems with older Linux kernels (v3.3 or lower), or if CAP_NET_ADMIN is not set for the executable. The default value of the attribute is &lt;a href=&quot;qlowenergycontroller#RemoteAddressType-enum&quot;&gt;RandomAddress&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ce67abfb98dbdd29e8240133010d56b3c6ac8f" translate="yes" xml:space="preserve">
          <source>This attribute specifies the language the custom widget is intended for. It is mainly there to prevent C++-plugins from appearing in Qt Jambi.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447b9bd28523e09ca8ca828889c82137ebe19818" translate="yes" xml:space="preserve">
          <source>This attribute will be available to the delegate as &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt;.&amp;lt;name&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ae5c5cd7e818b675cccbf953205401a30d4e88" translate="yes" xml:space="preserve">
          <source>This audio buffer will copy the contents of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257c24e94fbe41eb1fc2411c44c6ff95ee87bef4" translate="yes" xml:space="preserve">
          <source>This automatic rotation of the axes is handy is some usecases, for example in a bubble level application that measures how level a surface is by looking at the X axis value of an accelerometer. When the device and screen orientation change by 90 degrees, an application developer does not need to change anything, he can continue using the X axis value even though the device is rotated. Without automatic axes orientation, the application developer would need to look at the Y values instead, thereby adding code to the application that reads from a different axis depending on the screen orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94eedfd11e2cde55ca1092546d23c70f50164fb7" translate="yes" xml:space="preserve">
          <source>This automatically removes it from the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ca0d8b57c5b88ea595748557ed9fe09523055b" translate="yes" xml:space="preserve">
          <source>This backend uses the &lt;code&gt;GCController&lt;/code&gt; API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b47c522d00e0c0443844cbe221a6d1c41847567" translate="yes" xml:space="preserve">
          <source>This backend, typically used on Tegra devices, is similar to the KMS/DRM backend mentioned above, except that it relies on the EGLDevice and EGLStream extensions instead of GBM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3acf0c93833a9d70ecbdc14a38156c3b4bf50a" translate="yes" xml:space="preserve">
          <source>This basic type is provided by the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd11c0cd9fe81254e664dd8c89de6498db513274" translate="yes" xml:space="preserve">
          <source>This basic type is provided by the QML language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227196e50d3752617804124871b58f179c11f7fd" translate="yes" xml:space="preserve">
          <source>This basic type is provided by the QML language. It can be implicitly converted to a &lt;a href=&quot;qml-qtqml-date&quot;&gt;Date&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8968278e16e6e9d90259907f2baa897e2fe08a27" translate="yes" xml:space="preserve">
          <source>This basic type is provided by the QML language. Some enumeration values are provided by the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt; import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11a9c24cd84df4dd5619cf8471db468a719d90c" translate="yes" xml:space="preserve">
          <source>This behavior is most useful when the &lt;code&gt;loops&lt;/code&gt; property is set, as the animation will finish playing normally but not restart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6121986f30688c6bb2952640f1400aeb170863" translate="yes" xml:space="preserve">
          <source>This behavior only affects mouse clicks that are not handled by any item. You can define a custom behavior by creating a subclass of &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; and reimplementing &lt;a href=&quot;qgraphicsview#mouseMoveEvent&quot;&gt;mouseMoveEvent&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf016153c8f0e5e9e0b34aaf36240e23250c9b22" translate="yes" xml:space="preserve">
          <source>This behaviour is implemented by the &lt;a href=&quot;qregularexpression#MatchType-enum&quot;&gt;PartialPreferCompleteMatch&lt;/a&gt; match type. For instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b18a885f3eb63c0498d34df0b98ff2ad8bbd2de" translate="yes" xml:space="preserve">
          <source>This boolean property is &lt;code&gt;true&lt;/code&gt; if the timer is running; otherwise false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98eef0d93e329eb82eae389194deda2da362739f" translate="yes" xml:space="preserve">
          <source>This branch indicator has an item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90bf50ac7f619557ad2abbbe42d1f2bcd4ecdc4d" translate="yes" xml:space="preserve">
          <source>This breaking point is sometimes useful when using attached properties to communicate information to an instantiated component, as it allows their initial values to be configured before property bindings take effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba682563efec8c9188462c9880a828be82f94cf" translate="yes" xml:space="preserve">
          <source>This cache can also be used for storing &lt;a href=&quot;https://www.mapbox.com/help/mobile-offline&quot;&gt;offline tiles&lt;/a&gt;, but the offline database must be populated using the &lt;a href=&quot;https://github.com/mapbox/mapbox-gl-native/blob/master/bin/offline.cpp&quot;&gt;offline tool&lt;/a&gt;. The offline database will work alongside with the ambient cache in the same file. Make sure to comply with Mapbox Terms of Service before creating an offline database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779e360209eb1b8f22fdf4d4d120ed8c0581ca59" translate="yes" xml:space="preserve">
          <source>This calculation returns the great-circle distance between the two coordinates, with an assumption that the Earth is spherical for the purpose of this calculation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac5694e0d64900dedd0b18764b29a468fbc0986" translate="yes" xml:space="preserve">
          <source>This call is asynchronous. On completion of this update the &lt;a href=&quot;qnetworkconfigurationmanager#updateCompleted&quot;&gt;updateCompleted&lt;/a&gt;() signal is emitted. If new configurations are discovered or old ones were removed or changed the update process may trigger the emission of one or multiple &lt;a href=&quot;qnetworkconfigurationmanager#configurationAdded&quot;&gt;configurationAdded&lt;/a&gt;(), &lt;a href=&quot;qnetworkconfigurationmanager#configurationRemoved&quot;&gt;configurationRemoved&lt;/a&gt;() and &lt;a href=&quot;qnetworkconfigurationmanager#configurationChanged&quot;&gt;configurationChanged&lt;/a&gt;() signals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4c702109143b601fc86f7b0cb993f5ab77a091" translate="yes" xml:space="preserve">
          <source>This call obtains the translated text for &quot;Page up&quot; from the &lt;code&gt;QScrollBar&lt;/code&gt; context. Developers can also use the &lt;a href=&quot;qcoreapplication#translate&quot;&gt;QCoreApplication::translate&lt;/a&gt;() function to obtain a translation for a particular translation context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca856b98986b175a4a4b01988fec2d5acefc51a" translate="yes" xml:space="preserve">
          <source>This callback is called once only, right after the &lt;a href=&quot;qabstractxmlreceiver#xquery-sequence&quot;&gt;sequence&lt;/a&gt; ends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2c0eab9f41d9d111c9a19280636d94ed6f2ce7" translate="yes" xml:space="preserve">
          <source>This callback is called once only, right before the &lt;a href=&quot;qabstractxmlreceiver#xquery-sequence&quot;&gt;sequence&lt;/a&gt; begins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba8ff8b9fc6705e9b7cad6694c0e27e18fba922" translate="yes" xml:space="preserve">
          <source>This callback is called when a comment node appears in the &lt;a href=&quot;qabstractxmlreceiver#xquery-sequence&quot;&gt;sequence&lt;/a&gt;. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681b39a57c7cda0801787052a432781ce39f54a2" translate="yes" xml:space="preserve">
          <source>This callback is called when a document node appears in the &lt;a href=&quot;qabstractxmlreceiver#xquery-sequence&quot;&gt;sequence&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be056c79d632dd52d3bea1c3fc8c2cc038af96e2" translate="yes" xml:space="preserve">
          <source>This callback is called when a namespace binding is in scope of an element. A namespace is defined by a URI. In the &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5355666a472bc5fe5794b101a0d9c71161d7b0f1" translate="yes" xml:space="preserve">
          <source>This callback is called when a new element node appears in the &lt;a href=&quot;qabstractxmlreceiver#xquery-sequence&quot;&gt;sequence&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd06ca9d86d2034d762223eba0136afe491b1893" translate="yes" xml:space="preserve">
          <source>This callback is called when a processing instruction appears in the &lt;a href=&quot;qabstractxmlreceiver#xquery-sequence&quot;&gt;sequence&lt;/a&gt;. A processing instruction is used in an XML document to tell the application reading the document to perform some action. A typical example is to use a processing instruction to tell the application to use a particular XSLT stylesheet to process the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a5a790225c1ee102ef68af6ae6de30b50dcfa30" translate="yes" xml:space="preserve">
          <source>This callback is called when a text node appears in the &lt;a href=&quot;qabstractxmlreceiver#xquery-sequence&quot;&gt;sequence&lt;/a&gt;. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea46846925734c336b527e733bd0cdeff448679" translate="yes" xml:space="preserve">
          <source>This callback is called when an atomic value appears in the &lt;a href=&quot;qabstractxmlreceiver#xquery-sequence&quot;&gt;sequence&lt;/a&gt;. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb3e73f2e0401b4fa45a8aca10947a0852b57851" translate="yes" xml:space="preserve">
          <source>This callback is called when an attribute node appears in the &lt;a href=&quot;qabstractxmlreceiver#xquery-sequence&quot;&gt;sequence&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab0654ed205f68f1f5989f5780f168a0a77af4a" translate="yes" xml:space="preserve">
          <source>This callback is called when the end of a document node appears in the &lt;a href=&quot;qabstractxmlreceiver#xquery-sequence&quot;&gt;sequence&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9771e510e41f3ee5db85a86979d27c5ab05361ff" translate="yes" xml:space="preserve">
          <source>This callback is called when the end of an element node appears in the &lt;a href=&quot;qabstractxmlreceiver#xquery-sequence&quot;&gt;sequence&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bdc6d88a22b9ed94739c6efd854908b3af07e96" translate="yes" xml:space="preserve">
          <source>This can also be achieved using the following line of code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a037f190c09e0a5f1678e8e843567bfa25a2b1fe" translate="yes" xml:space="preserve">
          <source>This can also be achieved with the following line of code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dad64da5e39a2126e7e85fce12fc639fd84d46b" translate="yes" xml:space="preserve">
          <source>This can also be done in C++, using &lt;a href=&quot;#qputenv&quot;&gt;qputenv&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e04ed9777496f0ffb76924d016749cf5c864e4" translate="yes" xml:space="preserve">
          <source>This can also be set using a command line option, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e1238034d146244f27aee82dc90f7207e50406" translate="yes" xml:space="preserve">
          <source>This can also be used by &lt;a href=&quot;#playing-animations-in-parallel-or-in-sequence&quot;&gt;grouped animations&lt;/a&gt; to ensure that all animations within a group are applied to the same property. For example, the previous example could instead use &lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation&lt;/a&gt; to animate the rectangle's &lt;code&gt;color&lt;/code&gt; first to yellow, then to blue:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0edd66d7c70f534943d93ae9a477a0d6e3f6918c" translate="yes" xml:space="preserve">
          <source>This can be a constraint for embedded devices. In multi-process, each client needs to have its own graphics buffer, which it sends to the compositor. Consequently, you use more video memory compared to the single-process case: where everything is drawn at once and there is no need to store the different parts in intermediary buffers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d606b053adbded5cb4056a9a78be8fadadc5038" translate="yes" xml:space="preserve">
          <source>This can be a group property if the expression results in accessing a property of a &lt;a href=&quot;qtqml-typesystem-basictypes#&quot;&gt;value type&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640bb341a189957604bf630405ef9e9baadd4bea" translate="yes" xml:space="preserve">
          <source>This can be achieved by modifying the &lt;code&gt;displaced&lt;/code&gt; transition so that it delays the animation of each displaced item based on the difference between its index (provided by &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;.index) and the first removed index (provided by &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;.&lt;a href=&quot;qml-qtquick-viewtransition#targetIndexes-attached-prop&quot;&gt;targetIndexes&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dcc1a2c57f56cfc20fab83a051f3020c1b43e2f" translate="yes" xml:space="preserve">
          <source>This can be any axis in 3D space. By default the axis is (0, 0, 1), which is aligned with the Z axis. If you provide another axis, &lt;a href=&quot;qgraphicsrotation&quot;&gt;QGraphicsRotation&lt;/a&gt; will provide a transformation that rotates around this axis. For example, if you would like to rotate an item around its X axis, you could pass (1, 0, 0) as the axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09087fc5d8a227e2aedb7f78e46ec99697a4d159" translate="yes" xml:space="preserve">
          <source>This can be called by implementors of this interface to communicate what the most recent error was.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9fd58658b73558bb4b36b7fbf505c0cc85caa48" translate="yes" xml:space="preserve">
          <source>This can be created and used as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c588ebed4abeb0d3ac2935656a12ceec55252a3" translate="yes" xml:space="preserve">
          <source>This can be disabled by setting the environment variable &lt;code&gt;QT_HIGHDPI_DISABLE_2X_IMAGE_LOADING&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cef951740c1b91d104ac44697104ca56ec2d14b" translate="yes" xml:space="preserve">
          <source>This can be done easily by creating the objects on the stack in your &lt;a href=&quot;qthread#run&quot;&gt;run()&lt;/a&gt; implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fedfbf1504b4b2d96491a3a6c1ef95d987bf0dd9" translate="yes" xml:space="preserve">
          <source>This can be overridden by setting &lt;a href=&quot;qml-qtdatavisualization-abstract3dseries#baseColor-prop&quot;&gt;Abstract3DSeries.baseColor&lt;/a&gt; explicitly in the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d9b27c7e9ede71268cde55d7085035e05db1a3" translate="yes" xml:space="preserve">
          <source>This can be set as a performance optimization (when using burst and pulse) or to stagger emissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd6c6535970233e81bea3684e7e3ebc856ee2abd" translate="yes" xml:space="preserve">
          <source>This can be simple: If the focus has been in this window before, then the last widget to have focus should regain it. Qt does this automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a1ef15efcd0ebf177f7ee59ea099c55b803787" translate="yes" xml:space="preserve">
          <source>This can be used as a guide on where the text should be in the progress bar. The default value is &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::AlignLeft&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29449236880eb5149a60810e893925fbdfe1980c" translate="yes" xml:space="preserve">
          <source>This can be used as an inline version of &lt;a href=&quot;qtglobal#Q_CHECK_PTRx&quot;&gt;Q_CHECK_PTR&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1fee806ada61bb6e9f998f14dfa855c5a923c7" translate="yes" xml:space="preserve">
          <source>This can be used for drawing the icon into the correct place or properly aligning items. The variable must be set regardless of whether or not the menu item has an icon. The default value is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30d232012830a6e9a8965a03f85553a06e3d79a" translate="yes" xml:space="preserve">
          <source>This can be used for sending MIME multipart messages for custom verbs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe2c7c25499b544cedf359ae3268a68058a27ba" translate="yes" xml:space="preserve">
          <source>This can be used for sending MIME multipart messages over HTTP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b246cc4504b4c39817f29831bbd4d4da31039d5" translate="yes" xml:space="preserve">
          <source>This can be used in stl-style iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b0d853060cd52f0cbf4453aa4089453656c37e" translate="yes" xml:space="preserve">
          <source>This can be used to alter the appearance of the Return key on an on-screen keyboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2499e931131da7dffd260e3eac234597c1b93ac9" translate="yes" xml:space="preserve">
          <source>This can be used to attach meta-data to the message. The field name should consist of a domain prefix (possibly the conventional file extension of the file format the field is inspired by), a hyphen and the actual field name in underscore-delimited notation. For storage in TS files, the field name together with the prefix &quot;extra-&quot; will form an XML element name. The field contents will be XML-escaped, but otherwise appear verbatim as the element's contents. Any number of unique fields can be added to each message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31dba2e9635e015c85941a3c10873feb3dbe47d0" translate="yes" xml:space="preserve">
          <source>This can be used to avoid the situation where a secondary view that updates on a lower frequency will throttle the frame rate of the client application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5af76e883d22e87cc1e98ac0b465639901c3de" translate="yes" xml:space="preserve">
          <source>This can be used to color items in a way that provides a more native look and feel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5e05bd952b5658b30c1973aba835fc0002ecc7" translate="yes" xml:space="preserve">
          <source>This can be used to free or reattach the depth and stencil buffer attachments as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b2fef0d4c3da84823e1a1df2faf34147d5b89c" translate="yes" xml:space="preserve">
          <source>This can be used to give the message a unique identifier to support tools which need it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4fb9830ef669500ada714fe67245861b5b14700" translate="yes" xml:space="preserve">
          <source>This can be used to inform users about the existing lock file and give them the choice to delete it. After removing the file using &lt;a href=&quot;qlockfile#removeStaleLockFile&quot;&gt;removeStaleLockFile&lt;/a&gt;(), the application can call &lt;a href=&quot;qlockfile#tryLock&quot;&gt;tryLock&lt;/a&gt;() again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a35babe65413b4755d1cfabb69b82916fa05fa" translate="yes" xml:space="preserve">
          <source>This can be used to iterate over the map. Note that the nodes in the map are ordered arbitrarily.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd05f0362f71eb6054c5a4ae0aa65ded64118b3" translate="yes" xml:space="preserve">
          <source>This can be used to make a certain module version available, even if no types are registered for that version. This is particularly useful for keeping the versions of related modules in sync.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5faa34f7b90865037bb3b6fe44af3b93fe9339" translate="yes" xml:space="preserve">
          <source>This can be used to provide a &quot;reasonable&quot; value to be displayed until the connection to the source is established and current values are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c861f9eb56d9b22869c64be8d07d429b7730b51" translate="yes" xml:space="preserve">
          <source>This can be used to query the list of sample rates, supported by specific audio codec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1893c8209249f1e049d479c87a2d46981424e9fb" translate="yes" xml:space="preserve">
          <source>This can be used, on platforms which support it, to embed a &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; inside a native window, or to embed a native window inside a &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e5802c4d3c95da1ad8dd0b70bafac7a4429663" translate="yes" xml:space="preserve">
          <source>This can be useful for showing all MIME types to the user, for instance in a MIME type editor. Do not use unless really necessary in other cases though, prefer using the &lt;a href=&quot;qmimedatabase#mimeTypeForData&quot;&gt;mimeTypeForXxx()&lt;/a&gt; methods for performance reasons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b088ae130b326a2627d3b3614d3877d82e65f8ec" translate="yes" xml:space="preserve">
          <source>This can be useful to optionally enable or disable features. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28050f230de26a9c942d7ca946356140a57a81e1" translate="yes" xml:space="preserve">
          <source>This can be useful to perform postmortem analysis on failing tests, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598ddff0603eb1dd517c239b86fe7e5eff30e988" translate="yes" xml:space="preserve">
          <source>This can change the value of &lt;a href=&quot;qprinter#outputFormat&quot;&gt;outputFormat&lt;/a&gt;(). If the file name has the &quot;.pdf&quot; suffix PDF is generated. If the file name has a suffix other than &quot;.pdf&quot;, the output format used is the one set with &lt;a href=&quot;qprinter#setOutputFormat&quot;&gt;setOutputFormat&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a28f3c430b9deb64ce279befb63a5cb005fdf869" translate="yes" xml:space="preserve">
          <source>This can change when a zone is focused or loses focus, or new focus zones have been detected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43084b0565189c303d06705762d7501a7373f4a" translate="yes" xml:space="preserve">
          <source>This can happen if the stream failed to write to the underlying device or if the data to be written contained invalid characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96bf284d9cf37f85ca4bd1bc11879068cffdf119" translate="yes" xml:space="preserve">
          <source>This can have different meanings for different types of elements. For example, for a &lt;a href=&quot;qstyle#ControlElement-enum&quot;&gt;QStyle::CE_PushButton&lt;/a&gt; element it would be the rectangle for the entire button, while for a &lt;a href=&quot;qstyle#ControlElement-enum&quot;&gt;QStyle::CE_PushButtonLabel&lt;/a&gt; element it would be just the area for the push button label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c542ca6be3374e882f47c707071a74fcd05f846a" translate="yes" xml:space="preserve">
          <source>This can often be useful when loading a large set of application icons that may change based on a setting, or that can be edited by a user and later recreated. The resource is immediately loaded into memory, either as a result of a single file read operation, or as a memory mapped file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca2466d388b986106fef19e276f21af71892845" translate="yes" xml:space="preserve">
          <source>This can, for example, be used to save an image directly into a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7194158a549b82b32b58cacdc8e1f3acdf6e4e28" translate="yes" xml:space="preserve">
          <source>This change is done such that the center coordinate is still at the center of the geo rectangle, which may result in a geo rectangle with a smaller height than expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb75a8ca67f504bed2a36fe2d4fedf3a8063c6b" translate="yes" xml:space="preserve">
          <source>This chapter describes how to set up qmake project files for three common project types that are based on Qt: application, library, and plugin. Although all project types use many of the same variables, each of them uses project-specific variables to customize output files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971f9d25fa8d8d31703e6b2298b8352101858309" translate="yes" xml:space="preserve">
          <source>This chapter describes most of the common editing operations that you will need to perform using a cursor, from basic insertion of text and document elements to more complex manipulation of document structures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d49df27ac4dcc2eecd01de3aa4f4115a76aba3" translate="yes" xml:space="preserve">
          <source>This chapter discusses different approaches and options available for implementing right-to-left language support for Qt Quick applications. Some common right-to-left languages include Arabic, Hebrew, Persian and Urdu. Most changes include making sure that text translated to right-to-left languages is properly aligned to the right, and horizontally ordered content in views, lists and grids flows correctly from the right to left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7a8a05ca2851234bfdaf4912a9682a762a2bed" translate="yes" xml:space="preserve">
          <source>This chapter shows how to combine basic C++ with the functionality provided by Qt to create a few small graphical interface (GUI) applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7744ca9fd9221a2009e816dbe0124a1c5de45b35" translate="yes" xml:space="preserve">
          <source>This characteristic contains the language definition based on ISO639-1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c962ca68f800c85282794d865960487bc3c8775" translate="yes" xml:space="preserve">
          <source>This characteristic contains the limits between the heart rate zones for the 2-zone heart rate definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5ae540228f6a193309a2761a503702201554fb" translate="yes" xml:space="preserve">
          <source>This characteristic contains the limits between the heart rate zones for the 3-zone heart rate definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80bc6ffe8abac630aebf4a0b4cdc515dcb1e8b20" translate="yes" xml:space="preserve">
          <source>This characteristic contains the limits between the heart rate zones for the 5-zone heart rate definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e243ee290fa7e9684cf3f8d17ef093181ac35ac" translate="yes" xml:space="preserve">
          <source>This characteristic defines the category of the alert and how many new alerts of that category have occurred in the server device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60fb6012b257aa962db2247692a2a9c220f6ab53" translate="yes" xml:space="preserve">
          <source>This characteristic describes the available data in the WeightMeasurement characteristic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a8e7bd63e4211fb5a98671774976db12a807b0" translate="yes" xml:space="preserve">
          <source>This characteristic describes the available features in the BodyCompositionMeasurement characteristic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a475b41af7794812cf0b52fe38b1001b12092d" translate="yes" xml:space="preserve">
          <source>This characteristic describes the body composition such as muscle percentage or the body water mass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2fbceb6b665e2cd107301717d44d1f36ae6a7f8" translate="yes" xml:space="preserve">
          <source>This characteristic exposes the UV index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130e96aab929f43e062b5a031230c34b043d3ff0" translate="yes" xml:space="preserve">
          <source>This characteristic exposes the lowest heart rate a user can reach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0c4049e78394fbd73578c227e74ce6a04d0da1" translate="yes" xml:space="preserve">
          <source>This characteristic exposes the maximum Oxygen uptake of a user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202a76e1629d8457d00748576ad1d63ae7c99051" translate="yes" xml:space="preserve">
          <source>This characteristic exposes the maximum recommended heart rate that limits exertion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2acecb4dca04e069fb620de1563fa6c79effa729" translate="yes" xml:space="preserve">
          <source>This characteristic exposes the rainfall in meters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe4edc11328dcd13cb52b0ce269567ef62c12a2" translate="yes" xml:space="preserve">
          <source>This characteristic exposes the trend the barometric pressure is taking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69705a25e5232e82b91c24d2ab07e31e4cfa086" translate="yes" xml:space="preserve">
          <source>This characteristic exposes the user's first name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a82ca267d2ab8bc0c50159b3dfd5280ab88b35" translate="yes" xml:space="preserve">
          <source>This characteristic exposes the user's weight in kilograms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7685bc325d574e5c9b7b8abf11bfd912fee6b0f" translate="yes" xml:space="preserve">
          <source>This characteristic has the same format as the Blood Pressure Measurement characteristic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b802dbbb4406bcfdddeaceb0013832f4771bfd5" translate="yes" xml:space="preserve">
          <source>This characteristic is related to the Environmental Sensing Service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a5584e628025ec1a425ae5d4aa68f91432a7c4" translate="yes" xml:space="preserve">
          <source>This characteristic is used to preset the various Aerobic and Anaerobic threshold characteristics based on the to-be-performed sport type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924e73ea162cd56002217163809cc9908b5265eb" translate="yes" xml:space="preserve">
          <source>This characteristic provides a heat index in degree Celsius.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd78e6b726ed860841d0dc5c6611ce09e4c9bdd9" translate="yes" xml:space="preserve">
          <source>This characteristic provides weight related data such as BMI or the user's weight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96dedf7a994538eb21f994294f17fbe287955408" translate="yes" xml:space="preserve">
          <source>This characteristic shows how many numbers of unread alerts exist in the specific category in the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42cd4381e743609a6d84a4dd9918f0dd9c50ee4" translate="yes" xml:space="preserve">
          <source>This characteristic states the age of the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d2bb7fdeab2faa90c4fda532abb7f6a36f606b" translate="yes" xml:space="preserve">
          <source>This characteristic states the dew point in degree Celsius.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27cb846bbfdb4ef9016e3cce7612088063432fa" translate="yes" xml:space="preserve">
          <source>This characteristic states the email of the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fecd786aaec2dacecee002c33fad4aadbc54e27" translate="yes" xml:space="preserve">
          <source>This characteristic states the first metabolic threshold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a506feef4e2af3f39fcf26ae914495a278bbbed" translate="yes" xml:space="preserve">
          <source>This characteristic states the index of the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3f98cc2300fc22bda4dc7774e5775f0d89b21e" translate="yes" xml:space="preserve">
          <source>This characteristic states the magnetic flux density on an x and y axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa675a924f1bb07cbe77fa35e43aa09aaeef02fd" translate="yes" xml:space="preserve">
          <source>This characteristic states the magnetic flux density on an x, y and z axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3818322a9de9f757798d34864b86d4ff9962c019" translate="yes" xml:space="preserve">
          <source>This characteristic states the maximum heart rate a user can reach in beats per minute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30335b64027440dfcb76ee9affdb7a6fc2576383" translate="yes" xml:space="preserve">
          <source>This characteristic states the power of electromagnetic radiation in watt per square meter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4e51783cd90ea07e2811a865b3666334a5873f" translate="yes" xml:space="preserve">
          <source>This characteristic states the second metabolic threshold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8002d76ea2a06a65aa67676b12d42e8b71f837" translate="yes" xml:space="preserve">
          <source>This characteristic states the user's date of birth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb87da287db0a7f9f2a74dae61c077b056c41d6" translate="yes" xml:space="preserve">
          <source>This characteristic states the user's gender.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc690dc255c0dce367ae46fa7ee81ab969a5e12" translate="yes" xml:space="preserve">
          <source>This characteristic states the user's height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532fd24d5b561aa8a15f50be451bb7c34313e70d" translate="yes" xml:space="preserve">
          <source>This characteristic states the user's hip circumference in meters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5452edf2396dd29e0d596838d88ff4dc07455ae2" translate="yes" xml:space="preserve">
          <source>This characteristic states the user's last name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba6fdc190fe9349976b0a33ec505eae956681864" translate="yes" xml:space="preserve">
          <source>This characteristic states the user's waist circumference in meters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0fbb19bf67f345b871f07f4b4327819ef4cbbf" translate="yes" xml:space="preserve">
          <source>This characteristic states the wind chill in degree Celsius</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a180802f2449ec90bc3d5955b3c4fc984d95794" translate="yes" xml:space="preserve">
          <source>This class (in combination with &lt;a href=&quot;qcamerafocuszone&quot;&gt;QCameraFocusZone&lt;/a&gt;) can expose information on what parts of the camera sensor image are in focus or are being used for autofocusing via the &lt;a href=&quot;qcamerafocus#focusZones-prop&quot;&gt;focusZones&lt;/a&gt;() property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa05fa6b9ff4916e51495415b814e8066353def1" translate="yes" xml:space="preserve">
          <source>This class acts as a bridge between the UI and the input method that provides the data for selection lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb841824a01005f688c58c6c1ceb2316a157fa2" translate="yes" xml:space="preserve">
          <source>This class acts as a container for single candlestick items. Each item is drawn to its own category when using &lt;a href=&quot;qbarcategoryaxis&quot;&gt;QBarCategoryAxis&lt;/a&gt;. &lt;a href=&quot;qdatetimeaxis&quot;&gt;QDateTimeAxis&lt;/a&gt; and &lt;a href=&quot;qvalueaxis&quot;&gt;QValueAxis&lt;/a&gt; can be used as alternatives to &lt;a href=&quot;qbarcategoryaxis&quot;&gt;QBarCategoryAxis&lt;/a&gt;. In this case, each candlestick item is drawn according to its timestamp value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2ba38b739de6c9bfca0f70f89351f9ab639dc5" translate="yes" xml:space="preserve">
          <source>This class allows an application to embed a toolbar in the thumbnail of a window, which is shown when hovering over its taskbar icon. It provides quick access to the window's commands without requiring the user to restore or activate the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece35e8108a2ee88ec5ce8a245d24029627a778d" translate="yes" xml:space="preserve">
          <source>This class allows several methods of accessing the elements of a container held within a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;. An instance of &lt;a href=&quot;qsequentialiterable&quot;&gt;QSequentialIterable&lt;/a&gt; can be extracted from a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; if it can be converted to a &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8176c89c3d81d3a044c09ed31e698ef989804f38" translate="yes" xml:space="preserve">
          <source>This class allows several methods of accessing the elements of an associative container held within a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;. An instance of &lt;a href=&quot;qassociativeiterable&quot;&gt;QAssociativeIterable&lt;/a&gt; can be extracted from a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; if it can be converted to a &lt;a href=&quot;qvariant#QVariantHash-typedef&quot;&gt;QVariantHash&lt;/a&gt; or &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef5fa3bbb221984ce5db93971c72988ff6afda7" translate="yes" xml:space="preserve">
          <source>This class allows you to play uncompressed audio files (typically WAV files) in a generally lower latency way, and is suitable for &quot;feedback&quot; type sounds in response to user actions (e.g. virtual keyboard sounds, positive or negative feedback for popup dialogs, or game sounds). If low latency is not important, consider using the &lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer&lt;/a&gt; class instead, since it supports a wider variety of media formats and is less resource intensive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="631d2790d0e80891e36590b5239a185e25732c39" translate="yes" xml:space="preserve">
          <source>This class also features a &lt;a href=&quot;qaltimeter#reading&quot;&gt;reading&lt;/a&gt;() function that returns a &lt;a href=&quot;qaltimeterreading&quot;&gt;QAltimeterReading&lt;/a&gt; instead of a &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7272a109377d2cb19fe59bcfc3771d7092844a" translate="yes" xml:space="preserve">
          <source>This class also features a &lt;a href=&quot;qambientlightsensor#reading&quot;&gt;reading&lt;/a&gt;() function that returns a &lt;a href=&quot;qambientlightreading&quot;&gt;QAmbientLightReading&lt;/a&gt; instead of a &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0da591c8183c321ed676f76511be9ac6939930c" translate="yes" xml:space="preserve">
          <source>This class also features a &lt;a href=&quot;qambienttemperaturesensor#reading&quot;&gt;reading&lt;/a&gt;() function that returns a &lt;a href=&quot;qambienttemperaturereading&quot;&gt;QAmbientTemperatureReading&lt;/a&gt; instead of a &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25701aee48aa68728f1a4a1f85b9b324bd6b2acc" translate="yes" xml:space="preserve">
          <source>This class also features a &lt;a href=&quot;qcompass#reading&quot;&gt;reading&lt;/a&gt;() function that returns a &lt;a href=&quot;qcompassreading&quot;&gt;QCompassReading&lt;/a&gt; instead of a &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b092f87cedcb7edab2555ee74bd61b4382333ed" translate="yes" xml:space="preserve">
          <source>This class also features a &lt;a href=&quot;qdistancesensor#reading&quot;&gt;reading&lt;/a&gt;() function that returns a &lt;a href=&quot;qdistancereading&quot;&gt;QDistanceReading&lt;/a&gt; instead of a &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="072165dfee6155925a174340e7097b3d0359816f" translate="yes" xml:space="preserve">
          <source>This class also features a &lt;a href=&quot;qgyroscope#reading&quot;&gt;reading&lt;/a&gt;() function that returns a &lt;a href=&quot;qgyroscopereading&quot;&gt;QGyroscopeReading&lt;/a&gt; instead of a &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48a79de009f95356a8f8bcba38f1d95c239c60c" translate="yes" xml:space="preserve">
          <source>This class also features a &lt;a href=&quot;qholstersensor#reading&quot;&gt;reading&lt;/a&gt;() function that returns a &lt;a href=&quot;qholsterreading&quot;&gt;QHolsterReading&lt;/a&gt; instead of a &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77675675493a6a7890653dd775fa7ad39246b04" translate="yes" xml:space="preserve">
          <source>This class also features a &lt;a href=&quot;qhumiditysensor#reading&quot;&gt;reading&lt;/a&gt;() function that returns a &lt;a href=&quot;qhumidityreading&quot;&gt;QHumidityReading&lt;/a&gt; instead of a &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c7b38e5785827accfdcafd7fa28adf7974f97f" translate="yes" xml:space="preserve">
          <source>This class also features a &lt;a href=&quot;qirproximitysensor#reading&quot;&gt;reading&lt;/a&gt;() function that returns a &lt;a href=&quot;qirproximityreading&quot;&gt;QIRProximityReading&lt;/a&gt; instead of a &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8db43a3216d799348552163009f01fa1ab9fbf" translate="yes" xml:space="preserve">
          <source>This class also features a &lt;a href=&quot;qlidsensor#reading&quot;&gt;reading&lt;/a&gt;() function that returns a &lt;a href=&quot;qlidreading&quot;&gt;QLidReading&lt;/a&gt; instead of a &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea566d37424a0dc4b05ce9a9c842511405011de" translate="yes" xml:space="preserve">
          <source>This class also features a &lt;a href=&quot;qlightsensor#reading&quot;&gt;reading&lt;/a&gt;() function that returns a &lt;a href=&quot;qlightreading&quot;&gt;QLightReading&lt;/a&gt; instead of a &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a5c73c13f55d1e80e509589d77a9153c3cda58" translate="yes" xml:space="preserve">
          <source>This class also features a &lt;a href=&quot;qmagnetometer#reading&quot;&gt;reading&lt;/a&gt;() function that returns a &lt;a href=&quot;qmagnetometerreading&quot;&gt;QMagnetometerReading&lt;/a&gt; instead of a &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03291160a897351e42eee122a76953bd3d548a52" translate="yes" xml:space="preserve">
          <source>This class also features a &lt;a href=&quot;qorientationsensor#reading&quot;&gt;reading&lt;/a&gt;() function that returns a &lt;a href=&quot;qorientationreading&quot;&gt;QOrientationReading&lt;/a&gt; instead of a &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e3d475f2626c48d9c52335f893510c69d28c50" translate="yes" xml:space="preserve">
          <source>This class also features a &lt;a href=&quot;qpressuresensor#reading&quot;&gt;reading&lt;/a&gt;() function that returns a &lt;a href=&quot;qpressurereading&quot;&gt;QPressureReading&lt;/a&gt; instead of a &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0939ba13d4fe016b1603c7637531486160c1c74c" translate="yes" xml:space="preserve">
          <source>This class also features a &lt;a href=&quot;qproximitysensor#reading&quot;&gt;reading&lt;/a&gt;() function that returns a &lt;a href=&quot;qproximityreading&quot;&gt;QProximityReading&lt;/a&gt; instead of a &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db7e32dff9ea2d9edfc21556fad4358ac794879d" translate="yes" xml:space="preserve">
          <source>This class also features a &lt;a href=&quot;qrotationsensor#reading&quot;&gt;reading&lt;/a&gt;() function that returns a &lt;a href=&quot;qrotationreading&quot;&gt;QRotationReading&lt;/a&gt; instead of a &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e10116ea03b514a2fb51f2780826296c3af94cf" translate="yes" xml:space="preserve">
          <source>This class also features a &lt;a href=&quot;qtapsensor#reading&quot;&gt;reading&lt;/a&gt;() function that returns a &lt;a href=&quot;qtapreading&quot;&gt;QTapReading&lt;/a&gt; instead of a &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12498aaa96b098485fa454292d207222982e49b5" translate="yes" xml:space="preserve">
          <source>This class also features a &lt;a href=&quot;qtiltsensor#reading&quot;&gt;reading&lt;/a&gt;() function that returns a &lt;a href=&quot;qtiltreading&quot;&gt;QTiltReading&lt;/a&gt; instead of a &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4d7f7a5c3692ab0cf00fc456901de6b3cd5043" translate="yes" xml:space="preserve">
          <source>This class can be used to decode a stream of CBOR content directly from either a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; or a &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;. CBOR is the Concise Binary Object Representation, a very compact form of binary data encoding that is compatible with JSON. It was created by the IETF Constrained RESTful Environments (CoRE) WG, which has used it in many new RFCs. It is meant to be used alongside the &lt;a href=&quot;https://tools.ietf.org/html/rfc7252&quot;&gt;CoAP protocol&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef7c77fafddad61646a0d9513fc21fcd1c36a23" translate="yes" xml:space="preserve">
          <source>This class can be used to discover Classic and Low Energy Bluetooth devices. The individual device type can be determined via the &lt;a href=&quot;qbluetoothdeviceinfo#coreConfigurations&quot;&gt;QBluetoothDeviceInfo::coreConfigurations&lt;/a&gt;() attribute. In most cases the list returned by &lt;a href=&quot;qbluetoothdevicediscoveryagent#discoveredDevices&quot;&gt;discoveredDevices&lt;/a&gt;() contains both types of devices. However not every platform can detect both types of devices. On platforms with this limitation (for example iOS only suports Low Energy discovery), the discovery process will limit the search to the type which is supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e8e4d9eb8cef36028f01e6ed18aabfded9a233" translate="yes" xml:space="preserve">
          <source>This class can be used to explain the underlying data by adding labeled categories. Unlike &lt;a href=&quot;qbarcategoryaxis&quot;&gt;QBarCategoryAxis&lt;/a&gt;, &lt;a href=&quot;qcategoryaxis&quot;&gt;QCategoryAxis&lt;/a&gt; allows the widths of the category ranges to be specified freely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb7954f8c0a63cbf872c1ff3fc824d231b5f974" translate="yes" xml:space="preserve">
          <source>This class can be used to hold an associative container in CBOR, a map between a key and a value type. CBOR is the Concise Binary Object Representation, a very compact form of binary data encoding that is a superset of JSON. It was created by the IETF Constrained RESTful Environments (CoRE) WG, which has used it in many new RFCs. It is meant to be used alongside the &lt;a href=&quot;https://tools.ietf.org/html/rfc7252&quot;&gt;CoAP protocol&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb6b55cf8d61bbd53337bb919037a148f0cd8afb" translate="yes" xml:space="preserve">
          <source>This class can be used to hold one of the many types available in CBOR. CBOR is the Concise Binary Object Representation, a very compact form of binary data encoding that is a superset of JSON. It was created by the IETF Constrained RESTful Environments (CoRE) WG, which has used it in many new RFCs. It is meant to be used alongside the &lt;a href=&quot;https://tools.ietf.org/html/rfc7252&quot;&gt;CoAP protocol&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd24b3e43661695e69ef53098d2d8b9541a1d75" translate="yes" xml:space="preserve">
          <source>This class can be used to hold one sequential container in CBOR (an array). CBOR is the Concise Binary Object Representation, a very compact form of binary data encoding that is a superset of JSON. It was created by the IETF Constrained RESTful Environments (CoRE) WG, which has used it in many new RFCs. It is meant to be used alongside the &lt;a href=&quot;https://tools.ietf.org/html/rfc7252&quot;&gt;CoAP protocol&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c140238ae68e1531dc8beff5e063d8f940a8b386" translate="yes" xml:space="preserve">
          <source>This class can be used to quickly encode a stream of CBOR content directly to either a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; or &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;. CBOR is the Concise Binary Object Representation, a very compact form of binary data encoding that is compatible with JSON. It was created by the IETF Constrained RESTful Environments (CoRE) WG, which has used it in many new RFCs. It is meant to be used alongside the &lt;a href=&quot;https://tools.ietf.org/html/rfc7252&quot;&gt;CoAP protocol&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e58f2636cce09465b2353b4c0052147f8ced871" translate="yes" xml:space="preserve">
          <source>This class can be used to reference a surface buffer. As long as a reference to the buffer exists, it is owned by the compositor and the client cannot modify it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad81c8ed1f693ff3bd847ada27d9fadb7d98b10" translate="yes" xml:space="preserve">
          <source>This class collects a set of parameterless signals, and re-emits them with integer, string or widget parameters corresponding to the object that sent the signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377ef565d04e40ba19a6f16b50a2c68be16c6a96" translate="yes" xml:space="preserve">
          <source>This class combines a &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; and &lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent&lt;/a&gt; to provide a convenient way to load a single QML file. It also exposes some central application functionality to QML, which a C++/QML hybrid application would normally control from C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6cbcab7fc5fd888304395e78421e711d0e70e0" translate="yes" xml:space="preserve">
          <source>This class contains functions that provide simple interfaces to these services that indicate whether they succeeded or failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d05ccb8f521bd38882838b75cf7ef962ec0549" translate="yes" xml:space="preserve">
          <source>This class contains functions to query standard locations on the local filesystem, for common tasks such as user-specific directories or system-wide configuration directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed226d80875c5fbc67a757534e010004c33a0a2c" translate="yes" xml:space="preserve">
          <source>This class contains the information and API for HTML5 desktop and push notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33140d29c6cc4cf79baadac5ec852d0c9488a0e4" translate="yes" xml:space="preserve">
          <source>This class corresponds to a client connecting to the compositor using the Wayland protocol. It corresponds to the Wayland interface wl_client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd03bdca1b59fe46a11dc0c006f1579850b73bd9" translate="yes" xml:space="preserve">
          <source>This class defines parameters for DTLS cookie generator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49627ce23d159ca0325eeb197ffbbd09ba6a791" translate="yes" xml:space="preserve">
          <source>This class defines parameters for DTLS cookie generator. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6864abb6a02be0ebacea38f9abffa27fce57ade3" translate="yes" xml:space="preserve">
          <source>This class defines the standard interface that proxy models must use to be able to interoperate correctly with other model/view components. It is not supposed to be instantiated directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7184a824dc2da461a12b8183f2696b3dbaf807bf" translate="yes" xml:space="preserve">
          <source>This class describes the features that are supported by the DOM implementation. Currently the XML subset of DOM Level 1 and DOM Level 2 Core are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349493cd73034d2c3b5a88ef7bf0951db5f8efb4" translate="yes" xml:space="preserve">
          <source>This class does not fully implement an item by itself; in particular, it does not implement &lt;a href=&quot;qgraphicsitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;() and &lt;a href=&quot;qgraphicsitem#paint&quot;&gt;paint&lt;/a&gt;(), which are inherited by &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a518e6f323239bd985aff0ed9baa8a2435c0b2b" translate="yes" xml:space="preserve">
          <source>This class does not have a public constructor. It can only be instantiated by using the dynamic &lt;a href=&quot;qremoteobjectnode#acquire&quot;&gt;QRemoteObjectNode::acquire&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b9d6db7b521d49eb6df744c04e1072e1bb87d8" translate="yes" xml:space="preserve">
          <source>This class does not offer any GUI components or functionality for indices or contents. If you need one of those use &lt;a href=&quot;qhelpengine&quot;&gt;QHelpEngine&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793145596486b1bab92b81f9225df15829705cba" translate="yes" xml:space="preserve">
          <source>This class draws data as a series of horizontal bars grouped by category, with one bar per category from each bar set added to the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb8c62ffe4e23e1e166d2cd28c5c2b1f77720ed4" translate="yes" xml:space="preserve">
          <source>This class draws data as a series of uniformly sized horizontally stacked bars, with one bar per category. Each bar set added to the series contributes a single segment to each stacked bar. The segment size corresponds to the percentage of the segment value compared with the total value of all segments in the stack. Bars with zero value are not drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af5d5bb6418bc5ebeb8ccb87baafd797b23868b" translate="yes" xml:space="preserve">
          <source>This class draws data as a series of uniformly sized vertically stacked bars, with one bar per category. Each bar set added to the series contributes a single segment to each stacked bar. The segment size corresponds to the percentage of the segment value compared with the total value of all segments in the stack. Bars with zero value are not drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d4aeba396efd3303a2aff762f2418609ca3797" translate="yes" xml:space="preserve">
          <source>This class draws data as a series of vertical bars grouped by category, with one bar per category from each bar set added to the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd66037780fd4fe6e3678777fc1cd7b7594f060" translate="yes" xml:space="preserve">
          <source>This class enables developers to display SVG drawings alongside standard widgets, and is used in much the same way as &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; is used for displaying text and bitmap images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d837d3268b3129f09db63843abc2be7a677864" translate="yes" xml:space="preserve">
          <source>This class enables developers to render 3D surface plots and to view them by rotating the scene freely. The visual properties of the surface such as draw mode and shading can be controlled via &lt;a href=&quot;qsurface3dseries&quot;&gt;QSurface3DSeries&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a940f0f2f12a7d47191fc773d9334a73fdab01f5" translate="yes" xml:space="preserve">
          <source>This class enables developers to render bar graphs in 3D and to view them by rotating the scene freely. Rotation is done by holding down the right mouse button and moving the mouse. Zooming is done by mouse wheel. Selection, if enabled, is done by left mouse button. The scene can be reset to default camera view by clicking mouse wheel. In touch devices rotation is done by tap-and-move, selection by tap-and-hold and zoom by pinch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d5df18963a6a001c9d6d1f27ec196d278b1c36" translate="yes" xml:space="preserve">
          <source>This class enables developers to render scatter graphs in 3D and to view them by rotating the scene freely. Rotation is done by holding down the right mouse button and moving the mouse. Zooming is done by mouse wheel. Selection, if enabled, is done by left mouse button. The scene can be reset to default camera view by clicking mouse wheel. In touch devices rotation is done by tap-and-move, selection by tap-and-hold and zoom by pinch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89868f13b00f95c77b4154f0110565f7441f6507" translate="yes" xml:space="preserve">
          <source>This class enables rendering qml into a texture, which then can be used as a part of 3D scene</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7afbb42e3cef78a4a5b8519ce3601a2c36f21eec" translate="yes" xml:space="preserve">
          <source>This class enables rendering qml into a texture, which then can be used as a part of 3D scene. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3831a7a48060fe7dd95bc0d98fe1530fa9215f8a" translate="yes" xml:space="preserve">
          <source>This class enables rendering qml into a texture, which then can be used as a part of 3D scene. &lt;a href=&quot;qt3drender-quick-qscene2d#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61c974ccdf2680a58d816b378c7dc5d21e5b7bd" translate="yes" xml:space="preserve">
          <source>This class encapsulates a rectangular area of pixels that is displayed on an output device. It corresponds to the interface &lt;code&gt;wl_surface&lt;/code&gt; in the Wayland protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df3aed48709edab052158e8140b7744da509110" translate="yes" xml:space="preserve">
          <source>This class exposes what zones are used by a particular camera, and a list of the zones can be retrieved by a &lt;a href=&quot;qcamerafocus&quot;&gt;QCameraFocus&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac8404d7feabfdc6f8c146651df29b693986ac4" translate="yes" xml:space="preserve">
          <source>This class extends &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; (in read-only mode), adding some navigation functionality so that users can follow links in hypertext documents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c112a08d028dc7a9675f88aba5819e785a2db1b" translate="yes" xml:space="preserve">
          <source>This class gathers together the features of the specialized handler classes, making it a convenient starting point when implementing custom handlers for subclasses of &lt;a href=&quot;qxmlreader&quot;&gt;QXmlReader&lt;/a&gt;, particularly &lt;a href=&quot;qxmlsimplereader&quot;&gt;QXmlSimpleReader&lt;/a&gt;. The virtual functions from each of the base classes are reimplemented in this class, providing sensible default behavior for many common cases. By subclassing this class, and overriding these functions, you can concentrate on implementing the parts of the handler relevant to your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e693afd87521e98c9910db0ef4fbde5eb8b4623" translate="yes" xml:space="preserve">
          <source>This class holds a Bluetooth address in a platform- and protocol-independent manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269fe8cd79431ffdfdbb0b45fafe8bc558ed24fd" translate="yes" xml:space="preserve">
          <source>This class holds an IPv4 or IPv6 address in a platform- and protocol-independent manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e1d2fe5e22a6d22b20c2c64e740f4c334e174b" translate="yes" xml:space="preserve">
          <source>This class holds the name and address of a local Bluetooth device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc4a83683bb057e8d8ea099e82e3dff04e3cefd4" translate="yes" xml:space="preserve">
          <source>This class implements an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17382f9aa5d3d92a3f868dd5894d96a2f97770d9" translate="yes" xml:space="preserve">
          <source>This class implements cookies as described by the &lt;a href=&quot;http://cgi.netscape.com/newsref/std/cookie_spec.html&quot;&gt;initial cookie specification by Netscape&lt;/a&gt;, which is somewhat similar to the &lt;a href=&quot;http://www.rfc-editor.org/rfc/rfc2109.txt&quot;&gt;RFC 2109&lt;/a&gt; specification, plus the &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms533046(VS.85).aspx&quot;&gt;&quot;HttpOnly&quot; extension&lt;/a&gt;. The more recent &lt;a href=&quot;http://www.rfc-editor.org/rfc/rfc2965.txt&quot;&gt;RFC 2965&lt;/a&gt; specification (which uses the Set-Cookie2 header) is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d65c6696d8f8be38a3a06bbcfe4e5fd741cdd7" translate="yes" xml:space="preserve">
          <source>This class implements getter and setter functions that are used to customize settings shown in print dialogs, but it is not used directly. Use &lt;a href=&quot;qprintdialog&quot;&gt;QPrintDialog&lt;/a&gt; to display a print dialog in your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5feb66dffc7a6b5249a49043db0eb777230d45fd" translate="yes" xml:space="preserve">
          <source>This class implements only the basic security recommended by the cookie specifications and does not implement any cookie acceptance policy (it accepts all cookies set by any requests). In order to override those rules, you should reimplement the &lt;a href=&quot;qnetworkcookiejar#cookiesForUrl&quot;&gt;cookiesForUrl&lt;/a&gt;() and &lt;a href=&quot;qnetworkcookiejar#setCookiesFromUrl&quot;&gt;setCookiesFromUrl&lt;/a&gt;() virtual functions. They are called by &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; and &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; when they detect new cookies and when they require cookies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5f1db93622cb5889cab1531187147e9aea9d81" translate="yes" xml:space="preserve">
          <source>This class implements schema validation according to the &lt;a href=&quot;http://www.w3.org/XML/Schema&quot;&gt;XML Schema&lt;/a&gt; 1.0 specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae62132063f054a8e6f3aea6c482629b33da345f" translate="yes" xml:space="preserve">
          <source>This class implements server-side DTLS cookie generation and verification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="213e231d3abf41246368c62e88f8d23b7dd61484" translate="yes" xml:space="preserve">
          <source>This class implements server-side DTLS cookie generation and verification. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959f7872877240e16566ecdb8210616720643638" translate="yes" xml:space="preserve">
          <source>This class implements support for the set of standard page sizes as defined in the Adobe Postscript PPD Standard v4.3. It defines the standard set of page sizes in points, millimeters and inches and ensures these sizes are consistently used. Other size units can be used but will be calculated results and so may not always be consistent. The defined point sizes are always a integer, all other sizes can be fractions of a unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="204a5087d70926c824b64a1096f985cf804bfeff" translate="yes" xml:space="preserve">
          <source>This class implements the &lt;a href=&quot;https://tools.ietf.org/html/rfc6749#section-4.1&quot;&gt;Authorization Code Grant&lt;/a&gt; flow, which is used both to obtain and to refresh access tokens. It is a redirection-based flow so the user will need access to a web browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44634c4212946cfcc33b751ddb1aa8efc632236" translate="yes" xml:space="preserve">
          <source>This class implements the ECMAScript data model as described in SCXML Specification - B.2 The ECMAScript Data Model. It can be subclassed to perform custom initialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a9ff97cae7fe86c93ede3366ea1f14db26afa3c" translate="yes" xml:space="preserve">
          <source>This class implements the RAII principle which helps to ensure behavior in complex code or in the presence of exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97219aac4d37a925046118a3685cb84fdf5f018a" translate="yes" xml:space="preserve">
          <source>This class implements the audio functionality for &lt;a href=&quot;qaudiodeviceinfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt;, i.e., &lt;a href=&quot;qaudiodeviceinfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt; keeps a &lt;a href=&quot;qabstractaudiodeviceinfo&quot;&gt;QAbstractAudioDeviceInfo&lt;/a&gt; and routes function calls to it. For a description of the functionality that &lt;a href=&quot;qabstractaudiodeviceinfo&quot;&gt;QAbstractAudioDeviceInfo&lt;/a&gt; implements, you can read the class and functions documentation of &lt;a href=&quot;qaudiodeviceinfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bacd425888e2d0f3a33cb59c2ce2f054865a4184" translate="yes" xml:space="preserve">
          <source>This class implements the null data model as described in the SCXML Specification - B.1 The Null Data Model. Using the value &lt;code&gt;&quot;null&quot;&lt;/code&gt; for the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704045865cd6399bc1698d207d022a3913e1c65e" translate="yes" xml:space="preserve">
          <source>This class includes data obtained from the CLDR data files under the terms of the Unicode Data Files and Software License. See Unicode Common Locale Data Repository (CLDR) for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14bfed3df687db45d73fc909346325b1ff6c3f1c" translate="yes" xml:space="preserve">
          <source>This class is a &lt;a href=&quot;qobject#Q_GADGET&quot;&gt;Q_GADGET&lt;/a&gt; since Qt 5.5. It can be &lt;a href=&quot;positioning-cpp-qml#cpp-value-integration-positioning&quot;&gt;directly used from C++ and QML&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39047f230f164d2a61f49898ff7d3d9551d90016" translate="yes" xml:space="preserve">
          <source>This class is a &lt;a href=&quot;qobject#Q_GADGET&quot;&gt;Q_GADGET&lt;/a&gt;. It can be &lt;a href=&quot;positioning-cpp-qml#cpp-value-integration-positioning&quot;&gt;directly used from C++ and QML&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ca26f1b9c9ca423379727ec3df7b9df383529b" translate="yes" xml:space="preserve">
          <source>This class is a equivalent to &lt;code&gt;QAtomicInteger&amp;lt;int&amp;gt;&lt;/code&gt;. All other functionality is equivalent. Please see that class for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7caf013bf9a57ced2cdf5f356dbdbdc35d115a60" translate="yes" xml:space="preserve">
          <source>This class is a thin wrapper around an integer ID. You pass it into and out of functions by value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28027cee025aaff4e39cd3ec55916c95d5132e18" translate="yes" xml:space="preserve">
          <source>This class is a tool for optimized drawing with &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;. You can use it to store temporary pixmaps that are expensive to generate without using more storage space than &lt;a href=&quot;qpixmapcache#cacheLimit&quot;&gt;cacheLimit&lt;/a&gt;(). Use &lt;a href=&quot;qpixmapcache#insert&quot;&gt;insert&lt;/a&gt;() to insert pixmaps, find() to find them, and &lt;a href=&quot;qpixmapcache#clear&quot;&gt;clear&lt;/a&gt;() to empty the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1034f8cc6a160ac606e67b6faf06ceb409367a89" translate="yes" xml:space="preserve">
          <source>This class is also a complete replacement for QSysInfo::macVersion and QSysInfo::windowsVersion, additionally providing access to the third (micro) version number component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddcc223581e4c9634bc2a5334f7b51bd31af9811" translate="yes" xml:space="preserve">
          <source>This class is convenient to use as a base class for custom implementations of QAccessibleInterfaces that provide information about widget objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa2b67894443af021a80b2d34ef168a966a7c0c" translate="yes" xml:space="preserve">
          <source>This class is deprecated, you should use &lt;a href=&quot;qcanbusfactoryv2&quot;&gt;QCanBusFactoryV2&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d66dcfb65a921c4740107da1dda14388f1ac78d" translate="yes" xml:space="preserve">
          <source>This class is deprecated; use &lt;a href=&quot;qt3dextras-qdiffusespecularmaterial&quot;&gt;QDiffuseSpecularMaterial&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a81c728277c2b8a94a329bf2d44dd03a4ee2b3" translate="yes" xml:space="preserve">
          <source>This class is deprecated; use &lt;a href=&quot;qt3dextras-qdiffusespecularmaterial&quot;&gt;Qt3DExtras::QDiffuseSpecularMaterial&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec837641318b032b797e3d39c43b3e7eec7248ff" translate="yes" xml:space="preserve">
          <source>This class is deprecated; use &lt;a href=&quot;qt3dextras-qmetalroughmaterial&quot;&gt;QMetalRoughMaterial&lt;/a&gt; instead. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ca76a8f798e64902df281659b94b13a373fde7" translate="yes" xml:space="preserve">
          <source>This class is designed to improve the performance of substring handling when manipulating substrings obtained from existing &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; instances. &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; avoids the memory allocation and reference counting overhead of a standard &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; by simply referencing a part of the original string. This can prove to be advantageous in low level code, such as that used in a parser, at the expense of potentially more complex code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e25d91b353357bfdf3219c143c0cd3034c9e981" translate="yes" xml:space="preserve">
          <source>This class is mainly provided for convenience. All subclasses of the &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; that provide implementations of non-widget objects should use this class as their base class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af2b15269a23b26e9835d6ddc10bce999515c30" translate="yes" xml:space="preserve">
          <source>This class is mainly used to create mouse cursors that are associated with particular widgets and to get and set the position of the mouse cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b08a6f94cd1de8834cd248eebdd82aeaf9e138c" translate="yes" xml:space="preserve">
          <source>This class is meant as a base class for multimedia objects so this constructor is protected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="894398ee1fd1d06dcfcbbcd0a91ddf0ce1bd4d69" translate="yes" xml:space="preserve">
          <source>This class is more efficient than using the QDBusConnectionInterface::serviceOwnerChanged() signal because it allows one to receive only the signals for which the class is interested in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b75bebae20de5481601e1823e9a3ce702c781a" translate="yes" xml:space="preserve">
          <source>This class is not intended to be used directly, but extended from C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2430514bf080c977855d26658fec399503b047" translate="yes" xml:space="preserve">
          <source>This class is not normally required for application programming, but it is useful if you write meta-applications, such as scripting engines or GUI builders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce197b5e6951d4906066a4bd78cd3cb825f58499" translate="yes" xml:space="preserve">
          <source>This class is not suitable for constructing shapes for rendering, especially as outlines. Use &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; to create paths and shapes for use with &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d454bc54c7c56972840a9a26edb0373ad97fbcd" translate="yes" xml:space="preserve">
          <source>This class is not used on its own. Instead it is used to derive other complex control options, for example &lt;a href=&quot;qstyleoptionslider&quot;&gt;QStyleOptionSlider&lt;/a&gt; and &lt;a href=&quot;qstyleoptionspinbox&quot;&gt;QStyleOptionSpinBox&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4be4d4dd3bb9b7ec19c0bc25da30584bd74897" translate="yes" xml:space="preserve">
          <source>This class is often used for optimization purposes, as it allows you to defer an expensive operation until after all the properties have been set on an object. For example, QML's &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; element uses the parser status to defer text layout until all of its properties have been set (we don't want to layout when the &lt;code&gt;text&lt;/code&gt; is assigned, and then relayout when the &lt;code&gt;font&lt;/code&gt; is assigned, and relayout again when the &lt;code&gt;width&lt;/code&gt; is assigned, and so on).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1202145c38af8f0228f75c37810a9d1fe2ef5dc" translate="yes" xml:space="preserve">
          <source>This class is only useful to construct a &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt; with 8-bit character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39761958543ad598ef47bc04e5c3a23e4638bcfa" translate="yes" xml:space="preserve">
          <source>This class is part of &lt;a href=&quot;accessible-qwidget&quot;&gt;Accessibility for QWidget Applications&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b678e882c15980713cb9350ec0b8564340a728d7" translate="yes" xml:space="preserve">
          <source>This class is part of &lt;a href=&quot;https://doc.qt.io/qt-5.13/animation-overview.html#&quot;&gt;The Animation Framework&lt;/a&gt;. It serves as a base class for property and item animations, with functions for shared functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50cb9d1853fc3d84e45d48ceeb27b9843a3d8b3" translate="yes" xml:space="preserve">
          <source>This class is part of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/accessible-qtquick.html&quot;&gt;Accessibility for Qt Quick Applications&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec9ae8b9568dadc029da63c8c8bb3639baf582e" translate="yes" xml:space="preserve">
          <source>This class is part of the &lt;a href=&quot;qwaylandiviapplication&quot;&gt;QWaylandIviApplication&lt;/a&gt; extension and provides a way to extend the functionality of an existing &lt;a href=&quot;qwaylandsurface&quot;&gt;QWaylandSurface&lt;/a&gt; with a way to resize and identify it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55fa20c2d2ec1008fc8065a3e25d4a244325418d" translate="yes" xml:space="preserve">
          <source>This class is part of the &lt;a href=&quot;qwaylandwlshell&quot;&gt;QWaylandWlShell&lt;/a&gt; extension and provides a way to extend the functionality of an existing &lt;a href=&quot;qwaylandsurface&quot;&gt;QWaylandSurface&lt;/a&gt; with features specific to desktop-style compositors, such as resizing and moving the surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209566714d15b965d5d5822e006e3ca65f116b38" translate="yes" xml:space="preserve">
          <source>This class is part of the &lt;a href=&quot;qwaylandxdgshell&quot;&gt;QWaylandXdgShell&lt;/a&gt; extension and provides a way to extend the functionality of a &lt;a href=&quot;qwaylandxdgsurface&quot;&gt;QWaylandXdgSurface&lt;/a&gt; with features specific to desktop-style menus for an xdg surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037032b193766d22544fd8fcd4797d402fbb3fa8" translate="yes" xml:space="preserve">
          <source>This class is part of the &lt;a href=&quot;qwaylandxdgshell&quot;&gt;QWaylandXdgShell&lt;/a&gt; extension and provides a way to extend the functionality of an &lt;a href=&quot;qwaylandxdgsurface&quot;&gt;QWaylandXdgSurface&lt;/a&gt; with features specific to desktop-style windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b7bd1a39e1408fb12092af793115bfa18f01d8" translate="yes" xml:space="preserve">
          <source>This class is part of the &lt;a href=&quot;qwaylandxdgshell&quot;&gt;QWaylandXdgShell&lt;/a&gt; extension and provides a way to extend the functionality of an existing &lt;a href=&quot;qwaylandsurface&quot;&gt;QWaylandSurface&lt;/a&gt; with features specific to desktop-style compositors, such as resizing and moving the surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44fe445f66be41ab2525c34c956958ebf5c9748" translate="yes" xml:space="preserve">
          <source>This class is part of the &lt;a href=&quot;qwaylandxdgshellv5&quot;&gt;QWaylandXdgShellV5&lt;/a&gt; extension and provides a way to extend the functionality of an existing &lt;a href=&quot;qwaylandsurface&quot;&gt;QWaylandSurface&lt;/a&gt; with features specific to desktop-style compositors, such as resizing and moving the surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ef7cb3dbda18b475cbd622ab3cae4611e228ad" translate="yes" xml:space="preserve">
          <source>This class is part of the &lt;a href=&quot;qwaylandxdgshellv5&quot;&gt;QWaylandXdgShellV5&lt;/a&gt; extension and provides a way to extend the functionality of an existing &lt;a href=&quot;qwaylandsurface&quot;&gt;QWaylandSurface&lt;/a&gt; with features specific to desktop-style menus for an xdg surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691432032690983ead82ee0a41b3ef1585069cf7" translate="yes" xml:space="preserve">
          <source>This class is part of the &lt;a href=&quot;qwaylandxdgshellv6&quot;&gt;QWaylandXdgShellV6&lt;/a&gt; extension and provides a way to extend the functionality of a &lt;a href=&quot;qwaylandxdgsurfacev6&quot;&gt;QWaylandXdgSurfaceV6&lt;/a&gt; with features specific to desktop-style menus for an xdg surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126cfa5e5d56b6d8241ddefe569f32895d6dfa31" translate="yes" xml:space="preserve">
          <source>This class is part of the &lt;a href=&quot;qwaylandxdgshellv6&quot;&gt;QWaylandXdgShellV6&lt;/a&gt; extension and provides a way to extend the functionality of an &lt;a href=&quot;qwaylandxdgsurfacev6&quot;&gt;QWaylandXdgSurfaceV6&lt;/a&gt; with features specific to desktop-style windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95fd245be253a5e70af07e02e1c3a72436e7b833" translate="yes" xml:space="preserve">
          <source>This class is part of the &lt;a href=&quot;qwaylandxdgshellv6&quot;&gt;QWaylandXdgShellV6&lt;/a&gt; extension and provides a way to extend the functionality of an existing &lt;a href=&quot;qwaylandsurface&quot;&gt;QWaylandSurface&lt;/a&gt; with features specific to desktop-style compositors, such as resizing and moving the surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f926d980dd414ae50ced85706f43f73ab5880302" translate="yes" xml:space="preserve">
          <source>This class is primarily designed for use in &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt;; most applications will not need to access this class directly and should instead use &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; with a &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::TimeSpec&lt;/a&gt; of &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::TimeZone&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f369facb2d6111b31971d45ae6b9596d708747b1" translate="yes" xml:space="preserve">
          <source>This class is rarely instanced directly since it doesn't provide any frame graph specific behavior, although it can be convenient to use for grouping other nodes together in dynamic frame graphs. The actual behavior comes from the subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="776296ed20d4e91fcea6f5398612bc6760297269" translate="yes" xml:space="preserve">
          <source>This class is returned by &lt;a href=&quot;qcborstreamreader#readString&quot;&gt;readString&lt;/a&gt;() and &lt;a href=&quot;qcborstreamreader#readByteArray&quot;&gt;readByteArray&lt;/a&gt;(), with either the contents of the string that was read or an indication that the parsing is done or found an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74efba0b58127e75d20eb810b954054dc7b88bd6" translate="yes" xml:space="preserve">
          <source>This class is similar in functionality to &lt;a href=&quot;qdbusreply&quot;&gt;QDBusReply&lt;/a&gt;, but with two important differences:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b8d61ccf7abc19364b71c216a0e9d8245b01e0" translate="yes" xml:space="preserve">
          <source>This class is the base class for classes which specify a geographic area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9126514d948727eda199496be519f5efbccbdf" translate="yes" xml:space="preserve">
          <source>This class is the initial point in a D-Bus session. Using it, you can get access to remote objects, interfaces; connect remote signals to your object's slots; register objects, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57cabf6b29f8ece0ca10ea3452091fd97e72bfaf" translate="yes" xml:space="preserve">
          <source>This class is typically used in conjunction with &lt;a href=&quot;qaudioinput&quot;&gt;QAudioInput&lt;/a&gt; or &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; to allow you to specify the parameters of the audio stream being read or written, or with &lt;a href=&quot;qaudiobuffer&quot;&gt;QAudioBuffer&lt;/a&gt; when dealing with samples in memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38baf485da4534f7c637fb59ca2306f7572ee1ca" translate="yes" xml:space="preserve">
          <source>This class is used as an index into item models derived from &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;. The index is used by item views, delegates, and selection models to locate an item in the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218b1e1ece66f8e71e1e6a40df81dcd4f0396f3e" translate="yes" xml:space="preserve">
          <source>This class is used by &lt;a href=&quot;qcborvalue#fromCbor-1&quot;&gt;QCborValue::fromCbor&lt;/a&gt;(const QByteArray &amp;amp;ba, QCborParserError *error) to report a parser error and the byte offset where the error was detected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2fb644f903699d6406362a0088b2afb6d06fd3" translate="yes" xml:space="preserve">
          <source>This class is used by non-GUI applications to provide their event loop. For non-GUI application that uses Qt, there should be exactly one &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; object. For GUI applications, see &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt;. For applications that use the Qt Widgets module, see &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75889a250a90c1a63de1924e451b9fc024ca159" translate="yes" xml:space="preserve">
          <source>This class is used by the &lt;a href=&quot;qwebenginepage#quotaRequested&quot;&gt;QWebEnginePage::quotaRequested&lt;/a&gt;() signal to &lt;a href=&quot;qwebenginequotarequest#accept&quot;&gt;accept&lt;/a&gt;() or &lt;a href=&quot;qwebenginequotarequest#reject&quot;&gt;reject&lt;/a&gt;() a request for an increase in the persistent storage allocated to the application. The default quota is 0 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1afdd4a862a45131408b7ae5fe15b2514b5fd1de" translate="yes" xml:space="preserve">
          <source>This class is used in conjunction with the &lt;a href=&quot;qpainter#drawPixmapFragments&quot;&gt;QPainter::drawPixmapFragments&lt;/a&gt;() function to specify how a pixmap, or sub-rect of a pixmap, is drawn. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12dc0e3eb87530b779bbc269296ef09308a4d6ec" translate="yes" xml:space="preserve">
          <source>This class is used to construct horizontal box layout objects. See &lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayout&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22a7954f12a2c0d269e41c7a84a33f7d60ae8c3" translate="yes" xml:space="preserve">
          <source>This class is used to construct vertical box layout objects. See &lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayout&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6ca10650f5135ddb339ea2b43ae02ae98f3b76" translate="yes" xml:space="preserve">
          <source>This class is used to describe an option on the command line. It allows different ways of defining the same option with multiple aliases possible. It is also used to describe how the option is used - it may be a flag (e.g. &lt;code&gt;-v&lt;/code&gt;) or take a value (e.g. &lt;code&gt;-o file&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8119229449b740a76cff05084d18c8894d1dedc9" translate="yes" xml:space="preserve">
          <source>This class is used to render &lt;code&gt;wl_shell&lt;/code&gt;, &lt;code&gt;xdg_shell&lt;/code&gt; or &lt;code&gt;ivi_application&lt;/code&gt; surfaces as part of a Qt Quick scene. It handles moving and resizing triggered by clicking on the window decorations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a24f18eae695fc68c9931abe0b294219b61ccde" translate="yes" xml:space="preserve">
          <source>This class is used to represent schemas that conform to the &lt;a href=&quot;http://www.w3.org/XML/Schema&quot;&gt;XML Schema&lt;/a&gt; 1.0 specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1afd316552ede27a6d0ebe447e06ee709545664" translate="yes" xml:space="preserve">
          <source>This class is used to show simple animations without sound. If you want to display video and media content, use the &lt;a href=&quot;qtmultimedia-index&quot;&gt;Qt Multimedia&lt;/a&gt; multimedia framework instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670dc4625263da3825fa3f4f5593c3f188f6ad84" translate="yes" xml:space="preserve">
          <source>This class is used with &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaccessible-obsolete.html#updateAccessibility&quot;&gt;QAccessible::updateAccessibility&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f682294dbf9eadf4af9220f455fd30775032c8" translate="yes" xml:space="preserve">
          <source>This class is useful when you have a sequence of &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;s that you want to repeatedly match against some strings (perhaps in a loop), or when you want to search for the same sequence of characters multiple times in the same string. Using a matcher object and &lt;a href=&quot;qstringmatcher#indexIn&quot;&gt;indexIn&lt;/a&gt;() is faster than matching a plain &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; with &lt;a href=&quot;qstring#indexOf&quot;&gt;QString::indexOf&lt;/a&gt;() if repeated matching takes place. This class offers no benefit if you are doing one-off string matches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7f88e13939953b18c2ffd0149678e1e4068ebd" translate="yes" xml:space="preserve">
          <source>This class is useful when you have a sequence of bytes that you want to repeatedly match against some byte arrays (perhaps in a loop), or when you want to search for the same sequence of bytes multiple times in the same byte array. Using a matcher object and &lt;a href=&quot;qbytearraymatcher#indexIn&quot;&gt;indexIn&lt;/a&gt;() is faster than matching a plain &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; with &lt;a href=&quot;qbytearray#indexOf&quot;&gt;QByteArray::indexOf&lt;/a&gt;() if repeated matching takes place. This class offers no benefit if you are doing one-off byte array matches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6edd508ad7ffe27e89127f627db5be9d5e991421" translate="yes" xml:space="preserve">
          <source>This class is useful when you have a sequence of bytes that you want to repeatedly match against some byte arrays (perhaps in a loop), or when you want to search for the same sequence of bytes multiple times in the same byte array. Using a matcher object and &lt;a href=&quot;qstaticbytearraymatcher#indexIn&quot;&gt;indexIn&lt;/a&gt;() is faster than matching a plain &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; with &lt;a href=&quot;qbytearray#indexOf&quot;&gt;QByteArray::indexOf&lt;/a&gt;(), in particular if repeated matching takes place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a89b56706d1f17593af166e6bca7d59902ab053" translate="yes" xml:space="preserve">
          <source>This class makes it possible to accept incoming TCP connections. You can specify the port or have &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt; pick one automatically. You can listen on a specific address or on all the machine's addresses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77698a45763b141c6a7e9b3cf5e86c9aa1a17065" translate="yes" xml:space="preserve">
          <source>This class makes it possible to accept incoming local socket connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b1aa7cccfcdfa246153d8ae7e33c92fcf55024" translate="yes" xml:space="preserve">
          <source>This class manages the series specific visual elements, as well as the series data (via a data proxy).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4175a9c2f6484502bf8b18ad01db09889ec10ca7" translate="yes" xml:space="preserve">
          <source>This class may internally utilize &lt;a href=&quot;qbluetoothdevicediscoveryagent&quot;&gt;QBluetoothDeviceDiscoveryAgent&lt;/a&gt; to find unknown devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f789eef67357f11a2e39eae45f713f4c3c0ea2" translate="yes" xml:space="preserve">
          <source>This class must be overridden to provide an implementation for saving (&lt;a href=&quot;qremoteobjectabstractpersistedstore#saveProperties&quot;&gt;QRemoteObjectAbstractPersistedStore::saveProperties&lt;/a&gt;) and restoring (&lt;a href=&quot;qremoteobjectabstractpersistedstore#restoreProperties&quot;&gt;QRemoteObjectAbstractPersistedStore::restoreProperties&lt;/a&gt;) PROP values. The derived type can then be set for a node, and any replica acquired from that node will then automatically store PERSISTED properties when the replica destructor is called, and retrieve the values when the replica is instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f58d135a1c5f785fb9c7768b449047868ab311e" translate="yes" xml:space="preserve">
          <source>This class provides a stateless calculator for time zone conversions between UTC and the local time in a specific time zone. By default it uses the host system time zone data to perform these conversions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea07b6360d7d1bb19c055f8fabcd5b6756df6f80" translate="yes" xml:space="preserve">
          <source>This class provides access to the &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; of QQuickTextEdit elements. This is provided to allow usage of the &lt;a href=&quot;richtext&quot;&gt;Rich Text Processing&lt;/a&gt; functionalities of Qt. You are not allowed to modify the document, but it can be used to output content, for example with &lt;a href=&quot;qtextdocumentwriter&quot;&gt;QTextDocumentWriter&lt;/a&gt;), or provide additional formatting, for example with &lt;a href=&quot;qsyntaxhighlighter&quot;&gt;QSyntaxHighlighter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96afa76685c7a2e5f8de5466497d958adf3a7a9a" translate="yes" xml:space="preserve">
          <source>This class provides access to the keyboard device in a &lt;a href=&quot;qwaylandseat&quot;&gt;QWaylandSeat&lt;/a&gt;. It corresponds to the Wayland interface wl_keyboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18bd158262e5bd3ba93797b08bc77fc2f2d45df4" translate="yes" xml:space="preserve">
          <source>This class provides access to the local filesystem, providing functions for renaming and removing files and directories, and for creating new directories. In the simplest case, it can be used with a suitable display widget as part of a browser or filer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28baa77383750ade91fb5f895a35d3a0eccc9f1" translate="yes" xml:space="preserve">
          <source>This class provides access to the local filesystem, providing functions for renaming and removing files and directories, and for creating new directories. In the simplest case, it can be used with a suitable display widget as part of a browser or filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c350b3e24575e7e7c971dff548d701371c4324" translate="yes" xml:space="preserve">
          <source>This class provides access to the pointer device in a &lt;a href=&quot;qwaylandseat&quot;&gt;QWaylandSeat&lt;/a&gt;. It corresponds to the Wayland interface wl_pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85673ada9b71ec24bcc04694f87a3a41eee3aea8" translate="yes" xml:space="preserve">
          <source>This class provides access to the touch device in a &lt;a href=&quot;qwaylandseat&quot;&gt;QWaylandSeat&lt;/a&gt;. It corresponds to the Wayland interface wl_touch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecef3aaca3ced53d84213f1a99f7e29fdf491c55" translate="yes" xml:space="preserve">
          <source>This class provides default implementations of the functions for painting item data in a view and editing data from item models. Default implementations of the &lt;a href=&quot;qitemdelegate#paint&quot;&gt;paint&lt;/a&gt;() and &lt;a href=&quot;qitemdelegate#sizeHint&quot;&gt;sizeHint&lt;/a&gt;() virtual functions, defined in &lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt;, are provided to ensure that the delegate implements the correct basic behavior expected by views. You can reimplement these functions in subclasses to customize the appearance of items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060ff24d572f5cf93b8b0df45a7eda303607b651" translate="yes" xml:space="preserve">
          <source>This class provides encryption for UDP sockets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e763f52a6f941b8e11563fb0345e0fc2177026" translate="yes" xml:space="preserve">
          <source>This class provides encryption for UDP sockets. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a88db708592aac5620ca038f6b73f99b8e1d9328" translate="yes" xml:space="preserve">
          <source>This class provides formatting rules for a linear value 3D axis. Subclass it if you want to implement custom value axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe635c2d906eeb4ec65d100c7e0f2860b01029bb" translate="yes" xml:space="preserve">
          <source>This class provides information about the user's desktop, such as its total size, number of screens, the geometry of each screen, and whether they are configured as separate desktops or a single virtual desktop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dfc82394c4289ec1b18f4396d391ff50b25ecbe" translate="yes" xml:space="preserve">
          <source>This class recognizes the encoding of the data by reading the encoding declaration in the XML file if it finds one, and reading the data using the corresponding encoding. If it does not find an encoding declaration, then it assumes that the data is either in UTF-8 or UTF-16, depending on whether it can find a byte-order mark.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bba0cd21e56d10f59a4460ac91bcb0d7c506578" translate="yes" xml:space="preserve">
          <source>This class represents Online Certificate Status Protocol response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013a510d501ba93f38177c6f22cc29ea530cfea7" translate="yes" xml:space="preserve">
          <source>This class represents Online Certificate Status Protocol response. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335fac72734bdcd460e3575e29b839bfdb377807" translate="yes" xml:space="preserve">
          <source>This class represents an entity in an XML document, either parsed or unparsed. Note that this models the entity itself not the entity declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac82ef6a901c90274c2d385bbd4d7c662d0bf8f5" translate="yes" xml:space="preserve">
          <source>This class represents one such group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab918f2fa3bc0255d62129a434ca9af1f1d5cf6" translate="yes" xml:space="preserve">
          <source>This class should never be used directly. Please use the &lt;a href=&quot;qmetaobject#Q_ARG&quot;&gt;Q_ARG&lt;/a&gt;() macro instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a78dcecedcd6fe2672e8e7c4e73eaca1f2ce2a" translate="yes" xml:space="preserve">
          <source>This class should never be used directly. Please use the &lt;a href=&quot;qmetaobject#Q_RETURN_ARG&quot;&gt;Q_RETURN_ARG&lt;/a&gt;() macro instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf44408201384c5d36a95048224eb7797e735568" translate="yes" xml:space="preserve">
          <source>This class should not be used directly. Use &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca89150ed6981ceaea2dead8f919adb779b52b5" translate="yes" xml:space="preserve">
          <source>This class specifies the enumerations, properties, and functions shared by graph axes. It should not be used directly, but one of its subclasses should be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb475f8d51a90d09478e63857d102e0e6cc778c" translate="yes" xml:space="preserve">
          <source>This class subclasses a &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; and provides render loop for graphs inheriting it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8213143ea1264222224066e39eb538d7f0fafd" translate="yes" xml:space="preserve">
          <source>This class supports shader programs written in the OpenGL Shading Language (GLSL) and in the OpenGL/ES Shading Language (GLSL/ES).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc069292537e8c2c5a47a888970e4742701147db" translate="yes" xml:space="preserve">
          <source>This class supports shaders written in the OpenGL Shading Language (GLSL) and in the OpenGL/ES Shading Language (GLSL/ES).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7b26b0345c2d42d0299a7cfece8495c279ca3a" translate="yes" xml:space="preserve">
          <source>This class uses &lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt; to render the given &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; into an offscreen surface, which is attached to a texture provided by the user. This allows the component to directly render into the texture without intermediate copy and the user to freely specify how the texture is used in the 3D scene.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9790bf0b112564391919d15af5f3715055115fe" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e860f652353a0cd30fb487ff0ee5a82fa218f02" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 4.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e72b46c2e58915838c331c47d8816efa75e9e8" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 4.2).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce3ddce2b473847ab5a68e6c5a677f2460f70db" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 4.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e68977df10bbce3cf2c5c6f97a25195b1138c3b1" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 4.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec72f0da8333bdd978a15739fa03f144989069a5" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 4.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e089ba7c6ac22d410c765c7bc4626e26a0aacf" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 4.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240b9cc13de831b8a059a38768a2e10b69fe4fb0" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 4.6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d97c214ffd397eb213b958a356d4efc978ec62" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 4.7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c5777c3113a5f4d3a4e53f2024cb47fc5d27bf" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 4.8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1292669745236fd5f4168a4975351cd11c9f27fb" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 5.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf8838711e1fdff8a7c84f860292090d97800cf" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 5.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cee6be6c223d5b1aa804dfe30d570cc7897674c" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 5.10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0511082d2730f318ffd79f60163b41e687f48e" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 5.11.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d9f0a9b97124c8b89c0aca40fad586507953b0" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 5.12.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30e626777b0a95703145d4cc3af0d5d320165e8" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 5.13.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d354ef626d020f12611d9106ac68a07ebcc14b" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 5.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a5dafb03981c89021e986eedce04eca7739f9c" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 5.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac2e73b0d0eea4969ca37099d02d480a91234c3" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 5.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243ba015233d214ff00b8075dfa810c372bd4a5a" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 5.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ebccc343b813fad44f11572e5e44d83c1906c1" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 5.6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197cef1328dc2fbed28bd9e2c0944ddf36afb4b3" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 5.7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27adec35742039171642536cf999a3650d6feee" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 5.8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296e4ab0aa8ce85d15447dae443b615bd8689dce" translate="yes" xml:space="preserve">
          <source>This class was introduced in Qt 5.9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a7f5335d790456ad87b157af2885bff9bdfe6cc" translate="yes" xml:space="preserve">
          <source>This class was introduced in QtDataVisualization 1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375e6232110ca7319b2f96b0a50d3bd93dd694d8" translate="yes" xml:space="preserve">
          <source>This class was introduced in QtDataVisualization 1.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1ceac3bdca3c804497df3529eff8104f6324ea" translate="yes" xml:space="preserve">
          <source>This class was introduced in QtDataVisualization 1.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae9ae0da00783b6f068d55903b83383b11cfd2f6" translate="yes" xml:space="preserve">
          <source>This class was introduced in QtLocation 5.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97550f0cdb5dd42cfd0d74b119bb63871f2e1ce4" translate="yes" xml:space="preserve">
          <source>This class was introduced in QtQuick.VirtualKeyboard 2.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d4efce3ed620d1b9abc8684881ee84f52af97c" translate="yes" xml:space="preserve">
          <source>This class was modeled after &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5801c173b1afce18c53a27004940291e3853c32b" translate="yes" xml:space="preserve">
          <source>This class was mostly useful before lambda functions could be used as slots. The example above can be rewritten simpler without &lt;a href=&quot;qsignalmapper&quot;&gt;QSignalMapper&lt;/a&gt; by connecting to a lambda function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f89f95637f56f94dfd43feb362b7c60d0e3070e" translate="yes" xml:space="preserve">
          <source>This clears any existing selection, selects the word at the cursor (i.e. from &lt;a href=&quot;qtextcursor#position&quot;&gt;position&lt;/a&gt;() forward), and replaces the selection with the phrase &quot;Hello World&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1493b24a55874e2f8a40feb29981fa9e2bb0a47" translate="yes" xml:space="preserve">
          <source>This clock does not overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea215a86bdd8e041a3db593b1a7499f49c24860" translate="yes" xml:space="preserve">
          <source>This clock is monotonic and does not overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e388625dfd4045d75236ecd839275d1981e67e" translate="yes" xml:space="preserve">
          <source>This clock type is based on the absolute time presented by Mach kernels, such as that found on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;. This clock type is presented separately from &lt;a href=&quot;#monotonicclock&quot;&gt;MonotonicClock&lt;/a&gt; since &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS are also Unix systems and may support a POSIX monotonic clock with values differing from the Mach absolute time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b81084fb6854ac105d9bfcde83b9a67a256ed39" translate="yes" xml:space="preserve">
          <source>This clock uses the Windows functions &lt;code&gt;QueryPerformanceCounter&lt;/code&gt; and &lt;code&gt;QueryPerformanceFrequency&lt;/code&gt; to access the system's high-precision performance counter. Since this counter may not be available on all systems, &lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt; will fall back to the &lt;code&gt;&lt;a href=&quot;#tickcounter&quot;&gt;TickCounter&lt;/a&gt;&lt;/code&gt; clock automatically, if this clock cannot be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0490be32ad768ad85acfc7c98dd3a9f82eeae3b1" translate="yes" xml:space="preserve">
          <source>This closes the window, effectively calling &lt;a href=&quot;qwindow#destroy&quot;&gt;destroy&lt;/a&gt;(), and potentially quitting the application. Returns &lt;code&gt;true&lt;/code&gt; on success, false if it has a parent window (in which case the top level window should be closed instead).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe4720522751c6aeb42ceff75449396e090fe2f" translate="yes" xml:space="preserve">
          <source>This code calls a stored procedure called &lt;code&gt;AsciiToInt()&lt;/code&gt;, passing it a character through its in parameter, and taking its result in the out parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d94c0ce3b0c9c361bd7d113644e0443e9e89e26" translate="yes" xml:space="preserve">
          <source>This code example uses &lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt;, which inherits &lt;a href=&quot;qabstractstate&quot;&gt;QAbstractState&lt;/a&gt;. The &lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; class provides a state that you can use to set properties and invoke methods on &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;s when the state is entered or exited. It also contains convenience functions for adding transitions, e.g., &lt;a href=&quot;qsignaltransition&quot;&gt;QSignalTransition&lt;/a&gt;s as in this example. See the &lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; class description for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188ba6fbc8e6fe291e33a72f0675afd9594eb52a" translate="yes" xml:space="preserve">
          <source>This code is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073f0b55ec7971089ea8d8888be49ef9ab2cd93e" translate="yes" xml:space="preserve">
          <source>This code makes &quot;Back&quot; a key entry in the translation files. At runtime, the translation system looks up the keyword &quot;Back&quot; and then gets the corresponding translation value for the current system locale. The result is returned to the &lt;code&gt;text&lt;/code&gt; property and the user interface will show the appropriate translation of &quot;Back&quot; for the current locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47271187f363b7884e9215b0d13174ca2db11f09" translate="yes" xml:space="preserve">
          <source>This code snippet shows how to use &lt;a href=&quot;qbar3dseries&quot;&gt;QBar3DSeries&lt;/a&gt; to render bars as cylinders and with a gradient instead of a uniform color:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4931bf252989493535022276d95719315868a327" translate="yes" xml:space="preserve">
          <source>This code snippet shows how to use basic proxy when your data is stored in some hypothetical &lt;code&gt;myData&lt;/code&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fda43ebdb3dcc34ff3b7d2118863e187ab5281b" translate="yes" xml:space="preserve">
          <source>This color is blended with the color property and the color of the source image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa880bf84f741c8d3917b95db181d76bdd6e683" translate="yes" xml:space="preserve">
          <source>This command was introduced in QDoc 5.6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f26807052bf7493d195543c0fb1b6bb8405966c" translate="yes" xml:space="preserve">
          <source>This component controls the appearance of the scroll bar background.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92bcfc98115a618a67e5eae85c8f405ae318c247" translate="yes" xml:space="preserve">
          <source>This component controls the appearance of the scroll bar decrement button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9abd04bb18cf9bc4adb0987d82c8d81ba6731e" translate="yes" xml:space="preserve">
          <source>This component controls the appearance of the scroll bar handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55650741f51de1260197deaea4ff57c1c2c7397b" translate="yes" xml:space="preserve">
          <source>This component controls the appearance of the scroll bar increment button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb29ebef509755b6129517878af058287458e7a5" translate="yes" xml:space="preserve">
          <source>This component covers the width and height of the control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d5b7e4dc61471395a42a7ff7c94796aab8b170" translate="yes" xml:space="preserve">
          <source>This component defines each individual minor tickmark. The position of each minor tickmark is already set; only the &lt;a href=&quot;qml-qtquick-item#implicitWidth-prop&quot;&gt;implicitWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#implicitHeight-prop&quot;&gt;implicitHeight&lt;/a&gt; need to be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301cfb45b0e187343f9c898e3dc1cdf8e6a8a635" translate="yes" xml:space="preserve">
          <source>This component defines each individual tickmark. The position of each tickmark is already set; only the &lt;a href=&quot;qml-qtquick-item#implicitWidth-prop&quot;&gt;implicitWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#implicitHeight-prop&quot;&gt;implicitHeight&lt;/a&gt; need to be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c56333caee59bba44eeb475866a21b05cdc8ada2" translate="yes" xml:space="preserve">
          <source>This component defines each section of the pie menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4700528d9e320d2038a72892a2654ad21954ec0" translate="yes" xml:space="preserve">
          <source>This component determines if the flickable should reposition itself at the mouse location when clicked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f4a3d6ff88bf05d48a7712300e28959b17c0f7" translate="yes" xml:space="preserve">
          <source>This component is assigned to an entity. When the entity changes distance relative to the camera, the &lt;a href=&quot;qml-qt3d-render-levelofdetailswitch&quot;&gt;LevelOfDetailSwitch&lt;/a&gt; will disable all the child entities except the one matching index &lt;a href=&quot;qml-qt3d-render-levelofdetailswitch#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3ac84fbc7dd9a147eea3722e79e5b819b88886" translate="yes" xml:space="preserve">
          <source>This component is assigned to an entity. When the entity changes distance relative to the camera, the &lt;a href=&quot;qt3drender-qlevelofdetailswitch&quot;&gt;QLevelOfDetailSwitch&lt;/a&gt; will disable all the child entities except the one matching index &lt;a href=&quot;qt3drender-qlevelofdetail#currentIndex-prop&quot;&gt;Qt3DRender::QLevelOfDetailSwitch::currentIndex&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f94221c4a647444370d20e8d668eefae669c438" translate="yes" xml:space="preserve">
          <source>This component is drawn above every other component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408ea9d6d393e660f30831bb6a3fa9072875045c" translate="yes" xml:space="preserve">
          <source>This component is drawn below the &lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle#foreground-prop&quot;&gt;foreground&lt;/a&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606634bfcb797ce35d24b840a33ff26c56652102" translate="yes" xml:space="preserve">
          <source>This comprises the classes &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt;, &lt;a href=&quot;qsqldrivercreator&quot;&gt;QSqlDriverCreator&lt;/a&gt;, &lt;a href=&quot;qsqldrivercreatorbase&quot;&gt;QSqlDriverCreatorBase&lt;/a&gt;, &lt;a href=&quot;qsqldriverplugin&quot;&gt;QSqlDriverPlugin&lt;/a&gt;, and &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ab8fbc9bc8f79d1aa6e1d6d8ce4adbf4b07202" translate="yes" xml:space="preserve">
          <source>This configuration determines the type of CAN bus frames that the current device accepts. The expected value is &lt;code&gt;QList&amp;lt;QCanBusDevice::Filter&amp;gt;&lt;/code&gt;. Passing an empty list clears all previously set filters including default filters. For more details see &lt;a href=&quot;qcanbusdevice-filter&quot;&gt;QCanBusDevice::Filter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3714ed7504a085200324b0cc2aed31652f6ed7" translate="yes" xml:space="preserve">
          <source>This constructor can be used to reference media content via network protocols such as HTTP. This may include additional information required to obtain the resource, such as Cookies or HTTP headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70e6787324d39e44d393d124558f26ef61f91093" translate="yes" xml:space="preserve">
          <source>This constructor can be used with C++14's user-defined literals for time, such as in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322f5971a8db0503cbedf7b9354229ae15e857fc" translate="yes" xml:space="preserve">
          <source>This constructor converts the locale name to a language/country pair; it does not use the system locale database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61af8dcaabff452c38439a127c8319976c4c3374" translate="yes" xml:space="preserve">
          <source>This constructor finds the relevant serial port among the available ones according to the port name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af95c46658bc2877e2172590a6b82fe1ea105876" translate="yes" xml:space="preserve">
          <source>This constructor inserts the item into the model of the parent that is passed to the constructor. If the model is sorted then the behavior of the insert is undetermined since the model will call the &lt;code&gt;'&amp;lt;'&lt;/code&gt; operator method on the item which, at this point, is not yet constructed. To avoid the undetermined behavior, we recommend not to specify the parent and use &lt;a href=&quot;qlistwidget#insertItem&quot;&gt;QListWidget::insertItem&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a590d81ee78c233f2c3c5bac5c5d057623a2f87" translate="yes" xml:space="preserve">
          <source>This constructor is convenient for short-lived painters, e.g. in a &lt;a href=&quot;qwidget#paintEvent&quot;&gt;QWidget::paintEvent&lt;/a&gt;() and should be used only once. The constructor calls &lt;a href=&quot;qpainter#begin&quot;&gt;begin&lt;/a&gt;() for you and the &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; destructor automatically calls &lt;a href=&quot;qpainter#end&quot;&gt;end&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab1771aa8a682d81a811ca26d8bbeb64806a53ac" translate="yes" xml:space="preserve">
          <source>This constructor is convenient for working on constant strings. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4668a04ad058311969c9aa5374912f6182c4abc2" translate="yes" xml:space="preserve">
          <source>This constructor is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691c7e78cbcd33d1d17938e1803d237e4c75e1db" translate="yes" xml:space="preserve">
          <source>This constructor is fast thanks to &lt;a href=&quot;implicit-sharing&quot;&gt;implicit sharing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79370b59a445a6e055dfd210cc6755be36e56d9a" translate="yes" xml:space="preserve">
          <source>This constructor is much slower than &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt;(Country, Script, Language).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a6c925f6b58bedc82cf26005c8ec3f464df741" translate="yes" xml:space="preserve">
          <source>This constructor is normally followed by a call to &lt;a href=&quot;qopenglshader#compileSourceCode&quot;&gt;compileSourceCode&lt;/a&gt;() or &lt;a href=&quot;qopenglshader#compileSourceFile&quot;&gt;compileSourceFile&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f97439177669a2af4f0fe5f9314cc1bd85822b8" translate="yes" xml:space="preserve">
          <source>This constructor is only enabled if the compiler supports C++11 initializer lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9aaf58885a6e37c794a03159181baec7ed019d" translate="yes" xml:space="preserve">
          <source>This constructor is only enabled if the compiler supports C++11 move semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4829590bfe259a034a0da4ae493c542cc1a92c85" translate="yes" xml:space="preserve">
          <source>This constructor is required for Low Energy devices on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS. CoreBluetooth API hides addresses and provides unique UUIDs to identify a device. This UUID is not the same thing as a service UUID and is required to work later with CoreBluetooth API and discovered devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9c8509dfd3758b9ce9a3b8fd709c42bcaac424" translate="yes" xml:space="preserve">
          <source>This constructor is typically used with &lt;a href=&quot;qobject#tr&quot;&gt;tr&lt;/a&gt;(), so that shortcut keys can be replaced in translations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2463dfecae9123c0dcb80de18b00e5708fd2bfc0" translate="yes" xml:space="preserve">
          <source>This constructor is useful for working directly with the common FILE based input and output streams: stdin, stdout and stderr. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="819959002f8854070d620f28bfcbba859a732a04" translate="yes" xml:space="preserve">
          <source>This constructor may create complex regions that will slow down painting when used. Note that drawing masked pixmaps can be done much faster using &lt;a href=&quot;qpixmap#setMask&quot;&gt;QPixmap::setMask&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09c9f50bc13f2bd5abb6be18958d67b5a7c40e4" translate="yes" xml:space="preserve">
          <source>This constructor only participates in overload resolution if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed7f0b45a406cdf5ab02973518ce5e4383b3de2" translate="yes" xml:space="preserve">
          <source>This constructor only participates in overload resolution if &lt;code&gt;Char&lt;/code&gt; is a compatible character type. The compatible character types are: &lt;code&gt;QChar&lt;/code&gt;, &lt;code&gt;ushort&lt;/code&gt;, &lt;code&gt;char16_t&lt;/code&gt; and (on platforms, such as Windows, where it is a 16-bit type) &lt;code&gt;wchar_t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d7578556fe8f8fd4fc51c6f979090f6aa4946f" translate="yes" xml:space="preserve">
          <source>This constructor only participates in overload resolution if &lt;code&gt;StdBasicString&lt;/code&gt; is an instantiation of &lt;code&gt;std::basic_string&lt;/code&gt; with a compatible character type. The compatible character types are: &lt;code&gt;QChar&lt;/code&gt;, &lt;code&gt;ushort&lt;/code&gt;, &lt;code&gt;char16_t&lt;/code&gt; and (on platforms, such as Windows, where it is a 16-bit type) &lt;code&gt;wchar_t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a06014ae022b0cf7eda944f41a6ee716a9d941" translate="yes" xml:space="preserve">
          <source>This constructs a &lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; object using the constructor that accepts a &lt;a href=&quot;qtglobal#QtMsgType-enum&quot;&gt;QtMsgType&lt;/a&gt; value of &lt;a href=&quot;qtglobal#QtMsgType-enum&quot;&gt;QtDebugMsg&lt;/a&gt;. Similarly, the &lt;a href=&quot;qtglobal#qWarning&quot;&gt;qWarning&lt;/a&gt;(), &lt;a href=&quot;qtglobal#qCritical&quot;&gt;qCritical&lt;/a&gt;() and &lt;a href=&quot;qtglobal#qFatal&quot;&gt;qFatal&lt;/a&gt;() functions also return &lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; objects for the corresponding message types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da96696d0d3ee9a2414622a0cca2114da6c9c922" translate="yes" xml:space="preserve">
          <source>This contains the available height of the collection of screens which make up the virtual desktop, in pixels, excluding window manager reserved areas such as task bars and system menus. If you want to position a Window at the bottom of the desktop, you can bind to it like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c484b1283ae4a5e3f2f1aa4a2a44dfa9ac278cac" translate="yes" xml:space="preserve">
          <source>This contains the available width of the collection of screens which make up the virtual desktop, in pixels, excluding window manager reserved areas such as task bars and system menus. If you want to position a Window at the right of the desktop, you can bind to it like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1f6a867505dc08a534441572d363f9d4f6a4ec" translate="yes" xml:space="preserve">
          <source>This contains the current orientation of the screen, from the accelerometer (if any). On a desktop computer, this value typically does not change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277891fc515075405b717f65b3464273468d4deb" translate="yes" xml:space="preserve">
          <source>This contains the details of the triangle that was picked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4618836fc53f49796e41ceb2250769dfcba05720" translate="yes" xml:space="preserve">
          <source>This contains the height of the screen in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c21c6f3f6cd7923cf557be56d76784feb020899" translate="yes" xml:space="preserve">
          <source>This contains the primary orientation of the screen. If the screen's height is greater than its width, then the orientation is Qt.PortraitOrientation; otherwise it is Qt.LandscapeOrientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef844afcafe83eef053f240c370695330407211" translate="yes" xml:space="preserve">
          <source>This contains the update mask for the orientation. &lt;a href=&quot;qml-qtquick-window-screen#orientation-attached-prop&quot;&gt;Screen::orientation&lt;/a&gt; only emits changes for the screen orientations matching this mask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae3a9545196d5d5091f1e3d0ac6778e7c2bf181" translate="yes" xml:space="preserve">
          <source>This contains the width of the screen in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64519e656991faf4203db9556870b3298b17b3d7" translate="yes" xml:space="preserve">
          <source>This contrived example shows how this works. Pressing the &lt;code&gt;Return&lt;/code&gt; key will print the name of the current list item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab821307862b7ecc924a3dd3011e4639b217ace" translate="yes" xml:space="preserve">
          <source>This control allows to modify some parameters of image processing pipeline to achieve desired results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02dd11b6c3b871361deb664c1f5145662fae500d" translate="yes" xml:space="preserve">
          <source>This control can be used to set a network access for various network related activities. The exact nature is dependent on the underlying usage by the supported &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b141bdd7772ed5136377461a92840bb858f1af62" translate="yes" xml:space="preserve">
          <source>This control point is used with a service to provide basic management functionality for the Glucose Sensor patient record database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e306dafbddf451693ad5a48939baa0fdf583b9e" translate="yes" xml:space="preserve">
          <source>This controls the way the camera lens assembly is configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2045fefc466274c73fa019fff9efbaaf170717d" translate="yes" xml:space="preserve">
          <source>This convenience function adds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc96026914fd17eeed37a9d68d11d8c03d289d2" translate="yes" xml:space="preserve">
          <source>This convenience function can be used to create a custom surface format suitable for use by Qt Data Visualization graphs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6bdb69eccd5124fda81607b9d6bb4b136f533b8" translate="yes" xml:space="preserve">
          <source>This convenience function creates a new action with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c252a8ff1a02e778ed1fb496e9366d93e4b56c0" translate="yes" xml:space="preserve">
          <source>This convenience function creates a new action with an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa4ac39442d506065f2f21edb6d99ad138bfc37" translate="yes" xml:space="preserve">
          <source>This convenience function creates a new action with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d9240fc56fb847c21b12f19d836ec2110ee271" translate="yes" xml:space="preserve">
          <source>This convenience function creates a new action with the text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21cb7c84d978a995b030a5e17a7e59f651b045e" translate="yes" xml:space="preserve">
          <source>This convenience function creates a new section action, i.e. an action with &lt;a href=&quot;qaction#isSeparator&quot;&gt;QAction::isSeparator&lt;/a&gt;() returning true but also having</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1027e4cc997cfdabebedd00f20761215df56c0" translate="yes" xml:space="preserve">
          <source>This convenience function creates a new separator action, i.e. an action with &lt;a href=&quot;qaction#isSeparator&quot;&gt;QAction::isSeparator&lt;/a&gt;() returning true, and adds the new action to this menu's list of actions. It returns the newly created action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ed4c3d32e45df819b536cbb7b6bafc375489a4" translate="yes" xml:space="preserve">
          <source>This convenience function creates a new separator action, i.e. an action with &lt;a href=&quot;qaction#isSeparator&quot;&gt;QAction::isSeparator&lt;/a&gt;() returning true. The function inserts the newly created action into this menu bar's list of actions before action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7cb75cf3a1c605fe47b6158cbea1ad9df3927c" translate="yes" xml:space="preserve">
          <source>This convenience function creates a new separator action, i.e. an action with &lt;a href=&quot;qaction#isSeparator&quot;&gt;QAction::isSeparator&lt;/a&gt;() returning true. The function inserts the newly created action into this menu's list of actions before action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49057bfbec642e57b93c6ee373c4bb35870ef80" translate="yes" xml:space="preserve">
          <source>This convenience function creates a new title action, i.e. an action with &lt;a href=&quot;qaction#isSeparator&quot;&gt;QAction::isSeparator&lt;/a&gt;() returning true but also having</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c836eb6699aec96d1b152ec4d756cd571418013f" translate="yes" xml:space="preserve">
          <source>This convenience function inserts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2b8bf92aa3dcd2ba58eac50a9926faa59a6ae1" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#ensureVisible&quot;&gt;ensureVisible&lt;/a&gt;(&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65372d21dc9f6333f0549c2d1568b1da1ebf67ec" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#isObscured&quot;&gt;isObscured&lt;/a&gt;(&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c22c61fb0d1c0b12e128615213a9bd0e0635ad" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#mapFromItem&quot;&gt;mapFromItem&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01580ca483ce32c170c00c2903513200def99c73" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#mapFromItem&quot;&gt;mapFromItem&lt;/a&gt;(&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2ba7297e6efcbef3261c18eee2e01835b5e261" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#mapFromItem&quot;&gt;mapFromItem&lt;/a&gt;(item, &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c734f7d44ae048b811a62553945a5a6a6e9b161e" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#mapFromParent&quot;&gt;mapFromParent&lt;/a&gt;(&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40afefbdf9d47d716d834647c9f446da00ea068" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt;(&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5e818847fb4456908e020094cd76bcbdf5bb41" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt;(&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3d0d0a4521daaa8a55359a8fc8c64f75be7f83" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#mapRectFromItem&quot;&gt;mapRectFromItem&lt;/a&gt;(item, &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11606e199f7ef87da7d5b67f20acaa12f5baa3c6" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#mapRectFromParent&quot;&gt;mapRectFromParent&lt;/a&gt;(&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5c9463a2bc411042b3711d404aea91ea5493b0" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#mapRectFromScene&quot;&gt;mapRectFromScene&lt;/a&gt;(&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9597f835ad033fb28c6878c3592cc6e04f6f15" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#mapRectToItem&quot;&gt;mapRectToItem&lt;/a&gt;(item, &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6434482960a7a3ba5e7305032716c39ecaee25c3" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#mapRectToParent&quot;&gt;mapRectToParent&lt;/a&gt;(&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf628a7af14e74988fd7571b0146b8154c876b3" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#mapRectToScene&quot;&gt;mapRectToScene&lt;/a&gt;(&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b1f8a90091ed4c10f135d3dbff2f6b5901aa5a" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#mapToItem&quot;&gt;mapToItem&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9691eb239cb247afe066ccb85bbdd13bba945a28" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#mapToItem&quot;&gt;mapToItem&lt;/a&gt;(item, &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272116136dd3c4b2731d0e6ce7be42e7c7270ca8" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#mapToParent&quot;&gt;mapToParent&lt;/a&gt;(&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5356e0d9d8327b6dcab9217c228eeb52577b58c5" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#mapToParent&quot;&gt;mapToParent&lt;/a&gt;(&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a1ed26ac1155bb99ed206e2a8942c10104171a" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#mapToScene&quot;&gt;mapToScene&lt;/a&gt;(&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8395739d580f3df0a851aa59e2f75537c99b61" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#mapToScene&quot;&gt;mapToScene&lt;/a&gt;(&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba61b43c22a03db56612d9f1a65117110630910" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#pos&quot;&gt;pos&lt;/a&gt;().x().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccfb2beb7eb206a3f50a41378942ce444a95219" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#pos&quot;&gt;pos&lt;/a&gt;().y().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45bfa6a85ffc110631f05f84c22c6485b809cfd" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsitem#setPos&quot;&gt;setPos&lt;/a&gt;(&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b38e233de2ed2030cc75a41cd23d5b20b59aaf" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicslayoutitem#setMaximumSize&quot;&gt;setMaximumSize&lt;/a&gt;(&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="802def62aa96717e21a1a533e43b8c1aa333685d" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicslayoutitem#setMinimumSize&quot;&gt;setMinimumSize&lt;/a&gt;(&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8717801985d60a63815417a6957a1a99d6c3c4" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicslayoutitem#setPreferredSize&quot;&gt;setPreferredSize&lt;/a&gt;(&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f786ff723f6ab1ef98a3b293b85e0d1086ab146" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicslinearlayout#insertItem&quot;&gt;insertItem&lt;/a&gt;(-1,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c3cfd89263e40b939a608612b78c5d606ef5f8" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicslinearlayout#insertStretch&quot;&gt;insertStretch&lt;/a&gt;(-1,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcad7f3c7d2e3b95ae13244cb1b70ba4ee0bf384" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicspixmapitem#setOffset&quot;&gt;setOffset&lt;/a&gt;(&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dccb5ae03d7018be9386443b124f815971977556" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsscene#addEllipse&quot;&gt;addEllipse&lt;/a&gt;(&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341e9eb174cd0e2161b36caf5abf85d083acf44c" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsscene#addLine&quot;&gt;addLine&lt;/a&gt;(&lt;a href=&quot;qlinef&quot;&gt;QLineF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18d46193d5b920c349fc6e1f5e6326403b945eb" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsscene#addRect&quot;&gt;addRect&lt;/a&gt;(&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629137b16d9870a5652732671e2cf7786f3ca9bd" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsscene#sceneRect-prop&quot;&gt;sceneRect&lt;/a&gt;().width().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c63e045e9549203a9d63ef16e44b248fde6e1cd" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicsview#fitInView&quot;&gt;fitInView&lt;/a&gt;(&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ba899a5534e731b332a04bc88327b3a3d81af8" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;a href=&quot;qgraphicswidget#geometry-prop&quot;&gt;setGeometry&lt;/a&gt;(&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be8fe6e1a4712355803778e9017ec70ffa71755" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;code&gt;itemAt(QPointF(x, y), deviceTransform)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a109d3d89b49f7006b6c0fa2e560c1e86b21c35" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;code&gt;sceneRect().height()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a530ab466388032cddb061b0ad3f0bb0523a7a" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;code&gt;setRect(QRectF(x, y, width, height))&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9765f34f2e3038b2fa85db5cc332c962e3b84472" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;code&gt;setVisible(false)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c60d957e7d9e94a84849e259ccf0f1a33699d5" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling &lt;code&gt;setVisible(true)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5a65bd57f7697f1d584092e0469a29d8029339" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling QPixmap::scroll(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece03c65590918d1453c5f888390ef1f9418b22d" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling invalidate(&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c83c6ec5876234f7d2ae045e72ff1a3633a7ef" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling items(&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880b8b906485f44a48046bdb543df0fc1ff14f18" translate="yes" xml:space="preserve">
          <source>This convenience function is equivalent to calling update(&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="decf0c9f2b1b5007e54b8ae9d4358309a4729995" translate="yes" xml:space="preserve">
          <source>This convenience function loads the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e54992131decc0892694adbdef2f050f799961e" translate="yes" xml:space="preserve">
          <source>This convenience function loads the matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b7ecbcf43e0890a39029ac3d75ad704c28ee94" translate="yes" xml:space="preserve">
          <source>This convenience function provides the same result as the templated version, but takes the name of the &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; class as a parameter (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="554395455da67611383b88a19f3c36aa93a73058" translate="yes" xml:space="preserve">
          <source>This convenience function returns a list of all selected and non-hidden item indexes in the view. The list contains no duplicates, and is not sorted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bbb3ebff7007a1c2600678396a3103d3148818c" translate="yes" xml:space="preserve">
          <source>This convenience function returns all IP addresses found on the host machine. It is equivalent to calling &lt;a href=&quot;qnetworkinterface#addressEntries&quot;&gt;addressEntries&lt;/a&gt;() on all the objects returned by &lt;a href=&quot;qnetworkinterface#allInterfaces&quot;&gt;allInterfaces&lt;/a&gt;() that are in the &lt;a href=&quot;qnetworkinterface#InterfaceFlag-enum&quot;&gt;QNetworkInterface::IsUp&lt;/a&gt; state to obtain lists of &lt;a href=&quot;qnetworkaddressentry&quot;&gt;QNetworkAddressEntry&lt;/a&gt; objects then calling &lt;a href=&quot;qnetworkaddressentry#ip&quot;&gt;QNetworkAddressEntry::ip&lt;/a&gt;() on each of these.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174d27e646f12e9e963e82dc00c5620ec24b64af" translate="yes" xml:space="preserve">
          <source>This convenience function returns true if the &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; is either an array or a map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fcea3378579949f81a878c2265e9591c4e2c44f" translate="yes" xml:space="preserve">
          <source>This convenience method adds the axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb01b7af012aeda54bb47a2bb20303649fc466bd" translate="yes" xml:space="preserve">
          <source>This convenience method converts an error to a string. Returns the error message formatted as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbe9ee8b7f0bcc57768d09020e4bc942ef60673" translate="yes" xml:space="preserve">
          <source>This convenience template class makes it possible to register widgets without having to subclass &lt;a href=&quot;qitemeditorcreatorbase&quot;&gt;QItemEditorCreatorBase&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df25d5b96d326156218fd231ccc40c9994a813e7" translate="yes" xml:space="preserve">
          <source>This conversion is lossless, as the CBOR type system is a superset of JSON's. Moreover, the array returned by this function can be converted back to the original</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5183b21b59a07e53111ad461366cb3c506ea7a9c" translate="yes" xml:space="preserve">
          <source>This conversion is lossless, as the CBOR type system is a superset of JSON's. Moreover, the map returned by this function can be converted back to the original</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a89c0860c0dd87303e4e32188f27525da7ab46" translate="yes" xml:space="preserve">
          <source>This copy constructor is different in that it allows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1772435c4dfd5c87111130961856650e81d70bd" translate="yes" xml:space="preserve">
          <source>This corresponds to &lt;a href=&quot;qwidget#baseSize-prop&quot;&gt;setBaseSize&lt;/a&gt;(&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f27f9fb01c0626d1177130abf7d0385186812f" translate="yes" xml:space="preserve">
          <source>This corresponds to &lt;a href=&quot;qwidget#geometry-prop&quot;&gt;setGeometry&lt;/a&gt;(&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbdc6db9d4beb75f2a632b685c596a5ab2be056" translate="yes" xml:space="preserve">
          <source>This corresponds to move(&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2769b1b4173a6f90bed3455505080274e5dab2d" translate="yes" xml:space="preserve">
          <source>This corresponds to resize(&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2c56108712d0e3df1f1ee697b167813454b9b8" translate="yes" xml:space="preserve">
          <source>This cost can be avoided by using QStringLiteral instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413058c0e45a0f02bb3911d368c31b1f26c4a2a4" translate="yes" xml:space="preserve">
          <source>This could have meant 1 January 00:30.00 but the M will grab two digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c99a85ba3d9ee0565723f58e586a3cb213d581" translate="yes" xml:space="preserve">
          <source>This could then be used, for example, as the value of a geocoding query, to get an exact longitude and latitude for the address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a8f4973a1e14b678513c6f1d2dedd7716b26952" translate="yes" xml:space="preserve">
          <source>This creates a 100 x 100 red &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; with an inner &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt;, as defined in &lt;code&gt;SquareButton.qml&lt;/code&gt;. When this &lt;code&gt;myapplication.qml&lt;/code&gt; document is loaded by the engine, it loads the SquareButton.qml document as a component and instantiates it to create a &lt;code&gt;SquareButton&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f76732c72e81439b5044730e14b1c4b712e896" translate="yes" xml:space="preserve">
          <source>This creates a macro \qtminorversion that expands to the minor version based on the QT_VER environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412092481c7abb402b1bb8aac42527dc83ebcd7e" translate="yes" xml:space="preserve">
          <source>This creates a project which supports building applications and running them with Visual Studio. It does not embed Qt libraries into the package and requires you to add them manually. For this purpose, the command line tool &lt;a href=&quot;https://doc.qt.io/qt-5.13/windows-deployment.html#the-windows-deployment-tool&quot;&gt;windeployqt&lt;/a&gt; has been included in the installed package. To enable automatic parsing of dependencies and adding the libraries and dependencies into the application package, create the project with the following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87306117f0beb350f34348c2867be6be9fabfa34" translate="yes" xml:space="preserve">
          <source>This cursor will be displayed in all the application's widgets until &lt;a href=&quot;qguiapplication#restoreOverrideCursor&quot;&gt;restoreOverrideCursor&lt;/a&gt;() or another setOverrideCursor() is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e9d1c6c89ba43ae2e49c88122f73a32bbed3b9" translate="yes" xml:space="preserve">
          <source>This custom layout does not handle height for width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8877e4691f719741b0f6a4a8ca38d877a58a3ee" translate="yes" xml:space="preserve">
          <source>This custom slot does the minimum necessary to ensure that the data entered by the user is valid - it only accepts the input if a name was given for the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6491f8636aa606a51f8c7e3ca92a0057cab4c705" translate="yes" xml:space="preserve">
          <source>This data can be extracted through a variety of methods. One of the most well known methods of positioning is GPS (Global Positioning System), a publicly available system that uses radiowave signals received from Earth-orbiting satellites to calculate the precise position and time of the receiver. Another popular method is 'Cell Identifier Positioning', which uses the cell identifier of the cell site that is currently serving the receiving device to calculate its approximate location. These and other positioning methods can all be used with the Location API; the only requirement for a location data source within the API is that it provides a latitude-longitude coordinate with a date/time value, with the option of providing the other attributes listed above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1800c5c7a7e27afc693eb9eb137586449bf7eefb" translate="yes" xml:space="preserve">
          <source>This data can be represented as a &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt;, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2193df3c8390043052b56b6a87d87a37fad767" translate="yes" xml:space="preserve">
          <source>This data can include the device name, GATT services offered by the device, and so on. The data set via this class will be used when advertising is started by calling &lt;a href=&quot;qlowenergycontroller#startAdvertising&quot;&gt;QLowEnergyController::startAdvertising&lt;/a&gt;(). Objects of this class can represent an Advertising Data packet or a Scan Response packet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f6f9777451ffe380c381e0e8ba2f7460e6019ae" translate="yes" xml:space="preserve">
          <source>This datagram's destination address is not copied if it is an IPv4 address because it is not possible to tell an IPv4 broadcast address apart from a regular IPv4 address without an exhaustive search of all addresses assigned to this machine. Attempting to send a datagram with the sender address equal to the broadcast address is likely to fail. However, this should not affect the communication as network interfaces with multiple IPv4 addresses are uncommon, so the address the operating system will select will likely be one the peer will understand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e3a214553ff3b3591041cd65164c7e11893797" translate="yes" xml:space="preserve">
          <source>This declares an object of type &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;, followed by a set of curly braces that encompasses the attributes defined for that object. The &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; type is a type made available by the &lt;code&gt;QtQuick&lt;/code&gt; module, and the attributes defined in this case are the values of the rectangle's &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;color&lt;/code&gt; properties. (These are properties made available by the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; type, as described in the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; documentation.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f8d4ae9b23a2a793bf835def868b8d3355484d" translate="yes" xml:space="preserve">
          <source>This default implementation is provided for small text edits. A word processor or text editor should provide their own efficient implementations. This function makes no distinction between paragraphs and lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec01cdcbba8926798f86761beca676bcf3dd72e" translate="yes" xml:space="preserve">
          <source>This default implementation returns a &lt;code&gt;QModbusExceptionResponse&lt;/code&gt; with the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7587c9aff4387708ed9e3bc357a9856b8780df32" translate="yes" xml:space="preserve">
          <source>This default locale-based alignment can be overridden by setting the &lt;code&gt;horizontalAlignment&lt;/code&gt; property for the text element, or by enabling layout mirroring using the &lt;a href=&quot;qml-qtquick-layoutmirroring&quot;&gt;LayoutMirroring&lt;/a&gt; attached property, which causes any explicit left and right horizontal alignments to be mirrored. Note that when &lt;a href=&quot;qml-qtquick-layoutmirroring&quot;&gt;LayoutMirroring&lt;/a&gt; is set, the &lt;code&gt;horizontalAlignment&lt;/code&gt; property value remains unchanged; the effective alignment of the text element that takes the mirroring into account can be read from the &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112ccf08895f2cd0dcdd9d1abbe2e01c0e411ae8" translate="yes" xml:space="preserve">
          <source>This default property holds the list of all objects declared as children of the dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6beaf63d1206045ef93eeae889067827c580c15" translate="yes" xml:space="preserve">
          <source>This default property holds the list of all objects declared as children of the menu. The data property includes objects that are not &lt;a href=&quot;qml-qt-labs-platform-menuitem&quot;&gt;MenuItem&lt;/a&gt; instances, such as &lt;a href=&quot;qml-qtqml-timer&quot;&gt;Timer&lt;/a&gt; and &lt;a href=&quot;qml-qtqml-qtobject&quot;&gt;QtObject&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c70391fb597b89ef8f66ecaad5a4cb9b076f656" translate="yes" xml:space="preserve">
          <source>This default property holds the list of all objects declared as children of the menubar. The data property includes objects that are not &lt;a href=&quot;qml-qt-labs-platform-menu&quot;&gt;Menu&lt;/a&gt; instances, such as &lt;a href=&quot;qml-qtqml-timer&quot;&gt;Timer&lt;/a&gt; and &lt;a href=&quot;qml-qtqml-qtobject&quot;&gt;QtObject&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68c1b56c527f2ed7e7f357673f4e5f2a7599ef7" translate="yes" xml:space="preserve">
          <source>This default property holds the list of all objects declared as children of the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f486c2deff8af61906d8210d621049beb76e9e07" translate="yes" xml:space="preserve">
          <source>This defaults to true. If disabled, the undo stack is cleared and no items will be added to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28961bbd4510449ef82d1f0eda26980aacae7a3a" translate="yes" xml:space="preserve">
          <source>This defines an object hierarchy with a root &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; object which has a child &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; object. The &lt;code&gt;parent&lt;/code&gt; of the &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; object is automatically set to the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;, and similarly, the &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; object is added to the &lt;code&gt;children&lt;/code&gt; property of the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; object, by QML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457e04f1946c7cda81db09ee767987601bcc920e" translate="yes" xml:space="preserve">
          <source>This defines the appearance of the busy indicator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3413dbe68c96c9508bf30ee4f94c4a1b4f79f945" translate="yes" xml:space="preserve">
          <source>This defines the background of the button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd3b6a95c8dfd5931177e370a5b9f2b6f723ce5" translate="yes" xml:space="preserve">
          <source>This defines the background of the status bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e071b4ba078ccf02b5c451fd5fff5ddbeeb0ecd7" translate="yes" xml:space="preserve">
          <source>This defines the background of the tool bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfe37a7c4112c7e74e582f69416adad7257e350" translate="yes" xml:space="preserve">
          <source>This defines the indicator button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34abcdca4b2c05d32e5ef85f3f913ab563a0aa81" translate="yes" xml:space="preserve">
          <source>This defines the indicator in both its on and off status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1a868c02fbe943b06900cee43cf4c1cdd46084" translate="yes" xml:space="preserve">
          <source>This defines the label of the button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb467105d94fc7903fb234bd077cfb0412563391" translate="yes" xml:space="preserve">
          <source>This defines the left corner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b8e4fc2aad9495214f59fc9ede41add12b6539" translate="yes" xml:space="preserve">
          <source>This defines the menu button appearance on platforms that have a unified tool bar and menu bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba5f80a43383dfd76df5bd913318541efa9a015" translate="yes" xml:space="preserve">
          <source>This defines the panel of the status bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92da62794f3cfd6f01d00766505e00ede4b3463" translate="yes" xml:space="preserve">
          <source>This defines the panel of the tool bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aac720439161b9297d5872c552b51d424c0fa81" translate="yes" xml:space="preserve">
          <source>This defines the right corner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5a504dffc2ec23abe4022b9b2092e30c300c90" translate="yes" xml:space="preserve">
          <source>This defines the switch handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffe37f95951860deb2f680725057d6902628809" translate="yes" xml:space="preserve">
          <source>This defines the tab bar background.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
