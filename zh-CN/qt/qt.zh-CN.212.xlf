<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="ada8d874c22b97faa7356d4f110bfdc498189cf0" translate="yes" xml:space="preserve">
          <source>Tumbler.visibleItemCount</source>
          <target state="translated">Tumbler.visibleItemCount</target>
        </trans-unit>
        <trans-unit id="525913a7a8d8d08b5d1a93c501f8761450fcad06" translate="yes" xml:space="preserve">
          <source>Tumbler.wrap</source>
          <target state="translated">Tumbler.wrap</target>
        </trans-unit>
        <trans-unit id="9f3804536db3e9259e69d5ce9c8146f8e10f4694" translate="yes" xml:space="preserve">
          <source>TumblerColumn</source>
          <target state="translated">TumblerColumn</target>
        </trans-unit>
        <trans-unit id="14eb7ad67c95188d4d9ef4c3d9b686bbff6792fe" translate="yes" xml:space="preserve">
          <source>TumblerColumn (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706a17830a8d4f5b9fe3a10f691c5ca89d3d2f20" translate="yes" xml:space="preserve">
          <source>TumblerColumn &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-extras-tumbler#addColumn-method&quot;&gt;addColumn&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(TumblerColumn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1537143f713b8ee3260998beb0f98f5736864b" translate="yes" xml:space="preserve">
          <source>TumblerColumn &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-extras-tumbler#getColumn-method&quot;&gt;getColumn&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8395a5e3fa20739241bad8c5250238c0d5cbf2" translate="yes" xml:space="preserve">
          <source>TumblerColumn &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-extras-tumbler#insertColumn-method&quot;&gt;insertColumn&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5db630212bd13399125a9095dcbdce3ecbeb978" translate="yes" xml:space="preserve">
          <source>TumblerColumn QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a261deca6217c781072f81e364277a2a61ce300" translate="yes" xml:space="preserve">
          <source>TumblerColumn.activeFocus</source>
          <target state="translated">TumblerColumn.activeFocus</target>
        </trans-unit>
        <trans-unit id="59830ff65d8b534c35f0546e90a6c393efb659e6" translate="yes" xml:space="preserve">
          <source>TumblerColumn.columnForeground</source>
          <target state="translated">TumblerColumn.columnForeground</target>
        </trans-unit>
        <trans-unit id="ab947b3f737e3a2176759c9754e1f3b483402603" translate="yes" xml:space="preserve">
          <source>TumblerColumn.currentIndex</source>
          <target state="translated">TumblerColumn.currentIndex</target>
        </trans-unit>
        <trans-unit id="b747febd324c263bef8724a43dbd3ea47f16bae0" translate="yes" xml:space="preserve">
          <source>TumblerColumn.delegate</source>
          <target state="translated">TumblerColumn.delegate</target>
        </trans-unit>
        <trans-unit id="36b968ecf7c021967bd325b146d5985f7baf1a8a" translate="yes" xml:space="preserve">
          <source>TumblerColumn.highlight</source>
          <target state="translated">TumblerColumn.highlight</target>
        </trans-unit>
        <trans-unit id="44651ed997df24e270e00d90c4275ab7555576c3" translate="yes" xml:space="preserve">
          <source>TumblerColumn.model</source>
          <target state="translated">TumblerColumn.model</target>
        </trans-unit>
        <trans-unit id="2837b2c0023c8873da1d69dda73c9b1cd786213d" translate="yes" xml:space="preserve">
          <source>TumblerColumn.role</source>
          <target state="translated">TumblerColumn.role</target>
        </trans-unit>
        <trans-unit id="fd8373b63bf2083b2d1a9e6cdecc3a242bd96a20" translate="yes" xml:space="preserve">
          <source>TumblerColumn.visible</source>
          <target state="translated">TumblerColumn.visible</target>
        </trans-unit>
        <trans-unit id="edfa719c0cdbde92bc372a7ced767d2876811835" translate="yes" xml:space="preserve">
          <source>TumblerColumn.width</source>
          <target state="translated">TumblerColumn.width</target>
        </trans-unit>
        <trans-unit id="591ec96858fffd34eeef38d5d366703d8efdd125" translate="yes" xml:space="preserve">
          <source>TumblerStyle</source>
          <target state="translated">TumblerStyle</target>
        </trans-unit>
        <trans-unit id="a0812123341fcd8e6ad69b48bbfd76d9f429a311" translate="yes" xml:space="preserve">
          <source>TumblerStyle (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203ebf7e3685edc394acbfee2e6451cf1e88c909" translate="yes" xml:space="preserve">
          <source>TumblerStyle QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d5752fcc6fb64b454db78483d80990e180cc57" translate="yes" xml:space="preserve">
          <source>TumblerStyle.background</source>
          <target state="translated">TumblerStyle.background</target>
        </trans-unit>
        <trans-unit id="04ed66827f0b3ad3a88454bab67bb38215cb8f45" translate="yes" xml:space="preserve">
          <source>TumblerStyle.columnForeground</source>
          <target state="translated">TumblerStyle.columnForeground</target>
        </trans-unit>
        <trans-unit id="4492db30067530860617e2ec3213b6d146349161" translate="yes" xml:space="preserve">
          <source>TumblerStyle.control</source>
          <target state="translated">TumblerStyle.control</target>
        </trans-unit>
        <trans-unit id="8a089a4d2ef3439004e45fb1c08c3bdaa06f1284" translate="yes" xml:space="preserve">
          <source>TumblerStyle.delegate</source>
          <target state="translated">TumblerStyle.delegate</target>
        </trans-unit>
        <trans-unit id="0c30de989a010c78e8be72464f4b792d0711332e" translate="yes" xml:space="preserve">
          <source>TumblerStyle.foreground</source>
          <target state="translated">TumblerStyle.foreground</target>
        </trans-unit>
        <trans-unit id="de12204c30f7a805705703657d1dd9d88ae21649" translate="yes" xml:space="preserve">
          <source>TumblerStyle.frame</source>
          <target state="translated">TumblerStyle.frame</target>
        </trans-unit>
        <trans-unit id="e29e69f26ef1a2f903205c0b2c8771a9d117d2d4" translate="yes" xml:space="preserve">
          <source>TumblerStyle.highlight</source>
          <target state="translated">TumblerStyle.highlight</target>
        </trans-unit>
        <trans-unit id="1d6c9b6e153e86458e4bb362bea6ad8cda478e1d" translate="yes" xml:space="preserve">
          <source>TumblerStyle.separator</source>
          <target state="translated">TumblerStyle.separator</target>
        </trans-unit>
        <trans-unit id="d2db45db9c9d43b885997f21752e8e79c0bd690e" translate="yes" xml:space="preserve">
          <source>TumblerStyle.visibleItemCount</source>
          <target state="translated">TumblerStyle.visibleItemCount</target>
        </trans-unit>
        <trans-unit id="2cecdfd4c7e33aa7f9a8198db9bbe90d25134706" translate="yes" xml:space="preserve">
          <source>Tungsten (incandescent) white balance mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f60dde415819937807920eafdaf9401c221ad406" translate="yes" xml:space="preserve">
          <source>Tungsten white balance mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75273d6e0580e361674d59e1bf1d336633baff28" translate="yes" xml:space="preserve">
          <source>Turbulence (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485f9476b9fa8c80da30ac6edfa1867faecc12bf" translate="yes" xml:space="preserve">
          <source>Turbulence QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659d836316ce69ecf9064cc46aa3ca1cfa296516" translate="yes" xml:space="preserve">
          <source>Turbulence requires a fixed size. Unlike other affectors, a 0x0 Turbulence element will affect no particles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d46f4aa65c4ef2e64bed22d392850d1bc66c5cf" translate="yes" xml:space="preserve">
          <source>Turbulence.noiseSource</source>
          <target state="translated">Turbulence.noiseSource</target>
        </trans-unit>
        <trans-unit id="6207d5125446bb845fe72fb900ead494525edc4e" translate="yes" xml:space="preserve">
          <source>Turbulence.strength</source>
          <target state="translated">Turbulence.strength</target>
        </trans-unit>
        <trans-unit id="ab650a1a4b8fdf3a4053ce8d277d335dd82e5447" translate="yes" xml:space="preserve">
          <source>Turkish</source>
          <target state="translated">Turkish</target>
        </trans-unit>
        <trans-unit id="e3019fef676718f903c4141463e408f9aa4abe65" translate="yes" xml:space="preserve">
          <source>Turkish Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a72ee799e82ae7bcd6033362c09520c95c5678a" translate="yes" xml:space="preserve">
          <source>Turn off namespace macros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91abc218344ef3d52a7d7a9f911f12283a7549f" translate="yes" xml:space="preserve">
          <source>Turn on auto ISO sensitivity selection. The manual ISO value is reset to -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ddca434d17f9437d998ca9280c9c8f7c3b0441" translate="yes" xml:space="preserve">
          <source>Turn on auto aperture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f203e720edb0f6da07129d23f6a4694be392ef2a" translate="yes" xml:space="preserve">
          <source>Turn on auto aperture selection. The manual aperture value is reset to -1.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eccb8a86b96953416f1bf52974956b469a277dfb" translate="yes" xml:space="preserve">
          <source>Turn on auto sensitivity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62476d286510451af0fad3b12e9f37c678ca7e9" translate="yes" xml:space="preserve">
          <source>Turn on auto shutter speed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6929d0aeaf56e981707a619a52953829e36c7d3d" translate="yes" xml:space="preserve">
          <source>Turn on auto shutter speed selection. The manual shutter speed value is reset to -1.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d88d6186bb14a0023bbf1a4da06676dc13ff49" translate="yes" xml:space="preserve">
          <source>Turn on sharing activation with floating modeless dialogs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af03dfdbb51a46066b792bc25fb6ffcc3d14cfcd" translate="yes" xml:space="preserve">
          <source>Turns any arbitrary &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt; Item into a map overlay object. &lt;a href=&quot;qml-qtlocation-mapquickitem&quot;&gt;MapQuickItem&lt;/a&gt; is an enabler for specifying custom map overlay objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a091084ddb5ff3621e3f616865de5f44c2d1f7f" translate="yes" xml:space="preserve">
          <source>Turns off the default window title hints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e8e2f196f8d1a3dd739d049c7fdf87fdff476d" translate="yes" xml:space="preserve">
          <source>Turns on feedback for the specific</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7259bf54d570828f2bd36a82aed7e43df800e5ba" translate="yes" xml:space="preserve">
          <source>Turns on printing of CSS backgrounds when printing a web page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33457f0b32eb6bdecb3d4bb3f3a62a8c100772ef" translate="yes" xml:space="preserve">
          <source>Turns on printing of CSS backgrounds when printing a web page. Enabled by default. (Added in Qt 5.8)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222deba66c4e766d462dc42f789fac0b699cae08" translate="yes" xml:space="preserve">
          <source>Turns on the feature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a706e88f431da5a3693b46be93b90762173be422" translate="yes" xml:space="preserve">
          <source>Turns the fine motion control active while pressed. Makes mouse pan and tilt less sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec2759c5455cecfe1b40a15044c456c15fba151" translate="yes" xml:space="preserve">
          <source>Turns the major, minor and patch numbers of a version into an integer, 0xMMNNPP (MM = major, NN = minor, PP = patch). This can be compared with another similarly processed version id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2701a94c0eb55cbd958a87dff3e959673ff1bf53" translate="yes" xml:space="preserve">
          <source>Tutorial</source>
          <target state="translated">Tutorial</target>
        </trans-unit>
        <trans-unit id="d5b9038928f5a6939cf7f83b813d4be33ec5797e" translate="yes" xml:space="preserve">
          <source>Tutorial and Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc65dff8bb5095028a69b931a67930421de0452" translate="yes" xml:space="preserve">
          <source>Tutorial for styling CircularGauge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcbc8caf459f613807cef53dc0815c781d8d810e" translate="yes" xml:space="preserve">
          <source>Tutorial for styling the Gauge control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad2a2de5802d5397624df449dadae64683f8d2e" translate="yes" xml:space="preserve">
          <source>Tutorial introducing the QML Maps Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654171647baa6be8557a5d627cf35c7075ebb257" translate="yes" xml:space="preserve">
          <source>Tutorials</source>
          <target state="translated">Tutorials</target>
        </trans-unit>
        <trans-unit id="ca545e86d66347e139481c81ac86aef151e74a2e" translate="yes" xml:space="preserve">
          <source>Tutorials, How-To's, FAQ's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9271b24d0937b9647dd07b325f6f52f035be441" translate="yes" xml:space="preserve">
          <source>Tutorials, How-To's, and FAQ's are all instructional material, in that they instruct or prescribe to the reader. Tutorials are content designed to guide the reader along a progressive learning path for a concept or technology. How-To's and FAQ's (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b105a2339fb58778506cb708c7a394612c7bf705" translate="yes" xml:space="preserve">
          <source>Two &lt;a href=&quot;qlowenergycharacteristic&quot;&gt;QLowEnergyCharacteristic&lt;/a&gt; instances are considered to be equal if they refer to the same characteristic on the same remote Bluetooth Low Energy device or both instances have been default-constructed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6048263cf94ba700c084c90e5e3fdacb288e1dfd" translate="yes" xml:space="preserve">
          <source>Two &lt;a href=&quot;qlowenergydescriptor&quot;&gt;QLowEnergyDescriptor&lt;/a&gt; instances are considered to be equal if they refer to the same descriptor on the same remote Bluetooth Low Energy device or both instances have been default-constructed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a065c0debaf956239be05ea119be33a2548b694" translate="yes" xml:space="preserve">
          <source>Two &lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; objects are considered equal if they have the same set of key=value pairs. The comparison of keys is done case-sensitive on platforms where the environment is case-sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff0cd7306c237180aa9a9f5a05978d234369d99" translate="yes" xml:space="preserve">
          <source>Two &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; objects are equal if they have the same pattern strings and the same settings for case sensitivity, wildcard and minimal matching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf6659fb33dbdb2f68805ddc74e5de1822f057e" translate="yes" xml:space="preserve">
          <source>Two &lt;a href=&quot;qsourcelocation&quot;&gt;QSourceLocation&lt;/a&gt; instances are equal if their &lt;a href=&quot;qsourcelocation#uri&quot;&gt;uri&lt;/a&gt;(), &lt;a href=&quot;qsourcelocation#line&quot;&gt;line&lt;/a&gt;() and &lt;a href=&quot;qsourcelocation#column&quot;&gt;column&lt;/a&gt;() are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34affe86d8aacac08efa9432ea69f5d5038db97b" translate="yes" xml:space="preserve">
          <source>Two &lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; objects are considered equal if they have the exact same settings and state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae2bc50b48ae9d64310e4fe525d65c41603b7fa" translate="yes" xml:space="preserve">
          <source>Two APIs for using &lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt; are provided, the property-based API, and the static functions. Calling one of the static functions is the simpler approach, but it is less flexible than using the property-based API, and the result is less informative. Using the property-based API is recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a7fc658aae08c1b7254ae290b52bc3df615dd5" translate="yes" xml:space="preserve">
          <source>Two QFonts are considered equal if their font attributes are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad4f022fac305a46c0b216560eba8a3b2db03f93" translate="yes" xml:space="preserve">
          <source>Two QFonts are considered to be different if their font attributes are different.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a219694ecf155f20f5f059086f37ed3d5ea3cb" translate="yes" xml:space="preserve">
          <source>Two QLowEnergyCharcteristic instances are considered to be equal if they refer to the same characteristic on the same remote Bluetooth Low Energy device or both instances have been default-constructed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b294cf78c58f82d8da2d2f38f9ce378c7fd5d5" translate="yes" xml:space="preserve">
          <source>Two Simple Qt Widgets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac24dfe790c4c9e8eec3a9a9732ad15bd778665" translate="yes" xml:space="preserve">
          <source>Two arguments must be provided, each argument in curly braces, as shown in the QDoc comment below. The first argument is not interpreted, but specifies the formatting attribute(s) of the tag output by QDoc. The second argument is the text to be rendered with the special formatting attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d1d754719fd3744c91a7d8d0ee13af098ba4e2" translate="yes" xml:space="preserve">
          <source>Two arrays are considered equal if they contain the same values in the same order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e81a6ccf8e6ecebac4048cda5a8fb53a1cca0a30" translate="yes" xml:space="preserve">
          <source>Two authenticator objects are equal if and only if they have the same identity hint, identity, pre shared key, maximum length for the identity and maximum length for the pre shared key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44aa7023fd49b704dad9b770f1022894ebd5597e" translate="yes" xml:space="preserve">
          <source>Two brushes are different if they have different styles, colors or transforms or different pixmaps or gradients depending on the style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85431fae764a89bd8c71388c30c8fdce153c72d9" translate="yes" xml:space="preserve">
          <source>Two brushes are equal if they have equal styles, colors and transforms and equal pixmaps or gradients depending on the style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411ba6d5e9d9f00eb7f6df6301e77f58279dbaf2" translate="yes" xml:space="preserve">
          <source>Two caches are considered equal if they contain the same values at the same indexes. This function requires the value type to implement the &lt;code&gt;operator==()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10332defdbe0649d590719f4329ee85d04e47858" translate="yes" xml:space="preserve">
          <source>Two classes are available for adding native Cocoa views and controls inside a Qt application, or for embedding Qt into a native Cocoa application: &lt;a href=&quot;qmaccocoaviewcontainer&quot;&gt;QMacCocoaViewContainer&lt;/a&gt;, and &lt;a href=&quot;qmacnativewidget&quot;&gt;QMacNativeWidget&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35ea75b6cd7e385faad88cc88d83c60f5dc1113a" translate="yes" xml:space="preserve">
          <source>Two convenience functions &lt;a href=&quot;qscrollarea#ensureVisible&quot;&gt;ensureVisible&lt;/a&gt;() and &lt;a href=&quot;qscrollarea#ensureWidgetVisible&quot;&gt;ensureWidgetVisible&lt;/a&gt;() ensure a certain region of the contents is visible inside the viewport, by scrolling the contents if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89963ae470d089102b57b1f4d64aa63c81de1dd4" translate="yes" xml:space="preserve">
          <source>Two datetimes are different if either the date, the time, or the time zone components are different.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff551ddeb581b0ee25f32b98de9583c3f0c8bca" translate="yes" xml:space="preserve">
          <source>Two dock widgets may also be stacked on top of each other. A &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt; is then used to select which of the widgets should be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bedf15220d0e6b7633a6024c2218f2ba8284b56" translate="yes" xml:space="preserve">
          <source>Two font metrics are considered equal if they were constructed from the same &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; and the paint devices they were constructed for are considered compatible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c5522f8daae855b0b9e8499d83bb385f32cfbaf" translate="yes" xml:space="preserve">
          <source>Two font metrics are considered equal if they were constructed from the same &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; and the paint devices they were constructed for are considered to be compatible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53c5caa5ebdc59b2f6df7e67b1f035d082fed88" translate="yes" xml:space="preserve">
          <source>Two hashes are considered equal if they contain the same (key, value) pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96521fe209fbcc10d5c7b62de30b90e907625385" translate="yes" xml:space="preserve">
          <source>Two important side effects of the destructor depend on the system. In Windows, if &lt;a href=&quot;qsystemsemaphore#acquire&quot;&gt;acquire&lt;/a&gt;() has been called for this semaphore but not &lt;a href=&quot;qsystemsemaphore#release&quot;&gt;release&lt;/a&gt;(), &lt;a href=&quot;qsystemsemaphore#release&quot;&gt;release&lt;/a&gt;() will not be called by the destructor, nor will the resource be released when the process exits normally. This would be a program bug which could be the cause of a deadlock in another process trying to acquire the same resource. In Unix, acquired resources that are not released before the destructor is called are automatically released when the process exits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8622ca8af987775a5c040add9f1eefb9963d519" translate="yes" xml:space="preserve">
          <source>Two lists are considered equal if they contain the same values in the same order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea88238d5753eb6dc18ae629871e2906e17aa9a1" translate="yes" xml:space="preserve">
          <source>Two maps are considered equal if they contain the same (key, value) pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba09b29d0801472a39e88ee463cf31ba6eff134" translate="yes" xml:space="preserve">
          <source>Two models included in Qt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e24195870d14822e570879fcee2acb4030b3b6" translate="yes" xml:space="preserve">
          <source>Two of the standard models provided by Qt are &lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; and &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt;. &lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; is a multi-purpose model that can be used to represent various different data structures needed by list, table, and tree views. This model also holds the items of data. &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt; is a model that maintains information about the contents of a directory. As a result, it does not hold any items of data itself, but simply represents files and directories on the local filing system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87759c46e2af4fa959a123a0054dff8bb79774e" translate="yes" xml:space="preserve">
          <source>Two other virtual functions can also be reimplemented:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7862ac6d3e0886f79d342836ac2845c0d1e6d6" translate="yes" xml:space="preserve">
          <source>Two pixel wide pen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10357c05ffd7f4a4b50dc4d832fb638055703c46" translate="yes" xml:space="preserve">
          <source>Two sets are considered equal if they contain the same elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c6b12920c30bf0316f569e1309eed2dfa508a1" translate="yes" xml:space="preserve">
          <source>Two vectors are considered equal if they contain the same values in the same order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31cfc5df695ad2a8426d9c4a85acf5ac037f1d10" translate="yes" xml:space="preserve">
          <source>Two web pages are considered as belonging to the same site if they originate from the same registered domain name (for example, &lt;code&gt;wikipedia.org&lt;/code&gt;) and scheme (for example, &lt;code&gt;https&lt;/code&gt;). This is similar to the same-origin policy but subdomains are ignored. For example, both &lt;code&gt;https://en.wikipedia.org/&lt;/code&gt; and &lt;code&gt;https://de.wikipedia.org/&lt;/code&gt; would belong to the same site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfa43d6b7ae9ff04d429325bc0d4fd49f88c98b" translate="yes" xml:space="preserve">
          <source>Two-dimensional vector using floating point precision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4601ab2a4ca7d0092de880e4a1523521f73dbb" translate="yes" xml:space="preserve">
          <source>Two-dimensional vector using integer precision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e743da79b5a5c2adaf8daf68aeaacb48bf30dc8" translate="yes" xml:space="preserve">
          <source>TxD (Transmitted Data). This value is obsolete. It is provided to keep old source code working. We strongly advise against using it in new code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="4d5d5a616c1d7cb58281666ab45d51366a84a21a" translate="yes" xml:space="preserve">
          <source>Type - sort by file type (extension)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66be4e285f125ea17da419d8fa1e85fd1b4d7fb" translate="yes" xml:space="preserve">
          <source>Type 42 (limited support)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="359ddf91fbea720fd3985aedcf70c8992c37450a" translate="yes" xml:space="preserve">
          <source>Type &lt;code&gt;T&lt;/code&gt; must be supported by &lt;a href=&quot;qhash#qHash&quot;&gt;qHash&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80bf5095726039294533a087369be7f9e7fca905" translate="yes" xml:space="preserve">
          <source>Type &lt;code&gt;T&lt;/code&gt; must be supported by &lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a7847613035d546b24417f86630520e2062551" translate="yes" xml:space="preserve">
          <source>Type Checking and Implicit Type Conversions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dafb1dfec73f2d391f5add96c8a173be95bea48a" translate="yes" xml:space="preserve">
          <source>Type Comparison Table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d94f038b5b84df77edcda6bdfbeab9c9cb59a7" translate="yes" xml:space="preserve">
          <source>Type Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b103601e9ea1a367d83c81eb08bbf3ef45ffa68c" translate="yes" xml:space="preserve">
          <source>Type Names and Imported JavaScript Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93bc72d2dbab08a0e3f2414e45c234d13511b7a0" translate="yes" xml:space="preserve">
          <source>Type Revisions and Versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86469abfaa44f69bd741f559ff1bb935309ad35e" translate="yes" xml:space="preserve">
          <source>Type Safety</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9785402500c9b8277c9a51dbdc20b48fbbf6b4" translate="yes" xml:space="preserve">
          <source>Type Selector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08322d601ab5a375817d4d0ce7d8e39704ebc9c0" translate="yes" xml:space="preserve">
          <source>Type checking is done at...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf386487655bee34cf4a6f3d8197ac8c2e1e3e9" translate="yes" xml:space="preserve">
          <source>Type displays a Route on a Map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b343ab8a6afe2c454ddd63dd5a08c3bf488b3b" translate="yes" xml:space="preserve">
          <source>Type displays a geographic circle on a Map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e566571720e4cc53de062bbaeca92399d216464" translate="yes" xml:space="preserve">
          <source>Type displays a map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c5c6dc620026da711cc1444a58e046efcab776" translate="yes" xml:space="preserve">
          <source>Type displays a polygon on a Map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0853f647a2fb7e1d354dc3ffc9bbe28e2da917" translate="yes" xml:space="preserve">
          <source>Type displays a polyline on a map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaab8868c84ca15da39cbc72a2e4595ca4786a70" translate="yes" xml:space="preserve">
          <source>Type displays a rectangle on a Map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a0bd02a341a62ba38e3bccda45e3047a257ee0" translate="yes" xml:space="preserve">
          <source>Type displays an arbitrary Qt Quick object on a Map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37462ce8241ab9d0d6ab935ce9e5c21f2ed1f06" translate="yes" xml:space="preserve">
          <source>Type holds a contact detail such as a phone number or a website address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c54b92f71e66afa705c289b0e5976e7ed99c63" translate="yes" xml:space="preserve">
          <source>Type holds additional data about a Place</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d39f3634253e3508f564fd13bf9aa97ab1e981" translate="yes" xml:space="preserve">
          <source>Type holds contact details for a Place</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223f4bdc58180acc953492d586bccfa719bfa0e9" translate="yes" xml:space="preserve">
          <source>Type holds generic place attribute information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b752a7a4705fa057138ad32ffdd7ff7fc3d495d9" translate="yes" xml:space="preserve">
          <source>Type holds information about a map type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa3ea8641e1502d91b760d26c03fb64f4b875f2" translate="yes" xml:space="preserve">
          <source>Type holds information about the camera capabilities for a specific map type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a271c67229eb27916a81579b375d7a25ee55a0e4" translate="yes" xml:space="preserve">
          <source>Type holds place rating information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f925331c3fdb86703f656df7443452a436c588" translate="yes" xml:space="preserve">
          <source>Type identifies a user who contributed a particular Place content item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144ebd55f704094b32a7107b875b22d97092cde7" translate="yes" xml:space="preserve">
          <source>Type information lost</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125071ce30b195380ddcef4aba3ffbdad71aac5f" translate="yes" xml:space="preserve">
          <source>Type is a container for map items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbdc4e231ef7a4403e1859afa39a1e4587209166" translate="yes" xml:space="preserve">
          <source>Type is used to provide query parameters to a RouteModel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc22086905aca0d7033f34eb34ca07c91494ff4" translate="yes" xml:space="preserve">
          <source>Type of an element in the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0c0c92d64dec0dc9c18d01e23f8fd1ee811d7b" translate="yes" xml:space="preserve">
          <source>Type of the command id, defined either as quint64 or quint32 depending on the platform support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0270e89c4a8e2d0772a1e0da52a3f3a11426ad68" translate="yes" xml:space="preserve">
          <source>Type of the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c60611e9a78eca3132be0323733846a1cc541b8" translate="yes" xml:space="preserve">
          <source>Type offers functionalities to perform turn-by-turn navigation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="836c1a0e53fd679bf1a96012498f1f6d517b9a49" translate="yes" xml:space="preserve">
          <source>Type provides Map gesture interaction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746792aa3dce5c9ce02f426e94d9be515b436e8c" translate="yes" xml:space="preserve">
          <source>Type provides a mean to specify a waypoint in a RouteQuery in a more detailed way than by using a simple coordinate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee26c7512a5b0d9ff09af18077445faec33459c" translate="yes" xml:space="preserve">
          <source>Type provides a means of returning to a previously active substate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77cc3197d8d579114c8a091ab5ea2204c663f182" translate="yes" xml:space="preserve">
          <source>Type provides a model of place editorials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35cf866e715f74a06126dd51d74f20db87b3854a" translate="yes" xml:space="preserve">
          <source>Type provides a model of place images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f36f323f3eca86ca1aa6b2bf4f3d259dea43cb" translate="yes" xml:space="preserve">
          <source>Type provides a model of the categories supported by a Plugin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07b565450bc81f3fe220e98d46608dd18cc70e3" translate="yes" xml:space="preserve">
          <source>Type provides a transition based on a Qt signal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a5f70b18fa8430c52029775bc69877883ec451" translate="yes" xml:space="preserve">
          <source>Type provides a transition based on a timer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99888323aa733a1eef64be34066773565d035db6" translate="yes" xml:space="preserve">
          <source>Type provides a way to play sound effects in QML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a154e8c0a64935f775995207a316d5c1974968f" translate="yes" xml:space="preserve">
          <source>Type provides access to routes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc3ea8e27d46e491e4b7500028e4e0499e7db95" translate="yes" xml:space="preserve">
          <source>Type provides basic information about pinch event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87cf0689c1cd00b990585b74607100a064c8cbc" translate="yes" xml:space="preserve">
          <source>Type provides support for searching operations related to geographic information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7587af7c1d3695e5ff169f639c5ed36ec957bc4a" translate="yes" xml:space="preserve">
          <source>Type represents a category that a Place can be associated with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ad737812653e952d2170d45d76a66a5873e47c" translate="yes" xml:space="preserve">
          <source>Type represents a leg of a Route, that is the portion of a route between one waypoint and the next</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93aae18ea1cd7f64111932bc66a46d5bae1afafa" translate="yes" xml:space="preserve">
          <source>Type represents a location that is a position of interest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085267d7f1379b80de209f527b190ea263e251d6" translate="yes" xml:space="preserve">
          <source>Type represents a parameter for a Map element. This type provides a mean to specify plugin-dependent optional parameters for a map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818c0b7b0126bb4ef0d7936bccdcbc3496ba3455" translate="yes" xml:space="preserve">
          <source>Type represents a segment of a Route</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a276ca26331c0733643ac033b295c413588b57" translate="yes" xml:space="preserve">
          <source>Type represents an icon image source which can have multiple sizes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b30c589e7d2fe5a22ea699c46e9b0f6c90d6f3ea" translate="yes" xml:space="preserve">
          <source>Type represents one geographical route</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68cdc359faa00a8fbaf4ed3373659d374c696ae5" translate="yes" xml:space="preserve">
          <source>Type represents the information relevant to the point at which two RouteSegments meet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702058f413ab7feb6d0dd27b24e9e5bef85f469f" translate="yes" xml:space="preserve">
          <source>Type-Conversion</source>
          <target state="translated">Type-Conversion</target>
        </trans-unit>
        <trans-unit id="570ef0454c984eb946c6562805906dad9de8b6a2" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;QMetaType::Bool&lt;/a&gt; (default: false) Indicates that this is a background transfer, rather than a user initiated transfer. Depending on the platform, background transfers may be subject to different policies. The &lt;a href=&quot;qnetworksession&quot;&gt;QNetworkSession&lt;/a&gt; ConnectInBackground property will be set according to this attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af8f14bd15271db0f113f7c146e7fa9294b1caa" translate="yes" xml:space="preserve">
          <source>TypeError</source>
          <target state="translated">TypeError</target>
        </trans-unit>
        <trans-unit id="ad94ca4ce05563c17a51e5658c7c66d334ec9454" translate="yes" xml:space="preserve">
          <source>TypeOfServiceOption</source>
          <target state="translated">TypeOfServiceOption</target>
        </trans-unit>
        <trans-unit id="333ed4eb5ad14155165e41a5363ff598aa74f095" translate="yes" xml:space="preserve">
          <source>Typed text should not be stored by the active input method in any persistent storage like predictive user dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de05bdb3e787c34906c619ed19f886249b7aa41d" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;a href=&quot;qjsonvalue&quot;&gt;QJsonValue&lt;/a&gt; &amp;amp;. Provided for STL compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471dd82db50c9aee99487bba7a7e9e10503dd0df" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;a href=&quot;qjsonvalue&quot;&gt;QJsonValue&lt;/a&gt; *. Provided for STL compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b1fd62ad95224ffd2977f59fe8aaf0b1ac0f88" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;a href=&quot;qjsonvalue&quot;&gt;QJsonValue&lt;/a&gt;. Provided for STL compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd310f31a26dbc804b527b82245292368f615fb" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt;&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bd0ea4443fe7fb0007e94d6996a2a1d2238e2d" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce11ae4f0b4f6afee25ffefce05d4a80a747662" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;, &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt;&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ba91c4c74972b5b88bed7c8d6582ec6c667099" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;. Provided for STL compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4002e6e299553c86d7c1f089c1c8ff8d11cd7272" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qgradient#QGradientStop-typedef&quot;&gt;QGradientStop&lt;/a&gt;&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc32853ac843dd7d84375c656bfc31df383207e8" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;code&gt;double&lt;/code&gt; unless Qt is configured with the &lt;code&gt;-qreal float&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68e0823f0282e23c9f8bfb9b339c673aa83142b" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;code&gt;long long int&lt;/code&gt; (&lt;code&gt;__int64&lt;/code&gt; on Windows). This is the same as &lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8559c1fec43216a6402529e8dc62c5480ea151" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;code&gt;long long int&lt;/code&gt; (&lt;code&gt;__int64&lt;/code&gt; on Windows). This type is guaranteed to be 64-bit on all platforms supported by Qt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa8512dd6c43c406c050540ca2921d053777b65" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;code&gt;signed char&lt;/code&gt;. This type is guaranteed to be 8-bit on all platforms supported by Qt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88489d287e6f5838b983ecde930b12af6425e089" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;code&gt;signed int&lt;/code&gt;. This type is guaranteed to be 32-bit on all platforms supported by Qt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83833a3199338df44b91f39fb243315aa086ba7c" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;code&gt;signed short&lt;/code&gt;. This type is guaranteed to be 16-bit on all platforms supported by Qt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57bf6d980f2d826212a28b96210774c135741a3" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;code&gt;std::reverse_iterator&amp;lt;T*&amp;gt;&lt;/code&gt;. Provided for STL compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e6238b63fea2a0e732a31ebe87b5ca68441dd5" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;code&gt;std::reverse_iterator&amp;lt;const T*&amp;gt;&lt;/code&gt;. Provided for STL compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88245a67f33af9210a57e80d71c5d6e2d7ffee8e" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;code&gt;unsigned char&lt;/code&gt;. This type is guaranteed to be 8-bit on all platforms supported by Qt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d7f6ac4b61ddf8a41f0c476a1ff251bebe8603" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;code&gt;unsigned int&lt;/code&gt;. This type is guaranteed to be 32-bit on all platforms supported by Qt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed1ccd1a6bb81064b2d21ab13bce388d93db3e0" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;code&gt;unsigned long long int&lt;/code&gt; (&lt;code&gt;unsigned __int64&lt;/code&gt; on Windows). This is the same as &lt;a href=&quot;qtglobal#quint64-typedef&quot;&gt;quint64&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb955d7394ef6b2035df127d761e31d23720aea" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;code&gt;unsigned long long int&lt;/code&gt; (&lt;code&gt;unsigned __int64&lt;/code&gt; on Windows). This type is guaranteed to be 64-bit on all platforms supported by Qt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd2db81a7bd464c2bc285155663e8b2bbcce06f" translate="yes" xml:space="preserve">
          <source>Typedef for &lt;code&gt;unsigned short&lt;/code&gt;. This type is guaranteed to be 16-bit on all platforms supported by Qt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1b502e27db3216e7cf93f37c5171253b995ddc" translate="yes" xml:space="preserve">
          <source>Typedef for Bluetooth Low Energy ATT attribute handles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5370730d72fc715a83e33fd33b28b4370c083d5f" translate="yes" xml:space="preserve">
          <source>Typedef for Key. Provided for STL compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a5f53fa1f00ab93d6ea2e5226148ed102a6d96" translate="yes" xml:space="preserve">
          <source>Typedef for T &amp;amp;. Provided for STL compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15805eeb868a369a9f6888e0270673b22eb8fdff" translate="yes" xml:space="preserve">
          <source>Typedef for T *. Provided for STL compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ff4c816efbafbb369175c5e8be3d12fcb8221a" translate="yes" xml:space="preserve">
          <source>Typedef for T. Provided for STL compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0dae25b8b16770ab5ce1c07f65d0f014daf3309" translate="yes" xml:space="preserve">
          <source>Typedef for a pointer to a custom calculator function with the same signature as &lt;a href=&quot;qmodbusrequest#calculateDataSize&quot;&gt;QModbusRequest::calculateDataSize&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71099bedb759ebace03b146ab25dcdb2864e18ef" translate="yes" xml:space="preserve">
          <source>Typedef for a pointer to a custom calculator function with the same signature as &lt;a href=&quot;qmodbusresponse#calculateDataSize&quot;&gt;QModbusResponse::calculateDataSize&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e6538b4fb0997e55adad6cf74a4f983ad01832" translate="yes" xml:space="preserve">
          <source>Typedef for a pointer to a function with the following signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a697026bb3f1c74d9faf9f4372847ee6906e3c69" translate="yes" xml:space="preserve">
          <source>Typedef for a std::function method that can take a &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; input and is responsible for creating the communications channel between this node and the node hosting the desired &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt;. As some types of QIODevices (e.g., &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;) require additional steps before the device is ready for use, the method is responsible for calling &lt;a href=&quot;qremoteobjectnode#addClientSideConnection&quot;&gt;addClientSideConnection&lt;/a&gt; once the connection is fully established.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584df28d3e0b58929611d778cfe88d9492c716f7" translate="yes" xml:space="preserve">
          <source>Typedef for const &lt;a href=&quot;qjsonvalue&quot;&gt;QJsonValue&lt;/a&gt; &amp;amp;. Provided for STL compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dbda4aae1d0853755acd2852438e73713d8a233" translate="yes" xml:space="preserve">
          <source>Typedef for const &lt;a href=&quot;qjsonvalue&quot;&gt;QJsonValue&lt;/a&gt; *. Provided for STL compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d0928b5fd77985a7b7d6d0f54e26f4661fa830" translate="yes" xml:space="preserve">
          <source>Typedef for const T &amp;amp;. Provided for STL compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61764bccc9fa29f82d9e91af0c117db477c851ec" translate="yes" xml:space="preserve">
          <source>Typedef for const T *. Provided for STL compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa505d0a9a74074cf738a4127ed97ae713d0735" translate="yes" xml:space="preserve">
          <source>Typedef for const ptrdiff_t. Provided for STL compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fdaf6a526d9acc958cb02e84e8d7d604a7bc1cf" translate="yes" xml:space="preserve">
          <source>Typedef for either qint32 or qint64. This type is guaranteed to be the same size as a pointer on all platforms supported by Qt. On a system with 32-bit pointers, qintptr is a typedef for qint32; on a system with 64-bit pointers, qintptr is a typedef for qint64.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c80f338934be741dea3cc95f8936a0ead98ceb" translate="yes" xml:space="preserve">
          <source>Typedef for either qint32 or qint64. This type is guaranteed to be the same size as a pointer on all platforms supported by Qt. On a system with 32-bit pointers, quintptr is a typedef for quint32; on a system with 64-bit pointers, quintptr is a typedef for quint64.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b3b0ebd749a5566d1a45da81908aa67d291efc" translate="yes" xml:space="preserve">
          <source>Typedef for either quint32 or quint64. This type is guaranteed to be the same size as a pointer on all platforms supported by Qt. On a system with 32-bit pointers, quintptr is a typedef for quint32; on a system with 64-bit pointers, quintptr is a typedef for quint64.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4343af82d892bfdcba3ab19b20fe571deca90b5" translate="yes" xml:space="preserve">
          <source>Typedef for int. Provided for STL compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c51d78048a3206fc016114a4373d85d3c36fd55" translate="yes" xml:space="preserve">
          <source>Typedef for ptrdiff_t. Provided for STL compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4ff836e75bc1a0a1f9a4c6a9bd591d0dfec7ec" translate="yes" xml:space="preserve">
          <source>Typedef for std::bidirectional_iterator_tag. Provided for STL compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a7076cd8e09757579f92761f7ac08a7650efbf" translate="yes" xml:space="preserve">
          <source>Typedef for the Enum template type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c9468dee371d9db44a300f2ab42c85d9637dfb" translate="yes" xml:space="preserve">
          <source>Typedef for the identifiers used to represent processes on the underlying platform. On Unix, this corresponds to &lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;; on Windows, it corresponds to &lt;code&gt;_PROCESS_INFORMATION*&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63267077213854c95a5f2bb263c4d5394a0ffd69" translate="yes" xml:space="preserve">
          <source>Typedef for the integer type used for storage as well as for implicit conversion. Either &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;unsigned int&lt;/code&gt;, depending on whether the enum's underlying type is signed or unsigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1daf092c1ee620055f56a08fc3aae8b63f4da8" translate="yes" xml:space="preserve">
          <source>Typedefs and namespaces cannot be resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">Types</target>
        </trans-unit>
        <trans-unit id="ef2ed0d7a2157817d2b3463e2c5967ca4a394b15" translate="yes" xml:space="preserve">
          <source>Types &lt;code&gt;T1&lt;/code&gt; and &lt;code&gt;T2&lt;/code&gt; must be supported by &lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1aafbf340e1f7bcafbf6cdc20eb18e53bfed4f3" translate="yes" xml:space="preserve">
          <source>Types can also be registered into namespaces directly via the various registration functions in C++ (such as &lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;()). The types which have been registered into a namespace in this way may be imported by importing the namespace, as if the namespace was a module identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef47ef159b9f7a5e91fb0a9be76fcba746efcad0" translate="yes" xml:space="preserve">
          <source>Types in Qt.labs modules are not guaranteed to remain compatible in future versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24a47f2f7953dce63308e15ddbf5d7ea463c53b" translate="yes" xml:space="preserve">
          <source>Types in the Qt.labs module are not guaranteed to remain compatible in future versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef613e81e022eb49298467d618f3982f65240ce" translate="yes" xml:space="preserve">
          <source>Types of Iterators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d3c7de9f4eb4eeebec50da2eac08d4ba119e79" translate="yes" xml:space="preserve">
          <source>Types of purchases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca09175264ac2bd90f6451c6dd7aa48a9dd39291" translate="yes" xml:space="preserve">
          <source>Types registered as an interface with the engine should also declare themselves as an interface with the &lt;a href=&quot;metaobjects&quot;&gt;meta object system&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e155eca8d5b06935cd3202ea8418d27a3813673d" translate="yes" xml:space="preserve">
          <source>Types that animate properties based on data types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed5e35b64d5037124039cb7b64d6cf5456f5be9" translate="yes" xml:space="preserve">
          <source>Types that are first in the list can be assumed to be faster to render.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2714dd0a19ff0302191da8bcc69484ea0c9cd44e" translate="yes" xml:space="preserve">
          <source>Types that can be used to build menus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3831647702f695dea331fae9776f5c68c341134c" translate="yes" xml:space="preserve">
          <source>Types used for horizontal positioning and model views have the &lt;code&gt;layoutDirection&lt;/code&gt; property for controlling the horizontal direction of the layouts. Setting &lt;code&gt;layoutDirection&lt;/code&gt; to &lt;code&gt;Qt.RightToLeft&lt;/code&gt; causes items to be laid out from the right to left. By default Qt Quick follows the left-to-right layout direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3071c4b2d28654c641903de901b5a8ca4c33c4f8" translate="yes" xml:space="preserve">
          <source>Typewrite font</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b31f3118b992edcb439271e3acd98e181b0075a" translate="yes" xml:space="preserve">
          <source>Typical Compile-Time Problems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf53b6942807cd9b2d75c5c6e47e7646bdf95185" translate="yes" xml:space="preserve">
          <source>Typical Error Messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788cf63ed7c279f28a0fe3d202b0d733dfae63c7" translate="yes" xml:space="preserve">
          <source>Typical Errors During the Post-Build Steps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc8ea7c34a48c7be6fc8f75d24d7fea2fbf4285" translate="yes" xml:space="preserve">
          <source>Typical Runtime Errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9145325e36d94545a26409cce889c602c2cd1acc" translate="yes" xml:space="preserve">
          <source>Typical outputs are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f62a5194d5c6c03aaa822d0ce144ec2508d079" translate="yes" xml:space="preserve">
          <source>Typical returned values are (note: list not exhaustive):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ea816347d161b41037085f3f54bed390f9b336" translate="yes" xml:space="preserve">
          <source>Typical usage is changing the window title:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3920a6d63ada14771030f112a42637891dd170" translate="yes" xml:space="preserve">
          <source>Typical usage of &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#pathinterpolator&quot;&gt;PathInterpolator&lt;/a&gt; is to set the progress (often via a &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt;), and read the corresponding values for x, y, and angle (often via bindings to these values).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f433de3a09f2cf5cd13a827c57725457d725e39" translate="yes" xml:space="preserve">
          <source>Typical usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5641f574b62e937e5827bf576427cebf5c6dd75d" translate="yes" xml:space="preserve">
          <source>Typically it's sufficient to set this property globally using the application style hint. This property should be used when varying intervals are needed for certain MouseAreas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec81804b374cf0aea85c4e6091173f731427243" translate="yes" xml:space="preserve">
          <source>Typically located on the keypad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0d3aa670659d40d3e4b7d3dc7ca63ae24f3807" translate="yes" xml:space="preserve">
          <source>Typically the engine instance would be made the &lt;code&gt;parent&lt;/code&gt; of the reply. If the developer fails to discard the replies when finished, the engine can clean those upon destruction. Commonly, the reply also has a pointer reference back to the engine, which may be used to emit the &lt;a href=&quot;qplacemanagerengine#finished&quot;&gt;QPlaceManagerEngine::finished&lt;/a&gt;() and &lt;a href=&quot;qplacemanagerengine#error&quot;&gt;QPlaceManagerEngine::error&lt;/a&gt;() signals. This is just one of many ways the reply could be implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3c8c7dbb44263e13cb89adfbfcb05e76cd8452" translate="yes" xml:space="preserve">
          <source>Typically the sound effect should be reused, which allows all the parsing and preparation to be done ahead of time, and only triggered when necessary. This assists with lower latency audio playback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4656932adfb90ea204bd573035fd184215e107ea" translate="yes" xml:space="preserve">
          <source>Typically the sound effect should be reused, which allows all the parsing and preparation to be done ahead of time, and only triggered when necessary. This is easy to achieve with QML, since you can declare your &lt;a href=&quot;qml-multimedia#soundeffect&quot;&gt;SoundEffect&lt;/a&gt; instance and refer to it elsewhere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8514d0aedf5de826ecb5ea8176420b50ee52aa79" translate="yes" xml:space="preserve">
          <source>Typically this is used in conjunction with &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; to remember the size for a future session. A version number is stored as part of the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b223f570343e81e9bb64f3254a55150c6d31d52d" translate="yes" xml:space="preserve">
          <source>Typically this is used in conjunction with &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; to remember the size for a future session. A version number is stored as part of the data. Here is an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383828e6cb492a59cf6438607d0b1898eca4aabf" translate="yes" xml:space="preserve">
          <source>Typically this is used in conjunction with &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; to restore the size from a past session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c5f1d3a34340e4d4f89965ecc02861a662c300" translate="yes" xml:space="preserve">
          <source>Typically this is used in conjunction with &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; to restore the size from a past session. Here is an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680eadb66f81e09930ac8bded751faefcadc116f" translate="yes" xml:space="preserve">
          <source>Typically this will include 8 and 16 bit sample sizes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4d54ee48d48ed6552ac413716dd1498301e7df" translate="yes" xml:space="preserve">
          <source>Typically you would use the overload of &lt;a href=&quot;qstate#addTransition&quot;&gt;QState::addTransition&lt;/a&gt;() that takes a sender and signal as arguments, rather than creating &lt;a href=&quot;qsignaltransition&quot;&gt;QSignalTransition&lt;/a&gt; objects directly. &lt;a href=&quot;qsignaltransition&quot;&gt;QSignalTransition&lt;/a&gt; is part of &lt;a href=&quot;statemachine-api#&quot;&gt;The State Machine Framework&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919855dcd26dc10738a77792e374b4653dfefb8c" translate="yes" xml:space="preserve">
          <source>Typically, &lt;a href=&quot;qprintdialog&quot;&gt;QPrintDialog&lt;/a&gt; objects are constructed with a &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object, and executed using the &lt;a href=&quot;qprintdialog#exec&quot;&gt;exec&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735f7579a237035408c9a58aa57a4a00351d92be" translate="yes" xml:space="preserve">
          <source>Typically, a compositor written with Qt Wayland Compositor becomes a subsystem inside a larger application manager process. Qt Wayland Compositor provides the APIs to communicate with clients and display their content on the screen. The QML APIs contain high-level APIs that easily integrate with the rest of Qt, enabling convenient animations, effects, and UI through Qt Quick. There are also C++ APIs available - if you need more low-level access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4f1a112667855d44236312a7011be11189a495" translate="yes" xml:space="preserve">
          <source>Typically, a request for the status bar functionality occurs in relation to a &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; object. &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; provides a main application window, with a menu bar, tool bars, dock widgets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66064b24ca4ade9a0e91beb036ca688ab654a2ea" translate="yes" xml:space="preserve">
          <source>Typically, a resource-definition script (.rc file) is compiled to a Windows resource file. Within the Microsoft toolchain, the RC tool generates a .res file, which can be linked with the Microsoft linker to an EXE or DLL. The &lt;a href=&quot;https://mingw-w64.org/&quot;&gt;MinGW&lt;/a&gt; toolchain uses the windres tool to generate an .o file that can be linked with the &lt;a href=&quot;https://mingw-w64.org/&quot;&gt;MinGW&lt;/a&gt; linker to an EXE or DLL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b17239c9c31700b1026b1973c2ca70226848e4" translate="yes" xml:space="preserve">
          <source>Typically, function documentation immediately precedes the implementation of the function in the &lt;code&gt;.cpp&lt;/code&gt; file. For function documentation that is not immediately above the implementation, the &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#fn-command&quot;&gt;\fn&lt;/a&gt; is needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff96edd00ad1c58ffb7d7146ff0b2bd7279e2607" translate="yes" xml:space="preserve">
          <source>Typically, function documentation immediately precedes the implementation of the function in the &lt;code&gt;.cpp&lt;/code&gt; file. The &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#&quot;&gt;topic command&lt;/a&gt; for functions is &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#fn-command&quot;&gt;\fn&lt;/a&gt;. For functions in QML or JavaScript, the documentation must reside immediately above the function declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469e9dcbca4d1beac408a36e20f838b9ca52539f" translate="yes" xml:space="preserve">
          <source>Typically, implementations of the function will simply construct a new &lt;a href=&quot;qvideofilterrunnable&quot;&gt;QVideoFilterRunnable&lt;/a&gt; instance, passing &lt;code&gt;this&lt;/code&gt; to the constructor as the filter runnables must know their associated &lt;a href=&quot;qabstractvideofilter&quot;&gt;QAbstractVideoFilter&lt;/a&gt; instance to access dynamic properties and optionally emit signals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa9593f7cef1d6bbd4db0fce8cb016b4193ee95" translate="yes" xml:space="preserve">
          <source>Typically, items are statically declared as children of Container, but it is also possible to &lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;move&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qml-qtquick-controls2-container-obsolete.html#removeItem-method&quot;&gt;remove&lt;/a&gt; items dynamically. The items in a container can be accessed using &lt;a href=&quot;qml-qtquick-controls2-container#itemAt-method&quot;&gt;itemAt()&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-controls2-container#contentChildren-prop&quot;&gt;contentChildren&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ba532539c378daf9421e18bb47ad0fe245eafe" translate="yes" xml:space="preserve">
          <source>Typically, menu items are statically declared as children of the menu, but Menu also provides API to &lt;a href=&quot;qml-qtquick-controls2-menu#addItem-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-menu#insertItem-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-menu#moveItem-method&quot;&gt;move&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qml-qtquick-controls2-menu-obsolete.html#removeItem-method&quot;&gt;remove&lt;/a&gt; items dynamically. The items in a menu can be accessed using &lt;a href=&quot;qml-qtquick-controls2-menu#itemAt-method&quot;&gt;itemAt()&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-controls2-popup#contentChildren-prop&quot;&gt;contentChildren&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49847f0fd123a983792e0bbca9e29249fd5c49db" translate="yes" xml:space="preserve">
          <source>Typically, menus are statically declared as children of the menu bar, but &lt;a href=&quot;qml-qtquick-controls2-menubar&quot;&gt;MenuBar&lt;/a&gt; also provides API to &lt;a href=&quot;qml-qtquick-controls2-menubar#addMenu-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-menubar#insertMenu-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-menubar#removeMenu-method&quot;&gt;remove&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-controls2-menubar#takeMenu-method&quot;&gt;take&lt;/a&gt; menus dynamically. The menus in a menu bar can be accessed using &lt;a href=&quot;qml-qtquick-controls2-menubar#menuAt-method&quot;&gt;menuAt()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f012e27774ab57be0df50e0387c05bd92881432" translate="yes" xml:space="preserve">
          <source>Typically, one creates a &lt;a href=&quot;qcborstreamreader&quot;&gt;QCborStreamReader&lt;/a&gt; by passing the source &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; or &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; as a parameter to the constructor, then pop elements off the stream if there were no errors in decoding. There are three kinds of CBOR types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b4dd4acbba652c0ac3f5c4e87c650ec137bba2" translate="yes" xml:space="preserve">
          <source>Typically, this class is used for reporting errors, as is the case for &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;, which uses a &lt;a href=&quot;qabstractmessagehandler&quot;&gt;QAbstractMessageHandler&lt;/a&gt; to report compile and runtime &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; errors. Hence, using a &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; as the message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347d58349ea420b4a7833b85bea3e532dc99573c" translate="yes" xml:space="preserve">
          <source>Typically, to save documents edited by the user, call setDirectWriteFallback(true), and to save application internal files (configuration files, data files, ...), keep the default setting which ensures atomicity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc1c877f0aba8ea745157a187963d016a9dea43" translate="yes" xml:space="preserve">
          <source>Typically, your application's &lt;code&gt;main()&lt;/code&gt; function will look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141678905228dc9a8a8a9b60a500e81633c2f139" translate="yes" xml:space="preserve">
          <source>Typing causes a menu to be search for relevant items, otherwise only mnemnonic is considered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9cc2202bcdf3ee819d72846178f72cecee7f491" translate="yes" xml:space="preserve">
          <source>Typography in Qt is done with &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; which uses the &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; API in combination with Qt's font classes, primarily &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt;. Applications that prefer more low-level APIs to text and font handling, classes like &lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qglyphrun.html&quot;&gt;QGlyphRun&lt;/a&gt; can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c7c0caa10a0cca5ea7d69e54018ae0c0389dd6" translate="yes" xml:space="preserve">
          <source>U</source>
          <target state="translated">U</target>
        </trans-unit>
        <trans-unit id="152d9df0b0d88b36b3685c5840b5979a8698e27c" translate="yes" xml:space="preserve">
          <source>UCS-4 is a Unicode codec and therefore it is lossless. All characters from this string will be encoded in UCS-4. Any invalid sequence of code units in this string is replaced by the Unicode replacement character (&lt;a href=&quot;qchar#SpecialCharacter-enum&quot;&gt;QChar::ReplacementCharacter&lt;/a&gt;, which corresponds to &lt;code&gt;U+FFFD&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a489c6cc2cb758b79838735678469f22a28043c2" translate="yes" xml:space="preserve">
          <source>UCS-4 is a Unicode codec and therefore it is lossless. All characters from this string will be encoded in UCS-4. Any invalid sequence of code units in this string is replaced by the Unicode's replacement character (&lt;a href=&quot;qchar#SpecialCharacter-enum&quot;&gt;QChar::ReplacementCharacter&lt;/a&gt;, which corresponds to &lt;code&gt;U+FFFD&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19be8331b69f90c34f42c0e733d25cb65c0972d7" translate="yes" xml:space="preserve">
          <source>UDI protocol UUID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a6f622e340090feb219eb5c94b0df756e8e486" translate="yes" xml:space="preserve">
          <source>UDP</source>
          <target state="translated">UDP</target>
        </trans-unit>
        <trans-unit id="fe942882ad4bb406c2bbf6582a075aeda8d0fb49" translate="yes" xml:space="preserve">
          <source>UDP (User Datagram Protocol) is a lightweight, unreliable, datagram-oriented, connectionless protocol. It can be used when reliability isn't important. &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; is a subclass of &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; that allows you to send and receive UDP datagrams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcf5da2ef7bbcd3aa5444ec2b0615502386aa8a" translate="yes" xml:space="preserve">
          <source>UDP (User Datagram Protocol) is a lightweight, unreliable, datagram-oriented, connectionless protocol. It can be used when reliability isn't important. For example, a server that reports the time of day could choose UDP. If a datagram with the time of day is lost, the client can simply make another request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ac95826844545d35820c62b67d700f09a984bd" translate="yes" xml:space="preserve">
          <source>UDP protocol UUID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e872cc053249282bd2a0e9f1606fc2432fd5f977" translate="yes" xml:space="preserve">
          <source>UI files (usually in &lt;a href=&quot;qmake-variable-reference#forms&quot;&gt;FORMS&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb58c858e6e1e0157672e7313010d640b6f6ee4" translate="yes" xml:space="preserve">
          <source>UI files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b72b4b431e5bb425aa07a623780ff69fb63a989" translate="yes" xml:space="preserve">
          <source>UI volume controls should usually be scaled nonlinearly. For example, using a logarithmic scale will produce linear changes in perceived loudness, which is what a user would normally expect from a volume control. See &lt;a href=&quot;qaudio#convertVolume&quot;&gt;QAudio::convertVolume&lt;/a&gt;() for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f47fe29416781f0664fb8f1e4330efa7c5b0b34" translate="yes" xml:space="preserve">
          <source>UI volume controls should usually be scaled nonlinearly. For example, using a logarithmic scale will produce linear changes in perceived loudness, which is what a user would normally expect from a volume control. See &lt;a href=&quot;qml-qtmultimedia-qtmultimedia#convertVolume-method&quot;&gt;QtMultimedia.convertVolume()&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ccdfc0accdb486b49b36be779c0c92fd456c710" translate="yes" xml:space="preserve">
          <source>UINT16</source>
          <target state="translated">UINT16</target>
        </trans-unit>
        <trans-unit id="db37a94db2ae5203a3708accea85d32d3c958e7e" translate="yes" xml:space="preserve">
          <source>UINT32</source>
          <target state="translated">UINT32</target>
        </trans-unit>
        <trans-unit id="3f2f073dc8e5d6347e3222fc44f034ebea308d84" translate="yes" xml:space="preserve">
          <source>UINT64</source>
          <target state="translated">UINT64</target>
        </trans-unit>
        <trans-unit id="99fc48c51a4fe7e6dc18ef94bfe8faa8498ecbc9" translate="yes" xml:space="preserve">
          <source>UI_DIR</source>
          <target state="translated">UI_DIR</target>
        </trans-unit>
        <trans-unit id="9b81a5f58a08d125439c4fe920735e6f93f6c26f" translate="yes" xml:space="preserve">
          <source>UInt</source>
          <target state="translated">UInt</target>
        </trans-unit>
        <trans-unit id="9b91eff346b26fc24b599a1b056c8e792133fc73" translate="yes" xml:space="preserve">
          <source>ULongLong</source>
          <target state="translated">ULongLong</target>
        </trans-unit>
        <trans-unit id="1e0a126c0104ffb27de29028325cad010314a0af" translate="yes" xml:space="preserve">
          <source>UNICHAR</source>
          <target state="translated">UNICHAR</target>
        </trans-unit>
        <trans-unit id="99ed2ea04f3de7a2912ea18daae32fb113d44f62" translate="yes" xml:space="preserve">
          <source>UNIVARCHAR</source>
          <target state="translated">UNIVARCHAR</target>
        </trans-unit>
        <trans-unit id="c5ec2a3c5bfed523cab3f8ff98e5c704311dce20" translate="yes" xml:space="preserve">
          <source>UNIX_SOCKET</source>
          <target state="translated">UNIX_SOCKET</target>
        </trans-unit>
        <trans-unit id="17c7495fdf8be3fa9699c0132e3ab42f5a000359" translate="yes" xml:space="preserve">
          <source>URI resolved against the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e23cd11ca94b0d4226abd29ee790346dee6aead" translate="yes" xml:space="preserve">
          <source>URI resolved using the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f110f5f2a56be6215c19c5fa16548e7f132772d7" translate="yes" xml:space="preserve">
          <source>URI was not accepted to be resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2dc1a03dc30c42938c930d92d0add3be133438" translate="yes" xml:space="preserve">
          <source>URI, it should simply return the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33bdd1cace0d525c10410fbd9748f506c626b74" translate="yes" xml:space="preserve">
          <source>URI.</source>
          <target state="translated">URI.</target>
        </trans-unit>
        <trans-unit id="d093bdaa782f59ac13b897f7b9054b31839f2bb9" translate="yes" xml:space="preserve">
          <source>URIError</source>
          <target state="translated">URIError</target>
        </trans-unit>
        <trans-unit id="8fef01df5c11bd037d00d722125abb207181b648" translate="yes" xml:space="preserve">
          <source>URIs are first passed to &lt;a href=&quot;qabstracturiresolver&quot;&gt;QAbstractUriResolver&lt;/a&gt;. Check &lt;a href=&quot;qxmlquery#setUriResolver&quot;&gt;QXmlQuery::setUriResolver&lt;/a&gt;() for possible rewrites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e2fa0a1de11b6f8aee80d9ab9516a6e5fa7a4d" translate="yes" xml:space="preserve">
          <source>URIs to physical ones, or it can translate obsolete or invalid URIs to valid ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="bd670191da877dae79ac8701645fc93b167be3ee" translate="yes" xml:space="preserve">
          <source>URL Handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81324f4bd320b6f72b74637b406c433c6a3aa93b" translate="yes" xml:space="preserve">
          <source>URL argument to limit the scope of the cookie to be deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642e3183e30380eb3254c0a419ec5bb51a7259a3" translate="yes" xml:space="preserve">
          <source>URL is the same as a relative file, development of QML on regular file systems remains simple:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9c001dc3313a29a2147988d3b95afdea1bbb06" translate="yes" xml:space="preserve">
          <source>URL path component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65eb13a6e0ea667d118f9f0faf339a24d46c757e" translate="yes" xml:space="preserve">
          <source>URL that points to the documentation on the service..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257bd9d3e248d2b3d841692d4a7bd36e7bc2bbe1" translate="yes" xml:space="preserve">
          <source>URL that refers to the location of an application that can be used to utilize the service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2c93ebf2e4d19550a3a8890ad392e4d6407480" translate="yes" xml:space="preserve">
          <source>URL to the location of the icon representing the service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0342138b6649e4cff239ba93f28ce48f0a13e990" translate="yes" xml:space="preserve">
          <source>URL to the playlist at the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9606f96762782f86bbc9fc4855732239769c3920" translate="yes" xml:space="preserve">
          <source>URL to the playlist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f47f2c4440048b8237abf6d4ed2a9376bcc676" translate="yes" xml:space="preserve">
          <source>URL, file name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c772f23a6efeac7a6996739bde021cc74f92802d" translate="yes" xml:space="preserve">
          <source>URL, using the default query delimiters. To parse a query string using other delimiters, you should first set them using &lt;a href=&quot;qurlquery#setQueryDelimiters&quot;&gt;setQueryDelimiters&lt;/a&gt;() and then set the query with &lt;a href=&quot;qurlquery#setQuery&quot;&gt;setQuery&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f084d35b5bd1e6ea144f73998ad536a1d076d2a" translate="yes" xml:space="preserve">
          <source>URLs can be represented in two forms: encoded or unencoded. The unencoded representation is suitable for showing to users, but the encoded representation is typically what you would send to a web server. For example, the unencoded URL &quot;http://b&amp;uuml;hler.example.com/List of applicants.xml&quot; would be sent to the server as &quot;http://xn--bhler-kva.example.com/List%20of%20applicants.xml&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1ab0c557575740842d16b25b8f5dc9b9fdd180" translate="yes" xml:space="preserve">
          <source>URLs correspond to the MIME type &lt;code&gt;text/uri-list&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c259bbc19d52e19b5b7851e809820cc95a9809c" translate="yes" xml:space="preserve">
          <source>URLs of back items, forward items, and the current item in the history.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f7c9803cdcbe2bd78d81ca409655910a5b92c5" translate="yes" xml:space="preserve">
          <source>URLs of the pages that were visited after visiting the current page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42258cd60648aeba0451c9587360522a9da39b8b" translate="yes" xml:space="preserve">
          <source>URLs of visited pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25145cf49cf4b74320bcc56388b1ea5d2fa3fdd" translate="yes" xml:space="preserve">
          <source>USE_ENUM keyword</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d3ac5c30b7ece1f75f1ac2e723ea1e5ee09078" translate="yes" xml:space="preserve">
          <source>UTC Offset Time Zones</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9da893be5fd5fae314bea8dcdeeee12beeec4b" translate="yes" xml:space="preserve">
          <source>UTF-16</source>
          <target state="translated">UTF-16</target>
        </trans-unit>
        <trans-unit id="979a19c76541f1e1114e0a03d633f4396a70caf1" translate="yes" xml:space="preserve">
          <source>UTF-16 Big Endian</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790df07092fd36f1adb6ee3b52355117496a3d44" translate="yes" xml:space="preserve">
          <source>UTF-16 Little Endian</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4a45e716017695cfee4bc84f1a4e0c8e1e9b9a" translate="yes" xml:space="preserve">
          <source>UTF-16BE</source>
          <target state="translated">UTF-16BE</target>
        </trans-unit>
        <trans-unit id="6af12beb19d40aa853839c482e864ce703f4d2a9" translate="yes" xml:space="preserve">
          <source>UTF-16LE</source>
          <target state="translated">UTF-16LE</target>
        </trans-unit>
        <trans-unit id="9d90671c2d02729e29282121f3418c32309d8132" translate="yes" xml:space="preserve">
          <source>UTF-32</source>
          <target state="translated">UTF-32</target>
        </trans-unit>
        <trans-unit id="9655e1b2ecfb65e77a40b9394215f3ba07b4f704" translate="yes" xml:space="preserve">
          <source>UTF-32 Big Endian</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e61fa32dec9dd80e74c34ead69e78e9668f3766" translate="yes" xml:space="preserve">
          <source>UTF-32 Little Endian</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4d8d4f017185a065b570c771eb332a1c842bec" translate="yes" xml:space="preserve">
          <source>UTF-32BE</source>
          <target state="translated">UTF-32BE</target>
        </trans-unit>
        <trans-unit id="35cabe85c31dfe3f6b86974de33fef51a0f7276a" translate="yes" xml:space="preserve">
          <source>UTF-32LE</source>
          <target state="translated">UTF-32LE</target>
        </trans-unit>
        <trans-unit id="663b90c899fa25a111067be0c22ffc64dcf581c2" translate="yes" xml:space="preserve">
          <source>UTF-8</source>
          <target state="translated">UTF-8</target>
        </trans-unit>
        <trans-unit id="c3b7c93789a279a5e067bf99f4f045ffbf81026c" translate="yes" xml:space="preserve">
          <source>UTF-8 is a Unicode codec and can represent all characters in a Unicode string like &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80009b78ec0a8a14127b6724878f2122af35fb5" translate="yes" xml:space="preserve">
          <source>UTF-8 is a Unicode codec and can represent all characters in a Unicode string like &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;. However, invalid sequences are possible with UTF-8 and, if any such are found, they will be replaced with one or more &quot;replacement characters&quot;, or suppressed. These include non-Unicode sequences, non-characters, overlong sequences or surrogate codepoints encoded into UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aff4afee80b67c4ed4ecd55e84f7358c5ef58c3" translate="yes" xml:space="preserve">
          <source>UTI</source>
          <target state="translated">UTI</target>
        </trans-unit>
        <trans-unit id="6023e74c92ed2dfa4a78702f2c830da23c9e20e6" translate="yes" xml:space="preserve">
          <source>UUID that uniquely identifies the service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552e2a9608c951d1b81bf58716cdbd92eff2c512" translate="yes" xml:space="preserve">
          <source>UUIDs can be constructed from numeric values or from strings, or using the static &lt;a href=&quot;quuid#createUuid&quot;&gt;createUuid&lt;/a&gt;() function. They can be converted to a string with &lt;a href=&quot;quuid#toString&quot;&gt;toString&lt;/a&gt;(). UUIDs have a &lt;a href=&quot;quuid#variant&quot;&gt;variant&lt;/a&gt;() and a &lt;a href=&quot;quuid#version&quot;&gt;version&lt;/a&gt;(), and null UUIDs return true from &lt;a href=&quot;quuid#isNull&quot;&gt;isNull&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f468dc59934a7206cd617422f59cad75d36c1a" translate="yes" xml:space="preserve">
          <source>UUIDs of service classes that the service conforms to. The most common service classes are defined in (&lt;a href=&quot;qbluetoothuuid#ServiceClassUuid-enum&quot;&gt;QBluetoothUuid::ServiceClassUuid&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aec26279dad1cfc156679979df1129f2aabda0e" translate="yes" xml:space="preserve">
          <source>Ubuntu 16.04</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd195acce4959407bbecd28a63a95b159a75424d" translate="yes" xml:space="preserve">
          <source>Ubuntu 18.04</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f301189dd0e6ecd6aa5f6cd826f3ac3660574f9f" translate="yes" xml:space="preserve">
          <source>UdpSocket</source>
          <target state="translated">UdpSocket</target>
        </trans-unit>
        <trans-unit id="515451058797b204e188dd70f8d20f32dacca327" translate="yes" xml:space="preserve">
          <source>Ukrainian</source>
          <target state="translated">Ukrainian</target>
        </trans-unit>
        <trans-unit id="67c638575c0250dd22e12fb602bbc481f93dea79" translate="yes" xml:space="preserve">
          <source>Ukrainian Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c07782db5dc5957edf6d3c9e049c2298d4192dce" translate="yes" xml:space="preserve">
          <source>Ulrich Drepper's excellent article: &quot;What Every Programmer Should Know About Memory&quot;, at: &lt;a href=&quot;https://people.freebsd.org/~lstewart/articles/cpumemory.pdf&quot;&gt;https://people.freebsd.org/~lstewart/articles/cpumemory.pdf&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5ea62caa5956fb456ef1c7b58f9fa499900740" translate="yes" xml:space="preserve">
          <source>Unable to access the resource..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41fb3b53057e4de258e6e2da224c31c180ea5b99" translate="yes" xml:space="preserve">
          <source>Unable to connect to the target host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322c05f24a1a6dc986f58698e6d1e5eb33f904ac" translate="yes" xml:space="preserve">
          <source>Unable to open radio device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03121cbf18c4f7c8ffd219c43e27839b8713210d" translate="yes" xml:space="preserve">
          <source>Unable to open the file specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9c1f79142df1b66d7a9ed0086592e49c8cf16e" translate="yes" xml:space="preserve">
          <source>Unavailable</source>
          <target state="translated">Unavailable</target>
        </trans-unit>
        <trans-unit id="16c294856bb8c54049ed943c792ea8d2a6adbfce" translate="yes" xml:space="preserve">
          <source>UnavailableStatus</source>
          <target state="translated">UnavailableStatus</target>
        </trans-unit>
        <trans-unit id="b58d2c99d4d56241ec69a1ca67c64f0f7f76df10" translate="yes" xml:space="preserve">
          <source>Unbind (&lt;a href=&quot;qopenglvertexarrayobject#release&quot;&gt;release&lt;/a&gt;()) the VAO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b91b9f01c961936d1a35de1ebecfac1ec578d86f" translate="yes" xml:space="preserve">
          <source>Unbind the helper object from this media object. A warning will be generated if the object was not previously bound to this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5668ed341a80243738a0ff434bf8c56f0304f03a" translate="yes" xml:space="preserve">
          <source>Unbinds the graphics resources used by the blitter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dca2612c92a36b630a5383ef4844d7631c0dc15" translate="yes" xml:space="preserve">
          <source>Unbinds this texture from texture unit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d79a6294d4c62c225bd67e37bf3cd4a2abf434" translate="yes" xml:space="preserve">
          <source>Unbinds this texture from the currently active texture unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d1d5f142906052adee4a90b3b66f71186c3439" translate="yes" xml:space="preserve">
          <source>Unbinds this vertex array object by binding the default vertex array object (id = 0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582baf1a3a8492f4d5e38eff5695a353b162f889" translate="yes" xml:space="preserve">
          <source>Unbound key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b91e4c4af9d2d7674ce5285b5efe36702056678" translate="yes" xml:space="preserve">
          <source>Uncomment the service part of your &lt;code&gt;AndroidManifest.xml&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d37fcbc86d3491849fb0f29c7b27d24eb2ead2" translate="yes" xml:space="preserve">
          <source>Uncompresses the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27378b3b5273fe7f051c043f8c3eb5d3f1bead39" translate="yes" xml:space="preserve">
          <source>Uncompresses the first</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08fe0f93d1ddb3978064a81011ec8d41148a8a16" translate="yes" xml:space="preserve">
          <source>Undefine macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0646f4afd90c8fdb87bbcb57b63ee1911f5a9a46" translate="yes" xml:space="preserve">
          <source>Undefined</source>
          <target state="translated">Undefined</target>
        </trans-unit>
        <trans-unit id="d5435b5e7ff24894b38f76bb733aa73026ed44a1" translate="yes" xml:space="preserve">
          <source>Undefined and null values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282f47c35a8c820f46bd979c632f5b87e9ade1cd" translate="yes" xml:space="preserve">
          <source>Undefined values are different from null values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142f18828b9afba04afccfbac8c290d20f9c1dad" translate="yes" xml:space="preserve">
          <source>Undefined values are different from null values. While nulls are used to indicate an optional value that is not provided, Undefined is usually used to indicate that an expected value could not be provided, usually due to an error or a precondition that could not be satisfied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e172c81a8533c4dec8f4634a01eae4367de4ef2" translate="yes" xml:space="preserve">
          <source>Undefined values are distinct from null values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12cae0215e9e585c0d8bfb768a2325b0b773cb0e" translate="yes" xml:space="preserve">
          <source>Undefined values are represented by the &lt;a href=&quot;qtcborcommon#QCborSimpleType-enum&quot;&gt;Undefined simple type&lt;/a&gt;. Because of that, QCborValues with undefined values will also return true for &lt;a href=&quot;qcborvalue#isSimpleType&quot;&gt;isSimpleType&lt;/a&gt;() and &lt;code&gt;isSimpleType(QCborSimpleType::Undefined)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62de6f4677a18079946a4163205a3cf82fd783a" translate="yes" xml:space="preserve">
          <source>Under Unix, two libraries are available which support the TDS protocol:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6862ca930fcfc1d00c64c3ae41285869c5918a15" translate="yes" xml:space="preserve">
          <source>Under Windows this function will return the directory of the current user's profile. Typically, this is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8c04cf02a975dfbe2d04291fd48019919f2c7a" translate="yes" xml:space="preserve">
          <source>Under non-Windows operating systems the &lt;code&gt;HOME&lt;/code&gt; environment variable is used if it exists, otherwise the path returned by the &lt;a href=&quot;qdir#rootPath&quot;&gt;rootPath&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a6e136f6ceb162c33d7f6ec6eec416aaef567a" translate="yes" xml:space="preserve">
          <source>Under normal circumstances qmake will try to use appropriate file extensions for your platform. However, it is sometimes necessary to override the default choices for each platform and explicitly define file extensions for qmake to use. This is achieved by redefining certain built-in variables. For example, the extension used for &lt;a href=&quot;moc&quot;&gt;moc&lt;/a&gt; files can be redefined with the following assignment in a project file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885a99aef53abac33590caa40dde46ca2d796c8a" translate="yes" xml:space="preserve">
          <source>Under normal circumstances, there is only one tool tip visible at a time. In order to save resources, all items that use the &lt;a href=&quot;qml-qtquick-controls2-tooltip&quot;&gt;ToolTip&lt;/a&gt; attached property share the same visual tool tip label instance. Even though the visuals are shared, &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;timeout&lt;/code&gt; and &lt;code&gt;delay&lt;/code&gt; are stored individually for each item that uses the respective attached property. However, multiple items cannot make the shared tool tip visible at the same time. The shared tool tip is only shown for the last item that made it visible. The position of the shared tool tip is determined by the framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922991ef186cb101cab589ed9c25a12fd962baa0" translate="yes" xml:space="preserve">
          <source>Under the hood, conversion from a JavaScript &lt;code&gt;Date&lt;/code&gt; object to &lt;a href=&quot;qtime&quot;&gt;QTime&lt;/a&gt; is done by converting to a &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; object and calling its &lt;a href=&quot;qdatetime#time&quot;&gt;time()&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39773aa3efa19090c918baedac1fe737dea25b92" translate="yes" xml:space="preserve">
          <source>Underline</source>
          <target state="translated">Underline</target>
        </trans-unit>
        <trans-unit id="f39467e21dc3c9f535be3fe76ee9c932556bf709" translate="yes" xml:space="preserve">
          <source>Underline text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2b50e3670eb759e5d9ce161630ede5e20fb13e" translate="yes" xml:space="preserve">
          <source>Underlined</source>
          <target state="translated">Underlined</target>
        </trans-unit>
        <trans-unit id="501c579e177268d6fc14ebe1881fe624c76f7501" translate="yes" xml:space="preserve">
          <source>Underlines draw drawn using &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::DashDotDotLine&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39fc72124884d6573e4f9f89585f071ed0782696" translate="yes" xml:space="preserve">
          <source>Undo</source>
          <target state="translated">Undo</target>
        </trans-unit>
        <trans-unit id="12994b05631d471f49e70d7e3026e78432d05dd8" translate="yes" xml:space="preserve">
          <source>Undo and Redo Actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c380a5eed442f6784e65a5306e788e09aa3d9204" translate="yes" xml:space="preserve">
          <source>Undo becomes available once the user has modified the text in the line edit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84236bde0f15b9c499c67afd031213d5ed31e94e" translate="yes" xml:space="preserve">
          <source>Undo is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402fe9fde3d3a2caf7d03b5057a437abc61a3044" translate="yes" xml:space="preserve">
          <source>Undo the last editing action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b48720e1daace0d5acad80d5929694e5609c63b" translate="yes" xml:space="preserve">
          <source>Undo.</source>
          <target state="translated">Undo.</target>
        </trans-unit>
        <trans-unit id="e497c7f97cd58960f17ebda6772625d49d697340" translate="yes" xml:space="preserve">
          <source>Undo/redo of operations performed on the document can be controlled using the &lt;a href=&quot;qtextdocument#undoRedoEnabled-prop&quot;&gt;setUndoRedoEnabled&lt;/a&gt;() function. The undo/redo system can be controlled by an editor widget through the &lt;a href=&quot;qtextdocument#undo-1&quot;&gt;undo&lt;/a&gt;() and &lt;a href=&quot;qtextdocument#redo-1&quot;&gt;redo&lt;/a&gt;() slots; the document also provides &lt;a href=&quot;qtextdocument#contentsChanged&quot;&gt;contentsChanged&lt;/a&gt;(), &lt;a href=&quot;qtextdocument#undoAvailable&quot;&gt;undoAvailable&lt;/a&gt;(), and &lt;a href=&quot;qtextdocument#redoAvailable&quot;&gt;redoAvailable&lt;/a&gt;() signals that inform connected editor widgets about the state of the undo/redo system. The following are the undo/redo operations of a &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b27024674bcee6616409b2bc8cd19cfa486c64" translate="yes" xml:space="preserve">
          <source>Undoes the command below the current command by calling &lt;a href=&quot;qundocommand#undo&quot;&gt;QUndoCommand::undo&lt;/a&gt;(). Decrements the current command index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10ce77aadea3ad845b5f21a88cc7a32025ad31e" translate="yes" xml:space="preserve">
          <source>Undoes the last &lt;a href=&quot;qguiapplication#setOverrideCursor&quot;&gt;setOverrideCursor&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11841a2181e41d5a95d4142cc399a4a03664417b" translate="yes" xml:space="preserve">
          <source>Undoes the last editing operation on the document if undo is available. The provided</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e2e832ecfe3072d8047cba4bc61e788f51d4db" translate="yes" xml:space="preserve">
          <source>Undoes the last operation if undo is &lt;a href=&quot;qlineedit#undoAvailable-prop&quot;&gt;available&lt;/a&gt;. Deselects any current selection, and updates the selection start to the current cursor position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b50a3d17ac8a31e4972d0e682e32a35cf7116ce" translate="yes" xml:space="preserve">
          <source>Undoes the last operation if undo is &lt;a href=&quot;qml-qtquick-controls-textarea#canUndo-prop&quot;&gt;available&lt;/a&gt;. Deselects any current selection, and updates the selection start to the current cursor position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5baa64a72872dacf9d57a51ef77d818b82c2927e" translate="yes" xml:space="preserve">
          <source>Undoes the last operation if undo is &lt;a href=&quot;qml-qtquick-textedit#canUndo-prop&quot;&gt;available&lt;/a&gt;. Deselects any current selection, and updates the selection start to the current cursor position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8423b2e2b93eefc10219056baa6f1ec33c9f61a4" translate="yes" xml:space="preserve">
          <source>Undoes the last operation if undo is &lt;a href=&quot;qml-qtquick-textinput#canUndo-prop&quot;&gt;available&lt;/a&gt;. Deselects any current selection, and updates the selection start to the current cursor position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cd8b6dc53d97d58cc01f4c6949b2b6cd66b26a" translate="yes" xml:space="preserve">
          <source>Undoes the last operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad28b50c1fcb9c3a35b1e24f9fda5b40546e92d4" translate="yes" xml:space="preserve">
          <source>Unexpected server response (might indicate that the responding server may not be the intended server).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74fc60303342f62c3d3abc055f4f95dfc73fe380" translate="yes" xml:space="preserve">
          <source>Ungrabs the gesture for the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac7d9bfbfce1527114b3e8f6feb5a58858b596d" translate="yes" xml:space="preserve">
          <source>Ungrabs the touch points owned by this item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c079480e2173fb585283d639662cec9ca1b9de" translate="yes" xml:space="preserve">
          <source>Unicode Character Database (UCD), version 20</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2c7ef7f43fe84d2de02fe73da14e037408e8a6" translate="yes" xml:space="preserve">
          <source>Unicode Common Locale Data Repository (CLDR), version v35.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b264c7f869479b227cbaa0911a2c698f9e5d4ac" translate="yes" xml:space="preserve">
          <source>Unicode I/O should be used as this maximizes the portability of documents between users around the world. In many cases it is however still necessary to support other encodings as your users will need to process existing documents. The most important additional encoding to support is the one returned by &lt;a href=&quot;qtextcodec#codecForLocale&quot;&gt;QTextCodec::codecForLocale&lt;/a&gt;(), as this is the one the user is most likely to need for communicating with other people and applications (this is the codec used by local8Bit()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e12dcf5376b2110b6af7baf6c885063a09ef75e" translate="yes" xml:space="preserve">
          <source>Unicode License Agreement - Data Files and Software (2016)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a764a1eca3bfa0c103fc62104685c7434534a68d" translate="yes" xml:space="preserve">
          <source>Unicode character string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e660b4354c647e84650b0e0d9b838da111743a6" translate="yes" xml:space="preserve">
          <source>Unicode characters in the array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804539674f604599415c23b616daeec0f3355168" translate="yes" xml:space="preserve">
          <source>Unicode class name Cc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f21c5391107a8995764221eeeef25ef1dff9fe4" translate="yes" xml:space="preserve">
          <source>Unicode class name Cf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a95f9b0036e0494d178e51053b498cd70a16aed" translate="yes" xml:space="preserve">
          <source>Unicode class name Cn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d98eaef6e55b144af00eee6ac384a00ecac357" translate="yes" xml:space="preserve">
          <source>Unicode class name Co</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d63ad1f34041f213a91ce33f6cf30e0e42e70dd1" translate="yes" xml:space="preserve">
          <source>Unicode class name Cs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f8b5b3e0396ab37e864fd15fcb2646c25ba6fc" translate="yes" xml:space="preserve">
          <source>Unicode class name Ll</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c44342cfa85d9f91422edc674ab0e2ec270f67a5" translate="yes" xml:space="preserve">
          <source>Unicode class name Lm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492190e8cb894836d498adb26231193361b54d70" translate="yes" xml:space="preserve">
          <source>Unicode class name Lo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8465a53433e9e2c4bdb9d4d7ea6d63acfcb6c2cd" translate="yes" xml:space="preserve">
          <source>Unicode class name Lt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff8a68d488ed5428cb0cc3d367c4aa515a18e12" translate="yes" xml:space="preserve">
          <source>Unicode class name Lu</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc9279a4a00fd48d4aa08e2ce8b8ed8fa8125aa" translate="yes" xml:space="preserve">
          <source>Unicode class name Mc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b407b13aeb927b3308f5525ae6f63a190fc4c572" translate="yes" xml:space="preserve">
          <source>Unicode class name Me</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6f0995f270cd17f32829b4c9455e168c0cad1d" translate="yes" xml:space="preserve">
          <source>Unicode class name Mn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01488631caec97c6ad53f79174e24fe3d3b2f10" translate="yes" xml:space="preserve">
          <source>Unicode class name Nd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6724d07e62e014f40082eec71dbb4aed960b2841" translate="yes" xml:space="preserve">
          <source>Unicode class name Nl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ffe84c05cec0dc3739b114fe38f8a3fb57d63f" translate="yes" xml:space="preserve">
          <source>Unicode class name No</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb12ba9fbd3e944a941d012e86925936f79a48c5" translate="yes" xml:space="preserve">
          <source>Unicode class name Pc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dada06bf3d256da032e8908335f13d97780f3d0c" translate="yes" xml:space="preserve">
          <source>Unicode class name Pd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08de76244bc859ba321359491b2da73e5b54691" translate="yes" xml:space="preserve">
          <source>Unicode class name Pe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191101182f43593d205c8236568227940b038f36" translate="yes" xml:space="preserve">
          <source>Unicode class name Pf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622e59907d49460cc17820d3f16e7a117f8f06df" translate="yes" xml:space="preserve">
          <source>Unicode class name Pi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618ab0b4b4f9e899becb46d99b1357c37261597f" translate="yes" xml:space="preserve">
          <source>Unicode class name Po</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5703fbb3b35a1f0d1c4dced5595851e06e7782" translate="yes" xml:space="preserve">
          <source>Unicode class name Ps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f31bae151f1750d348cdf7431761fc5e7559676" translate="yes" xml:space="preserve">
          <source>Unicode class name Sc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3a452cd52ef3686f1a88ac30c6c9397c36a3ce" translate="yes" xml:space="preserve">
          <source>Unicode class name Sk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ac846a3277fa09681d85e6e23d0a1ed9fde8b3" translate="yes" xml:space="preserve">
          <source>Unicode class name Sm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09cf917800ba8520cc116aef75034b69d65e2e08" translate="yes" xml:space="preserve">
          <source>Unicode class name So</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="819122709f4d6adb563e24a78a0c08ae91bcbf68" translate="yes" xml:space="preserve">
          <source>Unicode class name Zl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4394a308af0f2f195f6a4272258df6781dc3a7" translate="yes" xml:space="preserve">
          <source>Unicode class name Zp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3060d16c244459c61fc281c4a14b1442cc153e09" translate="yes" xml:space="preserve">
          <source>Unicode class name Zs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6c87ae2a3a018f5f70c5e8ea8ee1a071022542" translate="yes" xml:space="preserve">
          <source>Unicode compliant line breaking and text rendering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604139570f57fbe02bf36179d6d21b7eb5feae65" translate="yes" xml:space="preserve">
          <source>Unicode compliant text segmentation (&lt;a href=&quot;qtextboundaryfinder&quot;&gt;QTextBoundaryFinder&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de4169f5152301efc38458211ca7a34be2327d2" translate="yes" xml:space="preserve">
          <source>Unicode has a certain number of code points that are classified as &quot;non-characters:&quot; that is, they can be used for internal purposes in applications but cannot be used for text interchange. Those are the last two entries each Unicode Plane ([0xfffe..0xffff], [0x1fffe..0x1ffff], etc.) as well as the entries in range [0xfdd0..0xfdef].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45684b5c7cabf84abcb46c2f7f8dd2bf642166e1" translate="yes" xml:space="preserve">
          <source>Unicode in Qt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a1a8b3eaac70cade8499323e40bc108dfcb36c" translate="yes" xml:space="preserve">
          <source>Unicode properties support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465d060e15f45fd6bc5f4060ec89e6cf322ad7ee" translate="yes" xml:space="preserve">
          <source>Unicode support was introduced in PostgreSQL version 7.1 and it will only work if both the server and the client library have been compiled with multibyte support. More information about how to set up a multibyte enabled PostgreSQL server can be found in the PostgreSQL Administrator Guide, Chapter 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62c13cb99c22a920a8da28e378ed63c85ab2cc7" translate="yes" xml:space="preserve">
          <source>Unicode-aware UI controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="135cd3bc7c476c4107114b7dfec21d4b3429b97c" translate="yes" xml:space="preserve">
          <source>Unified view on UTF-16 strings with a read-only subset of the QString API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c0741b768908b65554852ab185ffec58ea702c" translate="yes" xml:space="preserve">
          <source>Uniform color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202fcf4145dc5ccb3711160b45cc12c327a561cf" translate="yes" xml:space="preserve">
          <source>UniformAnimator (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b28e98c5466596907d0d27bd1553a98db9169f5" translate="yes" xml:space="preserve">
          <source>UniformAnimator QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0cd18837e5f8ec53fb2430e86226749e2dd90f" translate="yes" xml:space="preserve">
          <source>UniformAnimator.uniform</source>
          <target state="translated">UniformAnimator.uniform</target>
        </trans-unit>
        <trans-unit id="8ab92fe7e6096435f4c087a6a683e1110a1d340d" translate="yes" xml:space="preserve">
          <source>Uninitialize the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b539d7c1c8d889e69794ce3102b5978a0cc4f8c9" translate="yes" xml:space="preserve">
          <source>Union ItemChangeData is declared in class &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a4100ea50a71e886ef84da0972951f343cc100" translate="yes" xml:space="preserve">
          <source>Unique id of this Trace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="048e44b2b22d2cd4f1487a297b043020b33aa11a" translate="yes" xml:space="preserve">
          <source>Uniquely identifies a &lt;a href=&quot;qt3dcore-qnode&quot;&gt;QNode&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d56aa98473a39974b2ccacd60e1d7e90e9135620" translate="yes" xml:space="preserve">
          <source>Uniquely identifies a &lt;a href=&quot;qt3dcore-qnode&quot;&gt;QNode&lt;/a&gt;. &lt;a href=&quot;qt3dcore-qnodeid#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4acc50bf6c0a0ef5733002a45ed7568dc5102e22" translate="yes" xml:space="preserve">
          <source>Uniquely identifies a QNode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438d23452047f4defac8e18aecae37372fcea335" translate="yes" xml:space="preserve">
          <source>Unit Testing</source>
          <target state="translated">单元测试</target>
        </trans-unit>
        <trans-unit id="c611c9be23218bf91d617b5dce647c1bd42033be" translate="yes" xml:space="preserve">
          <source>Unit tests are available to help in debugging new plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bceba8e72cb70a97b5dd99755b4f078d7589f50c" translate="yes" xml:space="preserve">
          <source>Unites this path with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd718a4579eb2e51504ab4f4ddfc8a12519d97d" translate="yes" xml:space="preserve">
          <source>Unites this rectangle with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5a0a63c362a3003fcb6acf0237f40cc30e834b" translate="yes" xml:space="preserve">
          <source>Units of Unicode characters that make up what the user thinks of as a character or basic unit of the language are here called Grapheme clusters. The two unicode characters 'A' + diaeresis do for example form one grapheme cluster as the user thinks of them as one character, yet it is in this case represented by two unicode code points (see &lt;a href=&quot;http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries&quot;&gt;http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c53b4d73c234ebbba946d4fc47af3cbc02af641" translate="yes" xml:space="preserve">
          <source>Unity (1) may be viewed as a third step size. &lt;a href=&quot;qabstractslider#value-prop&quot;&gt;setValue&lt;/a&gt;() lets you set the current value to any integer in the allowed range, not just &lt;a href=&quot;qabstractslider#minimum-prop&quot;&gt;minimum&lt;/a&gt;() +</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32e3d283435474dbb3282b52476c4345e4ac0b2" translate="yes" xml:space="preserve">
          <source>Universal Section</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c6c75d44eaa7cb88962d885f159709ac994fc9" translate="yes" xml:space="preserve">
          <source>Universal Selector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9cec691e62599fb2d3638b1160b745f45f9b575" translate="yes" xml:space="preserve">
          <source>Universal Style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed5277ae4741d0fd9ab3db2ecf0ab9301cdaa7d" translate="yes" xml:space="preserve">
          <source>Universal Style.Universal.accent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1255c20d9fdc02d9486f05c2fecd5942e91afdb9" translate="yes" xml:space="preserve">
          <source>Universal Style.Universal.background</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb8754831c56218b762ff64d67ac73e42c05b70" translate="yes" xml:space="preserve">
          <source>Universal Style.Universal.foreground</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1fb38164e11079fe75c65e4e308e9f3b1c5609f" translate="yes" xml:space="preserve">
          <source>Universal Style.Universal.theme</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79fcc76c69aad6360736cdc2890abe7554b6f9c0" translate="yes" xml:space="preserve">
          <source>Universal Style.color()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15dd92f231c8409d0f09d681de1f1ee2278868e8" translate="yes" xml:space="preserve">
          <source>Universal Windows Platform</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e7f05b8d76c9054eda824afe2ab5561e06730b0" translate="yes" xml:space="preserve">
          <source>Universal Windows Platform 10</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb272de0d94906bb244b24db7c9d9c9a2fc30dd6" translate="yes" xml:space="preserve">
          <source>Universal Windows Platforms include Windows 10, Windows 10 IoT devices, Xbox One, and HoloLens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9104c78f4b025f0539b8f4b121e931beb51bf8e" translate="yes" xml:space="preserve">
          <source>Universal.accent : color</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11efa8acc6deaae2e47ab31e7a02df3d8e484ca1" translate="yes" xml:space="preserve">
          <source>Universal.background : color</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe7028f8e7796115b6568a27b48b522f5071a3c" translate="yes" xml:space="preserve">
          <source>Universal.foreground : color</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c666d25e14d9c6b4a6b3b8ec6ed8376d0fb2ff3" translate="yes" xml:space="preserve">
          <source>Universal.theme : enumeration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cecc0d8500754b34f5bd7f11dfabb25c3a770aaf" translate="yes" xml:space="preserve">
          <source>Unix</source>
          <target state="translated">Unix</target>
        </trans-unit>
        <trans-unit id="23057e10781a62c4f63b11ac426a8b3e07822a00" translate="yes" xml:space="preserve">
          <source>Unix Signal Handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be05786a6be919edb17d41a7398c4dceb6b5c975" translate="yes" xml:space="preserve">
          <source>Unix file descriptor passing is not available in all D-Bus connections. This feature is present with D-Bus library and bus daemon version 1.4 and upwards on Unix systems. Qt D-Bus automatically enables the feature if such a version was found at compile-time and run-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="378f9d447de7f9fff35b8eccd2b6333dd32985f9" translate="yes" xml:space="preserve">
          <source>Unix, BSD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c014b33a1a11a4a986bad5ad366963382e0ffcf" translate="yes" xml:space="preserve">
          <source>Unix-specific code, destination variable is not &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; and/or is used to interface with non-Qt APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f4e1d8f6320f14c5ff11542b0668c108060cb8" translate="yes" xml:space="preserve">
          <source>Unix/Linux</source>
          <target state="translated">Unix/Linux</target>
        </trans-unit>
        <trans-unit id="8d5fff79c3b62e9941b4383a334f964f3e46c0e1" translate="yes" xml:space="preserve">
          <source>Unix/X11</source>
          <target state="translated">Unix/X11</target>
        </trans-unit>
        <trans-unit id="49384d4099fc11e183e893e1822e2e492cd63c11" translate="yes" xml:space="preserve">
          <source>Unix: &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; &quot;owns&quot; the shared memory segment. When the last thread or process that has an instance of &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; attached to a particular shared memory segment detaches from the segment by destroying its instance of &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt;, the Unix kernel release the shared memory segment. But if that last thread or process crashes without running the &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; destructor, the shared memory segment survives the crash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4adc16fe3a073041e2ced4095f3b20adf9c9fff" translate="yes" xml:space="preserve">
          <source>Unknown baud. This value is obsolete. It is provided to keep old source code working. We strongly advise against using it in new code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142aec0abd1141473a1a6c241d5b96a43880a860" translate="yes" xml:space="preserve">
          <source>Unknown component type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5fd9aa24c9417e7332e6f25936ae2a6ec8f1524" translate="yes" xml:space="preserve">
          <source>Unknown error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53129004bf315c94a49905134180a2b30dbce54" translate="yes" xml:space="preserve">
          <source>Unknown error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d638c8e1d6431506e5cd0b560d840a87977ba75" translate="yes" xml:space="preserve">
          <source>Unknown error, no better enum available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3716d64264f900396f1af7fc16d7b86fdf992a50" translate="yes" xml:space="preserve">
          <source>Unknown error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563fa578e234a984bd92a13494c6f0d99daf68bb" translate="yes" xml:space="preserve">
          <source>Unknown flow control. This value is obsolete. It is provided to keep old source code working. We strongly advise against using it in new code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82232a631efc57d779bde9c4b0a27c4e9e38b3e5" translate="yes" xml:space="preserve">
          <source>Unknown number of bits. This value is obsolete. It is provided to keep old source code working. We strongly advise against using it in new code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c8ac188a0d1e5a02551150caee5540a4271b8b" translate="yes" xml:space="preserve">
          <source>Unknown number of stop bits. This value is obsolete. It is provided to keep old source code working. We strongly advise against using it in new code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a28a8d48271f4c44416af09895dfc1e2aeab319" translate="yes" xml:space="preserve">
          <source>Unknown or internal error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d3fab27ce2913b14b8d91475d90b4dd8486c86" translate="yes" xml:space="preserve">
          <source>Unknown or unspecified version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880db099e07b29c0f65f2b45e8eaafcaa48a5d99" translate="yes" xml:space="preserve">
          <source>Unknown parity. This value is obsolete. It is provided to keep old source code working. We strongly advise against using it in new code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86888526fa52dc9891fd04e25741831c54d3afe6" translate="yes" xml:space="preserve">
          <source>Unknown reason</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07012bb48cea7b1e88337c2d9ff5ebc4d8bbd1d8" translate="yes" xml:space="preserve">
          <source>Unknown reason or not interrupted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094c587c87542bda8809b1051f148ab6c191ee59" translate="yes" xml:space="preserve">
          <source>Unknown request type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a040d74dd97425864fdf9a7af49f7e0a1de3c5d" translate="yes" xml:space="preserve">
          <source>Unknown, or a user defined size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76d293e11d35a74f9b9e6139e64f821dfd8a2dd" translate="yes" xml:space="preserve">
          <source>UnknownRole - the role is unknown or undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed769392307f0adf5af5e4ee014a5b3778f9a4e" translate="yes" xml:space="preserve">
          <source>UnknownStatus - the status of the media is unknown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc9481ccc42310377001eaf4b65f0ba7f43291d9" translate="yes" xml:space="preserve">
          <source>Unless</source>
          <target state="translated">Unless</target>
        </trans-unit>
        <trans-unit id="0a6deca0d0b5e44c32180a5e60a83b034ccdc600" translate="yes" xml:space="preserve">
          <source>Unless &lt;a href=&quot;qlibrary#unload&quot;&gt;unload&lt;/a&gt;() was called explicitly, the library stays in memory until the application terminates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbaf478e8d52d2e9b4eee7e00cef1c693003c876" translate="yes" xml:space="preserve">
          <source>Unless &lt;a href=&quot;qnetworkreply#close&quot;&gt;close&lt;/a&gt;() or &lt;a href=&quot;qnetworkreply#abort&quot;&gt;abort&lt;/a&gt;() have been called, the reply will be still be opened for reading, so the data can be retrieved by calls to &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() or &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;(). In particular, if no calls to &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() were made as a result of &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead&lt;/a&gt;(), a call to &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;() will retrieve the full contents in a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fcff84e0f0775cd94285f1bd35a6ed81b7fc321" translate="yes" xml:space="preserve">
          <source>Unless &lt;a href=&quot;qpluginloader#unload&quot;&gt;unload&lt;/a&gt;() was called explicitly, the plugin stays in memory until the application terminates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb69bb14b4632d2ccf1971fe83fdced7876ac96" translate="yes" xml:space="preserve">
          <source>Unless an active &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt;&lt;a href=&quot;qgeoareamonitorinfo#isPersistent&quot;&gt;isPersistent()&lt;/a&gt; an active &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt; will be stopped once the current application terminates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96693335dda9ebfd70b6b898ab43a0817546932" translate="yes" xml:space="preserve">
          <source>Unless canceled, calls &lt;a href=&quot;qsemaphore#release&quot;&gt;QSemaphore::release&lt;/a&gt;() with the arguments provided to the constructor, or by the last move assignment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681c291d642420ca2c5a04563e0163f0cf859d9a" translate="yes" xml:space="preserve">
          <source>Unless explicitly overridden, the content height is automatically calculated based on the implicit height of the items in the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ac86d7d7c3cd99d9f7088696cb8f39b336ae92" translate="yes" xml:space="preserve">
          <source>Unless explicitly overridden, the content width is automatically calculated based on the implicit width of the items in the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c45bf113d588b4183de403c994774aece2c31a" translate="yes" xml:space="preserve">
          <source>Unless explicitly set this returns the default value of the current style. This size is the maximum size that icons can have; icons of smaller size are not scaled up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9b806bc596a400ab2ea46b4795644ae389e598" translate="yes" xml:space="preserve">
          <source>Unless explicitly set, the window is automatically resolved by iterating the QML parent objects until a &lt;a href=&quot;qml-qtquick-window-window&quot;&gt;Window&lt;/a&gt; or an &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; that has a window is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb6355a2afc6c079c8e6c20438622bfac1966c6" translate="yes" xml:space="preserve">
          <source>Unless explicitly set, this property follows the value of &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#pressed-signal&quot;&gt;pressed&lt;/a&gt;. To return to the default value, set this property to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5159bd3d222d8d6d7df23ed696dc7c63654924ac" translate="yes" xml:space="preserve">
          <source>Unless explicitly set, this property follows the value of &lt;a href=&quot;qml-qtquick-controls2-popup#modal-prop&quot;&gt;modal&lt;/a&gt;. To return to the default value, set this property to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9319138c315f1cfbf4ce4ead0170f492e8c152f" translate="yes" xml:space="preserve">
          <source>Unless explicitly set, this property is &lt;code&gt;true&lt;/code&gt; when either &lt;code&gt;pressed&lt;/code&gt; or &lt;code&gt;popup.visible&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;. To return to the default value, set this property to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d4e45ac33b353e00ef4bcc8d9bcbfd96393124" translate="yes" xml:space="preserve">
          <source>Unless specified otherwise, Qt Sensors uses the &lt;a href=&quot;http://en.wikipedia.org/wiki/Cartesian_coordinate_system&quot;&gt;Right Hand Cartesian coordinate system&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71422bc5c9748f3c33b0d36d50415a87a9eb4f4b" translate="yes" xml:space="preserve">
          <source>Unless stated otherwise, the commands in this page are for the Linux platforms. On macOS and on Windows, the &lt;code&gt;PATH&lt;/code&gt; and directory structure are different, therefore the commands will vary. Also, on Windows systems, the configure script is called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca6a8243653174f6c3e53afaf8172742e936a860" translate="yes" xml:space="preserve">
          <source>Unless tagged differently (see above), encoded as Base64url</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3fa291501b6a87377bdd77d8f68bdbdced158e" translate="yes" xml:space="preserve">
          <source>Unless the current selection mode is &lt;a href=&quot;qabstractitemview#SelectionMode-enum&quot;&gt;NoSelection&lt;/a&gt;, the item is also selected. Note that this function also updates the starting position for any new selections the user performs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22bcc5a536f02294541eb2ecfb1de95bb11a37f" translate="yes" xml:space="preserve">
          <source>Unless the data type contains a comma (e.g., &lt;code&gt;QPair&amp;lt;int, int&amp;gt;&lt;/code&gt;), the variable used for iteration can be defined within the &lt;code&gt;foreach&lt;/code&gt; statement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7db5fed33cb6f4e91f5081d35d999844078aab4" translate="yes" xml:space="preserve">
          <source>Unless the selection mode is &lt;a href=&quot;qabstractitemview#SelectionMode-enum&quot;&gt;NoSelection&lt;/a&gt;, the item is also selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87ed422b4595ad1995eda1d7581399ff58c9fc3" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt;, STL-style iterators point directly at items. The &lt;a href=&quot;qlist#begin&quot;&gt;begin()&lt;/a&gt; function of a container returns an iterator that points to the first item in the container. The &lt;a href=&quot;qlist#end&quot;&gt;end()&lt;/a&gt; function of a container returns an iterator to the imaginary item one position past the last item in the container. &lt;a href=&quot;qlist#end&quot;&gt;end()&lt;/a&gt; marks an invalid position; it must never be dereferenced. It is typically used in a loop's break condition. If the list is empty, &lt;a href=&quot;qlist#begin&quot;&gt;begin()&lt;/a&gt; equals &lt;a href=&quot;qlist#end&quot;&gt;end()&lt;/a&gt;, so we never execute the loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba16a239b0007eb66ca00bd5b584c764d0230933" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qabstractsocket#setReadBufferSize&quot;&gt;QAbstractSocket::setReadBufferSize&lt;/a&gt;(), &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; cannot guarantee precision in the read buffer size. That is, &lt;a href=&quot;qiodevice#bytesAvailable&quot;&gt;bytesAvailable&lt;/a&gt;() can return more than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53b50b4cc2552a1a3a10de48f2ce6b7aea51642" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qbytearray#simplified&quot;&gt;simplified&lt;/a&gt;(), trimmed() leaves internal whitespace alone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d5c296b50d315fb4ab8d5fac6502d2e6ab1dfc" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qbytearraymatcher&quot;&gt;QByteArrayMatcher&lt;/a&gt;, this class calculates the internal representation at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa01fd1236c8e6bb287e3ae937385d349fdc80bd" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qcborstreamreader#readByteArray&quot;&gt;readByteArray&lt;/a&gt;() and &lt;a href=&quot;qcborstreamreader#readString&quot;&gt;readString&lt;/a&gt;(), this function is not limited by implementation limits of &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; and &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c614288d804ebdd043c7485972948fa1e5f1f76" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;, calling &lt;a href=&quot;qfiledevice#close&quot;&gt;close&lt;/a&gt;() is not allowed. &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;() replaces it. If &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;() was not called and the &lt;a href=&quot;qsavefile&quot;&gt;QSaveFile&lt;/a&gt; instance is destroyed, the temporary file is discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67bcbdfa4aa5eea40011d8612ec1124b26437101" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; is not an abstract class; you can create instances of a &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; without having to subclass it. This approach is useful for widgets that only serve the purpose of organizing child widgets into a layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ddbbede5bbb90be1dc89a4165b3ee92e5cd575" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qgraphicsitem#transform&quot;&gt;transform&lt;/a&gt;(), which returns only an item's local transformation, this function includes the item's (and any parents') position, and all the transfomation properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526c141fc9305eb4a6e17fa29ac1ece987d643e0" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt; provides no operator[]. Use &lt;a href=&quot;qhash#value&quot;&gt;value&lt;/a&gt;() or &lt;a href=&quot;qmultihash#replace&quot;&gt;replace&lt;/a&gt;() if you want to access the most recently inserted item with a certain key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc757c798894333f5c691463b1ac5b3e899e16e" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, which stores its items in an arbitrary order, &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; stores its items ordered by key. Items that share the same key (because they were inserted using &lt;a href=&quot;qmap#insertMulti&quot;&gt;QMap::insertMulti&lt;/a&gt;()) will appear consecutively, from the most recently to the least recently inserted value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aece43b73a252ef6e776cf50a5c48f3b74316e86" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, which stores its items in an arbitrary order, &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; stores its items ordered by key. Items that share the same key (because they were inserted using &lt;a href=&quot;qmap#insertMulti&quot;&gt;QMap::insertMulti&lt;/a&gt;(), or due to a &lt;a href=&quot;qmap#unite&quot;&gt;unite&lt;/a&gt;()) will appear consecutively, from the most recently to the least recently inserted value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba72056a5a5608aea9a67795f6d1617b816622fd" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qhash#remove&quot;&gt;remove&lt;/a&gt;() and &lt;a href=&quot;qhash#take&quot;&gt;take&lt;/a&gt;(), this function never causes &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; to rehash its internal data structure. This means that it can safely be called while iterating, and won't affect the order of items in the hash. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09682fa5ff3accc44e8bf9b2f6ad0626fb23460c" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qlineedit#textChanged&quot;&gt;textChanged&lt;/a&gt;(), this signal is not emitted when the text is changed programmatically, for example, by calling &lt;a href=&quot;qlineedit#text-prop&quot;&gt;setText&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a23662d37152c25cd61e8edc7215f16ada87f5" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qlineedit#textEdited&quot;&gt;textEdited&lt;/a&gt;(), this signal is also emitted when the text is changed programmatically, for example, by calling &lt;a href=&quot;qlineedit#text-prop&quot;&gt;setText&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cda421e7e2cce77a425a321de2189a416889c4b" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qlocale#toString&quot;&gt;QLocale::toString&lt;/a&gt;(), this function does not honor the user's locale settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb647d5b0a8aebf3ac2b5d477be969ea15b9a25" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt; provides no operator[]. Use &lt;a href=&quot;qmap#value&quot;&gt;value&lt;/a&gt;() or &lt;a href=&quot;qmultimap#replace&quot;&gt;replace&lt;/a&gt;() if you want to access the most recently inserted item with a certain key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8e676f631aee53c487013fbdc93ee8a463b018" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, which orders its items by key, &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; stores its items in an arbitrary order. The only guarantee is that items that share the same key (because they were inserted using &lt;a href=&quot;qhash#insertMulti&quot;&gt;QHash::insertMulti&lt;/a&gt;()) will appear consecutively, from the most recently to the least recently inserted value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c2981512c71df04bfa31170bbbb3a6e10f52c2" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qmetaproperty&quot;&gt;QMetaProperty&lt;/a&gt; which represents a property on a class type, &lt;a href=&quot;qqmlproperty&quot;&gt;QQmlProperty&lt;/a&gt; encapsulates a property on a specific object instance. To read a property's value, programmers create a &lt;a href=&quot;qqmlproperty&quot;&gt;QQmlProperty&lt;/a&gt; instance and call the &lt;a href=&quot;qqmlproperty#read&quot;&gt;read&lt;/a&gt;() method. Likewise to write a property value the &lt;a href=&quot;qqmlproperty#write&quot;&gt;write&lt;/a&gt;() method is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199703db53523f0aac4cea490c71cebe925b48dc" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qmetatype#destroy&quot;&gt;destroy&lt;/a&gt;(), this function only invokes the type's destructor, it doesn't invoke the delete operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa33046bc1fdc3550d7d2d438d01e84b21109bc" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qml-qtwebengine-webenginescript#sourceCode-prop&quot;&gt;sourceCode&lt;/a&gt;, this property allows referring to user scripts that are not already loaded in memory, for instance, when stored on disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbdc1ec1a811612ae8a59755192c890c7013b83f" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;, &lt;a href=&quot;qqmlapplicationengine&quot;&gt;QQmlApplicationEngine&lt;/a&gt; does not automatically create a root window. If you are using visual items from Qt Quick, you will need to place them inside of a &lt;a href=&quot;qml-qtquick-window-window&quot;&gt;Window&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9f33c1ed81f8ce928d851572c775becbd92a11" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qquickwebenginescript#sourceCode-prop&quot;&gt;sourceCode&lt;/a&gt;, this property allows referring to user scripts that are not already loaded in memory, for instance, when stored on disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e83fcfef829b8ae1c3d4a9011490b31b5a04b7" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qset#remove&quot;&gt;remove&lt;/a&gt;(), this function never causes &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; to rehash its internal data structure. This means that it can safely be called while iterating, and won't affect the order of items in the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5b21e746e1c30d96fe59fb40b6eb5d0b8e86f6" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qsslconfiguration#setLocalCertificate&quot;&gt;QSslConfiguration::setLocalCertificate&lt;/a&gt;() this method allows you to specify any intermediate certificates required in order to validate your certificate. The first item in the list must be the leaf certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a486ab8d1a0918cb41c0fac1d14dd5dd03cde66f" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qstring#constData&quot;&gt;constData&lt;/a&gt;() and &lt;a href=&quot;qstring#unicode&quot;&gt;unicode&lt;/a&gt;(), the returned data is always '\0'-terminated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b689a892b4e1505689947abd02c8ac7c3778b6" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qstring#resize&quot;&gt;resize&lt;/a&gt;(int), this overload initializes the new characters to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="450627429b932e118b6d21b4779a00a6d289a3de" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qstring#simplified&quot;&gt;QString::simplified&lt;/a&gt;(), trimmed() leaves internal whitespace alone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2064cb62bbd286738fa17946f71539371a94fc06" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qstring#simplified&quot;&gt;simplified&lt;/a&gt;(), trimmed() leaves internal whitespace alone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b0cb0cb3b311039f064b0ebdb02663220636e2" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qstring#toDouble&quot;&gt;QString::toDouble&lt;/a&gt;(), this function does not fall back to the &quot;C&quot; locale if the string cannot be interpreted in this locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0abf997fd340de527660ac2efb2a254059b40b" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qtwidgets-index&quot;&gt;Qt Widgets&lt;/a&gt;, Qt Quick Controls 1 do not use the native action bar on Android. &lt;a href=&quot;qml-qtquick-controls-toolbar&quot;&gt;ToolBar&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls-menubar&quot;&gt;MenuBar&lt;/a&gt; are offered as a cross-platform replacement. They are unified to a single &quot;action bar&quot; when assigned to the appropriate &lt;a href=&quot;qml-qtquick-controls-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77452b6be67b41ff36ff7b039d3fa3f10a48e69a" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; does not have the convenience functions &lt;a href=&quot;qwidget#enterEvent&quot;&gt;enterEvent()&lt;/a&gt; and &lt;a href=&quot;qwidget#leaveEvent&quot;&gt;leaveEvent()&lt;/a&gt;. Use this function to obtain those events instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9e894a33b28329148163b1a0d4a9aaa8f7f06e" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;, &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; allows opening a painter on itself and perform &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;-based drawing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb30b6291ae52c3526208a0df9ba6544e615d4b5" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;stop()&lt;/code&gt;, &lt;code&gt;complete()&lt;/code&gt; immediately fast-forwards the animation to its end. In the following example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc56a5283daf59b2af28a528080e96a2cec68e3" translate="yes" xml:space="preserve">
          <source>Unlike GLSL's attributes, no names are used for vertex input elements. Therefore qt_Vertex and qt_MultiTexCoord0 are not relevant. Instead, the standard Direct3D semantics, &lt;code&gt;POSITION&lt;/code&gt; and &lt;code&gt;TEXCOORD&lt;/code&gt; (or &lt;code&gt;TEXCOORD0&lt;/code&gt;) are used for identifying the correct input layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0935b406bf2cd387c54bb51a1ec4160b0f958e6f" translate="yes" xml:space="preserve">
          <source>Unlike GLSL's samplers, texture and sampler objects are separate in HLSL. Shaders are expected to expect 2D, non-array, non-multisample textures. Both the texture and sampler binding points are expected to be sequential and start from 0 (meaning registers &lt;code&gt;t0, t1, ...&lt;/code&gt;, and &lt;code&gt;s0, s1, ...&lt;/code&gt;, respectively). Unlike with OpenGL, samplers are not mapped to Qt Quick item properties and therefore the name of the sampler is not relevant. Instead, it is the textures that map to properties referencing &lt;a href=&quot;qml-qtquick-image&quot;&gt;Image&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-shadereffectsource&quot;&gt;ShaderEffectSource&lt;/a&gt; items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c05961fcbe5ca3ff41fddf96718f681084890d" translate="yes" xml:space="preserve">
          <source>Unlike JSON and &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt;, CBOR map keys can be of any type, not just strings. For that reason, &lt;a href=&quot;qcbormap&quot;&gt;QCborMap&lt;/a&gt; is effectively a map between &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; keys to &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; value elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f76a9beacf9429289b913b807b363b6a488b023" translate="yes" xml:space="preserve">
          <source>Unlike OpenGL, backends for modern APIs will typically prefer offline compilation and shipping pre-compiled bytecode with applications instead of inlined shader source strings. In this case the string properties for vertex and fragment shaders are treated as URLs referring to local files or files shipped via the Qt resource system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c1ac6017e0457445707d574e85f55592530f804" translate="yes" xml:space="preserve">
          <source>Unlike OpenGL, the Direct3D backend is able to perform runtime shader compilation on dedicated threads. This is managed transparently to the applications, and means that &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; items that contain HLSL source strings do not block the rendering or other parts of the application until the bytecode is ready.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc35e4b8846890f347fbcd77092f273256ab31ec" translate="yes" xml:space="preserve">
          <source>Unlike OpenGL, whenever you open a file, there is a &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; with the extra &lt;code&gt;hlsl&lt;/code&gt; selector used. This provides easy creation of &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; items that are functional across both backends, for example by placing the GLSL source code into &lt;code&gt;shaders/effect.frag&lt;/code&gt;, the HLSL source code or - preferably - pre-compiled bytecode into &lt;code&gt;shaders/+hlsl/effect.frag&lt;/code&gt;, while simply writing &lt;code&gt;fragmentShader: &quot;qrc:shaders/effect.frag&quot;&lt;/code&gt; in QML. For more details, see &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3dfa1d32ba897e0c2243c0f971298ec969b464" translate="yes" xml:space="preserve">
          <source>Unlike QBENCHMARK, the contents of the contained code block is only run once. The elapsed time will be reported as &quot;0&quot; if it's to short to be measured by the selected backend. (Use)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494f6427f673f96ca20ad1f28b177982a162a5b3" translate="yes" xml:space="preserve">
          <source>Unlike QDirModel, &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt; uses a separate thread to populate itself so it will not cause the main thread to hang as the file system is being queried. Calls to &lt;a href=&quot;qfilesystemmodel#rowCount&quot;&gt;rowCount&lt;/a&gt;() will return 0 until the model populates a directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b715768c3bf59fa0e992c8b314aec0fe98c2630" translate="yes" xml:space="preserve">
          <source>Unlike QGLWidget, triggering a buffer swap just for the &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; is not possible since there is no real, onscreen native surface for it. Instead, it is up to the widget stack to manage composition and buffer swaps on the gui thread. When a thread is done updating the framebuffer, call &lt;a href=&quot;qwidget#update&quot;&gt;update&lt;/a&gt;() &lt;b&gt;on the GUI/main thread&lt;/b&gt; to schedule composition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2270c9e1f8945fd6ebf59b1f6365051e3e738746" translate="yes" xml:space="preserve">
          <source>Unlike Qt's container iterators, &lt;a href=&quot;qdiriterator&quot;&gt;QDirIterator&lt;/a&gt; is uni-directional (i.e., you cannot iterate directories in reverse order) and does not allow random access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78969595d39dc31ee5912f45c72b43631c691bf" translate="yes" xml:space="preserve">
          <source>Unlike STL-style iterators (covered &lt;a href=&quot;#stl-style-iterators&quot;&gt;below&lt;/a&gt;), Java-style iterators point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb834feb9c501fbd50f0f60113f95d7ea19f06d" translate="yes" xml:space="preserve">
          <source>Unlike STL-style iterators, Java-style iterators point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ceedb4aab5ebd410b89bac9a1500049c12703f1" translate="yes" xml:space="preserve">
          <source>Unlike an ordinary property, an alias has the following restrictions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8f1229a635c065a8eec1133ae30351264d3f49" translate="yes" xml:space="preserve">
          <source>Unlike hue and saturation properties, lightness does not set the used value, but it shifts the existing source pixel lightness value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d440bbc6abe67e5cfd709fd1fbfceb05f9b8490" translate="yes" xml:space="preserve">
          <source>Unlike its &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; counterpart, only numbers can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35afd731265b4628de38057422b6c5d7d63d4b9" translate="yes" xml:space="preserve">
          <source>Unlike move assignment, neither of the two objects ever releases its semaphore, if any, as a consequence of swapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cccd9b2a1226d14733564afa2958f0e5c55b36aa" translate="yes" xml:space="preserve">
          <source>Unlike multiple inheritance, adaptors can be added at any time to any object (but not removed), which allows for greater flexibility when exporting existing classes. Another advantage of adaptors is to provide similar but not identical functionality in methods of the same name in different interfaces, a case which can be quite common when adding a new version of a standard interface to an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9e6bd8aa4ba190fba9b13cf33855c44422175b" translate="yes" xml:space="preserve">
          <source>Unlike other &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; implementations, such as &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;, &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; does not emit the &lt;a href=&quot;qiodevice#aboutToClose&quot;&gt;aboutToClose&lt;/a&gt;(), &lt;a href=&quot;qiodevice#bytesWritten&quot;&gt;bytesWritten&lt;/a&gt;(), or &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead&lt;/a&gt;() signals. This implementation detail means that &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; is not suitable for reading and writing certain types of files, such as device files on Unix platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297ef39c88514af9cf49e4008074198f716d81db" translate="yes" xml:space="preserve">
          <source>Unlike other Qt classes, &lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt; uses qsizetype as its &lt;code&gt;size_type&lt;/code&gt;, to allow accepting data from &lt;code&gt;std::basic_string&lt;/code&gt; without truncation. The Qt API functions, for example &lt;a href=&quot;qstringview#length&quot;&gt;length&lt;/a&gt;(), return &lt;code&gt;int&lt;/code&gt;, while the STL-compatible functions, for example &lt;a href=&quot;qstringview#size&quot;&gt;size&lt;/a&gt;(), return &lt;code&gt;size_type&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6abe2b9307142efbe445d803a3c3c3ada6b9912e" translate="yes" xml:space="preserve">
          <source>Unlike other version functions in &lt;a href=&quot;qsysinfo&quot;&gt;QSysInfo&lt;/a&gt;, &lt;a href=&quot;qoperatingsystemversion&quot;&gt;QOperatingSystemVersion&lt;/a&gt; provides access to the full version number that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38366a7e6c5f9b610cbeb6e59174fd06acd3173" translate="yes" xml:space="preserve">
          <source>Unlike plain C++ arrays, QVectors can be resized at any time by calling &lt;a href=&quot;qvector#resize&quot;&gt;resize&lt;/a&gt;(). If the new size is larger than the old size, &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; might need to reallocate the whole vector. &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; tries to reduce the number of reallocations by preallocating up to twice as much memory as the actual data needs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9809a86d8912a13d165466024c3ec4fed0b7ad35" translate="yes" xml:space="preserve">
          <source>Unlike queued slots or invoked methods, methods called directly on the &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; object will execute in the thread that calls the method. When subclassing &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt;, keep in mind that the constructor executes in the old thread while &lt;a href=&quot;qthread#run&quot;&gt;run&lt;/a&gt;() executes in the new thread. If a member variable is accessed from both functions, then the variable is accessed from two different threads. Check that it is safe to do so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3fc4f924f0b00b54c003e950e83192ccb43192" translate="yes" xml:space="preserve">
          <source>Unlike signals, method parameter types do not have to be declared as they default to the &lt;code&gt;var&lt;/code&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25515046266a73432585cab1effb47821bef7bc3" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qbluetoothdevicediscoveryagent#finished&quot;&gt;QBluetoothDeviceDiscoveryAgent::finished&lt;/a&gt;() signal this signal will even be emitted when an error occurred during the service discovery. Therefore it is recommended to check the &lt;a href=&quot;qbluetoothservicediscoveryagent#error&quot;&gt;error&lt;/a&gt;() signal to evaluate the success of the service discovery discovery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ca4d2d93e61e9657b2457b446d024b488312a8" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; overload of &lt;a href=&quot;qcborstreamwriter#append&quot;&gt;append&lt;/a&gt;(), this function is not limited by &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;'s size limits. However, note that neither &lt;a href=&quot;qcborstreamreader#readByteArray&quot;&gt;QCborStreamReader::readByteArray&lt;/a&gt;() nor &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; support reading CBOR streams with byte arrays larger than 2 GB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcd6b90627382604bf2a8129dda127b3e9289e7" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qcolor#fromRgb&quot;&gt;fromRgb&lt;/a&gt;() function, the alpha-channel specified by the given &lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt; value is included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d1958c3b100af7b2a7facd1b9731cc2d0fac6c" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt; overload of &lt;a href=&quot;qcborstreamwriter#append&quot;&gt;append&lt;/a&gt;(), this function is not limited to 2 GB. However, note that neither &lt;a href=&quot;qcborstreamreader&quot;&gt;QCborStreamReader&lt;/a&gt; nor &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; support reading CBOR streams with text strings larger than 2 GB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda3eeabb9514ff86a04e87de6d1c840cc124b15" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt; overload of &lt;a href=&quot;qcborstreamwriter#append&quot;&gt;append&lt;/a&gt;(), this function is not limited to 2 GB. However, note that neither &lt;a href=&quot;qcborstreamreader#readString&quot;&gt;QCborStreamReader::readString&lt;/a&gt;() nor &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; support reading CBOR streams with text strings larger than 2 GB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69d6fc60e20880a8fbe6eb19f795f0beded7d03" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qlocale#uiLanguages&quot;&gt;uiLanguages&lt;/a&gt;() the returned value of the bcp47Name() represents the locale name of the &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; data but not the language the user-interface should be in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b444e027f8c88f7cc59a066955b306d65dc642" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qt-labs-platform-colordialog#color-prop&quot;&gt;color&lt;/a&gt; property, the &lt;code&gt;currentColor&lt;/code&gt; property is updated while the user is selecting colors in the dialog, even before the final selection has been made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd3024210b1f9a993ee5a2e8d3efbaae1c307e9" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qt-labs-platform-colordialog#currentColor-prop&quot;&gt;currentColor&lt;/a&gt; property, the &lt;code&gt;color&lt;/code&gt; property is not updated while the user is selecting colors in the dialog, but only after the final selection has been made. That is, when the user has clicked &lt;b&gt;OK&lt;/b&gt; to accept a color. Alternatively, the &lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;accepted()&lt;/a&gt; signal can be handled to get the final selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc35301a924c19ed2b2a9c685c61352cacfd5445" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFile-prop&quot;&gt;currentFile&lt;/a&gt; property, the &lt;code&gt;file&lt;/code&gt; property is not updated while the user is selecting files in the dialog, but only after the final selection has been made. That is, when the user has clicked &lt;b&gt;OK&lt;/b&gt; to accept a file. Alternatively, the &lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;accepted()&lt;/a&gt; signal can be handled to get the final selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a3a42fc7ad82c1daf105fed9bbea9f0e7dd9ce" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFiles-prop&quot;&gt;currentFiles&lt;/a&gt; property, the &lt;code&gt;files&lt;/code&gt; property is not updated while the user is selecting files in the dialog, but only after the final selection has been made. That is, when the user has clicked &lt;b&gt;OK&lt;/b&gt; to accept files. Alternatively, the &lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;accepted()&lt;/a&gt; signal can be handled to get the final selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deed6322f8a21f6e3c6a3df8bc3275a852f7d42b" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qt-labs-platform-filedialog#file-prop&quot;&gt;file&lt;/a&gt; property, the &lt;code&gt;currentFile&lt;/code&gt; property is updated while the user is selecting files in the dialog, even before the final selection has been made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9f7d6a5adaaba9c6fdd0ed0038e8f9a493a96a" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qt-labs-platform-filedialog#files-prop&quot;&gt;files&lt;/a&gt; property, the &lt;code&gt;currentFiles&lt;/code&gt; property is updated while the user is selecting files in the dialog, even before the final selection has been made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d249183341a2c8d3aede959236848ec5371d54" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qt-labs-platform-folderdialog#currentFolder-prop&quot;&gt;currentFolder&lt;/a&gt; property, the &lt;code&gt;folder&lt;/code&gt; property is not updated while the user is selecting folders in the dialog, but only after the final selection has been made. That is, when the user has clicked &lt;b&gt;OK&lt;/b&gt; to accept a folder. Alternatively, the &lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;accepted()&lt;/a&gt; signal can be handled to get the final selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3344c27346b17b3b58e163aefe68aea5550b05f" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qt-labs-platform-folderdialog#folder-prop&quot;&gt;folder&lt;/a&gt; property, the &lt;code&gt;currentFolder&lt;/code&gt; property is updated while the user is selecting folders in the dialog, even before the final selection has been made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05423263e62c25e58b5c8486967c863d37b17cc2" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qt-labs-platform-fontdialog#currentFont-prop&quot;&gt;currentFont&lt;/a&gt; property, the &lt;code&gt;font&lt;/code&gt; property is not updated while the user is selecting fonts in the dialog, but only after the final selection has been made. That is, when the user has clicked &lt;b&gt;OK&lt;/b&gt; to accept a font. Alternatively, the &lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;accepted()&lt;/a&gt; signal can be handled to get the final selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b17c96473f1ca98de9691c62d66b940bc01e35" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qt-labs-platform-fontdialog#font-prop&quot;&gt;font&lt;/a&gt; property, the &lt;code&gt;currentFont&lt;/code&gt; property is updated while the user is selecting fonts in the dialog, even before the final selection has been made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527968425300c09b06d377351bd3718e6efa8549" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;width&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#height-prop&quot;&gt;height&lt;/a&gt; properties, which scale the painting of the image, this property sets the actual number of pixels stored for the loaded image so that large images do not use more memory than necessary. For example, this ensures the image in memory is no larger than 1024x1024 pixels, regardless of the Image's &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;width&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#height-prop&quot;&gt;height&lt;/a&gt; values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5006ab30bd6a362dc8d1fa834d59a2c58d40698b" translate="yes" xml:space="preserve">
          <source>Unlike the C++ item views such as &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt; or &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;, the &lt;code&gt;setData()&lt;/code&gt; method must be explicitly invoked from QML delegates whenever appropriate. This is done by simply assigning a new value to the corresponding model property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643229be8682a0e3b2a521c11ffa048218ce3fc6" translate="yes" xml:space="preserve">
          <source>Unlike the Model-View-Controller pattern, the model/view design does not include a completely separate component for managing interaction with the user. Generally, the view is responsible for the presentation of model data to the user, and for processing user input. To allow some flexibility in the way this input is obtained, the interaction is performed by delegates. These components provide input capabilities and are also responsible for rendering individual items in some views. The standard interface for controlling delegates is defined in the &lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c039754822dd3114359305ee7224dd7fbc58ea84" translate="yes" xml:space="preserve">
          <source>Unlike the default OpenGL Renderer, there is no built-in support to acquire an &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; context. This means that the renderer is responsible for requesting and managing the the current context. To do this, you use EGL directly in the &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; renderer. Consequently, the &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; renderer can only be used with platform plugins that support creating QWindows with support for &lt;a href=&quot;qsurfaceformat#RenderableType-enum&quot;&gt;QSurfaceFormat::OpenVG&lt;/a&gt;. From this window, the renderer can get an EGLSurface which can then be used with an EGLContext to render &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840d6573b6cc707850b0980389fb76b1ae563277" translate="yes" xml:space="preserve">
          <source>Unlike the default delegate, &lt;a href=&quot;qsqlrelationaldelegate&quot;&gt;QSqlRelationalDelegate&lt;/a&gt; provides a combobox for fields that are foreign keys into other tables. To use the class, simply call &lt;a href=&quot;qabstractitemview#setItemDelegate&quot;&gt;QAbstractItemView::setItemDelegate&lt;/a&gt;() on the view with an instance of &lt;a href=&quot;qsqlrelationaldelegate&quot;&gt;QSqlRelationalDelegate&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c044a53a0af26249cede66fb2f542d75a89cac" translate="yes" xml:space="preserve">
          <source>Unlike the other overload, this function can be used to perform perspective transformations on images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af99dd2fe25058e35366a4d45bcb4f7134c4ec1" translate="yes" xml:space="preserve">
          <source>Unlike the other overload, this function creates transformation matrices that can be used to perform perspective transformations on images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b5aeff8abf9f826690f0ef1e92b5102080f5325" translate="yes" xml:space="preserve">
          <source>Unlike the other similar signals, this one is emitted on the gui thread instead of the render thread. It can be used to synchronize external animation systems with the QML content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570d6bb6272b7eb218d8a793f5b7dbeed8996616" translate="yes" xml:space="preserve">
          <source>Unlike the similar &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; constructor that takes a non-const data buffer, this version will never alter the contents of the buffer. For example, calling &lt;a href=&quot;qimage#bits&quot;&gt;QImage::bits&lt;/a&gt;() will return a deep copy of the image, rather than the buffer passed to the constructor. This allows for the efficiency of constructing a &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; from raw data, without the possibility of the raw data being changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba1f43513e91d2d0dbbdf209bf13c8093c94912" translate="yes" xml:space="preserve">
          <source>Unlike the slider, &lt;a href=&quot;qdial&quot;&gt;QDial&lt;/a&gt; attempts to draw a &quot;nice&quot; number of notches rather than one per line step. If possible, the number of notches drawn is one per line step, but if there aren't enough pixels to draw every one, &lt;a href=&quot;qdial&quot;&gt;QDial&lt;/a&gt; will skip notches to try and draw a uniform set (e.g. by drawing every second or third notch).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc5640307214c31456e7eedf0e2205ade976a62" translate="yes" xml:space="preserve">
          <source>Unlike the window managers for top-level windows, all window flags (&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::WindowFlags&lt;/a&gt;) are supported by &lt;a href=&quot;qmdiarea&quot;&gt;QMdiArea&lt;/a&gt; as long as the flags are supported by the current widget style. If a specific flag is not supported by the style (e.g., the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;WindowShadeButtonHint&lt;/a&gt;), you can still shade the window with showShaded().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96efb5d5b925c09c87e082ce802ca40cbbf8f9e4" translate="yes" xml:space="preserve">
          <source>Unlike views like &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;, however, there is always a current item (when the model isn't empty). This means that when &lt;a href=&quot;qml-qtquick-controls2-tumbler#count-prop&quot;&gt;count&lt;/a&gt; is equal to &lt;code&gt;0&lt;/code&gt;, &lt;a href=&quot;qml-qtquick-controls2-tumbler#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt; will be &lt;code&gt;-1&lt;/code&gt;. In all other cases, it will be greater than or equal to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcced5b27282a2462513863183b0582449a58463" translate="yes" xml:space="preserve">
          <source>Unlike widgets, QWindows receive touch events always, there is no need to opt in. When working directly with a &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;, it is enough to reimplement &lt;a href=&quot;qwindow#touchEvent&quot;&gt;QWindow::touchEvent&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d672469a9d88e358d4e2e20255b6ca5f54a8cf" translate="yes" xml:space="preserve">
          <source>Unlike with the destructor, it is expected that &lt;a href=&quot;qsgrendernode#render&quot;&gt;render&lt;/a&gt;() can reinitialize all resources it needs when called after a call to releaseResources().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba962d0e63f3a134b2cfb98e50ae96ad9f987972" translate="yes" xml:space="preserve">
          <source>Unloaded items are forced to load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c4d22c866edcf41aac3d498ad31046d2f88d1e" translate="yes" xml:space="preserve">
          <source>Unloaded items are skipped (the callback function is not called for them).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1df3bc87d16d0ffb8a9f28c369808ceeda2f51f" translate="yes" xml:space="preserve">
          <source>UnloadedState</source>
          <target state="translated">UnloadedState</target>
        </trans-unit>
        <trans-unit id="7b8e8a6a43298e2055f5af5c0957994977865816" translate="yes" xml:space="preserve">
          <source>UnloadedStatus</source>
          <target state="translated">UnloadedStatus</target>
        </trans-unit>
        <trans-unit id="e688cda8fecf27364fee4ddd8ef759a05a1d2c24" translate="yes" xml:space="preserve">
          <source>UnloadingStatus</source>
          <target state="translated">UnloadingStatus</target>
        </trans-unit>
        <trans-unit id="2c077e7ac2a6d33e9f2965084f6b988c6fce52da" translate="yes" xml:space="preserve">
          <source>Unloads the &lt;code&gt;image&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="894b9748cf0a5ae5e47b9ddb2df9343ab32164c7" translate="yes" xml:space="preserve">
          <source>Unloads the library and returns &lt;code&gt;true&lt;/code&gt; if the library could be unloaded; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3adfed6c7f2f9aeb841bd7477d6e7564f7502a" translate="yes" xml:space="preserve">
          <source>Unloads the plugin and returns &lt;code&gt;true&lt;/code&gt; if the plugin could be unloaded; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a20f2547d07e795cf89a7c8ec3a24aa9f0dd11" translate="yes" xml:space="preserve">
          <source>Unloads the resources specified by the &lt;code&gt;.qrc&lt;/code&gt; file with the base name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe4bd6afda2f98096dde4c06f5468a68e1d16b8" translate="yes" xml:space="preserve">
          <source>Unlock all the requested camera locks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a32c6628de8ad478d6162b608a5ff67d42a28c" translate="yes" xml:space="preserve">
          <source>Unlock camera</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a37caff551f6ac94b0760b18aaf4d01897d9277" translate="yes" xml:space="preserve">
          <source>Unlock focus, exposure and white balance locks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75c53c1c77c226c09b32d92059818fdc52ccb32" translate="yes" xml:space="preserve">
          <source>Unlockable products are products that a user will buy once, and the purchase of these items will be persistent. It can typically be used for things like unlocking content or functionality in the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3da702582963ef24ed50bd2008f4d028a127a2b" translate="yes" xml:space="preserve">
          <source>Unlocked</source>
          <target state="translated">Unlocked</target>
        </trans-unit>
        <trans-unit id="a05c9ca3c5c3c56a04c3ac34ff43323d2705b7eb" translate="yes" xml:space="preserve">
          <source>Unlocks the camera settings specified with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c477c5a0088240e0b739f97c3391de959665a3e5" translate="yes" xml:space="preserve">
          <source>Unlocks the lock associated with this locker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07ed116ac50190dd65d6c562ef2964933d5ee3e" translate="yes" xml:space="preserve">
          <source>Unlocks the lock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f5863d91739b18044814777dec3259d97635a7" translate="yes" xml:space="preserve">
          <source>Unlocks the mutex. Attempting to unlock a mutex in a different thread to the one that locked it results in an error. Unlocking a mutex that is not locked results in undefined behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc8792f4add5b5150dc07fb2cf17a0f9840142c" translate="yes" xml:space="preserve">
          <source>Unlocks this mutex locker. You can use &lt;code&gt;relock()&lt;/code&gt; to lock it again. It does not need to be locked when destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="847aa7a653c418d30dab6e9c116bf815e76e1f88" translate="yes" xml:space="preserve">
          <source>Unmaps the buffer after it was mapped into the application's memory space with a previous call to &lt;a href=&quot;qopenglbuffer#map&quot;&gt;map&lt;/a&gt;(). Returns &lt;code&gt;true&lt;/code&gt; if the unmap succeeded; false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e462650988a80963e39388724785d23c918b819c" translate="yes" xml:space="preserve">
          <source>Unmaps the memory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbff9a36f98f283c6c4b3c4c59a263b75369225f" translate="yes" xml:space="preserve">
          <source>Unordered list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4e8daaf712043cdbd0ee40ed5df085f3bde8b2" translate="yes" xml:space="preserve">
          <source>Unregister &lt;code&gt;object&lt;/code&gt; from the exclusive group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67db567367a785cc6a9ac55654408ad2e48c2f8a" translate="yes" xml:space="preserve">
          <source>Unregister the COM server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd26ccf9401e8382ef5eeb2ad223b37be05e3ab" translate="yes" xml:space="preserve">
          <source>Unregister the backend for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046193cf3a8f164eda5a96a8693a5763b9db0580" translate="yes" xml:space="preserve">
          <source>Unregister the extension specified by the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd1e8cda86cda8a9f15760c98643c3c864fe1e3" translate="yes" xml:space="preserve">
          <source>Unregister the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db2fb50d932055ec1a171e46726487ba1ec1f6bc" translate="yes" xml:space="preserve">
          <source>Unregisters</source>
          <target state="translated">Unregisters</target>
        </trans-unit>
        <trans-unit id="96b0d4273c66718b573767e682af10def5f7ee0e" translate="yes" xml:space="preserve">
          <source>Unregisters all gesture recognizers of the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50054668b28bb699d982ac1967ffecad74c661e2" translate="yes" xml:space="preserve">
          <source>Unregisters all the timers associated with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8297d9b64a6517dfdb836f8778d0abb81f8f995e" translate="yes" xml:space="preserve">
          <source>Unregisters an object that was registered with the &lt;a href=&quot;qdbusconnection#registerObject&quot;&gt;registerObject&lt;/a&gt;() at the object path given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0091f9df1a0610deaa75628a129f02c8e2b8eef1" translate="yes" xml:space="preserve">
          <source>Unregisters and deletes the aspect with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a93df0ea2366ec048bad1c2ce3e8865cbc4c92" translate="yes" xml:space="preserve">
          <source>Unregisters and deletes the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce25eee4f0c3def4856f9edee68adb9a69fe59db" translate="yes" xml:space="preserve">
          <source>Unregisters any additional values for the class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53bd319de1b349507bd57373994973413a972ac" translate="yes" xml:space="preserve">
          <source>Unregisters the Qt compressed help file (.qch) identified by its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312efda072d3f64a1fc850882054f8d22b289915" translate="yes" xml:space="preserve">
          <source>Unregisters the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ddacaa3e2087bdf3d25b27f8afceba43519008" translate="yes" xml:space="preserve">
          <source>Unregisters the resource with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b042a1bcd602281bf80e534beecf643bfe51389a" translate="yes" xml:space="preserve">
          <source>Unregisters the server from the system registry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7bef391888afd06bfc9604e19bcc35246e0a07b" translate="yes" xml:space="preserve">
          <source>Unregisters the service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a40975d2e708d28a163ae1db4923d4c2296ad1c" translate="yes" xml:space="preserve">
          <source>Unregisters the target detect handler identified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a87a6554ff4af8c596f24d3c26fd0084334744" translate="yes" xml:space="preserve">
          <source>Unregisters the timer with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a6e2bb3c64abe989242cd8b94285ef9447291c2" translate="yes" xml:space="preserve">
          <source>Unregisters this service with the platform's Service Discovery Protocol (SDP) implementation. After this, the service will no longer be findable by other devices through service discovery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de50e332531f7cedccc2fc9166482ddef2a943d9" translate="yes" xml:space="preserve">
          <source>Unreserved is defined as: &lt;code&gt;ALPHA / DIGIT / &quot;-&quot; / &quot;.&quot; / &quot;_&quot; / &quot;~&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5faa9e86f40260524b5480551444bf2827f246fa" translate="yes" xml:space="preserve">
          <source>Unresolved items are entries whose data has been &lt;a href=&quot;qml-qtqml-models-delegatemodelgroup#insert-method&quot;&gt;inserted&lt;/a&gt; into a &lt;a href=&quot;qml-qtqml-models-delegatemodelgroup&quot;&gt;DelegateModelGroup&lt;/a&gt; instead of being derived from a &lt;a href=&quot;qml-qtqml-models-delegatemodel#model-attached-prop&quot;&gt;DelegateModel::model&lt;/a&gt; index. Resolving an item will replace the item at the target index with the unresolved item. A resolved an item will reflect the data of the source model at its bound index and will move when that index moves like any other item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255e8fa7cae8a4ba7517aad181704c1683c380ef" translate="yes" xml:space="preserve">
          <source>Unselects</source>
          <target state="translated">Unselects</target>
        </trans-unit>
        <trans-unit id="cbf4de582ff3c5a57deb015f78cd95a972cc67b6" translate="yes" xml:space="preserve">
          <source>Unset the mask and return to normal &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; operation by passing an empty string (&quot;&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b3500b1e4c74420fb2ef0c95a5c55f3325b0e2f" translate="yes" xml:space="preserve">
          <source>Unshade button on title bars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daac457666225605fae0702b4b0bbf7baecb97d0" translate="yes" xml:space="preserve">
          <source>Unshade button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdffc8a429f5bfc4b0617437a2dfb3097b9ffe56" translate="yes" xml:space="preserve">
          <source>Unsigned numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57ec99de27ba862e74c10e830ff9d865e064937" translate="yes" xml:space="preserve">
          <source>Unsorted - no sorting is applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d62288b1fa306fe1c81d4869231838d5cc07c6" translate="yes" xml:space="preserve">
          <source>Unsubscribes the graphics object from the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245e481a2adad29d14c3924433a3fb8fd1e0cfd6" translate="yes" xml:space="preserve">
          <source>Unsubscribes the widget from a given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f36a10569e4d1790f6596cbdf630c5816c2f188" translate="yes" xml:space="preserve">
          <source>Unsupported Clients</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768cc1881d79ca027bdc2db8e59ca4e76d29cfab" translate="yes" xml:space="preserve">
          <source>Unsupported Features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4553ab850504920ce93b214a27590a1b55000f5" translate="yes" xml:space="preserve">
          <source>Unsupported Perl-compatible Regular Expressions Features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62fc90a3527b67c1c72226554c1cd273e0c519b9" translate="yes" xml:space="preserve">
          <source>Unsupported data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e833d999c195e751b7ef6186885e5d0893803da" translate="yes" xml:space="preserve">
          <source>Unsupported extensions are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dad5edfec756df0707903f5c18de5dfa36ac25e" translate="yes" xml:space="preserve">
          <source>Unsupported or partially supported XSLT features are documented in the following table. The implementation of XSLT in Qt 4.5 can be seen as XSLT 1.0 but with the data model of XPath 2.0 and XSLT 2.0, and using the using the functionality of XPath 2.0 and its accompanying function library. When Qt XML Patterns encounters an unsupported or partially support feature, it will either report a syntax error or silently continue, unless otherwise noted in the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b615dba2a995705909746ba3e95bcd8a075a4ba" translate="yes" xml:space="preserve">
          <source>Unused, set to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f5c2a5b8746ca79962e3f0a8bbb1fac9d8f8dc" translate="yes" xml:space="preserve">
          <source>Unwinding Items via Pop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2038bdec9210202d0d9d74839e3925ff0cd91ba1" translate="yes" xml:space="preserve">
          <source>Up</source>
          <target state="translated">Up</target>
        </trans-unit>
        <trans-unit id="6368bf478b6e5c96be346941a009bf02f21db8e7" translate="yes" xml:space="preserve">
          <source>Up symbol for a spin widget, for example a &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2ecd9c184a0c35659023813618305e9f04e69a" translate="yes" xml:space="preserve">
          <source>Up to four key codes may be entered by separating them with commas, e.g. &quot;Alt+X,Ctrl+S,Q&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48821f7e94fdf808a6bf01fa0d6503dc5d93757" translate="yes" xml:space="preserve">
          <source>Up, Meta+P</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e3e4538aa3166e8775b9268aebf94a0697ad67" translate="yes" xml:space="preserve">
          <source>Up/Down move a vertical scroll bar by one single step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e68b92e4fd3d87aefbc32fafcfb247f180dbb1c5" translate="yes" xml:space="preserve">
          <source>Up/Down move a vertical slider by one single step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a545f5e22291ff4f1bf8c4cebed46346b96b6e2c" translate="yes" xml:space="preserve">
          <source>UpArrow</source>
          <target state="translated">UpArrow</target>
        </trans-unit>
        <trans-unit id="720e24b81fa0ca9682c5cd1326c8b2252e2afb9d" translate="yes" xml:space="preserve">
          <source>Update internal data which represents the structure of the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a30fc67d7ae3e7c01630be2a6390acea364977a" translate="yes" xml:space="preserve">
          <source>Update persistent indexes using &lt;a href=&quot;qabstractitemmodel#changePersistentIndexList&quot;&gt;changePersistentIndexList()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8fd751421b0489ebe0a195dc814cc6266d610db" translate="yes" xml:space="preserve">
          <source>Update the texture state to match the filtering, mipmap and wrap options currently set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a70fb5d096cce3cd78fd7573ab8ba8a8d8201d5" translate="yes" xml:space="preserve">
          <source>Update your internal data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9dee6f70c97232ebabab24ad7b456108208a029" translate="yes" xml:space="preserve">
          <source>Updated once by &lt;a href=&quot;qgraphicsproxywidget#setWidget&quot;&gt;setWidget&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76d18079a076ee34ffc62b5b9bd0909da356dce" translate="yes" xml:space="preserve">
          <source>Updates</source>
          <target state="translated">Updates</target>
        </trans-unit>
        <trans-unit id="e1fd96cec0d4e87fc7231ec709e8698a0c8776d8" translate="yes" xml:space="preserve">
          <source>Updates all visible cells unless updates are disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bde39b1c40637b967c79aa9dd8a6f7db3e26811" translate="yes" xml:space="preserve">
          <source>Updates indices based on geometry properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff73b3116f4da7f0d2dd0508e91908ea7c8e8104" translate="yes" xml:space="preserve">
          <source>Updates indices based on mesh resolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022d563c37ba29e836d7eb9c83b685578b6fb490" translate="yes" xml:space="preserve">
          <source>Updates indices based on mesh resolutions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f8ca8807fab4e5a94adc5082dd2f48e3d9e96f" translate="yes" xml:space="preserve">
          <source>Updates indices based on rings and slices properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8f42b18e563b418c4ba4673185025ea1c423d9" translate="yes" xml:space="preserve">
          <source>Updates the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3112aff3ab4dbf392ffde036e90dd7903b22350" translate="yes" xml:space="preserve">
          <source>Updates the area occupied by the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a4cbb929a8b05d3dcf1257a6dacac0e69817d1" translate="yes" xml:space="preserve">
          <source>Updates the cache meta date for the &lt;a href=&quot;qabstractnetworkcache#metaData&quot;&gt;metaData&lt;/a&gt;'s url to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26424b93300b54b9730e6c062750f807f329b370" translate="yes" xml:space="preserve">
          <source>Updates the cell specified by the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a0583db12c267f96bda1ee1089d520f75c20856" translate="yes" xml:space="preserve">
          <source>Updates the changed header sections with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a67233751f4025789eca5994451a26fbffefec" translate="yes" xml:space="preserve">
          <source>Updates the current buffer and damage region to the latest version committed by the client. Returns true if new content was committed since the previous call to advance(). Otherwise returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3957bea62fced9d06db404c07867d8627755ae" translate="yes" xml:space="preserve">
          <source>Updates the data by replacing it with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a429554cee9aab2a2431b3c12dfa1acd4b1492" translate="yes" xml:space="preserve">
          <source>Updates the geometry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eceee37106cbc676d34ac418e459d57f6a4c58f5" translate="yes" xml:space="preserve">
          <source>Updates the geometry of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f15eb54a6a87b5bb4191205c22774cd2f103281" translate="yes" xml:space="preserve">
          <source>Updates the geometry of the child widgets of the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e9a2d38faeb4f48ef6cd227b42bd60444a2137" translate="yes" xml:space="preserve">
          <source>Updates the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b8d8d24d9e0f62e0a131b1d260f1ed0c3f6e90" translate="yes" xml:space="preserve">
          <source>Updates the indices based on rings, slices, and length properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770a5dca92316e8471cf3e1b38d11e7e285045bc" translate="yes" xml:space="preserve">
          <source>Updates the item's micro focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e6c91b9c44bfae6663e5d5da62e7272ff48a47" translate="yes" xml:space="preserve">
          <source>Updates the item's micro focus. This is slot for convenience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7248cbef254b81e35939d1cc816f7064d3da199" translate="yes" xml:space="preserve">
          <source>Updates the layout for &lt;a href=&quot;qlayout#parentWidget&quot;&gt;parentWidget&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872976b9763b2dcfcbc3a78d70927015a2290114" translate="yes" xml:space="preserve">
          <source>Updates the model based on the ProposedSearchResult at index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a023a47c112213e8c70183f20690b1c29f7a93" translate="yes" xml:space="preserve">
          <source>Updates the model based on the provided query parameters. The model will be populated with a list of places matching the search parameters specified by the type's properties. Search criteria is specified by setting properties such as the &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchTerm-prop&quot;&gt;searchTerm&lt;/a&gt;, &lt;a href=&quot;location-places-backend#categories&quot;&gt;categories&lt;/a&gt;, &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchArea-prop&quot;&gt;searchArea&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-placesearchmodel#limit-prop&quot;&gt;limit&lt;/a&gt;. Support for these properties may vary according to &lt;a href=&quot;location-places-qml#plugin&quot;&gt;plugin&lt;/a&gt;. &lt;code&gt;update()&lt;/code&gt; then submits the set of criteria to the &lt;a href=&quot;location-places-qml#plugin&quot;&gt;plugin&lt;/a&gt; to process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319508b026c230618316041d0ec60ab2b2e942a1" translate="yes" xml:space="preserve">
          <source>Updates the model based on the provided query parameters. The model will be populated with a list of search suggestions for the partial &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#searchTerm-prop&quot;&gt;searchTerm&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#searchArea-prop&quot;&gt;searchArea&lt;/a&gt;. If the &lt;a href=&quot;location-places-qml#plugin&quot;&gt;plugin&lt;/a&gt; supports it, other parameters such as &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#limit-prop&quot;&gt;limit&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#offset-prop&quot;&gt;offset&lt;/a&gt; may be specified. &lt;code&gt;update()&lt;/code&gt; submits the set of parameters to the &lt;a href=&quot;location-places-qml#plugin&quot;&gt;plugin&lt;/a&gt; to process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35788e4bd3d96a5b5be3ec57b599162dd289ac4b" translate="yes" xml:space="preserve">
          <source>Updates the model to display the next page of search results. If there is no next page then this method does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9424375b24796995f9690377bf63802f49f7d85d" translate="yes" xml:space="preserve">
          <source>Updates the model to display the previous page of search results. If there is no previous page then this method does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3ec6820ffe8fd3c45e9a71901dca138dd46e2f" translate="yes" xml:space="preserve">
          <source>Updates the previous value of the managed variable to its current value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae87eb5feedb202ed65a58572f31285c04e9a813" translate="yes" xml:space="preserve">
          <source>Updates the relevant status bar for the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888fa35eb888e4e8408c14645591220edf823527" translate="yes" xml:space="preserve">
          <source>Updates the size policy of the widget at position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bca3864a929446b40b4f510cafbff4bc77f3307" translate="yes" xml:space="preserve">
          <source>Updates the splitter's state. You should not need to call this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995d53d9ad8243c566a314f572993579fc469a47" translate="yes" xml:space="preserve">
          <source>Updates the surface with the compositor's retained clipboard selection. Although this is done automatically when the surface receives keyboard focus, this function is useful for updating clients which do not have keyboard focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5859407da6ad23dc039338b3eb86ff434dd33aeb" translate="yes" xml:space="preserve">
          <source>Updates the time stamp of &lt;code&gt;filename&lt;/code&gt; to match the time stamp of &lt;code&gt;reference_filename&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a259f32edf0edcb442456b55041645933ccfa3" translate="yes" xml:space="preserve">
          <source>Updates the vertices based on rings, slices, and length properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574f4dcc857d217c4a84b85ea158bd6fe227a88c" translate="yes" xml:space="preserve">
          <source>Updates the widget unless updates are disabled or the widget is hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899a33978c5cd269ba1bc85c13b858ed260e7cd7" translate="yes" xml:space="preserve">
          <source>Updates the widget's micro focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c14d1e141ec08aba3defef8612c107bd00fc6226" translate="yes" xml:space="preserve">
          <source>Updates vertices based on geometry properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beee557288dd979b0e9c85c8aff2e3250c9adea3" translate="yes" xml:space="preserve">
          <source>Updates vertices based on mesh resolution, width, and height properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a54922c5df05ba51f73a2bb221cd376b03ca31" translate="yes" xml:space="preserve">
          <source>Updates vertices based on mesh resolutions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c424c5d970b254139d348d6c3ec9242918a56f" translate="yes" xml:space="preserve">
          <source>Updates vertices based on rings, slices, and radius properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe564c559aa4e9d2d2727ed67658edace9f7da65" translate="yes" xml:space="preserve">
          <source>Updates vertices based on rings, slices, and radius properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2014cee2995de811b633c8ac88b2d85b0b2478" translate="yes" xml:space="preserve">
          <source>Updating a record is similar to inserting it into a table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f797da23a6c6d905d27abd519904c8e40d5954c2" translate="yes" xml:space="preserve">
          <source>Updating a selection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac0d1279280b3423e54eca9c186eecc04799a005" translate="yes" xml:space="preserve">
          <source>Updating an existing route based on the current position is supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ce904909fd370515778809bda28613856438b4" translate="yes" xml:space="preserve">
          <source>Updating or Removing Qt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a5dbfe79463d818bbe91bdca56764b25ea494d" translate="yes" xml:space="preserve">
          <source>Updating the Android SDK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe940641f8be7dfa0f95c3b608c81c6943d0ad2" translate="yes" xml:space="preserve">
          <source>Updating the Selection Lists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a1e44c2f9b43578a8cb3e64e0088e3c4d7c6be" translate="yes" xml:space="preserve">
          <source>Updating the editor's geometry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a374278396e90498e8afec42cd96078fcc4585f" translate="yes" xml:space="preserve">
          <source>Updating the local transform of a joint results in the skinning matrices being recalculated and the skinned mesh vertices bound to that joint moving accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fffd0df581e6ab4b5354e1a101b096bed9a0bb4f" translate="yes" xml:space="preserve">
          <source>Upgrades a tcp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b854373d40bf72bd7c397f2bc6136cb7510f19" translate="yes" xml:space="preserve">
          <source>Uploads compressed pixel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb317843e570b76ff128bbca2ae56c9f97c2d934" translate="yes" xml:space="preserve">
          <source>Uploads pixel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cfc2a9ecc28252dfc58fa65db8fb3330b363091" translate="yes" xml:space="preserve">
          <source>Uploads the contents of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9c31b1648fd461b71cd44298da6c8dbc410b03" translate="yes" xml:space="preserve">
          <source>Upon reception, the &lt;a href=&quot;qnetworkdatagram#senderAddress&quot;&gt;senderAddress&lt;/a&gt;() and &lt;a href=&quot;qnetworkdatagram#senderPort&quot;&gt;senderPort&lt;/a&gt;() properties contain the address and port of the peer that sent the datagram, while &lt;a href=&quot;qnetworkdatagram#destinationAddress&quot;&gt;destinationAddress&lt;/a&gt;() and &lt;a href=&quot;qnetworkdatagram#destinationPort&quot;&gt;destinationPort&lt;/a&gt;() contain the target that was contained in the datagram. That is usually an address local to the current machine, but it can also be an IPv4 broadcast address (such as &quot;255.255.255.255&quot;) or an IPv4 or IPv6 multicast address. Applications may find it useful to determine if the datagram was sent specifically to this machine via unicast addressing or whether it was sent to multiple destinations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b68d07c0b25ff9286b6291558f6314fd71f8a5a" translate="yes" xml:space="preserve">
          <source>Upon start-up of your application, connect all signals in &lt;a href=&quot;qinappstore&quot;&gt;QInAppStore&lt;/a&gt; to related slots in your own &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;. Then use the &lt;a href=&quot;qinappstore#registerProduct&quot;&gt;registerProduct&lt;/a&gt;() function to register the ID of each product you expect to find registered in the external store, as well as its type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b36e74d8f5496c5c0baf9aeb689f7015d5bc741c" translate="yes" xml:space="preserve">
          <source>Upper case letters are preferred (but not required).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e71e22129fc5cd6ddc7147d8e6e32b3e0a2314f" translate="yes" xml:space="preserve">
          <source>Upper case text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412e31909b8ad1417c4a39495653fdeba58cd034" translate="yes" xml:space="preserve">
          <source>Urdu</source>
          <target state="translated">Urdu</target>
        </trans-unit>
        <trans-unit id="a32959d6cdd4500a095ff22a20fff18ca8765db1" translate="yes" xml:space="preserve">
          <source>Url</source>
          <target state="translated">Url</target>
        </trans-unit>
        <trans-unit id="ee3b91a5a021fcc6ebd1aa66cecaed118ae7cacf" translate="yes" xml:space="preserve">
          <source>Url and String</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78045406a921da02be67d190102d6b6a5e4caa3" translate="yes" xml:space="preserve">
          <source>Url string of a custom tile server. This parameter should be set to a valid server url offering the correct osm API. To use this server, the &lt;a href=&quot;qml-qtlocation-map#activeMapType-prop&quot;&gt;Map::activeMapType&lt;/a&gt; parameter of the &lt;a href=&quot;qml-qtlocation-map&quot;&gt;Map&lt;/a&gt; should be set to the supported map type whose type is &lt;a href=&quot;qml-qtlocation-maptype&quot;&gt;MapType&lt;/a&gt;.CustomMap. This map type is only be available if this plugin parameter is set, in which case it is always &lt;a href=&quot;qml-qtlocation-map#supportedMapTypes-prop&quot;&gt;Map::supportedMapTypes&lt;/a&gt;[supportedMapTypes.length - 1].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdff23e4e1729533b31eb32bfddc41282499684f" translate="yes" xml:space="preserve">
          <source>Url string set when making network requests to the geocoding server. This parameter should be set to a valid server url with the correct osm API. If not specified the default &lt;a href=&quot;http://nominatim.openstreetmap.org/&quot;&gt;url&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9191ee2caa3e18a4043a222f9ebc91afad0a6bff" translate="yes" xml:space="preserve">
          <source>Url string set when making network requests to the places server. This parameter should be set to a valid server url with the correct osm API. If not specified the default &lt;a href=&quot;http://nominatim.openstreetmap.org/search&quot;&gt;url&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95704d40a9f557e6b5255cdc2cc1d982c6207b46" translate="yes" xml:space="preserve">
          <source>Url string set when making network requests to the routing server. This parameter should be set to a valid server url with the correct osrm API. If not specified the default &lt;a href=&quot;http://router.project-osrm.org/route/v1/driving/&quot;&gt;url&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800f37891e134b211a4138432b1cec5bd90872b8" translate="yes" xml:space="preserve">
          <source>UrlRequest</source>
          <target state="translated">UrlRequest</target>
        </trans-unit>
        <trans-unit id="89731bdbf80a5d294afe2cfc2a65e08e301faabf" translate="yes" xml:space="preserve">
          <source>Urls are resolved to be within the same directory as the target of the base URL meaning any portion of the path after the last '/' will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="31fdeb34a4f4bc8a7b882018ab434e09d2defd44" translate="yes" xml:space="preserve">
          <source>Usage Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec43ce445f974147bd0eb223a50147e7fb7202d" translate="yes" xml:space="preserve">
          <source>Usage example:</source>
          <target state="translated">用例:</target>
        </trans-unit>
        <trans-unit id="950d9c1aee5a0b8ac1664c8a9f40a8cddde14c8b" translate="yes" xml:space="preserve">
          <source>Usage examples</source>
          <target state="translated">使用实例</target>
        </trans-unit>
        <trans-unit id="e5ca6b611981d961f97ed24cda318919d84d7844" translate="yes" xml:space="preserve">
          <source>Usage is through the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c87b183998e0cc00b1110beba719959eb02a534" translate="yes" xml:space="preserve">
          <source>Usage is to declare &lt;code&gt;POD&lt;/code&gt; followed by the name for the generated type, followed by type and name pairs separated by commas, where the type/name pairs are wrapped in parentheses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dcaffdd65195398529c1014283c7d707a336676" translate="yes" xml:space="preserve">
          <source>Usage is to declare &lt;code&gt;SIGNAL&lt;/code&gt; followed by the desired signature wrapped in parentheses. The void return value should be skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b563e5ddc5d664c3b4b5ca9f034c634f2bae70" translate="yes" xml:space="preserve">
          <source>Usage is to declare &lt;code&gt;SLOT&lt;/code&gt; followed by the desired signature wrapped in parentheses. The return value can be included in the declaration. If the return value is skipped, void will be used in the generated files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="fa796ec1a0e33dff0eaf9d60125a0413caba6ac8" translate="yes" xml:space="preserve">
          <source>Usage: (&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4d43cc6f3a833e0340a0d1794b6d7b9958657e" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">Use</target>
        </trans-unit>
        <trans-unit id="b8abf607144c84c1118a4e09384852eb40d84663" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qabstractitemmodel#rowCount&quot;&gt;rowCount&lt;/a&gt;() on the parent to find out the number of children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203745f45c354ca308bc01394baeb1df663c33b4" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qaxbase#dynamicCall&quot;&gt;QAxBase::dynamicCall&lt;/a&gt;() and &lt;a href=&quot;qaxbase#querySubObject&quot;&gt;QAxBase::querySubObject&lt;/a&gt;() as well as the &lt;a href=&quot;qobject#setProperty&quot;&gt;QObject::setProperty&lt;/a&gt;() and &lt;a href=&quot;qobject#property&quot;&gt;QObject::property&lt;/a&gt;() APIs to call the methods and properties of the COM object through their name. Use the &lt;a href=&quot;activeqt-dumpdoc#&quot;&gt;dumpdoc&lt;/a&gt; tool to get the documentation of the Qt API for any COM object and its subobjects; note that not all of the COM object's APIs might be available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7091c3f0e537a0c6438097228179d9cdd399da3" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qboxlayout#insertWidget&quot;&gt;insertWidget&lt;/a&gt;(), &lt;a href=&quot;qboxlayout#insertSpacing&quot;&gt;insertSpacing&lt;/a&gt;(), &lt;a href=&quot;qboxlayout#insertStretch&quot;&gt;insertStretch&lt;/a&gt;() or &lt;a href=&quot;qboxlayout#insertLayout&quot;&gt;insertLayout&lt;/a&gt;() to insert a box at a specified position in the layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d561230d418710b1b6b8e03c702c11fb16ad1d" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qdatetime#toTimeSpec&quot;&gt;toTimeSpec&lt;/a&gt;() to express a datetime in local time or UTC, &lt;a href=&quot;qdatetime#toOffsetFromUtc&quot;&gt;toOffsetFromUtc&lt;/a&gt;() to express in terms of an offset from UTC, or &lt;a href=&quot;qdatetime#toTimeZone&quot;&gt;toTimeZone&lt;/a&gt;() to express it with respect to a general time zone. You can use &lt;a href=&quot;qdatetime#timeSpec&quot;&gt;timeSpec&lt;/a&gt;() to find out what time-spec a &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; object stores its time relative to. When that is &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::TimeZone&lt;/a&gt;, you can use &lt;a href=&quot;qdatetime#timeZone&quot;&gt;timeZone&lt;/a&gt;() to find out which zone it is using.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb794dc208190c78f619c082568cacf3d93ad30" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qdomelement#hasAttributeNS&quot;&gt;hasAttributeNS&lt;/a&gt;() to explicitly test for attributes with specific namespaces and names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfb7921fddf6fa32f29b4b34a0c410bf28386ee" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qfontdialog#setCurrentFont&quot;&gt;setCurrentFont&lt;/a&gt;() to set the initial font attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7aaa1ef563e1ffc927605a904904f302ce3a22e" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt;(const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;, &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *) to get the font metrics that are compatible with a certain paint device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b445e3a8e00aff61214648891c06ef9f38bd486e" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qfontmetricsf&quot;&gt;QFontMetricsF&lt;/a&gt;(const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;, &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *) to get the font metrics that are compatible with a certain paint device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea1f64e891dc9e7b750e8282d32d24552ab756f0" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qgeocoordinate#type&quot;&gt;type&lt;/a&gt;() to determine whether a coordinate is a 2D coordinate (has latitude and longitude only) or 3D coordinate (has latitude, longitude and altitude). Use &lt;a href=&quot;qgeocoordinate#distanceTo&quot;&gt;distanceTo&lt;/a&gt;() and &lt;a href=&quot;qgeocoordinate#azimuthTo&quot;&gt;azimuthTo&lt;/a&gt;() to calculate the distance and bearing between coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fbe3ad533002b8659e4770885c51714c6581548" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qitemselection#merge&quot;&gt;merge&lt;/a&gt;() to merge one item selection into another without making overlapping ranges. Use &lt;a href=&quot;qitemselection#split&quot;&gt;split&lt;/a&gt;() to split one selection range into smaller ranges based on a another selection range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e02a826412107e0301529d5eb5578e79e1b1df" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qjsengine#evaluate&quot;&gt;evaluate&lt;/a&gt;() to evaluate script code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84eccc3dd54757c7f7ea76cb6b5eeeca2c236b5" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qjsengine#newObject&quot;&gt;newObject&lt;/a&gt;() to create a JavaScript object; this is the C++ equivalent of the script statement &lt;code&gt;new Object()&lt;/code&gt;. You can use the object-specific functionality in &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; to manipulate the script object (e.g. &lt;a href=&quot;qjsvalue#setProperty&quot;&gt;QJSValue::setProperty&lt;/a&gt;()). Similarly, use &lt;a href=&quot;qjsengine#newArray&quot;&gt;newArray&lt;/a&gt;() to create a JavaScript array object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e015fd755af0f5d744f6a2e1fa36b322966ac83c" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qjsengine#newQMetaObject-1&quot;&gt;newQMetaObject&lt;/a&gt;() to wrap a &lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt;; this gives you a &quot;script representation&quot; of a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-based class. &lt;a href=&quot;qjsengine#newQMetaObject-1&quot;&gt;newQMetaObject&lt;/a&gt;() returns a proxy script object; enum values of the class are available as properties of the proxy object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb2fe5ede15dc78f5979a6790984e7675ba4186" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qjsengine#newQObject&quot;&gt;newQObject&lt;/a&gt;() to wrap a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; (or subclass) pointer. &lt;a href=&quot;qjsengine#newQObject&quot;&gt;newQObject&lt;/a&gt;() returns a proxy script object; properties, children, and signals and slots of the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; are available as properties of the proxy object. No binding code is needed because it is done dynamically using the Qt meta object system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c08c3adb0c370fde7a6fee2ad028de5aaa749ff" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qjsvalue#equals&quot;&gt;equals&lt;/a&gt;() or &lt;a href=&quot;qjsvalue#strictlyEquals&quot;&gt;strictlyEquals&lt;/a&gt;() to compare a &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; to another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc257bfed596e0c341c01073ccf325fbb04f5c53" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qlocale#language&quot;&gt;language&lt;/a&gt;() and &lt;a href=&quot;qlocale#country&quot;&gt;country&lt;/a&gt;() to determine the actual language and country values used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54442cceb97489d0e389f7f509947eff85773113" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qmainwindow#restoreState&quot;&gt;QMainWindow::restoreState&lt;/a&gt;() to restore the geometry and the state of toolbars and dock widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37dd54ee1f6c1b5c7384480f7cd51fb38890c7f0" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qmainwindow#saveState&quot;&gt;QMainWindow::saveState&lt;/a&gt;() to save the geometry and the state of toolbars and dock widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04199760abf62b7290d0198365f16e0b8cf87701" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qmetaenum#name&quot;&gt;name&lt;/a&gt;() for the enumerator's name. The enumerator's keys (names of each enumerated item) are returned by &lt;a href=&quot;qmetaenum#key&quot;&gt;key&lt;/a&gt;(); use &lt;a href=&quot;qmetaenum#keyCount&quot;&gt;keyCount&lt;/a&gt;() to find the number of keys. &lt;a href=&quot;qmetaenum#isFlag&quot;&gt;isFlag&lt;/a&gt;() returns whether the enumerator is meant to be used as a flag, meaning that its values can be combined using the OR operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092fec30ef6d05f4d1f05e1f182deb3fa971609f" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qml-qt3d-core-skeletonloader&quot;&gt;SkeletonLoader&lt;/a&gt; if you wish to load a whole skeleton from file rather than creating the joints yourself using Skeleton and Joints. Creating a skeleton and binding the vertices of a mesh to the skeleton is most easily performed in a 3D digital content creation tool such as Blender. The resulting skeleton and mesh can then be exported in a suitable format such as glTF 2 for consumption by Qt 3D.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3465cc8f0a003c1b7129b938f70a83ae20769855" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qml-qtlocation-dynamicparameter&quot;&gt;DynamicParameter&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f412ceb6635349b5b6b525c92e8d5617c33875" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qml-qtqml-models-itemselectionmodel#setCurrentIndex-method&quot;&gt;setCurrentIndex()&lt;/a&gt; to set its value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737d2d82eb745d741f5687e4339ea34286a95597" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qml-qtqml-workerscript&quot;&gt;WorkerScript&lt;/a&gt; to run operations in a new thread. This is useful for running operations in the background so that the main GUI thread is not blocked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e16b3a62f0aba818c316d1ec672aee11485fec2" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qml-qtquick-item#anchors-prop&quot;&gt;anchors&lt;/a&gt; or the &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;width&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#height-prop&quot;&gt;height&lt;/a&gt; properties to specify the size of the layout against its non-layout parent item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972b12daeb84e7b667702141aa805ebaf9b3af76" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qml-qtwebengine-webengineview#userScripts-prop&quot;&gt;WebEngineView.userScripts&lt;/a&gt; to access a list of scripts attached to the web view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf461125db045aa345726b88900db97e2325700b" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qndefrecord#id&quot;&gt;id&lt;/a&gt;() and &lt;a href=&quot;qndefrecord#setId&quot;&gt;setId&lt;/a&gt;() to get and set the id of the NDEF record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5560f2befe6a2dec0675a33bd5ddb7545bf678f" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qndefrecord#payload&quot;&gt;payload&lt;/a&gt;() and &lt;a href=&quot;qndefrecord#setPayload&quot;&gt;setPayload&lt;/a&gt;() to get and set the NDEF record payload. &lt;a href=&quot;qndefrecord#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() can be used to test if the payload is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b60d0e909f57d392b1e03cbe6e54e4e86aa85e" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qndefrecord#type&quot;&gt;type&lt;/a&gt;() and &lt;a href=&quot;qndefrecord#setType&quot;&gt;setType&lt;/a&gt;() to get and set the type of the NDEF record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0dfe0d48573446314a768d1b14b54fea968ed1" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qndefrecord#typeNameFormat&quot;&gt;typeNameFormat&lt;/a&gt;() and &lt;a href=&quot;qndefrecord#setTypeNameFormat&quot;&gt;setTypeNameFormat&lt;/a&gt;() to get and set the type name format of the NDEF record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e772d8d57de5d362d8fa08c83caa15e27a7c603" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qnmeapositioninfosource#startUpdates&quot;&gt;startUpdates&lt;/a&gt;() to start receiving regular position updates and &lt;a href=&quot;qnmeapositioninfosource#stopUpdates&quot;&gt;stopUpdates&lt;/a&gt;() to stop these updates. If you only require updates occasionally, you can call &lt;a href=&quot;qnmeapositioninfosource#requestUpdate&quot;&gt;requestUpdate&lt;/a&gt;() to request a single update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1e686d2e07b940a3de8628769b5e2ecdd65af0" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qpainter#fontInfo&quot;&gt;QPainter::fontInfo&lt;/a&gt;() to get the font info when painting. This will give correct results also when painting on paint device that is not screen-compatible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb7190ee690829c0bd8b4cba8c79176526ba12df" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qpixmapcache#insert&quot;&gt;QPixmapCache::insert&lt;/a&gt;() to receive an instance of Key generated by the pixmap cache. You can store the key in your own objects for a very efficient one-to-one object-to-pixmap mapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8187dfc50f39da6c36610892868cdad09e9dee5a" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt; in the application to load the plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae69af0f4f5aa3412750574e5617d045cfef6d0" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qprogressdialog#minimum-prop&quot;&gt;setMinimum&lt;/a&gt;() and &lt;a href=&quot;qprogressdialog#maximum-prop&quot;&gt;setMaximum&lt;/a&gt;() or the constructor to set the number of &quot;steps&quot; in the operation and call &lt;a href=&quot;qprogressdialog#value-prop&quot;&gt;setValue&lt;/a&gt;() as the operation progresses. The number of steps can be chosen arbitrarily. It can be the number of files copied, the number of bytes received, the number of iterations through the main loop of your algorithm, or some other suitable unit. Progress starts at the value set by &lt;a href=&quot;qprogressdialog#minimum-prop&quot;&gt;setMinimum&lt;/a&gt;(), and the progress dialog shows that the operation has finished when you call &lt;a href=&quot;qprogressdialog#value-prop&quot;&gt;setValue&lt;/a&gt;() with the value set by &lt;a href=&quot;qprogressdialog#maximum-prop&quot;&gt;setMaximum&lt;/a&gt;() as its argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d96568faeebf0e561f61b9437023816a9ad10b" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qsettings#beginWriteArray&quot;&gt;beginWriteArray&lt;/a&gt;() to write the array in the first place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb58b85b7d9ec5dc63901aee0355e9294419a04d" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qsgimagenode#setOwnsTexture&quot;&gt;setOwnsTexture&lt;/a&gt;() to set whether the node should take ownership of the texture. By default, the node does not take ownership.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90fc1a0c12a5aad023e028072c88601cd61a73e5" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qsgsimpletexturenode#setOwnsTexture&quot;&gt;setOwnsTexture&lt;/a&gt;() to set whether the node should take ownership of the texture. By default, the node does not take ownership.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59cfb9e6ae847043262a4b13b6c398fbaea62d5f" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qsizepolicy#setHeightForWidth&quot;&gt;setHeightForWidth&lt;/a&gt;() if the preferred height of the widget is dependent on the width of the widget (for example, a &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; with line wrapping).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c547cb8d97470f7a4140bb3ab6a1d5429485fd8c" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qsqlfield#isNull&quot;&gt;isNull&lt;/a&gt;() to check if the field's value is NULL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0628a4874fdeaa3ac830af517fbef1a11f80bc7" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qsqltablemodel#record&quot;&gt;QSqlTableModel::record&lt;/a&gt;() to retrieve a row in the table, and &lt;a href=&quot;qsqltablemodel#setRecord&quot;&gt;QSqlTableModel::setRecord&lt;/a&gt;() to modify the row. For example, the following code will increase every employee's salary by 10 per cent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ddd8306c232fce46ef9fc3459ecd3c3cd556944" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qsqltablemodel#revertAll&quot;&gt;revertAll&lt;/a&gt;() to revert all pending changes for the &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnManualSubmit&lt;/a&gt; strategy or &lt;a href=&quot;qsqltablemodel#revertRow&quot;&gt;revertRow&lt;/a&gt;() to revert a specific row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751729d1392037ff22bcc5b2c9e3fc42fe3bd880" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qsqltablemodel#submitAll&quot;&gt;submitAll&lt;/a&gt;() to submit all pending changes for the &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnManualSubmit&lt;/a&gt; strategy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d2266b00ff19d746e0ef7592ae487d87b5639b" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qstatictext#size&quot;&gt;size&lt;/a&gt;() to get the actual size of the text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043d6644dbca31b5e4af9a55355dc4a2df6e5e0e" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt::Horizontal&lt;/a&gt; for tabular data that looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f0640769d130bbca44dadeda2e9d5c32c404b0d" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt::Vertical&lt;/a&gt; for tabular data that looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30fc62850e4f06af1c4c398920e9039c6b44e469" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qt3dcore-qskeleton&quot;&gt;QSkeleton&lt;/a&gt; if you wish to manually create the joints of a skeleton for use with skinned meshes. This is mainly of use to people creating editors, tooling, or dynamic skeletons. It is more common that a Qt 3D application would simply consume an existing skeleton and skinned mesh as created in a digital content creation tool such as Blender. For this use case, please see &lt;a href=&quot;qt3dcore-qskeletonloader&quot;&gt;QSkeletonLoader&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7531f4c82f2fb7627db295024efe8fd1ce739e51" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qtextedit#html-prop&quot;&gt;setHtml&lt;/a&gt;() or &lt;a href=&quot;qtextedit#setPlainText&quot;&gt;setPlainText&lt;/a&gt;() directly to avoid text edit's guessing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0774ff7f64bac4ee0db4ae28e7d13daa208ad733" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qtexttospeech#say&quot;&gt;say&lt;/a&gt;() to start synthesizing text. It is possible to specify the language with &lt;a href=&quot;qtexttospeech#setLocale&quot;&gt;setLocale&lt;/a&gt;(). To select between the available voices use &lt;a href=&quot;qtexttospeech#setVoice&quot;&gt;setVoice&lt;/a&gt;(). The languages and voices depend on the available synthesizers on each platform. On Linux, &lt;code&gt;speech-dispatcher&lt;/code&gt; is used by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce19158a2c7459c786adf2a771f98eb9bcc732a8" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qthread#wait&quot;&gt;wait&lt;/a&gt;() to block the calling thread, until the other thread has finished execution (or until a specified time has passed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58c9dbfbfae40617c5e8b4c649d9881837e1ce8c" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qtquick-modelviewsdata-cppmodels#qabstractitemmodel-subclass&quot;&gt;C++&lt;/a&gt; for dynamic data sets that are large or frequently modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ff40af02a098503c575cd9b0863c314f591baf" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qvector3d#crossProduct&quot;&gt;crossProduct&lt;/a&gt;() to compute the cross-product of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a99583c372a254fa43911ebca4251b2750b9ff" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qwebenginepage#scripts&quot;&gt;QWebEnginePage::scripts&lt;/a&gt;() and &lt;a href=&quot;qwebengineprofile#scripts&quot;&gt;QWebEngineProfile::scripts&lt;/a&gt;() to access the collection of scripts associated with a single page or a number of pages sharing the same profile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28907d617d8c52bc8aeb3da0f4ffe06f772632a" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qwebengineprofile#cookieStore&quot;&gt;QWebEngineProfile::cookieStore&lt;/a&gt;() and &lt;a href=&quot;qquickwebengineprofile#cookieStore&quot;&gt;QQuickWebEngineProfile::cookieStore&lt;/a&gt;() to access the cookie store object for a specific profile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c3a5ba67f4e3e2a876325083eb9253417491fa" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qwidget#windowHandle&quot;&gt;QWidget::windowHandle&lt;/a&gt;() to get a &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; pointer from a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; instance. At app startup the &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; might not have been created yet, call &lt;a href=&quot;qwidget#winId&quot;&gt;QWidget::winId&lt;/a&gt;() to make sure it is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5aada492f6ce11c8003838bbc8202a353342de6" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qwidget#windowModality-prop&quot;&gt;QWidget::windowModality&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6b2790ab04d33dacf9986466d7adc730fe6dfa" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qxmlattributes#index&quot;&gt;index&lt;/a&gt;() to locate the position of an attribute in the list, &lt;a href=&quot;qxmlattributes#count&quot;&gt;count&lt;/a&gt;() to retrieve the number of attributes, and &lt;a href=&quot;qxmlattributes#clear&quot;&gt;clear&lt;/a&gt;() to remove the attributes. New attributes can be added with &lt;a href=&quot;qxmlattributes#append&quot;&gt;append&lt;/a&gt;(). Use &lt;a href=&quot;qxmlattributes#type&quot;&gt;type&lt;/a&gt;() to get an attribute's type and &lt;a href=&quot;qxmlattributes#value&quot;&gt;value&lt;/a&gt;() to get its value. The attribute's name is available from &lt;a href=&quot;qxmlattributes#localName&quot;&gt;localName&lt;/a&gt;() or &lt;a href=&quot;qxmlattributes#qName&quot;&gt;qName&lt;/a&gt;(), and its namespace URI from &lt;a href=&quot;qxmlattributes#uri&quot;&gt;uri&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139115fdd0f320627623a6dc22ae0986e00385a3" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;QXmlQuery::bindVariable&lt;/a&gt;() to bind the &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; to &lt;code&gt;$variable name&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72864d5c94a9827128b8241a4d7a8c58f8e85790" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&amp;lt;func&amp;gt;&lt;/code&gt; for translating strings instead of &lt;code&gt;tr()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2dad0407df767768fdb056dc6a82101eeb1383" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Directory&lt;/code&gt; and &lt;a href=&quot;qfiledialog#setOption&quot;&gt;setOption&lt;/a&gt;(&lt;a href=&quot;qfiledialog#Option-enum&quot;&gt;ShowDirsOnly&lt;/a&gt;, true) instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a91cba7aeec454a62e355e673adf00272f73cc1" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;\&lt;/code&gt; to escape the special characters listed above to use them as separators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2dc53dbadcf704009144bd573195cc163fe289c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;configure -list-features&lt;/code&gt; to show a list of all available features on the command line. Note that features can depend on other features, so disabling a feature might have side-effects on other features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a58731a0cc5d2f8115dad2eb86f39e3ba77dffd" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;console.log&lt;/code&gt;, &lt;code&gt;console.debug&lt;/code&gt;, &lt;code&gt;console.info&lt;/code&gt;, &lt;code&gt;console.warn&lt;/code&gt;, or &lt;code&gt;console.error&lt;/code&gt; to print debugging information to the console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91413942115417668fb1c56820f2dec631aedceb" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;viewport-&amp;gt;update()&lt;/code&gt; to update the contents of the viewport instead of &lt;a href=&quot;qwidget#update&quot;&gt;update()&lt;/a&gt; as all painting operations take place on the viewport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4ff2cc1d7f0468e944131a066c3fac4915de29" translate="yes" xml:space="preserve">
          <source>Use AdjustToContents or AdjustToContentsOnFirstShow instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9731e0383485a9a2f589d96e583cdae32ebf6b3" translate="yes" xml:space="preserve">
          <source>Use Case: GPS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b528f15ff0b57a71077a04f4e6a6f59d3d81fab1" translate="yes" xml:space="preserve">
          <source>Use Case: Printer Access</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f265c7829e76a97fd961711cab2c6e2b2b32674" translate="yes" xml:space="preserve">
          <source>Use Fixed instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c6ea4649c7761816224f5debe8495ec819ed0e" translate="yes" xml:space="preserve">
          <source>Use Mapbox China API base URLs and styles. Please notice that Mapbox China requires a specific access token. Contact &lt;a href=&quot;https://www.mapbox.com/contact/sales/&quot;&gt;Mapbox sales&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7caf187f6f334b00b1013bb3b431792ac1653e7e" translate="yes" xml:space="preserve">
          <source>Use MyNewFunction() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85fff89d137cc47ba1c4853cb0a4f9282239b6fa" translate="yes" xml:space="preserve">
          <source>Use NoToAll instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd99d0fef4f0a6301300ed2c5b9948e225ed6e87" translate="yes" xml:space="preserve">
          <source>Use PM_LayoutHorizontalSpacing and PM_LayoutVerticalSpacing instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5004ddc2ce1b2acdc08725818e8a7258b4e53a4d" translate="yes" xml:space="preserve">
          <source>Use PM_LayoutLeftMargin, PM_LayoutTopMargin, PM_LayoutRightMargin, and PM_LayoutBottomMargin instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8194f11a29e3def3c0cdfc41cff52167ce89a38" translate="yes" xml:space="preserve">
          <source>Use QAccessible::installRootObjectHandler() to redirect the function call to a customized handler function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43acc6abe0c76f02739d4a36a46dd3849cbcd0e9" translate="yes" xml:space="preserve">
          <source>Use QPointers like normal pointers and you will not need to read this class documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4591fb32f2e74d2818437c17173fec0ab932b8d" translate="yes" xml:space="preserve">
          <source>Use QTextFormat::TextUnderlineStyle instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ba3bfcca3fb6e56e60a2dbcc599aff524b202d" translate="yes" xml:space="preserve">
          <source>Use Qt Concurrent's &lt;a href=&quot;qtconcurrent#filter&quot;&gt;QtConcurrent::filter&lt;/a&gt;() function to select container elements, and the &lt;a href=&quot;qtconcurrent#map&quot;&gt;QtConcurrent::map&lt;/a&gt;() function to apply an operation to each element. To fold the output into a single result, use &lt;a href=&quot;qtconcurrent#filteredReduced&quot;&gt;QtConcurrent::filteredReduced&lt;/a&gt;() and &lt;a href=&quot;qtconcurrent#mappedReduced&quot;&gt;QtConcurrent::mappedReduced&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d74496a4ef77d9b8af1c2a2dc648119ee10eb9" translate="yes" xml:space="preserve">
          <source>Use Qt's own rasterization algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00fb0260896152dd5b74f749200a1de91a568dd7" translate="yes" xml:space="preserve">
          <source>Use Qt's standard color dialog instead of the operating system native color dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0452ef2f1eeb5492d51384232c9beefe3ae854cc" translate="yes" xml:space="preserve">
          <source>Use Qt's standard font dialog on the Mac instead of Apple's native font panel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f585ba34bf07e1c5f674b46f854b17cc40776b48" translate="yes" xml:space="preserve">
          <source>Use Qt::DefaultLocaleShortDate instead (or Qt::DefaultLocaleLongDate if you want long dates).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50340992dc10963eba85a6df9006bf2b69137731" translate="yes" xml:space="preserve">
          <source>Use Qt::ItemIsAutoTristate instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc4c35d8ccca4c527951cdc5d50467bf2885713" translate="yes" xml:space="preserve">
          <source>Use Qt::SystemLocaleShortDate instead (or Qt::SystemLocaleLongDate if you want long dates).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721a43abd61b1ee824a395e6012fcf20a8da9c1b" translate="yes" xml:space="preserve">
          <source>Use SVG images for small icons. While larger SVGs can be slow to render, small ones work well. Vector images avoid the need to provide several versions of an image, as is necessary with bitmap images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f93e6e7c27295035d3b66c77ce338d55d480c9b" translate="yes" xml:space="preserve">
          <source>Use Skeleton if you wish to manually create the joints of a skeleton for use with skinned meshes. This is mainly of use to people creating editors, tooling, or dynamic skeletons. It is more common that a Qt 3D application would simply consume an existing skeleton and skinned mesh as created in a digital content creation tool such as Blender. For this use case, please see &lt;a href=&quot;qml-qt3d-core-skeletonloader&quot;&gt;SkeletonLoader&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1a789376bd9969085f84faf590d440e40031c1" translate="yes" xml:space="preserve">
          <source>Use YesToAll instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b66013c64f675b1cf802530a33aca045ddda2a0" translate="yes" xml:space="preserve">
          <source>Use a &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt; rather than a non-editable &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; for displaying the items set with &lt;a href=&quot;qinputdialog#comboBoxItems-prop&quot;&gt;setComboBoxItems&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94368fd3d07e7e39d2512579fb7ebe2d72faa391" translate="yes" xml:space="preserve">
          <source>Use a &lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt; for multiline text input. This value was introduced in 5.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78bbb65808de55a65cc6217be8e0920c27df132d" translate="yes" xml:space="preserve">
          <source>Use a C++ API - Call &lt;a href=&quot;qquickwindow#setSceneGraphBackend&quot;&gt;QQuickWindow::setSceneGraphBackend&lt;/a&gt;() early on in the application's main() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165df0cee159d3982c7d70a516a024403bd882c4" translate="yes" xml:space="preserve">
          <source>Use a Conditional to Hide QML Source From the Compiler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91cc2a3647efe4ec5f05cecc2264e4cd32da5d2c" translate="yes" xml:space="preserve">
          <source>Use a disk cache. This is the default if &lt;code&gt;off-the-record&lt;/code&gt; is not set. Falls back to &lt;code&gt;MemoryHttpCache&lt;/code&gt; if &lt;code&gt;off-the-record&lt;/code&gt; is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="334328cf61dd6cb4690bf72c02d6a4341db98a3f" translate="yes" xml:space="preserve">
          <source>Use a disk cache. This is the default if the profile is not &lt;code&gt;off-the-record&lt;/code&gt;. If set on an &lt;code&gt;off-the-record&lt;/code&gt; profile will instead set &lt;code&gt;MemoryHttpCache&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc2892247481c1f5f7542f44515242c8b967fa3" translate="yes" xml:space="preserve">
          <source>Use a lossless image rendering, whenever possible. Currently, this hint is only used when &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; is employed to output a PDF file through QPrinter or &lt;a href=&quot;qpdfwriter&quot;&gt;QPdfWriter&lt;/a&gt;, where &lt;a href=&quot;qpainter#drawImage&quot;&gt;drawImage&lt;/a&gt;()/&lt;a href=&quot;qpainter#drawPixmap&quot;&gt;drawPixmap&lt;/a&gt;() calls will encode images using a lossless compression algorithm instead of lossy JPEG compression. This value was added in Qt 5.13.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab79472ff4bdbd112d3e2c0128e6548cfa9b78b" translate="yes" xml:space="preserve">
          <source>Use a policy appropriate for applications on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c327e47e48a296f5c55100ce87c93ef8c6f15a" translate="yes" xml:space="preserve">
          <source>Use a policy appropriate for applications on Android.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d0b5dc083659053954cc44ac386cad7cd512b3" translate="yes" xml:space="preserve">
          <source>Use a policy appropriate for applications on Android. This enum value was added in Qt 5.10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3ec1897fe9971e7c2fc4d8ef8462038f15e402" translate="yes" xml:space="preserve">
          <source>Use a policy appropriate for applications on GNOME.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b091e746c641d07cf1ac33fe8194e4fb255844bc" translate="yes" xml:space="preserve">
          <source>Use a policy appropriate for applications on KDE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce2952ced21f4b07068ce0cfb6b8c41d50f43b5" translate="yes" xml:space="preserve">
          <source>Use a policy appropriate for applications on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab45a42296c85b7a7398467959c5f971a8b18eed" translate="yes" xml:space="preserve">
          <source>Use a private a key to sign your application to publish it on Google Play. To do so, open the &lt;b&gt;Build Android APK&lt;/b&gt; in Qt Creator and add keystore information. When you are done, select &lt;b&gt;Release&lt;/b&gt; as the build configuration and deploy your project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac30267c15e552d14fe0075fc6bcb054d77c250" translate="yes" xml:space="preserve">
          <source>Use a single &lt;a href=&quot;qml-qtquick-controls2-checkbox&quot;&gt;CheckBox&lt;/a&gt; for a yes/no choice, such as when you have to accept the terms of service agreement in a form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2870bbfa214c69f0fcfbb2fafe6ebcaee2b61696" translate="yes" xml:space="preserve">
          <source>Use a sliding slice window to cache results, whose parameters are determined with the help of profiling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146fdfdbecdab45606b5b82e650ed51c5ebeef7e" translate="yes" xml:space="preserve">
          <source>Use a tooltip if a control has little or no descriptive text, or needs a short explanation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809ee3f2faa8d18cfe0ba0acdcb26a62c7c3b65b" translate="yes" xml:space="preserve">
          <source>Use a tooltip only if the information on a particular control is not available elsewhere in the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330a789b9fd6f844b346e7ce860f8dc7766ef545" translate="yes" xml:space="preserve">
          <source>Use a translation file to set the language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2869b1f110cc6b91287650d3e6257509faed7b4d" translate="yes" xml:space="preserve">
          <source>Use additional caching when available. This may improve performance at a higher memory cost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f241641c8b3fdca2e0d1b48a8421911ad4c468a2" translate="yes" xml:space="preserve">
          <source>Use an environment variable - Set the &lt;code&gt;QT_QUICK_BACKEND&lt;/code&gt; or the legacy &lt;code&gt;QMLSCENE_DEVICE&lt;/code&gt; environment variable before launching applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac68c4d3b8d9ad0cb50c1dc2117c7eea914f8a8" translate="yes" xml:space="preserve">
          <source>Use an in-memory cache. This is the default if &lt;code&gt;off-the-record&lt;/code&gt; is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630d1c508e9449d184368af7ac5c24120caaf36e" translate="yes" xml:space="preserve">
          <source>Use an ordinary window, such as a &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; subclass, targeting the window's default framebuffer, meaning a &lt;code&gt;gbm_surface&lt;/code&gt; in practice:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e14a820859aad6e8faa8a905021388165aedfb0" translate="yes" xml:space="preserve">
          <source>Use anchors or the Qt Quick Layouts module to lay out the visual items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ca9aa40770c59855a39851737e35143f679ec2" translate="yes" xml:space="preserve">
          <source>Use application/octet-stream for the &quot;All files (*)&quot; filter, since that is the base MIME type for all files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fae92805087443fd40c4b731a16f22ed1664e66" translate="yes" xml:space="preserve">
          <source>Use appropriate escaping, when characters can't be represented in the XML,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb3abcb5db082da5ad7d8ab42176c459f9eea49" translate="yes" xml:space="preserve">
          <source>Use case sensitive pattern matching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448d4de1d175b3cf5556e8c7e1621587ee387081" translate="yes" xml:space="preserve">
          <source>Use code like the following to obtain a &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; containing the methods specific to a given class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447d8bb0a8368f3184046294b4c436eb45182d93" translate="yes" xml:space="preserve">
          <source>Use code like the following to obtain a &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; containing the properties specific to a given class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c40237d29ddf36b002f10c9371775b6d83adec6" translate="yes" xml:space="preserve">
          <source>Use design metrics instead of hinted metrics adjusted to the resolution of the paint device. Can be OR-ed with any of the options above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96468e894c2a550f73c3949e60068fb788b4498" translate="yes" xml:space="preserve">
          <source>Use different FrameGraph trees depending on the nature of what you need to render for a particular region of the scene</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9849541893447eebf136880c5449e169a2bc078" translate="yes" xml:space="preserve">
          <source>Use flash to fillin shadows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4b3d16c1790bf63a6efdd9aaf1b152425067c7" translate="yes" xml:space="preserve">
          <source>Use font-based icons, such as Font Awesome. These scale to any display resolution, and also allow colorization. The Qt Quick Controls 2 Text Editor example demonstrates this well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c3b161bbf33126ffe0ff42ad9d16333dea28d0" translate="yes" xml:space="preserve">
          <source>Use for actions that must be triggered with care.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d9e2c5b0ea08e4d36e0e67bf7680828ab5559c" translate="yes" xml:space="preserve">
          <source>Use in touch user interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aea80bee9c3e2aebdb31291ba00c5d1821d8f75" translate="yes" xml:space="preserve">
          <source>Use in windows with OpenGL content is not supported. This includes QGLWidget and &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47785c4df6c29d1a2e154b2982ead84962ccfc0" translate="yes" xml:space="preserve">
          <source>Use individual characters as boundary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f846149f274a8aa487c626c1dc9e8833492ddc" translate="yes" xml:space="preserve">
          <source>Use larger aperture with small depth of field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6e7ba44d2750cd14afc6c781c8238f7ecd251b" translate="yes" xml:space="preserve">
          <source>Use letters and numbers only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a59bb1d28e5c66c17bf84b16208485740083d7" translate="yes" xml:space="preserve">
          <source>Use newlines as boundary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e661bed52d558c04b6caa2a2bd82f84f1ff5dfc" translate="yes" xml:space="preserve">
          <source>Use of Timezones</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5218c2c2b59a0dd0cffbc3cc9f337190a681e448" translate="yes" xml:space="preserve">
          <source>Use of multi-process systems do bring about the following trade-offs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5509fcb7d437d8ca84ea5d4332e9c16b16d0846" translate="yes" xml:space="preserve">
          <source>Use of other characters is not supported and may result in unexpected behaviour. &lt;a href=&quot;qurlquery&quot;&gt;QUrlQuery&lt;/a&gt; does not verify that you passed a valid delimiter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333d03c7766c22c156366edbd07a3ab972e3799e" translate="yes" xml:space="preserve">
          <source>Use of other characters is not supported and may result in unexpected behaviour. This method does not verify that you passed a valid delimiter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa969c0de216a98720798b0bb0df90d307624d3" translate="yes" xml:space="preserve">
          <source>Use of the Primary Screen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b294868075a7d1f6c33002e1791ff285932b307" translate="yes" xml:space="preserve">
          <source>Use of this macro can help the compiler to optimize the code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9d2496b58593df7bf995932f21f9f2bc5e0fa1" translate="yes" xml:space="preserve">
          <source>Use only signal strength when searching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc98a584570fd6f88c05a0e653daf1f28e6e1dfc" translate="yes" xml:space="preserve">
          <source>Use opaque primitives where possible. Opaque primitives are faster to process in the renderer and faster to draw on the GPU. For instance, PNG files will often have an alpha channel, even though each pixel is fully opaque. JPG files are always opaque. When providing images to a &lt;a href=&quot;qquickimageprovider&quot;&gt;QQuickImageProvider&lt;/a&gt; or creating images with &lt;a href=&quot;qquickwindow#createTextureFromImage&quot;&gt;QQuickWindow::createTextureFromImage&lt;/a&gt;(), let the image have &lt;a href=&quot;qimage#Format-enum&quot;&gt;QImage::Format_RGB32&lt;/a&gt;, when possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3c92d28b1c2eaee576ee48e67024dcfc0589d7" translate="yes" xml:space="preserve">
          <source>Use paragraphs as boundary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2a3b502a2f115dd70da84f7935d16eccfa8600" translate="yes" xml:space="preserve">
          <source>Use properties of type &lt;a href=&quot;qml-variant&quot;&gt;variant&lt;/a&gt; to store a &lt;code&gt;coordinate&lt;/code&gt;. To create a &lt;code&gt;coordinate&lt;/code&gt; use one of the methods described below. In all cases, specifying the &lt;a href=&quot;qml-coordinate#altitude&quot;&gt;altitude&lt;/a&gt; attribute is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ee6ed38fe3f271b1460b386fdd11d2eac367d0" translate="yes" xml:space="preserve">
          <source>Use properties of type &lt;a href=&quot;qml-variant&quot;&gt;variant&lt;/a&gt; to store a &lt;code&gt;geocircle&lt;/code&gt;. To create a &lt;code&gt;geocircle&lt;/code&gt; value, use the &lt;a href=&quot;qml-qtpositioning-qtpositioning#circle-method&quot;&gt;QtPositioning.circle()&lt;/a&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ed8c7765d36fcaa9e48e68dd103cc042fcbe15" translate="yes" xml:space="preserve">
          <source>Use properties of type &lt;a href=&quot;qml-variant&quot;&gt;variant&lt;/a&gt; to store a &lt;code&gt;georectangle&lt;/code&gt;. To create a &lt;code&gt;georectangle&lt;/code&gt; value, use the &lt;a href=&quot;qml-qtpositioning-qtpositioning#rectangle-method&quot;&gt;QtPositioning.rectangle()&lt;/a&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f754b35d266704cb05c903b7faa0ddaeee5341c" translate="yes" xml:space="preserve">
          <source>Use properties of type &lt;a href=&quot;qml-variant&quot;&gt;variant&lt;/a&gt; to store a &lt;code&gt;geoshape&lt;/code&gt;. To create a &lt;code&gt;geoshape&lt;/code&gt; use one of the methods described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd399582e1fd52d7ed1f0f0b06ac4d25607a95a" translate="yes" xml:space="preserve">
          <source>Use qobject_cast() to test whether a plugin implements a given interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415b6eb1f7c7d88b75a8cec0b071375b9ca97166" translate="yes" xml:space="preserve">
          <source>Use sentences as boundary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf52d1f4e6875b12b82a5cc44dfa6f4ef279dab5" translate="yes" xml:space="preserve">
          <source>Use singleton types instead of pragma library scripts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536d7c826c606244d8b4f65d60ed4bda6700a785" translate="yes" xml:space="preserve">
          <source>Use smaller aperture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="495cf4be0408d04e45237310628e24f4dc1ea217" translate="yes" xml:space="preserve">
          <source>Use temporary &amp;lt;file&amp;gt; for big resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51e6b1f2052f56f01324939b82dec51aa5cf34b" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;#Q_DECLARE_INTERFACE&quot;&gt;Q_DECLARE_INTERFACE&lt;/a&gt;() macro to tell Qt's &lt;a href=&quot;metaobjects&quot;&gt;meta-object system&lt;/a&gt; about the interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1034f18f6df28135f991b39cb54cd214b3c9a64c" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;#Q_IMPORT_PLUGIN&quot;&gt;Q_IMPORT_PLUGIN&lt;/a&gt;() macro in your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9bcb24c3fa57a6bad874933b8645a7e672d7eb" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro to register the plugin with the Qt meta object system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a14da1c1d3f4f78e78370e36f89e4a716674a43" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;#item-sub&quot;&gt;::item&lt;/a&gt; subcontrol for more fine grained control over the items in the &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1edf1185802498d8006c514d62ab175f8c84aa3a" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;#item-sub&quot;&gt;::item&lt;/a&gt; subcontrol for more fine grained control over the items in the &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4957469846e5e810143af24fbb3edd15eced9150" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qaxaggregated#widget&quot;&gt;widget&lt;/a&gt;() method if you need to make calls to the &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; implementing the ActiveX control. You must not store that pointer in your subclass (unless you use &lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt;), as the &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; can be destroyed by the &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; framework at any time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16cf24c7a2668451e6a5ad931421dce82602735e" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; objects &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt::color0&lt;/a&gt; and &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt::color1&lt;/a&gt; when drawing on a &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; object (or a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; object with depth 1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7544b22aaba620cfff2c93e90818a0cdad4c8894" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qdir#Q_INIT_RESOURCE&quot;&gt;Q_INIT_RESOURCE&lt;/a&gt;() macro in your application if the plugin ships qrc files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188588570c5ff2d1ee11b0e35e67d639bd97d0ef" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qdir#toNativeSeparators&quot;&gt;toNativeSeparators&lt;/a&gt;() function to convert the separators to the ones that are appropriate for the underlying operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f55b4cb442f00ef9c3e944ec4831145e520058" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qfontdatabase#styleString&quot;&gt;styleString&lt;/a&gt;() to obtain a text version of a style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed7cf2c7819f7864529699d8a74734dd55ce92b" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qgraphicsblureffect#BlurHint-enum&quot;&gt;PerformanceHint&lt;/a&gt; hint to say that you want a faster blur, the &lt;a href=&quot;qgraphicsblureffect#BlurHint-enum&quot;&gt;QualityHint&lt;/a&gt; hint to say that you prefer a higher quality blur, or the &lt;a href=&quot;qgraphicsblureffect#BlurHint-enum&quot;&gt;AnimationHint&lt;/a&gt; when you want to animate the blur radius.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad9ae56d7e66a2d9ad3fe488fadd129920f0c56e" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qguiapplication#mouseButtons&quot;&gt;QApplication::mouseButtons&lt;/a&gt;() function to get the state of the mouse buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9244063427619896a9f3abdf2f716c6a5f851bdd" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qhistorystate#setDefaultState&quot;&gt;setDefaultState&lt;/a&gt;() function to set the state that should be entered if the parent state has never been entered. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db7d7253d476d7886fed6c6b4567004eebb39fb" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qimagereader#supportedImageFormats&quot;&gt;QImageReader::supportedImageFormats&lt;/a&gt;() and &lt;a href=&quot;qimagewriter#supportedImageFormats&quot;&gt;QImageWriter::supportedImageFormats&lt;/a&gt;() functions to retrieve a complete list of the supported file formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41fcf2fd2b7fdc15d99a22d049a27550c7dc7e4a" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qml-qtqml-statemachine-historystate#defaultState-prop&quot;&gt;defaultState&lt;/a&gt; property to set the state that should be entered if the parent state has never been entered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d14a710ba5b518b6fa23e2964ebbca84e140f89" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qml-qtquick-layouts-layout&quot;&gt;Layout&lt;/a&gt; attached property to set the size and alignment attributes of the layout's immediate children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881fe79fb295ad5d0f61d9a12a538b458b4bf49a" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt;() macro to specify the COM identifiers for the COM object. &lt;code&gt;ClassID&lt;/code&gt; and &lt;code&gt;InterfaceID&lt;/code&gt; are required, while &lt;code&gt;EventsID&lt;/code&gt; is only necessary when your object has signals. To generate these identifiers, use system tools like &lt;code&gt;uuidgen&lt;/code&gt; or &lt;code&gt;guidgen&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af898ca1cc2a6e579de73e9883471e4cc7d09ecf" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;() macro to tell Qt's &lt;a href=&quot;metaobjects&quot;&gt;meta-object system&lt;/a&gt; about the interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0cc2ed96fdd88efae2c326520acb16b746089a8" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;() macro to declare properties for the ActiveX control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6b8fe6f2949f4a866c2ca058e2a3b054cc6011" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qopengltimemonitor#recordSample&quot;&gt;recordSample&lt;/a&gt;() function to delimit blocks of code containing OpenGL commands that you wish to time. You can check availability of the resulting time samples and time intervals with &lt;a href=&quot;qopengltimemonitor#isResultAvailable&quot;&gt;isResultAvailable&lt;/a&gt;(). The calculated time intervals and the raw timestamp samples can be retrieved with the blocking &lt;a href=&quot;qopengltimemonitor#waitForIntervals&quot;&gt;waitForIntervals&lt;/a&gt;() and &lt;a href=&quot;qopengltimemonitor#waitForSamples&quot;&gt;waitForSamples&lt;/a&gt;() functions respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42e7c117ac7b0ded7353421b59d5402eb51e5de" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qrect#normalized&quot;&gt;normalized&lt;/a&gt;() function to retrieve a rectangle where the corners are swapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4c49623dade939723d587e185adf3f2755b600" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qrectf#normalized&quot;&gt;normalized&lt;/a&gt;() function to retrieve a rectangle where the corners are swapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edca266b3d9fa062170a7e7104958f9ec92cc048" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qscrollarea#widget&quot;&gt;QScrollArea::widget&lt;/a&gt;() function to retrieve the contents of the viewport widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b379acdb2967a76ed1ffdcb1a9de29865540507d" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qserialport#close&quot;&gt;close&lt;/a&gt;() method to close the port and cancel the I/O operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5127ca91b584580f8a2a7050eb8119735ce28af6" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qsize#expandedTo&quot;&gt;expandedTo&lt;/a&gt;() function to retrieve a size which holds the maximum height and width of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564c1a00dbcbb1a154bb1380d682a2d519b3e9db" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qsizef#expandedTo&quot;&gt;expandedTo&lt;/a&gt;() function to retrieve a size which holds the maximum height and width of this size and a given size. Similarly, the &lt;a href=&quot;qsizef#boundedTo&quot;&gt;boundedTo&lt;/a&gt;() function returns a size which holds the minimum height and width of this size and a given size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818ff4707eb8340eec7f8b957bf862804ce0f60e" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qsizepolicy#expandingDirections&quot;&gt;expandingDirections&lt;/a&gt;() function to determine whether the associated widget can make use of more space than its &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;sizeHint()&lt;/a&gt; function indicates, as well as find out in which directions it can expand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2fe4e4475aedeea3ca8e3f9f6a87d071127f55" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qssldiffiehellmanparameters#isValid&quot;&gt;isValid&lt;/a&gt;() method on the returned object to check whether the Diffie-Hellman parameters were valid and loaded correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb71d23276387d9e50d3fc05a9b184862e4feb8" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qstatemachine#addState&quot;&gt;addState&lt;/a&gt;() function to add a top-level state to the state machine. States are removed with the &lt;a href=&quot;qstatemachine#removeState&quot;&gt;removeState&lt;/a&gt;() function. Removing states while the machine is running is discouraged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b00756f30fda2482061b05d6d783fdea90d5ebc5" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qstatusbar#currentMessage&quot;&gt;currentMessage&lt;/a&gt;() function to retrieve the temporary message currently shown. The &lt;a href=&quot;qstatusbar&quot;&gt;QStatusBar&lt;/a&gt; class also provide the &lt;a href=&quot;qstatusbar#messageChanged&quot;&gt;messageChanged&lt;/a&gt;() signal which is emitted whenever the temporary status message changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae44b2a78132db0ac95d39d5ce8298c4155733f" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qstatusbar#showMessage&quot;&gt;showMessage&lt;/a&gt;() slot to display a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb71f6c47541aed8c8fec5b7d8e5c1e6c9bac67" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;%{category}&lt;/code&gt; placeholder to print the category in the default message handler:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d473db9c2d141d0896676b4502dbbf8f239b1669" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;QT_USE_NATIVE_WINDOWS=1&lt;/code&gt; in your environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b67131952726ec7997747fb3e71de27952b2768" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;defaultButton&lt;/code&gt; argument of &lt;a href=&quot;qmessagebox#information&quot;&gt;information&lt;/a&gt;(), &lt;a href=&quot;qmessagebox#warning&quot;&gt;warning&lt;/a&gt;(), etc. instead, or call &lt;a href=&quot;qmessagebox#setDefaultButton&quot;&gt;setDefaultButton&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a34512754f145f18cb5626b6cf5731877917eb3" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;fb&lt;/code&gt; plugin parameter to specify the framebuffer device to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d47de119b78a9f66032ab42216844203e8882df0" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;find_package()&lt;/code&gt; command to locate the needed module components in the &lt;code&gt;Qt5&lt;/code&gt; package:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593c5552882e7472b1d1c0dc90dfe0664d49ef69" translate="yes" xml:space="preserve">
          <source>Use the ODBC-style positional syntax, with &quot;?&quot; as placeholders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ec27a6623c4387789b13e1a0b8a0f42b8a5216" translate="yes" xml:space="preserve">
          <source>Use the Oracle-style syntax with named placeholders (e.g., &quot;:id&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a5e8bb83069dd2b2cf5d09cdc9a7b6a9c974a5" translate="yes" xml:space="preserve">
          <source>Use the Qt event loop to wait for a reply. This means that the user-interface will stay responsive (processing input events), but it also means other events may happen, like signal delivery and other D-Bus method calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00fe3d7db8c8843e4ebe112c82c5c98695b6faa1" translate="yes" xml:space="preserve">
          <source>Use the application to view the slots, signals and porperties available through the &lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt; class when instantiated with a certain ActiveX, and to test ActiveX controls you implement or want to use in your Qt application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7c0974be6dad5e958d56f2d0c0d7b44f6bde07" translate="yes" xml:space="preserve">
          <source>Use the create function to construct the attribute, rather than an initialization list, to ensure that all fields are initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484d4d1a54cd92d0aa506a635865e1ef6b102285" translate="yes" xml:space="preserve">
          <source>Use the default font unless you have UI guidelines specifying otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ef042376eceb28b51e8b4d91a2b42efbba6bea" translate="yes" xml:space="preserve">
          <source>Use the default font, unless you have UI guidelines specifying otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d122f5afe3205a290aebbfbad73216486542fa6" translate="yes" xml:space="preserve">
          <source>Use the default font, unless you have UI guidelines that specify otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67cc6e355aca5b879f66154f39058801983eef96" translate="yes" xml:space="preserve">
          <source>Use the default hinting level for the target platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9cb4cae2aff5365643d44181b14b0ad824b0aa" translate="yes" xml:space="preserve">
          <source>Use the flash in conjunction with a slow shutter speed. This mode allows better exposure of distant objects and/or motion blur effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d742cac6e35c1c3a421b2f518b43681356496c" translate="yes" xml:space="preserve">
          <source>Use the following &lt;code&gt;import&lt;/code&gt; statement in the QML files to access the Qt Purchasing QML types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3549a8ac122696aee2d3c831855376b28b87f8c" translate="yes" xml:space="preserve">
          <source>Use the following commands to install the basic requirements for building Qt applications:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4930a710f19d94514c42b37a47ea64b7f2d19ce9" translate="yes" xml:space="preserve">
          <source>Use the following include statement to access the C++ classes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de112bf46883a6d20ba7fbc211102b9ebbf8471" translate="yes" xml:space="preserve">
          <source>Use the global Qt color &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt::color0&lt;/a&gt; to draw 0-pixels and &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt::color1&lt;/a&gt; to draw 1-pixels in the bitmaps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16cc79bede2387383cdb09ed630e0a2d90997b6a" translate="yes" xml:space="preserve">
          <source>Use the interface returned by &lt;a href=&quot;qaxbindable#clientSite&quot;&gt;clientSite&lt;/a&gt;() to call the ActiveX client. To implement additional COM interfaces in your ActiveX control, reimplement &lt;a href=&quot;qaxbindable#createAggregate&quot;&gt;createAggregate&lt;/a&gt;() to return a new object of a &lt;a href=&quot;qaxaggregated&quot;&gt;QAxAggregated&lt;/a&gt; subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193d3138ee2bb43beddbb7154462ff85ba7dc30f" translate="yes" xml:space="preserve">
          <source>Use the operating system's native rasterizer for text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a003e6ee5d956328416b6e5620ca208acf2b8496" translate="yes" xml:space="preserve">
          <source>Use the overload of the &lt;a href=&quot;qwidget#setParent&quot;&gt;QWidget::setParent&lt;/a&gt;() function to change the ownership of a &lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt; widget. This function allows you to explicitly set the window flags of the reparented widget; using the overloaded function will clear the window flags specifying the window-system properties for the widget (in particular it will reset the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Dialog&lt;/a&gt; flag).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0097d7085cbbed168d9814edbfc69e834e6df78" translate="yes" xml:space="preserve">
          <source>Use the specified subdirectory instead of &lt;code&gt;SUBDIRS&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbc357a64a1671aedb9fb58eb4065ab37b45040" translate="yes" xml:space="preserve">
          <source>Use the static functions to generate a list of &lt;a href=&quot;qprinterinfo&quot;&gt;QPrinterInfo&lt;/a&gt; objects. Each &lt;a href=&quot;qprinterinfo&quot;&gt;QPrinterInfo&lt;/a&gt; object in the list represents a single printer and can be queried for name, supported paper sizes, and whether or not it is the default printer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4e1393f69886316d4d48d8285c2a0249c8311c" translate="yes" xml:space="preserve">
          <source>Use the static functions to generate a list of &lt;a href=&quot;qserialportinfo&quot;&gt;QSerialPortInfo&lt;/a&gt; objects. Each &lt;a href=&quot;qserialportinfo&quot;&gt;QSerialPortInfo&lt;/a&gt; object in the list represents a single serial port and can be queried for the port name, system location, description, and manufacturer. The &lt;a href=&quot;qserialportinfo&quot;&gt;QSerialPortInfo&lt;/a&gt; class can also be used as an input parameter for the setPort() method of the &lt;a href=&quot;qserialport&quot;&gt;QSerialPort&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a08444c4729ec6cfdb4e3165e2833e90fcb5d88" translate="yes" xml:space="preserve">
          <source>Use the widget's style to draw a complex control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92c241441b54e0053da513fe4e674d404b421d1" translate="yes" xml:space="preserve">
          <source>Use the widget's style to draw a control element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7bb6267dd39dba204feabb6277e9392e1bd1304" translate="yes" xml:space="preserve">
          <source>Use the widget's style to draw a primitive element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40534a26e714378b30e911c37da194781f33999b" translate="yes" xml:space="preserve">
          <source>Use this class if you want to implement a custom input method using C/C++ language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b5747408ca95d5bc45d4dee942a83a1c4f1b2f" translate="yes" xml:space="preserve">
          <source>Use this enum for JavaScript language-specific types of Error objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27b1d8a7b5bf57c1deb1a98d37ce8d2c2af8d3e" translate="yes" xml:space="preserve">
          <source>Use this function if you want to report benchmark results without using the QBENCHMARK macro. Use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4c12a8f0654db7bc7a5d6c333118690d571b15" translate="yes" xml:space="preserve">
          <source>Use this function only to implement &lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt;() for your own custom types. For example, here's how you could implement a &lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt;() overload for std::unordered_set&amp;lt;int&amp;gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8707d1c0d2e70dcac1d084d4b5894a613a1823" translate="yes" xml:space="preserve">
          <source>Use this function only to implement &lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt;() for your own custom types. For example, here's how you could implement a &lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt;() overload for std::vector&amp;lt;int&amp;gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f82e52ff1a80c84b8d437a43c104dce0312fb5" translate="yes" xml:space="preserve">
          <source>Use this function only when you don't know which window you are targeting. If you do know the target window, use &lt;a href=&quot;qwindow#devicePixelRatio&quot;&gt;QWindow::devicePixelRatio&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d837aebdb5f6d1634f3bc0c829d48278a120e18b" translate="yes" xml:space="preserve">
          <source>Use this function to avoid repetetive reallocation of &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s internal data if you can predict how many elements will be appended. Note that the reservation applies only to the internal pointer array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d66543078a98602294625f8dac0bdf095f8fffd" translate="yes" xml:space="preserve">
          <source>Use this function to eliminate redundant calls to a function or signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5717b9d6b654d0f8cb4db63b664d5d1a546f3b3" translate="yes" xml:space="preserve">
          <source>Use this function to enable or disable HTTP redirects on the manager's level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f49b928b5e189958ca63513c3da7e6ce983739" translate="yes" xml:space="preserve">
          <source>Use this function to override the platform default properties returned by the default constructor. If you only want to change the scroller properties of a single scroller, use &lt;a href=&quot;qscroller#scrollerProperties-prop&quot;&gt;QScroller::setScrollerProperties&lt;/a&gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36812bb8edc769e88de1d7510c1213f99fbc5c0b" translate="yes" xml:space="preserve">
          <source>Use this function to return the actual network configuration currently in use by the network session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1cb7ece3632a07a10f7c6ef067c0247f237d36" translate="yes" xml:space="preserve">
          <source>Use this function to set the cookie jar object to a class that implements additional features, like saving the cookies to permanent storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625812d204edfe0e925d073d9907bd6130c7bf75" translate="yes" xml:space="preserve">
          <source>Use this function to set the network cache object to a class that implements additional features, like saving the cookies to permanent storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8d88aa88778d25217e4c279871fefbc826f04e" translate="yes" xml:space="preserve">
          <source>Use this function to specify to OpenGL the number of vertices in a patch to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b122ea313d1381e57d665698c7ff249ea0549117" translate="yes" xml:space="preserve">
          <source>Use this function to update the renderer with changes that have occurred in the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7d3c6d541680b6f68fe9d1c013356f416a8490" translate="yes" xml:space="preserve">
          <source>Use this function when calculating layout geometry based on the image size: &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; layoutSize = image.&lt;a href=&quot;qimage#size&quot;&gt;size&lt;/a&gt;() / image.devicePixelRatio()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a4fcec906f40b24bc6b4bb1df5a7defc15dd02" translate="yes" xml:space="preserve">
          <source>Use this function when calculating layout geometry based on the pixmap size: &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; layoutSize = image.&lt;a href=&quot;qpixmap#size&quot;&gt;size&lt;/a&gt;() / image.devicePixelRatio()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e410bbb7807143880e3d256c7f7aca9650462ab" translate="yes" xml:space="preserve">
          <source>Use this function when you want to perform an operation that requires the &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; of the item, such as &lt;a href=&quot;qabstractitemview#scrollTo&quot;&gt;QAbstractItemView::scrollTo&lt;/a&gt;(). &lt;a href=&quot;qstandarditem#index&quot;&gt;QStandardItem::index&lt;/a&gt;() is provided as convenience; it is equivalent to calling this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6b11aaf10dc8107aeeac2b8b6e94b38ed5f290" translate="yes" xml:space="preserve">
          <source>Use this function with care.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851213818d642388f3d18609627f7be1539caf20" translate="yes" xml:space="preserve">
          <source>Use this macro as in the following examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755a4f7be73a0f3b957fef88ebe359f98294a9c4" translate="yes" xml:space="preserve">
          <source>Use this macro to replace the &lt;code&gt;emit&lt;/code&gt; keyword for emitting signals, when you want to use Qt Signals and Slots with a &lt;a href=&quot;signalsandslots#3rd-party-signals-and-slots&quot;&gt;3rd party signal/slot mechanism&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec096813076be9a49b1ef7d069a9e815ee9bdf22" translate="yes" xml:space="preserve">
          <source>Use this macro to replace the &lt;code&gt;signals&lt;/code&gt; keyword in class declarations, when you want to use Qt Signals and Slots with a &lt;a href=&quot;signalsandslots#3rd-party-signals-and-slots&quot;&gt;3rd party signal/slot mechanism&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e333dd26db6459473e81c0012d79d0982c9ab57" translate="yes" xml:space="preserve">
          <source>Use this macro to replace the &lt;code&gt;slots&lt;/code&gt; keyword in class declarations, when you want to use Qt Signals and Slots with a &lt;a href=&quot;signalsandslots#3rd-party-signals-and-slots&quot;&gt;3rd party signal/slot mechanism&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64dc0f773ccd9481c8ff7676efefc3fd1d1dce15" translate="yes" xml:space="preserve">
          <source>Use this method instead of setting the &lt;a href=&quot;qml-qtquick-textedit#text-prop&quot;&gt;text&lt;/a&gt; property to an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca2f4b97f98eb766b16f26d4a6c9a5cd758267d" translate="yes" xml:space="preserve">
          <source>Use this method instead of setting the &lt;a href=&quot;qml-qtquick-textinput#text-prop&quot;&gt;text&lt;/a&gt; property to an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec357fa9492e97edf605a4c772489f9b10f52fd" translate="yes" xml:space="preserve">
          <source>Use this property to access the list model for the word candidate list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="081cca6be5c8881f908c4b813e9c639cd447d893" translate="yes" xml:space="preserve">
          <source>Use this property to block possibly unwanted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a133f3cca80cb8b53f0471d66047fb24fded270" translate="yes" xml:space="preserve">
          <source>Use this property to change the key size in the layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb6a0495d55f5c71585d8a483bbb85eda191b7d" translate="yes" xml:space="preserve">
          <source>Use this property to check if the word candidate list should be visible in the UI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da21bf8865aec1c9911cf8872b5c936ea402d22c" translate="yes" xml:space="preserve">
          <source>Use this property to get or set the current input mode. The &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputengine#inputModes-prop&quot;&gt;InputEngine::inputModes&lt;/a&gt; property provides the list of valid input modes for the current input method and locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323dc34192c827fbf4d1fff0efb0c3240bce9688" translate="yes" xml:space="preserve">
          <source>Use this property to get or set the current input mode. The &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputengine#inputModes-prop&quot;&gt;InputEngine::inputModes&lt;/a&gt; provides list of valid input modes for current input method and locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7612e478df1fd0c09b8b8d01513f268da455ca1" translate="yes" xml:space="preserve">
          <source>Use this property to set active the input method, or to monitor when the active input method changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec743443d13e0645b028258486de14747974cee8" translate="yes" xml:space="preserve">
          <source>Use this property to set the active input method, or to monitor when the active input method changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17610a478dc36ce017f5e8910956ca62f983d6f3" translate="yes" xml:space="preserve">
          <source>Use this property to set the animating status, for example during UI transitioning states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb7ab6790233755e8b8780a99d8787a31acc786" translate="yes" xml:space="preserve">
          <source>Use this signal if the event has parameters of unsupported data types. Otherwise, connect directly to the signal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7472113afa783d3e473bc18c6204ce0a3cf9b9" translate="yes" xml:space="preserve">
          <source>Use this static function like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b72414d64b1fd4dcc5ed340e708f0103ddf1a8" translate="yes" xml:space="preserve">
          <source>Use this status to provide an update or respond to the status change in some way. For example, you could:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ca42474f576121a99e75dbdff19bb6f62e3d07" translate="yes" xml:space="preserve">
          <source>Use this to set the &lt;code&gt;font.family&lt;/code&gt; property of a &lt;code&gt;Text&lt;/code&gt; item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9cae5ff0899038fc43150e5ba9570117524d68" translate="yes" xml:space="preserve">
          <source>Use uppercase letters for expressing digits 10 to 35 instead of lowercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1614a2c8f1fedc0701c876520e1d15d41b56f03" translate="yes" xml:space="preserve">
          <source>Use uppercase versions of base prefixes (&quot;0X&quot;, &quot;0B&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72bb19d8bdd209de61b6a12176101055af224d7d" translate="yes" xml:space="preserve">
          <source>Use words as boundaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090fc43e989fc4fb5a929b3dad8f7c01c454db95" translate="yes" xml:space="preserve">
          <source>Used as a mask to specify that we are interesting in information about all relations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28903374e4bcf9bac69d58a605e9a62042026d4b" translate="yes" xml:space="preserve">
          <source>Used as a parameter to &lt;a href=&quot;qsoundeffect#setLoopCount&quot;&gt;setLoopCount&lt;/a&gt;() for infinite looping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d392fb571aa1de21d0522d8b1bb67e374ef55571" translate="yes" xml:space="preserve">
          <source>Used as a unique type token in combination with QSGMaterial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ae6fa6de496f4359028d786a9858d00c7747b9" translate="yes" xml:space="preserve">
          <source>Used as the alternate background color in item views with alternating row colors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a54a6c44525fccb1eb002ce8afd800bfef480f84" translate="yes" xml:space="preserve">
          <source>Used as the alternate background color in views with alternating row colors (see &lt;a href=&quot;qabstractitemview#alternatingRowColors-prop&quot;&gt;QAbstractItemView::setAlternatingRowColors&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd216cbfd76a79bfde5fe59a2c6df2935263417" translate="yes" xml:space="preserve">
          <source>Used as the background color for &lt;a href=&quot;qtooltip&quot;&gt;QToolTip&lt;/a&gt; and &lt;a href=&quot;qwhatsthis&quot;&gt;QWhatsThis&lt;/a&gt;. Tool tips use the Inactive color group of &lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt;, because tool tips are not active windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="667dc4726c31c692fe1cffe430496fc282ceb16a" translate="yes" xml:space="preserve">
          <source>Used as the background color for tooltips.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa7124d5948b968abdf786899e6c8aa9cc62deb" translate="yes" xml:space="preserve">
          <source>Used as the foreground color for &lt;a href=&quot;qtooltip&quot;&gt;QToolTip&lt;/a&gt; and &lt;a href=&quot;qwhatsthis&quot;&gt;QWhatsThis&lt;/a&gt;. Tool tips use the Inactive color group of &lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt;, because tool tips are not active windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee27c5639488af6ef8bc7eb2866cf35b684a1877" translate="yes" xml:space="preserve">
          <source>Used as the foreground color for tooltips.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5cf0a788a478f6b9c549cb963cc4b23fab7abe" translate="yes" xml:space="preserve">
          <source>Used as the placeholder color for various text input widgets. This enum value has been introduced in Qt 5.12</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3866fcaf9c43d06a66cc46d51e1c2bc912710a81" translate="yes" xml:space="preserve">
          <source>Used by &lt;a href=&quot;qgeoroutingmanager#supportedFeatureTypes&quot;&gt;QGeoRoutingManager::supportedFeatureTypes&lt;/a&gt;() to indicate that no features will be taken into account when planning the route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46bdbdc4396992b8ab5e267617bab3f3e341f212" translate="yes" xml:space="preserve">
          <source>Used by QAbstractSocketEngine only, The last operation attempted has not finished yet (still in progress in the background).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a298acb38103ef6d2b8fbfcace53042603d33c2d" translate="yes" xml:space="preserve">
          <source>Used by item views to indicate if a horizontal branch should be drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b148a5832ea7f9bc8df9e4f5a698ed8d703e9041" translate="yes" xml:space="preserve">
          <source>Used by item views to indicate if a vertical line needs to be drawn (for siblings).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4c1e29270845560541ff0efe41e377e4153c7f" translate="yes" xml:space="preserve">
          <source>Used by item views to indicate if the tree branch is open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4708230abd852f457f054e1fc88ed8b74c82dfda" translate="yes" xml:space="preserve">
          <source>Used by other components to obtain information about each item provided by the model. In many models, the combination of flags should include &lt;a href=&quot;qt#ItemFlag-enum&quot;&gt;Qt::ItemIsEnabled&lt;/a&gt; and &lt;a href=&quot;qt#ItemFlag-enum&quot;&gt;Qt::ItemIsSelectable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="935939862f3a96e36361b249540b49812cebc8a7" translate="yes" xml:space="preserve">
          <source>Used by the &lt;a href=&quot;qstatusbar#showMessage&quot;&gt;showMessage&lt;/a&gt;() and &lt;a href=&quot;qstatusbar#clearMessage&quot;&gt;clearMessage&lt;/a&gt;() functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4008277c7f506ed9652c3d0ae0889ef665b3d03c" translate="yes" xml:space="preserve">
          <source>Used by the system to set the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f1a0b7f2e3d628a2224b246ac50f4005d46e56" translate="yes" xml:space="preserve">
          <source>Used by visual elements to decide if the item should use antialiasing or not. In some cases items with antialiasing require more memory and are potentially slower to render (see &lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer#antialiasing&quot;&gt;Antialiasing&lt;/a&gt; for more details).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c19917514accf2324dea6613a33f5390017cd16" translate="yes" xml:space="preserve">
          <source>Used currently for the &lt;code&gt;WebXML&lt;/code&gt; output format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc605b310e60043eb4d9d6184a839cd99f2ccf4" translate="yes" xml:space="preserve">
          <source>Used for all rendered content in the scene graph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387286529d8b1d323043df1f09f24fad9a7c8c09" translate="yes" xml:space="preserve">
          <source>Used for pop-up widgets. Indicates that the most recent mouse press event should not be replayed when the pop-up widget closes. The flag is set by the widget's author and cleared by the Qt kernel every time the widget receives a new mouse event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c21e4d4cca75d95958e543471f9288a33abd118c" translate="yes" xml:space="preserve">
          <source>Used if &lt;a href=&quot;qabstract3dgraph#selectionMode-prop&quot;&gt;selectionMode&lt;/a&gt; has the &lt;code&gt;QAbstract3DGraph::SelectionItem&lt;/code&gt; flag set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3238cb3787f4cd42c13d5cfa779d878b89eb73a8" translate="yes" xml:space="preserve">
          <source>Used if &lt;a href=&quot;qabstract3dgraph#selectionMode-prop&quot;&gt;selectionMode&lt;/a&gt; has the &lt;code&gt;QAbstract3DGraph::SelectionRow&lt;/code&gt; or &lt;code&gt;QAbstract3DGraph::SelectionColumn&lt;/code&gt; flag set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95803e81385d8c10dcaa5c37e7bac9c7eaab1d5f" translate="yes" xml:space="preserve">
          <source>Used in &lt;a href=&quot;qsgnode#markDirty&quot;&gt;QSGNode::markDirty&lt;/a&gt;() to indicate how the scene graph has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf98dc8ed1d83486cc113b19ee7e160fbda44377" translate="yes" xml:space="preserve">
          <source>Used in combination with QBrush to specify a conical gradient brush</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a74f823fba351e67abf8295b99eabd55445b1a" translate="yes" xml:space="preserve">
          <source>Used in combination with QBrush to specify a linear gradient brush</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18bb13fbe50c199fa7b793c6c3407e3d787b1e87" translate="yes" xml:space="preserve">
          <source>Used in combination with QBrush to specify a radial gradient brush</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
